[
  {
    "owner": "ng-primitives",
    "repo": "ng-primitives",
    "content": "TITLE: Installing Angular Primitives with Angular CLI\nDESCRIPTION: Command to install Angular Primitives using the Angular CLI. This adds the package and necessary dependencies to your Angular project.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/get-started.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng add ng-primitives\n```\n\n----------------------------------------\n\nTITLE: Styling Angular Primitives with Tailwind CSS\nDESCRIPTION: Example of styling Angular Primitives components using Tailwind CSS utility classes with data-* attribute modifiers.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/styling.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button\n  class=\"data-[disabled]:cursor-not-allowed data-[selected]:bg-blue-500 data-[selected]:text-white data-[disabled]:opacity-50\"\n  ngpToggle\n>\n  Toggle\n</button>\n```\n\n----------------------------------------\n\nTITLE: Assembling Date Picker Directives in HTML Template\nDESCRIPTION: Example of how to use date picker directives in an Angular template to create a functional date picker component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/date-picker.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpDatePicker>\n  <div>\n    <button ngpDatePickerPreviousMonth>...</button>\n    <h2 ngpDatePickerLabel>...</h2>\n    <button ngpDatePickerNextMonth>...</button>\n  </div>\n  <table ngpDatePickerGrid>\n    <thead>\n      <tr>\n        <th scope=\"col\" abbr=\"Sunday\">S</th>\n        ...\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngpDatePickerRowRender>\n        <td *ngpDatePickerCellRender=\"let date\" ngpDatePickerCell>\n          <button ngpDatePickerDateButton>...</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Accordion Component Structure\nDESCRIPTION: Example of a multi-component accordion structure using Angular Primitives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<my-accordion>\n  <my-accordion-item label=\"Item 1\">\n    <p>Content for item 1</p>\n  </my-accordion-item>\n\n  <my-accordion-item label=\"Item 2\">\n    <p>Content for item 2</p>\n  </my-accordion-item>\n</my-accordion>\n```\n\n----------------------------------------\n\nTITLE: Using Select Primitive in HTML Template\nDESCRIPTION: Example of how to use the Select primitive in an HTML template. This demonstrates the basic structure of a select element enhanced with the NgpSelect directive.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/select.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<select ngpSelect>\n  <option value=\"24\">24 hours</option>\n  <option value=\"12\">12 hours</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Control in HTML Template\nDESCRIPTION: Demonstrates how to assemble pagination directives in an Angular template. Shows a complete example with first, previous, page buttons, next, and last navigation elements with proper accessibility attributes.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/pagination.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<nav\n  [(ngpPaginationPage)]=\"page\"\n  ngpPagination\n  ngpPaginationPageCount=\"5\"\n  aria-label=\"Pagination Navigation\"\n>\n  <ul>\n    <li>\n      <a ngpPaginationFirst aria-label=\"First Page\">\n        <ng-icon name=\"heroChevronDoubleLeft\" />\n      </a>\n    </li>\n\n    <li>\n      <a ngpPaginationPrevious aria-label=\"Previous Page\">\n        <ng-icon name=\"heroChevronLeft\" />\n      </a>\n    </li>\n\n    <li>\n      <a ngpPaginationButton ngpPaginationButtonPage=\"1\" aria-label=\"Page 1\">1</a>\n    </li>\n    <li>\n      <a ngpPaginationButton ngpPaginationButtonPage=\"2\" aria-label=\"Page 2\">2</a>\n    </li>\n    <li>\n      <a ngpPaginationButton ngpPaginationButtonPage=\"3\" aria-label=\"Page 3\">3</a>\n    </li>\n    <li>\n      <a ngpPaginationButton ngpPaginationButtonPage=\"4\" aria-label=\"Page 4\">4</a>\n    </li>\n    <li>\n      <a ngpPaginationButton ngpPaginationButtonPage=\"5\" aria-label=\"Page 5\">5</a>\n    </li>\n\n    <li>\n      <a ngpPaginationNext aria-label=\"Next Page\">\n        <ng-icon name=\"heroChevronRight\" />\n      </a>\n    </li>\n\n    <li>\n      <a ngpPaginationLast aria-label=\"Last Page\">\n        <ng-icon name=\"heroChevronDoubleRight\" />\n      </a>\n    </li>\n  </ul>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Basic Avatar Component Usage\nDESCRIPTION: Demonstrates how to use the Avatar directives in an Angular template. Shows the structure with the main avatar container, image, and fallback text.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/avatar.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span ngpAvatar>\n  <img ngpAvatarImage src=\"...\" alt=\"...\" />\n  <span ngpAvatarFallback>NG</span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Using NgpButton Directive in HTML Template\nDESCRIPTION: Demonstrates how to apply the NgpButton directive to a button element in an HTML template.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/button.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button ngpButton>Button</button>\n```\n\n----------------------------------------\n\nTITLE: Using Toast Component in HTML Template\nDESCRIPTION: Demonstrates how to use the Toast directives in an HTML template, including a button to trigger the toast and the toast template itself.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toast.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button (click)=\"toast.show()\">Show Toast</button>\n\n<ng-template ngpToast #toast=\"ngpToast\">\n  <div>...</div>\n</ng-template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Accordion with Provider\nDESCRIPTION: Example of using configuration providers to set default values for a directive.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n@Component({\n  selector: 'my-accordion',\n  template: `\n    <ng-content />\n  `,\n  hostDirectives: [{ directive: NgpAccordion, inputs: ['type'] }],\n  providers: [provideAccordionConfig({ type: 'multiple' })],\n})\nexport class MyAccordionComponent {}\n```\n\n----------------------------------------\n\nTITLE: Basic Toolbar Template Usage\nDESCRIPTION: Basic HTML template for implementing a toolbar using the ngpToolbar directive.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toolbar.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpToolbar>\n  <!-- Toolbar content -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Toggle Group Usage in HTML\nDESCRIPTION: Demonstrates how to construct a toggle group with three options in an HTML template using the NgpToggleGroup and NgpToggleGroupItem directives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle-group.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpToggleGroup>\n  <button ngpToggleGroupItem ngpToggleGroupItemValue=\"1\">Option 1</button>\n  <button ngpToggleGroupItem ngpToggleGroupItemValue=\"2\">Option 2</button>\n  <button ngpToggleGroupItem ngpToggleGroupItemValue=\"3\">Option 3</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Checkbox Usage\nDESCRIPTION: Basic HTML template example showing how to use the checkbox directives with two-way binding for the checked state.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/checkbox.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span ngpCheckbox [(ngpCheckboxChecked)]=\"checked\">\n  <ng-icon name=\"checkmark\" aria-hidden=\"true\" />\n</span>\n```\n\n----------------------------------------\n\nTITLE: Using Progress Directives in HTML Template\nDESCRIPTION: Example of how to use the Progress directives in an HTML template. It shows how to create a progress bar with a dynamic indicator.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/progress.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpProgress [ngpProgressValue]=\"percentage\">\n  <div ngpProgressIndicator [style.width.%]=\"percentage\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing ng-primitives via npm\nDESCRIPTION: Command to install the Angular Primitives library using npm package manager. This is the primary installation method for adding the library to an Angular project.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install ng-primitives\n```\n\n----------------------------------------\n\nTITLE: Using Form Field Directives in HTML Template\nDESCRIPTION: Demonstrates the basic usage of form field directives to create a form field with label, input, description and error message.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/form-field.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpFormField>\n  <label ngpLabel>Label</label>\n  <!-- Typically ngpFormControl would not be used directly, but a primitive like ngpInput would be used instead -->\n  <input ngpFormControl />\n  <p ngpDescription>Description</p>\n  <p ngpError ngpErrorValidator=\"required\">Error</p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Focus Visible Directive in HTML Template\nDESCRIPTION: Demonstrates how to use the NgpFocusVisible directive in an Angular template to detect keyboard focus events.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/focus-visible.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div (ngpFocusVisible)=\"onFocusVisible($event)\"></div>\n```\n\n----------------------------------------\n\nTITLE: Basic Toggle Usage - HTML Template\nDESCRIPTION: Example of using toggle directive in an Angular template with two-way binding for selected state\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button ngpToggle [(ngpToggleSelected)]=\"selected\">Toggle</button>\n```\n\n----------------------------------------\n\nTITLE: Using NgpTextarea Directive in HTML Template\nDESCRIPTION: This snippet demonstrates how to use the NgpTextarea directive in an HTML template to enhance a textarea element.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/textarea.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<textarea ngpTextarea></textarea>\n```\n\n----------------------------------------\n\nTITLE: Using Move Directives in HTML Template\nDESCRIPTION: This example demonstrates how to use the Move directives in an Angular template. It applies the ngpMove directive to a div element and binds it to an onMove event handler.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/move.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div (ngpMove)=\"onMove($event)\"></div>\n```\n\n----------------------------------------\n\nTITLE: Styling Angular Primitives with SCSS\nDESCRIPTION: Example of styling Angular Primitives components using SCSS selectors with data-* attributes to handle component states like selected and disabled.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/styling.md#2025-04-23_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\nbutton[data-selected] {\n  background-color: blue;\n  color: white;\n}\n\nbutton[data-disabled] {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Host Directive Implementation\nDESCRIPTION: Shows how to enhance a component using NgpButton as a host directive with basic configuration.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component } from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\n\n@Component({\n  selector: 'button[my-button]',\n  template: `\n    <ng-content />\n  `,\n  hostDirectives: [NgpButton],\n})\nexport class MyButtonComponent {\n  // You can add any additional inputs or outputs you want here\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Separator Usage in HTML Template\nDESCRIPTION: Example of how to use the NgpSeparator directive in an Angular template to create a separator element.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/separator.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpSeparator></div>\n```\n\n----------------------------------------\n\nTITLE: Using Dialog Component in HTML Template\nDESCRIPTION: Example of how to use the Dialog primitives in an Angular template, including trigger button and dialog content.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/dialog.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button [ngpDialogTrigger]=\"dialog\" ngpButton>Launch Dialog</button>\n\n<ng-template #dialog let-close=\"close\">\n  <div ngpDialogOverlay>\n    <div ngpDialog>\n      <h1 ngpDialogTitle>Publish this article?</h1>\n      <p ngpDialogDescription>\n        Are you sure you want to publish this article? This action is irreversible.\n      </p>\n      <div class=\"dialog-footer\">\n        <button (click)=\"close()\" ngpButton>Cancel</button>\n        <button (click)=\"close()\" ngpButton>Confirm</button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n```\n\n----------------------------------------\n\nTITLE: Importing Date Picker Primitives in TypeScript\nDESCRIPTION: Import statement for various date picker primitives from the ng-primitives/date-picker package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/date-picker.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  NgpDatePicker,\n  NgpDatePickerLabel,\n  NgpDatePickerNextMonth,\n  NgpDatePickerPreviousMonth,\n  NgpDatePickerGrid,\n  NgpDatePickerCell,\n  NgpDatePickerRowRender,\n  NgpDatePickerCellRender,\n  NgpDatePickerDateButton,\n} from 'ng-primitives/date-picker';\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Popover Defaults\nDESCRIPTION: Shows how to configure default options for all popovers in an application using the providePopoverConfig function in the app bootstrap process.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/popover.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { providePopoverConfig } from 'ng-primitives/popover';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    providePopoverConfig({\n      offset: 4,\n      placement: 'top',\n      showDelay: 0,\n      hideDelay: 0,\n      flip: true,\n      container: document.body,\n      closeOnOutsideClick: true,\n      scrollBehavior: 'reposition',\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Using Accordion Component in HTML Template\nDESCRIPTION: Example of how to use the Accordion directives in an HTML template to create an accordion with two items.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/accordion.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpAccordion ngpAccordionType=\"single\" ngpAccordionCollapsible>\n  <div ngpAccordionItem ngpAccordionItemValue=\"item-1\">\n    <button ngpAccordionTrigger ngpButton>Would you like to learn more?</button>\n    <div ngpAccordionContent>If you would like to learn more please reach out to us on GitHub.</div>\n  </div>\n\n  <div ngpAccordionItem ngpAccordionItemValue=\"item-2\">\n    <button ngpAccordionTrigger ngpButton>Can I use this in my project?</button>\n    <div ngpAccordionContent>Yes, this is open source and you can use it in your project.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Avatar Components from ng-primitives\nDESCRIPTION: Shows how to import the necessary Avatar primitives from the ng-primitives library. Includes NgpAvatar, NgpAvatarImage, and NgpAvatarFallback directives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/avatar.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpAvatar, NgpAvatarImage, NgpAvatarFallback } from 'ng-primitives/avatar';\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Toast Options in TypeScript\nDESCRIPTION: Demonstrates how to configure default options for all toasts in the application using the provideToastConfig function in the providers array.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toast.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideToastConfig } from 'ng-primitives/toast';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideToastConfig({\n      duration: 5000,\n      position: 'center',\n      gravity: 'top',\n      stopOnHover: false,\n      ariaLive: 'assertive',\n      gap: 16,\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Menu Implementation in Angular Template\nDESCRIPTION: Demonstrates the basic structure of implementing a menu using ng-primitives directives. Shows how to create a button trigger and menu template with multiple menu items.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/menu.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button [ngpMenuTrigger]=\"menu\" ngpButton></button>\n\n<ng-template #menu>\n  <div ngpMenu>\n    <div ngpMenuItem>Item 1</div>\n    <div ngpMenuItem>Item 2</div>\n    <div ngpMenuItem>Item 3</div>\n  </div>\n</ng-template>\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabs Component in HTML\nDESCRIPTION: This example demonstrates how to structure the Tabs component in an HTML template using the imported directives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tabs.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpTabset>\n  <div ngpTabList>\n    <button ngpTabButton ngpTabButtonValue=\"tab1\">Tab 1</button>\n    <button ngpTabButton ngpTabButtonValue=\"tab2\">Tab 2</button>\n    <button ngpTabButton ngpTabButtonValue=\"tab3\">Tab 3</button>\n  </div>\n  <div ngpTabPanel ngpTabPanelValue=\"tab1\">Tab 1 content</div>\n  <div ngpTabPanel ngpTabPanelValue=\"tab2\">Tab 2 content</div>\n  <div ngpTabPanel ngpTabPanelValue=\"tab3\">Tab 3 content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Toast Component in TypeScript\nDESCRIPTION: Shows how to import the Toast primitives from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toast.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpToast } from 'ng-primitives/toast';\n```\n\n----------------------------------------\n\nTITLE: Using Date Adapter in Angular Component\nDESCRIPTION: Shows how to inject and use a date adapter within an Angular component using the Luxon DateTime type.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/date-adapter.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component } from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { injectDateAdapter } from 'ng-primitives/date-time';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    ...\n  `,\n})\nexport class AppComponent {\n  private readonly dateAdapter = injectDateAdapter<DateTime>();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Radio Components in HTML Template\nDESCRIPTION: Demonstrates how to assemble radio directives in an Angular template to create a radio group with multiple options.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/radio.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpRadioGroup [(ngpRadioGroupValue)]=\"value\">\n  <button ngpRadioItem ngpRadioItemValue=\"Option 1\">\n    <ng-icon ngpRadioIndicator name=\"dot\" />\n    Option 1\n  </button>\n\n  <button ngpRadioItem ngpRadioItemValue=\"Option 2\">\n    <ng-icon ngpRadioIndicator name=\"dot\" />\n    Option 2\n  </button>\n\n  <button ngpRadioItem ngpRadioItemValue=\"Option 3\">\n    <ng-icon ngpRadioIndicator name=\"dot\" />\n    Option 3\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Primitives in TypeScript\nDESCRIPTION: Shows how to import the Radio component primitives from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/radio.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpRadioGroup, NgpRadioItem, NgpRadioIndicator } from 'ng-primitives/radio';\n```\n\n----------------------------------------\n\nTITLE: Configuring Date Adapter Provider in Angular\nDESCRIPTION: Demonstrates how to provide a date adapter implementation to Angular's dependency injection system at the application bootstrap level.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/date-adapter.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbootstrapApplication(AppComponent, {\n  providers: [provideDateAdapter(NgpLuxonDateAdapter)],\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Slider Implementation in HTML\nDESCRIPTION: Demonstrates the basic structure of a slider implementation using the ng-primitives directives. This structure includes the slider container, track, range, and thumb components.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/slider.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpSlider>\n  <div ngpSliderTrack>\n    <div ngpSliderRange></div>\n  </div>\n  <div ngpSliderThumb></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Listbox HTML Implementation\nDESCRIPTION: Demonstrates the basic structure of a listbox using the ng-primitives directives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/listbox.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpListbox>\n  <div ngpListboxOption ngpListboxOptionValue=\"1\">Option 1</div>\n  <div ngpListboxOption ngpListboxOptionValue=\"2\">Option 2</div>\n  <div ngpListboxOption ngpListboxOptionValue=\"3\">Option 3</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Pagination Primitives in TypeScript\nDESCRIPTION: Shows how to import the Pagination primitives from the ng-primitives/pagination package. Includes all available pagination directives that can be used to build a pagination control.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/pagination.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  NgpPagination,\n  NgpPaginationButton,\n  NgpPaginationFirst,\n  NgpPaginationNext,\n  NgpPaginationPrevious,\n  NgpPaginationLast,\n} from 'ng-primitives/pagination';\n```\n\n----------------------------------------\n\nTITLE: Using NgpFocus Directive in Angular Templates\nDESCRIPTION: Example of implementing the NgpFocus directive in an Angular template to handle focus events. The directive applies the 'data-focus' attribute when the element receives focus.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/focus.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div (ngpFocus)=\"onFocusChange($event)\"></div>\n```\n\n----------------------------------------\n\nTITLE: Using Tooltip Component in HTML Template\nDESCRIPTION: Demonstrates how to use the tooltip directives in an Angular template, including the trigger button and the tooltip content template.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tooltip.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button [ngpTooltipTrigger]=\"tooltip\" ngpButton>Hover me</button>\n\n<ng-template #tooltip>\n  <div ngpTooltip>Tooltip content</div>\n</ng-template>\n```\n\n----------------------------------------\n\nTITLE: Importing NgpInput from ng-primitives\nDESCRIPTION: Import statement for the NgpInput directive from the ng-primitives/input package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/input.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpInput } from 'ng-primitives/input';\n```\n\n----------------------------------------\n\nTITLE: Generating Form Field Component Using Angular CLI\nDESCRIPTION: CLI command to generate a reusable form-field component using ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/form-field.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive form-field\n```\n\n----------------------------------------\n\nTITLE: Basic Switch Usage in HTML Template\nDESCRIPTION: Demonstrates how to assemble the switch directives in an HTML template with two-way data binding for the checked state.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/switch.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button ngpSwitch [(ngpSwitchChecked)]=\"checked\">\n  <span ngpSwitchThumb></span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Assembling Search Directives in HTML Template\nDESCRIPTION: This snippet demonstrates how to use the search directives in an HTML template to create a search input with a clear button.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/search.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpFormField>\n  <label ngpLabel>Label</label>\n  <div ngpSearch>\n    <input ngpInput type=\"search\" />\n    <button ngpSearchClear ngpButton aria-label=\"Clear search\">Clear</button>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing NgpFileUpload in TypeScript\nDESCRIPTION: Shows how to import the FileUpload primitive from the ng-primitives/file-upload package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/file-upload.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpFileUpload } from 'ng-primitives/file-upload';\n```\n\n----------------------------------------\n\nTITLE: Generating Toggle Component - Angular CLI\nDESCRIPTION: Angular CLI command to generate a reusable toggle component using ng-primitives schematics with customizable options for path, prefix, and naming conventions\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive toggle\n```\n\n----------------------------------------\n\nTITLE: Basic Popover Usage with Trigger\nDESCRIPTION: Demonstrates the basic usage of popover directives in an Angular template, showing how to create a button trigger and popover content.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/popover.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button [ngpPopoverTrigger]=\"popover\">Click me</button>\n\n<ng-template #popover>\n  <div ngpPopover>Popover content</div>\n</ng-template>\n```\n\n----------------------------------------\n\nTITLE: Importing and Using NgIcon Component in Angular\nDESCRIPTION: This snippet demonstrates how to import the NgIcon component, register specific icons using provideIcons, and use them in an Angular component. It shows the setup for using icons from different icon sets like Feather Icons and Heroicons.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/icons.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport { featherAirplay } from '@ng-icons/feather-icons';\nimport { heroUsers } from '@ng-icons/heroicons/outline';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <ng-icon name=\"featherAirplay\" />\n    <ng-icon name=\"heroUsers\" />\n  `,\n  imports: [NgIcon],\n  viewProviders: [provideIcons({ featherAirplay, heroUsers })],\n})\nexport class AppComponent {}\n```\n\n----------------------------------------\n\nTITLE: Generating Switch Component with Angular CLI\nDESCRIPTION: Command to generate a reusable switch component using the Angular CLI with the ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/switch.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive switch\n```\n\n----------------------------------------\n\nTITLE: Implementing Roving Focus in Angular Templates\nDESCRIPTION: Demonstrates how to assemble and use the roving focus directives in an Angular template. The example shows a group with three focusable button items.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/roving-focus.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpRovingFocusGroup>\n  <button ngpRovingFocusItem>Item 1</button>\n  <button ngpRovingFocusItem>Item 2</button>\n  <button ngpRovingFocusItem>Item 3</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using NgpFileUpload Directive in HTML Template\nDESCRIPTION: Demonstrates how to use the NgpFileUpload directive in an HTML template with event handlers for file selection and cancellation.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/file-upload.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button\n  ngpFileUpload\n  (ngpFileUploadSelected)=\"onFilesSelected($event)\"\n  (ngpFileUploadCanceled)=\"onCancel()\"\n></button>\n```\n\n----------------------------------------\n\nTITLE: Importing Roving Focus Primitives in Angular\nDESCRIPTION: Shows how to import the NgpRovingFocusGroup and NgpRovingFocusItem directives from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/roving-focus.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpRovingFocusGroup, NgpRovingFocusItem } from 'ng-primitives/roving-focus';\n```\n\n----------------------------------------\n\nTITLE: Generating Toolbar Component with Angular CLI\nDESCRIPTION: Bash command for generating a reusable toolbar component using Angular CLI schematics with available options for path, prefix, component suffix, file suffix, and example styles.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toolbar.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive toolbar\n```\n\n----------------------------------------\n\nTITLE: Basic Input Usage with NgpInput Directive\nDESCRIPTION: HTML template example showing how to apply the ngpInput directive to a standard input element.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/input.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<input ngpInput type=\"text\" />\n```\n\n----------------------------------------\n\nTITLE: Using NgpSwitch Directive in Template\nDESCRIPTION: Example showing how to apply the ngpSwitch directive directly in a template with checked state binding and change event handling.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button\n  ngpSwitch\n  [ngpSwitchChecked]=\"isChecked()\"\n  (ngpSwitchCheckedChange)=\"onSwitchChange($event)\"\n>\n  <span ngpSwitchThumb></span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Generating Toggle Group Component with Angular CLI\nDESCRIPTION: Shows the command to generate a reusable toggle group component using the Angular CLI schematics provided by ng-primitives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle-group.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive toggle-group\n```\n\n----------------------------------------\n\nTITLE: Using NgpHover Directives in Angular Templates\nDESCRIPTION: Demonstrates how to use the NgpHover directive in an Angular template to handle hover events. The example shows all available event outputs: ngpHover for state changes, ngpHoverStart for hover beginning, and ngpHoverEnd for hover ending.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/hover.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div\n  (ngpHover)=\"onHoverChange($event)\"\n  (ngpHoverStart)=\"onHoverStart()\"\n  (ngpHoverEnd)=\"onHoverEnd()\"\n></div>\n```\n\n----------------------------------------\n\nTITLE: Using Focus Trap Directive in Template\nDESCRIPTION: Demonstrates how to implement the focus trap directive in an HTML template by adding the ngpFocusTrap attribute to a container element.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/focus-trap.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpFocusTrap></div>\n```\n\n----------------------------------------\n\nTITLE: Importing NgpFocus from ng-primitives\nDESCRIPTION: Import statement for the Focus primitive from the ng-primitives/interactions package, which provides normalized focus event handling across different browsers and devices.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/focus.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpFocus } from 'ng-primitives/interactions';\n```\n\n----------------------------------------\n\nTITLE: Generating Textarea Component with Angular CLI Schematics\nDESCRIPTION: This command uses the Angular CLI with ng-primitives schematics to generate a reusable textarea component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/textarea.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive textarea\n```\n\n----------------------------------------\n\nTITLE: Using NgpPress directives in an Angular template\nDESCRIPTION: Shows how to use the Press directives in an Angular template to handle press events including start, end, and change events.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/press.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div\n  ngpPress\n  (ngpPressStart)=\"onPressStart()\"\n  (ngpPressEnd)=\"onPressEnd()\"\n  (ngpPressChange)=\"onPressChange($event)\"\n></div>\n```\n\n----------------------------------------\n\nTITLE: Importing NgpVisuallyHidden from ng-primitives/a11y\nDESCRIPTION: Code snippet showing how to import the NgpVisuallyHidden directive from the ng-primitives/a11y package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/visually-hidden.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpVisuallyHidden } from 'ng-primitives/a11y';\n```\n\n----------------------------------------\n\nTITLE: Generating Separator Component with Angular CLI\nDESCRIPTION: Command to generate a reusable separator component using Angular CLI with the ng-primitives schematic.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/separator.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive separator\n```\n\n----------------------------------------\n\nTITLE: Configuring Avatar Component Globally\nDESCRIPTION: Demonstrates how to use the provideAvatarConfig function to configure default options for all avatars in the application, such as setting a delay before showing fallbacks.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/avatar.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideAvatarConfig } from 'ng-primitives/avatar';\n\nbootstrapApplication(AppComponent, {\n  providers: [provideAvatarConfig({ delay: 1000 })],\n});\n```\n\n----------------------------------------\n\nTITLE: Using NgpResize Directive in HTML Template\nDESCRIPTION: This example demonstrates how to use the NgpResize directive in an Angular template. The directive is applied to a div element, and it triggers the onResize method when the element is resized, passing the resize event as a parameter.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/resize.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div (ngpResize)=\"onResize($event)\"></div>\n```\n\n----------------------------------------\n\nTITLE: Importing NgpAutofill from ng-primitives\nDESCRIPTION: Shows how to import the NgpAutofill directive from the ng-primitives/autofill package. This import is required before using the autofill directive in your Angular components.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/autofill.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpAutofill } from 'ng-primitives/autofill';\n```\n\n----------------------------------------\n\nTITLE: Generating Input Component with Angular CLI\nDESCRIPTION: Command to generate a reusable input component using ng-primitives schematics. Includes options for customizing the generated component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/input.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive input\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Tooltip Options in TypeScript\nDESCRIPTION: Shows how to use the provideTooltipConfig function to set default options for all tooltips in the application, including offset, placement, delays, and container.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tooltip.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideTooltipConfig } from 'ng-primitives/tooltip';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideTooltipConfig({\n      offset: 4,\n      placement: 'top',\n      showDelay: 0,\n      hideDelay: 0,\n      flip: true,\n      container: document.body,\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Separator Options\nDESCRIPTION: Example of how to provide global configuration for separator components using the provideSeparatorConfig function in the application bootstrap.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/separator.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideSeparatorConfig } from 'ng-primitives/tabs';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideSeparatorConfig({\n      orientation: 'horizontal',\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Generating a Checkbox Component with Angular CLI\nDESCRIPTION: CLI command to generate a reusable checkbox component using ng-primitives schematics with available configuration options.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/checkbox.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive checkbox\n```\n\n----------------------------------------\n\nTITLE: NgpDateAdapter Interface Definition\nDESCRIPTION: Defines the complete interface that all date adapters must implement, including methods for date manipulation, comparison, and property access.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/date-adapter.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NgpDateAdapter<T> {\n  /**\n   * Create a new date time object.\n   */\n  create(values: NgpDateUnits): T;\n\n  /**\n   * Create a new date with the current date and time.\n   */\n  now(): T;\n\n  /**\n   * Set the year of the date time object based on a duration.\n   */\n  set(date: T, values: NgpDateUnits): T;\n\n  /**\n   * Add a duration to the date time object.\n   */\n  add(date: T, duration: NgpDuration): T;\n\n  /**\n   * Subtract a duration from the date time object.\n   */\n  subtract(date: T, duration: NgpDuration): T;\n\n  /**\n   * Compare two date time objects.\n   */\n  compare(a: T, b: T): number;\n\n  /**\n   * Determine if two date time objects are equal.\n   */\n  isEqual(a: T, b: T): boolean;\n\n  /**\n   * Determine if a date time object is before another.\n   */\n  isBefore(a: T, b: T): boolean;\n\n  /**\n   * Determine if a date time object is after another.\n   */\n  isAfter(a: T, b: T): boolean;\n\n  /**\n   * Determine if two date objects are on the same day.\n   */\n  isSameDay(a: T, b: T): boolean;\n\n  /**\n   * Determine if two date objects are on the same month.\n   */\n  isSameMonth(a: T, b: T): boolean;\n\n  /**\n   * Determine if two date objects are on the same year.\n   */\n  isSameYear(a: T, b: T): boolean;\n\n  /**\n   * Get the year.\n   */\n  getYear(date: T): number;\n\n  /**\n   * Get the month.\n   */\n  getMonth(date: T): number;\n\n  /**\n   * Get the date.\n   */\n  getDate(date: T): number;\n\n  /**\n   * Get the day.\n   */\n  getDay(date: T): number;\n\n  /**\n   * Get the hours.\n   */\n  getHours(date: T): number;\n\n  /**\n   * Get the minutes.\n   */\n  getMinutes(date: T): number;\n\n  /**\n   * Get the seconds.\n   */\n  getSeconds(date: T): number;\n\n  /**\n   * Get the milliseconds.\n   */\n  getMilliseconds(date: T): number;\n\n  /**\n   * Get the first day of the month.\n   */\n  startOfMonth(date: T): T;\n\n  /**\n   * Get the last day of the month.\n   */\n  endOfMonth(date: T): T;\n\n  /**\n   * Get the start of the day.\n   */\n  startOfDay(date: T): T;\n\n  /**\n   * Get the end of the day.\n   */\n  endOfDay(date: T): T;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Tabs Options in TypeScript\nDESCRIPTION: This TypeScript code demonstrates how to configure global default options for all tabs in an Angular application using the provideTabsConfig function.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tabs.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideTabsConfig } from 'ng-primitives/tabs';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideTabsConfig({\n      orientation: 'horizontal',\n      activateOnFocus: false,\n      wrap: false,\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: State Hoisting Implementation\nDESCRIPTION: Demonstrates how to implement state hoisting for sharing directive state between components.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component } from '@angular/core';\nimport { NgpAccordion, provideAccordionState } from 'ng-primitives/accordion';\n\n@Component({\n  selector: 'my-accordion',\n  template: `\n    <div ngpAccordion>\n      <ng-content />\n    </div>\n  `,\n  providers: [provideAccordionState()],\n})\nexport class MyAccordionComponent {}\n```\n\n----------------------------------------\n\nTITLE: Importing the Resize Module from ng-primitives\nDESCRIPTION: Shows how to import the resize functionality as a secondary entry point from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/resize/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/resize\n```\n\n----------------------------------------\n\nTITLE: Configuring Toggle Group Defaults with Provider\nDESCRIPTION: Demonstrates how to configure default options for all toggle groups in an application using the provideToggleGroupConfig function in the app bootstrap process.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle-group.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideToggleGroupConfig } from 'ng-primitives/toggle-group';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideToggleGroupConfig({\n      orientation: 'vertical',\n      type: 'multiple',\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Host Directive with Input Exposure\nDESCRIPTION: Demonstrates exposing specific inputs from a host directive to the component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component, Input } from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\n\n@Component({\n  selector: 'button[my-button]',\n  template: `\n    <ng-content />\n  `,\n  hostDirectives: [{ directive: NgpButton, inputs: ['disabled'] }],\n})\nexport class MyButtonComponent {}\n```\n\n----------------------------------------\n\nTITLE: Importing Progress Component from ng-primitives\nDESCRIPTION: Instructions on how to import the progress component from the ng-primitives library as a secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/progress/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/progress\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Accordion Options in TypeScript\nDESCRIPTION: Example of how to configure default options for all accordions in the application using provideAccordionConfig function.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/accordion.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { provideAccordionConfig } from 'ng-primitives/accordion';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideAccordionConfig({\n      type: 'multiple',\n      collapsible: true,\n      orientation: 'horizontal',\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Importing A11y Module in Angular\nDESCRIPTION: Demonstrates how to import the a11y module from ng-primitives in an Angular application. This module likely contains accessibility-related directives, services, or components.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/a11y/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/a11y\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/a11y`.\n```\n\n----------------------------------------\n\nTITLE: Importing Separator Component from ng-primitives\nDESCRIPTION: Shows how to import the separator component from the ng-primitives library using the secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/separator/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/separator\n```\n\n----------------------------------------\n\nTITLE: Importing Accordion Components in TypeScript\nDESCRIPTION: Import statement for the Accordion primitives from the ng-primitives/accordion package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/accordion.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  NgpAccordion,\n  NgpAccordionItem,\n  NgpAccordionTrigger,\n  NgpAccordionContent,\n} from 'ng-primitives/accordion';\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Primitives via NPM\nDESCRIPTION: Command to install the Angular Primitives library using npm package manager. This is the recommended way to add the library to your Angular project.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install ng-primitives\n```\n\n----------------------------------------\n\nTITLE: Importing the Select Component from ng-primitives\nDESCRIPTION: This code snippet shows how to import the select component from the ng-primitives library. The select component is available as a secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/select/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/select\n```\n\n----------------------------------------\n\nTITLE: Importing the Slider Module in Angular\nDESCRIPTION: Example showing how to import the slider component from ng-primitives as a secondary entry point, which allows for more granular imports and better tree-shaking.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/slider/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/slider\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/slider`.\n```\n\n----------------------------------------\n\nTITLE: Importing NgpButton Directive in TypeScript\nDESCRIPTION: Shows how to import the Button primitives from the ng-primitives/button package in a TypeScript file.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpButton } from 'ng-primitives/button';\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Components from ng-primitives in TypeScript\nDESCRIPTION: This snippet shows how to import the necessary Tabs components from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tabs.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpTabset, NgpTabList, NgpTabButton, NgpTabPanel } from 'ng-primitives/tabs';\n```\n\n----------------------------------------\n\nTITLE: Importing the Avatar Component in Angular\nDESCRIPTION: Shows how to import the avatar component from ng-primitives as a secondary entry point. This pattern allows for more granular imports, potentially reducing bundle size.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/avatar/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/avatar\n```\n\n----------------------------------------\n\nTITLE: Importing Textarea Module\nDESCRIPTION: Shows how to import the textarea module from ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/textarea/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ... } from 'ng-primitives/textarea'\n```\n\n----------------------------------------\n\nTITLE: Importing Form Field Primitives in TypeScript\nDESCRIPTION: Shows how to import the necessary form field directives from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/form-field.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  NgpFormField,\n  NgpLabel,\n  NgpDescription,\n  NgpError,\n  NgpFormControl,\n} from 'ng-primitives/form-field';\n```\n\n----------------------------------------\n\nTITLE: Importing Menu Primitives in TypeScript\nDESCRIPTION: Shows how to import the necessary menu directives from the ng-primitives/menu package. Includes NgpMenu, NgpMenuItem, NgpMenuTrigger, and NgpSubmenuTrigger components.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/menu.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpMenu, NgpMenuItem, NgpMenuTrigger, NgpSubmenuTrigger } from 'ng-primitives/menu';\n```\n\n----------------------------------------\n\nTITLE: Importing the Checkbox Module from ng-primitives\nDESCRIPTION: Demonstrates how to import the checkbox module from the ng-primitives library. This is a secondary entry point that provides checkbox functionality.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/checkbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/checkbox\n```\n\n----------------------------------------\n\nTITLE: Importing Roving Focus Module Path\nDESCRIPTION: Shows the import path for accessing the roving-focus functionality from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/roving-focus/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/roving-focus\n```\n\n----------------------------------------\n\nTITLE: Importing Select Primitive in TypeScript\nDESCRIPTION: Instructions for importing the Select primitive from the ng-primitives library. This import is necessary to use the Select functionality in your Angular application.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/select.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpSelect } from 'ng-primitives/select';\n```\n\n----------------------------------------\n\nTITLE: Importing Listbox Component in TypeScript\nDESCRIPTION: Shows how to import the NgpListbox component from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/listbox.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpListbox } from 'ng-primitives/listbox';\n```\n\n----------------------------------------\n\nTITLE: Installing Dialog Component from ng-primitives\nDESCRIPTION: Example showing how to import the dialog component from ng-primitives library as a secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/dialog/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ... } from 'ng-primitives/dialog';\n```\n\n----------------------------------------\n\nTITLE: Importing State Management Module Path\nDESCRIPTION: Demonstrates the import path for accessing the state management functionality from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/state/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/state\n```\n\n----------------------------------------\n\nTITLE: Importing NgpHover from ng-primitives\nDESCRIPTION: Shows how to import the Hover primitive from the ng-primitives/interactions package for use in Angular applications.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/hover.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpHover } from 'ng-primitives/interactions';\n```\n\n----------------------------------------\n\nTITLE: Importing NgpToolbar from ng-primitives\nDESCRIPTION: Code for importing the Toolbar primitives from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toolbar.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpToolbar } from 'ng-primitives/toolbar';\n```\n\n----------------------------------------\n\nTITLE: Importing ng-primitives/input Module\nDESCRIPTION: Instructions for importing the input module from the ng-primitives package. This code demonstrates the proper import path for accessing the input functionality.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/input/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/input\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component from ng-primitives\nDESCRIPTION: Shows how to import the button component from the ng-primitives package using its secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/button/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/button\n```\n\n----------------------------------------\n\nTITLE: Importing Search Primitives in TypeScript\nDESCRIPTION: This snippet shows how to import the Search primitives from the ng-primitives/search module.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/search.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpSearch, NgpSearchClear } from 'ng-primitives/search';\n```\n\n----------------------------------------\n\nTITLE: Importing Switch Primitives in TypeScript\nDESCRIPTION: Shows how to import the NgpSwitch and NgpSwitchThumb directives from the ng-primitives/switch package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/switch.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpSwitch, NgpSwitchThumb } from 'ng-primitives/switch';\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Component from ng-primitives\nDESCRIPTION: Example of how to import the radio component from ng-primitives using its secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/radio/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/radio\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/radio`.\n```\n\n----------------------------------------\n\nTITLE: Importing Menu Component from ng-primitives\nDESCRIPTION: Demonstrates how to import the menu functionality from the ng-primitives package using a secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/menu/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ng-primitives/menu\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/menu`.\n```\n\n----------------------------------------\n\nTITLE: Importing Textarea Primitive from ng-primitives in TypeScript\nDESCRIPTION: This snippet shows how to import the Textarea primitive from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/textarea.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpTextarea } from 'ng-primitives/textarea';\n```\n\n----------------------------------------\n\nTITLE: Importing Popover from ng-primitives\nDESCRIPTION: Shows how to import the NgpPopover component from the ng-primitives/popover package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/popover.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpPopover } from 'ng-primitives/popover';\n```\n\n----------------------------------------\n\nTITLE: Importing Search Module from ng-primitives\nDESCRIPTION: This snippet demonstrates how to import the search module from the ng-primitives library. It's a secondary entry point, allowing developers to import only the search-related functionality without pulling in the entire library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/search/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ng-primitives/search\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/search`.\n```\n\n----------------------------------------\n\nTITLE: Import Path Example for Angular Form Field Module\nDESCRIPTION: Demonstrates the import path for accessing the form-field module from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/form-field/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/form-field\n```\n\n----------------------------------------\n\nTITLE: Importing Move Primitives from ng-primitives in TypeScript\nDESCRIPTION: This snippet shows how to import the Move primitives from the ng-primitives/interactions package. It's a prerequisite for using the Move functionality in your Angular application.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/move.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpMove } from 'ng-primitives/interactions';\n```\n\n----------------------------------------\n\nTITLE: Importing Tooltip Component in TypeScript\nDESCRIPTION: Shows how to import the Tooltip primitives from the ng-primitives/tooltip package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tooltip.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpTooltip } from 'ng-primitives/tooltip';\n```\n\n----------------------------------------\n\nTITLE: Importing Toast Module from ng-primitives\nDESCRIPTION: Shows how to import the toast functionality from the ng-primitives library as a secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/toast/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/toast\n```\n\n----------------------------------------\n\nTITLE: Importing Tooltip Module Path\nDESCRIPTION: Demonstrates the import path for accessing the tooltip functionality from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/tooltip/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nng-primitives/tooltip\n```\n\n----------------------------------------\n\nTITLE: Importing NgpResize Directive in TypeScript\nDESCRIPTION: This snippet shows how to import the NgpResize directive from the ng-primitives library. It's necessary to include this import statement before using the resize functionality in your Angular component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/resize.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpResize } from 'ng-primitives/resize';\n```\n\n----------------------------------------\n\nTITLE: Importing Toggle Module - TypeScript\nDESCRIPTION: Import statement for including the NgpToggle directive from ng-primitives library\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpToggle } from 'ng-primitives/toggle';\n```\n\n----------------------------------------\n\nTITLE: Importing Toggle Group Module from ng-primitives\nDESCRIPTION: Shows how to import the toggle-group module from the ng-primitives library in an Angular application. This is the secondary entry point that can be used directly.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/toggle-group/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/toggle-group\n```\n\n----------------------------------------\n\nTITLE: Importing ng-primitives Common Module\nDESCRIPTION: Shows how to import the common module from the ng-primitives library. This is a secondary entry point that can be accessed through the specified import path.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/common/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ... } from 'ng-primitives/common';\n```\n\n----------------------------------------\n\nTITLE: Importing Angular Pagination Module in TypeScript\nDESCRIPTION: Example of how to import the pagination functionality from the ng-primitives library using the secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/pagination/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/pagination\n```\n\n----------------------------------------\n\nTITLE: Importing NgpPress primitive from ng-primitives\nDESCRIPTION: Demonstrates how to import the Press primitive from the ng-primitives interactions package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/press.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpPress } from 'ng-primitives/interactions';\n```\n\n----------------------------------------\n\nTITLE: Importing focus-trap from ng-primitives\nDESCRIPTION: Shows how to import the focus-trap functionality from the ng-primitives package through its secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/focus-trap/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/focus-trap\n```\n\n----------------------------------------\n\nTITLE: Importing Popover Module Path\nDESCRIPTION: Example import path for accessing the popover functionality from the ng-primitives package\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/popover/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/popover\n```\n\n----------------------------------------\n\nTITLE: Importing Toolbar Component from ng-primitives\nDESCRIPTION: Demonstrates how to import the toolbar component from the ng-primitives library using its secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/toolbar/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ... } from \"ng-primitives/toolbar\";\n```\n\n----------------------------------------\n\nTITLE: Importing Focus Trap from ng-primitives\nDESCRIPTION: Shows how to import the FocusTrap directive from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/focus-trap.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpFocusTrap } from 'ng-primitives/focus-trap';\n```\n\n----------------------------------------\n\nTITLE: Importing Autofill Module in Angular\nDESCRIPTION: Demonstrates how to import the autofill module from ng-primitives. This secondary entry point allows developers to use autofill functionality in their Angular applications.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/autofill/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ng-primitives/autofill\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/autofill`.\n```\n\n----------------------------------------\n\nTITLE: Manually Installing Angular Primitives\nDESCRIPTION: Command to manually install Angular Primitives package without using a project-specific CLI tool.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/get-started.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm i ng-primitives\n```\n\n----------------------------------------\n\nTITLE: Using Switch State Provider\nDESCRIPTION: Shows how to use state providers for programmatic control of directive inputs.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/usage.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component } from '@angular/core';\nimport { NgpSwitch, injectSwitchState } from 'ng-primitives/switch';\n\n@Component({\n  selector: 'my-switch',\n  template: `\n    <ng-content />\n  `,\n  hostDirectives: [NgpSwitch],\n})\nexport class MySwitchComponent {\n  private readonly state = injectSwitchState();\n\n  constructor() {\n    this.state.checked.set(true);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the interactions module from ng-primitives\nDESCRIPTION: Example import statement for accessing the interactions module from the ng-primitives library. This secondary entry point needs to be imported specifically with the /interactions path suffix.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/interactions/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/interactions\n```\n\n----------------------------------------\n\nTITLE: Importing Toggle Group Components in TypeScript\nDESCRIPTION: Shows how to import the NgpToggleGroup and NgpToggleGroupItem directives from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toggle-group.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpToggleGroup, NgpToggleGroupItem } from 'ng-primitives/toggle-group';\n```\n\n----------------------------------------\n\nTITLE: Generating Search Component with Angular CLI\nDESCRIPTION: This bash command uses the Angular CLI to generate a reusable search component using the ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/search.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive search\n```\n\n----------------------------------------\n\nTITLE: Generating Progress Component with Angular CLI\nDESCRIPTION: Command to generate a reusable progress component using Angular CLI schematics. It includes options for customizing the generated component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/progress.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive progress\n```\n\n----------------------------------------\n\nTITLE: Importing Slider Primitives in TypeScript\nDESCRIPTION: Imports the necessary directives from the ng-primitives/slider package to implement slider functionality.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/slider.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpSlider, NgpSliderTrack, NgpSliderRange, NgpSliderThumb } from 'ng-primitives/slider';\n```\n\n----------------------------------------\n\nTITLE: Generating Avatar Component with Angular CLI\nDESCRIPTION: Shows the command to generate a reusable avatar component using the ng-primitives schematics and the Angular CLI.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/avatar.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive avatar\n```\n\n----------------------------------------\n\nTITLE: Generating Radio Component with Angular CLI\nDESCRIPTION: CLI command to generate a reusable radio component using ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/radio.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive radio\n```\n\n----------------------------------------\n\nTITLE: Importing NgpSeparator from ng-primitives\nDESCRIPTION: Import statement for including the Separator primitive in your Angular application from the ng-primitives library.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/separator.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpSeparator } from 'ng-primitives/separator';\n```\n\n----------------------------------------\n\nTITLE: Generating Date Picker Component with Angular CLI\nDESCRIPTION: Command to generate a reusable date-picker component using the Angular CLI with ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/date-picker.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive date-picker\n```\n\n----------------------------------------\n\nTITLE: Generating Accordion Component with Angular CLI\nDESCRIPTION: Command to generate a reusable accordion component using the Angular CLI with ng-primitives schematic.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/accordion.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive accordion\n```\n\n----------------------------------------\n\nTITLE: Generating Slider Component with Angular CLI\nDESCRIPTION: Command to generate a reusable slider component using the Angular CLI with the ng-primitives schematic. This creates all necessary files with proper configuration.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/slider.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive slider\n```\n\n----------------------------------------\n\nTITLE: Importing Progress Primitives in TypeScript\nDESCRIPTION: Import statement for the Progress primitives from the ng-primitives/progress package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/progress.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpProgress, NgpProgressIndicator } from 'ng-primitives/progress';\n```\n\n----------------------------------------\n\nTITLE: Generating Reusable Tab Components with Angular CLI\nDESCRIPTION: This bash command uses the Angular CLI to generate a reusable tab component using the ng-primitives schematic.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/tabs.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive tabs\n```\n\n----------------------------------------\n\nTITLE: Generating Button Component with Angular CLI\nDESCRIPTION: Shows the Angular CLI command with npm to generate a reusable button component using schematics from ng-primitives.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/button.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive button\n```\n\n----------------------------------------\n\nTITLE: Generating File Upload Component Using Angular CLI\nDESCRIPTION: Command to generate a reusable file upload component using Angular CLI with the ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/file-upload.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive file-upload\n```\n\n----------------------------------------\n\nTITLE: Importing Dialog Primitives in TypeScript\nDESCRIPTION: Import statement for the Dialog primitives from the ng-primitives/dialog module.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/dialog.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  NgpDialog,\n  NgpDialogTitle,\n  NgpDialogDescription,\n  NgpDialogTrigger,\n  NgpDialogOverlay,\n} from 'ng-primitives/dialog';\n```\n\n----------------------------------------\n\nTITLE: Generating Listbox Component with Angular CLI\nDESCRIPTION: Shows how to use Angular CLI with ng-primitives schematics to generate a reusable listbox component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/listbox.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive listbox\n```\n\n----------------------------------------\n\nTITLE: Generating Toast Component with Angular CLI\nDESCRIPTION: Shows the command to generate a reusable toast component using the Angular CLI with ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/toast.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive toast\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Primitives with Nx\nDESCRIPTION: Command to install Angular Primitives using Nx. This adds the package and necessary dependencies to your Nx-based project.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/get-started.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx add ng-primitives\n```\n\n----------------------------------------\n\nTITLE: Importing NgpCheckbox from ng-primitives\nDESCRIPTION: Code for importing the Checkbox primitives from the ng-primitives/checkbox package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/checkbox.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpCheckbox } from 'ng-primitives/checkbox';\n```\n\n----------------------------------------\n\nTITLE: Generating Dialog Component with Angular CLI\nDESCRIPTION: Command to generate a reusable dialog component using the Angular CLI with ng-primitives schematics.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/dialog.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive dialog\n```\n\n----------------------------------------\n\nTITLE: Installing Peer Dependencies for Angular Primitives\nDESCRIPTION: Command to install the required peer dependencies for Angular Primitives. This is necessary if using an older version of NPM or a different package manager that doesn't handle peer dependencies automatically.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/getting-started/get-started.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @angular/cdk@^19.0.0 @floating-ui/dom@^1.6.0\n```\n\n----------------------------------------\n\nTITLE: Importing Date Adapter Components in TypeScript\nDESCRIPTION: Shows how to import different date adapter implementations from ng-primitives modules.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/date-adapter.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpLuxonDateAdapter } from 'ng-primitives/date-time-lucon';\nimport { NgpDateAdapter, NgpNativeDateAdapter } from 'ng-primitives/date-time-luxon';\n```\n\n----------------------------------------\n\nTITLE: Generating Pagination Component with Angular CLI\nDESCRIPTION: Shows how to generate a reusable pagination component using the Angular CLI and ng-primitives schematics. Includes the command and available options for customizing the generated component.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/primitives/pagination.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng g ng-primitives:primitive pagination\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Primitives State via npm\nDESCRIPTION: This command installs the @ng-primitives/state package using npm. The package provides low-level state management utilities for Angular applications.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/state/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ng-primitives/state\n```\n\n----------------------------------------\n\nTITLE: Using NgpAutofill directive in HTML template\nDESCRIPTION: Demonstrates how to add the ngpAutofill directive to an input element in your Angular template. When applied, this directive will detect browser autofill events and add appropriate data attributes.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/autofill.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<input ngpAutofill />\n```\n\n----------------------------------------\n\nTITLE: Importing the Accordion Component in Angular\nDESCRIPTION: Shows how to import the accordion component from the ng-primitives library as a secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/accordion/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/accordion\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/accordion`.\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests for Nx Workspace\nDESCRIPTION: Command to execute unit tests for the workspace library using Jest testing framework. This helps ensure the library functions correctly.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/tools/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test workspace\n```\n\n----------------------------------------\n\nTITLE: Importing Focus Visible Module in TypeScript\nDESCRIPTION: Shows how to import the NgpFocusVisible directive from the ng-primitives interactions package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/interactions/focus-visible.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NgpFocusVisible } from 'ng-primitives/interactions';\n```\n\n----------------------------------------\n\nTITLE: Installing ng-primitives Switch Module\nDESCRIPTION: Example import path for accessing the switch functionality from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/switch/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/switch\n```\n\n----------------------------------------\n\nTITLE: Adding Component Documentation Snippet\nDESCRIPTION: HTML snippet for including a component example in the documentation\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<docs-snippet name=\"button\"></docs-snippet>\n```\n\n----------------------------------------\n\nTITLE: Generating Reusable Component Command\nDESCRIPTION: Nx generator command to create a new reusable button component\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnx g @ng-primitives/tools:reusable-component button\n```\n\n----------------------------------------\n\nTITLE: Importing the date-time module from ng-primitives\nDESCRIPTION: Shows how to import the date-time secondary entry point from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/date-time/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/date-time\n```\n\n----------------------------------------\n\nTITLE: Running Project Tests Command\nDESCRIPTION: Command to execute the test suite\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n```\n\n----------------------------------------\n\nTITLE: Starting Documentation Server Command\nDESCRIPTION: Command to run the documentation server locally\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Import Path Example for Date Picker Module\nDESCRIPTION: Example showing the import path for accessing the date-picker functionality from ng-primitives package\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/date-picker/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ng-primitives/date-picker\n```\n\n----------------------------------------\n\nTITLE: Building Library Command\nDESCRIPTION: Command to build the library and documentation\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Importing ng-primitives/utils Secondary Entry Point\nDESCRIPTION: Demonstrates how to import from the ng-primitives/utils secondary entry point. This syntax allows users to access utility functionality without importing the entire ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/utils/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/utils\n```\n\n----------------------------------------\n\nTITLE: Running Project Linting Command\nDESCRIPTION: Command to execute linting checks on the project\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\n```\n\n----------------------------------------\n\nTITLE: Running Components Preview Command\nDESCRIPTION: Command to serve the components preview application\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/CONTRIBUTING.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnx serve components\n```\n\n----------------------------------------\n\nTITLE: Importing Toggle Module from ng-primitives\nDESCRIPTION: Example of how to import the toggle module from ng-primitives. This demonstrates the proper import path for this specific secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/toggle/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport from 'ng-primitives/toggle'\n```\n\n----------------------------------------\n\nTITLE: Importing the file-upload module from ng-primitives\nDESCRIPTION: Example of how to import the file-upload module from the ng-primitives library. The file-upload module is a secondary entry point that can be imported directly.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/file-upload/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/file-upload\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Module from ng-primitives\nDESCRIPTION: Demonstrates how to import the tabs module from the ng-primitives package using the secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/tabs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ng-primitives/tabs\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/tabs`.\n```\n\n----------------------------------------\n\nTITLE: Importing DateTime Luxon Module\nDESCRIPTION: Demonstrates how to import the date-time-luxon secondary entry point from the ng-primitives package.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/date-time-luxon/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/date-time-luxon\n```\n\n----------------------------------------\n\nTITLE: Importing Listbox Component from ng-primitives\nDESCRIPTION: Shows how to import the listbox component from the ng-primitives library using its secondary entry point.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/listbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nng-primitives/listbox\n```\n\nLANGUAGE: typescript\nCODE:\n```\nng-primitives/listbox\n```\n\n----------------------------------------\n\nTITLE: Importing from ng-primitives/internal Entry Point\nDESCRIPTION: Demonstrates how to import from the secondary entry point of the ng-primitives package. This entry point likely contains internal utilities or components not meant for direct public use.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/ng-primitives/internal/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ng-primitives/internal\n\nSecondary entry point of `ng-primitives`. It can be used by importing from `ng-primitives/internal`.\n```\n\n----------------------------------------\n\nTITLE: Building Nx Workspace Library\nDESCRIPTION: Command to build the workspace library using the Nx build system. This command compiles the library for production use.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/packages/tools/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build workspace\n```\n\n----------------------------------------\n\nTITLE: Using the NgpVisuallyHidden directive in Angular templates\nDESCRIPTION: Example showing how to apply the ngpVisuallyHidden directive to an HTML element in an Angular template to hide it visually while keeping it accessible to screen readers.\nSOURCE: https://github.com/ng-primitives/ng-primitives/blob/next/apps/documentation/src/app/pages/utilities/visually-hidden.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div ngpVisuallyHidden></div>\n```"
  }
]
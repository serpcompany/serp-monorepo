[
  {
    "owner": "cloudflare",
    "repo": "mcp-server-cloudflare",
    "content": "TITLE: Configuring Claude Desktop for Cloudflare MCP Server Access\nDESCRIPTION: JSON configuration for Claude Desktop to access the remote Cloudflare MCP server. This setup enables OAuth authentication and makes Cloudflare tools available for use within Claude.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"cloudflare\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"mcp-remote\",\n        \"https://observability.mcp.cloudflare.com/sse\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Claude Desktop for Remote MCP Server\nDESCRIPTION: JSON configuration for Claude Desktop to connect to the remote MCP server. This setup allows Claude to access the deployed MCP server and use its tools.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-observability/README.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"cloudflare\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"mcp-remote\",\n        \"https://<your-subdomain>.workers.dev/sse\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Remote MCP Server\nDESCRIPTION: JSON configuration for Claude Desktop to connect to a remote MCP server deployed on Cloudflare Workers.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-bindings/README.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"mcpServers\": {\n\t\t\"math\": {\n\t\t\t\"command\": \"npx\",\n\t\t\t\"args\": [\"mcp-remote\", \"https://worker-name.account-name.workers.dev/sse\"]\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Local MCP Server\nDESCRIPTION: JSON configuration for Claude Desktop to connect to a local MCP server via a proxy. This setup allows Claude to communicate with the MCP server over HTTP.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-bindings/README.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"mcpServers\": {\n\t\t\"math\": {\n\t\t\t\"command\": \"npx\",\n\t\t\t\"args\": [\"mcp-remote\", \"http://localhost:8787/sse\"]\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Configuration for MCP Server\nDESCRIPTION: JSON configuration for connecting Claude to the MCP server. This configuration needs to be added to the Claude config file and requires WARP to be disabled.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/sandbox-container/README.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"mcpServers\": {\n        \"container\": {\n            \"command\": \"npx\",\n            \"args\": [\n                \"mcp-remote\",\n                // this is my deployed instance\n                \"https://container-starter-2.cmsparks.workers.dev/sse\"\n            ]\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Cloudflare OAuth Secrets with Wrangler\nDESCRIPTION: Commands to set the Cloudflare OAuth client ID and secret as secrets using Wrangler CLI. These secrets are essential for authenticating with Cloudflare's OAuth service.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-observability/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwrangler secret put CLOUDFLARE_CLIENT_ID\nwrangler secret put CLOUDFLARE_CLIENT_SECRET\n```\n\n----------------------------------------\n\nTITLE: Cloudflare Deployment Commands\nDESCRIPTION: Bash commands to create a KV namespace for OAuth authentication and deploy the MCP server to Cloudflare Workers.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-bindings/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler kv namespace create OAUTH_KV\n```\n\n----------------------------------------\n\nTITLE: Deploying MCP Server with Wrangler\nDESCRIPTION: Command to deploy the MCP server to Cloudflare Workers using Wrangler. This makes the server available on the user's workers.dev domain.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-observability/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying MCP Server with Wrangler\nDESCRIPTION: Command to deploy the MCP server using Wrangler. Requires the docker daemon to be running and WARP to be disabled.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/sandbox-container/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx https://prerelease-registry.devprod.cloudflare.dev/workers-sdk/runs/14387504770/npm-package-wrangler-8740 deploy\n```\n\n----------------------------------------\n\nTITLE: Running MCP Server Locally with Wrangler\nDESCRIPTION: Command to run the MCP server locally using Wrangler. This allows testing and development of the server on localhost.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-observability/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nwrangler dev\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Local Development\nDESCRIPTION: Content for the .dev.vars file to set Cloudflare OAuth client ID and secret for local development. These variables are used when running the server locally.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-observability/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nCLOUDFLARE_CLIENT_ID=your_development_cloudflare_client_id\nCLOUDFLARE_CLIENT_SECRET=your_development_cloudflare_client_secret\n```\n\n----------------------------------------\n\nTITLE: Cloning and Running MCP Server Locally using Bash Commands\nDESCRIPTION: Bash commands to clone the repository, install dependencies, and run the remote MCP server locally for development purposes.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-bindings/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# clone the repository\ngit clone git@github.com:cloudflare/ai.git\n\n# install dependencies\ncd ai\nnpm install\n\n# run locally\nnpx nx dev remote-mcp-server\n```\n\n----------------------------------------\n\nTITLE: Running MCP Inspector for Testing\nDESCRIPTION: Command to run the MCP Inspector tool for testing the deployed server. This tool allows connecting to the server and verifying its functionality.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-observability/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx @modelcontextprotocol/inspector@latest\n```\n\n----------------------------------------\n\nTITLE: Debugging MCP Server Connection\nDESCRIPTION: Bash commands for debugging MCP server connectivity issues, including directly connecting to the server and clearing authentication files.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/apps/workers-bindings/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpx mcp-remote http://localhost:8787/sse\n```\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf ~/.mcp-auth\n```\n\n----------------------------------------\n\nTITLE: Running All Tests with Vitest\nDESCRIPTION: Bash command to run all tests in the project using Vitest as the testing framework.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Specific Test File with Vitest\nDESCRIPTION: Bash command to run a specific test file using Vitest, demonstrating how to target individual test files.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm test -- tests/tools/queues.test.ts\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Watch Mode with Vitest\nDESCRIPTION: Bash command to run tests in watch mode using Vitest, which is useful during development for continuous testing.\nSOURCE: https://github.com/cloudflare/mcp-server-cloudflare/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm test:watch\n```"
  }
]
[
  {
    "owner": "mpv-player",
    "repo": "mpv",
    "content": "TITLE: Executing Commands in mpv Player API - Lua\nDESCRIPTION: This snippet describes how to execute commands within the mpv player environment, specifying the execution behavior and command arguments.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_15\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``run <command> [<arg1> [<arg2> [...]]]``\n    Run the given command. Unlike in MPlayer/mplayer2 and earlier versions of\n    mpv (0.2.x and older), this doesn't call the shell. Instead, the command\n    is run directly, with each argument passed separately. Each argument is\n    expanded like in `Property Expansion`_.\n\n    This command has a variable number of arguments, and cannot be used with\n    named arguments.\n\n    The program is run in a detached way. mpv doesn't wait until the command\n    is completed, but continues playback right after spawning it.\n\n    To get the old behavior, use ``/bin/sh`` and ``-c`` as the first two\n    arguments.\n\n    .. admonition:: Example\n\n        ``run \"/bin/sh\" \"-c\" \"echo ${title} > /tmp/playing\"``\n\n        This is not a particularly good example, because it doesn't handle\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Main MPV Application Flow\nDESCRIPTION: Core flow of the MPV player application, showing the initialization sequence, playlist handling, and main playback loop structure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/tech-overview.txt#2025-04-21_snippet_0\n\nLANGUAGE: C\nCODE:\n```\nmain():\n    * basic initializations (e.g. init_libav() and more)\n    * pre-parse command line (verbosity level, config file locations)\n    * load config files (mp_parse_cfgfiles())\n    * parse command line, add files to playlist\n    * check help options etc. (call handle_help_options())\n    * call mp_play_files()\n    * call mp_destroy()\n```\n\n----------------------------------------\n\nTITLE: Configuring Tone Mapping Algorithms in MPV Player\nDESCRIPTION: Lists the available tone mapping algorithms that can be selected with the --tone-mapping flag, including options like mobius, reinhard, hable, bt.2390, gamma, linear, spline, bt.2446a, st2094-40, and st2094-10. Each algorithm provides different characteristics for HDR to SDR conversion.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_201\n\nLANGUAGE: plaintext\nCODE:\n```\n    bt.2390\n        Perceptual tone mapping curve (EETF) specified in ITU-R Report BT.2390.\n    gamma\n        Fits a logarithmic transfer between the tone curves.\n    linear\n        Linearly stretches the entire reference gamut to (a linear multiple of)\n        the display.\n    spline\n        Perceptually linear single-pivot polynomial. (``--vo=gpu-next`` only)\n    bt.2446a\n        HDR<->SDR mapping specified in ITU-R Report BT.2446, method A. This is\n        the recommended curve for well-mastered content. (``--vo=gpu-next``\n        only)\n    st2094-40\n        Dynamic HDR10+ tone-mapping method specified in SMPTE ST2094-40 Annex\n        B. In the absence of metadata, falls back to a fixed spline matched to\n        the input/output average brightness characteristics. (``--vo=gpu-next``\n        only)\n    st2094-10\n        Dynamic tone-mapping method specified in SMPTE ST2094-10 Annex B.2.\n        Conceptually simpler than ST2094-40, and generally produces worse\n        results.\n```\n\n----------------------------------------\n\nTITLE: Building mpv with Meson\nDESCRIPTION: This snippet demonstrates the standard steps to compile and install mpv using Meson build system. It involves setting up the build directory, compiling the source code, and installing the built binaries to the system.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmeson setup build\nmeson compile -C build\nmeson install -C build\n```\n\n----------------------------------------\n\nTITLE: Loading Files and Playlists in mpv\nDESCRIPTION: Commands for adding files or playlists to the mpv player's playlist, replacing or appending entries. Highlights the effects of different load actions and details arguments for indexing and options during playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n``loadfile <url> [<flags> [<index> [<options>]]]``\n    Load the given file or URL and play it.\n\n    Second argument:\n\n    <replace> (default)\n        Stop playback of the current file, and play the new file immediately.\n    <append>\n        Append the file to the playlist.\n    <append-play>\n        Append the file, and if nothing is currently playing, start playback.\n    <insert-next>\n        Insert the file into the playlist, directly after the current entry.\n    <insert-next-play>\n        Insert the file next, and if nothing is currently playing, start playback.\n    <insert-at>\n        Insert the file into the playlist, at the index given in the third\n        argument.\n    <insert-at-play>\n        Insert the file at the index given in the third argument, and if nothing\n        is currently playing, start playback.\n\n``loadlist <url> [<flags> [<index>]]``\n    Load the given playlist file or URL (like ``--playlist``).\n\n    Second argument:\n\n    <replace> (default)\n        Stop playback and replace the internal playlist with the new one.\n    <append>\n        Append the new playlist at the end of the current internal playlist.\n    <append-play>\n        Append the new playlist, and if nothing is currently playing, start\n        playback.\n    <insert-next>\n        Insert the new playlist into the current internal playlist, directly\n        after the current entry.\n    <insert-next-play>\n        Insert the new playlist, and if nothing is currently playing, start\n        playback.\n    <insert-at>\n        Insert the new playlist at the index given in the third argument.\n    <insert-at-play>\n        Insert the new playlist at the index given in the third argument, and if\n        nothing is currently playing, start playback.\n\n```\n\n----------------------------------------\n\nTITLE: Binding Multiple Commands to a Single Key in MPV (conf)\nDESCRIPTION: Demonstrates how to bind multiple commands to a single key in MPV's input configuration. This example shows two show-text commands bound to the 'a' key.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\na show-text \"command 1\" ; show-text \"command 2\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Hardware Video Decoding in MPV\nDESCRIPTION: The --hwdec option specifies which hardware video decoding APIs to use. It accepts a comma-delimited list of API types or special values like 'auto' or 'no'. Hardware decoding can reduce CPU usage and power consumption but may have compatibility issues with certain content.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_29\n\nLANGUAGE: ini\nCODE:\n```\n--hwdec=<api1,api2,...|no|auto|auto-copy>\n```\n\n----------------------------------------\n\nTITLE: Example of Option Definition and Reading in Lua using mp.options\nDESCRIPTION: This code snippet demonstrates how to define and read options for an mpv script using the `mp.options` module. It defines a table named `options` with default values for the script's options. Then, it uses `require(\"mp.options\").read_options` to read the actual options from the configuration file and command line, overwriting the default values.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_20\n\nLANGUAGE: lua\nCODE:\n```\n\"local options = {\\n    optionA = \\\"defaultvalueA\\\",\\n    optionB = -0.5,\\n    optionC = true,\\n}\\n\\nrequire \\\"mp.options\\\".read_options(options, \\\"myscript\\\")\\nprint(options.optionA)\"\n```\n\n----------------------------------------\n\nTITLE: Handling Playlist Navigation in mpv\nDESCRIPTION: Commands for navigating through playlist entries in mpv, including moving to the next or previous entry and handling different playlist paths. These commands allow for conditional navigation based on playlist conditions such as being at the beginning or end.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n``playlist-next [<flags>]``\n    Go to the next entry on the playlist.\n\n    First argument:\n\n    weak (default)\n        If the last file on the playlist is currently played, do nothing.\n    force\n        Terminate playback if there are no more files on the playlist.\n\n``playlist-prev [<flags>]``\n    Go to the previous entry on the playlist.\n\n    First argument:\n\n    weak (default)\n        If the first file on the playlist is currently played, do nothing.\n    force\n        Terminate playback if the first file is being played.\n\n``playlist-next-playlist``\n    Go to the next entry on the playlist with a different ``playlist-path``.\n\n``playlist-prev-playlist``\n    Go to the first of the previous entries on the playlist with a different\n    ``playlist-path``.\n```\n\n----------------------------------------\n\nTITLE: OSD Message Configuration Options\nDESCRIPTION: Options for customizing OSD message content and behavior, including custom messages and playback information display.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_170\n\nLANGUAGE: plaintext\nCODE:\n```\n--osd-msg1=<string>\n--osd-msg2=<string>\n--osd-msg3=<string>\n--osd-status-msg=<string>\n--osd-playing-msg=<string>\n--osd-playing-msg-duration=<time>\n--osd-playlist-entry=<title|filename|both>\n```\n\n----------------------------------------\n\nTITLE: Managing Track Subtitles and Audio in mpv\nDESCRIPTION: Commands for adding, removing, and reloading subtitle tracks and audio files in mpv. Details include flags for auto-selection, duplication avoidance, and accessibility features.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n``sub-add <url> [<flags> [<title> [<lang>]]]``\n    Load the given subtitle file or stream. By default, it is selected as\n    current subtitle after loading.\n\n    The ``flags`` argument is one of the following values:\n\n    <select>\n\n        Select the subtitle immediately (default).\n\n    <auto>\n\n        Don\\'t select the subtitle. \n\n    <cached>\n\n        Select the subtitle. If a subtitle with the same filename was already\n        added, that one is selected, instead of loading a duplicate entry.\n\n    Additionally the following flags can be added with a ``+``:\n\n    <hearing-impaired>\n\n        Marks the track as suitable for the hearing impaired.\n\n    <visual-impaired>\n\n        Marks the track as suitable for the visually impaired.\n\n    <forced>\n\n        Marks the track as forced.\n\n    ``sub-remove [<id>]``\n    Remove the given subtitle track. If the ``id`` argument is missing, remove\n    the current track.\n\n``sub-reload [<id>]``\n    Reload the given subtitle tracks. If the ``id`` argument is missing, reload\n    the current track.\n\n``sub-step <skip> [<flags>]``\n    Change subtitle timing, such that the subtitle event after the next\n    ``<skip>`` subtitle events is displayed.\n\n``audio-add <url> [<flags> [<title> [<lang>]]]``\n    Load the given audio file. See ``sub-add`` command.\n\n``audio-remove [<id>]``\n    Remove the given audio track. See ``sub-remove`` command.\n\n``audio-reload [<id>]``\n\n```\n\n----------------------------------------\n\nTITLE: Escaping spaces and special characters in mpv\nDESCRIPTION: Shows how to escape spaces and special characters in filenames and options when using mpv. It highlights the importance of quoting or escaping these characters to prevent shell parsing issues and ensures that the arguments are correctly passed to mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n\"mpv \\\"filename with spaces.mkv\\\" --title=\\\"window title\\\"\"\n```\n\n----------------------------------------\n\nTITLE: GPU Rendering Configuration Options\nDESCRIPTION: GPU-specific rendering options including texture settings, shader cache configuration, and debug parameters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_209\n\nLANGUAGE: configuration\nCODE:\n```\n--opengl-rectangle-textures\n--gpu-tex-pad-x, --gpu-tex-pad-y\n--opengl-early-flush=<yes|no|auto>\n--gpu-dumb-mode=<yes|no|auto>\n--gpu-shader-cache\n--gpu-shader-cache-dir\n--libplacebo-opts=<key>=<value>[,<key>=<value>[,...]]\n```\n\n----------------------------------------\n\nTITLE: Basic MPV Encoding Command Structure (Bash)\nDESCRIPTION: Demonstrates the general structure of an mpv encoding command, including input file, output file, video and audio codec options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmpv infile --o=outfile [--of=outfileformat] [--ofopts=formatoptions] [--orawts] \\\n  [(any other mpv options)] \\\n  --ovc=outvideocodec [--ovcopts=outvideocodecoptions] \\\n  --oac=outaudiocodec [--oacopts=outaudiocodecoptions]\n```\n\n----------------------------------------\n\nTITLE: Specifying Video Output Drivers in mpv\nDESCRIPTION: Command-line syntax for specifying a priority list of video output drivers to be used by mpv. Multiple drivers can be listed, with an optional trailing comma to allow fallback to unlisted drivers.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--vo=<driver1,driver2,...[,]>\n```\n\n----------------------------------------\n\nTITLE: MPV Environment Variables\nDESCRIPTION: This snippet describes environment variables available for controlling mpv's behavior, including directories for configuration and verbosity levels.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_26\n\nLANGUAGE: plaintext\nCODE:\n```\n\"HOME\", \"XDG_CONFIG_HOME\"\\n\"MPV_HOME\"\\n\"MPV_VERBOSE\"\\n\"MPV_LEAK_REPORT\"\\n\"LADSPA_PATH\"\\n\"DISPLAY\"\n```\n\n----------------------------------------\n\nTITLE: Binding Commands to Key Sequences in MPV (conf)\nDESCRIPTION: Shows how to bind a command to a sequence of keys in MPV's input configuration. This example binds a show-text command to the key sequence 'a-b-c'.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_2\n\nLANGUAGE: conf\nCODE:\n```\na-b-c show-text \"command run after a, b, c have been pressed\"\n```\n\n----------------------------------------\n\nTITLE: Controlling Playlist Playback in mpv\nDESCRIPTION: Command for starting or restarting playback of a specific playlist index in mpv. Allows for manipulation of playback state with options to stop playback or replay the current entry.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n``playlist-play-index <integer|current|none>``\n    Start (or restart) playback of the given playlist index. In addition to the\n    0-based playlist entry index, it supports the following values:\n\n    <current>\n        The current playlist entry (as in ``playlist-current-pos``) will be\n        played again (unload and reload). If none is set, playback is stopped.\n\n    <none>\n        Playback is stopped. If idle mode (``--idle``) is enabled, the player\n        will enter idle mode, otherwise it will exit.\n\n```\n\n----------------------------------------\n\nTITLE: Setting Playback Start and End Times in MPV (Shell)\nDESCRIPTION: This command starts playback at 30 seconds, plays for 10 seconds, and then exits. It demonstrates using the --start and --end options to control playback duration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmpv --start=30 --end=40\n```\n\n----------------------------------------\n\nTITLE: Register Events with MPV Lua\nDESCRIPTION: Shows how to register an event handler using mp.register_event. This snippet demonstrates linking the 'file-loaded' event to a custom function my_fn to execute custom code when a file starts playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_23\n\nLANGUAGE: Lua\nCODE:\n```\nfunction my_fn(event)\n    print(\"start of playback!\")\nend\n\nmp.register_event(\"file-loaded\", my_fn)\n```\n\n----------------------------------------\n\nTITLE: Custom Event Loop Initialization in mpv JavaScript\nDESCRIPTION: This JavaScript function redefines the event loop in an mpv script. It is implemented to continually process events and timers by polling with `mp.wait_event`, dispatching with `mp.dispatch_event`, processing with `mp.process_timers`, and managing idle observers. This function demonstrates how to integrate custom behavior into the mpv event loop by replacing its default implementation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/javascript.rst#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction mp_event_loop() {\n    var wait = 0;\n    do {\n        var e = mp.wait_event(wait);\n        dump(e);  // there could be a lot of prints...\n        if (e.event != \"none\") {\n            mp.dispatch_event(e);\n            wait = 0;\n        } else {\n            wait = mp.process_timers() / 1000;\n            if (wait != 0) {\n                mp.notify_idle_observers();\n                wait = mp.peek_timers_wait() / 1000;\n            }\n        }\n    } while (mp.keep_running);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tone Mapping Parameters in MPV Player\nDESCRIPTION: Documents the --tone-mapping-param option which can be used to fine-tune the behavior of various tone mapping algorithms. Each algorithm has different parameter meanings, such as coefficients, transition points, or exponents.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_202\n\nLANGUAGE: plaintext\nCODE:\n```\n``--tone-mapping-param=<value>``\n    Set tone mapping parameters. By default, this is set to the special string\n    ``default``, which maps to an algorithm-specific default value. Ignored if\n    the tone mapping algorithm is not tunable. This affects the following tone\n    mapping algorithms:\n\n    clip\n        Specifies an extra linear coefficient to multiply into the signal\n        before clipping. Defaults to 1.0.\n    mobius\n        Specifies the transition point from linear to mobius transform. Every\n        value below this point is guaranteed to be mapped 1:1. The higher the\n        value, the more accurate the result will be, at the cost of losing\n        bright details. Defaults to 0.3, which due to the steep initial slope\n        still preserves in-range colors fairly accurately.\n    reinhard\n        Specifies the local contrast coefficient at the display peak. Defaults\n        to 0.5, which means that in-gamut values will be about half as bright\n        as when clipping.\n    bt.2390\n        Specifies the offset for the knee point. Defaults to 1.0, which is\n        higher than the value from the original ITU-R specification (0.5).\n        (``--vo=gpu-next`` only)\n    gamma\n        Specifies the exponent of the function. Defaults to 1.8.\n    linear\n        Specifies the scale factor to use while stretching. Defaults to 1.0.\n    spline\n        Specifies the knee point (in PQ space). Defaults to 0.30.\n    st2094-10\n        Specifies the contrast (slope) at the knee point. Defaults to 1.0.\n```\n\n----------------------------------------\n\nTITLE: --loop-file=<N|inf|no> for MPV Player\nDESCRIPTION: This command enables looping of a single file N times, with support for infinite and normal playback options. The functionality provides a seek behavior when looping the same file as opposed to looping the entire playlist. Compatibility options include --loop-file and --loop-file=yes for easier usage. This command accepts inputs as numeric values or specific keywords and affects file playback behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\n--loop-file=<N|inf|no>, --loop=<N|inf|no>\n```\n\n----------------------------------------\n\nTITLE: FFmpeg libavfilter Graph Integration\nDESCRIPTION: This snippet illustrates how to integrate FFmpeg's libavfilter into mpv to apply complex video filtering graphs. It includes example usages and syntax requirements for specifying filter chains. The filter graph must have a single video input and output pad.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n\"lavfi=graph[:sws-flags[:o=opts]]\"\n\n```\n\n----------------------------------------\n\nTITLE: Adding Key Binding in Lua\nDESCRIPTION: Registers a callback function to run on a key binding. Supports various flags for controlling repeating, scaling, and complex event handling. Key bindings can be remapped by users via input.conf.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_11\n\nLANGUAGE: lua\nCODE:\n```\nmp.add_key_binding(key, name|fn [,fn [,flags]])\n```\n\n----------------------------------------\n\nTITLE: Selecting Japanese Audio in MPV (Shell)\nDESCRIPTION: This command plays a Matroska file in MPV with Japanese audio. It demonstrates using the --alang option to specify a single preferred language.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmpv --alang=jpn example.mkv\n```\n\n----------------------------------------\n\nTITLE: PulseAudio Driver Configuration\nDESCRIPTION: Configuration options for PulseAudio driver, including host connection, buffer size, and latency settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_5\n\nLANGUAGE: config\nCODE:\n```\n--pulse-host=<host>\n--pulse-buffer=<1-2000|native>\n--pulse-latency-hacks=<yes|no>\n--pulse-allow-suspended=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Audio Filter Chain in mpv\nDESCRIPTION: Demonstrates how to set up a chain of audio filters using the --af option in mpv player.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"--af=...\"\n```\n\n----------------------------------------\n\nTITLE: Selecting Japanese Subtitles in MPV (Shell)\nDESCRIPTION: This command plays a Matroska file in MPV with Japanese subtitles. It demonstrates using the --slang option to specify a single preferred subtitle language.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmpv --slang=jpn example.mkv\n```\n\n----------------------------------------\n\nTITLE: Setting Complex LibAVFilter in MPV\nDESCRIPTION: Sets a 'complex' libavfilter filter, allowing a single filter graph to take input from multiple source audio and video tracks. The graph can result in a single audio or video output (or both).\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_229\n\nLANGUAGE: plaintext\nCODE:\n```\n--lavfi-complex=<string>\n```\n\n----------------------------------------\n\nTITLE: Selecting Brazilian Portuguese Subtitles in MPV (Shell)\nDESCRIPTION: This command plays a Matroska file in MPV, preferring Brazilian Portuguese subtitles if available, otherwise falling back to any Portuguese subtitles. It shows how to specify regional language variants.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmpv --slang=pt-BR example.mkv\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Pan in mpv\nDESCRIPTION: These options allow moving the displayed video rectangle in the X or Y direction. The value is given as a fraction of the scaled video size.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_40\n\nLANGUAGE: config\nCODE:\n```\n\"--video-pan-x=<value>\", \"--video-pan-y=<value>\"\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Background Color in MPV\nDESCRIPTION: Specifies the color used for subtitle text background. Uses the same color format as --sub-color.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_131\n\nLANGUAGE: shell\nCODE:\n```\n--sub-back-color=<color>\n```\n\n----------------------------------------\n\nTITLE: Adding Forced Key Binding in Lua\nDESCRIPTION: Similar to add_key_binding, but registers the binding in a way that overwrites user's custom bindings in their input.conf. Use this when you need your binding to take precedence over user settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_12\n\nLANGUAGE: lua\nCODE:\n```\nmp.add_forced_key_binding(...)\n```\n\n----------------------------------------\n\nTITLE: Input Configuration for OSC Visibility in mpv\nDESCRIPTION: This example demonstrates how to bind keys in mpv's `input.conf` file to control OSC visibility using script messages.  The `script-message` command sends a message to the OSC script. In this example, the 'a' key hides the OSC, and the 'b' key sets the visibility mode to auto.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_5\n\nLANGUAGE: ini\nCODE:\n```\n\"a script-message osc-visibility never\\nb script-message osc-visibility auto\"\n```\n\n----------------------------------------\n\nTITLE: Modifying Video Filter Chain in MPV Player (Lua)\nDESCRIPTION: This command enables modification of the video filter chain in MPV. It supports operations like set, add, toggle, remove, and clear, and allows assigning labels to filters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_21\n\nLANGUAGE: lua\nCODE:\n```\nvf <operation> <value>\n```\n\n----------------------------------------\n\nTITLE: Saving Screenshots to File in MPV Player (Lua)\nDESCRIPTION: This command allows saving a screenshot to a specific file in MPV. The file format is determined by the extension, and it supports flags like subtitles, video, and window.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_18\n\nLANGUAGE: lua\nCODE:\n```\nscreenshot-to-file <filename> [<flags>]\n```\n\n----------------------------------------\n\nTITLE: Appending a filter to the list in mpv\nDESCRIPTION: This snippet demonstrates how to append a filter to the video filter list using the `--vf-append` option. It simply adds the specified filter to the end of the current filter chain.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf-append=filter\"\n```\n\n----------------------------------------\n\nTITLE: Creating OSD Overlay in MPV Lua Script\nDESCRIPTION: Generate and manage on-screen display overlays with flexible text and styling capabilities\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_18\n\nLANGUAGE: lua\nCODE:\n```\nov = mp.create_osd_overlay(\"ass-events\")\nov.data = \"{\\an5}{\\b1}hello world!\"\nov:update()\n```\n\n----------------------------------------\n\nTITLE: MPV Command Usage Examples with Lua\nDESCRIPTION: Examples showing different ways to execute MPV commands from Lua scripts, demonstrating both string-based and array-based command execution.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nmp.command(\"loadfile \" .. filename .. \" append\")\nmp.commandv(\"loadfile\", filename, \"append\")\n```\n\n----------------------------------------\n\nTITLE: Frame Interpolation Settings in MPV\nDESCRIPTION: Configuration options for frame interpolation, which reduces stuttering by generating intermediate frames. Includes threshold settings and preservation options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_185\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--interpolation\"    Reduce stuttering caused by mismatches in the video fps and display refresh\n    rate (also known as judder).\n\n    .. warning:: This requires setting the ``--video-sync`` option to one\n                 of the ``display-`` modes, or it will be silently disabled.\n                 This was not required before mpv 0.14.0.\n\n    This essentially attempts to interpolate the missing frames by convoluting\n    the video along the temporal axis. The filter used can be controlled using\n    the ``--tscale`` setting.\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Vertical Alignment in MPV\nDESCRIPTION: Controls the vertical position of text subtitles. Not applied to ASS subtitles except in --sub-ass=no mode.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_138\n\nLANGUAGE: shell\nCODE:\n```\n--sub-align-y=<top|center|bottom>\n```\n\n----------------------------------------\n\nTITLE: Manipulating Video Tracks in MPV\nDESCRIPTION: Commands for adding, removing, and reloading video tracks in the MPV media player. Supports loading videos with optional flags and handling external files.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nvideo-add <url> [<flags> [<title> [<lang> [<albumart>]]]]\n```\n\nLANGUAGE: bash\nCODE:\n```\nvideo-remove [<id>]\n```\n\nLANGUAGE: bash\nCODE:\n```\nvideo-reload [<id>]\n```\n\n----------------------------------------\n\nTITLE: Creating Periodic Timer in MPV Lua Script\nDESCRIPTION: Implement a recurring timer that executes a function at specified intervals with advanced control methods\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_17\n\nLANGUAGE: lua\nCODE:\n```\ntimer = mp.add_periodic_timer(1, function()\n    print(\"called every second\")\n    seconds = seconds + 1\n    if seconds >= 10 then\n        timer:kill()\n    end\nend)\n```\n\n----------------------------------------\n\nTITLE: Unregistering Event Callback in Lua\nDESCRIPTION: Removes all event handlers that were registered with the given function. Used to undo mp.register_event calls when the handlers are no longer needed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_15\n\nLANGUAGE: lua\nCODE:\n```\nmp.unregister_event(fn)\n```\n\n----------------------------------------\n\nTITLE: Window State and Cursor Configuration for MPV Player\nDESCRIPTION: Configuration options for window state management (minimized/maximized) and cursor behavior. Includes settings for cursor auto-hiding and visibility control.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_157\n\nLANGUAGE: config\nCODE:\n```\n--window-minimized=<yes|no>\n--window-maximized=<yes|no>\n--cursor-autohide=<number|no|always>\n--cursor-autohide-fs-only\n--force-rgba-osd-rendering\n--force-render\n```\n\n----------------------------------------\n\nTITLE: Retrieving Native-Typed Properties in Lua\nDESCRIPTION: Gets a property value using the most appropriate Lua type (string, Boolean, number, or table). Returns the value on success, or the default value and error on failure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nmp.get_property_native(name [,def])\n```\n\n----------------------------------------\n\nTITLE: Modifying Audio Filter Chain in MPV Player (Lua)\nDESCRIPTION: This command allows changing the audio filter chain in MPV. It supports operations like set, add, toggle, remove, and clear.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_20\n\nLANGUAGE: lua\nCODE:\n```\naf <operation> <value>\n```\n\n----------------------------------------\n\nTITLE: Per-File Options Example\nDESCRIPTION: Demonstrates how to apply different options to different files when playing multiple files with mpv. It uses the `--{` and `--}` markers to define option scopes for each file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n\"mpv --a file1.mkv --b --\\\\{ --c file2.mkv --d file3.mkv --e --\\\\} file4.mkv --f\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Key Bindings in MPV's input.conf (conf)\nDESCRIPTION: Example of how to define key bindings in MPV's input.conf file. It shows how to map keys to specific commands, including taking a screenshot and seeking forward.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\ns screenshot      # take a screenshot with the s key\nLEFT seek 15      # map the left-arrow key to seeking forward by 15 seconds\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Volume Amplification in MPV\nDESCRIPTION: Sets the maximum volume amplification level in percent. Default is 130, allowing volume adjustment up to about double the normal level. Accepts values between 100.0 and 1000.0.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_65\n\nLANGUAGE: bash\nCODE:\n```\n--volume-max=<100.0-1000.0>\n```\n\n----------------------------------------\n\nTITLE: Select Items from Console in MPV Lua\nDESCRIPTION: Allows the user to select an item from a list in the MPV console using input.select. It provides prompt and items parameters, with default_item for preselection. On submission, a callback function executes using the selected item's index as input.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_22\n\nLANGUAGE: Lua\nCODE:\n```\ninput.select({\n    items = {\n        \"First playlist entry\",\n        \"Second playlist entry\",\n    },\n    submit = function (id)\n        mp.commandv(\"playlist-play-index\", id - 1)\n    end,\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Audio Language Preferences in MPV (Shell)\nDESCRIPTION: This command sets the preferred audio languages to Hungarian and English for DVD playback in MPV. It will choose the Hungarian audio track if available, falling back to English if not.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmpv dvd://1 --alang=hu,en\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Subtitle Loading in MPV\nDESCRIPTION: This option controls how MPV automatically loads additional subtitle files matching the video filename. It specifies the matching method for external subtitle files.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_110\n\nLANGUAGE: config\nCODE:\n```\n--sub-auto=<no|exact|fuzzy|all>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Horizontal Margin in MPV\nDESCRIPTION: Specifies the left and right screen margin for subtitles in scaled pixels. This affects the distance of subtitles from the left border and where long subtitle text will be broken on the right.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_135\n\nLANGUAGE: shell\nCODE:\n```\n--sub-margin-x=<size>\n```\n\n----------------------------------------\n\nTITLE: Cropping Video in mpv\nDESCRIPTION: These options allow cropping the video by specifying the start coordinates and dimensions. Multiple formats are supported.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_42\n\nLANGUAGE: config\nCODE:\n```\n\"--video-crop=<[W[xH]][+x+y]>\", \"--video-crop=<x:y>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Audio Channel Output in MPV\nDESCRIPTION: Controls which audio channels are output, with options for automatic selection, system preferences, or specific channel layouts. This affects surround sound handling and downmixing behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_80\n\nLANGUAGE: bash\nCODE:\n```\n--audio-channels=<auto-safe|auto|layouts>\n```\n\n----------------------------------------\n\nTITLE: Setting up video filters with --vf option in mpv\nDESCRIPTION: This snippet shows how to setup a chain of video filters using the `--vf` option in mpv. It explains the syntax for specifying filter names, parameters, labels, and disabling filters by default. It also describes how the `filter-parameter` can be quoted in `[]` in case the value contains characters like `,` or `=`.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf=<filter1[=parameter1:parameter2:...],filter2,...>\"\n```\n\n----------------------------------------\n\nTITLE: Applying Audio Filters in MPV\nDESCRIPTION: Applies a comma-separated list of audio filters to the audio stream. Each filter can have optional parameters. Additional options for modifying the filter list include --af-add, --af-pre, and --af-clr.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_61\n\nLANGUAGE: bash\nCODE:\n```\n--af=<filter1[=parameter1:parameter2:...],filter2,...>\n```\n\n----------------------------------------\n\nTITLE: Playing a DVD with MPV\nDESCRIPTION: This snippet demonstrates how to play a DVD using the 'dvd://' protocol, allowing for various options such as title selection and device specification.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n\"dvd://[title][/device]\" \"--dvd-device=PATH\"\n```\n\n----------------------------------------\n\nTITLE: On-Screen Display (OSD) Commands in MPV\nDESCRIPTION: Commands for displaying text, progress bars, and managing OSD overlays with support for advanced positioning and rendering options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nshow-text <text> [<duration>|-1 [<level>]]\n```\n\nLANGUAGE: bash\nCODE:\n```\nshow-progress\n```\n\nLANGUAGE: bash\nCODE:\n```\noverlay-add <id> <x> <y> <file> <offset> <fmt> <w> <h> <stride> <dw> <dh>\n```\n\nLANGUAGE: bash\nCODE:\n```\noverlay-remove <id>\n```\n\nLANGUAGE: bash\nCODE:\n```\nosd-overlay\n```\n\n----------------------------------------\n\nTITLE: MPV Profile Configuration: Advanced Fullscreen Filter Management\nDESCRIPTION: This example demonstrates a more advanced method of managing video filters when entering and exiting fullscreen. It uses two profiles: one to add a filter on fullscreen and another to remove it when not in fullscreen.  This approach avoids removing other user-added filters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_8\n\nLANGUAGE: ini\nCODE:\n```\n[something]\nprofile-cond=fullscreen\nvf-add=@rot:rotate=PI/2\n\n[something-inv]\nprofile-cond=not fullscreen\nvf-remove=@rot\n```\n\n----------------------------------------\n\nTITLE: Avoiding Global State in Library Design\nDESCRIPTION: Principle of using context structs instead of global mutable state to ensure library safety and prevent potential conflicts between library users\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/tech-overview.txt#2025-04-21_snippet_4\n\nLANGUAGE: C\nCODE:\n```\n// Prefer passing context structs to functions\nvoid my_function(context_struct* ctx) { ... }\n```\n\n----------------------------------------\n\nTITLE: Setting Decoder Thread Count in MPV\nDESCRIPTION: Specifies the number of threads to use for audio decoding. Thread support depends on the codec and is currently available mainly for lossless codecs. Value 0 autodetects CPU cores up to 16.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_77\n\nLANGUAGE: bash\nCODE:\n```\n--ad-lavc-threads=<0-16>\n```\n\n----------------------------------------\n\nTITLE: --ab-loop-a=<time> and --ab-loop-b=<time> for MPV Player\nDESCRIPTION: These options are used to set loop points for playback. If playback reaches the b timestamp, it automatically seeks back to the a timestamp. Expected inputs are time values, and if either option is set to 'no', looping is disabled. The behavior modifies how the player navigates through media based on the defined loop points.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n--ab-loop-a=<time>, --ab-loop-b=<time>\n```\n\n----------------------------------------\n\nTITLE: Format filter examples in mpv\nDESCRIPTION: This example shows how to use format filter with and without `convert=yes` in mpv. When convert is disabled, the color parameters are forced without conversion. When convert is enabled, libswscale or zimg is used if any of the parameters mismatch.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_10\n\nLANGUAGE: Text\nCODE:\n```\n\"mpv test.mkv --vf=format:colormatrix=ycgco\"\n```\n\nLANGUAGE: Text\nCODE:\n```\n\"mpv test.mkv --vf=format:colormatrix=ycgco:convert=yes --sws-allow-zimg\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Position in MPV Player\nDESCRIPTION: Specifies the vertical position of subtitles on the screen as a percentage of screen height. Values above 100 move subtitles further down. May cause text subtitle cutoff above 100.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_87\n\nLANGUAGE: config\nCODE:\n```\n--sub-pos=<0-150>\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Volume Level in MPV\nDESCRIPTION: Sets the startup volume level where 0 means silence and 100 means no volume reduction or amplification. Negative values are treated as 0. Controls the internal mixer (software volume).\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_64\n\nLANGUAGE: bash\nCODE:\n```\n--volume=<value>\n```\n\n----------------------------------------\n\nTITLE: Variable Refresh Rate Configuration\nDESCRIPTION: Option to toggle Variable Refresh Rate (VRR) support, which can improve playback of content with different frame rates\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n--drm-vrr-enabled=<no|yes|auto>\n```\n\n----------------------------------------\n\nTITLE: Playing CD with MPV\nDESCRIPTION: This snippet is used to play tracks from a CD. It allows specification of a range of tracks using '--start' and '--end' options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\n\"cdda://[device]\" \"--cdda-device=PATH\"\n```\n\n----------------------------------------\n\nTITLE: H.264 Encoding for MP4 with MPV (Bash)\nDESCRIPTION: Example command for encoding H.264 video with AAC audio in an MP4 container using mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmpv infile --o=outfile.mp4 \\\n  --ovc=libx264 --ovcopts=preset=medium,crf=23,profile=baseline \\\n  --oac=aac --oacopts=b=128k\n```\n\n----------------------------------------\n\nTITLE: GLSL Shader Configuration\nDESCRIPTION: Example structure of a custom GLSL shader configuration for mpv including metadata blocks and hook function.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_200\n\nLANGUAGE: glsl\nCODE:\n```\n//!METADATA ARGS...\n//!METADATA ARGS...\n\nvec4 hook() {\n   ...\n   return something;\n}\n\n//!METADATA ARGS...\n//!METADATA ARGS...\n\n...\n```\n\n----------------------------------------\n\nTITLE: Defining OSC Configuration Variables\nDESCRIPTION: This snippet defines various configurable settings for the OSC within the MPV player. It includes properties for alignment, margins, alpha values, fade durations, visibility modes, and color settings. Each option has a default value and a brief description of its functionality.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n\"``halign``\\n    Default: 0.0\\n    \\n    Horizontal alignment in box and slimbox layouts, -1 (left) to 1 (right).\\n\\n``barmargin``\\n    Default: 0\\n    \\n    Margin from bottom (bottombar, slimbottombar) or top (topbar, slimtopbar),\\n    in pixels.\\n\\n``boxalpha``\\n    Default: 80\\n    \\n    Alpha of the background box, 0 (opaque) to 255 (fully transparent)\\n\\n``hidetimeout``\\n    Default: 500\\n    \\n    Duration in ms until the OSC hides if no mouse movement, must not be\\n    negative\\n\\n``fadeduration``\\n    Default: 200\\n    \\n    Duration of fade effects in ms, 0 = no fade.\\n\\n``fadein``\\n    Default: no\\n    \\n    Enable fade-in.\\n\\n``title``\\n    Default: ${!playlist-count==1:[${playlist-pos-1}/${playlist-count}] }${media-title}\\n\\n    String that supports property expansion that will be displayed as\\n    OSC title.\\n    ASS tags are escaped and newlines are converted to spaces.\"\n```\n\n----------------------------------------\n\nTITLE: MPV Profile Configuration: Rotating Video\nDESCRIPTION: This example shows how to configure an mpv profile to rotate the video by 90 degrees, using the `profile-restore` option to revert the changes when the profile is deactivated. This configuration uses `copy-equal` to restore the original value only if it matches the value set by the profile.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n\"[something]\\nprofile-restore=copy-equal\\nvf-add=rotate=PI/2  # rotate by 90 degrees\"\n```\n\n----------------------------------------\n\nTITLE: Using YouTube-DL Hooks with MPV\nDESCRIPTION: This command enables the YouTube-DL script in MPV, allowing the player to interpret video URLs and stream content from various sites. Users can provide specific options to customize the interaction with YouTube-DL, including format selection and URL exclusions.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n--ytdl=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Audio Filter with Conditional Auto Profiles\nDESCRIPTION: Example of using conditional auto profiles to customize audio filters when playback speed is not normal. This shows how to insert the scaletempo2 filter with custom parameters that replace the default settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_57\n\nLANGUAGE: config\nCODE:\n```\n[af_insert]\nprofile-cond=speed ~= 1\nprofile-restore=copy\naf-add=scaletempo2=search-interval=50 # Insert filter and params here.\n```\n\n----------------------------------------\n\nTITLE: Dither Depth Configuration in MPV\nDESCRIPTION: Option to set the bit depth target for dithering operations, with automatic detection capabilities depending on the video output driver and display.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_189\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--dither-depth=<N|no|auto>\"    Set dither target depth to N. Default: auto.\n\n    no\n        Disable any dithering done by mpv.\n    auto\n        Automatic selection.\n        On ``--vo=gpu``: detected depth or 8 bpc otherwise\n        On ``--vo=gpu-next``: detected depth or 8 bpc (for SDR target)\n    8\n        Dither to 8 bit output.\n\n    Note that the on-the-wire bit depth cannot be detected except when using\n    ``gpu-api=d3d11``. Explicitly setting the value to your display's bit depth\n    is recommended, as dithering performed by some LCD panels can be of low\n    quality.\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Text Color in MPV\nDESCRIPTION: Specifies the color used for unstyled text subtitles. Color can be specified in r/g/b format, with optional alpha, or as a RGB hex triplet.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_134\n\nLANGUAGE: shell\nCODE:\n```\n--sub-color=<color>\n```\n\n----------------------------------------\n\nTITLE: Implementing Fullscreen Control on Pause in MPV with Lua\nDESCRIPTION: A script that automatically exits fullscreen mode when the player is paused by observing the pause property and setting fullscreen to 'no' when pause becomes true.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nfunction on_pause_change(name, value)\n    if value == true then\n        mp.set_property(\"fullscreen\", \"no\")\n    end\nend\nmp.observe_property(\"pause\", \"bool\", on_pause_change)\n```\n\n----------------------------------------\n\nTITLE: Screenshot Options Configuration - MPV Player\nDESCRIPTION: Configuration parameters for controlling screenshot behavior in MPV, including WebP, JPEG XL, and AVIF format settings with quality and compression options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_176\n\nLANGUAGE: config\nCODE:\n```\n--screenshot-webp-quality=<0-100>\n--screenshot-webp-compression=<0-6>\n--screenshot-jxl-distance=<0-15>\n--screenshot-jxl-effort=<1-9>\n--screenshot-avif-encoder=<encoder>\n--screenshot-avif-pixfmt=<format>\n--screenshot-avif-opts=key1=value1,key2=value2,...\n--screenshot-sw=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Border Style in MPV\nDESCRIPTION: Specifies the style of the subtitle border. Options include outline-and-shadow, opaque-box, and background-box, each with different rendering behaviors.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_133\n\nLANGUAGE: shell\nCODE:\n```\n--sub-border-style=<outline-and-shadow|opaque-box|background-box>\n```\n\n----------------------------------------\n\nTITLE: Custom Button Configuration in mpv\nDESCRIPTION: These lines configure custom buttons within the mpv player.  Each button can have content (e.g., an icon), and associated commands that are executed when the button is interacted with (left click, right click, or mouse wheel). The `cycle-values` command cycles through specified options, while others execute specific mpv commands like shuffling the playlist or adjusting playback speed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n\"custom_button_1_mbtn_right_command=cycle-values loop-playlist inf no\"\n```\n\nLANGUAGE: ini\nCODE:\n```\n\"custom_button_2_content=🔀\\ncustom_button_2_mbtn_left_command=playlist-shuffle\"\n```\n\nLANGUAGE: ini\nCODE:\n```\n\"custom_button_3_content=⏱\\ncustom_button_3_mbtn_left_command=add speed 1\\ncustom_button_3_mbtn_right_command=set speed 1\\ncustom_button_3_wheel_up_command=add speed 0.25\\ncustom_button_3_wheel_down_command=add speed -0.25\"\n```\n\n----------------------------------------\n\nTITLE: Basic JSON Command Structure\nDESCRIPTION: This example demonstrates the basic structure of a JSON command message sent to the mpv player, including a command name and parameters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"command\": [\"command_name\", \"param1\", \"param2\", ...] }\n```\n\n----------------------------------------\n\nTITLE: Setting Display FPS Override in MPV\nDESCRIPTION: The --display-fps-override option allows manually setting the display FPS when using video-sync display modes. This should only be used when the automatically detected value is incorrect, as even slightly wrong values can ruin playback quality.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_28\n\nLANGUAGE: ini\nCODE:\n```\n--display-fps-override=<fps>\n```\n\n----------------------------------------\n\nTITLE: Example: Specifying MPEG-4 Encoding\nDESCRIPTION: This example shows how to encode using the MPEG-4 codec with a specific quantizer scale, demonstrating practical codec option usage.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n--ovc=mpeg4 --ovcopts=qscale=5\n```\n\n----------------------------------------\n\nTITLE: Configuring scaletempo2 Audio Filter in mpv\nDESCRIPTION: Shows the syntax and options for the scaletempo2 audio filter, which scales audio tempo without altering pitch using the WSOLA method.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_5\n\nLANGUAGE: config\nCODE:\n```\n\"scaletempo2[=option1:option2:...]\"\n```\n\n----------------------------------------\n\nTITLE: Toggling a filter in the list in mpv\nDESCRIPTION: This snippet demonstrates how to toggle a filter in the video filter list using the `--vf-toggle` option in mpv. If the filter is not present, it's added; if it's present, it's removed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_6\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf-toggle=filter\"\n```\n\n----------------------------------------\n\nTITLE: MPV Command Execution: Applying Profile\nDESCRIPTION: These commands demonstrate how the `apply-profile` command interacts with the `vf` option and the `profile-restore` feature. It showcases how options are appended and then restored to their original values, demonstrating the use of `apply-profile` and `restore` actions.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nset vf vflip\napply-profile something\nvf add hflip\napply-profile something\n# vf == vflip,rotate=PI/2,hflip,rotate=PI/2\napply-profile something restore\n# vf == vflip\n```\n\n----------------------------------------\n\nTITLE: Building MPV with Meson\nDESCRIPTION: This snippet illustrates the command to set up the Meson build system for the mpv binary, configuring various arguments such as linking options and specifying the cross-compile file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmeson setup -Ddefault_library=static -Dprefer_static=true \\ \n            -Dc_link_args='-static' -Dcpp_link_args='-static' \\ \n            --cross-file cross-file.txt build\n\nninja -C build mpv.exe mpv.com\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Audio Change Speed in MPV Player\nDESCRIPTION: Configures the maximum additional speed difference percentage applied to audio in display sync modes to compensate for A/V desync.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_216\n\nLANGUAGE: ini\nCODE:\n```\n--video-sync-max-audio-change=<value>\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Audio Mute State in MPV\nDESCRIPTION: Controls whether audio is muted on startup. The default is 'no', meaning audio will play normally when playback begins.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_73\n\nLANGUAGE: bash\nCODE:\n```\n--mute=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Using subprocess Command in Lua to Capture Command Output\nDESCRIPTION: This Lua example demonstrates how to run a process in a blocking manner using mpv's subprocess command, capturing its stdout output. The example runs 'cat /proc/cpuinfo' and prints the result if the process exits successfully.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_16\n\nLANGUAGE: lua\nCODE:\n```\nlocal r = mp.command_native({\n    name = \"subprocess\",\n    playback_only = false,\n    capture_stdout = true,\n    args = {\"cat\", \"/proc/cpuinfo\"},\n})\nif r.status == 0 then\n    print(\"result: \" .. r.stdout)\nend\n```\n\n----------------------------------------\n\nTITLE: HDR Contrast Recovery Options in MPV Player\nDESCRIPTION: Documents options for enhancing contrast in HDR content after tone mapping, including the contrast recovery strength and smoothness parameters. These are specific to the gpu-next video output driver and allow fine-tuning the contrast enhancement process.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_206\n\nLANGUAGE: plaintext\nCODE:\n```\n``--hdr-contrast-recovery=<0.0..2.0>``, ``--hdr-contrast-smoothness=<1.0..100.0>``\n    Enables the HDR contrast recovery algorithm, which is to designed to\n    enhance contrast of HDR video after tone mapping. The strength (default:\n    0.0) indicates the degree of contrast recovery, with 0.0 being completely\n    disabled and 1.0 being 100% strength. Values higher than 1.0 are allowed,\n    but may result in excessive sharpening. The smoothness (default: 3.5)\n    indicates the degree to which the HDR source is low-passed in order to\n    obtain contrast information - a value of 2.0 corresponds to 2x downscaling.\n    Users on low DPI displays (<= 100) may want to lower this value, while\n    users on very high DPI displays (\"retina\") may want to increase it. (Only\n    for ``vo=gpu-next``)\n```\n\n----------------------------------------\n\nTITLE: --play-direction=<forward|+|backward|-> for MPV Player\nDESCRIPTION: This command allows control over playback direction, with options for forward and backward playback. It accepts various parameters, directly affecting how media is presented during playback. The use of backward playback introduces certain complexities and conditions to be aware of.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\n--play-direction=<forward|+|backward|->\n```\n\n----------------------------------------\n\nTITLE: Vulkan Device Selection in MPV\nDESCRIPTION: Option to specify the Vulkan device to use for rendering and presentation, using either device name or UUID, with help option to list available devices.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_197\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--vulkan-device=<device name|UUID>\"    The name or UUID of the Vulkan device to use for rendering and presentation. Use\n    ``--vulkan-device=help`` to see the list of available devices and their\n    names and UUIDs. If left unspecified, the first enumerated hardware Vulkan\n    device will be used.\n```\n\n----------------------------------------\n\nTITLE: Setting Audio Decoder Priority in MPV\nDESCRIPTION: Specifies a priority list of audio decoders to use. The first matching decoder is selected, followed by others in the list. Adding a minus sign at the end prevents falling back to unlisted decoders.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_63\n\nLANGUAGE: bash\nCODE:\n```\n--ad=<decoder1,decoder2,...[-]>\n```\n\n----------------------------------------\n\nTITLE: H.264 Encoding with MPV (Bash)\nDESCRIPTION: Example command for encoding H.264 video with Opus audio in a Matroska container using mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmpv infile --o=outfile.mkv \\\n  --ovc=libx264 --ovcopts=preset=medium,crf=23,profile=baseline \\\n  --oac=libopus --oacopts=qscale=3\n```\n\n----------------------------------------\n\nTITLE: Registering Event Callback in Lua\nDESCRIPTION: Registers a function to be called when a specific event occurs. The function receives event data as a table. Multiple handlers for the same event run in registration order. Returns true if the event exists.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_14\n\nLANGUAGE: lua\nCODE:\n```\nmp.register_event(name, fn)\n```\n\n----------------------------------------\n\nTITLE: Capturing Raw Screenshots in MPV Player (Lua)\nDESCRIPTION: This command returns a screenshot in memory, usable through the client API. It supports various image formats and flags, and returns detailed information about the captured image.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_19\n\nLANGUAGE: lua\nCODE:\n```\nscreenshot-raw [<flags> [<format>]]\n```\n\n----------------------------------------\n\nTITLE: Defining YUV420P10 Color Format Specification\nDESCRIPTION: Specifies the YUV420P10 color format with 10-bit depth, 4:2:0 chroma subsampling, and planar configuration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_32\n\nLANGUAGE: plaintext\nCODE:\n```\nyuv420p10: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][uint]\n    planes=3, chroma=1:1 align=2:2\n    {16/[0:0] 16/[1:1] 16/[1:1] }\n    0: 16bits {0:16/-6} {} {} {}\n    1: 16bits {} {0:16/-6} {} {}\n    2: 16bits {} {} {0:16/-6} {}\n  Regular: planes=3 compbytes=2 bitpad=-6 chroma=2x2 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv420p10le chroma=1:1 flags=0x10 [planar]\n    0: p=0  st=2  o=0  sh=0  d=10\n    1: p=1  st=2  o=0  sh=0  d=10\n    2: p=2  st=2  o=0  sh=0  d=10\n```\n\n----------------------------------------\n\nTITLE: Command with Named Arguments\nDESCRIPTION: This snippet demonstrates how to use named arguments in a JSON command to improve readability and handle complex commands.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_8\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"command\": [\"get_property\", \"volume\"] }\n{ \"data\": 50.0, \"error\": \"success\" }\n```\n\n----------------------------------------\n\nTITLE: Playlist Information Properties in MPV Player\nDESCRIPTION: This section documents properties for accessing overall playlist information in MPV Player. It includes properties for retrieving the total number of entries, the original playlist path, and detailed information about each playlist entry through sub-properties.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_35\n\nLANGUAGE: plaintext\nCODE:\n```\nplaylist-count\n    Number of total playlist entries.\n\nplaylist-path\n    The original path of the playlist for the current entry before mpv expanded\n    the entries. Unavailable if the file was not originally associated with a\n    playlist in some way.\n\nplaylist\n    Playlist, current entry marked. Currently, the raw property value is\n    useless.\n\n    This has a number of sub-properties. Replace N with the 0-based playlist\n    entry index.\n\n    playlist/count\n        Number of playlist entries (same as playlist-count).\n\n    playlist/N/filename\n        Filename of the Nth entry.\n\n    playlist/N/playing\n        yes/true if the playlist-playing-pos property points to this\n        entry, no/false or unavailable otherwise.\n\n    playlist/N/current\n        yes/true if the playlist-current-pos property points to this\n        entry, no/false or unavailable otherwise.\n\n    playlist/N/title\n        Name of the Nth entry. Available if the playlist file contains\n        such fields and mpv's parser supports it for the given\n        playlist format, or if the playlist entry has been opened before and a\n        media-title other than filename has been acquired.\n\n    playlist/N/id\n        Unique ID for this entry. This is an automatically assigned integer ID\n        that is unique for the entire life time of the current mpv core\n        instance. Other commands, events, etc. use this as playlist_entry_id\n        fields.\n\n    playlist/N/playlist-path\n        The original path of the playlist for this entry before mpv expanded\n        it. Unavailable if the file was not originally associated with a playlist\n        in some way.\n\n    When querying the property with the client API using MPV_FORMAT_NODE,\n    or with Lua mp.get_property_native, this will return a mpv_node with\n    the following contents:\n\n    ::\n\n        MPV_FORMAT_NODE_ARRAY\n            MPV_FORMAT_NODE_MAP (for each playlist entry)\n                \"filename\"  MPV_FORMAT_STRING\n                \"current\"   MPV_FORMAT_FLAG (might be missing; since mpv 0.7.0)\n                \"playing\"   MPV_FORMAT_FLAG (same)\n                \"title\"     MPV_FORMAT_STRING (optional)\n                \"id\"        MPV_FORMAT_INT64\n```\n\n----------------------------------------\n\nTITLE: --ordered-chapters=<yes|no> for MPV Player\nDESCRIPTION: This option enables the support for Matroska ordered chapters, allowing MPV to load and respect chapter orders specified in the main file. Input can be 'yes' or 'no', which dictates whether ordered chapters are utilized during playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\n--ordered-chapters=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Configuring Embedded Fonts Usage in MPV Player\nDESCRIPTION: Enables or disables the use of fonts embedded in Matroska container files and ASS scripts for SSA/ASS subtitle rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_86\n\nLANGUAGE: config\nCODE:\n```\n--embeddedfonts=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Numeric Properties in Lua\nDESCRIPTION: Sets a property to a numeric value. Automatically determines whether to pass an integer or float to mpv based on the value provided. Returns true on success, or nil and error message on failure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nmp.set_property_number(name, value)\n```\n\n----------------------------------------\n\nTITLE: OSC Visibility Script Commands in mpv\nDESCRIPTION: These script commands control the visibility of the mpv OSC. The `osc-visibility` command allows setting the visibility mode to `never`, `auto`, or `always`, or cycling through them. The `osc-show` and `osc-hide` commands directly trigger the OSC to show or hide when the visibility mode is set to `auto`.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n\"osc-visibility\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"osc-show\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"osc-hide\"\n```\n\n----------------------------------------\n\nTITLE: Dithering Algorithm Selection in MPV\nDESCRIPTION: Option to select the dithering algorithm used for color quantization, including fruit (default), ordered, error-diffusion, or no dithering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_191\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--dither=<fruit|ordered|error-diffusion|no>\"    Select dithering algorithm (default: fruit). (Normally, the\n    ``--dither-depth`` option controls whether dithering is enabled.)\n\n    The ``error-diffusion`` option requires compute shader support. It also\n    requires large amount of shared memory to run, the size of which depends on\n    both the kernel (see ``--error-diffusion`` option below) and the height of\n    video window. It will fallback to ``fruit`` dithering if there is no enough\n    shared memory to run the shader.\n```\n\n----------------------------------------\n\nTITLE: Stitching Parts of Multiple Files\nDESCRIPTION: This snippet outlines how to use 'edl://' to stitch together different parts of files for playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_21\n\nLANGUAGE: plaintext\nCODE:\n```\n\"edl://[edl specification as in edl-mpv.rst]\"\n```\n\n----------------------------------------\n\nTITLE: Setting String Properties in Lua\nDESCRIPTION: Sets a property to a string value. Returns true on success, or nil and error message on failure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nmp.set_property(name, value)\n```\n\n----------------------------------------\n\nTITLE: Window Geometry and Sizing Configuration for MPV Player\nDESCRIPTION: Configuration options for controlling window geometry, size, and positioning. Includes options for initial window position, size constraints, aspect ratio maintenance, and screen placement.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_156\n\nLANGUAGE: config\nCODE:\n```\n--geometry=<[W[xH]][+-x+-y][/WS]>\n--geometry=<x:y>\n--autofit=<[W[xH]]>\n--autofit-larger=<[W[xH]]>\n--autofit-smaller=<[W[xH]]>\n--window-scale=<factor>\n```\n\n----------------------------------------\n\nTITLE: Playing a Local File with MPV\nDESCRIPTION: This snippet shows how to specify a local file as a URL using 'file://' protocol. It is intended for absolute paths.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\n\"file://PATH\"\n```\n\n----------------------------------------\n\nTITLE: Input Configuration Options\nDESCRIPTION: Command line options for configuring input handling in MPV player, including wheel preprocessing, keyboard behavior, touch emulation, and IME support.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_168\n\nLANGUAGE: plaintext\nCODE:\n```\n--input-preprocess-wheel=<yes|no>\n--input-right-alt-gr=<yes|no>\n--input-vo-keyboard=<yes|no>\n--input-touch-emulate-mouse=<yes|no>\n--input-dragging-deadzone=<N>\n--input-ime=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Screenshot Format Configuration\nDESCRIPTION: Available image format options for saving screenshots in MPV player.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_174\n\nLANGUAGE: config\nCODE:\n```\n:png:       PNG\n:jpg:       JPEG (default)\n:jpeg:      JPEG (alias for jpg)\n:webp:      WebP\n:jxl:       JPEG XL\n:avif:      AVIF\n```\n\n----------------------------------------\n\nTITLE: MPV Profile Configuration: YouTube Video Gamma Adjustment\nDESCRIPTION: This profile brightens videos containing \"youtube\" or \"youtu.be\" in their path by adjusting the gamma. It uses `profile-cond` with a Lua expression to find these strings in the video path.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_6\n\nLANGUAGE: ini\nCODE:\n```\n[youtube]\nprofile-cond=path:find('youtu%.?be')\ngamma=20\n```\n\n----------------------------------------\n\nTITLE: Defining Overlay Parameters in mpv Player API - Lua\nDESCRIPTION: This snippet details the parameters for adding an overlay to the mpv player with specific attributes. It includes parameter definitions such as id, format, data, resolution, and visibility attributes.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_12\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\nArbitrary integer that identifies the overlay. Multiple overlays can be\nadded by calling this command with different ``id`` parameters. Calling\nthis command with the same ``id`` replaces the previously set overlay.\n\nThere is a separate namespace for each libmpv client (i.e. IPC\nconnection, script), so IDs can be made up and assigned by the API user\nwithout conflicting with other API users.\n\nIf the libmpv client is destroyed, all overlays associated with it are\nalso deleted. In particular, connecting via ``--input-ipc-server``,\nadding an overlay, and disconnecting will remove the overlay immediately\nagain.\n\n``format``\n    String that gives the type of the overlay. Accepts the following values\n    (HTML rendering of this is broken, view the generated manpage instead,\n    or the raw RST source):\n\n    ``ass-events``\n        The ``data`` parameter is a string. The string is split on the\n        newline character. Every line is turned into the ``Text`` part of\n        a ``Dialogue`` ASS event. Timing is unused (but behavior of timing\n        dependent ASS tags may change in future mpv versions).\n\n        Note that it's better to put multiple lines into ``data``, instead\n        of adding multiple OSD overlays.\n\n        This provides 2 ASS ``Styles``. ``OSD`` contains the text style as\n        defined by the current ``--osd-...`` options. ``Default`` is\n        similar, and contains style that ``OSD`` would have if all options\n        were set to the default.\n\n        In addition, the ``res_x`` and ``res_y`` options specify the value\n        of the ASS ``PlayResX`` and ``PlayResY`` header fields. If ``res_y``\n        is set to 0, ``PlayResY`` is initialized to an arbitrary default\n        value (but note that the default for this command is 720, not 0).\n        If ``res_x`` is set to 0, ``PlayResX`` is set based on ``res_y``\n        such that a virtual ASS pixel has a square pixel aspect ratio.\n\n    ``none``\n        Special value that causes the overlay to be removed. Most parameters\n        other than ``id`` and ``format`` are mostly ignored.\n\n``data``\n    String defining the overlay contents according to the ``format``\n    parameter.\n\n``res_x``, ``res_y``\n    Used if ``format`` is set to ``ass-events`` (see description there).\n    Optional, defaults to 0/720.\n\n``z``\n    The Z order of the overlay. Optional, defaults to 0.\n\n    Note that Z order between different overlays of different formats is\n    static, and cannot be changed (currently, this means that bitmap\n    overlays added by ``overlay-add`` are always on top of the ASS overlays\n    added by ``osd-overlay``). In addition, the builtin OSD components are\n    always below any of the custom OSD. (This includes subtitles of any kind\n    as well as text rendered by ``show-text``.)\n\n    It's possible that future mpv versions will randomly change how Z order\n    between different OSD formats and builtin OSD is handled.\n\n``hidden``\n    If set to true, do not display this (default: false).\n\n``compute_bounds``\n    If set to true, attempt to determine bounds and write them to the\n    command's result value as ``x0``, ``x1``, ``y0``, ``y1`` rectangle\n    (default: false). If the rectangle is empty, not known, or somehow\ndegenerate, it is not set. ``x1``/``y1`` is the coordinate of the\n    bottom exclusive corner of the rectangle.\n\n    The result value may depend on the VO window size, and is based on the\n    last known window size at the time of the call. This means the results\n    may be different from what is actually rendered.\n\n    For ``ass-events``, the result rectangle is recomputed to ``PlayRes``\n    coordinates (``res_x``/``res_y``). If window size is not known, a\n    fallback is chosen.\n\n    You should be aware that this mechanism is very inefficient, as it\n    renders the full result, and then uses the bounding box of the rendered\n    bitmap list (even if ``hidden`` is set). It will flush various caches.\n    Its results also depend on the used libass version.\n\n    This feature is experimental, and may change in some way again.\n\n.. note::\n\n    Always use named arguments (``mpv_command_node()``). Lua scripts should\n    use the ``mp.create_osd_overlay()`` helper instead of invoking this\n    command directly.\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: --loop-playlist=<N|inf|force|no> for MPV Player\nDESCRIPTION: This command allows users to loop playback of a playlist a specified number of times, with options for infinite looping, disabling loops, and forcing playback even for files marked as failing. Expected inputs include a numeric value N or options like inf, no, and force. The primary output will be the repeated playback of the playlist according to the provided parameter.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n--loop-playlist=<N|inf|force|no>, --loop-playlist\n```\n\n----------------------------------------\n\nTITLE: OSD Level Configuration\nDESCRIPTION: Defines the three levels of OSD visibility and interaction behavior in MPV player.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_173\n\nLANGUAGE: config\nCODE:\n```\n:1: enabled (shows up only on user interaction)\n:2: enabled + current time visible by default\n:3: enabled + `--osd-status-msg` (current time and status by default)\n```\n\n----------------------------------------\n\nTITLE: FFmpeg libavfilter Graph Examples\nDESCRIPTION: These are usage examples of the lavfi option in mpv, showcasing how to apply filter graphs using FFmpeg's libavfilter. The examples demonstrate quoting and escaping techniques required to prevent conflicts between mpv's syntax and the filter graph syntax.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n``--vf=lavfi=[gradfun=20:30,vflip]``\n            ``'--vf=lavfi=\"gradfun=20:30,vflip\"'``\n            ``'--vf=lavfi=graph=\"gradfun=radius=30:strength=20,vflip\"'``\n```\n\n----------------------------------------\n\nTITLE: Enabling SDH Subtitle Filtering in MPV\nDESCRIPTION: Applies a filter to remove subtitle additions for the deaf or hard-of-hearing (SDH). Removes speaker labels and text enclosed within specified symbols.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_143\n\nLANGUAGE: shell\nCODE:\n```\n--sub-filter-sdh=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Loading Lua Scripts in MPV\nDESCRIPTION: This command allows users to load a Lua script in MPV using the `--script` option. The second variant permits loading multiple scripts by separating script paths with colons on Unix or semicolons on Windows. This is useful for enhancing MPV's functionality with custom scripts.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n--script=<filename> --scripts=file1.lua:file2.lua:...\n```\n\n----------------------------------------\n\nTITLE: Configuring scaletempo Audio Filter in mpv\nDESCRIPTION: Shows the syntax and options for the scaletempo audio filter, which scales audio tempo without altering pitch.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_3\n\nLANGUAGE: config\nCODE:\n```\n\"scaletempo[=option1:option2:...]\"\n```\n\n----------------------------------------\n\nTITLE: Playlist Loading with Security Options in mpv\nDESCRIPTION: This example demonstrates how to load a playlist in mpv and disable security checks using `--load-unsafe-playlists`. It illustrates how to apply the option only to the playlist itself and not its entries using command-line arguments.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n\"``mpv --{ --playlist=filename --load-unsafe-playlists --}``\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Synchronization Mode in MPV Player\nDESCRIPTION: Determines how MPV synchronizes audio and video. Different modes offer various tradeoffs between smooth playback, frame accuracy, and handling of display refresh rates.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_213\n\nLANGUAGE: ini\nCODE:\n```\n--video-sync=<audio|...>\n```\n\n----------------------------------------\n\nTITLE: Listing Available Video Output Drivers in mpv\nDESCRIPTION: Command to display a list of compiled-in video output drivers in mpv. This is useful for seeing which drivers are available on the current system.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--vo=help\n```\n\n----------------------------------------\n\nTITLE: Modifying Playlist Entries in mpv\nDESCRIPTION: Commands for clearing, removing, moving, and shuffling playlist entries in mpv. These provide control over playlist order and the ability to restore the order after shuffling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n``playlist-clear``\n    Clear the playlist, except the currently played file.\n\n``playlist-remove <index>``\n    Remove the playlist entry at the given index. Index values start counting\n    with 0. The special value ``current`` removes the current entry. Note that\n    removing the current entry also stops playback and starts playing the next\n    entry.\n\n``playlist-move <index1> <index2>``\n    Move the playlist entry at index1, so that it takes the place of the\n    entry index2.\n\n``playlist-shuffle``\n    Shuffle the playlist. This is similar to what is done on start if the\n    ``--shuffle`` option is used.\n\n``playlist-unshuffle``\n    Attempt to revert the previous ``playlist-shuffle`` command.\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in MPV Player (Lua)\nDESCRIPTION: This snippet demonstrates the 'screenshot' command in MPV, which allows taking screenshots with various options. It supports different flags like subtitles, video, window, and each-frame.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_17\n\nLANGUAGE: lua\nCODE:\n```\nscreenshot [<flags>]\n```\n\n----------------------------------------\n\nTITLE: Using Data Source from Memory\nDESCRIPTION: This snippet shows how to use 'memory://' to treat data as the source for playback directly.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\n\"memory://data\"\n```\n\n----------------------------------------\n\nTITLE: Using MPV Encoding Profiles (Bash)\nDESCRIPTION: Example command demonstrating how to use a pre-defined encoding profile with mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmpv infile --o=outfile.mp4 --profile=enc-to-bb-9000\n```\n\n----------------------------------------\n\nTITLE: --sstep=<sec> for MPV Player\nDESCRIPTION: This command configures skipping a defined number of seconds after processing every frame during playback. The main input is a numeric value indicating seconds, with implications on how playback progresses, especially in relation to keyframes if certain conditions are met.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\n--sstep=<sec>\n```\n\n----------------------------------------\n\nTITLE: Configuring Keep-Open Behavior in MPV\nDESCRIPTION: Options that control MPV's behavior when reaching the end of a file. 'keep-open' prevents the player from terminating and 'keep-open-pause' determines whether it should pause or stop at the end.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_152\n\nLANGUAGE: shell\nCODE:\n```\n--keep-open=<yes|no|always>\n```\n\nLANGUAGE: shell\nCODE:\n```\n--keep-open-pause=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Using scaletempo Audio Filter in mpv Command\nDESCRIPTION: Provides examples of using the scaletempo audio filter with various options in mpv command line.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n\"mpv --af=scaletempo --speed=1.2 media.ogg\"\n```\n\nLANGUAGE: shell\nCODE:\n```\n\"mpv --af=scaletempo=scale=1.2:speed=none --speed=1.2 media.ogg\"\n```\n\nLANGUAGE: shell\nCODE:\n```\n\"mpv --af=scaletempo=stride=30:overlap=.50:search=10 media.ogg\"\n```\n\nLANGUAGE: shell\nCODE:\n```\n\"mpv --af=scaletempo=scale=1.2:speed=pitch audio.ogg\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Video Output Profile Contents in mpv\nDESCRIPTION: Command to inspect the contents of a specific video output profile in mpv. This is useful for understanding what settings are included in predefined profiles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n--show-profile=<name>\n```\n\n----------------------------------------\n\nTITLE: Playing a Series of Images as Video\nDESCRIPTION: This code shows how to play a sequence of images treated as video using the 'mf://' protocol. It includes the format for paths interpreted as lists or patterns.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\n\"mf://[@listfile|filemask|glob|printf-format]\" \"--mf-...\"\n```\n\n----------------------------------------\n\nTITLE: Aligning Video in Window for mpv\nDESCRIPTION: These options control the alignment of the video within the window when video and window sizes don't match. Values range from -1 to 1.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_45\n\nLANGUAGE: config\nCODE:\n```\n\"--video-align-x=<-1-1>\", \"--video-align-y=<-1-1>\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Boolean Properties in Lua\nDESCRIPTION: Gets a property value as a Boolean. Returns a Boolean on success, or the default value and error on failure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nmp.get_property_bool(name [,def])\n```\n\n----------------------------------------\n\nTITLE: Configuring Hardware Decoding Codecs in mpv\nDESCRIPTION: This option allows specifying which codecs can use hardware decoding. It accepts a comma-separated list of codec names or 'all'.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_54\n\nLANGUAGE: config\nCODE:\n```\n\"--hwdec-codecs=<codec1,codec2,...|all>\"\n```\n\n----------------------------------------\n\nTITLE: Resetting Settings on Next File Playback\nDESCRIPTION: This option allows users to specify which settings should be reset when the next file in the playlist is played. Various options can be chosen to restore to their initial values, or the special 'all' keyword can be used to reset all changeable options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n--reset-on-next-file=<all|option1,option2,...>\n```\n\n----------------------------------------\n\nTITLE: GPU Video Rendering Filter\nDESCRIPTION: Convert video to RGB using Vulkan or OpenGL renderer with experimental performance characteristics and limitations\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_19\n\nLANGUAGE: configuration\nCODE:\n```\napi=<egl|vulkan>\nw=<pixels>\nh=<pixels>\n```\n\n----------------------------------------\n\nTITLE: Scaling Video Dimensions in mpv\nDESCRIPTION: These options multiply the video display size by the given value. Default is 1.0. Non-default values may result in cropping or black bars.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_44\n\nLANGUAGE: config\nCODE:\n```\n\"--video-scale-x=<value>\", \"--video-scale-y=<value>\"\n```\n\n----------------------------------------\n\nTITLE: Window Display Configuration Options for MPV Player\nDESCRIPTION: Configuration options that control window behavior, position, size, and appearance in MPV player. Includes settings for taskbar progress, window snapping, drag-and-drop behavior, window decorations, and positioning.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_155\n\nLANGUAGE: config\nCODE:\n```\n--taskbar-progress=<yes|no>\n--snap-window\n--drag-and-drop=<no|auto|replace|append|insert-next>\n--ontop\n--ontop-level=<window|system|desktop|level>\n--focus-on=<never|open|all>\n--window-corners=<default|donotround|round|roundsmall>\n--border=<yes|no>\n--title-bar=<yes|no>\n--on-all-workspaces\n```\n\n----------------------------------------\n\nTITLE: Adding a filter to the list in mpv\nDESCRIPTION: This snippet shows how to add a filter to the video filter list using the `--vf-add` option in mpv.  Similar to `--vf-append`, it adds the specified filter to the end of the current filter chain.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf-add=filter\"\n```\n\n----------------------------------------\n\nTITLE: Pitch Adjustment Examples with mpv\nDESCRIPTION: These examples demonstrate how to use the `--pitch` option in mpv to shift the audio pitch by specific intervals, measured in octaves and semitones. The examples are shown in the context of command-line usage.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n\"``--pitch=2``\n            Shifts the pitch up a full octave.\n        ``--pitch=0.5``\n            Shifts the pitch down an octave.\n        ``--pitch=1.498307`` (2^(7/12))\n            Shifts the pitch up a perfect fifth.\n        ``--pitch=0.667420`` (2^(-7/12))\n            Shifts the pitch down a perfect fifth.\n        ``--pitch=1.059463`` (2^(1/12))\n            Shifts the pitch up a semitone.\n        ``--pitch=0.943874`` (2^(-1/12))\n            Shifts the pitch down a semitone.\"\n```\n\n----------------------------------------\n\nTITLE: Removing a filter from the list in mpv\nDESCRIPTION: This snippet shows how to remove a filter from the video filter list using the `--vf-remove` option in mpv. The filter can be identified by its name and arguments, or by its label prefixed with `@`.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_5\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf-remove=filter\"\n```\n\n----------------------------------------\n\nTITLE: Compiling MPV in MSYS2\nDESCRIPTION: This snippet provides the commands necessary to compile and install MPV using Meson within the MSYS2 environment, ensuring that the build is configured and linked correctly.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# Set up the build directory with the desired configuration\nmeson setup build -Dlibmpv=true --prefix=$MSYSTEM_PREFIX\n\n# Compile\nmeson compile -C build\n\n# Optionally, install the compiled binaries\nmeson install -C build\n```\n\n----------------------------------------\n\nTITLE: Configuring Secondary Subtitle Position in MPV Player\nDESCRIPTION: Specifies the position of secondary subtitles on the screen, similar to --sub-pos but for secondary subtitles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_88\n\nLANGUAGE: config\nCODE:\n```\n--secondary-sub-pos=<0-150>\n```\n\n----------------------------------------\n\nTITLE: Playlist Position Properties in MPV Player\nDESCRIPTION: This section details properties for reading and manipulating the current position in the playlist. These properties allow getting the current playlist position (both 0-based and 1-based), the 'current' playlist item that determines what plays next, and the currently 'playing' item.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_34\n\nLANGUAGE: plaintext\nCODE:\n```\nplaylist-pos (RW)\n    Current position on playlist. The first entry is on position 0. Writing to\n    this property may start playback at the new position.\n\n    In some cases, this is not necessarily the currently playing file. See\n    explanation of current and playing flags in playlist.\n\n    If there the playlist is empty, or if it's non-empty, but no entry is\n    \"current\", this property returns -1. Likewise, writing -1 will put the\n    player into idle mode (or exit playback if idle mode is not enabled). If an\n    out of range index is written to the property, this behaves as if writing -1.\n    (Before mpv 0.33.0, instead of returning -1, this property was unavailable\n    if no playlist entry was current.)\n\n    Writing the current value back to the property will have no effect.\n    Use playlist-play-index to restart the playback of the current entry if\n    desired.\n\nplaylist-pos-1 (RW)\n    Same as playlist-pos, but 1-based.\n\nplaylist-current-pos (RW)\n    Index of the \"current\" item on playlist. This usually, but not necessarily,\n    the currently playing item (see playlist-playing-pos). Depending on the\n    exact internal state of the player, it may refer to the playlist item to\n    play next, or the playlist item used to determine what to play next.\n\n    For reading, this is exactly the same as playlist-pos.\n\n    For writing, this *only* sets the position of the \"current\" item, without\n    stopping playback of the current file (or starting playback, if this is done\n    in idle mode). Use -1 to remove the current flag.\n\n    This property is only vaguely useful. If set during playback, it will\n    typically cause the playlist entry *after* it to be played next. Another\n    possibly odd observable state is that if playlist-next is run during\n    playback, this property is set to the playlist entry to play next (unlike\n    the previous case). There is an internal flag that decides whether the\n    current playlist entry or the next one should be played, and this flag is\n    currently inaccessible for API users. (Whether this behavior will kept is\n    possibly subject to change.)\n\nplaylist-playing-pos\n    Index of the \"playing\" item on playlist. A playlist item is \"playing\" if\n    it's being loaded, actually playing, or being unloaded. This property is set\n    during the MPV_EVENT_START_FILE (start-file) and the\n    MPV_EVENT_START_END (end-file) events. Outside of that, it returns\n    -1. If the playlist entry was somehow removed during playback, but playback\n    hasn't stopped yet, or is in progress of being stopped, it also returns -1.\n    (This can happen at least during state transitions.)\n\n    In the \"playing\" state, this is usually the same as playlist-pos, except\n    during state changes, or if playlist-current-pos was written explicitly.\n```\n\n----------------------------------------\n\nTITLE: Setting Video Output Levels in mpv\nDESCRIPTION: This option sets the RGB color levels used for YUV to RGB conversion. It can be set to 'auto', 'limited', or 'full' range.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_53\n\nLANGUAGE: config\nCODE:\n```\n\"--video-output-levels=<outputlevels>\"\n```\n\n----------------------------------------\n\nTITLE: Software Scaler Configuration - MPV Player\nDESCRIPTION: Settings for controlling software scaling behavior, including algorithm selection, blur filters, sharpening, and optimization options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_177\n\nLANGUAGE: config\nCODE:\n```\n--sws-scaler=<name>\n--sws-lgb=<0-100>\n--sws-cgb=<0-100>\n--sws-ls=<-100-100>\n--sws-cs=<-100-100>\n--sws-chs=<h>\n--sws-cvs=<v>\n--sws-bitexact=<yes|no>\n--sws-fast=<yes|no>\n--sws-allow-zimg=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Video Codec Options\nDESCRIPTION: This snippet allows users to define specific options for the video codec when using libavcodec, enabling customization of the video output during encoding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n--ovcopts=<options>\n```\n\n----------------------------------------\n\nTITLE: Configuring Script Options for MPV\nDESCRIPTION: This command is used to set options for loading Lua scripts in MPV. The `--script-opt` and `--script-opts` options provide methods for adding options either individually or as a list, allowing for greater control over the functionality of the scripts being used.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n--script-opt=<key=value> --script-opts=key1=value1,key2=value2,...\n```\n\n----------------------------------------\n\nTITLE: Audio Resampler Configuration - MPV Player\nDESCRIPTION: Audio resampling configuration options including filter size, phase shift, cutoff frequency, and normalization settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_178\n\nLANGUAGE: config\nCODE:\n```\n--audio-resample-filter-size=<length>\n--audio-resample-phase-shift=<count>\n--audio-resample-cutoff=<cutoff>\n--audio-resample-linear=<yes|no>\n--audio-normalize-downmix=<yes|no>\n--audio-resample-max-output-size=<length>\n--audio-swresample-o=<string>\n```\n\n----------------------------------------\n\nTITLE: Configuring ASS Style Overrides in MPV Player\nDESCRIPTION: Overrides specific style or script info parameters for ASS subtitles. This is a string list option that allows customizing various style properties.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_90\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-style-overrides=<[Style.]Param=Value[,...]>\n```\n\n----------------------------------------\n\nTITLE: OSD Bar Styling Options\nDESCRIPTION: Configuration options for customizing the appearance and positioning of the OSD progress bar.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_171\n\nLANGUAGE: plaintext\nCODE:\n```\n--osd-bar-align-x=<-1-1>\n--osd-bar-align-y=<-1-1>\n--osd-bar-w=<1-100>\n--osd-bar-h=<0.1-50>\n--osd-bar-outline-size=<size>\n--osd-bar-marker-scale=<0-100>\n--osd-bar-marker-min-size=<size>\n--osd-bar-marker-style=<none|triangle|line>\n```\n\n----------------------------------------\n\nTITLE: Configuring ALSA Audio Device in MPV\nDESCRIPTION: Example demonstrating how to specify an ALSA audio device in MPV, contrasting with the older MPlayer syntax. Shows how to use the dmix:default device with the newer syntax format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_58\n\nLANGUAGE: bash\nCODE:\n```\n--audio-device=alsa/dmix:default\n```\n\n----------------------------------------\n\nTITLE: MPV Profile Configuration: HD Video Hue Adjustment\nDESCRIPTION: This profile automatically adjusts the hue of the video if its width is greater than or equal to 1280 pixels. It utilizes the `profile-cond` option with a Lua expression to check the video width.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_5\n\nLANGUAGE: ini\nCODE:\n```\n[something]\nprofile-desc=HD video sucks\nprofile-cond=width >= 1280\nhue=-50\n```\n\n----------------------------------------\n\nTITLE: MPV SDL Audio Driver\nDESCRIPTION: Describes the SDL 2.0+ audio output driver for MPV, suitable for compatibility with foreign environments. It supports the ``sdl-buflen`` global option for setting the audio buffer length in seconds.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n``sdl``\n    SDL 2.0+ audio output driver. Should work on any platform supported by SDL\n    2.0, but may require the ``SDL_AUDIODRIVER`` environment variable to be set\n    appropriately for your system.\n\n    .. note:: This driver is for compatibility with extremely foreign\n              environments, such as systems where none of the other drivers\n              are available.\n\n    The following global options are supported by this audio output:\n\n    ``--sdl-buflen=<length>``\n        Sets the audio buffer length in seconds. Is used only as a hint by the\n        sound system. Playing a file with ``-v`` will show the requested and\n        obtained exact buffer size. A value of 0 selects the sound system\n        default.\n```\n\n----------------------------------------\n\nTITLE: Forcing Window Creation in MPV\nDESCRIPTION: Option to create a video output window even when there is no video content, useful for GUI-like applications. The window creation timing can be controlled with the 'immediate' parameter.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_154\n\nLANGUAGE: shell\nCODE:\n```\n--force-window=<yes|no|immediate>\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Adjustment Parameters in MPV\nDESCRIPTION: These options allow adjusting video contrast, saturation, gamma, and hue. Values range from -100 to 100, with 0 as default. Not all video output drivers support these adjustments.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_161\n\nLANGUAGE: config\nCODE:\n```\n--contrast=<-100-100>\n--saturation=<-100-100>\n--gamma=<-100-100>\n--hue=<-100-100>\n```\n\n----------------------------------------\n\nTITLE: Specifying Audio Demuxer Type in MPV\nDESCRIPTION: Sets the audio demuxer to use with --audio-file. Adding '+' before the name forces the demuxer, skipping some checks. A list of available demuxers can be shown with --audio-demuxer=help.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_74\n\nLANGUAGE: bash\nCODE:\n```\n--audio-demuxer=<[+]name>\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Format for Encoding\nDESCRIPTION: This snippet allows the user to specify the output format for their encoded files. It overrides any automatic detection based on the filename's extension.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--of=<format>\n```\n\n----------------------------------------\n\nTITLE: Example: Specifying MP3 Encoding\nDESCRIPTION: This example illustrates how to select MP3 encoding with a specific bitrate of 128 kbps, providing a practical application of the options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n--oac=libmp3lame --oacopts=b=128000\n```\n\n----------------------------------------\n\nTITLE: Adjusting Video Zoom in mpv\nDESCRIPTION: This option adjusts the video display scale factor using a logarithmic scale. Value 0 is unscaled, 1 is twice the size, -2 is one-fourth the size.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_43\n\nLANGUAGE: config\nCODE:\n```\n\"--video-zoom=<value>\"\n```\n\n----------------------------------------\n\nTITLE: YouTube-DL Raw Options Examples\nDESCRIPTION: Examples of how to pass raw options to YouTube-DL when using MPV, including setting username/password, forcing IPv6, and configuring proxies.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n--ytdl-raw-options=username=user,password=pass\n--ytdl-raw-options=force-ipv6=\n--ytdl-raw-options=proxy=[http://127.0.0.1:3128]\n--ytdl-raw-options-append=proxy=http://127.0.0.1:3128\n```\n\n----------------------------------------\n\nTITLE: Configuring Autosync in MPV Player\nDESCRIPTION: The --autosync option smooths out problems with sound drivers that don't implement perfect audio delay measurement, settling A/V sync offsets in about 1-2 seconds.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_211\n\nLANGUAGE: ini\nCODE:\n```\n--autosync=30\n```\n\n----------------------------------------\n\nTITLE: Creating Wrap Files for Dependencies\nDESCRIPTION: This snippet shows how to create wrap files for integrating external dependencies like libplacebo and libass into the mpv build process. Wrap files specify the repository URL and other parameters necessary for Meson to fetch the dependencies.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > subprojects/libplacebo.wrap\n[wrap-git]\nurl = https://github.com/haasn/libplacebo\nrevision = master\ndepth = 1\nclone-recursive = true\nEOF\n\ncat <<EOF > subprojects/libass.wrap\n[wrap-git]\nrevision = master\nurl = https://github.com/libass/libass\ndepth = 1\nEOF\n\ncat <<EOF > subprojects/ffmpeg.wrap\n[wrap-git]\nurl = https://gitlab.freedesktop.org/gstreamer/meson-ports/ffmpeg.git\nrevision = meson-7.1\ndepth = 1\n[provide]\nlibavcodec = libavcodec_dep\nlibavdevice = libavdevice_dep\nlibavfilter = libavfilter_dep\nlibavformat = libavformat_dep\nlibavutil = libavutil_dep\nlibswresample = libswresample_dep\nlibswscale = libswscale_dep\nEOF\n```\n\n----------------------------------------\n\nTITLE: Applying video parameter overrides in mpv using format filter\nDESCRIPTION: This snippet demonstrates the usage of the `format` filter in mpv to apply video parameter overrides with optional conversion. The parameters `fmt`, `convert`, `colormatrix` and `colorlevels` are explained. Use `--vf=format=fmt=help` for a list of available formats.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_9\n\nLANGUAGE: Text\nCODE:\n```\n\"format=fmt=<value>:colormatrix=<value>:...\"\n```\n\n----------------------------------------\n\nTITLE: Clearing the filter list in mpv\nDESCRIPTION: This snippet shows how to completely empty the video filter list using the `--vf-clr` option in mpv. This removes all filters that are currently applied.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_7\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf-clr\"\n```\n\n----------------------------------------\n\nTITLE: Subtitle Timing Properties in MPV Player\nDESCRIPTION: This section documents properties for accessing subtitle timing information in MPV Player. It includes properties for retrieving start and end times of both primary and secondary subtitles, with options for including millisecond precision.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_33\n\nLANGUAGE: plaintext\nCODE:\n```\nsub-start\n    The current subtitle start time (in seconds). If there's multiple current\n    subtitles, returns the first start time. If no current subtitle is present\n    null is returned instead.\n\n    This has a sub-property:\n\n    sub-start/full\n        sub-start with milliseconds.\n\nsecondary-sub-start\n    Same as sub-start, but for the secondary subtitles.\n\nsub-end\n    The current subtitle end time (in seconds). If there's multiple current\n    subtitles, return the last end time. If no current subtitle is present, or\n    if it's present but has unknown or incorrect duration, null is returned\n    instead.\n\n    This has a sub-property:\n\n    sub-end/full\n        sub-end with milliseconds.\n\nsecondary-sub-end\n    Same as sub-end, but for the secondary subtitles.\n```\n\n----------------------------------------\n\nTITLE: MPV Profile Configuration: Fullscreen Rotation\nDESCRIPTION: This profile rotates the video when entering fullscreen and restores the original video filters when exiting, leveraging `profile-restore` and `vf-add`. This is a simple example of conditionally modifying video output.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_7\n\nLANGUAGE: ini\nCODE:\n```\n[something]\nprofile-desc=Mess up video when entering fullscreen\nprofile-cond=fullscreen\nprofile-restore=copy\nvf-add=rotate=PI/2  # rotate by 90 degrees\n```\n\n----------------------------------------\n\nTITLE: Setting Audio Delay in MPV\nDESCRIPTION: Adjusts the audio timing relative to video in seconds. Positive values delay the audio, while negative values delay the video, allowing for manual A/V sync correction.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_72\n\nLANGUAGE: bash\nCODE:\n```\n--audio-delay=<sec>\n```\n\n----------------------------------------\n\nTITLE: Configuring Backward Playback Buffer Settings\nDESCRIPTION: Options for controlling buffer sizes and behavior during backward video and audio playback, including reversal buffer, overlap, and batch decoding parameters\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n--video-reversal-buffer=<bytesize>\n```\n\nLANGUAGE: bash\nCODE:\n```\n--audio-reversal-buffer=<bytesize>\n```\n\nLANGUAGE: bash\nCODE:\n```\n--video-backward-overlap=<auto|number>\n```\n\nLANGUAGE: bash\nCODE:\n```\n--audio-backward-overlap=<auto|number>\n```\n\n----------------------------------------\n\nTITLE: HDR Peak Detection Options in MPV Player\nDESCRIPTION: Documents options for dynamic HDR brightness analysis including --hdr-compute-peak for per-frame peak brightness computation, delayed peak detection, and parameters that control the peak detection algorithm behavior including thresholds and decay rates.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_205\n\nLANGUAGE: plaintext\nCODE:\n```\n``--hdr-compute-peak=<auto|yes|no>``\n    Compute the HDR peak and frame average brightness per-frame instead of\n    relying on tagged metadata. These values are averaged over local regions as\n    well as over several frames to prevent the value from jittering around too\n    much. This option basically gives you dynamic, per-scene tone mapping.\n    Requires compute shaders, which is a fairly recent OpenGL feature, and will\n    probably also perform horribly on some drivers, so enable at your own risk.\n    The special value ``auto`` (default) will enable HDR peak computation\n    automatically if compute shaders and SSBOs are supported.\n\n``--allow-delayed-peak-detect``\n    When using ``--hdr-compute-peak``, allow delaying the detected peak by a\n    frame when beneficial for performance. In particular, this is required to\n    avoid an unnecessary FBO indirection when no advanced rendering is required\n    otherwise. Has no effect if there already is an indirect pass, such as when\n    advanced scaling is enabled. Defaults to no. (Only affects\n    ``--vo=gpu-next``, note that ``--vo=gpu`` always delays the peak.)\n\n``--hdr-peak-percentile=<0.0..100.0>``\n    Which percentile of the input image brightness histogram to consider as the\n    true peak of the scene. If this is set to 100 (default), the\n    brightest pixel is measured. Otherwise, the top of the frequency\n    distribution is progressively cut off. Setting this too low will cause\n    clipping of very bright details, but can improve the dynamic brightness\n    range of scenes with very bright isolated highlights. Values other than 100\n    come with a small performance penalty. (Only for ``--vo=gpu-next``)\n\n``--hdr-peak-decay-rate=<0.0..1000.0>``\n    The decay rate used for the HDR peak detection algorithm (default: 20.0).\n    This is only relevant when ``--hdr-compute-peak`` is enabled. Higher values\n    make the peak decay more slowly, leading to more stable values at the cost\n    of more \"eye adaptation\"-like effects (although this is mitigated somewhat\n    by ``--hdr-scene-threshold``). A value of 0.0 (the lowest possible) disables\n    all averaging, meaning each frame's value is used directly as measured,\n    but doing this is not recommended for \"noisy\" sources since it may lead\n    to excessive flicker. (In signal theory terms, this controls the time\n    constant \"tau\" of an IIR low pass filter)\n\n``--hdr-scene-threshold-low=<0.0..100.0>``, ``--hdr-scene-threshold-high=<0.0..100.0>``\n    The lower and upper thresholds (in dB) for a brightness difference\n    to be considered a scene change (default: 1.0 low, 3.0 high). This is only\n    relevant when ``--hdr-compute-peak`` is enabled. Normally, small\n    fluctuations in the frame brightness are compensated for by the peak\n    averaging mechanism, but for large jumps in the brightness this can result\n    in the frame remaining too bright or too dark for up to several seconds,\n    depending on the value of ``--hdr-peak-decay-rate``. To counteract this,\n    when the brightness between the running average and the current frame\n    exceeds the low threshold, mpv will make the averaging filter more\n    aggressive, up to the limit of the high threshold (at which point the\n    filter becomes instant).\n```\n\n----------------------------------------\n\nTITLE: Accessing Subtitle Text Properties in MPV Player\nDESCRIPTION: This section covers properties used to access subtitle text content in MPV Player. It includes properties for both primary and secondary subtitles, with various formatting options such as plain text, ASS format, and full ASS event data.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_32\n\nLANGUAGE: plaintext\nCODE:\n```\nsub-text\n    The current subtitle text regardless of sub visibility. Formatting is\n    stripped. If the subtitle is not text-based (i.e. DVD/BD subtitles), an\n    empty string is returned.\n\n    This has sub-properties for different formats:\n\n    sub-text/ass\n        Like sub-text, but return the text in ASS format. Text subtitles in\n        other formats are converted. For native ASS subtitles, events that do\n        not contain any text (but vector drawings etc.) are not filtered out. If\n        multiple events match with the current playback time, they are concatenated\n        with line breaks. Contains only the \"Text\" part of the events.\n\n        This property is not enough to render ASS subtitles correctly, because ASS\n        header and per-event metadata are not returned. Use /ass-full for that.\n\n    sub-text/ass-full\n        Like sub-text-ass, but return the full event with all fields, formatted as\n        lines in a .ass text file. Use with sub-ass-extradata for style information.\n```\n\n----------------------------------------\n\nTITLE: Track List Properties in MPV Player\nDESCRIPTION: This section documents the track-list property and its sub-properties in MPV Player. It provides access to detailed information about audio, video, and subtitle tracks, including track IDs, types, titles, languages, and various track flags.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_36\n\nLANGUAGE: plaintext\nCODE:\n```\ntrack-list\n    List of audio/video/sub tracks, current entry marked.\n\n    This has a number of sub-properties. Replace N with the 0-based track\n    index.\n\n    track-list/count\n        Total number of tracks.\n\n    track-list/video\n        The list of video tracks. This is only usable for printing and its value\n        can't be retrieved.\n\n    track-list/audio\n        The list of audio tracks. This is only usable for printing and its value\n        can't be retrieved.\n\n    track-list/sub\n        The list of sub tracks. This is only usable for printing and its value\n        can't be retrieved.\n\n    track-list/N/id\n        The ID as it's used for --sid/--aid/--vid. This is unique\n        within tracks of the same type (sub/audio/video), but otherwise not.\n\n    track-list/N/type\n        String describing the media type. One of audio, video, sub.\n\n    track-list/N/src-id\n        Track ID as used in the source file. Not always available. (It is\n        missing if the format has no native ID, if the track is a pseudo-track\n        that does not exist in this way in the actual file, or if the format\n        is handled by libavformat, and the format was not whitelisted as having\n        track IDs.)\n\n    track-list/N/title\n        Track title as it is stored in the file. Not always available.\n\n    track-list/N/lang\n        Track language as identified by the file. Not always available.\n\n    track-list/N/image\n        yes/true if this is a video track that consists of a single\n        picture, no/false or unavailable otherwise. The heuristic used to\n        determine if a stream is an image doesn't attempt to detect images in\n        codecs normally used for videos. Otherwise, it is reliable.\n\n    track-list/N/albumart\n        yes/true if this is an image embedded in an audio file or external\n        cover art, no/false or unavailable otherwise.\n\n    track-list/N/default\n        yes/true if the track has the default flag set in the file,\n        no/false or unavailable otherwise.\n\n    track-list/N/forced\n        yes/true if the track has the forced flag set in the file,\n        no/false or unavailable otherwise.\n\n    track-list/N/dependent\n        yes/true if the track has the dependent flag set in the file,\n        no/false or unavailable otherwise.\n\n    track-list/N/visual-impaired\n        yes/true if the track has the visual impaired flag set in the file,\n        no/false or unavailable otherwise.\n\n    track-list/N/hearing-impaired\n        yes/true if the track has the hearing impaired flag set in the file,\n```\n\n----------------------------------------\n\nTITLE: Playing Specific Chapters in MPV (Shell)\nDESCRIPTION: This command plays chapters 2 and 3 of a video file, then exits. It shows how to use chapter numbers with the --start and --end options for precise playback control.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nmpv --start='#2' --end='#4'\n```\n\n----------------------------------------\n\nTITLE: GPU Debugging Option in MPV\nDESCRIPTION: Option to enable GPU debugging features, which varies by API type - for OpenGL it enables glGetError() calls and requests a debug context, while for Vulkan it enables validation layers.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_194\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--gpu-debug\"    Enables GPU debugging. What this means depends on the API type. For OpenGL,\n    it calls ``glGetError()``, and requests a debug context. For Vulkan, it\n    enables validation layers.\n```\n\n----------------------------------------\n\nTITLE: VP8 Encoding for WebM with MPV (Bash)\nDESCRIPTION: Example command for encoding VP8 video with Opus audio in a WebM container using mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmpv infile -o outfile.mkv \\\n  --of=webm \\\n  --ovc=libvpx --ovcopts=qmin=6,b=1000000k \\\n  --oac=libopus --oacopts=qscale=3\n```\n\n----------------------------------------\n\nTITLE: PipeWire Driver Configuration\nDESCRIPTION: Configuration options for PipeWire audio driver, including buffer size and remote daemon settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_6\n\nLANGUAGE: config\nCODE:\n```\n--pipewire-buffer=<1-2000|native>\n--pipewire-remote=<remote>\n```\n\n----------------------------------------\n\nTITLE: Configuring Audio Passthrough for Compressed Formats in MPV\nDESCRIPTION: Enables compressed audio passthrough for specified codecs over S/PDIF or HDMI. Supported codecs include ac3, dts, dts-hd, eac3, and truehd, which can be combined with commas.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_62\n\nLANGUAGE: bash\nCODE:\n```\n--audio-spdif=<codecs>\n```\n\n----------------------------------------\n\nTITLE: Excluding Metadata from Output File\nDESCRIPTION: This command allows the user to specify which metadata tags to exclude when copying from the input file, thus preventing unwanted information in the output.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n--oremove-metadata=<metadata-tag[,metadata-tag,...]>\n```\n\n----------------------------------------\n\nTITLE: Setting Video Timing Offset in MPV Player\nDESCRIPTION: Controls how long before the target display time the frame should be rendered. This option affects when the rendering of a frame begins relative to when it will be displayed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_212\n\nLANGUAGE: ini\nCODE:\n```\n--video-timing-offset=<seconds>\n```\n\n----------------------------------------\n\nTITLE: Input Logging and Display in MPV Lua\nDESCRIPTION: Demonstrates how to use input.set_log to replace the MPV console's log buffer. The log is a table of strings or tables that define text, style, and terminal_style. Expected input is a table, and output is the updated console log display.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_21\n\nLANGUAGE: Lua\nCODE:\n```\ninput.set_log({\n    \"regular text\",\n    {\n        text = \"error text\",\n        style = \"{\\\\c&H7a77f2&}\",\n        terminal_style = \"\\027[31m\",\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Regular Expression Filters for Subtitles in MPV\nDESCRIPTION: Defines a list of regular expressions to match on text subtitles and remove any lines that match. Useful for filtering out unwanted subtitle content.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_146\n\nLANGUAGE: shell\nCODE:\n```\n--sub-filter-regex-...=...\n```\n\n----------------------------------------\n\nTITLE: Polyfill for `exit()` function in Lua for older mpv versions\nDESCRIPTION: This code snippet provides a polyfill for the `exit()` function, ensuring script termination in mpv versions older than 0.40. It checks if the `_G.exit` global variable is defined. If not, it defines a function named `exit` which sets the `mp.keep_running` flag to `false`, effectively stopping the script at the end of the current event loop iteration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_19\n\nLANGUAGE: lua\nCODE:\n```\n\"if not _G.exit then\\n    function exit()\\n        mp.keep_running = false\\n    end\\nend\"\n```\n\n----------------------------------------\n\nTITLE: Video Aspect Ratio Override\nDESCRIPTION: Command option for overriding video aspect ratio when information is incorrect or missing.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_37\n\nLANGUAGE: shell\nCODE:\n```\n--video-aspect-override=<ratio|no>\n```\n\n----------------------------------------\n\nTITLE: Controlling Screen Selection in MPV\nDESCRIPTION: Options for specifying which screen to display video on in multi-monitor setups. The parameter can be a numeric screen ID or 'default'. Has platform-specific behaviors on X11 and Wayland.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_150\n\nLANGUAGE: shell\nCODE:\n```\n--screen=<default|0-32>\n```\n\n----------------------------------------\n\nTITLE: Setting Video Rotation in mpv\nDESCRIPTION: This option rotates the video clockwise by the specified number of degrees. Special value 'no' disables rotation entirely.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_41\n\nLANGUAGE: config\nCODE:\n```\n\"--video-rotate=<0-359|no>\"\n```\n\n----------------------------------------\n\nTITLE: Subtitle Position Adjustment Example\nDESCRIPTION: This example demonstrates moving subtitle rendering before the eq filter. This configuration allows for subtitle colors and video to be under the influence of video equalizer settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n``--vf=sub,eq``\n```\n\n----------------------------------------\n\nTITLE: Passing Options to LibAVCodec Audio Decoder in MPV\nDESCRIPTION: Allows passing key-value AVOptions directly to the libavcodec audio decoder. The full list of available AVOptions can be found in the FFmpeg manual.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_78\n\nLANGUAGE: bash\nCODE:\n```\n--ad-lavc-o=<key>=<value>[,<key>=<value>[,...]]\n```\n\n----------------------------------------\n\nTITLE: Configuring ASS Override Behavior in MPV Player\nDESCRIPTION: Controls how user style overrides are applied to ASS subtitles. Options range from no overrides to forcing all options, with varying degrees of impact on subtitle rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_98\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-override=<no|yes|scale|force|strip>\n```\n\n----------------------------------------\n\nTITLE: VDPAU Video Processing Configuration\nDESCRIPTION: Configuration options for VDPAU video processing with advanced deinterlacing and scaling features\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_16\n\nLANGUAGE: configuration\nCODE:\n```\nsharpen=<-1-1>\ndenoise=<0-1>\ndeint=<yes|no>\ndeint-mode=<first-field|bob|temporal|temporal-spatial>\n```\n\n----------------------------------------\n\nTITLE: Building libmpv\nDESCRIPTION: This snippet outlines the commands to build either a static or shared version of the libmpv library using Meson and Ninja.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# For a static library\nmeson configure build -Dlibmpv=true -Ddefault_library=static\nninja -C build libmpv.a\n\n# For a shared library\nmeson configure build -Dlibmpv=true -Ddefault_library=shared\nninja -C build libmpv-2.dll\n```\n\n----------------------------------------\n\nTITLE: Specifying Additional Subtitle Search Paths in MPV\nDESCRIPTION: This option specifies extra directories to search for subtitles matching the video. It supports multiple directories and both relative and absolute paths.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_119\n\nLANGUAGE: config\nCODE:\n```\n--sub-file-paths=<path-list>\n```\n\n----------------------------------------\n\nTITLE: Applying Justification to ASS Subtitles in MPV\nDESCRIPTION: Applies justification as defined by --sub-justify on ASS subtitles if --sub-ass-override is not set to 'no'.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_140\n\nLANGUAGE: shell\nCODE:\n```\n--sub-ass-justify=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Direct3D 11 Video Post-Processing Configuration\nDESCRIPTION: Configuration options for Direct3D 11 video processing with support for deinterlacing, scaling, and HDR processing\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_17\n\nLANGUAGE: configuration\nCODE:\n```\nformat\ndeint=<yes|no>\nscale\nscaling-mode=<standard,intel,nvidia>\ninterlaced-only=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Exiting Fullscreen on Pause in JavaScript for mpv\nDESCRIPTION: This JavaScript code snippet demonstrates how to leave fullscreen mode when the player is paused in mpv. It uses the observe_property function to watch for changes in the pause state.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/javascript.rst#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction on_pause_change(name, value) {\n    if (value == true)\n        mp.set_property(\"fullscreen\", \"no\");\n}\nmp.observe_property(\"pause\", \"bool\", on_pause_change);\n```\n\n----------------------------------------\n\nTITLE: Controlling Audio Decoder Downmixing in MPV\nDESCRIPTION: Determines whether to request audio channel downmixing from the decoder. This is useful for playing surround audio on stereo systems with decoders that support channel remixing (like AC-3, AAC, DTS).\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_76\n\nLANGUAGE: bash\nCODE:\n```\n--ad-lavc-downmix=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: MPV Filter Configuration Format\nDESCRIPTION: Defines the format for video and audio filter configurations when accessed via MPV_FORMAT_NODE or Lua mp.get_property_native()\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_39\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (for each filter entry)\n        \"name\"      MPV_FORMAT_STRING\n        \"label\"     MPV_FORMAT_STRING [optional]\n        \"enabled\"   MPV_FORMAT_FLAG [optional]\n        \"params\"    MPV_FORMAT_NODE_MAP [optional]\n            \"key\"   MPV_FORMAT_STRING\n            \"value\" MPV_FORMAT_STRING\n```\n\n----------------------------------------\n\nTITLE: Setting Image Display Duration in MPV\nDESCRIPTION: Option to control how long image files are displayed before MPV automatically progresses to the next file. Can be set to a specific number of seconds or 'inf' for indefinite display.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_153\n\nLANGUAGE: shell\nCODE:\n```\n--image-display-duration=<seconds|inf>\n```\n\n----------------------------------------\n\nTITLE: Video Sync Configuration\nDESCRIPTION: Options for controlling video synchronization and A/V sync correction in MPV player.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_210\n\nLANGUAGE: configuration\nCODE:\n```\n--mc=<seconds/frame>\n--autosync=<factor>\n```\n\n----------------------------------------\n\nTITLE: OSD Basic Configuration Options\nDESCRIPTION: Core OSD (On-Screen Display) configuration options for controlling visibility, positioning, and basic display behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_169\n\nLANGUAGE: plaintext\nCODE:\n```\n--osc=<yes|no>\n--osd-bar=<yes|no>\n--osd-on-seek=<no,bar,msg,msg-bar>\n--osd-duration=<time>\n--osd-font=<name>\n--osd-font-size=<size>\n```\n\n----------------------------------------\n\nTITLE: Querying metadata Property in Lua\nDESCRIPTION: This snippet shows the structure of the metadata property when queried using mp.get_property_native in Lua. It returns a map of key-value pairs representing metadata entries.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_29\n\nLANGUAGE: Lua\nCODE:\n```\nMPV_FORMAT_NODE_MAP\n    (key and string value for each metadata entry)\n```\n\n----------------------------------------\n\nTITLE: Defining Basic EDL Structure\nDESCRIPTION: This code snippet illustrates the basic structure of an EDL file with segment entries including source files, start times, and lengths. The example shows how to skip and play segments from multiple files seamlessly.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# mpv EDL v0\nf1.mkv,10,20\nf2.mkv\nf1.mkv,40,10\n```\n\n----------------------------------------\n\nTITLE: CUDA Decode Device Selection\nDESCRIPTION: Command option for choosing the GPU device for CUDA/NVDEC decoding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_34\n\nLANGUAGE: shell\nCODE:\n```\n--cuda-decode-device=<auto|0..>\n```\n\n----------------------------------------\n\nTITLE: C Plugin Entry Point Function Declaration\nDESCRIPTION: Declaration of the required entry point function for MPV C plugins. This function runs in its own thread and must be exported by the plugin. The function should return 0 for success or -1 for failure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/libmpv.rst#2025-04-21_snippet_0\n\nLANGUAGE: c\nCODE:\n```\nint mpv_open_cplugin(mpv_handle *handle)\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Framerate in MPV\nDESCRIPTION: This option specifies the framerate of the subtitle file, affecting text subtitles only. It can speed up or slow down subtitles relative to the video framerate.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_116\n\nLANGUAGE: config\nCODE:\n```\n--sub-fps=<rate>\n```\n\n----------------------------------------\n\nTITLE: GPU Hardware Decoding Interop Configuration\nDESCRIPTION: Command option for selecting hardware decoding interop context in GPU and libmpv video outputs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_31\n\nLANGUAGE: shell\nCODE:\n```\n--gpu-hwdec-interop=<auto|all|no|name>\n```\n\n----------------------------------------\n\nTITLE: Limiting Playback Frames in mpv\nDESCRIPTION: This option limits playback to a specified number of video frames. Setting it to 0 loads the file but quits before playback starts.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_52\n\nLANGUAGE: config\nCODE:\n```\n\"--frames=<number>\"\n```\n\n----------------------------------------\n\nTITLE: Hardware Decoding Frame Allocation\nDESCRIPTION: Command option for specifying the number of GPU frames to preallocate for hardware decoding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_32\n\nLANGUAGE: shell\nCODE:\n```\n--hwdec-extra-frames=<N>\n```\n\n----------------------------------------\n\nTITLE: Overriding Container FPS in mpv\nDESCRIPTION: This option allows overriding the video framerate, useful when the original value is wrong or missing. Only works in '--correct-pts=no' mode.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_49\n\nLANGUAGE: config\nCODE:\n```\n\"--container-fps-override=<float>\"\n```\n\n----------------------------------------\n\nTITLE: Temporal Dithering Options in MPV\nDESCRIPTION: Options to enable temporal dithering, which changes dithering patterns between frames, and to control how often the pattern updates.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_192\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--temporal-dither\"    Enable temporal dithering. (Only active if dithering is enabled in\n    general.) This changes between 8 different dithering patterns on each frame\n    by changing the orientation of the tiled dithering matrix. Unfortunately,\n    this can lead to flicker on LCD displays, since these have a high reaction\n    time.\n\n\"--temporal-dither-period=<1-128>\"    Determines how often the dithering pattern is updated when\n    ``--temporal-dither`` is in use. 1 (the default) will update on every video\n    frame, 2 on every other frame, etc.\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in MPV\nDESCRIPTION: Option to customize the window title for MPV's video window and possibly the audio stream. Properties can be expanded, but this feature may cause CPU usage issues if changed too frequently.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_149\n\nLANGUAGE: shell\nCODE:\n```\n--title=<string>\n```\n\n----------------------------------------\n\nTITLE: Setting Fullscreen Mode in MPV\nDESCRIPTION: Command line options to enable fullscreen playback in MPV and to control which screen is used for fullscreen in multi-monitor configurations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_151\n\nLANGUAGE: shell\nCODE:\n```\n--fullscreen, --fs\n```\n\nLANGUAGE: shell\nCODE:\n```\n--fs-screen=<all|current|0-32>\n```\n\n----------------------------------------\n\nTITLE: ICC Profile Configuration Options\nDESCRIPTION: Configuration options for handling ICC profiles and color transformations in MPV player. Includes profile loading, caching, and color intent settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_207\n\nLANGUAGE: configuration\nCODE:\n```\n--icc-profile=<file>\n--icc-profile-auto\n--icc-cache\n--icc-cache-dir\n--icc-intent=<value>\n--icc-3dlut-size=<auto|RxGxB>\n--icc-force-contrast=<no|0-1000000|inf>\n--icc-use-luma\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Audio Codec Options\nDESCRIPTION: This command specifies the options for the output audio codec when using libavcodec. Users can fine-tune audio encoding settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n--oacopts=<options>\n```\n\n----------------------------------------\n\nTITLE: Enabling Clipboard Monitoring in mpv\nDESCRIPTION: Command-line option to enable clipboard monitoring on Windows, Wayland, and macOS. This allows the clipboard property to be observed for content changes, primarily affecting implementations that use polling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_232\n\nLANGUAGE: plaintext\nCODE:\n```\n--clipboard-monitor=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Demuxer Options in MPV\nDESCRIPTION: These options control demuxer behavior, including forcing a specific demuxer, setting probe duration, and configuring libavformat-specific parameters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_162\n\nLANGUAGE: config\nCODE:\n```\n--demuxer=<[+]name>\n--demuxer-lavf-analyzeduration=<value>\n--demuxer-lavf-probe-info=<yes|no|auto|nostreams>\n--demuxer-lavf-probescore=<1-100>\n--demuxer-lavf-allow-mimetype=<yes|no>\n--demuxer-lavf-format=<name>\n--demuxer-lavf-hacks=<yes|no>\n--demuxer-lavf-o=<key>=<value>[,<key>=<value>[,...]]\n--demuxer-lavf-probesize=<value>\n--demuxer-lavf-buffersize=<value>\n--demuxer-lavf-linearize-timestamps=<yes|no|auto>\n--demuxer-lavf-propagate-opts=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Video Aspect Ratio Method Selection\nDESCRIPTION: Command option for setting the default video aspect determination method.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_38\n\nLANGUAGE: shell\nCODE:\n```\n--video-aspect-method=<bitstream|container|ignore>\n```\n\n----------------------------------------\n\nTITLE: MPV Legacy Auto Profile: MKV Extension\nDESCRIPTION: This legacy profile applies the `vflip` video filter to all `.mkv` files.  It is loaded automatically based on the file extension.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_9\n\nLANGUAGE: ini\nCODE:\n```\n[extension.mkv]\nprofile-desc=\"profile for .mkv files\"\nvf=vflip\n```\n\n----------------------------------------\n\nTITLE: Converting Image Subtitles to Grayscale in MPV\nDESCRIPTION: This option converts image subtitles to grayscale, which can help make yellow DVD/Vobsubs look nicer. It is never applied to text subtitles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_118\n\nLANGUAGE: config\nCODE:\n```\n--sub-gray\n```\n\n----------------------------------------\n\nTITLE: Setting Deinterlace Field Parity in mpv\nDESCRIPTION: This option specifies the field parity/order when deinterlacing. It can be set to 'tff' (top field first), 'bff' (bottom field first), or 'auto'.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_51\n\nLANGUAGE: config\nCODE:\n```\n\"--deinterlace-field-parity=<tff|bff|auto>\"\n```\n\n----------------------------------------\n\nTITLE: Accessing FFmpeg libavformat Protocol\nDESCRIPTION: This snippet allows access to any FFmpeg libavformat protocol directly by passing a string to libavformat.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\n\"lavf://...\"\n```\n\n----------------------------------------\n\nTITLE: Using libavdevice Inputs\nDESCRIPTION: This snippet demonstrates the usage of 'av://' to utilize libavdevice inputs with specified options to the demuxer.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\n\"av://type:options\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Additional MPV Features\nDESCRIPTION: This snippet provides an example of how to enable additional features during the Meson setup process for building MPV, enhancing functionality by specifying extra arguments.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmeson setup build -Dlua=enabled -Djavascript=enabled -Dlcms2=enabled -Dlibplacebo:lcms=enabled\n```\n\n----------------------------------------\n\nTITLE: Specifying YouTube-DL Formats\nDESCRIPTION: This option allows users to specify the video format that should be passed to YouTube-DL when fetching videos. It can take various predefined values or specific format identifiers based on the content being requested.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n--ytdl-format=<ytdl|best|worst|mp4|webm|...>\n```\n\n----------------------------------------\n\nTITLE: Advanced HDR Options in MPV Player\nDESCRIPTION: Documents additional HDR-related options including inverse tone mapping, maximum brightness boost limits, tone mapping visualization, and gamut mapping modes. These options provide further control over how HDR content is processed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_203\n\nLANGUAGE: plaintext\nCODE:\n```\n``--inverse-tone-mapping``\n    If set, allows inverse tone mapping (expanding SDR to HDR). Not supported\n    by all tone mapping curves. Use with caution. (``--vo=gpu-next`` only)\n\n``--tone-mapping-max-boost=<1.0..10.0>``\n    Upper limit for how much the tone mapping algorithm is allowed to boost\n    the average brightness by over-exposing the image. The default value of 1.0\n    allows no additional brightness boost. A value of 2.0 would allow\n    over-exposing by a factor of 2, and so on. Raising this setting can help\n    reveal details that would otherwise be hidden in dark scenes, but raising\n    it too high will make dark scenes appear unnaturally bright. (``--vo=gpu``\n    only)\n\n``--tone-mapping-visualize``\n    Display a (PQ-PQ) graph of the active tone-mapping LUT. Intended only for\n    debugging purposes. The X axis shows PQ input values, the Y axis shows PQ\n    output values. The tone-mapping curve is shown in green/yellow. Yellow\n    means the brightness has been boosted from the source, dark blue regions\n    show where the brightness has been reduced. The extra colored regions and\n    lines indicate various monitor limits, as well a reference diagonal\n    (neutral tone-mapping) and source scene average brightness information (if\n    available). (``--vo=gpu-next`` only)\n```\n\n----------------------------------------\n\nTITLE: OSD Text Styling Options\nDESCRIPTION: Options for styling OSD text appearance including colors, outlines, and text formatting.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_172\n\nLANGUAGE: plaintext\nCODE:\n```\n--osd-blur=<0..20.0>\n--osd-bold=<yes|no>\n--osd-italic=<yes|no>\n--osd-outline-color=<color>\n--osd-back-color=<color>\n--osd-outline-size=<size>\n--osd-border-style=<outline-and-shadow|opaque-box|background-box>\n--osd-color=<color>\n--osd-selected-color=<color>\n--osd-selected-outline-color=<color>\n```\n\n----------------------------------------\n\nTITLE: Observing Properties in MPV Lua Script\nDESCRIPTION: Watch and react to changes in MPV player properties with type-specific handling and initial value notification\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_16\n\nLANGUAGE: lua\nCODE:\n```\nmp.observe_property(name, type, fn)\n```\n\n----------------------------------------\n\nTITLE: OpenGL Swap Interval Setting in MPV\nDESCRIPTION: Option to control the interval between buffer swaps in OpenGL, where 1 enables VSYNC and 0 disables it, with warnings about platform-specific support issues.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_195\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--opengl-swapinterval=<n>\"    Interval in displayed frames between two buffer swaps. 1 is equivalent to\n    enable VSYNC, 0 to disable VSYNC. Defaults to 1 if not specified.\n\n    Note that this depends on proper OpenGL vsync support. On some platforms\n    and drivers, this only works reliably when in fullscreen mode. It may also\n    require driver-specific hacks if using multiple monitors, to ensure mpv\n    syncs to the right one. Compositing window managers can also lead to bad\n    results, as can missing or incorrect display FPS information (see\n    ``--display-fps-override``).\n```\n\n----------------------------------------\n\nTITLE: Ignoring Key Bindings in MPV Player (Lua)\nDESCRIPTION: This command is used to block keys that should be unbound, effectively disabling default bindings without disabling all bindings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_24\n\nLANGUAGE: lua\nCODE:\n```\nignore\n```\n\n----------------------------------------\n\nTITLE: Setting Volume Gain Range in MPV\nDESCRIPTION: Defines the minimum and maximum volume gain range in dB. Default range is from -96 dB (min) to 12 dB (max), allowing for precise volume control across a wide dynamic range.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_67\n\nLANGUAGE: bash\nCODE:\n```\n--volume-gain-max=<0.0-150.0>, --volume-gain-min=<-150.0-0.0>\n```\n\n----------------------------------------\n\nTITLE: Enabling DVD Subtitle Stretching in MPV\nDESCRIPTION: This option stretches DVD subtitles when playing anamorphic videos for better looking fonts on badly mastered DVDs. It only affects non-square pixel videos.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_106\n\nLANGUAGE: config\nCODE:\n```\n--stretch-dvd-subs=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Video Change Speed in MPV Player\nDESCRIPTION: Sets the maximum speed difference percentage applied to video in display sync modes. Controls when display sync mode is disabled due to refresh rate mismatches.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_215\n\nLANGUAGE: ini\nCODE:\n```\n--video-sync-max-video-change=<value>\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Format Options\nDESCRIPTION: This command lets users define specific options for the output format when using libavformat, allowing for fine-tuning of the encoding process. It supports key/value pairs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--ofopts=<options>\n```\n\n----------------------------------------\n\nTITLE: Configuring Gamut Mapping in MPV Player\nDESCRIPTION: Documents the --gamut-mapping-mode option which controls how colors outside the target display's color gamut are handled after tone mapping. Includes various algorithms like clip, perceptual, relative, saturation, and others with different trade-offs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_204\n\nLANGUAGE: plaintext\nCODE:\n```\n``--gamut-mapping-mode``\n    Specifies the algorithm used for reducing the gamut of images for the\n    target display, after any tone mapping is done.\n\n    auto\n        Choose the best mode automatically. (Default)\n    clip\n        Hard-clip to the gamut (per-channel). Very low quality, but free.\n    perceptual\n        Performs a perceptually balanced gamut mapping using a soft knee\n        function to roll-off clipped regions, and a hue shifting function to\n        preserve saturation. (``--vo=gpu-next`` only)\n    relative\n        Performs relative colorimetric clipping, while maintaining an\n        exponential relationship between brightness and chromaticity.\n        (``--vo=gpu-next`` only)\n    saturation\n        Performs simple RGB->RGB saturation mapping. The input R/G/B channels\n        are mapped directly onto the output R/G/B channels. Will never clip,\n        but will distort all hues and/or result in a faded look.\n        (``--vo=gpu-next`` only)\n    absolute\n        Performs absolute colorimetric clipping. Like ``relative``, but does\n        not adapt the white point. (``--vo=gpu-next`` only)\n    desaturate\n        Performs constant-luminance colorimetric clipping, desaturing colors\n        towards white until they're in-range.\n    darken\n        Uniformly darkens the input slightly to prevent clipping on blown-out\n        highlights, then clamps colorimetrically to the input gamut boundary,\n        biased slightly to preserve chromaticity over luminance.\n        (``--vo=gpu-next`` only)\n    warn\n        Performs no gamut mapping, but simply highlights out-of-gamut pixels.\n    linear\n        Linearly/uniformly desaturates the image in order to bring the entire\n        image into the target gamut. (``--vo=gpu-next`` only)\n```\n\n----------------------------------------\n\nTITLE: Passing Raw Options to YouTube-DL\nDESCRIPTION: This command allows for arbitrary options to be passed directly to YouTube-DL, facilitating fine-tuned control over its operation. Users can specify key-value pairs, but caution is advised due to the lack of validation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\n--ytdl-raw-options=<key>=<value>[,<key>=<value>[,...]]\n```\n\n----------------------------------------\n\nTITLE: Configuring Deinterlacing in mpv\nDESCRIPTION: This option enables or disables deinterlacing. It can be set to 'yes', 'no', or 'auto'. 'auto' mode uses ffmpeg's interlace detection.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_50\n\nLANGUAGE: config\nCODE:\n```\n\"--deinterlace=<yes|no|auto>\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Terminal OSD Bar in MPV (Bash)\nDESCRIPTION: Shows how to customize the terminal on-screen display (OSD) progress bar in MPV. The example sets custom characters for the start, spaces, position indicator, and end of the progress bar.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_181\n\nLANGUAGE: bash\nCODE:\n```\n--term-osd-bar-chars=<string>\n```\n\n----------------------------------------\n\nTITLE: Blu-ray Device Configuration\nDESCRIPTION: Example of setting custom Blu-ray device path for playback\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_160\n\nLANGUAGE: shell\nCODE:\n```\nmpv bd:// --bluray-device=/path/to/bd/\n```\n\n----------------------------------------\n\nTITLE: MPEG-4 Part 2 Encoding with MPV (Bash)\nDESCRIPTION: Example command for encoding MPEG-4 Part 2 video with MP3 audio in an AVI container using mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmpv infile --o=outfile.avi \\\n  --vf=fps=25 \\\n  --ovc=mpeg4 --ovcopts=qscale=4 \\\n  --oac=libmp3lame --oacopts=b=128k\n```\n\n----------------------------------------\n\nTITLE: Specifying SDH Enclosure Characters in MPV\nDESCRIPTION: Defines a string of characters that --sub-filter-sdh will use to potentially remove enclosed text from subtitles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_145\n\nLANGUAGE: shell\nCODE:\n```\n--sub-filter-sdh-enclosures=<string>\n```\n\n----------------------------------------\n\nTITLE: Setting AC-3 Dynamic Range Compression Level in MPV\nDESCRIPTION: Controls the Dynamic Range Compression for AC-3 audio streams. Values range from 0 (no compression, default) to 1 (full compression), affecting how loud and quiet passages are balanced.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_75\n\nLANGUAGE: bash\nCODE:\n```\n--ad-lavc-ac3drc=<level>\n```\n\n----------------------------------------\n\nTITLE: Observe Property Command\nDESCRIPTION: This example shows how to observe changes to a property in the mpv player, triggering events when the specified property changes.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_9\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"command\": [\"observe_property\", 1, \"volume\"] }\n{ \"error\": \"success\" }\n{ \"event\": \"property-change\", \"id\": 1, \"data\": 52.0, \"name\": \"volume\" }\n```\n\n----------------------------------------\n\nTITLE: Reading a Slice of a Stream\nDESCRIPTION: This code demonstrates how to read a specific byte range from a stream using the 'slice://' protocol, with potential offsets.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\n\"slice://start[-end]@URL\"\n```\n\n----------------------------------------\n\nTITLE: Basic MPV Window Configuration\nDESCRIPTION: Examples of monitor aspect ratio configuration for MPV player\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_158\n\nLANGUAGE: shell\nCODE:\n```\n--monitoraspect=4:3  or --monitoraspect=1.3333\n--monitoraspect=16:9 or --monitoraspect=1.7777\n```\n\n----------------------------------------\n\nTITLE: Event Notification Structure\nDESCRIPTION: This example demonstrates the structure of an event notification message sent by the mpv player, including an event name and possible additional fields.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"event\": \"event_name\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Filtering in MPV\nDESCRIPTION: Command line options for filtering subtitles in MPV using regular expressions and JavaScript regular expressions. These options allow for enabling/disabling filtering, controlling regex behavior, and managing how lines are processed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_147\n\nLANGUAGE: shell\nCODE:\n```\n--sub-filter-jsre-...=...\n```\n\n----------------------------------------\n\nTITLE: Setting Video Margins in mpv\nDESCRIPTION: These options add extra margins around the video as a ratio of the window size. Values range from 0.0 to 1.0 for each side of the video.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_47\n\nLANGUAGE: config\nCODE:\n```\n\"--video-margin-ratio-left=<val>\", \"--video-margin-ratio-right=<val>\", \"--video-margin-ratio-top=<val>\", \"--video-margin-ratio-bottom=<val>\"\n```\n\n----------------------------------------\n\nTITLE: Terminal Status Line Example\nDESCRIPTION: Illustrates the format of the playback status displayed in the terminal during mpv playback. The line includes information about audio/video sync, playback time, duration, and other relevant data. The provided example demonstrates how the status line appears, with different fields separated by spaces.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_10\n\nLANGUAGE: none\nCODE:\n```\n\"AV: 00:03:12 / 00:24:25 (13%) A-V: -0.000\"\n```\n\n----------------------------------------\n\nTITLE: Sending Text-Only Commands with Socat\nDESCRIPTION: This snippet shows how to send a text-only command to the mpv player using socat to display playback time on the player's OSD, though it does not receive a reply.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n> echo 'show-text ${playback-time}' | socat - /tmp/mpvsocket\n```\n\n----------------------------------------\n\nTITLE: Sending Commands using Socat\nDESCRIPTION: This snippet demonstrates how to send a JSON command to the mpv player using the 'socat' tool to query playback time.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n> echo '{ \"command\": [\"get_property\", \"playback-time\"] }' | socat - /tmp/mpvsocket\n{\"data\":190.482000,\"error\":\"success\"}\n```\n\n----------------------------------------\n\nTITLE: Setting Up lavfi Audio Filter in mpv\nDESCRIPTION: Shows the syntax for the lavfi audio filter, which allows filtering audio using FFmpeg's libavfilter.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_7\n\nLANGUAGE: config\nCODE:\n```\n\"lavfi=graph\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Display Tags in MPV Player\nDESCRIPTION: Sets which tags should be displayed in the terminal and stats. Tags that are in the list but not in the file will not be shown. Prefix matching is supported with an asterisk.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_217\n\nLANGUAGE: ini\nCODE:\n```\n--display-tags=tag1,tags2,...\n```\n\n----------------------------------------\n\nTITLE: Playing Digital TV using DVB\nDESCRIPTION: This snippet illustrates the usage of the 'dvb://' protocol for playing digital TV channels on Linux. It allows for specification of card number and channel.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\n\"dvb://[cardnumber@]channel\" \"--dvbin-...\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Bitmap Cache Size in MPV Player\nDESCRIPTION: Sets the maximum bitmap cache size in libass cache for the subtitle track. 0 means libass uses its default value. Values are in MB.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_96\n\nLANGUAGE: config\nCODE:\n```\n--sub-bitmap-max-size=<value>\n```\n\n----------------------------------------\n\nTITLE: Setting Audio Output Driver in MPV\nDESCRIPTION: Specifies which audio output driver(s) should be used for playback. Detailed descriptions of available drivers can be found in the AUDIO OUTPUT DRIVERS section of the mpv documentation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_60\n\nLANGUAGE: bash\nCODE:\n```\n--ao=<driver>\n```\n\n----------------------------------------\n\nTITLE: Configuring ASS Event Pruning Delay in MPV Player\nDESCRIPTION: Sets the delay for automatic pruning of events from memory in libass. -1 disables pruning, while a positive value specifies the delay in seconds after an event is no longer displayed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_94\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-prune-delay=<-1|seconds>\n```\n\n----------------------------------------\n\nTITLE: --ab-loop-count=<N|inf> for MPV Player\nDESCRIPTION: This command sets the number of times the A-B loop will run before ignoring the loop points entirely. Input can either be a numeric value or 'inf' for continuous looping. When the count is set to 0, A-B looping features become disabled. The output is the adjusted playback behavior based on the loop count.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\n--ab-loop-count=<N|inf>\n```\n\n----------------------------------------\n\nTITLE: Example of Segment and Metadata Usage\nDESCRIPTION: This example demonstrates how to set segment parameters, including file names and start times, as well as includes metadata injection using key parameters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n# mpv EDL v0\n%18%filename,with,.mkv,10,length=20,param3=%13%value,escaped,param4=value2\n```\n\n----------------------------------------\n\nTITLE: JACK Audio Driver Configuration\nDESCRIPTION: Configuration options for JACK (Jack Audio Connection Kit) audio driver, including port naming, client settings, and channel layout options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_2\n\nLANGUAGE: config\nCODE:\n```\n--jack-port=<name>\n--jack-name=<client>\n--jack-autostart=<yes|no>\n--jack-connect=<yes|no>\n--jack-std-channel-layout=<waveext|any>\n```\n\n----------------------------------------\n\nTITLE: Configuring Sigmoid Upscaling in MPV\nDESCRIPTION: Options for controlling sigmoid upscaling, which applies a sigmoid curve to upscaled content. This includes the center and slope parameters for the sigmoid curve.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_184\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--sigmoid-center\"    The center of the sigmoid curve used for ``--sigmoid-upscaling``, must be a\n    float between 0.0 and 1.0. Defaults to 0.75 if not specified.\n\n\"--sigmoid-slope\"    The slope of the sigmoid curve used for ``--sigmoid-upscaling``, must be a\n    float between 1.0 and 20.0. Defaults to 6.5 if not specified.\n```\n\n----------------------------------------\n\nTITLE: Dumping Cache in MPV Player (Lua)\nDESCRIPTION: This command dumps the current cache to a specified file within a given time range. It can also be used for continuous dumping or stopping an ongoing dump.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_26\n\nLANGUAGE: lua\nCODE:\n```\ndump-cache <start> <end> <filename>\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Headers in MPV\nDESCRIPTION: Example showing how to set custom HTTP header fields when accessing HTTP streams using the mpv player. Demonstrates the format of the resulting HTTP request headers.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_182\n\nLANGUAGE: bash\nCODE:\n```\nmpv --http-header-fields='Field1: value1','Field2: value2' \\\nhttp://localhost:1234\n```\n\n----------------------------------------\n\nTITLE: MPV Program Behavior Configuration Options\nDESCRIPTION: Command-line options for controlling MPV player behavior, including help, verbosity, configuration management, and logging\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n--help, --h\n```\n\nLANGUAGE: bash\nCODE:\n```\n-v\n```\n\nLANGUAGE: bash\nCODE:\n```\n--version, -V\n```\n\nLANGUAGE: bash\nCODE:\n```\n--no-config\n```\n\nLANGUAGE: bash\nCODE:\n```\n--log-file=<path>\n```\n\nLANGUAGE: bash\nCODE:\n```\n--config-dir=<path>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Font in MPV\nDESCRIPTION: Specifies the font to use for subtitles that don't specify a particular font. The default is 'sans-serif'. This option is ignored for ASS subtitles unless --sub-ass=no is specified.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_125\n\nLANGUAGE: shell\nCODE:\n```\n--sub-font=<name>\n```\n\n----------------------------------------\n\nTITLE: Copying MPV Encoding Profiles (Bash)\nDESCRIPTION: Commands to copy the default encoding profiles configuration file to the user's local mpv configuration directory.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ~/.mpv\ncp /etc/mpv/encoding-profiles.conf ~/.mpv/encoding-profiles.conf\n```\n\n----------------------------------------\n\nTITLE: Defining Input Sections in MPV Configuration\nDESCRIPTION: Explains how input sections are used to group bindings in the input.conf file. It describes the predefined 'default' and 'encode' sections.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_27\n\nLANGUAGE: conf\nCODE:\n```\ndefault\n    Bindings without input section are implicitly assigned to this section. It\n    is enabled by default during normal playback.\nencode\n    Section which is active in encoding mode. It is enabled exclusively, so\n    that bindings in the \"default\" sections are ignored.\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Line Spacing in MPV Player\nDESCRIPTION: Sets the line spacing value for the SSA/ASS renderer.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_92\n\nLANGUAGE: config\nCODE:\n```\n--sub-line-spacing=<value>\n```\n\n----------------------------------------\n\nTITLE: Enabling Subtitle Duration Stretching in MPV\nDESCRIPTION: This option stretches subtitle durations to end when the next subtitle starts. It helps with subtitles that erroneously have zero durations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_113\n\nLANGUAGE: config\nCODE:\n```\n--sub-stretch-durations=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: LUT and Color Management Options\nDESCRIPTION: Options for configuring custom LUTs and color management settings in MPV player, including LUT types and blend subtitle configurations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_208\n\nLANGUAGE: configuration\nCODE:\n```\n--lut=<file>\n--lut-type=<value>\n--blend-subtitles=<yes|video|no>\n--background=<none|color|tiles>\n--background-color=<color>\n--border-background=<none|color|tiles>\n```\n\n----------------------------------------\n\nTITLE: Setting ReplayGain Fallback Value in MPV\nDESCRIPTION: Specifies the gain in dB to apply when a file has no ReplayGain tags or when the ReplayGain logic is inactive. This setting takes precedence over other ReplayGain options when applied.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_71\n\nLANGUAGE: bash\nCODE:\n```\n--replaygain-fallback=<db>\n```\n\n----------------------------------------\n\nTITLE: EGL Configuration Options in MPV\nDESCRIPTION: Options for selecting specific EGL configurations and output formats used for OpenGL rendering, with instructions for listing available configs and format limitations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_196\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--egl-config-id=<ID>\"    (EGL only)\n    Select EGLConfig with specific EGL_CONFIG_ID.\n    Rendering surfaces and contexts will be created using this EGLConfig.\n    You can use ``--msg-level=vo=trace`` to obtain a list of available configs.\n\n\"--egl-output-format=<auto|rgb8|rgba8|rgb10|rgb10_a2|rgb16|rgba16|rgb16f|rgba16f|rgb32f|rgba32f>\"    (EGL only)\n    Select a specific EGL output format to utilize for OpenGL rendering.\n    This option is mutually exclusive with ``--egl-config-id``.\n    \"auto\" is the default, which will pick the first usable config\n    based on the order given by the driver.\n\n    All formats are not available.\n    A fatal error is caused if an unavailable format is selected.\n\n    .. note::\n\n        There is no reliable API to query desktop bit depth in EGL.\n        You can manually set this option\n        according to the bit depth of your display.\n        This option also affects the auto-detection of ``--dither-depth``.\n\n    .. note::\n\n        Unlike  ``--d3d11-output-format``, this option also takes effect with ``--vo=gpu-next``.\n```\n\n----------------------------------------\n\nTITLE: CoreAudio Driver Configuration\nDESCRIPTION: Configuration options for macOS CoreAudio driver, including physical format changes and SPDIF handling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_3\n\nLANGUAGE: config\nCODE:\n```\n--coreaudio-change-physical-format=<yes|no>\n--coreaudio-spdif-hack=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: --chapters-file=<filename> for MPV Player\nDESCRIPTION: Using this command, users can load chapter information from a specified file instead of relying on chapter metadata within the main video file. Inputs can include media files like MKV or formats like ffmetadata, affecting how chapter playback is handled by MPV.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\n--chapters-file=<filename>\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Video Sync Factor in MPV Player\nDESCRIPTION: Configures the maximum multiple for fitting video FPS to display FPS. This affects how the player attempts to match video framerate to display refresh rate.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_214\n\nLANGUAGE: ini\nCODE:\n```\n--video-sync-max-factor=<value>\n```\n\n----------------------------------------\n\nTITLE: Adjusting Subtitle Timing in MPV\nDESCRIPTION: This option adjusts subtitle timing to remove minor gaps or overlaps between subtitles if the difference is smaller than 210 ms.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_114\n\nLANGUAGE: config\nCODE:\n```\n--sub-fix-timing=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Adding Kitty Auto Multiplexer Passthrough Option for MPV Player\nDESCRIPTION: This snippet introduces a new command-line option for MPV player. The option '--vo-kitty-auto-multiplexer-passthrough' can be set to 'yes' or 'no' to control the Kitty terminal multiplexer passthrough behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes/kitty-passthrough.txt#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n--vo-kitty-auto-multiplexer-passthrough=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Justification in MPV\nDESCRIPTION: Controls how multi-line subtitles are justified, irrespective of their alignment. 'auto' justifies based on --sub-align-x.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_139\n\nLANGUAGE: shell\nCODE:\n```\n--sub-justify=<auto|left|center|right>\n```\n\n----------------------------------------\n\nTITLE: Setting Backdrop Type in MPV Player (Windows)\nDESCRIPTION: Windows-only option to set the type of backdrop effect behind the MPV window. Options include auto, none, mica, acrylic, and mica-alt.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_222\n\nLANGUAGE: ini\nCODE:\n```\n--backdrop-type=<auto|none|mica|acrylic|mica-alt>\n```\n\n----------------------------------------\n\nTITLE: ALSA Audio Driver Configuration\nDESCRIPTION: Configuration options for the ALSA (Advanced Linux Sound Architecture) audio driver, including mixer settings, buffer timing, and channel mapping options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_1\n\nLANGUAGE: config\nCODE:\n```\n--alsa-resample=yes\n--alsa-mixer-device=<device>\n--alsa-mixer-name=<name>\n--alsa-mixer-index=<number>\n--alsa-non-interleaved\n--alsa-ignore-chmap\n--alsa-buffer-time=<microseconds>\n--alsa-periods=<number>\n```\n\n----------------------------------------\n\nTITLE: Playing Raw YUV Sample with MPV in Shell\nDESCRIPTION: This command demonstrates how to play a raw YUV video sample using MPV player with specific demuxer settings for width and height.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_164\n\nLANGUAGE: shell\nCODE:\n```\nmpv sample-720x576.yuv --demuxer=rawvideo \\\n--demuxer-rawvideo-w=720 --demuxer-rawvideo-h=576\n```\n\n----------------------------------------\n\nTITLE: Formatting Subtitle Text as Italic in MPV\nDESCRIPTION: Enables or disables italic formatting for subtitle text.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_129\n\nLANGUAGE: shell\nCODE:\n```\n--sub-italic=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Track Metadata in EDL Files\nDESCRIPTION: This code demonstrates the use of the '!track_meta' header to apply metadata settings for tracks derived from separate streams within the EDL.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n# mpv EDL v0\n!track_meta,lang=bla,title=blabla\nfile.mkv\n!new_stream\n!track_meta,title=ducks\nsub.srt\n```\n\n----------------------------------------\n\nTITLE: Interpolation Threshold Configuration in MPV\nDESCRIPTION: Option to set the threshold below which frame interpolation is disabled, calculated based on the difference between display refresh rate and video FPS.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_186\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--interpolation-threshold=<0..1,-1>\"    Threshold below which frame ratio interpolation gets disabled (default:\n    ``0.01``). This is calculated as ``abs(disphz/vfps - 1) < threshold``,\n    where ``vfps`` is the speed-adjusted video FPS, and ``disphz`` the\n    display refresh rate. (The speed-adjusted video FPS is roughly equal to\n    the normal video FPS, but with slowdown and speedup applied. This matters\n    if you use ``--video-sync=display-resample`` to make video run synchronously\n    to the display FPS, or if you change the ``speed`` property.)\n\n    The default is intended to enable interpolation in scenarios where\n    retiming with the ``--video-sync=display-*`` cannot adjust the speed of\n    the video sufficiently for smooth playback. For example if a video is\n    60.00 FPS and your display refresh rate is 59.94 Hz, interpolation will\n    never be activated, since the mismatch is within 1% of the refresh\n    rate. The default also handles the scenario when mpv cannot determine the\n    container FPS, such as during certain live streams, and may dynamically\n    toggle interpolation on and off. In this scenario, the default would be to\n    not use interpolation but rather to allow ``--video-sync=display-*`` to\n    retime the video to match display refresh rate. See\n    ``--video-sync-max-video-change`` for more information about how mpv\n    will retime video.\n\n    Also note that if you use e.g. ``--video-sync=display-vdrop``, small\n    deviations in the rate can disable interpolation and introduce a\n    discontinuity every other minute.\n\n    Set this to ``-1`` to disable this logic.\n```\n\n----------------------------------------\n\nTITLE: Vulkan Swap Mode Configuration in MPV\nDESCRIPTION: Option to control presentation mode of the Vulkan swapchain, similar to OpenGL swap interval, with various modes for controlling tearing and vsync behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_198\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--vulkan-swap-mode=<mode>\"    Controls the presentation mode of the vulkan swapchain. This is similar\n    to the ``--opengl-swapinterval`` option.\n\n    auto\n        Use the preferred swapchain mode for the vulkan context. (Default)\n    fifo\n        Non-tearing, vsync blocked. Similar to \"VSync on\".\n    fifo-relaxed\n        Tearing, vsync blocked. Late frames will tear instead of stuttering.\n    mailbox\n        Non-tearing, not vsync blocked. Similar to \"triple buffering\".\n    immediate\n        Tearing, not vsync blocked. Similar to \"VSync off\".\n```\n\n----------------------------------------\n\nTITLE: Configuring rubberband Audio Filter in mpv\nDESCRIPTION: Demonstrates the syntax and options for the rubberband audio filter, which provides high-quality pitch correction using librubberband.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_6\n\nLANGUAGE: config\nCODE:\n```\n\"rubberband\"\n```\n\n----------------------------------------\n\nTITLE: --ordered-chapters-files=<playlist-file> for MPV Player\nDESCRIPTION: This command loads a specified playlist file and uses the files within it as reference when opening Matroska files with ordered chapters. This command helps access ordered chapter files that might not be on the local filesystem. The input is a filename for the playlist, which directly impacts how references are handled during playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\n--ordered-chapters-files=<playlist-file>\n```\n\n----------------------------------------\n\nTITLE: Configuring PTS Calculation in MPV Player\nDESCRIPTION: This snippet outlines the configuration option `fix-pts` which determines whether to calculate PTS based on sample count. Enabling this option can help address issues with certain filters that inaccurately handle PTS, although it may lead to potential playback desynchronization.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n``fix-pts=<yes|no>``\n        Determine PTS based on sample count (default: no). If this is enabled,\n        the player won't rely on libavfilter passing through PTS accurately.\n        Instead, it pass a sample count as PTS to libavfilter, and compute the\n        PTS used by mpv based on that and the input PTS. This helps with filters\n        which output a recomputed PTS instead of the original PTS (including\n        filters which require the PTS to start at 0). mpv normally expects\n        filters to not touch the PTS (or only to the extent of changing frame\n        boundaries), so this is not the default, but it will be needed to use\n        broken filters. In practice, these broken filters will either cause slow\n        A/V desync over time (with some files), or break playback completely if\n        you seek or start playback from the middle of a file.\n```\n\n----------------------------------------\n\nTITLE: Specifying YUV422P16LE Format Structure in MPV\nDESCRIPTION: Defines the yuv422p16le pixel format with 3 planes, 16-bit components, and 2:1 horizontal chroma subsampling. Includes both the Regular format specification and AVD (Audio/Video Decoder) configurations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_34\n\nLANGUAGE: technical\nCODE:\n```\nRegular: planes=3 compbytes=2 bitpad=0 chroma=2x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv422p16le chroma=1:0 flags=0x10 [planar]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Outline Color in MPV\nDESCRIPTION: Specifies the color used for the subtitle font outline. Uses the same color format as --sub-color.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_130\n\nLANGUAGE: shell\nCODE:\n```\n--sub-outline-color=<color>\n```\n\n----------------------------------------\n\nTITLE: Setting Window Affinity in MPV (Windows)\nDESCRIPTION: Controls the window affinity behavior of MPV on Windows. Options include default behavior, excluding from capture, or blacking out the window.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_223\n\nLANGUAGE: plaintext\nCODE:\n```\n--window-affinity=<default|excludefromcapture|monitor>\n```\n\n----------------------------------------\n\nTITLE: Video Pan-Scan Configuration\nDESCRIPTION: Command option for enabling and controlling pan-and-scan functionality.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_36\n\nLANGUAGE: shell\nCODE:\n```\n--panscan=<0.0-1.0>\n```\n\n----------------------------------------\n\nTITLE: Describing RGB and Grayscale Pixel Format Specifications in MPV\nDESCRIPTION: Technical specification of pixel formats for the MPV player, detailing various RGB and grayscale formats with different bit depths and endianness. Each format includes plane configuration, bit depth, chroma sampling, and other parameters needed for proper pixel format handling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\n  Regular: planes=3 compbytes=2 bitpad=-6 chroma=1x1 ctype=uint\n    0: {2}\n    1: {3}\n    2: {1}\n  AVD: name=gbrp10le chroma=0:0 flags=0x30 [planar][rgb]\n    0: p=2  st=2  o=0  sh=0  d=10\n    1: p=0  st=2  o=0  sh=0  d=10\n    2: p=1  st=2  o=0  sh=0  d=10\ngbrp10be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][rgb][be][uint]\n    planes=3, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {} {0:16/-6} {} {}\n    1: 16bits endian_bytes=2 {} {} {0:16/-6} {}\n    2: 16bits endian_bytes=2 {0:16/-6} {} {} {}\n  AVD: name=gbrp10be chroma=0:0 flags=0x31 [be][planar][rgb]\n    0: p=2  st=2  o=0  sh=0  d=10\n    1: p=0  st=2  o=0  sh=0  d=10\n    2: p=1  st=2  o=0  sh=0  d=10\n```\n\n----------------------------------------\n\nTITLE: Loading External Files in MPV\nDESCRIPTION: Loads a file and adds all of its tracks. Useful for playing different files together or for advanced '--lavfi-complex' usage.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_228\n\nLANGUAGE: plaintext\nCODE:\n```\n--external-files=<file-list>\n```\n\n----------------------------------------\n\nTITLE: Displaying Only Forced Subtitle Events in MPV\nDESCRIPTION: This option enables displaying only forced events within subtitle streams. It mainly applies to bitmap subtitle formats and will cause no subtitles to be displayed for text subtitles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_115\n\nLANGUAGE: config\nCODE:\n```\n--sub-forced-events-only=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: RGBA Format Descriptor Sample (rgba)\nDESCRIPTION: Descriptor for RGBA pixel format with alpha channel. This format uses a single plane with 32 bits per pixel (8 bits per channel), containing R, G, B, and A channels in sequence.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_21\n\nLANGUAGE: text\nCODE:\n```\nrgba: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {0:8} {8:8} {16:8} {24:8}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {1, 2, 3, 4}\n  AVD: name=rgba chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=4  o=0  sh=0  d=8\n    1: p=0  st=4  o=1  sh=0  d=8\n    2: p=0  st=4  o=2  sh=0  d=8\n    3: p=0  st=4  o=3  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Copying Input PTS to Output Video\nDESCRIPTION: This command enables the copying of presentation timestamps (PTS) directly to the output video, which can be useful for maintaining synchronization but has limitations in some formats.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n--orawts\n```\n\n----------------------------------------\n\nTITLE: Sending Commands to Audio Filters in MPV Player (Lua)\nDESCRIPTION: Similar to vf-command, this command sends a command to a specific audio filter or all audio filters. It's used primarily with the 'lavfi' filter.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_23\n\nLANGUAGE: lua\nCODE:\n```\naf-command <label> <command> <argument> [<target>]\n```\n\n----------------------------------------\n\nTITLE: Configuring lavcac3enc Audio Filter in mpv\nDESCRIPTION: Shows the syntax and options for the lavcac3enc audio filter, which encodes multi-channel audio to AC-3 at runtime using libavcodec.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_1\n\nLANGUAGE: config\nCODE:\n```\n\"lavcac3enc[=options]\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Clipboard Backends in mpv\nDESCRIPTION: Command-line option for specifying a priority list of clipboard backends to be used. This enables native clipboard support for reading and writing to the clipboard property.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_231\n\nLANGUAGE: plaintext\nCODE:\n```\n--clipboard-backends=<backend1,backend2,...[,]>\n```\n\n----------------------------------------\n\nTITLE: EDL File Format Syntax\nDESCRIPTION: This snippet details the syntax rules for formatting EDL files, including comment handling and segment entry definitions. It clarifies the structure expected in a compliant EDL file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nsegment_entry ::= <param> ( <param> ',' )*\nparam         ::= [ <name> '=' ] ( <value> | '%' <number> '%' <valuebytes> )\n```\n\n----------------------------------------\n\nTITLE: Specifying YUV422P9 Format Structure in MPV\nDESCRIPTION: Defines the yuv422p9 (9-bit) pixel format with 3 planes, 9-bit components in 16-bit containers, and 2:1 horizontal chroma subsampling. Includes the basic description, regular format, and AVD configuration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_36\n\nLANGUAGE: technical\nCODE:\n```\nyuv422p9: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][uint]\n    planes=3, chroma=1:0 align=2:1\n    {16/[0:0] 16/[1:0] 16/[1:0] }\n    0: 16bits {0:16/-7} {} {} {}\n    1: 16bits {} {0:16/-7} {} {}\n    2: 16bits {} {} {0:16/-7} {}\n  Regular: planes=3 compbytes=2 bitpad=-7 chroma=2x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv422p9le chroma=1:0 flags=0x10 [planar]\n    0: p=0  st=2  o=0  sh=0  d=9\n    1: p=1  st=2  o=0  sh=0  d=9\n    2: p=2  st=2  o=0  sh=0  d=9\n```\n\n----------------------------------------\n\nTITLE: Applying Gaussian Blur to Image Subtitles in MPV\nDESCRIPTION: This option applies Gaussian blur to image subtitles, which can help make pixelated DVD/Vobsubs look nicer. It also switches to software subtitle scaling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_117\n\nLANGUAGE: config\nCODE:\n```\n--sub-gauss=<0.0-3.0>\n```\n\n----------------------------------------\n\nTITLE: VAAPI Device Selection\nDESCRIPTION: Command option for selecting the DRM device for VAAPI-copy decoding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_35\n\nLANGUAGE: shell\nCODE:\n```\n--vaapi-device=<device file|adapter name>\n```\n\n----------------------------------------\n\nTITLE: Setting Hardware Decoding Deinterlacing Option\nDESCRIPTION: Command option for configuring deinterlacing behavior with hardware decoding on Nvidia GPUs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_30\n\nLANGUAGE: shell\nCODE:\n```\nvd-lavc-o=deint=[weave|bob|adaptive]\n```\n\n----------------------------------------\n\nTITLE: Configuring Audio Output Driver Selection\nDESCRIPTION: Specifies syntax for selecting and prioritizing audio output drivers in MPV player. Allows falling back to unlisted drivers if list ends with comma.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_0\n\nLANGUAGE: config\nCODE:\n```\n--ao=<driver1,driver2,...[,]>\n```\n\n----------------------------------------\n\nTITLE: RGB Format Descriptor Sample (rgb0)\nDESCRIPTION: Descriptor for RGB0 pixel format with 8 bits per channel. This format uses a single plane with 32 bits per pixel, containing R, G, B channels at 8 bits each with the fourth byte unused.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_20\n\nLANGUAGE: text\nCODE:\n```\nrgb0: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {0:8} {8:8} {16:8} {}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {1, 2, 3, 0}\n  AVD: name=rgb0 chroma=0:0 flags=0x20 [rgb]\n    0: p=0  st=4  o=0  sh=0  d=8\n    1: p=0  st=4  o=1  sh=0  d=8\n    2: p=0  st=4  o=2  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Enabling Harder SDH Subtitle Filtering in MPV\nDESCRIPTION: Applies a more aggressive SDH filtering, removing speaker labels and text within parentheses using both lower and upper case letters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_144\n\nLANGUAGE: shell\nCODE:\n```\n--sub-filter-sdh-harder=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Video filter entry syntax in mpv\nDESCRIPTION: This snippet describes the general filter entry syntax with label, disabled filter and parameter list in mpv. Also shows the \"toggle\" syntax with label. Explains filter parameter list and filter parameter syntax.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\n\"[\"@\"<label-name>\":\"] [\"!\"] <filter-name> [ \"=\" <filter-parameter-list> ]\"\n```\n\nLANGUAGE: Text\nCODE:\n```\n\"@\"<label-name>\"\n```\n\nLANGUAGE: Text\nCODE:\n```\n\"<filter-parameter> | <filter-parameter> \",\" <filter-parameter-list>\"\n```\n\nLANGUAGE: Text\nCODE:\n```\n\"( <param-name> \"=\" <param-value> ) | <param-value>\"\n```\n\n----------------------------------------\n\nTITLE: Describing bgra64be Pixel Format\nDESCRIPTION: This snippet elaborates on the bgra64be format, which is the big-endian variant of bgra64. It is configured for use in systems that require big-endian data storage for high-fidelity RGBA color representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_7\n\nLANGUAGE: unknown\nCODE:\n```\nbgra64be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits endian_bytes=2 {32:16} {16:16} {0:16} {48:16}\n  AVD: name=bgra64be chroma=0:0 flags=0xa1 [be][rgb][alpha]\n    0: p=0  st=8  o=4  sh=0  d=16\n    1: p=0  st=8  o=2  sh=0  d=16\n    2: p=0  st=8  o=0  sh=0  d=16\n    3: p=0  st=8  o=6  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Removing Key Binding in Lua\nDESCRIPTION: Removes a key binding that was previously added with add_key_binding or add_forced_key_binding. Requires using the same name that was used when adding the binding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_13\n\nLANGUAGE: lua\nCODE:\n```\nmp.remove_key_binding(name)\n```\n\n----------------------------------------\n\nTITLE: Using MPV with Scale Filters Help Command\nDESCRIPTION: Command to list all available scaling filters in MPV by passing 'help' as the scale parameter value.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_183\n\nLANGUAGE: shell\nCODE:\n```\nmpv --scale=help\n```\n\n----------------------------------------\n\nTITLE: Configuring ReplayGain in MPV\nDESCRIPTION: Adjusts volume according to ReplayGain metadata in the file. Options include no adjustment, track gain, or album gain (with fallback to track gain if album gain is not available).\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_68\n\nLANGUAGE: bash\nCODE:\n```\n--replaygain=<no|track|album>\n```\n\n----------------------------------------\n\nTITLE: Setting VDPAU Hardware Decoding for Specific Codecs in MPV\nDESCRIPTION: Example of enabling VDPAU hardware decoding specifically for H.264 and MPEG2 video codecs. This demonstrates how to limit hardware acceleration to specific codecs rather than applying it to all supported formats.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_55\n\nLANGUAGE: bash\nCODE:\n```\nmpv --hwdec=vdpau --hwdec-codecs=h264,mpeg2video\n```\n\n----------------------------------------\n\nTITLE: Specifying Subtitle File Extensions in MPV\nDESCRIPTION: This option defines the subtitle file extensions that MPV will try to match when using auto-loading. It also affects what MPV recognizes as subtitles during drag and drop.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_111\n\nLANGUAGE: config\nCODE:\n```\n--sub-auto-exts=ext1,ext2,...\n```\n\n----------------------------------------\n\nTITLE: Specifying YUV444P16 Format Structure in MPV\nDESCRIPTION: Defines the yuv444p16 (16-bit) pixel format with 3 planes, 16-bit components, and no chroma subsampling (4:4:4). Includes the basic description, regular format, and AVD configuration with little-endian specified.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_38\n\nLANGUAGE: technical\nCODE:\n```\nyuv444p16: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][uint]\n    planes=3, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits {0:16} {} {} {}\n    1: 16bits {} {0:16} {} {}\n    2: 16bits {} {} {0:16} {}\n  Regular: planes=3 compbytes=2 bitpad=0 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv444p16le chroma=0:0 flags=0x10 [planar]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Specifying YUV444P Format Structure in MPV\nDESCRIPTION: Defines the yuv444p pixel format with 3 planes, 8-bit components, and no chroma subsampling (4:4:4). Includes the basic description, regular format, and AVD configuration, with a note about yuvj444p alias.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_37\n\nLANGUAGE: technical\nCODE:\n```\nyuv444p: ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=0:0 align=1:1\n    {8/[0:0] 8/[0:0] 8/[0:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv444p chroma=0:0 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\n  Ambiguous alias: yuvj444p\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Scale in MPV Player\nDESCRIPTION: Sets the scaling factor for text subtitle font size. This option affects ASS subtitles as well and may lead to incorrect rendering. It's recommended to use with care or use --sub-font-size instead.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_81\n\nLANGUAGE: config\nCODE:\n```\n--sub-scale=<0-100>\n```\n\n----------------------------------------\n\nTITLE: Removing All Output Format Options\nDESCRIPTION: This argument allows the user to completely clear previously set options for the output format, providing a clean start for the next encoding operation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n--ofopts=\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Select Feature in select.conf\nDESCRIPTION: Example of how to configure the select feature using the select.conf file, including date format for history entries and option to hide duplicate history entries.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/select.rst#2025-04-21_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\nhistory_date_format=%Y-%m-%d %H:%M:%S\nhide_history_duplicates=yes\n```\n\n----------------------------------------\n\nTITLE: Retrieving Numeric Properties in Lua\nDESCRIPTION: Gets a property value as a number. Converts integer property values to float internally. Returns a number on success, or the default value and error on failure.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nmp.get_property_number(name [,def])\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Font Hinting in MPV Player\nDESCRIPTION: Sets the font hinting type for subtitle rendering. Options include none (default), light, normal, and native. Enabling hinting may lead to mispositioned text or reduced animation smoothness.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_91\n\nLANGUAGE: config\nCODE:\n```\n--sub-hinting=<none|light|normal|native>\n```\n\n----------------------------------------\n\nTITLE: Defining YUV420P Color Format Specification\nDESCRIPTION: Specifies the YUV420P color format with 8-bit depth, 4:2:0 chroma subsampling, and planar configuration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_31\n\nLANGUAGE: plaintext\nCODE:\n```\nyuv420p: ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=1:1 align=2:2\n    {8/[0:0] 8/[1:1] 8/[1:1] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=2x2 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv420p chroma=1:1 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\n  Ambiguous alias: yuvj420p\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Font Size Relativity in MPV Player\nDESCRIPTION: Makes the subtitle font size relative to the window or video size. This affects plain text subtitles or ASS if --sub-ass-override is set high enough.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_84\n\nLANGUAGE: config\nCODE:\n```\n--sub-scale-with-window=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Copying Metadata from Input to Output\nDESCRIPTION: This option allows users to control whether metadata is copied from the input to the output files during encoding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n--ocopy-metadata=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Codepage in MPV\nDESCRIPTION: This option specifies the subtitle codepage for text subtitle files. It uses uchardet for charset detection if available, with various fallback mechanisms.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_112\n\nLANGUAGE: config\nCODE:\n```\n--sub-codepage=<codepage>\n```\n\n----------------------------------------\n\nTITLE: Screenshot Template Format Specifiers\nDESCRIPTION: Format specifiers for customizing screenshot filenames including sequence numbers, timestamps, and file properties.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_175\n\nLANGUAGE: config\nCODE:\n```\n\"%[#][0X]n\"        A sequence number\n\"%f\"        Filename of currently played video\n\"%F\"        Same as %f but strip extension\n\"%x\"        Directory path of current video\n\"%X{fallback}\"        Directory path with fallback\n\"%p\"        Current playback time (HH:MM:SS)\n\"%P\"        Playback time with milliseconds\n\"%wX\"        Custom time format\n\"%tX\"        Current date/time format\n\"%{prop[:fallback text]}\"        Input property value\n\"%%\"        Literal % character\n```\n\n----------------------------------------\n\nTITLE: Configuring VSFilter Color Compatibility for Subtitles in MPV\nDESCRIPTION: This option controls how subtitle colors are handled with respect to different color spaces. It affects how colors are mangled to match historical VSFilter behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_105\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-vsfilter-color-compat=<basic|full|force-601|no>\n```\n\n----------------------------------------\n\nTITLE: Defining YUVA422P16 Format in Config\nDESCRIPTION: Specifies the YUVA422P16 format with 16-bit depth, 4:2:2 chroma subsampling, and planar configuration. It includes both little-endian and big-endian variants, along with AVD representations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_40\n\nLANGUAGE: config\nCODE:\n```\nyuva422p16: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][uint]\n    planes=4, chroma=1:0 align=2:1\n    {16/[0:0] 16/[1:0] 16/[1:0] 16/[0:0] }\n    0: 16bits {0:16} {} {} {}\n    1: 16bits {} {0:16} {} {}\n    2: 16bits {} {} {0:16} {}\n    3: 16bits {} {} {} {0:16}\n  Regular: planes=4 compbytes=2 bitpad=0 chroma=2x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva422p16le chroma=1:0 flags=0x90 [planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n    3: p=3  st=2  o=0  sh=0  d=16\nyuva422p16be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][be][uint]\n    planes=4, chroma=1:0 align=2:1\n    {16/[0:0] 16/[1:0] 16/[1:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {0:16} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16}\n  AVD: name=yuva422p16be chroma=1:0 flags=0x91 [be][planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n    3: p=3  st=2  o=0  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Setting Up format Audio Filter in mpv\nDESCRIPTION: Demonstrates the syntax for the format audio filter, which controls the audio format going into other filters.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_2\n\nLANGUAGE: config\nCODE:\n```\n\"format=format:srate:channels:out-srate:out-channels\"\n```\n\n----------------------------------------\n\nTITLE: Setting Draw Surface Size\nDESCRIPTION: Allows configuring the size of the surface used on the draw plane, which can be useful for scaling OSD or managing high-resolution rendering\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n--drm-draw-surface-size=<[WxH]>\n```\n\n----------------------------------------\n\nTITLE: Simulating an Empty File\nDESCRIPTION: This snippet shows how to use 'null://' to simulate an empty file for writing or reading, with specific autoprobing considerations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\n\"null://\"\n```\n\n----------------------------------------\n\nTITLE: Text Manipulation Commands in MPV\nDESCRIPTION: Commands for printing, expanding, and manipulating text with property expansion support. Includes functionality for path normalization and text escaping.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_9\n\nLANGUAGE: lua\nCODE:\n```\nprint-text <text>\n```\n\nLANGUAGE: lua\nCODE:\n```\nexpand-text <text>\n```\n\nLANGUAGE: lua\nCODE:\n```\nexpand-path <text>\n```\n\nLANGUAGE: lua\nCODE:\n```\nnormalize-path <filename>\n```\n\nLANGUAGE: lua\nCODE:\n```\nescape-ass <text>\n```\n\n----------------------------------------\n\nTITLE: RGB565 Format Descriptor\nDESCRIPTION: Descriptor for RGB565 pixel format with 5 bits for red, 6 bits for green, and 5 bits for blue channels packed into 16 bits per pixel. This format is commonly used in hardware with limited color depth requirements.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_24\n\nLANGUAGE: text\nCODE:\n```\nrgb565: fcsp=rgb ctype=uint\n  Basic desc: [ba][rgb][le][uint]\n    planes=1, chroma=0:0 align=1:1\n    {16/[0:0] }\n    0: 16bits {11:5} {5:6} {0:5} {}\n  AVD: name=rgb565le chroma=0:0 flags=0x20 [rgb]\n    0: p=0  st=2  o=1  sh=3  d=5\n    1: p=0  st=2  o=0  sh=5  d=6\n    2: p=0  st=2  o=0  sh=0  d=5\n```\n\n----------------------------------------\n\nTITLE: Big-Endian YUV 4:1:0 Format Descriptor (p410be)\nDESCRIPTION: Descriptor for planar YUV 4:1:0 format with 10-bit components in big-endian byte order. Similar to p410le but with different endianness flags and explicit endian_bytes specification.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_23\n\nLANGUAGE: text\nCODE:\n```\np410be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][nv][yuv][be][uint]\n    planes=2, chroma=0:0 align=1:1\n    {16/[0:0] 32/[0:0] }\n    0: 16bits endian_bytes=2 {0:16/6} {} {} {}\n    1: 32bits endian_bytes=2 {} {0:16/6} {16:16/6} {}\n  AVD: name=p410be chroma=0:0 flags=0x11 [be][planar]\n    0: p=0  st=2  o=0  sh=6  d=10\n    1: p=1  st=4  o=0  sh=6  d=10\n    2: p=1  st=4  o=2  sh=6  d=10\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Speed in MPV Player\nDESCRIPTION: Multiplies subtitle event timestamps with the given value. Useful for fixing playback speed for frame-based subtitle formats. Affects text subtitles only.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_89\n\nLANGUAGE: config\nCODE:\n```\n--sub-speed=<0.1-10.0>\n```\n\n----------------------------------------\n\nTITLE: Loading Custom ASS Styles in MPV Player\nDESCRIPTION: Loads all SSA/ASS styles found in the specified file for rendering text subtitles. The file syntax should match the [V4 Styles] / [V4+ Styles] section of SSA/ASS.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_97\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-styles=<filename>\n```\n\n----------------------------------------\n\nTITLE: Setting Image Subtitle Resolution in MPV\nDESCRIPTION: This option overrides the image subtitle resolution with the video resolution. It can be useful for testing broken subtitles in transcoded videos.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_108\n\nLANGUAGE: config\nCODE:\n```\n--image-subs-video-resolution=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Enabling PTS Correction in mpv\nDESCRIPTION: This option switches between modes of video timing determination. When set to 'no', it uses a fixed framerate value for timing.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_48\n\nLANGUAGE: config\nCODE:\n```\n\"--correct-pts=<yes|no>\"\n```\n\n----------------------------------------\n\nTITLE: Describing Hardware-Oriented Pixel Formats\nDESCRIPTION: This snippet collectively describes various pixel formats optimized for hardware acceleration, such as 'cuda', 'd3d11', and 'drm_prime'. These formats are tailored for systems using specific hardware interfaces to enhance processing efficiency.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_8\n\nLANGUAGE: unknown\nCODE:\n```\ncuda: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=cuda chroma=0:0 flags=0x8 [hw]\n```\n\nLANGUAGE: unknown\nCODE:\n```\nd3d11: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=d3d11 chroma=0:0 flags=0x8 [hw]\n```\n\nLANGUAGE: unknown\nCODE:\n```\nd3d11va_vld: [GENERIC] ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=1:1 align=2:2\n    {}\n  AVD: name=d3d11va_vld chroma=1:1 flags=0x8 [hw]\n```\n\nLANGUAGE: unknown\nCODE:\n```\nd3d12: [GENERIC] ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=d3d12 chroma=0:0 flags=0x8 [hw]\n```\n\nLANGUAGE: unknown\nCODE:\n```\ndrm_prime: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=drm_prime chroma=0:0 flags=0x8 [hw]\n```\n\nLANGUAGE: unknown\nCODE:\n```\ndxva2_vld: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=1:1 align=2:2\n    {}\n  AVD: name=dxva2_vld chroma=1:1 flags=0x8 [hw]\n```\n\n----------------------------------------\n\nTITLE: Setting ReplayGain Pre-amplification in MPV\nDESCRIPTION: Applies an additional pre-amplification gain in dB to the selected ReplayGain value. The default is 0 dB, meaning no additional amplification is applied.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_69\n\nLANGUAGE: bash\nCODE:\n```\n--replaygain-preamp=<db>\n```\n\n----------------------------------------\n\nTITLE: Dropping Buffers in MPV Player (Lua)\nDESCRIPTION: This command drops audio/video/demuxer buffers and restarts from fresh. It can help with unseekable streams that are going out of sync.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_25\n\nLANGUAGE: lua\nCODE:\n```\ndrop-buffers\n```\n\n----------------------------------------\n\nTITLE: MPV WASAPI Audio Output Options\nDESCRIPTION: Explains the Windows Audio Session API (WASAPI) audio output for MPV. It allows configuring the buffer duration in exclusive mode, offering options for default, minimum, or a specific duration in microseconds.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n``wasapi``\n    Audio output to the Windows Audio Session API.\n\n    The following global options are supported by this audio output:\n\n    ``--wasapi-exclusive-buffer=<default|min|1-2000000>``\n        Set buffer duration in exclusive mode (i.e., with\n        ``--audio-exclusive=yes``). ``default`` and ``min`` use the default and\n        minimum device period reported by WASAPI, respectively. You can also\n        directly specify the buffer duration in microseconds, in which case a\n        duration shorter than the minimum device period will be rounded up to\n        the minimum period.\n\n        The default buffer duration should provide robust playback in most\n        cases, but reportedly on some devices there are glitches following\n        stream resets under the default setting. In such cases, specifying a\n        shorter duration might help.\n```\n\n----------------------------------------\n\nTITLE: Interpolation Preservation in MPV\nDESCRIPTION: Option to preserve previously interpolated frames when renderer parameters change, which provides smoother transitions at the cost of slightly higher latency.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_187\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--interpolation-preserve\"    Preserve the previous frames' interpolated results even when renderer\n    parameters are changed - with the exception of options related to\n    cropping and video placement, which always invalidate the cache. Enabling\n    this option makes dynamic updates of renderer settings slightly smoother at\n    the cost of slightly higher latency in response to such changes. Defaults\n    to on. (Only affects ``--vo=gpu-next``, note that ``--vo=gpu`` always\n    invalidates interpolated frames)\n```\n\n----------------------------------------\n\nTITLE: Retrieving OSD-Formatted Properties in Lua\nDESCRIPTION: Gets a property value formatted for On-Screen Display (OSD). Returns the property as a string or a default value and error on failure. The returned value is identical to what would be displayed with ${name} in input.conf.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nmp.get_property_osd(name [,def])\n```\n\n----------------------------------------\n\nTITLE: Defining d3d11 Pixel Format - Plaintext\nDESCRIPTION: This snippet details the d3d11 pixel format, designed for Direct3D 11, specifying its basic description and AVD configuration for optimal rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\nd3d11: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=d3d11 chroma=0:0 flags=0x8 [hw]\n```\n\n----------------------------------------\n\nTITLE: MPV Pipewire Volume Mode Option\nDESCRIPTION: Specifies whether the ao-volume property should apply to channel volumes or the global volume when using the pipewire audio output. The default is to use channel volumes.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n\t``--pipewire-volume-mode=<channel|global>``\n        Specify if the ``ao-volume`` property should apply to the channel\n        volumes or the global volume.\n        By default the channel volumes are used.\n```\n\n----------------------------------------\n\nTITLE: --stop-playback-on-init-failure=<yes|no> for MPV Player\nDESCRIPTION: This option determines whether playback should stop if either audio or video fails to initialize, with a default setting of 'no' which allows it to continue in audio-only or video-only mode. The inputs are 'yes' or 'no' and directly govern player behavior upon initialization failures.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\n--stop-playback-on-init-failure=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Playing Files Adjacent to Watch Later Entry\nDESCRIPTION: Example input.conf configuration to play files adjacent to a selected watch later entry, enabling autocreate-playlist.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/select.rst#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\ng-w script-binding select/select-watch-later; no-osd set autocreate-playlist filter\n```\n\n----------------------------------------\n\nTITLE: Appending to a Local File\nDESCRIPTION: This code demonstrates the 'appending://' protocol to play a file while assuming it is being continuously appended to.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\n\"appending://PATH\"\n```\n\n----------------------------------------\n\nTITLE: Forcing ASS Margins in MPV Player\nDESCRIPTION: Enables placing toptitles and subtitles in black borders when available, if the subtitles are in ASS format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_100\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-force-margins\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Recentering in mpv\nDESCRIPTION: This option determines whether the video should be recentered when it becomes smaller than the window after zooming operations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_46\n\nLANGUAGE: config\nCODE:\n```\n\"--video-recenter=<yes|no>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Console Commands in MPV Player (INI)\nDESCRIPTION: Configuration options for the console commands script in MPV Player. These settings control history persistence, file paths, and input remembering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/commands.rst#2025-04-21_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\npersist_history=no\nhistory_path=~~state/command_history.txt\nremember_input=yes\n```\n\n----------------------------------------\n\nTITLE: Setting Bidirectional Text Compatibility for Subtitles in MPV\nDESCRIPTION: This option sets implicit bidi detection to 'ltr' instead of 'auto' to match ASS' default. It disables libass' incompatible extensions and affects plaintext subtitles only.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_104\n\nLANGUAGE: config\nCODE:\n```\n--sub-vsfilter-bidi-compat=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Defining RGB and YUV Pixel Format Configurations in MPV\nDESCRIPTION: Configuration mapping for various RGB and YUV pixel formats in MPV player. Each entry defines alignment ratios, overlay formats, video formats, and alpha channel handling capabilities for a specific pixel format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/draw_bmp.txt#2025-04-21_snippet_1\n\nLANGUAGE: config\nCODE:\n```\nrgb48       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nrgb48be     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nrgb4_byte   = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb555      = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb555be    = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb565      = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb565be    = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb8        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgba        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrap, a=unknown, ca=unknown, ca_f=unknown\nrgba64      = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\nrgba64be    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\nrgbaf16     = no\nrgbaf16be   = no\nrgbaf32     = no\nrgbaf32be   = no\nrgbf32      = no\nrgbf32be    = no\nuyvy422     = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nuyyvyy411   = no\nvaapi       = no\nvdpau       = no\nvdpau_output= no\nvideotoolbox= no\nvulkan      = no\nvuya        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nvuyx        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nx2bgr10     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nx2bgr10be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nx2rgb10be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nxv30        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nxv30be      = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nxv36        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nxv36be      = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nxvmc        = no\nxyz12       = align=1:1 ov=gbrap  , ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nxyz12be     = align=1:1 ov=gbrap  , ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ny1          = no\ny210        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\ny210be      = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\ny212        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\ny212be      = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nya16        = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayaf32, a=unknown, ca=unknown, ca_f=unknown\nya16be      = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayaf32, a=unknown, ca=unknown, ca_f=unknown\nya8         = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayaf32, a=unknown, ca=unknown, ca_f=unknown\nyap16       = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayaf32, a=unknown, ca=unknown, ca_f=unknown\nyap8        = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayaf32, a=unknown, ca=unknown, ca_f=unknown\nyuv410p     = no\nyuv410pf    = no\nyuv411p     = no\nyuv411pf    = no\nyuv420p     = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p10   = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p10be = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p12   = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p12be = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p14   = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p14be = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p16   = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p16be = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p9    = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420p9be  = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv420pf    = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p     = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p10   = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p10be = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p12   = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p12be = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p14   = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p14be = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p16   = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p16be = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p9    = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422p9be  = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv422pf    = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuv440p     = no\nyuv440p10   = no\nyuv440p10be = no\nyuv440p12   = no\nyuv440p12be = no\nyuv440pf    = no\nyuv444p     = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p10   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p10be = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p12   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p12be = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p14   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p14be = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p16   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p16be = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p9    = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444p9be  = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuv444pf    = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva410pf   = no\nyuva411pf   = no\nyuva420p    = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420p10  = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420p10be= align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420p16  = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420p16be= align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420p9   = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420p9be = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva420pf   = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuva420pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p    = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p10  = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p10be= align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p12  = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p12be= align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p16  = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p16be= align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p9   = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422p9be = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva422pf   = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuva422pf, a=gray, ca=gray, ca_f=grayf32\nyuva440pf   = no\nyuva444p    = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p10  = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p10be= align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p12  = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p12be= align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p16  = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p16be= align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p9   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444p9be = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nyuva444pf   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Command Example\nDESCRIPTION: This example shows how to initiate an asynchronous command in the mpv player, allowing non-blocking execution of commands.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_7\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"command\": [\"screenshot\"], \"request_id\": 123, \"async\": true }\n```\n\nLANGUAGE: JSON\nCODE:\n```\n{\"request_id\":123,\"error\":\"success\",\"data\":null}\n```\n\n----------------------------------------\n\nTITLE: Configuring Matroska-specific Demuxer Options in MPV\nDESCRIPTION: These options are specific to the Matroska demuxer, controlling subtitle preroll behavior, video duration probing, and crop compatibility mode.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_163\n\nLANGUAGE: config\nCODE:\n```\n--demuxer-mkv-subtitle-preroll=<yes|index|no>\n--demuxer-mkv-subtitle-preroll-secs=<value>\n--demuxer-mkv-subtitle-preroll-secs-index=<value>\n--demuxer-mkv-probe-start-time=<yes|no>\n--demuxer-mkv-probe-video-duration=<yes|no|full>\n--demuxer-mkv-crop-compat=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: 32-bit Float RGBA Format Descriptor (rgbaf32)\nDESCRIPTION: Descriptor for RGBA format with 32-bit floating-point components. This high-precision format allocates 32 bits per channel (R,G,B,A) for a total of 128 bits per pixel, providing maximum precision for HDR content.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_27\n\nLANGUAGE: text\nCODE:\n```\nrgbaf32: [GENERIC] fcsp=rgb ctype=float\n  Basic desc: [ba][a][rgb][le][be][float]\n    planes=1, chroma=0:0 align=1:1\n    {-128/[0:0] }\n    0: -128bits {} {} {} {}\n  [NOALLOC]\n  AVD: name=rgbaf32le chroma=0:0 flags=0x2a0 [rgb][alpha][float]\n    0: p=0  st=16 o=0  sh=0  d=32\n    1: p=0  st=16 o=4  sh=0  d=32\n    2: p=0  st=16 o=8  sh=0  d=32\n    3: p=0  st=16 o=12 sh=0  d=32\n```\n\n----------------------------------------\n\nTITLE: MPV Video Format Property Types\nDESCRIPTION: A mapping of MPV video properties to their corresponding format types. These properties include signal peak, light, chroma location, rotation, stereo input, BPP, alpha, luminance values, and other video metadata.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_31\n\nLANGUAGE: plaintext\nCODE:\n```\n\"sig-peak\"          MPV_FORMAT_DOUBLE\n\"light\"             MPV_FORMAT_STRING\n\"chroma-location\"   MPV_FORMAT_STRING\n\"rotate\"            MPV_FORMAT_INT64\n\"stereo-in\"         MPV_FORMAT_STRING\n\"average-bpp\"       MPV_FORMAT_INT64\n\"alpha\"             MPV_FORMAT_STRING\n\"min-luma\"          MPV_FORMAT_DOUBLE\n\"max-luma\"          MPV_FORMAT_DOUBLE\n\"max-cll\"           MPV_FORMAT_DOUBLE\n\"max-fall\"          MPV_FORMAT_DOUBLE\n\"scene-max-r\"       MPV_FORMAT_DOUBLE\n\"scene-max-g\"       MPV_FORMAT_DOUBLE\n\"scene-max-b\"       MPV_FORMAT_DOUBLE\n\"max-pq-y\"          MPV_FORMAT_DOUBLE\n\"avg-pq-y\"          MPV_FORMAT_DOUBLE\n```\n\n----------------------------------------\n\nTITLE: Describing bgr565be Pixel Format\nDESCRIPTION: This snippet details the bgr565be pixel format, emphasizing its RGB components, 16-bit structure, and big-endian order. It defines how pixel data is arranged and specifies associated attributes like chroma and alignment. The format is vital for compatibility with big-endian hardware.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_3\n\nLANGUAGE: unknown\nCODE:\n```\nbgr565be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][rgb][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {16/[0:0] }\n    0: 16bits endian_bytes=2 {0:5} {5:6} {11:5} {}\n  AVD: name=bgr565be chroma=0:0 flags=0x21 [be][rgb]\n    0: p=0  st=2  o=0  sh=0  d=5\n    1: p=0  st=2  o=0  sh=5  d=6\n    2: p=0  st=2  o=-1 sh=3  d=5\n```\n\n----------------------------------------\n\nTITLE: Video Scaling Control\nDESCRIPTION: Command option for disabling or controlling video scaling behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_39\n\nLANGUAGE: shell\nCODE:\n```\n--video-unscaled=<no|yes|downscale-big>\n```\n\n----------------------------------------\n\nTITLE: Controlling Secondary Subtitle Visibility in MPV\nDESCRIPTION: This option can be used to disable the display of secondary subtitles while still selecting and decoding them.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_121\n\nLANGUAGE: config\nCODE:\n```\n--secondary-sub-visibility=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Metadata for Output File\nDESCRIPTION: This command specifies which metadata tags to include in the output file, allowing for better organization and identification of encoded files.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n--oset-metadata=<metadata-tag[,metadata-tag,...]>\n```\n\n----------------------------------------\n\nTITLE: Terminal Output Configuration - MPV Player\nDESCRIPTION: Settings for controlling terminal output verbosity, color output, and message logging levels.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_179\n\nLANGUAGE: config\nCODE:\n```\n--quiet\n--really-quiet\n--terminal=<yes|no>\n--msg-color=<yes|no>\n--msg-level=<module1=level1,module2=level2,...>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Font Size in MPV\nDESCRIPTION: Specifies the subtitle font size. The unit is the size in scaled pixels at a window height of 720. The actual pixel size is scaled with the window height.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_126\n\nLANGUAGE: shell\nCODE:\n```\n--sub-font-size=<size>\n```\n\n----------------------------------------\n\nTITLE: Defining Video Format Compatibility for mpv-player\nDESCRIPTION: This snippet defines the compatibility and properties of various video formats for mpv-player. It includes information on alignment, overlay formats, video formats, alpha channel, and chroma alpha for each format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/draw_bmp.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n0bgr        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\n0rgb        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nabgr        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrap, a=unknown, ca=unknown, ca_f=unknown\nargb        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrap, a=unknown, ca=unknown, ca_f=unknown\nayuv64      = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nayuv64be    = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\nbayer_bggr16= no\nbayer_bggr16be= no\nbayer_bggr8 = no\nbayer_gbrg16= no\nbayer_gbrg16be= no\nbayer_gbrg8 = no\nbayer_grbg16= no\nbayer_grbg16be= no\nbayer_grbg8 = no\nbayer_rggb16= no\nbayer_rggb16be= no\nbayer_rggb8 = no\nbgr0        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr24       = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr4        = no\nbgr444      = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr444be    = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr48       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nbgr48be     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nbgr4_byte   = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr555      = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr555be    = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr565      = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr565be    = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgr8        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nbgra        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrap, a=unknown, ca=unknown, ca_f=unknown\nbgra64      = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\nbgra64be    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ncuda        = no\nd3d11       = no\nd3d11va_vld = no\ndrm_prime   = no\ndxva2_vld   = no\ngbrap       = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrap, a=unknown, ca=unknown, ca_f=unknown\ngbrap10     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap10be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap12     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap12be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap14     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap14be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap16     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrap16be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrapf32    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrapf32be  = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\ngbrp1       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp10      = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp10be    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp12      = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp12be    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp14      = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp14be    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp16      = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp16be    = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp2       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp3       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp4       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp5       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp6       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp9       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrp9be     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrpf32     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngbrpf32be   = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\ngray        = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray10      = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray10be    = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray12      = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray12be    = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray14      = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray14be    = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray16      = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray16be    = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray9       = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngray9be     = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngrayaf32    = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayaf32, a=unknown, ca=unknown, ca_f=unknown\ngrayf32     = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\ngrayf32be   = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\nmediacodec  = no\nmmal        = no\nmonob       = align=8:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\nmonow       = align=8:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\nnv12        = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nnv16        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nnv20        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nnv20be      = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nnv21        = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\nnv24        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nnv42        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\nopencl      = no\np010        = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\np010be      = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\np012        = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\np012be      = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\np016        = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\np016be      = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\np210        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\np210be      = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\np212        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\np212be      = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\np216        = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\np216be      = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\np410        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\np410be      = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\np412        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\np412be      = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\np416        = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\np416be      = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuv444pf, a=unknown, ca=unknown, ca_f=unknown\npal8        = no\nqsv         = no\nrgb0        = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb24       = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb30       = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrpf32, a=unknown, ca=unknown, ca_f=unknown\nrgb4        = no\nrgb444      = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\nrgb444be    = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrp, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Input Commands Example\nDESCRIPTION: Example showing how to set multiple input commands using the input-commands option\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_167\n\nLANGUAGE: shell\nCODE:\n```\n--input-commands=\"playlist-play-index 1,set ao-volume 40\"\n```\n\n----------------------------------------\n\nTITLE: Setting Input File Type for Multiple Image Files in MPV Player\nDESCRIPTION: Specifies the input file type for mf:// protocol. Available types are jpeg, png, tga, and sgi. By default, this is guessed from file extension.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_219\n\nLANGUAGE: ini\nCODE:\n```\n--mf-type=<value>\n```\n\n----------------------------------------\n\nTITLE: Defining ABGR Pixel Format in MPV Player\nDESCRIPTION: Specifies the ABGR pixel format with 32-bit depth, RGB color space with alpha channel, and little-endian byte order. Includes basic description, regular format, and AVD representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nabgr: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {24:8} {16:8} {8:8} {0:8}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {4, 3, 2, 1}\n  AVD: name=abgr chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=4  o=3  sh=0  d=8\n    1: p=0  st=4  o=2  sh=0  d=8\n    2: p=0  st=4  o=1  sh=0  d=8\n    3: p=0  st=4  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: MPV Null Audio Output Options\nDESCRIPTION: Details the 'null' audio output, which produces no audio but maintains video playback speed.  Options include untimed decoding, buffer length simulation, and simulated audio playback speed adjustments.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n``null``\n    Produces no audio output but maintains video playback speed. You can use\n    ``--ao=null --ao-null-untimed`` for benchmarking.\n\n    The following global options are supported by this audio output:\n\n    ``--ao-null-untimed``\n        Do not simulate timing of a perfect audio device. This means audio\n        decoding will go as fast as possible, instead of timing it to the\n        system clock.\n\n    ``--ao-null-buffer``\n        Simulated buffer length in seconds.\n\n    ``--ao-null-outburst``\n        Simulated chunk size in samples.\n\n    ``--ao-null-speed``\n        Simulated audio playback speed as a multiplier. Usually, a real audio\n        device will not go exactly as fast as the system clock. It will deviate\n        just a little, and this option helps to simulate this.\n\n    ``--ao-null-latency``\n        Simulated device latency. This is additional to EOF.\n\n    ``--ao-null-broken-eof``\n        Simulate broken audio drivers, which always add the fixed device\n        latency to the reported audio playback position.\n\n    ``--ao-null-broken-delay``\n        Simulate broken audio drivers, which don't report latency correctly.\n\n    ``--ao-null-channel-layouts``\n        If not empty, this is a ``,`` separated list of channel layouts the\n        AO allows. This can be used to test channel layout selection.\n\n    ``--ao-null-format``\n        Force the audio output format the AO will accept. If unset accepts any.\n```\n\n----------------------------------------\n\nTITLE: Setting AVOptions for Libavformat Streams in MPV Player\nDESCRIPTION: Sets AVOptions on streams opened with libavformat. Unknown or misspelled options are silently ignored. Options are listed as key/value pairs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_221\n\nLANGUAGE: ini\nCODE:\n```\n--stream-lavf-o=opt1=value1,opt2=value2,...\n```\n\n----------------------------------------\n\nTITLE: Fixed-length quoting example\nDESCRIPTION: Demonstrates the fixed-length quoting syntax in mpv for use with external scripts. It explains how to specify the length of the string in bytes, allowing mpv to correctly interpret arguments containing special characters. This method is particularly useful for scenarios involving JSON-IPC or external script integration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n\"mpv '--vf=foo:option1=%11%quoted text' test.avi\"\n```\n\nLANGUAGE: Shell\nCODE:\n```\n\"mpv --vf=foo:option1=%`expr length \\\"$NAME\\\"`%\\\"$NAME\\\" test.avi\"\n```\n\n----------------------------------------\n\nTITLE: Updating Subprojects Database with Meson\nDESCRIPTION: This snippet demonstrates how to update the subprojects database from Meson's WrapDB and install necessary wraps for mpv dependencies.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmeson wrap update-db\n\nmeson wrap install expat\nmeson wrap install harfbuzz\nmeson wrap install libpng\nmeson wrap install zlib\n```\n\n----------------------------------------\n\nTITLE: Example: Adding Metadata Tags\nDESCRIPTION: This example demonstrates how to add specific metadata tags to the output file, enhancing the usability of the encoded media.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n--oset-metadata=title=\"Output title\",comment=\"Another tag\"\n```\n\n----------------------------------------\n\nTITLE: Setting Message Verbosity in MPV (Bash)\nDESCRIPTION: Demonstrates how to set message verbosity levels for specific modules in MPV using command-line arguments. The first example silences output from the sndio audio output module, while the second sets a global warning level with a specific error level for the ALSA audio output.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_180\n\nLANGUAGE: bash\nCODE:\n```\nmpv --msg-level=ao/sndio=no\n```\n\nLANGUAGE: bash\nCODE:\n```\nmpv --msg-level=all=warn,ao/alsa=error\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Scale with Window Size in MPV Player\nDESCRIPTION: Controls whether subtitles scale with the window size. This affects plain text subtitles or ASS if --sub-ass-override is set high enough.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_83\n\nLANGUAGE: config\nCODE:\n```\n--sub-scale-by-window=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Subtitle Position Adjustment\nDESCRIPTION: This snippet describes how to move subtitle rendering within the filter chain using the `sub` option.  It allows placing subtitles before other video filters, influencing their color with equalizer settings, and adding black bars for subtitle placement using margins.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n\"sub=[=bottom-margin:top-margin]\"\n\n```\n\n----------------------------------------\n\nTITLE: Generating OSD Font for MPV\nDESCRIPTION: Shell command to generate the on-screen display font after modifying glyphs. This script processes the updated glyph files into a format usable by MPV.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/TOOLS/mpv-osd-symbols.sfdir/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsh TOOLS/gen-osd-font.sh\n```\n\n----------------------------------------\n\nTITLE: Describing bgra64 Pixel Format\nDESCRIPTION: This snippet delves into the bgra64 pixel format, characterized by its 64-bit structure and RGBA components. The format is intended for high-fidelity color representations, accommodating applications with extensive color depth requirements.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_6\n\nLANGUAGE: unknown\nCODE:\n```\nbgra64: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits {32:16} {16:16} {0:16} {48:16}\n  Regular: planes=1 compbytes=2 bitpad=0 chroma=1x1 ctype=uint\n    0: {3, 2, 1, 4}\n  AVD: name=bgra64le chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=8  o=4  sh=0  d=16\n    1: p=0  st=8  o=2  sh=0  d=16\n    2: p=0  st=8  o=0  sh=0  d=16\n    3: p=0  st=8  o=6  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: MPV PCM Audio Output Options\nDESCRIPTION: Describes the Raw PCM/WAVE file writer audio output for MPV.  It supports including/excluding the WAVE header and specifying the output filename, as well as appending to an existing file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n``pcm``\n    Raw PCM/WAVE file writer audio output\n\n    The following global options are supported by this audio output:\n\n    ``--ao-pcm-waveheader=<yes|no>``\n        Include or do not include the WAVE header (default: included). When\n        not included, raw PCM will be generated.\n    ``--ao-pcm-file=<filename>``\n        Write the sound to ``<filename>`` instead of the default\n        ``audiodump.wav``. If ``no-waveheader`` is specified, the default is\n        ``audiodump.pcm``.\n    ``--ao-pcm-append=<yes|no>``\n        Append to the file, instead of overwriting it. Always use this with the\n        ``no-waveheader`` option - with ``waveheader`` it's broken, because\n        it will write a WAVE header every time the file is opened.\n```\n\n----------------------------------------\n\nTITLE: Configuration Management Commands in MPV\nDESCRIPTION: Commands for managing configuration profiles, loading config files, and handling watch-later configurations during playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\napply-profile <name> [<mode>]\n```\n\nLANGUAGE: bash\nCODE:\n```\nload-config-file <filename>\n```\n\nLANGUAGE: bash\nCODE:\n```\nwrite-watch-later-config\n```\n\nLANGUAGE: bash\nCODE:\n```\ndelete-watch-later-config [<filename>]\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Vertical Margin in MPV\nDESCRIPTION: Specifies the top and bottom screen margin for subtitles in scaled pixels. This affects the vertical margins of unstyled text subtitles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_136\n\nLANGUAGE: shell\nCODE:\n```\n--sub-margin-y=<size>\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Display After Video End in MPV\nDESCRIPTION: Enables or disables subtitle updates based on audio timestamps after the last video frame. When disabled, the subtitles for the last video frame stay onscreen.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_124\n\nLANGUAGE: shell\nCODE:\n```\n--sub-past-video-end\n```\n\n----------------------------------------\n\nTITLE: Example: Excluding Metadata Tags\nDESCRIPTION: This example illustrates how to exclude specific metadata tags from being copied to the output file during the encoding process.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n--oremove-metadata=comment,genre\n```\n\n----------------------------------------\n\nTITLE: Setting Forced Media Title in MPV\nDESCRIPTION: Forces the contents of the 'media-title' property to a specified value. Useful for scripts that want to set a title without overriding the user's setting in '--title'.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_227\n\nLANGUAGE: plaintext\nCODE:\n```\n--force-media-title=<string>\n```\n\n----------------------------------------\n\nTITLE: Controlling Subtitle Visibility in MPV\nDESCRIPTION: This option can be used to disable the display of subtitles while still selecting and decoding them.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_120\n\nLANGUAGE: config\nCODE:\n```\n--sub-visibility=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Sending Commands to Video Filters in MPV Player (Lua)\nDESCRIPTION: This command sends a command to a specific video filter or all filters. It's primarily used with the 'lavfi' filter and requires knowledge of libavfilter commands.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_22\n\nLANGUAGE: lua\nCODE:\n```\nvf-command <label> <command> <argument> [<target>]\n```\n\n----------------------------------------\n\nTITLE: OSC Idle Screen Script Command in mpv\nDESCRIPTION: The `osc-idlescreen` command controls the visibility of the mpv logo when the player is idle. Valid arguments are `yes`, `no`, and `cycle`, allowing the user to toggle the idle screen on or off.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n\"osc-idlescreen\"\n```\n\n----------------------------------------\n\nTITLE: Wayland Shared Memory Video Output\nDESCRIPTION: Fallback video output driver for Wayland without hardware acceleration, requiring additional performance profile configuration\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n--profile=sw-fast\n```\n\n----------------------------------------\n\nTITLE: YUV Pixel Format Conversion Mappings for mpv\nDESCRIPTION: A comprehensive mapping table that shows how various YUV pixel formats are converted in the mpv player. Each line describes a conversion from a source format to a target format with specific attributes like planarity, bit depth, chroma subsampling, and whether floating-point representation is used.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/repack.txt#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nyuv444p9be      => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuva420p        => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p10      => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p10be    => [pa] [un] yuva420p10      | a=2:2\nyuva420p10be    => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p16      => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p16be    => [pa] [un] yuva420p16      | a=2:2\nyuva420p16be    => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p9       => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p9be     => [pa] [un] yuva420p9       | a=2:2\nyuva420p9be     => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva422p        => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p10      => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p10be    => [pa] [un] yuva422p10      | a=2:1\nyuva422p10be    => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p12      => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p12be    => [pa] [un] yuva422p12      | a=2:1\nyuva422p12be    => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p16      => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p16be    => [pa] [un] yuva422p16      | a=2:1\nyuva422p16be    => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p9       => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva422p9be     => [pa] [un] yuva422p9       | a=2:1\nyuva422p9be     => [pa] [un] yuva422pf       | a=2:1 [planar-f32]\nyuva444p        => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p10      => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p10be    => [pa] [un] yuva444p10      | a=1:1\nyuva444p10be    => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p12      => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p12be    => [pa] [un] yuva444p12      | a=1:1\nyuva444p12be    => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p16      => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p16be    => [pa] [un] yuva444p16      | a=1:1\nyuva444p16be    => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p9       => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuva444p9be     => [pa] [un] yuva444p9       | a=1:1\nyuva444p9be     => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nyuvj411p        => [pa] [un] yuv411pf        | a=4:1 [planar-f32]\nyuvj422p        => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuvj440p        => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuyv422         => [pa] [un] yuv422p         | a=2:1 [tu] [tp]\nyuyv422         => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyvyu422         => [pa] [un] yuv422p         | a=2:1 [tu] [tp]\nyvyu422         => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\n```\n\n----------------------------------------\n\nTITLE: Building mpv with Libplacebo Subproject\nDESCRIPTION: This snippet demonstrates building mpv with a git checkout of libplacebo as a subproject. This approach is useful when a compatible libplacebo version is not readily available in the build environment. The cloned libplacebo will be statically linked with mpv during the compilation process.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -p subprojects\ngit clone https://code.videolan.org/videolan/libplacebo.git --depth=1 --recursive subprojects/libplacebo\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Data Usage for ASS Subtitles in MPV Player\nDESCRIPTION: Controls which information about the video stream is passed to libass for subtitle rendering. Options affect compatibility with standard ASS and may impact subtitle rendering accuracy.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_102\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-use-video-data=<none|aspect-ratio|all>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Font Provider in MPV\nDESCRIPTION: Options for configuring which font provider backend to use for displaying subtitles in MPV. Supports automatic detection, fontconfig, or disabling system fonts entirely.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_148\n\nLANGUAGE: shell\nCODE:\n```\n--sub-font-provider=<auto|none|fontconfig>\n```\n\n----------------------------------------\n\nTITLE: MPV Positioning Configuration Options\nDESCRIPTION: Configuration file format for positioning.conf that customizes the positioning script behavior. Sets toggle_align_to_cursor and suppress_osd options with their default values.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/positioning.rst#2025-04-21_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\ntoggle_align_to_cursor=no\nsuppress_osd=no\n```\n\n----------------------------------------\n\nTITLE: Global Tags in EDL Metadata\nDESCRIPTION: Provides an example of setting global metadata tags for an EDL file using the '!global_tags' header, which adds informational tags similar to ID3 tags in audio files.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n!global_tags,title=bla,something_arbitrary=even_more_arbitrary\n```\n\n----------------------------------------\n\nTITLE: Controlling ReplayGain Clipping in MPV\nDESCRIPTION: Determines whether ReplayGain volume adjustments are allowed to cause audio clipping. When set to 'no' (default), mpv automatically prevents clipping by reducing the gain.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_70\n\nLANGUAGE: bash\nCODE:\n```\n--replaygain-clip=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Aspect Ratio Override in MPV\nDESCRIPTION: This option allows passing an arbitrary aspect ratio to libass instead of the video's actual aspect ratio. It has no effect if sub-ass-use-video-data is set to none.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_103\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-video-aspect-override=<no|ratio>\n```\n\n----------------------------------------\n\nTITLE: Decoder List Node Structure\nDESCRIPTION: Shows the structure for decoder list information when querying with MPV_FORMAT_NODE, containing codec name, driver name and description for each decoder entry.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_43\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (for each decoder entry)\n        \"codec\"         MPV_FORMAT_STRING\n        \"driver\"        MPV_FORMAT_STRING\n        \"description\"   MPV_FORMAT_STRING\n```\n\n----------------------------------------\n\nTITLE: Video Frame Fingerprinting Filter\nDESCRIPTION: Compute video frame fingerprints for metadata generation and logo detection, supporting multiple output types and configuration options\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_18\n\nLANGUAGE: configuration\nCODE:\n```\ntype=<gray-hex-8x8|gray-hex-16x16>\nclear-on-query=<yes|no>\nprint=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Video Format Specification - RGBAF32BE Format\nDESCRIPTION: Specification for RGBAF32BE format with alpha channel, using big-endian 32-bit float components\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_28\n\nLANGUAGE: config\nCODE:\n```\n[NOALLOC]\nAVD: name=rgbaf32be chroma=0:0 flags=0x2a1 [be][rgb][alpha][float]\n  0: p=0  st=16 o=0  sh=0  d=32\n  1: p=0  st=16 o=4  sh=0  d=32\n  2: p=0  st=16 o=8  sh=0  d=32\n  3: p=0  st=16 o=12 sh=0  d=32\n```\n\n----------------------------------------\n\nTITLE: Reading Data from a File Descriptor\nDESCRIPTION: This snippet shows how to read data from a file descriptor using the 'fd://' protocol, allowing for arbitrary file descriptors.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\n\"fd://123\"\n```\n\n----------------------------------------\n\nTITLE: Rebinding Playlist Selection in input.conf\nDESCRIPTION: Example of how to rebind the playlist selection function to a different key (Ctrl+p) in the input.conf file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/select.rst#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCtrl+p script-binding select/select-playlist\n```\n\n----------------------------------------\n\nTITLE: Sending Keyboard Events in mpv Player API - Lua\nDESCRIPTION: This snippet documents commands to send keyboard events through the mpv input handler, detailing how to configure the keys and their effects.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_14\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``keypress <name> [<scale>]``\n    Send a key event through mpv's input handler, triggering whatever\n    behavior is configured to that key. ``name`` uses the ``input.conf``\n    naming scheme for keys and modifiers. ``scale`` is used to scale numerical\n    change effected by the bound command (same mechanism as precise scrolling).\n    Useful for the client API: key events can be sent to libmpv to handle\n    internally.\n\n``keydown <name>``\n    Similar to ``keypress``, but sets the ``KEYDOWN`` flag so that if the key is\n    bound to a repeatable command, it will be run repeatedly with mpv's key\n    repeat timing until the ``keyup`` command is called.\n\n``keyup [<name>]``\n    Set the ``KEYUP`` flag, stopping any repeated behavior that had been\n    triggered. ``name`` is optional. If ``name`` is not given or is an\n    empty string, ``KEYUP`` will be set on all keys. Otherwise, ``KEYUP`` will\n    only be set on the key specified by ``name``.\n\"\"\"\n```\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``keybind <name> <cmd> [<comment>]``\n    Binds a key to an input command. ``cmd`` must be a complete command\n    containing all the desired arguments and flags. Both ``name`` and\n    ``cmd`` use the ``input.conf`` naming scheme. ``comment`` is an optional\n    string which can be read as the ``comment`` entry of ``input-bindings``.\n    This is primarily useful for the client API.\n\"\"\"\n```\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``enable-section <name> [<flags>]``\n    This command is deprecated, except for mpv-internal uses.\n\n    Enable all key bindings in the named input section.\n\n    The enabled input sections form a stack. Bindings in sections on the top of\n    the stack are preferred to lower sections. This command puts the section\n    on top of the stack. If the section was already on the stack, it is\n    implicitly removed beforehand. (A section cannot be on the stack more than\n    once.)\n\n    The ``flags`` parameter can be a combination (separated by ``+``) of the\n    following flags:\n\n    <exclusive>\n        All sections enabled before the newly enabled section are disabled.\n        They will be re-enabled as soon as all exclusive sections above them\n        are removed. In other words, the new section shadows all previous\n        sections.\n    <allow-hide-cursor>\n        This feature can't be used through the public API.\n    <allow-vo-dragging>\n        Same.\n\"\"\"\n```\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``disable-section <name>``\n    This command is deprecated, except for mpv-internal uses.\n\n    Disable the named input section. Undoes ``enable-section``.\n\"\"\"\n```\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``define-section <name> <contents> [<flags>]``\n    This command is deprecated, except for mpv-internal uses.\n\n    Create a named input section, or replace the contents of an already existing\n    input section. The ``contents`` parameter uses the same syntax as the\n    ``input.conf`` file (except that using the section syntax in it is not\n    allowed), including the need to separate bindings with a newline character.\n\n    If the ``contents`` parameter is an empty string, the section is removed.\n\n    The section with the name ``default`` is the normal input section.\n\n    In general, input sections have to be enabled with the ``enable-section``\n    command, or they are ignored.\n\n    The last parameter has the following meaning:\n\n    <default> (also used if parameter omitted)\n        Use a key binding defined by this section only if the user hasn't\n        already bound this key to a command.\n    <force>\n        Always bind a key. (The input section that was made active most recently\n        wins if there are ambiguities.)\n\n    This command can be used to dispatch arbitrary keys to a script or a client\n    API user. If the input section defines ``script-binding`` commands, it is\n    also possible to get separate events on key up/down, and relatively detailed\n    information about the key state. The special key name ``unmapped`` can be\n    used to match any unmapped key.\n\"\"\"\n```\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``load-input-conf <filename>``\n    Load an input configuration file, similar to the ``--input-conf`` option. If\n    the file was already included, its previous bindings are not reset before it\n    is reparsed.\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Querying demuxer-cache-state Property in Lua\nDESCRIPTION: This snippet demonstrates the structure of the demuxer-cache-state property when queried using mp.get_property_native in Lua. It shows a complex nested structure containing information about seekable ranges, cache status, and stream-specific details.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_30\n\nLANGUAGE: Lua\nCODE:\n```\nMPV_FORMAT_NODE_MAP\n    \"seekable-ranges\"   MPV_FORMAT_NODE_ARRAY\n        MPV_FORMAT_NODE_MAP\n            \"start\"             MPV_FORMAT_DOUBLE\n            \"end\"               MPV_FORMAT_DOUBLE\n    \"bof-cached\"        MPV_FORMAT_FLAG\n    \"eof-cached\"        MPV_FORMAT_FLAG\n    \"fw-bytes\"          MPV_FORMAT_INT64\n    \"file-cache-bytes\"  MPV_FORMAT_INT64\n    \"cache-end\"         MPV_FORMAT_DOUBLE\n    \"reader-pts\"        MPV_FORMAT_DOUBLE\n    \"cache-duration\"    MPV_FORMAT_DOUBLE\n    \"raw-input-rate\"    MPV_FORMAT_INT64\n    \"ts-per-stream\"     MPV_FORMAT_NODE_ARRAY\n        MPV_FORMAT_NODE_MAP\n              \"type\"            MPV_FORMAT_STRING\n              \"cache-duration\"  MPV_FORMAT_DOUBLE\n              \"reader-pts\"      MPV_FORMAT_DOUBLE\n              \"cache-end\"       MPV_FORMAT_DOUBLE\n```\n\n----------------------------------------\n\nTITLE: Vulkan Queue Count and Async Transfer Options in MPV\nDESCRIPTION: Options to control the number of VkQueues used for rendering and to enable asynchronous transfer operations for improved performance on supported devices.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_199\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--vulkan-queue-count=<1..8>\"    Controls the number of VkQueues used for rendering (limited by how many\n    your device supports). In theory, using more queues could enable some\n    parallelism between frames (when using a ``--swapchain-depth`` higher than\n    1), but it can also slow things down on hardware where there's no true\n    parallelism between queues. (Default: 1)\n\n\"--vulkan-async-transfer\"    Enables the use of async transfer queues on supported vulkan devices. Using\n    them allows transfer operations like texture uploads and blits to happen\n    concurrently with the actual rendering, thus improving overall throughput\n    and power consumption. Enabled by default, and should be relatively safe.\n\n\"--vulkan-async-compute\"\n```\n\n----------------------------------------\n\nTITLE: Hardware Decoding Image Format Selection\nDESCRIPTION: Command option for setting the internal pixel format used by hardware decoding.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_33\n\nLANGUAGE: shell\nCODE:\n```\n--hwdec-image-format=<name>\n```\n\n----------------------------------------\n\nTITLE: Appending Output Format Options\nDESCRIPTION: This command is used to append additional options to the output format options list, giving users flexibility in their encoding configuration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n--ofopts-add=<option>\n```\n\n----------------------------------------\n\nTITLE: Getting Current MPV Internal Time in Lua\nDESCRIPTION: Returns the current mpv internal time in seconds as a number. This is essentially the system time with an arbitrary offset.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_10\n\nLANGUAGE: lua\nCODE:\n```\nmp.get_time()\n```\n\n----------------------------------------\n\nTITLE: Configuring Audio Output Device Fallback in MPV\nDESCRIPTION: Controls whether mpv should fall back to null audio output if the specified audio device cannot be opened. This is useful for API users or scripts that need to handle device unavailability gracefully.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_59\n\nLANGUAGE: bash\nCODE:\n```\n--audio-fallback-to-null=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Error Handling Best Practices in C\nDESCRIPTION: Guidelines for managing errors in mpv, focusing on balancing error reporting, handling memory allocation failures, and maintaining code reliability\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/tech-overview.txt#2025-04-21_snippet_3\n\nLANGUAGE: C\nCODE:\n```\n// Recommended approach for handling out-of-memory errors\nMP_HANDLE_OOM()\n```\n\n----------------------------------------\n\nTITLE: Pixel Format Matrix Listing\nDESCRIPTION: Comprehensive list of YUV pixel formats with input and output conversion options, covering various color space representations and bit depths\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/zimg_formats.txt#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nyuv444pf    Zin   Zout                |\nyuva410pf    Zin   Zout                |\nyuva411pf    Zin   Zout                |\n```\n\n----------------------------------------\n\nTITLE: MPV Encoding Profile Configuration (INI)\nDESCRIPTION: Shows how to create an encoding profile in the mpv configuration file, including video filters, codec options, and audio settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\n[myencprofile]\nvf-add = scale=480:-2\novc = libx264\novcopts-add = preset=medium\novcopts-add = tune=fastdecode\novcopts-add = crf=23\novcopts-add = maxrate=1500k\novcopts-add = bufsize=1000k\novcopts-add = rc_init_occupancy=900k\novcopts-add = refs=2\novcopts-add = profile=baseline\noac = aac\noacopts-add = b=96k\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Language Preferences in MPV (Shell)\nDESCRIPTION: This command sets the preferred subtitle languages to Hungarian and English for DVD playback in MPV. It will display Hungarian subtitles if available, falling back to English if not.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmpv dvd://1 --slang=hu,en\n```\n\n----------------------------------------\n\nTITLE: Selecting DRM Color Format\nDESCRIPTION: Configuration option to choose the bit depth and color type of the DRM mode, supporting various RGB and YUV formats with different bit depths\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n--drm-format=<xrgb8888|xbgr8888|xrgb2101010|xbgr2101010|yuyv>\n```\n\n----------------------------------------\n\nTITLE: Hexdump Input Source\nDESCRIPTION: This snippet illustrates the use of 'hex://' protocol to interpret a string as a hexdump for playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\n\"hex://data\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Mode for Picture Information in FFmpeg Decoder\nDESCRIPTION: Example of passing AVOptions to the libavcodec decoder to enable picture debugging. This demonstrates how to use the vd-lavc-o option to pass advanced parameters to the underlying FFmpeg decoder.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_56\n\nLANGUAGE: bash\nCODE:\n```\n--vd-lavc-o=debug=pict\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Shadow Offset in MPV\nDESCRIPTION: Specifies the displacement of the subtitle text shadow in scaled pixels. A value of 0 disables shadows.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_141\n\nLANGUAGE: shell\nCODE:\n```\n--sub-shadow-offset=<size>\n```\n\n----------------------------------------\n\nTITLE: Defining drm_prime Pixel Format - Plaintext\nDESCRIPTION: This snippet describes the drm_prime pixel format, focusing on compatibility with Direct Rendering Manager (DRM) and the relevant AVD settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\ndrm_prime: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=drm_prime chroma=0:0 flags=0x8 [hw]\n```\n\n----------------------------------------\n\nTITLE: VapourSynth Filter Script Loading\nDESCRIPTION: This code snippet shows how to load a VapourSynth filter script into mpv. It's used for streaming.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n\"vapoursynth=file:buffered-frames:concurrent-frames:user-data\"\n```\n\n----------------------------------------\n\nTITLE: C Style Example for Multi-line Conditions\nDESCRIPTION: Example showing the proper brace placement when if conditions span multiple physical lines. The opening brace goes on its own line.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/contribute.md#2025-04-21_snippet_3\n\nLANGUAGE: C\nCODE:\n```\nif (very_long_condition_a &&\n    very_long_condition_b)\n{\n    code();\n} else {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Defining YUV411P Color Format Specification\nDESCRIPTION: Specifies the YUV411P color format with 8-bit depth, 4:1:1 chroma subsampling, and planar configuration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_30\n\nLANGUAGE: plaintext\nCODE:\n```\nyuv411p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=2:0 align=4:1\n    {8/[0:0] 8/[2:0] 8/[2:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=4x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv411p chroma=2:0 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Audio Codec\nDESCRIPTION: This snippet allows the user to define which audio codec will be used in the encoding process, crucial for achieving the desired audio quality in the output file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n--oac=<codec>\n```\n\n----------------------------------------\n\nTITLE: Unobserve Property Command - MPV IPC\nDESCRIPTION: This command undoes a previously established property observation, requiring the numeric ID associated with the observed property. It stops the player from sending updates for that property. The command should be sent as a JSON object to the MPV instance.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{ \"command\": [\"unobserve_property\", 1] }\n```\n\nLANGUAGE: json\nCODE:\n```\n{ \"error\": \"success\" }\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Outline Size in MPV\nDESCRIPTION: Specifies the size of the subtitle font outline in scaled pixels. A value of 0 disables outlines.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_132\n\nLANGUAGE: shell\nCODE:\n```\n--sub-outline-size=<size>\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Glyph Limit in MPV Player\nDESCRIPTION: Sets the maximum number of cached glyphs in libass cache for the subtitle track. 0 means libass uses its default value.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_95\n\nLANGUAGE: config\nCODE:\n```\n--sub-glyph-limit=<value>\n```\n\n----------------------------------------\n\nTITLE: Closing a File Descriptor After Use\nDESCRIPTION: This snippet uses 'fdclose://' protocol to read from a file descriptor and close it after use, requiring careful handling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#2025-04-21_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\n\"fdclose://123\"\n```\n\n----------------------------------------\n\nTITLE: Setting Framerate for Multiple Image Files in MPV Player\nDESCRIPTION: Specifies the framerate when decoding from multiple PNG or JPEG files with the mf:// protocol. Default is 1 fps.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_218\n\nLANGUAGE: ini\nCODE:\n```\n--mf-fps=<value>\n```\n\n----------------------------------------\n\nTITLE: Using Margins for Plain Text Subtitles in MPV Player\nDESCRIPTION: Enables placing toptitles and subtitles in black borders when available, for plain text format subtitles or ASS if --sub-ass-override is set high enough.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_101\n\nLANGUAGE: config\nCODE:\n```\n--sub-use-margins\n```\n\n----------------------------------------\n\nTITLE: Setting Teletext Page Number in MPV\nDESCRIPTION: Selects a teletext page number to decode for dvb_teletext subtitle streams. Values 1-999 are for individual pages, 0 matches all subtitle pages, and -1 matches all pages. Requires FFmpeg to be compiled with support.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_123\n\nLANGUAGE: shell\nCODE:\n```\n--teletext-page=<-1-999>\n```\n\n----------------------------------------\n\nTITLE: Setting Process Priority for MPV (Windows)\nDESCRIPTION: Sets the process priority for MPV according to predefined Windows priorities. Warning: Using realtime priority can cause system lockup.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_225\n\nLANGUAGE: plaintext\nCODE:\n```\n--priority=<prio>\n```\n\n----------------------------------------\n\nTITLE: Configuring DRM Video Plane Selection\nDESCRIPTION: Option to select the DRM plane for video rendering, particularly useful for SoC (System on Chip) hardware with specific video decoding requirements\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n--drm-drmprime-video-plane=<primary|overlay|N>\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Horizontal Spacing in MPV\nDESCRIPTION: Specifies the horizontal subtitle font spacing in scaled pixels. This value is added to the normal letter spacing. Negative values are allowed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_142\n\nLANGUAGE: shell\nCODE:\n```\n--sub-spacing=<size>\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Text Shaper in MPV Player\nDESCRIPTION: Sets the text layout engine used by libass. 'simple' uses Fribidi only, while 'complex' uses HarfBuzz for wider language support but is slower.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_93\n\nLANGUAGE: config\nCODE:\n```\n--sub-shaper=<simple|complex>\n```\n\n----------------------------------------\n\nTITLE: MPV Global Options Structure\nDESCRIPTION: Example of how global options are structured and linked in MPV's configuration system using option structs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/tech-overview.txt#2025-04-21_snippet_1\n\nLANGUAGE: C\nCODE:\n```\n{\"\", OPT_SUBSTRUCT(demux_opts, demux_conf)}\n```\n\n----------------------------------------\n\nTITLE: OpenGL PBO Option in MPV\nDESCRIPTION: Option to enable Pixel Buffer Objects in OpenGL, which can improve performance for large video sources on some drivers but may cause latency issues on others.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_188\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--opengl-pbo\"    Enable use of PBOs. On some drivers this can be faster, especially if the\n    source video size is huge (e.g. so called \"4K\" video). On other drivers it\n    might be slower or cause latency issues.\n```\n\n----------------------------------------\n\nTITLE: Getting filter help in mpv\nDESCRIPTION: This snippet shows how to print the parameter names and value ranges for a particular filter using the `--vf=<filter>=help` option in mpv. This is useful for understanding the available options for a filter.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_8\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf=<filter>=help\"\n```\n\n----------------------------------------\n\nTITLE: Applying Predefined Video Output Profiles in mpv\nDESCRIPTION: Command to apply a specific predefined profile for video output settings in mpv. This example shows how to use the 'fast' or 'high-quality' profiles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--profile=<name>\n```\n\n----------------------------------------\n\nTITLE: YUV/YUVA Format Descriptor Specifications for MPV Player\nDESCRIPTION: Technical specifications for various YUV color space formats including bit depths (8-16 bits), endianness (big/little), planar/interleaved storage, and alpha channel variations. Each descriptor details plane configuration, chroma subsampling ratios, and memory organization.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_41\n\nLANGUAGE: text\nCODE:\n```\n    {16/[0:0] 16/[1:0] 16/[1:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {0:16/-7} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16/-7} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16/-7} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16/-7}\n  AVD: name=yuva422p9be chroma=1:0 flags=0x91 [be][planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=9\n    1: p=1  st=2  o=0  sh=0  d=9\n    2: p=2  st=2  o=0  sh=0  d=9\n    3: p=3  st=2  o=0  sh=0  d=9\nyuva422pf: ctype=float\n  Basic desc: [ba][bb][a][yuv][le][float]\n    planes=4, chroma=1:0 align=2:1\n    {32/[0:0] 32/[1:0] 32/[1:0] 32/[0:0] }\n    0: 32bits {0:32} {} {} {}\n    1: 32bits {} {0:32} {} {}\n    2: 32bits {} {} {0:32} {}\n    3: 32bits {} {} {} {0:32}\n  Regular: planes=4 compbytes=4 bitpad=0 chroma=2x1 ctype=float\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\nyuva440pf: ctype=float\n  Basic desc: [ba][bb][a][yuv][le][float]\n    planes=4, chroma=0:1 align=1:2\n    {32/[0:0] 32/[0:1] 32/[0:1] 32/[0:0] }\n    0: 32bits {0:32} {} {} {}\n    1: 32bits {} {0:32} {} {}\n    2: 32bits {} {} {0:32} {}\n    3: 32bits {} {} {} {0:32}\n  Regular: planes=4 compbytes=4 bitpad=0 chroma=1x2 ctype=float\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\nyuva444p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {8/[0:0] 8/[0:0] 8/[0:0] 8/[0:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n    3: 8bits {} {} {} {0:8}\n  Regular: planes=4 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva444p chroma=0:0 flags=0x90 [planar][alpha]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\n    3: p=3  st=1  o=0  sh=0  d=8\nyuva444p10: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits {0:16/-6} {} {} {}\n    1: 16bits {} {0:16/-6} {} {}\n    2: 16bits {} {} {0:16/-6} {}\n    3: 16bits {} {} {} {0:16/-6}\n  Regular: planes=4 compbytes=2 bitpad=-6 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva444p10le chroma=0:0 flags=0x90 [planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=10\n    1: p=1  st=2  o=0  sh=0  d=10\n    2: p=2  st=2  o=0  sh=0  d=10\n    3: p=3  st=2  o=0  sh=0  d=10\nyuva444p10be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {0:16/-6} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16/-6} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16/-6} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16/-6}\n  AVD: name=yuva444p10be chroma=0:0 flags=0x91 [be][planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=10\n    1: p=1  st=2  o=0  sh=0  d=10\n    2: p=2  st=2  o=0  sh=0  d=10\n    3: p=3  st=2  o=0  sh=0  d=10\nyuva444p12: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits {0:16/-4} {} {} {}\n    1: 16bits {} {0:16/-4} {} {}\n    2: 16bits {} {} {0:16/-4} {}\n    3: 16bits {} {} {} {0:16/-4}\n  Regular: planes=4 compbytes=2 bitpad=-4 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva444p12le chroma=0:0 flags=0x90 [planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=12\n    1: p=1  st=2  o=0  sh=0  d=12\n    2: p=2  st=2  o=0  sh=0  d=12\n    3: p=3  st=2  o=0  sh=0  d=12\nyuva444p12be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {0:16/-4} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16/-4} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16/-4} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16/-4}\n  AVD: name=yuva444p12be chroma=0:0 flags=0x91 [be][planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=12\n    1: p=1  st=2  o=0  sh=0  d=12\n    2: p=2  st=2  o=0  sh=0  d=12\n    3: p=3  st=2  o=0  sh=0  d=12\nyuva444p16: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits {0:16} {} {} {}\n    1: 16bits {} {0:16} {} {}\n    2: 16bits {} {} {0:16} {}\n    3: 16bits {} {} {} {0:16}\n  Regular: planes=4 compbytes=2 bitpad=0 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva444p16le chroma=0:0 flags=0x90 [planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n    3: p=3  st=2  o=0  sh=0  d=16\nyuva444p16be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {0:16} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16}\n  AVD: name=yuva444p16be chroma=0:0 flags=0x91 [be][planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n    3: p=3  st=2  o=0  sh=0  d=16\nyuva444p9: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits {0:16/-7} {} {} {}\n    1: 16bits {} {0:16/-7} {} {}\n    2: 16bits {} {} {0:16/-7} {}\n    3: 16bits {} {} {} {0:16/-7}\n  Regular: planes=4 compbytes=2 bitpad=-7 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva444p9le chroma=0:0 flags=0x90 [planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=9\n    1: p=1  st=2  o=0  sh=0  d=9\n    2: p=2  st=2  o=0  sh=0  d=9\n    3: p=3  st=2  o=0  sh=0  d=9\nyuva444p9be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {0:16/-7} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16/-7} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16/-7} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16/-7}\n  AVD: name=yuva444p9be chroma=0:0 flags=0x91 [be][planar][alpha]\n    0: p=0  st=2  o=0  sh=0  d=9\n    1: p=1  st=2  o=0  sh=0  d=9\n    2: p=2  st=2  o=0  sh=0  d=9\n    3: p=3  st=2  o=0  sh=0  d=9\nyuva444pf: ctype=float\n  Basic desc: [ba][bb][a][yuv][le][float]\n    planes=4, chroma=0:0 align=1:1\n    {32/[0:0] 32/[0:0] 32/[0:0] 32/[0:0] }\n    0: 32bits {0:32} {} {} {}\n    1: 32bits {} {0:32} {} {}\n    2: 32bits {} {} {0:32} {}\n    3: 32bits {} {} {} {0:32}\n  Regular: planes=4 compbytes=4 bitpad=0 chroma=1x1 ctype=float\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\nyuvj411p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=2:0 align=4:1\n    {8/[0:0] 8/[2:0] 8/[2:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=4x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuvj411p chroma=2:0 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\nyuvj422p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=1:0 align=2:1\n    {8/[0:0] 8/[1:0] 8/[1:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=2x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuvj422p chroma=1:0 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\nyuvj440p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=0:1 align=1:2\n    {8/[0:0] 8/[0:1] 8/[0:1] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=1x2 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuvj440p chroma=0:1 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\nyuyv422: [GENERIC] ctype=uint\n  Basic desc: [ba][yuv][le][be][uint]\n    planes=1, chroma=1:0 align=2:1\n    {16/[0:0] }\n    0: 16bits {0:8} {8:8} {24:8} {}\n       luma_offsets=[ 0 16]\n  AVD: name=yuyv422 chroma=1:0 flags=0x0\n    0: p=0  st=2  o=0  sh=0  d=8\n    1: p=0  st=4  o=1  sh=0  d=8\n    2: p=0  st=4  o=3  sh=0  d=8\nyvyu422: [GENERIC] ctype=uint\n  Basic desc: [ba][yuv][le][be][uint]\n    planes=1, chroma=1:0 align=2:1\n    {16/[0:0] }\n    0: 16bits {0:8} {24:8} {8:8} {}\n       luma_offsets=[ 0 16]\n  AVD: name=yvyu422 chroma=1:0 flags=0x0\n    0: p=0  st=2  o=0  sh=0  d=8\n    1: p=0  st=4  o=3  sh=0  d=8\n    2: p=0  st=4  o=1  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Input Command Translation Example\nDESCRIPTION: Demonstrates the translation of legacy input commands to new mpv command syntax, showing how properties and command structures have been updated.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/mplayer-changes.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npt_step 1 [0|1] → playlist-next [weak|force]\nswitch_ratio [<ratio>] → set video-aspect-override <ratio>\n```\n\n----------------------------------------\n\nTITLE: Using the new_stream Header for Tracks\nDESCRIPTION: Illustrates the usage of the '!new_stream' header to specify and handle separate audio and video tracks from different files in an EDL.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n# mpv EDL v0\nvideo.mkv\n!new_stream\naudio.mkv\n```\n\n----------------------------------------\n\nTITLE: Configuring ASS Subtitle Scale with Window in MPV Player\nDESCRIPTION: Similar to --sub-scale-with-window, but affects only subtitles in ASS format. This can potentially break ASS subtitles.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_85\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass-scale-with-window=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Configuring Stream Dumping in MPV Player\nDESCRIPTION: Instead of playing a file, this option reads the byte stream and writes it to the specified destination file, overwriting any existing content. Useful for testing network-related behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_220\n\nLANGUAGE: ini\nCODE:\n```\n--stream-dump=<destination-filename>\n```\n\n----------------------------------------\n\nTITLE: Video Format Conversion Mapping in MPV Player\nDESCRIPTION: This configuration snippet defines the mapping between source video formats and their target formats in MPV. Each line shows a source format, target format, and attributes like aspect ratio, planar/alpha support ([pa]), uniformity ([un]), and special processing flags like [planar-f32], [tu], [tp], or [expand-8bit].\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/repack.txt#2025-04-21_snippet_0\n\nLANGUAGE: config\nCODE:\n```\np410be          => [pa] [un] yuv444p16       | a=1:1\np410be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np412            => [pa] [un] yuv444p16       | a=1:1\np412            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np412be          => [pa] [un] yuv444p16       | a=1:1\np412be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np416            => [pa] [un] yuv444p16       | a=1:1\np416            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np416be          => [pa] [un] yuv444p16       | a=1:1\np416be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\npal8            =>      [un] gbrap           | a=1:1\npal8            =>      [un] gbrapf32        | a=1:1 [planar-f32]\nqsv             => no\nrgb0            => [pa] [un] gbrp            | a=1:1 [tu] [tp]\nrgb0            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb24           => [pa] [un] gbrp            | a=1:1 [tu] [tp]\nrgb24           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb30           => [pa] [un] gbrp10          | a=1:1 [tu] [tp]\nrgb30           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb4            => no\nrgb444          => [pa] [un] gbrp4           | a=1:1\nrgb444          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb444          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb444be        => [pa] [un] gbrp4           | a=1:1\nrgb444be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb444be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb48           => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nrgb48           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb48be         => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nrgb48be         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb4_byte       => [pa] [un] gbrp2           | a=1:1\nrgb4_byte       => [pa] [un] gbrp1           | a=1:1 [round-down]\nrgb4_byte       => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb4_byte       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb555          => [pa] [un] gbrp5           | a=1:1\nrgb555          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb555          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb555be        => [pa] [un] gbrp5           | a=1:1\nrgb555be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb555be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb565          => [pa] [un] gbrp6           | a=1:1\nrgb565          => [pa] [un] gbrp5           | a=1:1 [round-down]\nrgb565          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb565          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb565be        => [pa] [un] gbrp6           | a=1:1\nrgb565be        => [pa] [un] gbrp5           | a=1:1 [round-down]\nrgb565be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb565be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb8            => [pa] [un] gbrp3           | a=1:1\nrgb8            => [pa] [un] gbrp2           | a=1:1 [round-down]\nrgb8            => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb8            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgba            => [pa] [un] gbrap           | a=1:1 [tu] [tp]\nrgba            => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nrgba64          => [pa] [un] gbrap16         | a=1:1 [tu] [tp]\nrgba64          => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nrgba64be        => [pa] [un] gbrap16         | a=1:1 [tu] [tp]\nrgba64be        => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nrgbaf16         => no\nrgbaf16be       => no\nrgbaf32         => no\nrgbaf32be       => no\nrgbf32          => no\nrgbf32be        => no\nuyvy422         => [pa] [un] yuv422p         | a=2:1 [tu] [tp]\nuyvy422         => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nuyyvyy411       => [pa] [un] yuv411p         | a=4:1 [tu] [tp]\nuyyvyy411       => [pa] [un] yuv411pf        | a=4:1 [planar-f32]\nvaapi           => no\nvdpau           => no\nvdpau_output    => no\nvideotoolbox    => no\nvulkan          => no\nvuya            => [pa] [un] yuva444p        | a=1:1\nvuya            => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nvuyx            => [pa] [un] yuv444p         | a=1:1\nvuyx            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nx2bgr10         => [pa] [un] gbrp10          | a=1:1\nx2bgr10         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nx2bgr10be       => [pa] [un] gbrp10          | a=1:1\nx2bgr10be       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nx2rgb10be       => [pa] [un] gbrp10          | a=1:1 [tu] [tp]\nx2rgb10be       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nxv30            => [pa] [un] yuv444p10       | a=1:1\nxv30            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxv30be          => [pa] [un] yuv444p10       | a=1:1\nxv30be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxv36            => [pa] [un] yuv444p16       | a=1:1\nxv36            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxv36be          => [pa] [un] yuv444p16       | a=1:1\nxv36be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxyz12           => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nxyz12           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nxyz12be         => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nxyz12be         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ny210            => [pa] [un] yuv422p16       | a=2:1 [tu] [tp]\ny210            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\ny210be          => [pa] [un] yuv422p16       | a=2:1 [tu] [tp]\ny210be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\ny212            => [pa] [un] yuv422p16       | a=2:1\ny212            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\ny212be          => [pa] [un] yuv422p16       | a=2:1\ny212be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nya16            => [pa] [un] yap16           | a=1:1 [tu] [tp]\nya16            => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nya16be          => [pa] [un] yap16           | a=1:1\nya16be          => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nya8             => [pa] [un] yap8            | a=1:1 [tu] [tp]\nya8             => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nyap16           => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nyap8            => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nyuv410p         => [pa] [un] yuv410pf        | a=4:4 [planar-f32]\nyuv411p         => [pa] [un] yuv411pf        | a=4:1 [planar-f32]\nyuv420p         => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p10       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p10be     => [pa] [un] yuv420p10       | a=2:2\nyuv420p10be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p12       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p12be     => [pa] [un] yuv420p12       | a=2:2\nyuv420p12be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p14       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p14be     => [pa] [un] yuv420p14       | a=2:2\nyuv420p14be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p16       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p16be     => [pa] [un] yuv420p16       | a=2:2\nyuv420p16be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p9        => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p9be      => [pa] [un] yuv420p9        | a=2:2\nyuv420p9be      => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv422p         => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p10       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p10be     => [pa] [un] yuv422p10       | a=2:1\nyuv422p10be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p12       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p12be     => [pa] [un] yuv422p12       | a=2:1\nyuv422p12be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p14       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p14be     => [pa] [un] yuv422p14       | a=2:1\nyuv422p14be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p16       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p16be     => [pa] [un] yuv422p16       | a=2:1 [tu] [tp]\nyuv422p16be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p9        => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p9be      => [pa] [un] yuv422p9        | a=2:1\nyuv422p9be      => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv440p         => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p10       => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p10be     => [pa] [un] yuv440p10       | a=1:2\nyuv440p10be     => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p12       => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p12be     => [pa] [un] yuv440p12       | a=1:2\nyuv440p12be     => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv444p         => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p10       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p10be     => [pa] [un] yuv444p10       | a=1:1\nyuv444p10be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p12       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p12be     => [pa] [un] yuv444p12       | a=1:1\nyuv444p12be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p14       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p14be     => [pa] [un] yuv444p14       | a=1:1\nyuv444p14be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p16       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p16be     => [pa] [un] yuv444p16       | a=1:1\nyuv444p16be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p9        => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p9be      => [pa] [un] yuv444p9        | a=1:1\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Video Codec\nDESCRIPTION: This command allows the user to specify which video codec will be used during the encoding process, which is critical for managing video quality.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n--ovc=<codec>\n```\n\n----------------------------------------\n\nTITLE: Setting Boolean Properties in Lua\nDESCRIPTION: Sets a property to a Boolean value. Similar to mp.set_property but specifically for Boolean values.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nmp.set_property_bool(name, value)\n```\n\n----------------------------------------\n\nTITLE: Configuring OSC Button Commands\nDESCRIPTION: This snippet outlines the command configurations associated with the OSC button clicks in the MPV player. Each command is associated with specific mouse button interactions and executes various player actions such as navigating the playlist or controlling playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n\"``menu_mbtn_left_command=script-binding select/menu; script-message-to osc osc-hide``\\n``menu_mbtn_mid_command=``\\n``menu_mbtn_right_command=``\\n``playlist_prev_mbtn_left_command=playlist-prev; show-text ${playlist} 3000``\\n``playlist_prev_mbtn_mid_command=show-text ${playlist} 3000``\\n``playlist_prev_mbtn_right_command=script-binding select/select-playlist; script-message-to osc osc-hide``\\n``playlist_next_mbtn_left_command=playlist-next; show-text ${playlist} 3000``\\n``playlist_next_mbtn_mid_command=show-text ${playlist} 3000``\\n``playlist_next_mbtn_right_command=script-binding select/select-playlist; script-message-to osc osc-hide``\\n``title_mbtn_left_command=script-binding stats/display-page-5``\\n``title_mbtn_mid_command=show-text ${path}``\\n``title_mbtn_right_command=script-binding select/select-watch-history; script-message-to osc osc-hide``\\n``play_pause_mbtn_left_command=cycle pause``\\n``play_pause_mbtn_mid_command=cycle-values loop-playlist inf no``\\n``play_pause_mbtn_right_command=cycle-values loop-file inf no``\\n``chapter_prev_mbtn_left_command=osd-msg add chapter -1``\\n``chapter_prev_mbtn_mid_command=show-text ${chapter-list} 3000``\\n``chapter_prev_mbtn_right_command=script-binding select/select-chapter; script-message-to osc osc-hide``\\n``chapter_next_mbtn_left_command=osd-msg add chapter 1``\\n``chapter_next_mbtn_mid_command=show-text ${chapter-list} 3000``\\n``chapter_next_mbtn_right_command=script-binding select/select-chapter; script-message-to osc osc-hide``\\n``audio_track_mbtn_left_command=cycle audio``\\n``audio_track_mbtn_mid_command=cycle audio down``\\n``audio_track_mbtn_right_command=script-binding select/select-aid; script-message-to osc osc-hide``\\n``audio_track_wheel_down_command=cycle audio``\\n``audio_track_wheel_up_command=cycle audio down``\\n``sub_track_mbtn_left_command=cycle sub``\\n``sub_track_mbtn_mid_command=cycle sub down``\\n``sub_track_mbtn_right_command=script-binding select/select-sid; script-message-to osc osc-hide``\\n``sub_track_wheel_down_command=cycle sub``\\n``sub_track_wheel_up_command=cycle sub down``\\n``volume_mbtn_left_command=no-osd cycle mute``\\n``volume_mbtn_mid_command=``\\n``volume_mbtn_right_command=script-binding select/select-audio-device; script-message-to osc osc-hide``\\n``volume_wheel_down_command=add volume -5``\\n``volume_wheel_up_command=add volume 5``\\n``fullscreen_mbtn_left_command=cycle fullscreen``\\n``fullscreen_mbtn_mid_command=``\\n``fullscreen_mbtn_right_command=cycle window-maximized``\"\n```\n\n----------------------------------------\n\nTITLE: Big-Endian RGB565 Format Descriptor\nDESCRIPTION: Descriptor for RGB565 format in big-endian byte order. Similar to rgb565 but with different endianness flags and explicit endian_bytes specification for 16-bit components.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_25\n\nLANGUAGE: text\nCODE:\n```\nrgb565be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][rgb][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {16/[0:0] }\n    0: 16bits endian_bytes=2 {11:5} {5:6} {0:5} {}\n  AVD: name=rgb565be chroma=0:0 flags=0x21 [be][rgb]\n    0: p=0  st=2  o=-1 sh=3  d=5\n    1: p=0  st=2  o=0  sh=5  d=6\n    2: p=0  st=2  o=0  sh=0  d=5\n```\n\n----------------------------------------\n\nTITLE: MPV Options Cache Access\nDESCRIPTION: Pattern for accessing MPV options in a thread-safe manner using the configuration cache system.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/tech-overview.txt#2025-04-21_snippet_2\n\nLANGUAGE: C\nCODE:\n```\nstruct m_config_cache *opts_cache =\n    m_config_cache_alloc(demuxer, global, &demux_conf);\nstruct demux_opts *opts = opts_cache->opts;\n```\n\n----------------------------------------\n\nTITLE: Querying edition-list Property in Lua\nDESCRIPTION: This snippet demonstrates the structure of the edition-list property when queried using mp.get_property_native in Lua. It shows how the property returns an array of maps containing information about each edition.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_28\n\nLANGUAGE: Lua\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (for each edition)\n        \"id\"                MPV_FORMAT_INT64\n        \"title\"             MPV_FORMAT_STRING\n        \"default\"           MPV_FORMAT_FLAG\n```\n\n----------------------------------------\n\nTITLE: Sending Mouse Events in mpv Player API - Lua\nDESCRIPTION: This snippet describes the command for sending mouse events to the mpv player, detailing the parameters for mouse coordinates and button state.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_13\n\nLANGUAGE: lua\nCODE:\n```\n\"\"\"\n``mouse <x> <y> [<button> [<mode>]]``\n    Send a mouse event with given coordinate (``<x>``, ``<y>``).\n\n    Second argument:\n\n    <button>\n        The button number of clicked mouse button. This should be one of 0-19.\n        If ``<button>`` is omitted, only the position will be updated.\n\n    Third argument:\n\n    <single> (default)\n        The mouse event represents regular single click.\n\n    <double>\n        The mouse event represents double-click.\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: OpenAL Driver Configuration\nDESCRIPTION: Configuration options for OpenAL audio driver, including buffer and sample count settings.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_4\n\nLANGUAGE: config\nCODE:\n```\n--openal-num-buffers=<2-128>\n--openal-num-samples=<256-32768>\n--openal-direct-channels=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: YUV Color Space Format Conversion Matrix\nDESCRIPTION: Comprehensive mapping of YUV pixel formats showing conversion paths between different color space representations, including planar formats, chroma subsampling, and bit depths\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/repack.txt#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nyuv444p9be      => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuva420p        => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\nyuva420p10      => [pa] [un] yuva420pf       | a=2:2 [planar-f32]\n```\n\n----------------------------------------\n\nTITLE: IPC Server Path Example for Windows\nDESCRIPTION: Example showing how to specify IPC server path in Windows pipe namespace format\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_165\n\nLANGUAGE: shell\nCODE:\n```\n--input-ipc-server=\\\\.\\pipe\\tmp\\mpv-socket\n```\n\n----------------------------------------\n\nTITLE: Setting Native-Typed Properties in Lua\nDESCRIPTION: Sets a property using its native type. Useful primarily for properties that use tables natively, though type conversion limitations in Lua may affect functionality.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst#2025-04-21_snippet_9\n\nLANGUAGE: lua\nCODE:\n```\nmp.set_property_native(name, value)\n```\n\n----------------------------------------\n\nTITLE: Example MPV Input Configuration - DVB Channel Controls\nDESCRIPTION: Example input.conf configuration for DVB channel switching using the dvbin-channel-switch-offset property.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes.rst#2025-04-21_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\nH cycle dvbin-channel-switch-offset up\nK cycle dvbin-channel-switch-offset down\n```\n\n----------------------------------------\n\nTITLE: Defining bgr565be Pixel Format - Plaintext\nDESCRIPTION: This snippet defines the bgr565be pixel format, detailing its generic properties such as field color space, type, alignment, and the accompanying AVD settings. It specifies how pixel data is structured for use in video processing.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nbgr565be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][rgb][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {16/[0:0] }\n    0: 16bits endian_bytes=2 {0:5} {5:6} {11:5} {}\n  AVD: name=bgr565be chroma=0:0 flags=0x21 [be][rgb]\n    0: p=0  st=2  o=0  sh=0  d=5\n    1: p=0  st=2  o=0  sh=5  d=6\n    2: p=0  st=2  o=-1 sh=3  d=5\n```\n\n----------------------------------------\n\nTITLE: Command with Request ID\nDESCRIPTION: This snippet illustrates sending a command with a request ID for tracking the response, useful for distinguishing replies when multiple commands are sent.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"command\": [\"get_property\", \"time-pos\"], \"request_id\": 100 }\n```\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"error\": \"success\", \"data\": 1.468135, \"request_id\": 100 }\n```\n\n----------------------------------------\n\nTITLE: Applying Gaussian Blur to Subtitle Font Border in MPV\nDESCRIPTION: Sets the Gaussian blur factor applied to the subtitle font border. A value of 0 means no blur is applied.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_127\n\nLANGUAGE: shell\nCODE:\n```\n--sub-blur=<0..20.0>\n```\n\n----------------------------------------\n\nTITLE: MPV Node Structure for Audio Device List\nDESCRIPTION: Shows the data structure format when querying audio-device-list property using MPV_FORMAT_NODE or Lua mp.get_property_native.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_41\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (for each device entry)\n        \"name\"          MPV_FORMAT_STRING\n        \"description\"   MPV_FORMAT_STRING\n```\n\n----------------------------------------\n\nTITLE: Android MediaCodec Embedded Rendering\nDESCRIPTION: Video output driver for Android that renders frames directly to an Android Surface, using native decoding with limited MPV feature support\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n--vo=mediacodec_embed --hwdec=mediacodec --wid=(intptr_t)(*android.view.Surface)\n```\n\n----------------------------------------\n\nTITLE: RGB Color Format Specifications\nDESCRIPTION: Defines various RGB color format specifications including 0BGR, 0RGB, ABGR, ARGB with their bit layouts, plane configurations and byte ordering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_0\n\nLANGUAGE: config\nCODE:\n```\n0bgr: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {24:8} {16:8} {8:8} {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Subtitle Scale for Signs in MPV Player\nDESCRIPTION: Determines whether to apply --sub-scale to typesetting (signs) in addition to dialogue. The distinction between dialogue and typesetting is made on a best-effort basis.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_82\n\nLANGUAGE: config\nCODE:\n```\n--sub-scale-signs=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Setting Metadata Codepage in mpv\nDESCRIPTION: Command-line option for specifying the codepage used to interpret various input metadata like file tags and chapter titles. By default, it uses automatic detection which usually results in UTF-8.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_230\n\nLANGUAGE: plaintext\nCODE:\n```\n--metadata-codepage=<codepage>\n```\n\n----------------------------------------\n\nTITLE: Pixel Format Conversion Mapping Table for MPV Player\nDESCRIPTION: This mapping table defines how different pixel formats are converted within the mpv player. Each line represents a source format, followed by conversion flags ([pa] for planar, [un] for unspecified), target format, aspect ratio, and special processing flags like [planar-f32], [tu], or [tp].\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/repack.txt#2025-04-21_snippet_1\n\nLANGUAGE: config\nCODE:\n```\np410be          => [pa] [un] yuv444p16       | a=1:1\np410be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np412            => [pa] [un] yuv444p16       | a=1:1\np412            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np412be          => [pa] [un] yuv444p16       | a=1:1\np412be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np416            => [pa] [un] yuv444p16       | a=1:1\np416            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\np416be          => [pa] [un] yuv444p16       | a=1:1\np416be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\npal8            =>      [un] gbrap           | a=1:1\npal8            =>      [un] gbrapf32        | a=1:1 [planar-f32]\nqsv             => no\nrgb0            => [pa] [un] gbrp            | a=1:1 [tu] [tp]\nrgb0            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb24           => [pa] [un] gbrp            | a=1:1 [tu] [tp]\nrgb24           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb30           => [pa] [un] gbrp10          | a=1:1 [tu] [tp]\nrgb30           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb4            => no\nrgb444          => [pa] [un] gbrp4           | a=1:1\nrgb444          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb444          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb444be        => [pa] [un] gbrp4           | a=1:1\nrgb444be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb444be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb48           => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nrgb48           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb48be         => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nrgb48be         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb4_byte       => [pa] [un] gbrp2           | a=1:1\nrgb4_byte       => [pa] [un] gbrp1           | a=1:1 [round-down]\nrgb4_byte       => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb4_byte       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb555          => [pa] [un] gbrp5           | a=1:1\nrgb555          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb555          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb555be        => [pa] [un] gbrp5           | a=1:1\nrgb555be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb555be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb565          => [pa] [un] gbrp6           | a=1:1\nrgb565          => [pa] [un] gbrp5           | a=1:1 [round-down]\nrgb565          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb565          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb565be        => [pa] [un] gbrp6           | a=1:1\nrgb565be        => [pa] [un] gbrp5           | a=1:1 [round-down]\nrgb565be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb565be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgb8            => [pa] [un] gbrp3           | a=1:1\nrgb8            => [pa] [un] gbrp2           | a=1:1 [round-down]\nrgb8            => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nrgb8            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nrgba            => [pa] [un] gbrap           | a=1:1 [tu] [tp]\nrgba            => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nrgba64          => [pa] [un] gbrap16         | a=1:1 [tu] [tp]\nrgba64          => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nrgba64be        => [pa] [un] gbrap16         | a=1:1 [tu] [tp]\nrgba64be        => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nrgbaf16         => no\nrgbaf16be       => no\nrgbaf32         => no\nrgbaf32be       => no\nrgbf32          => no\nrgbf32be        => no\nuyvy422         => [pa] [un] yuv422p         | a=2:1 [tu] [tp]\nuyvy422         => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nuyyvyy411       => [pa] [un] yuv411p         | a=4:1 [tu] [tp]\nuyyvyy411       => [pa] [un] yuv411pf        | a=4:1 [planar-f32]\nvaapi           => no\nvdpau           => no\nvdpau_output    => no\nvideotoolbox    => no\nvulkan          => no\nvuya            => [pa] [un] yuva444p        | a=1:1\nvuya            => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nvuyx            => [pa] [un] yuv444p         | a=1:1\nvuyx            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nx2bgr10         => [pa] [un] gbrp10          | a=1:1\nx2bgr10         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nx2bgr10be       => [pa] [un] gbrp10          | a=1:1\nx2bgr10be       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nx2rgb10be       => [pa] [un] gbrp10          | a=1:1 [tu] [tp]\nx2rgb10be       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nxv30            => [pa] [un] yuv444p10       | a=1:1\nxv30            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxv30be          => [pa] [un] yuv444p10       | a=1:1\nxv30be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxv36            => [pa] [un] yuv444p16       | a=1:1\nxv36            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxv36be          => [pa] [un] yuv444p16       | a=1:1\nxv36be          => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nxvmc            => no\nxyz12           => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nxyz12           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nxyz12be         => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nxyz12be         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ny210            => [pa] [un] yuv422p16       | a=2:1 [tu] [tp]\ny210            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\ny210be          => [pa] [un] yuv422p16       | a=2:1 [tu] [tp]\ny210be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\ny212            => [pa] [un] yuv422p16       | a=2:1\ny212            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\ny212be          => [pa] [un] yuv422p16       | a=2:1\ny212be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nya16            => [pa] [un] yap16           | a=1:1 [tu] [tp]\nya16            => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nya16be          => [pa] [un] yap16           | a=1:1\nya16be          => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nya8             => [pa] [un] yap8            | a=1:1 [tu] [tp]\nya8             => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nyap16           => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nyap8            => [pa] [un] grayaf32        | a=1:1 [planar-f32]\nyuv410p         => [pa] [un] yuv410pf        | a=4:4 [planar-f32]\nyuv411p         => [pa] [un] yuv411pf        | a=4:1 [planar-f32]\nyuv420p         => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p10       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p10be     => [pa] [un] yuv420p10       | a=2:2\nyuv420p10be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p12       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p12be     => [pa] [un] yuv420p12       | a=2:2\nyuv420p12be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p14       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p14be     => [pa] [un] yuv420p14       | a=2:2\nyuv420p14be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p16       => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p16be     => [pa] [un] yuv420p16       | a=2:2\nyuv420p16be     => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p9        => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv420p9be      => [pa] [un] yuv420p9        | a=2:2\nyuv420p9be      => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nyuv422p         => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p10       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p10be     => [pa] [un] yuv422p10       | a=2:1\nyuv422p10be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p12       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p12be     => [pa] [un] yuv422p12       | a=2:1\nyuv422p12be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p14       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p14be     => [pa] [un] yuv422p14       | a=2:1\nyuv422p14be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p16       => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p16be     => [pa] [un] yuv422p16       | a=2:1 [tu] [tp]\nyuv422p16be     => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p9        => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv422p9be      => [pa] [un] yuv422p9        | a=2:1\nyuv422p9be      => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nyuv440p         => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p10       => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p10be     => [pa] [un] yuv440p10       | a=1:2\nyuv440p10be     => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p12       => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv440p12be     => [pa] [un] yuv440p12       | a=1:2\nyuv440p12be     => [pa] [un] yuv440pf        | a=1:2 [planar-f32]\nyuv444p         => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p10       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p10be     => [pa] [un] yuv444p10       | a=1:1\nyuv444p10be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p12       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p12be     => [pa] [un] yuv444p12       | a=1:1\nyuv444p12be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p14       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p14be     => [pa] [un] yuv444p14       | a=1:1\nyuv444p14be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p16       => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p16be     => [pa] [un] yuv444p16       | a=1:1\nyuv444p16be     => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p9        => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nyuv444p9be      => [pa] [un] yuv444p9        | a=1:1\n```\n\n----------------------------------------\n\nTITLE: Setting Subtitle Horizontal Alignment in MPV\nDESCRIPTION: Controls which corner of the screen text subtitles should be aligned to. Not applied to ASS subtitles except in --sub-ass=no mode.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_137\n\nLANGUAGE: shell\nCODE:\n```\n--sub-align-x=<left|center|right>\n```\n\n----------------------------------------\n\nTITLE: Successful Command Response\nDESCRIPTION: This snippet shows the structure of a JSON response from the mpv player indicating successful execution of a command.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{ \"error\": \"success\", \"data\": null }\n```\n\n----------------------------------------\n\nTITLE: Formatting Subtitle Text as Bold in MPV\nDESCRIPTION: Enables or disables bold formatting for subtitle text.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_128\n\nLANGUAGE: shell\nCODE:\n```\n--sub-bold=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in MSYS2\nDESCRIPTION: This snippet details the installation command for key mpv dependencies in MSYS2, showcasing the use of pacman and a custom tool 'pacboy' to ensure all necessary libraries are installed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# Install pacboy and git\npacman -S pactoys git\n\n# Install MSYS2 build dependencies and a MinGW-w64 compiler\npacboy -S python pkgconf cc meson\n\n# Install key dependencies. libass and lcms2 are also included as dependencies\n# of ffmpeg.\npacboy -S ffmpeg libjpeg-turbo libplacebo luajit vulkan-headers\n```\n\n----------------------------------------\n\nTITLE: MPV Sndio Audio Output\nDESCRIPTION: Details the audio output for OpenBSD's sndio sound system. Only supports mono, stereo, 4.0, 5.1 and 7.1 channel layouts.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ao.rst#2025-04-21_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n``sndio``\n    Audio output to the OpenBSD sndio sound system\n\n    (Note: only supports mono, stereo, 4.0, 5.1 and 7.1 channel\n    layouts.)\n```\n\n----------------------------------------\n\nTITLE: YUV Color Format Analysis\nDESCRIPTION: Detailed specification of various YUV pixel formats with plane configurations, bit depths, and chroma sampling characteristics\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nRegular: planes=3 compbytes=2 bitpad=0 chroma=2x1 ctype=uint\n```\n\nLANGUAGE: text\nCODE:\n```\nAVD: name=yuv422p16le chroma=1:0 flags=0x10 [planar]\n```\n\n----------------------------------------\n\nTITLE: Dither Size Configuration for Fruit Algorithm in MPV\nDESCRIPTION: Option to set the size of the dithering matrix when using the fruit dithering algorithm, with larger matrices providing better quality but requiring more computation time.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_190\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--dither-size-fruit=<2-8>\"    Set the size of the dither matrix (default: 6). The actual size of the\n    matrix is ``(2^N) x (2^N)`` for an option value of ``N``, so a value of 6\n    gives a size of 64x64. The matrix is generated at startup time, and a large\n    matrix can take rather long to compute (seconds).\n\n    Used in ``--dither=fruit`` mode only.\n```\n\n----------------------------------------\n\nTITLE: Setting MMCSS Profile for Video Renderer (Windows)\nDESCRIPTION: Sets the MMCSS (Multimedia Class Scheduler Service) profile for the video renderer thread on Windows. Default is 'Playback'.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_224\n\nLANGUAGE: plaintext\nCODE:\n```\n--vo-mmcss-profile=<name>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Clang Compiler for Windows SDK Build\nDESCRIPTION: This snippet showcases the configuration of environment variables needed to switch to Clang as the compiler for a native Windows SDK build of MPV. This ensures that the appropriate tools are used during compilation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$env:CC = 'clang'\n$env:CXX = 'clang++'\n$env:CC_LD = 'lld'\n$env:CXX_LD = 'lld'\n$env:WINDRES = 'llvm-rc'\n```\n\n----------------------------------------\n\nTITLE: C Style Example for Nested if Statements\nDESCRIPTION: Examples showing incorrect and correct usage of braces in nested if statements. When the body spans multiple physical lines, braces are required.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/contribute.md#2025-04-21_snippet_1\n\nLANGUAGE: C\nCODE:\n```\nif (a)\n    // do something if b\n    if (b)\n        do_something();\n```\n\nLANGUAGE: C\nCODE:\n```\nif (a) {\n    // do something if b\n    if (b)\n        do_something();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OSD and Subtitle Options in MPV\nDESCRIPTION: A collection of command-line options for fine-tuning on-screen display (OSD) and subtitle rendering in mpv player. These options control text pruning delay, glyph limits for both OSD and subtitles, maximum bitmap sizes, and text shaping behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes/osd-cache-opts.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nadd `--osd-prune-delay`\nadd `--osd-glyph-limit`\nadd `--osd-bitmap-max-size`\nadd `--sub-glyph-limit`\nadd `--sub-bitmap-max-size`\nadd `--osd-shaper`\n```\n\n----------------------------------------\n\nTITLE: Configuring Secondary Subtitle ASS Override in MPV Player\nDESCRIPTION: Controls how user style overrides are applied to secondary ASS subtitles. Works exactly like --sub-ass-override.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_99\n\nLANGUAGE: config\nCODE:\n```\n--secondary-sub-ass-override=<no|yes|scale|force|strip>\n```\n\n----------------------------------------\n\nTITLE: DVD Device Path Configuration\nDESCRIPTION: Example of setting custom DVD device path for playback\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_159\n\nLANGUAGE: shell\nCODE:\n```\nmpv dvd:// --dvd-device=/path/to/dvd/\n```\n\n----------------------------------------\n\nTITLE: Command Line Option Migration Mapping\nDESCRIPTION: A comprehensive table mapping legacy MPV command-line options to their new equivalents, detailing changes in option names, semantics, and removal of certain features.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/mplayer-changes.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n-dumpstream → --stream-dump=<filename>\n-dvdangle → --dvd-angle\n-endpos → --length\n-font → --osd-font\n```\n\n----------------------------------------\n\nTITLE: Pixel Format Compatibility Matrix\nDESCRIPTION: A tabular representation of pixel format support across different processing stages in MPV. The matrix shows support for Zin (input), Zout (output), SWSin (software scaler input), and SWSout (software scaler output) for each format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/zimg_formats.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n           0bgr    Zin   Zout  SWSin  SWSout |\n           0rgb    Zin   Zout  SWSin  SWSout |\n           abgr    Zin   Zout  SWSin  SWSout |\n           argb    Zin   Zout  SWSin  SWSout |\n         ayuv64    Zin   Zout  SWSin  SWSout |\n       ayuv64be    Zin   Zout                |\n   bayer_bggr16                SWSin         |\n bayer_bggr16be                SWSin         |\n    bayer_bggr8                SWSin         |\n```\n\n----------------------------------------\n\nTITLE: Error Diffusion Kernel Selection in MPV\nDESCRIPTION: Option to select the error diffusion kernel used when the error-diffusion dithering algorithm is enabled, with various kernels offering different quality and performance tradeoffs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_193\n\nLANGUAGE: plaintext\nCODE:\n```\n\"--error-diffusion=<kernel>\"    The error diffusion kernel to use when ``--dither=error-diffusion`` is set.\n\n    ``simple``\n        Propagate error to only two adjacent pixels. Fastest but low quality.\n\n    ``sierra-lite``\n        Fast with reasonable quality. This is the default.\n\n    ``floyd-steinberg``\n        Most notable error diffusion kernel.\n\n    ``atkinson``\n        Looks different from other kernels because only fraction of errors will\n        be propagated during dithering. A typical use case of this kernel is\n        saving dithered screenshot (in window mode). This kernel produces\n        slightly smaller file, with still reasonable dithering quality.\n\n    There are other kernels (use ``--error-diffusion=help`` to list) but most of\n    them are much slower and demanding even larger amount of shared memory.\n    Among these kernels, ``burkes`` achieves a good balance between performance\n    and quality, and probably is the one you want to try first.\n```\n\n----------------------------------------\n\nTITLE: Header Entries in EDL Files\nDESCRIPTION: Explains the usage of header entries in EDL files, specifically how the '!no_chapters' entry affects chapter generation during playback.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/edl-mpv.rst#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n!no_chapters\n```\n\n----------------------------------------\n\nTITLE: Sending Commands in Command Prompt (Windows)\nDESCRIPTION: This snippet exemplifies sending text commands to the mpv player from the Windows command prompt using 'echo'. Due to the lack of response handling, it only demonstrates sending commands.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\necho show-text ${playback-time} >\\\\.\\pipe\\mpvsocket\n```\n\n----------------------------------------\n\nTITLE: Menu Data Node Structure\nDESCRIPTION: Defines the structure of menu data when querying with MPV_FORMAT_NODE or Lua mp.get_property_native. Shows the hierarchical format for menu items including type, title, command, shortcut, state and submenu properties.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_42\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (menu item)\n        \"type\"           MPV_FORMAT_STRING\n        \"title\"          MPV_FORMAT_STRING\n        \"cmd\"            MPV_FORMAT_STRING\n        \"shortcut\"       MPV_FORMAT_STRING\n        \"state\"          MPV_FORMAT_NODE_ARRAY[MPV_FORMAT_STRING]\n        \"submenu\"        MPV_FORMAT_NODE_ARRAY[menu item]\n```\n\n----------------------------------------\n\nTITLE: Prepending a filter to the list in mpv\nDESCRIPTION: This snippet shows how to prepend a filter to the video filter list using the `--vf-pre` option in mpv. It adds the specified filter to the beginning of the current filter chain.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/vf.rst#2025-04-21_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\n\"--vf-pre=filter\"\n```\n\n----------------------------------------\n\nTITLE: IPC Client File Descriptor Connection Example\nDESCRIPTION: Example demonstrating how to connect IPC client using a file descriptor\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_166\n\nLANGUAGE: shell\nCODE:\n```\n--input-ipc-client=fd://123\n```\n\n----------------------------------------\n\nTITLE: Listing Interface Changes for mpv Versions 0.39.0 to 0.41.0\nDESCRIPTION: A comprehensive list of interface changes, including option modifications, command additions, property changes, and script-related updates for mpv versions 0.39.0 through 0.41.0.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes.rst#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n --- mpv 0.41.0 ---\n --- mpv 0.40.0 ---\n    - undeprecate list option suffixes that work with multiple items\n    - add `-del` to string list and keyvalue list options\n    - add `-clr` to keyvalue list options\n    - undeprecate `--gamma-factor`\n    - the `path` and `track-list/N/external-filename` properties now always\n      return a full, absolute path\n    - rename `--vd-lavc-software-fallback` to `--hwdec-software-fallback`\n    - rename `--sub-ass-line-spacing` to `--sub-line-spacing`\n    - rename `--sub-ass-shaper` to `--sub-shaper`\n    - rename `--sub-ass-hinting` to `--sub-hinting`\n    - rename `--load-osd-console` to `--load-console`\n    - remove `stats-term_width_limit` script-opt\n    - add `stats-term_clip` script-opt\n    - remove `stats-term_height_limit` script-opt\n    - remove `player` argument form `--media-controls`, it's handled internally\n      now.\n    - make `script-binding` command scalable; add `nonscalable` command prefix\n      to restore the old behavior\n    - deprecate `osc-message` script message in favor of `show-text` command\n    - deprecate `osc-chapterlist` script message in favor of `show-text\n      ${chapter-list}`\n    - deprecate `osc-playlist` script message in favor of `show-text\n      ${playlist}`\n    - deprecate `osc-tracklist` script message in favor of `show-text ${track-\n      list}`\n    - add `visibility_modes` script-opt to osc\n    - deprecate `--wayland-disable-vsync`\n    - add `--wayland-internal-vsync` as a replacement for `--wayland-disable-\n      vsync`\n    - deprecate `--cdda-span-a` and `--cdda-span-b`\n    - commands.lua is split out of console.lua. commands.lua runs and completes\n      commands and adds mpv's log entries to the console's log, while\n      console.lua handles the UI for other scripts\n    - add `--load-commands` option\n    - `script-binding console/enable` becomes `script-binding commands/open`,\n      though the console one is kept as an alias\n    - `script-message-to console type` becomes `script-message-to commands\n      type`, though the console one is kept as an alias. This also now\n      automatically closes the console after running the command.\n    - change the underlying type of the `aspect`, `par`, and `sar` sub-\n      properties to double from float\n    - add `--video-aspect-method=ignore`\n    - change `--video-aspect-override=no` to respect `--video-aspect-method`\n      option\n    - deprecate setting `--video-aspect-override` to `0` and `-1`\n    - change several OSC mouse bindings to select.lua functions\n    - add script-opts to configure what OSC buttons do when clicked\n    - remove `osc-playlist_osd` script-opt and behave as if it was off by\n      default; `playlist_osd=yes` can be replicated with `osc-\n      playlist_prev_mbtn_left_command=playlist-prev; show-text ${playlist} 3000`\n      and `osc-playlist_next_mbtn_left_command=playlist-next; show-text\n      ${playlist} 3000`\n    - remove `osc-chapters_osd` script-opt and behave as if it was off by\n      default; `chapter_osd=yes` can be replicated with `osc-\n      chapter_prev_mbtn_left_command=no-osd add chapter -1; show-text ${chapter-\n      list} 3000` and `osc-chapter_next_mbtn_left_command=no-osd add chapter 1;\n      show-text ${chapter-list} 3000`\n    - add script-opts to define custom buttons\n    - change `--prefetch-playlist`'s default to `yes`\n    - change `--osd-back-color` and `--sub-back-color` defaults to #AF000000\n    - change `--geometry` so that it no longer unconditionally moves the window\n      on platforms where that is possible. Use `--force-window-position` or add\n      `+50%+50%` to your geometry command to get the old behavior back.\n    - all options that take filepaths as values are now properly expanded (i.e.\n      ~/ -> /home/$USER)\n    - all commands that take filepaths as arguments are now properly expanded\n      (i.e. ~/ -> /home/$USER)\n    - add `ytdl_hook-include` script-opt\n    - add `video-frame-info/gop-timecode`, `video-frame-info/smpte-timecode` and\n      `video-frame-info/estimated-smpte-timecode`\n    - add `term-clip-cc`\n    - add `sub-ass-prune-delay` option to control libass automatic pruning of\n      past\n    - events\n    - add `slimbottombar` and `slimtopbar` OSC layouts optimized for viewing\n      images\n    - add `osc-fadein` script-opt\n    - add `mpv://` protocol\n    - add `metadata` sub-property for `track-list`\n    - add `keep_open` flag to `mp.input.get()` and `mp.input.select()`\n    - `mp.input.get()` now closes automatically on submit, pass `keep_open =\n      true` to restore the old behavior\n    - add `autoselect_completion` flag to `mp.input.get()`\n    - add `history_path` key to `mp.input.get()`\n    - add `hearing-impaired`, `visual-impaired` and `attached-picture` flags to\n      track add command\n    - add `format` argument to `screenshot-raw` command\n    - add `display-page-n-toggle` script bindings to stats.lua, where n is a\n      page number\n    - add `demuxer-mkv-crop-compat` option\n    - add `current-watch-later-dir` property\n    - add `console-scale_with_window` script-opt\n    - add `console-margin-x` and `console-margin-y` script-opts\n    - add `console-background_alpha` `console-menu_outline_size` `console-\n      menu_outline_color` `console-corner_radius` `console-selected_color` and\n      `console-selected_back_color` script-opts\n    - add `--video-recenter` option\n    - add `nvidia-true-hdr` mode to vf_d3d11vpp\n    - add `--sub-scale-signs` to allow `--sub-scale` to also scale events\n      detected to be signs by libass\n    - add `--script-opt` alias for `--script-opts-append`\n    - add `--save-watch-history` and `--watch-history-path` options\n    - add `--osd-selected-color` and `--osd-selected-outline-color` options\n    - add `--osd-bar-marker-scale` and `--osd-bar-marker-min-size` options\n    - add `--osd-bar-marker-style` option\n    - add `--input-ime` to enable or disable the IME on supported VOs (Windows,\n      Wayland)\n    - add `--clipboard-monitor` option\n    - add `clipboard` property\n    - add `current-clipboard-backend` property\n    - add `--clipboard-backends` option\n    - add `--archive-exts`\n    - add `archive` to `--directory-filter-types`' default\n    - add `--playlist-exts`\n    - add `playlist` to `--directory-filter-types`' default\n    - add --audio-exclusive option support for ao=audiounit and make non-\n      exclusive the new default\n    - `sub-blur` is now applied by `sub-ass-override=force` with new enough\n      libass\n    - `stats-font_size`, `stats-border_size`, `stats-shadow_x_offset`, `stats-\n      shadow_y_offset` and `stats-plot_bg_border_width` script-opt values result\n      in 2.5 times smaller sizes in order to have the same sizes as the values\n      of equivalent OSD options like `--osd-font-size`. If you customized these\n      sizes, multiply them by 2.5 to get the previous sizes.\n    - ``glsl-shader-opts`` now has predefined parameters that can be used. See\n      the documentation for available values.\n    - `--hwdec=auto` now behaves like `--hwdec=auto-safe`; use `--hwdec=auto-\n      unsafe` to get the old behavior back\n    - Change auto profiles hook priority from 50 to 5\n    - add optional `frames` and `flags` arguments to `frame-step` command\n      controlling the direction and amount of frames mpv steps through\n    - add optional `mute` flag to `frame-step` command which mutes the player\n      during the duration of the frame step\n --- mpv 0.39.0 ---\n    - turn `--cover-art-whitelist` into a list option\n    - reserve `user-data/osc` and `user-data/mpv` sub-paths for internal use\n    - remove deprecated `packet-video-bitrate` `packet-audio-bitrate` and\n      `packet-sub-bitrate` properties\n    - remove deprecated `--cache-dir` option alias\n    - remove deprecated `--cache-unlink-files` option alias\n    - remove deprecated `--demuxer-cue-codepage` option alias\n    - remove deprecated `--fps` option alias\n    - remove deprecated `--cdrom-device` option alias\n    - remove deprecated `--sub-forced-only` option alias\n    - remove deprecated `--vo-sixel-exit-clear` option alias\n    - remove deprecated `--cdda-toc-bias` option\n    - remove deprecated `--drm-atomic` option\n    - remove `sub-ass-vsfilter-aspect-compat`: use `sub-ass-use-video-data=none`\n      for disabling aspect compat\n    - remove `sub-ass-vsfilter-blur-compat`: use `sub-ass-use-video-data=aspect-\n      ratio` for disabling blur compat\n    - add `sub-ass-use-video-data`\n    - add `sub-ass-video-aspect-override`\n    - change default V keybind to cycle `sub-ass-use-video-data` instead of the\n      now removed `sub-ass-vsfilter-aspect-compat`\n    - remove `console-scale` script-opt\n    - remap numpad `+ - * /` keys to `KP_ADD/KP_SUBTRACT/KP_MULTIPLY/KP_DIVIDE`;\n      keybinds which require these numpad keys to function need to use the new\n      names instead\n    - numerical values of `--loop-file` no longer decrease on each iteration\n    - add `remaining-file-loops` property as a replacement to get the remaining\n      loop count\n    - numerical values of `--ab-loop-count` no longer decrease on each iteration\n    - add `remaining-ab-loops` property as a replacement to get the remaining\n      loop count\n```\n\n----------------------------------------\n\nTITLE: YUV Format Compatibility Matrix\nDESCRIPTION: ASCII table showing YUV/YCbCr pixel format compatibility with different operations. Each row represents a pixel format and shows whether it supports Zin/Zout operations only, or both Zin/Zout and SWSin/SWSout operations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/zimg_formats.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n      yuv444pf    Zin   Zout                |\n     yuva410pf    Zin   Zout                |\n     yuva411pf    Zin   Zout                |\n      yuva420p    Zin   Zout  SWSin  SWSout |\n    yuva420p10    Zin   Zout  SWSin  SWSout |\n  yuva420p10be    Zin   Zout  SWSin  SWSout |\n    yuva420p16    Zin   Zout  SWSin  SWSout |\n  yuva420p16be    Zin   Zout  SWSin  SWSout |\n     yuva420p9    Zin   Zout  SWSin  SWSout |\n   yuva420p9be    Zin   Zout  SWSin  SWSout |\n     yuva420pf    Zin   Zout                |\n      yuva422p    Zin   Zout  SWSin  SWSout |\n    yuva422p10    Zin   Zout  SWSin  SWSout |\n  yuva422p10be    Zin   Zout  SWSin  SWSout |\n    yuva422p12    Zin   Zout  SWSin  SWSout |\n  yuva422p12be    Zin   Zout  SWSin  SWSout |\n    yuva422p16    Zin   Zout  SWSin  SWSout |\n  yuva422p16be    Zin   Zout  SWSin  SWSout |\n     yuva422p9    Zin   Zout  SWSin  SWSout |\n   yuva422p9be    Zin   Zout  SWSin  SWSout |\n     yuva422pf    Zin   Zout                |\n     yuva440pf    Zin   Zout                |\n      yuva444p    Zin   Zout  SWSin  SWSout |\n    yuva444p10    Zin   Zout  SWSin  SWSout |\n  yuva444p10be    Zin   Zout  SWSin  SWSout |\n    yuva444p12    Zin   Zout  SWSin  SWSout |\n  yuva444p12be    Zin   Zout  SWSin  SWSout |\n    yuva444p16    Zin   Zout  SWSin  SWSout |\n  yuva444p16be    Zin   Zout  SWSin  SWSout |\n     yuva444p9    Zin   Zout  SWSin  SWSout |\n   yuva444p9be    Zin   Zout  SWSin  SWSout |\n     yuva444pf    Zin   Zout                |\n      yuvj411p    Zin   Zout  SWSin  SWSout |\n      yuvj422p    Zin   Zout  SWSin  SWSout |\n      yuvj440p    Zin   Zout  SWSin  SWSout |\n       yuyv422    Zin   Zout  SWSin  SWSout |\n       yvyu422    Zin   Zout  SWSin  SWSout |\n```\n\n----------------------------------------\n\nTITLE: Describing Gbrap and Variants Pixel Format\nDESCRIPTION: This snippet explains the gbrap pixel format and its variants such as gbrap10, gbrap12, etc., featuring detailed bit depth variants for improved color accuracy. The description covers layout and structure, focusing on its planar organization and bit depth variations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_9\n\nLANGUAGE: unknown\nCODE:\n```\ngbrap: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {8/[0:0] 8/[0:0] 8/[0:0] 8/[0:0] }\n    0: 8bits {} {0:8} {} {}\n    1: 8bits {} {} {0:8} {}\n    2: 8bits {0:8} {} {} {}\n    3: 8bits {} {} {} {0:8}\n  Regular: planes=4 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {2}\n    1: {3}\n    2: {1}\n    3: {4}\n  AVD: name=gbrap chroma=0:0 flags=0xb0 [planar][rgb][alpha]\n    0: p=2  st=1  o=0  sh=0  d=8\n    1: p=0  st=1  o=0  sh=0  d=8\n    2: p=1  st=1  o=0  sh=0  d=8\n    3: p=3  st=1  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Audio File Conversion with MPV (Bash)\nDESCRIPTION: Example command for converting an audio file from FLAC to AAC format using mpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/encoding.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmpv --o=outfile.m4a infile.flac --no-video --oac=aac --oacopts=b=320k\n```\n\n----------------------------------------\n\nTITLE: MPV Track List Node Format Structure\nDESCRIPTION: Defines the structured format for track list data when accessed via MPV_FORMAT_NODE or Lua mp.get_property_native()\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_37\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (for each track)\n        \"id\"                MPV_FORMAT_INT64\n        \"type\"              MPV_FORMAT_STRING\n        \"src-id\"            MPV_FORMAT_INT64\n        \"title\"             MPV_FORMAT_STRING\n        \"lang\"              MPV_FORMAT_STRING\n        \"image\"             MPV_FORMAT_FLAG\n        \"albumart\"          MPV_FORMAT_FLAG\n        \"default\"           MPV_FORMAT_FLAG\n        \"forced\"            MPV_FORMAT_FLAG\n        \"dependent\"         MPV_FORMAT_FLAG\n        \"visual-impaired\"   MPV_FORMAT_FLAG\n        \"hearing-impaired\"  MPV_FORMAT_FLAG\n        \"hls-bitrate\"       MPV_FORMAT_INT64\n        \"program-id\"        MPV_FORMAT_INT64\n        \"selected\"          MPV_FORMAT_FLAG\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Subtitle Stretching in MPV\nDESCRIPTION: This option stretches DVD and other image subtitles to the screen, ignoring video margins. It may not display subtitles correctly and should be used with care.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_107\n\nLANGUAGE: config\nCODE:\n```\n--stretch-image-subs-to-screen=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Version History Changes in MPV Client API\nDESCRIPTION: Chronicles the version history and API changes in mpv client API, including deprecations, removals, and additions of various features and parameters. Each entry is prefixed with the API version number.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/client-api-changes.rst#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n --- mpv 0.40.0 ---\n 2.5    - Deprecate MPV_RENDER_PARAM_AMBIENT_LIGHT. no replacement.\n --- mpv 0.39.0 ---\n 2.4    - mpv_render_param with the MPV_RENDER_PARAM_ICC_PROFILE argument no\n          longer has incorrect assumptions about memory allocation and can be\n          correctly used.\n --- mpv 0.38.0 ---\n 2.3    - partially revert the changes from API version 1.27, remove libmpv as\n          the default VO and move it to the bottom of the auto-probing order.\n          This restores the prior behavior on all platforms other than macOS,\n          but still auto selects libmpv/cocoa-cb on macOS if it was built with\n          support for cocoa-cb.\n```\n\n----------------------------------------\n\nTITLE: Defining Pixel Formats - gbrap - Miscellaneous\nDESCRIPTION: Defines the gbrap pixel format with specific attributes including alignment, overflow handling, and various format flags. This is critical for ensuring correct video rendering behavior.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_0\n\nLANGUAGE: text/plain\nCODE:\n```\ngbrap       = align=1:1 ov=unknown, ov_f=gbrap, v_f=gbrap, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Configuration file path example\nDESCRIPTION: Shows the configuration file paths supported by mpv for the mpv.conf file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/mplayer-changes.rst#2025-04-21_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\n~/.config/mpv/mpv.conf\n```\n\nLANGUAGE: conf\nCODE:\n```\n~/.mpv/config\n```\n\n----------------------------------------\n\nTITLE: Defining AYUV64 Pixel Format in MPV Player\nDESCRIPTION: Specifies the AYUV64 pixel format with 64-bit depth, YUV color space with alpha channel, and little-endian byte order. Includes basic description, regular format, and AVD representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nayuv64: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuv][le][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits {16:16} {32:16} {48:16} {0:16}\n  Regular: planes=1 compbytes=2 bitpad=0 chroma=1x1 ctype=uint\n    0: {4, 1, 2, 3}\n  AVD: name=ayuv64le chroma=0:0 flags=0x80 [alpha]\n    0: p=0  st=8  o=2  sh=0  d=16\n    1: p=0  st=8  o=4  sh=0  d=16\n    2: p=0  st=8  o=6  sh=0  d=16\n    3: p=0  st=8  o=0  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Pixel Format Conversion Table for MPV Player\nDESCRIPTION: This table lists input pixel formats and their supported output formats in MPV player. Each line represents a conversion, with flags indicating special processing requirements or limitations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/repack.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n0bgr            => [pa] [un] gbrp            | a=1:1 [tu] [tp]\n0bgr            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\n0rgb            => [pa] [un] gbrp            | a=1:1 [tu] [tp]\n0rgb            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nabgr            => [pa] [un] gbrap           | a=1:1 [tu] [tp]\nabgr            => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nargb            => [pa] [un] gbrap           | a=1:1 [tu] [tp]\nargb            => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nayuv64          => [pa] [un] yuva444p16      | a=1:1 [tu] [tp]\nayuv64          => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nayuv64be        => [pa] [un] yuva444p16      | a=1:1 [tu] [tp]\nayuv64be        => [pa] [un] yuva444pf       | a=1:1 [planar-f32]\nbayer_bggr16    => no\nbayer_bggr16be  => no\nbayer_bggr8     => no\nbayer_gbrg16    => no\nbayer_gbrg16be  => no\nbayer_gbrg8     => no\nbayer_grbg16    => no\nbayer_grbg16be  => no\nbayer_grbg8     => no\nbayer_rggb16    => no\nbayer_rggb16be  => no\nbayer_rggb8     => no\nbgr0            => [pa] [un] gbrp            | a=1:1 [tu] [tp]\nbgr0            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr24           => [pa] [un] gbrp            | a=1:1 [tu] [tp]\nbgr24           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr4            => no\nbgr444          => [pa] [un] gbrp4           | a=1:1\nbgr444          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr444          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr444be        => [pa] [un] gbrp4           | a=1:1\nbgr444be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr444be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr48           => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nbgr48           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr48be         => [pa] [un] gbrp16          | a=1:1 [tu] [tp]\nbgr48be         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr4_byte       => [pa] [un] gbrp2           | a=1:1\nbgr4_byte       => [pa] [un] gbrp1           | a=1:1 [round-down]\nbgr4_byte       => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr4_byte       => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr555          => [pa] [un] gbrp5           | a=1:1\nbgr555          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr555          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr555be        => [pa] [un] gbrp5           | a=1:1\nbgr555be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr555be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr565          => [pa] [un] gbrp6           | a=1:1\nbgr565          => [pa] [un] gbrp5           | a=1:1 [round-down]\nbgr565          => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr565          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr565be        => [pa] [un] gbrp6           | a=1:1\nbgr565be        => [pa] [un] gbrp5           | a=1:1 [round-down]\nbgr565be        => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr565be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgr8            => [pa] [un] gbrp3           | a=1:1\nbgr8            => [pa] [un] gbrp2           | a=1:1 [round-down]\nbgr8            => [pa] [un] gbrp            | a=1:1 [expand-8bit] [tu] [tp]\nbgr8            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\nbgra            => [pa] [un] gbrap           | a=1:1 [tu] [tp]\nbgra            => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nbgra64          => [pa] [un] gbrap16         | a=1:1 [tu] [tp]\nbgra64          => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\nbgra64be        => [pa] [un] gbrap16         | a=1:1 [tu] [tp]\nbgra64be        => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ncuda            => no\nd3d11           => no\nd3d11va_vld     => no\ndrm_prime       => no\ndxva2_vld       => no\ngbrap           => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap10         => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap10be       => [pa] [un] gbrap10         | a=1:1\ngbrap10be       => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap12         => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap12be       => [pa] [un] gbrap12         | a=1:1\ngbrap12be       => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap14         => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap14be       => [pa] [un] gbrap14         | a=1:1\ngbrap14be       => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap16         => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrap16be       => [pa] [un] gbrap16         | a=1:1\ngbrap16be       => [pa] [un] gbrapf32        | a=1:1 [planar-f32]\ngbrapf32be      => [pa] [un] gbrapf32        | a=1:1\ngbrp            => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp1           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp10          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp10be        => [pa] [un] gbrp10          | a=1:1\ngbrp10be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp12          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp12be        => [pa] [un] gbrp12          | a=1:1\ngbrp12be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp14          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp14be        => [pa] [un] gbrp14          | a=1:1\ngbrp14be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp16          => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp16be        => [pa] [un] gbrp16          | a=1:1\ngbrp16be        => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp2           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp3           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp4           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp5           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp6           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp9           => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrp9be         => [pa] [un] gbrp9           | a=1:1\ngbrp9be         => [pa] [un] gbrpf32         | a=1:1 [planar-f32]\ngbrpf32be       => [pa] [un] gbrpf32         | a=1:1\ngray            => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray10          => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray10be        => [pa] [un] gray10          | a=1:1\ngray10be        => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray12          => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray12be        => [pa] [un] gray12          | a=1:1\ngray12be        => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray14          => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray14be        => [pa] [un] gray14          | a=1:1\ngray14be        => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray16          => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray16be        => [pa] [un] gray16          | a=1:1\ngray16be        => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray9           => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngray9be         => [pa] [un] gray9           | a=1:1\ngray9be         => [pa] [un] grayf32         | a=1:1 [planar-f32]\ngrayf32be       => [pa] [un] grayf32         | a=1:1\nmediacodec      => no\nmmal            => no\nmonob           => [pa] [un] y1              | a=8:1 [tu] [tp]\nmonob           => [pa] [un] gray            | a=8:1 [expand-8bit]\nmonow           => [pa] [un] y1              | a=8:1 [tu] [tp]\nmonow           => [pa] [un] gray            | a=8:1 [expand-8bit]\nnv12            => [pa] [un] yuv420p         | a=2:2 [tu] [tp]\nnv12            => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nnv16            => [pa] [un] yuv422p         | a=2:1\nnv16            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nnv20            => [pa] [un] yuv422p10       | a=2:1\nnv20            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nnv20be          => [pa] [un] yuv422p10       | a=2:1\nnv20be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\nnv21            => [pa] [un] yuv420p         | a=2:2 [tu] [tp]\nnv21            => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\nnv24            => [pa] [un] yuv444p         | a=1:1\nnv24            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nnv42            => [pa] [un] yuv444p         | a=1:1\nnv42            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\nopencl          => no\np010            => [pa] [un] yuv420p16       | a=2:2\np010            => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\np010be          => [pa] [un] yuv420p16       | a=2:2\np010be          => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\np012            => [pa] [un] yuv420p16       | a=2:2\np012            => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\np012be          => [pa] [un] yuv420p16       | a=2:2\np012be          => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\np016            => [pa] [un] yuv420p16       | a=2:2\np016            => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\np016be          => [pa] [un] yuv420p16       | a=2:2\np016be          => [pa] [un] yuv420pf        | a=2:2 [planar-f32]\np210            => [pa] [un] yuv422p16       | a=2:1\np210            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\np210be          => [pa] [un] yuv422p16       | a=2:1\np210be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\np212            => [pa] [un] yuv422p16       | a=2:1\np212            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\np212be          => [pa] [un] yuv422p16       | a=2:1\np212be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\np216            => [pa] [un] yuv422p16       | a=2:1\np216            => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\np216be          => [pa] [un] yuv422p16       | a=2:1\np216be          => [pa] [un] yuv422pf        | a=2:1 [planar-f32]\np410            => [pa] [un] yuv444p16       | a=1:1\np410            => [pa] [un] yuv444pf        | a=1:1 [planar-f32]\n```\n\n----------------------------------------\n\nTITLE: MPV Node Structure for VO Passes\nDESCRIPTION: Demonstrates the data structure format when querying vo-passes property using MPV_FORMAT_NODE or Lua mp.get_property_native.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_40\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_MAP\n\"TYPE\" MPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP\n        \"desc\"    MPV_FORMAT_STRING\n        \"last\"    MPV_FORMAT_INT64\n        \"avg\"     MPV_FORMAT_INT64\n        \"peak\"    MPV_FORMAT_INT64\n        \"count\"   MPV_FORMAT_INT64\n        \"samples\" MPV_FORMAT_NODE_ARRAY\n             MP_FORMAT_INT64\n```\n\n----------------------------------------\n\nTITLE: Defining bgra64 Pixel Format - Plaintext\nDESCRIPTION: This snippet defines the bgra64le pixel format with detailed structure, component arrangement, and AVD settings, focusing on 64-bit representation for higher fidelity in rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nbgra64: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits {32:16} {16:16} {0:16} {48:16}\n  Regular: planes=1 compbytes=2 bitpad=0 chroma=1x1 ctype=uint\n    0: {3, 2, 1, 4}\n  AVD: name=bgra64le chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=8  o=4  sh=0  d=16\n    1: p=0  st=8  o=2  sh=0  d=16\n    2: p=0  st=8  o=0  sh=0  d=16\n    3: p=0  st=8  o=6  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Defining Pixel Formats - gbrap12 - Miscellaneous\nDESCRIPTION: Defines the gbrap12 pixel format, facilitating higher color precision and range. Key properties include alignment and overflow handling, ensuring compatibility with advanced video processing tasks.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_2\n\nLANGUAGE: text/plain\nCODE:\n```\ngbrap12     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Defining YUV Pixel Format: yuva420p\nDESCRIPTION: This snippet defines the YUV pixel format 'yuva420p' with a uint data type, detailing the pixel description including planes, chroma, and arrangement to ensure compatibility in video processing workflows.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_12\n\nLANGUAGE: none\nCODE:\n```\nyuva420p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][be][uint]\n    planes=4, chroma=1:1 align=2:2\n    {8/[0:0] 8/[1:1] 8/[1:1] 8/[0:0] }\n\n```\n\n----------------------------------------\n\nTITLE: Creating Import Library for mpv DLL with MSVC Bash\nDESCRIPTION: This bash command is used to create an import library for the mpv DLL necessary for linking with MSVC programs. Ensure the '/name:' parameter matches the filename of the DLL. This step is crucial when the toolchain does not automatically generate a '.lib' file.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nlib /name:mpv-2.dll /out:mpv.lib /MACHINE:X64\n```\n\n----------------------------------------\n\nTITLE: Playing Files Adjacent to History Entry\nDESCRIPTION: Example input.conf configuration to play files adjacent to a selected history entry, enabling autocreate-playlist.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/select.rst#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\ng-h script-binding select/select-watch-history; no-osd set autocreate-playlist filter\n```\n\n----------------------------------------\n\nTITLE: Defining 0BGR Pixel Format in MPV Player\nDESCRIPTION: Specifies the 0BGR pixel format with 32-bit depth, RGB color space, and little-endian byte order. Includes basic description, regular format, and AVD (Audio Video Device) representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n0bgr: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {24:8} {16:8} {8:8} {}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {0, 3, 2, 1}\n  AVD: name=0bgr chroma=0:0 flags=0x20 [rgb]\n    0: p=0  st=4  o=3  sh=0  d=8\n    1: p=0  st=4  o=2  sh=0  d=8\n    2: p=0  st=4  o=1  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: MPV Chapter List Node Format Structure\nDESCRIPTION: Defines the format for chapter list data when accessed via MPV_FORMAT_NODE or Lua mp.get_property_native()\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#2025-04-21_snippet_38\n\nLANGUAGE: text\nCODE:\n```\nMPV_FORMAT_NODE_ARRAY\n    MPV_FORMAT_NODE_MAP (for each chapter)\n        \"title\" MPV_FORMAT_STRING\n        \"time\"  MPV_FORMAT_DOUBLE\n```\n\n----------------------------------------\n\nTITLE: Defining ARGB Pixel Format in MPV Player\nDESCRIPTION: Specifies the ARGB pixel format with 32-bit depth, RGB color space with alpha channel, and little-endian byte order. Includes basic description, regular format, and AVD representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nargb: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {8:8} {16:8} {24:8} {0:8}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {4, 1, 2, 3}\n  AVD: name=argb chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=4  o=1  sh=0  d=8\n    1: p=0  st=4  o=2  sh=0  d=8\n    2: p=0  st=4  o=3  sh=0  d=8\n    3: p=0  st=4  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Defining YUV Pixel Format: yuva422p\nDESCRIPTION: This snippet outlines the 'yuva422p' YUV pixel format with a uint data type, emphasizing configuration details required for processing this specific format effectively in video applications.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_13\n\nLANGUAGE: none\nCODE:\n```\nyuva422p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][be][uint]\n    planes=4, chroma=1:0 align=2:1\n    {8/[0:0] 8/[1:0] 8/[1:0] 8/[0:0] }\n\n```\n\n----------------------------------------\n\nTITLE: Encoding example using mpv for yuv4mpeg output\nDESCRIPTION: Command line example showing how to encode video to yuv4mpeg format using mpv with specific output options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/mplayer-changes.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmpv input.mkv -o output.y4m --no-audio --oautofps --oneverdrop\n```\n\n----------------------------------------\n\nTITLE: Clearing Subtitles on Seek in MPV\nDESCRIPTION: This obscure option disables caching of subtitles across seeks, useful for playing broken mkv files with duplicate ReadOrder fields. It may result in broken subtitle behavior if not needed.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_122\n\nLANGUAGE: config\nCODE:\n```\n--sub-clear-on-seek\n```\n\n----------------------------------------\n\nTITLE: Float RGBA Format Descriptor (rgbaf16)\nDESCRIPTION: Descriptor for RGBA format with 16-bit floating-point components. This format uses a single plane with four 16-bit float components (R,G,B,A) per pixel for high dynamic range representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_26\n\nLANGUAGE: text\nCODE:\n```\nrgbaf16: [GENERIC] fcsp=rgb ctype=float\n  Basic desc: [ba][bb][a][rgb][le][float]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits {0:16} {16:16} {32:16} {48:16}\n  Regular: planes=1 compbytes=2 bitpad=0 chroma=1x1 ctype=float\n    0: {1, 2, 3, 4}\n  AVD: name=rgbaf16le chroma=0:0 flags=0x2a0 [rgb][alpha][float]\n    0: p=0  st=8  o=0  sh=0  d=16\n    1: p=0  st=8  o=2  sh=0  d=16\n    2: p=0  st=8  o=4  sh=0  d=16\n    3: p=0  st=8  o=6  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Enabling Native ASS Subtitle Rendering in MPV\nDESCRIPTION: This option controls whether ASS subtitles are rendered natively. It has been deprecated in favor of other options for more fine-grained control over subtitle styling.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_109\n\nLANGUAGE: config\nCODE:\n```\n--sub-ass=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Defining bgra Pixel Format - Plaintext\nDESCRIPTION: This snippet describes the bgra pixel format, providing details on the byte order, component arrangement, and AVD settings essential for applications that require alpha channel support in rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nbgra: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {16:8} {8:8} {0:8} {24:8}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {3, 2, 1, 4}\n  AVD: name=bgra chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=4  o=2  sh=0  d=8\n    1: p=0  st=4  o=1  sh=0  d=8\n    2: p=0  st=4  o=0  sh=0  d=8\n    3: p=0  st=4  o=3  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Defining YUV Pixel Format: yuva410pf\nDESCRIPTION: This snippet defines the YUV pixel format 'yuva410pf' with a float data type, specifying properties related to planes, chroma, and format alignment for better processing in applications that handle color space.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_11\n\nLANGUAGE: none\nCODE:\n```\nyuva410pf: ctype=float\n  Basic desc: [ba][bb][a][yuv][le][float]\n    planes=4, chroma=2:2 align=4:4\n    {32/[0:0] 32/[2:2] 32/[2:2] 32/[0:0] }\n\n```\n\n----------------------------------------\n\nTITLE: Describing bgra Pixel Format\nDESCRIPTION: This snippet outlines the bgra pixel format, showcasing its RGBA components and their arrangement in a 32-bit layout. The format includes an alpha channel, making it suitable for applications requiring transparency support.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_5\n\nLANGUAGE: unknown\nCODE:\n```\nbgra: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {16:8} {8:8} {0:8} {24:8}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {3, 2, 1, 4}\n  AVD: name=bgra chroma=0:0 flags=0xa0 [rgb][alpha]\n    0: p=0  st=4  o=2  sh=0  d=8\n    1: p=0  st=4  o=1  sh=0  d=8\n    2: p=0  st=4  o=0  sh=0  d=8\n    3: p=0  st=4  o=3  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Loading Fonts in FontForge for MPV Icons\nDESCRIPTION: Command to load a freely licensed font and MPV's glyph directory in FontForge for icon customization.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/TOOLS/mpv-osd-symbols.sfdir/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nfontforge Symbola.ttf TOOLS/mpv-osd-symbols.sfdir\n```\n\n----------------------------------------\n\nTITLE: Video Format Specification - RGBF32 Format\nDESCRIPTION: Specification for RGBF32 format using 32-bit float components with both little and big endian variants\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_29\n\nLANGUAGE: config\nCODE:\n```\nrgbf32: [GENERIC] fcsp=rgb ctype=float\n  Basic desc: [ba][rgb][le][be][float]\n    planes=1, chroma=0:0 align=1:1\n    {96/[0:0] }\n    0: 96bits {} {} {} {}\n  AVD: name=rgbf32le chroma=0:0 flags=0x220 [rgb][float]\n    0: p=0  st=12 o=0  sh=0  d=32\n    1: p=0  st=12 o=4  sh=0  d=32\n    2: p=0  st=12 o=8  sh=0  d=32\n```\n\n----------------------------------------\n\nTITLE: Example of object syntax with byte escapes - MPV IPC\nDESCRIPTION: This example shows the non-standard JSON extensions supported by MPV's IPC interface. It illustrates the usage of byte escapes and alternative object syntax.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{ objkey = \"value\\x0A\" }\n```\n\nLANGUAGE: json\nCODE:\n```\n{ \"objkey\": \"value\\n\" }\n```\n\n----------------------------------------\n\nTITLE: Enabling DTS-HD Passthrough in MPV\nDESCRIPTION: Determines whether to use DTS-HD when DTS is passed through. This option is deprecated in favor of using --audio-spdif=dts-hd for controlling digital audio passthrough.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_79\n\nLANGUAGE: bash\nCODE:\n```\n--ad-spdif-dtshd=<yes|no>, --dtshd=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Describing bgr8 Pixel Format\nDESCRIPTION: This snippet provides an overview of the bgr8 pixel format, which uses 8-bit RGB components. It presents the layout of data in a planar structure with a basic description, important for systems dealing with lower bit depth representations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_4\n\nLANGUAGE: unknown\nCODE:\n```\nbgr8: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {8/[0:0] }\n    0: 8bits {0:3} {3:3} {6:2} {}\n  AVD: name=bgr8 chroma=0:0 flags=0x20 [rgb]\n    0: p=0  st=1  o=0  sh=0  d=3\n    1: p=0  st=1  o=0  sh=3  d=3\n    2: p=0  st=1  o=0  sh=6  d=2\n```\n\n----------------------------------------\n\nTITLE: YUV Color Format Specifications\nDESCRIPTION: Defines YUV color format specifications including AYUV64 variants with their bit layouts and endianness configurations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_1\n\nLANGUAGE: config\nCODE:\n```\nayuv64: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuv][le][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits {16:16} {32:16} {48:16} {0:16}\n```\n\n----------------------------------------\n\nTITLE: Setting Volume Gain in dB in MPV\nDESCRIPTION: Applies an additional volume gain in dB on top of other volume settings. This allows fine-tuning of volume levels using the decibel scale.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_66\n\nLANGUAGE: bash\nCODE:\n```\n--volume-gain=<db>\n```\n\n----------------------------------------\n\nTITLE: Defining YUV422P Color Format Specification\nDESCRIPTION: Specifies the YUV422P color format with 8-bit depth, 4:2:2 chroma subsampling, and planar configuration.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_33\n\nLANGUAGE: plaintext\nCODE:\n```\nyuv422p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][le][be][uint]\n    planes=3, chroma=1:0 align=2:1\n    {8/[0:0] 8/[1:0] 8/[1:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n  Regular: planes=3 compbytes=1 bitpad=0 chroma=2x1 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n  AVD: name=yuv422p chroma=1:0 flags=0x10 [planar]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Planar YUV 4:1:0 Format Descriptor (p410le)\nDESCRIPTION: Descriptor for planar YUV 4:1:0 format with 10-bit components in little-endian byte order. This format uses two planes, with luma (Y) in the first plane and chroma (U,V) components interleaved in the second plane.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_22\n\nLANGUAGE: text\nCODE:\n```\n    0: 16bits {0:16/6} {} {} {}\n    1: 32bits {} {0:16/6} {16:16/6} {}\n  Regular: planes=2 compbytes=2 bitpad=6 chroma=1x1 ctype=uint\n    0: {1}\n    1: {2, 3}\n  AVD: name=p410le chroma=0:0 flags=0x10 [planar]\n    0: p=0  st=2  o=0  sh=6  d=10\n    1: p=1  st=4  o=0  sh=6  d=10\n    2: p=1  st=4  o=2  sh=6  d=10\n```\n\n----------------------------------------\n\nTITLE: Enabling Media Control Interface (Windows)\nDESCRIPTION: Enables integration of the SystemMediaTransportControls media control interface on Windows. Default is 'yes' except for libmpv.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst#2025-04-21_snippet_226\n\nLANGUAGE: plaintext\nCODE:\n```\n--media-controls=<yes|no>\n```\n\n----------------------------------------\n\nTITLE: Defining Pixel Formats - gbrap10 - Miscellaneous\nDESCRIPTION: Defines the gbrap10 pixel format, expanding the original gbrap format with additional bit depth specifications while retaining alignment and overflow management. Suitable for higher quality video outputs.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_1\n\nLANGUAGE: text/plain\nCODE:\n```\ngbrap10     = align=1:1 ov=unknown, ov_f=gbrapf32, v_f=gbrapf32, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Bayer Pattern Format Specifications\nDESCRIPTION: Defines various Bayer pattern format specifications including BGGR, GBRG, GRBG, RGGB variants in 8-bit and 16-bit configurations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/img_formats.txt#2025-04-21_snippet_2\n\nLANGUAGE: config\nCODE:\n```\nbayer_bggr16: [GENERIC] fcsp=rgb ctype=unknown\n  Basic desc: [ba][rgb][le][be]\n    planes=1, chroma=0:0 align=1:1\n    {16/[0:0] }\n    0: 16bits {} {} {} {}\n```\n\n----------------------------------------\n\nTITLE: Defining AYUV64BE Pixel Format in MPV Player\nDESCRIPTION: Specifies the AYUV64BE pixel format with 64-bit depth, YUV color space with alpha channel, and big-endian byte order. Includes basic description and AVD representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nayuv64be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuv][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits endian_bytes=2 {16:16} {32:16} {48:16} {0:16}\n  AVD: name=ayuv64be chroma=0:0 flags=0x81 [be][alpha]\n    0: p=0  st=8  o=2  sh=0  d=16\n    1: p=0  st=8  o=4  sh=0  d=16\n    2: p=0  st=8  o=6  sh=0  d=16\n    3: p=0  st=8  o=0  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Displaying OSC Interface Layout in ASCII Art\nDESCRIPTION: ASCII art representation of the On Screen Controller (OSC) interface layout, showing the positions of various controls and elements.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/osc.rst#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n+------+---------+---------+-----------------------------------------------+\n| menu | pl prev | pl next | title                                   cache |\n+------+------+------+---------+-----------+------+-------+-----+-----+----+\n| play | skip | skip | time    |  seekbar  | time | audio | sub | vol | fs |\n|      | back | frwd | elapsed |           | left |       |     |     |    |\n+------+------+------+---------+-----------+------+-------+-----+-----+----+\n```\n\n----------------------------------------\n\nTITLE: Defining yuvj411p Video Format Attributes\nDESCRIPTION: This snippet specifies the yuvj411p video format, indicating no special attributes or processing options are set for this format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nyuvj411p    = no\n```\n\n----------------------------------------\n\nTITLE: Defining gbrap Pixel Format - Plaintext\nDESCRIPTION: This snippet defines the gbrap pixel format and its various attributes, suitable for scenarios requiring higher information density in planar RGB formats.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\ngbrap: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {8/[0:0] 8/[0:0] 8/[0:0] 8/[0:0] }\n    0: 8bits {} {0:8} {} {}\n    1: 8bits {} {} {0:8} {}\n    2: 8bits {0:8} {} {} {}\n    3: 8bits {} {} {} {0:8}\n  Regular: planes=4 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {2}\n    1: {3}\n    2: {1}\n    3: {4}\n  AVD: name=gbrap chroma=0:0 flags=0xb0 [planar][rgb][alpha]\n    0: p=2  st=1  o=0  sh=0  d=8\n    1: p=0  st=1  o=0  sh=0  d=8\n    2: p=1  st=1  o=0  sh=0  d=8\n    3: p=3  st=1  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Code Examples in Documentation\nDESCRIPTION: While this document contains no actual code snippets, it references code-related concepts like OPT_REPLACED, OPT_REMOVED, MPV_CLIENT_API_VERSION, and struct definitions like mpv_node and mpv_event.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/compatibility.rst#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Defining yuvj422p Video Format Attributes\nDESCRIPTION: This snippet details the attributes for the yuvj422p video format with specific alignments and output options, including alignment set to 2:1 and various output flags with values indicating a gray color format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nyuvj422p    = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\n```\n\n----------------------------------------\n\nTITLE: Defining 0RGB Pixel Format in MPV Player\nDESCRIPTION: Specifies the 0RGB pixel format with 32-bit depth, RGB color space, and little-endian byte order. Includes basic description, regular format, and AVD representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n0rgb: fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {32/[0:0] }\n    0: 32bits {8:8} {16:8} {24:8} {}\n  Regular: planes=1 compbytes=1 bitpad=0 chroma=1x1 ctype=uint\n    0: {0, 1, 2, 3}\n  AVD: name=0rgb chroma=0:0 flags=0x20 [rgb]\n    0: p=0  st=4  o=1  sh=0  d=8\n    1: p=0  st=4  o=2  sh=0  d=8\n    2: p=0  st=4  o=3  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Specifying YUV422P16BE Format Structure in MPV\nDESCRIPTION: Defines the yuv422p16be (big-endian) pixel format with 3 planes, 16-bit components, and 2:1 horizontal chroma subsampling. Includes both the basic description and AVD configuration with big-endian flag.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_35\n\nLANGUAGE: technical\nCODE:\n```\nyuv422p16be: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][yuvp][yuv][be][uint]\n    planes=3, chroma=1:0 align=2:1\n    {16/[0:0] 16/[1:0] 16/[1:0] }\n    0: 16bits endian_bytes=2 {0:16} {} {} {}\n    1: 16bits endian_bytes=2 {} {0:16} {} {}\n    2: 16bits endian_bytes=2 {} {} {0:16} {}\n  AVD: name=yuv422p16be chroma=1:0 flags=0x11 [be][planar]\n    0: p=0  st=2  o=0  sh=0  d=16\n    1: p=1  st=2  o=0  sh=0  d=16\n    2: p=2  st=2  o=0  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Defining cuda Pixel Format - Plaintext\nDESCRIPTION: This snippet describes the cuda pixel format, intended for hardware acceleration environments, and outlines its basic structure, AVD settings, and general attributes.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\ncuda: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=0:0 align=1:1\n    {}\n  AVD: name=cuda chroma=0:0 flags=0x8 [hw]\n```\n\n----------------------------------------\n\nTITLE: Creating Release Notes Template in Markdown\nDESCRIPTION: This code snippet provides a template for writing release notes for MPV Player. It includes sections for key highlights, features, options and commands, and fixes and minor enhancements.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/release-policy.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRelease 0.X.Y\n=============\n\nWe are excited to announce the release of mpv 0.X.Y.\n\nKey highlights:\n\n* List of notable stuff\n\nThis release requires FFmpeg <ver> or newer and libplacebo <ver> or newer.\n\n# Features\n\n## New\n\n- List of new features\n\n\n## Changed\n\n- List of changed features\n\n\n## Removed\n\n- List of removed features\n\n\n# Options and Commands\n\n## Added\n\n- List of added options and commands\n\n\n## Changed\n\n- List of changed options and commands\n\n\n## Deprecated\n\n- List of deprecated options and commands\n\n\n## Removed\n\n- List of removed options and commands\n\n\n# Fixes and Minor Enhancements\n\n- List of fixes and minor enhancements\n\n\nThis listing is not complete. Check DOCS/client-api-changes.rst for a history\nof changes to the client API, and DOCS/interface-changes.rst for a history\nof changes to other user-visible interfaces.\n\nA complete changelog can be seen by running `git log start..end`\nin the git repository or by visiting\n<https://github.com/mpv-player/mpv/compare/start...end>.\n```\n\n----------------------------------------\n\nTITLE: Defining yvyu422 Video Format Attributes\nDESCRIPTION: This snippet defines the yvyu422 video format attributes with an alignment of 2:1 and specifies the same output options as yuyv422, indicating a gray color format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nyvyu422     = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\n```\n\n----------------------------------------\n\nTITLE: C Style Example for if Statements with Expressions\nDESCRIPTION: Example showing the required formatting for if statements with expressions, demonstrating proper spacing and brace placement according to mpv's coding standards.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/contribute.md#2025-04-21_snippet_0\n\nLANGUAGE: C\nCODE:\n```\nif ((a * b) > c) {\n    // code\n    some_function(a, b, c);\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Deprecated and Recommended Command Line Options in MPV\nDESCRIPTION: This snippet shows a deprecated command line option `--foo` and its recommended replacement `--bar=foo`. This is typically included in documentation to guide users to migrate to newer syntax.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes/example.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n--foo\n```\n\nLANGUAGE: markdown\nCODE:\n```\n--bar=foo\n```\n\n----------------------------------------\n\nTITLE: Defining bgra64be Pixel Format - Plaintext\nDESCRIPTION: This snippet provides the definition for the bgra64be pixel format, emphasizing properties including endianness, alignment, and AVD settings to ensure proper utilization of resources for rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nbgra64be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {64/[0:0] }\n    0: 64bits endian_bytes=2 {32:16} {16:16} {0:16} {48:16}\n  AVD: name=bgra64be chroma=0:0 flags=0xa1 [be][rgb][alpha]\n    0: p=0  st=8  o=4  sh=0  d=16\n    1: p=0  st=8  o=2  sh=0  d=16\n    2: p=0  st=8  o=0  sh=0  d=16\n    3: p=0  st=8  o=6  sh=0  d=16\n```\n\n----------------------------------------\n\nTITLE: Defining dxva2_vld Pixel Format - Plaintext\nDESCRIPTION: This snippet outlines the dxva2_vld pixel format setup for video decoding and processing, emphasizing AVD configurations for compatibility.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\ndxva2_vld: ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=1:1 align=2:2\n    {}\n  AVD: name=dxva2_vld chroma=1:1 flags=0x8 [hw]\n```\n\n----------------------------------------\n\nTITLE: Defining yuyv422 Video Format Attributes\nDESCRIPTION: This snippet outlines the attributes for the yuyv422 video format, indicating alignment of 2:1 and output options, similar to yuvj422p but using the yuyv color format.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nyuyv422     = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\n```\n\n----------------------------------------\n\nTITLE: C Style Example for if/else with Single Line Statements\nDESCRIPTION: Example demonstrating that both branches of an if/else statement must use braces even if they contain only a single line of code.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/contribute.md#2025-04-21_snippet_2\n\nLANGUAGE: C\nCODE:\n```\nif (a) {\n    one_line();\n} else {\n    one_other_line();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining d3d11va_vld Pixel Format - Plaintext\nDESCRIPTION: This snippet defines the d3d11va_vld pixel format, highlighting its handling of hardware acceleration and its associated configurations necessary for rendering.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\nd3d11va_vld: [GENERIC] ctype=unknown\n  Basic desc: [le][be][hw]\n    planes=0, chroma=1:1 align=2:2\n    {}\n  AVD: name=d3d11va_vld chroma=1:1 flags=0x8 [hw]\n```\n\n----------------------------------------\n\nTITLE: Slave Mode Replacement Configuration\nDESCRIPTION: Shows the equivalent configuration for the removed slave mode, providing a migration path for applications previously using this deprecated feature.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/mplayer-changes.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n--input-file=/dev/stdin --input-terminal=no\n```\n\n----------------------------------------\n\nTITLE: Defining gbrap10be Pixel Format - Plaintext\nDESCRIPTION: This snippet details the gbrap10be pixel format, highlighting endianness and rendering properties to support specific applications that require high precision and planar representation.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\ngbrap10be: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][be][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits endian_bytes=2 {} {0:16/-6} {} {}\n    1: 16bits endian_bytes=2 {} {} {0:16/-6} {}\n    2: 16bits endian_bytes=2 {0:16/-6} {} {} {}\n    3: 16bits endian_bytes=2 {} {} {} {0:16/-6}\n  AVD: name=gbrap10be chroma=0:0 flags=0xb1 [be][planar][rgb][alpha]\n    0: p=2  st=2  o=0  sh=0  d=10\n    1: p=0  st=2  o=0  sh=0  d=10\n    2: p=1  st=2  o=0  sh=0  d=10\n    3: p=3  st=2  o=0  sh=0  d=10\n```\n\n----------------------------------------\n\nTITLE: Defining yuva444pf Video Format Attributes\nDESCRIPTION: This snippet defines the attributes for the yuva444pf video format, including alignment and output options. It sets alignment to 1:1 and specifies various output format flags with unknown attributes.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nyuva444pf   = align=1:1 ov=yuva444p, ov_f=yuva444pf, v_f=yuva444pf, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Defining gbrap10 Pixel Format - Plaintext\nDESCRIPTION: This snippet describes the gbrap10 pixel format, providing details for 10-bit precision in planar RGB pixel representation, targeting higher visual fidelity.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\ngbrap10: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][bb][a][rgb][le][uint]\n    planes=4, chroma=0:0 align=1:1\n    {16/[0:0] 16/[0:0] 16/[0:0] 16/[0:0] }\n    0: 16bits {} {0:16/-6} {} {}\n    1: 16bits {} {} {0:16/-6} {}\n    2: 16bits {0:16/-6} {} {} {}\n    3: 16bits {} {} {} {0:16/-6}\n  Regular: planes=4 compbytes=2 bitpad=-6 chroma=1x1 ctype=uint\n    0: {2}\n    1: {3}\n    2: {1}\n    3: {4}\n  AVD: name=gbrap10le chroma=0:0 flags=0xb0 [planar][rgb][alpha]\n    0: p=2  st=2  o=0  sh=0  d=10\n    1: p=0  st=2  o=0  sh=0  d=10\n    2: p=1  st=2  o=0  sh=0  d=10\n    3: p=3  st=2  o=0  sh=0  d=10\n```\n\n----------------------------------------\n\nTITLE: Defining yuvj440p Video Format Attributes\nDESCRIPTION: This snippet defines the yuvj440p video format, stating that it has no specific attributes or processing options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nyuvj440p    = no\n```\n\n----------------------------------------\n\nTITLE: Configuring YUV Video Format Properties for MPV Player\nDESCRIPTION: Defines properties for different YUV video formats including alignment, overlay formats, and alpha channel settings. This configuration is likely used by MPV to properly handle and process various video formats.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/draw_bmp.txt#2025-04-21_snippet_2\n\nLANGUAGE: config\nCODE:\n```\nyuvj411p    = no\nyuvj422p    = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyuvj440p    = no\nyuyv422     = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\nyvyu422     = align=2:1 ov=yuva422p, ov_f=yuva422pf, v_f=yuv422pf, a=gray, ca=gray, ca_f=grayf32\n```\n\n----------------------------------------\n\nTITLE: Defining bgr8 Pixel Format - Plaintext\nDESCRIPTION: This snippet defines the bgr8 pixel format, describing its attributes, including its basic description, alignment, and AVD settings. This format is essential for ensuring compatibility with specific rendering scenarios.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nbgr8: [GENERIC] fcsp=rgb ctype=uint\n  Basic desc: [ba][rgb][le][be][uint]\n    planes=1, chroma=0:0 align=1:1\n    {8/[0:0] }\n    0: 8bits {0:3} {3:3} {6:2} {}\n  AVD: name=bgr8 chroma=0:0 flags=0x20 [rgb]\n    0: p=0  st=1  o=0  sh=0  d=3\n    1: p=0  st=1  o=0  sh=3  d=3\n    2: p=0  st=1  o=0  sh=6  d=2\n```\n\n----------------------------------------\n\nTITLE: Defining YUV420P Format in Config\nDESCRIPTION: Specifies the YUV420P format with 8-bit depth, 4:2:0 chroma subsampling, and planar configuration. It includes both regular and AVD (Audio Video Decode) representations.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg6/img_formats.txt#2025-04-21_snippet_39\n\nLANGUAGE: config\nCODE:\n```\nyuva420p: [GENERIC] ctype=uint\n  Basic desc: [ba][bb][a][yuvp][yuv][le][be][uint]\n    planes=4, chroma=1:1 align=2:2\n    {8/[0:0] 8/[1:1] 8/[1:1] 8/[0:0] }\n    0: 8bits {0:8} {} {} {}\n    1: 8bits {} {0:8} {} {}\n    2: 8bits {} {} {0:8} {}\n    3: 8bits {} {} {} {0:8}\n  Regular: planes=4 compbytes=1 bitpad=0 chroma=2x2 ctype=uint\n    0: {1}\n    1: {2}\n    2: {3}\n    3: {4}\n  AVD: name=yuva420p chroma=1:1 flags=0x90 [planar][alpha]\n    0: p=0  st=1  o=0  sh=0  d=8\n    1: p=1  st=1  o=0  sh=0  d=8\n    2: p=2  st=1  o=0  sh=0  d=8\n    3: p=3  st=1  o=0  sh=0  d=8\n```\n\n----------------------------------------\n\nTITLE: Defining Pixel Formats - nv12 - Miscellaneous\nDESCRIPTION: Defines the nv12 pixel format which utilizes a specific alignment and threshold for video formats. Including properties such as overflow and chroma subsampling, this is widely used in video compression.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_4\n\nLANGUAGE: text/plain\nCODE:\n```\nnv12        = align=2:2 ov=yuva420p, ov_f=yuva420pf, v_f=yuv420pf, a=gray, ca=gray, ca_f=grayf32\n```\n\n----------------------------------------\n\nTITLE: Defining Pixel Formats - gray - Miscellaneous\nDESCRIPTION: Defines the gray pixel format, emphasizing its alignment and overflow characteristics. This format is essential for grayscale video processing applications.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/test/ref/ffmpeg7/draw_bmp.txt#2025-04-21_snippet_3\n\nLANGUAGE: text/plain\nCODE:\n```\ngray        = align=1:1 ov=yap8   , ov_f=grayaf32, v_f=grayf32, a=unknown, ca=unknown, ca_f=unknown\n```\n\n----------------------------------------\n\nTITLE: Audio Frame Dropping Filter in MPV Player\nDESCRIPTION: This snippet describes the `drop` filter which is used to manage audio frames in response to playback speed. It operates exclusively on full audio frames, particularly to support SPDIF audio passthrough, and is associated with the `--video-sync=display-adrop` option, although its use is discouraged due to low quality results.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/af.rst#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n``drop``\n    This filter drops or repeats audio frames to adapt to playback speed. It\n    always operates on full audio frames, because it was made to handle SPDIF\n    (compressed audio passthrough). This is used automatically if the\n    ``--video-sync=display-adrop`` option is used. Do not use this filter (or\n    the given option); they are extremely low quality.\n```\n\n----------------------------------------\n\nTITLE: Enabling Encoding Mode and Specifying Output Filename\nDESCRIPTION: This snippet describes how to enable encoding mode by specifying the output filename. It is essential for users who want to encode their media files into different formats.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--o=<filename>\n```\n\n----------------------------------------\n\nTITLE: Example: Specifying H.264 Encoding\nDESCRIPTION: This example illustrates how to select H.264 encoding with a defined variable bitrate quality factor, showcasing advanced video encoding options.\nSOURCE: https://github.com/mpv-player/mpv/blob/master/DOCS/man/encode.rst#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n--ovc=libx264 --ovcopts=crf=23\n```"
  }
]
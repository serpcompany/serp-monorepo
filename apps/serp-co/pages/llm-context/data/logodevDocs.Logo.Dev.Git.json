[
  {
    "owner": "logo-dev",
    "repo": "docs.logo.dev.git",
    "content": "TITLE: Adding Basic Logo Image in HTML\nDESCRIPTION: The simplest way to use the Logo.dev API by embedding an image with the API URL. This basic implementation fetches the logo for 'sweetgreen.com'.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/introduction.mdx#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/sweetgreen.com?token=YOUR-KEY-HERE\" />\n```\n\n----------------------------------------\n\nTITLE: Retrieving Standard Logo with Logo.dev API in HTML\nDESCRIPTION: This snippet demonstrates how to retrieve a standard logo using the Logo.dev API. The resulting image will be a 1:1 aspect ratio, 128px tall and wide, and in JPG format.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/introduction.mdx#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/shopify.com\" />\n```\n\n----------------------------------------\n\nTITLE: Making a Basic Brand Search API Request with cURL\nDESCRIPTION: Basic example of how to use the Brand Search API with cURL. Requires your secret key from the Logo.dev dashboard (formatted as 'sk_...') and a search query parameter.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/brand-search/introduction.mdx#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Authorization: Bearer: YOUR_SECRET_KEY_HERE\" \"https://api.logo.dev/search?q=QUERY\"\n```\n\n----------------------------------------\n\nTITLE: Making a Describe API Request using cURL in Bash\nDESCRIPTION: This snippet demonstrates how to make a request to the Describe API using cURL. It requires the user's secret key for authentication.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/describe/introduction.mdx#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Authorization: Bearer: YOUR_SECRET_KEY_HERE\" \"http://api.logo.dev/describe/domain\"\n```\n\n----------------------------------------\n\nTITLE: Using Logo API with Parameters for Size and Format\nDESCRIPTION: Example of how to use the Logo.dev API with additional parameters for customization. This implementation specifies the token, size, and format for the Microsoft logo.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/introduction.mdx#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://img.logo.dev/microsoft.com?token=YOUR-KEY-HERE&size=200&format=png\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using API Token with Logo.dev API in HTML\nDESCRIPTION: This example shows how to include an API token when using the Logo.dev endpoint publicly. The token is required to avoid rate-limiting issues.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/introduction.mdx#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/shopify.com?token=YOUR-KEY-HERE\" />\n```\n\n----------------------------------------\n\nTITLE: Using Logo.dev's Logo API Endpoint in HTML\nDESCRIPTION: Implementation of Logo.dev's Logo API to display a company logo by domain. This replaces the Clearbit implementation and requires an API token.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/clearbit.mdx#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/:domain?token=YOUR-KEY-HERE\" />\n```\n\n----------------------------------------\n\nTITLE: Brand Search API Response Format\nDESCRIPTION: Example JSON response from the Brand Search API, showing the array of results with brand names and corresponding domains. The API returns up to 10 results sorted by popularity metrics.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/brand-search/introduction.mdx#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n\t{\n\t\t\"name\":\"sweetgreen\"\n\t\t\"domain\":\"sweetgreen.com\"\n\t},\n\t{\n\t\t\"name\":\"Sweet Greens Healthy Restaurant\"\n\t\t\"domain\":\"sweetgreens.ae\"\n\t},\n\t{\n\t\t\"name\":\"Sweet Green Hotel\",\n\t\t\"domain\":\"sweetgreenhotel.com\"\n\t\t},\n\t{\n\t\t\"name\":\"Sweet Green Apothecary\",\n\t\t\"domain\":\"sweetgreenapothecary.com\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Response from Describe API for 'sweetgreen.com'\nDESCRIPTION: This snippet illustrates the expected JSON response format from the Describe API. It includes brand information such as name, domain, description, social media links, logo URL, blurhash, and prominent colors.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/describe/introduction.mdx#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"sweetgreen\",\n  \"domain\": \"sweetgreen.com\",\n  \"description\": \"Simple, seasonal, healthy salads and grain bowls made in-house from scratch, using whole produce delivered that morning.\",\n  \"indexed_at\": \"2025-03-10T11:36:23.885238001Z\",\n  \"socials\": {\n    \"facebook\": \"http://facebook.com/sweetgreen\",\n    \"instagram\": \"https://www.instagram.com/sweetgreen/\",\n    \"twitter\": \"https://x.com/sweetgreen\"\n  },\n  \"logo\": \"https://img.logo.dev/sweetgreen.com?token=live_6a1a28fd-6420-4492-aeb0-b297461d9de2\",\n  \"blurhash\": \"UJPanPxr?Vj[oxazj@od_FWDDoodxrodagWD\",\n  \"colors\": [\n    { \"r\": 228, \"g\": 255, \"b\": 85, \"hex\": \"#e4ff55\" },\n    { \"r\": 10, \"g\": 75, \"b\": 43, \"hex\": \"#0a4b2b\" },\n    { \"r\": 125, \"g\": 173, \"b\": 80, \"hex\": \"#7dad50\" }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving PNG Format Logo with Logo.dev API in HTML\nDESCRIPTION: This snippet demonstrates how to request a logo in PNG format instead of the default JPG. PNG format allows for transparency and may result in smaller file sizes for logos with limited color palettes.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/introduction.mdx#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/shopify.com?format=png\" />\n```\n\n----------------------------------------\n\nTITLE: Example Describe API Request for 'sweetgreen.com' using cURL in Bash\nDESCRIPTION: This snippet shows a specific example of using the Describe API to fetch information about 'sweetgreen.com'. It uses cURL to make the HTTP request with the required authorization header.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/describe/introduction.mdx#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Authorization: Bearer: YOUR_SECRET_KEY_HERE\" \"http://api.logo.dev/describe/sweetgreen.com\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Desaturated Logo with Logo.dev API in HTML\nDESCRIPTION: This example shows how to request a desaturated (greyscale) logo in PNG format. Desaturated logos are useful for landing pages when you want to normalize colors across a set of logos.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/introduction.mdx#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/shopify.com?greyscale=true&format=png\" />\n```\n\n----------------------------------------\n\nTITLE: Retrieving Retina-Quality Logo with Logo.dev API in HTML\nDESCRIPTION: This example shows how to request a retina-quality logo. The 'retina=true' parameter doubles the source image resolution while displaying at the specified size, creating sharp images on high-density displays.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/introduction.mdx#2025-04-19_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://img.logo.dev/shopify.com?size=80&retina=true\"\n  width=\"80\"\n  height=\"80\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding Stock Ticker Logo with HTML\nDESCRIPTION: Example of embedding an Etsy logo using the stock ticker API with an HTML img tag. This demonstrates the basic implementation for displaying a company logo on a webpage.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/ticker.mdx#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/ticker/etsy?token=:public_token\" />\n```\n\n----------------------------------------\n\nTITLE: Stock Ticker Logo URL Format\nDESCRIPTION: The general format for the stock ticker logo URL, showing how to structure the API call with a ticker symbol parameter and authorization token.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/ticker.mdx#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/ticker/:symbol?token=:public_token\" />\n```\n\n----------------------------------------\n\nTITLE: Direct Stock Ticker Logo URL Example\nDESCRIPTION: Example of the direct URL format for accessing the Etsy logo through the stock ticker API. This URL can be used in any context that accepts image URLs, like Excel, Slack, or email.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/ticker.mdx#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nhttps://img.logo.dev/ticker/etsy?token=:public_token\n```\n\n----------------------------------------\n\nTITLE: Direct Stock Ticker Logo URL Format\nDESCRIPTION: The general format for directly accessing company logos via URL using the stock ticker API. This format specifies where to place the ticker symbol and authorization token.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/ticker.mdx#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\nhttps://img.logo.dev/ticker/:symbol?token=:public_token\n```\n\n----------------------------------------\n\nTITLE: Google Sheets Formula for Bulk Logo Testing\nDESCRIPTION: A Google Sheets formula to test the Logo.dev API without writing code. It concatenates the base URL with a domain from cell A3 and adds format parameters.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/introduction.mdx#2025-04-19_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n=IMAGE(Concat(CONCAT(\"https://img.logo.dev/\", $A3), \"?format=png\"))\n```\n\n----------------------------------------\n\nTITLE: Required Attribution Link in HTML\nDESCRIPTION: An example attribution link that must be included on any page using the Logo.dev API. This is required for free accounts and should be legible and indexable.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/introduction.mdx#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://logo.dev\" alt=\"Logo API\">Logos provided by Logo.dev</a>\n```\n\n----------------------------------------\n\nTITLE: Defining API Parameters in Markdown\nDESCRIPTION: This snippet defines the available parameters for the logo image API endpoint using custom Markdown components. It includes details on authentication, image properties, and fallback options.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/get.mdx#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<ParamField path=\"token\" type=\"string\" required>\n  Your API authentication token. This must be associated with a whitelisted\n  domain to access the API.\n</ParamField>\n\n<ParamField path=\"size\" type=\"integer\" default=\"128\">\n  The desired width and height of the logo in pixels. The image will maintain\n  its aspect ratio.\n</ParamField>\n\n<ParamField path=\"format\" type=\"string\" default=\"jpg\">\n  The image format to return.\n  <Expandable title=\"formats\">\n    <ResponseField name=\"jpg\">\n      Smaller file size without transparency\n    </ResponseField>\n    <ResponseField name=\"png\">\n      Highest quality with transparency support\n    </ResponseField>\n    <ResponseField name=\"webp\">\n      Modern format with optimal compression\n    </ResponseField>\n  </Expandable>\n</ParamField>\n\n<ParamField path=\"greyscale\" type=\"boolean\" default=\"false\">\n  Returns a black and white version of the logo.\n</ParamField>\n\n<ParamField path=\"retina\" type=\"boolean\" default=\"false\">\n  Returns a high-density image at 2x the requested size for sharp display on\n  retina screens.\n</ParamField>\n\n<ParamField path=\"fallback\" type=\"string\" default=\"monogram\">\n  Returns a fallback image if the logo is not found.\n  <Expandable title=\"options\">\n    <ResponseField name=\"monogram\">\n      Generates a monogram from the first letter of the domain\n    </ResponseField>\n    <ResponseField name=\"404\">\n      Returns a 404 error instead of an image\n    </ResponseField>\n  </Expandable>\n</ParamField>\n```\n\n----------------------------------------\n\nTITLE: Logo.dev API with Optional Parameters in HTML\nDESCRIPTION: Example of using Logo.dev's API with size and greyscale parameters plus the required token. This shows how to migrate parameter usage from Clearbit to Logo.dev.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/clearbit.mdx#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img\n  src=\"https://img.logo.dev/segment.com?size=200&greyscale=true&token=YOUR-KEY-HERE\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Logo.dev Attribution Link in HTML\nDESCRIPTION: HTML code for providing attribution to Logo.dev as required by their terms of service for the free Logo API usage. Includes an alt attribute for accessibility.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/clearbit.mdx#2025-04-19_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://logo.dev\" alt=\"Logo API\">Logos provided by Logo.dev</a>\n```\n\n----------------------------------------\n\nTITLE: Example Brand Search API Request for 'sweetgreen'\nDESCRIPTION: Example of searching for domains related to the brand 'sweetgreen' using the Logo.dev API. This demonstrates how to structure the API request using cURL with proper authorization.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/brand-search/introduction.mdx#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Authorization: Bearer: YOUR_SECRET_KEY_HERE\" \"https://api.logo.dev/search?q=sweetgreen\"\n```\n\n----------------------------------------\n\nTITLE: Using Clearbit's Logo API Endpoint in HTML\nDESCRIPTION: Basic implementation of Clearbit's Logo API to display a company logo by domain. This is the original code that needs to be replaced during migration.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/clearbit.mdx#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://logo.clearbit.com/:domain\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Mintlify CLI\nDESCRIPTION: Command to install the Mintlify CLI globally via npm. This is required for local development and preview of documentation changes.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g mintlify\n```\n\n----------------------------------------\n\nTITLE: Running Mintlify Dev Server\nDESCRIPTION: Command to start the Mintlify development server at the root of your documentation where the mint.json configuration file is located. This allows for local preview of documentation changes.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmintlify dev\n```\n\n----------------------------------------\n\nTITLE: Resizing Logo with Logo.dev API in HTML\nDESCRIPTION: This snippet demonstrates how to resize a logo using the 'size' parameter. The API can resize to any valid integer, but it's recommended to stay under 600px for raster images like JPG and PNG.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/logo-images/introduction.mdx#2025-04-19_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://img.logo.dev/shopify.com?size=80\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Mintlify CLI\nDESCRIPTION: Command to install the Mintlify CLI globally using npm for local documentation preview.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/quickstart.mdx#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g mintlify\n```\n\n----------------------------------------\n\nTITLE: Running Mintlify Development Server\nDESCRIPTION: Command to start the Mintlify development server locally at the root of your documentation where mint.json is located.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/quickstart.mdx#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmintlify dev\n```\n\n----------------------------------------\n\nTITLE: Referencing the Required mint.json Configuration File for Mintlify\nDESCRIPTION: Every Mintlify documentation site requires a mint.json file in the root directory that contains core configuration settings. This file controls the appearance and behavior of the documentation site.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/settings.mdx#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nmint.json\n```\n\n----------------------------------------\n\nTITLE: Clearbit Logo API with Optional Parameters in HTML\nDESCRIPTION: Example of using Clearbit's Logo API with size and greyscale parameters. This demonstrates how parameters were passed in the original implementation.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/clearbit.mdx#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://logo.clearbit.com/segment.com?size=200&greyscale=true\" />\n```\n\n----------------------------------------\n\nTITLE: Example JSON Configuration for Footer Social Media Links\nDESCRIPTION: Example showing how to configure social media links in the footer of a Mintlify documentation site, with Twitter and website URLs provided.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/settings.mdx#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"twitter\": \"https://twitter.com/mintlify\",\n  \"website\": \"https://mintlify.com\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dark Mode Only Settings in JSON\nDESCRIPTION: JSON configuration to force dark mode and hide the mode toggle switch. This setting ensures the documentation site always displays in dark mode without giving users the option to switch.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/settings.mdx#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"modeToggle\": {\n  \"default\": \"dark\",\n  \"isHidden\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Navigation Groups in Mintlify\nDESCRIPTION: An advanced navigation configuration example demonstrating how to create nested navigation groups. This allows for organizing content hierarchically with sub-sections in the navigation menu.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/navigation.mdx#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"navigation\": [\n    {\n        \"group\": \"Getting Started\",\n        \"pages\": [\n            \"quickstart\",\n            {\n                \"group\": \"Nested Reference Pages\",\n                \"pages\": [\"nested-reference-page\"]\n            }\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Importing and Using a Custom Snippet in MDX\nDESCRIPTION: Shows how to import a custom snippet into a destination MDX file and use it with props. This example imports 'MySnippet' and passes the 'word' prop to it.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/reusable-snippets.mdx#2025-04-19_snippet_1\n\nLANGUAGE: mdx\nCODE:\n```\n---\ntitle: My title\ndescription: My Description\n---\n\nimport MySnippet from '/snippets/path/to/my-snippet.mdx';\n\n## Header\n\nLorem impsum dolor sit amet.\n\n<MySnippet word=\"bananas\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Navigation with Folder Structure in Mintlify\nDESCRIPTION: Example showing how to reference pages inside folders in the navigation configuration. This allows for organizing content in directories while maintaining proper navigation references.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/navigation.mdx#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"navigation\": [\n    {\n        \"group\": \"Group Name\",\n        \"pages\": [\"your-folder/your-page\"]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Section Headers with Markdown Titles\nDESCRIPTION: Demonstrates how to create section headers using level-2 markdown headings, which are best used for main section headers.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/markdown.mdx#2025-04-19_snippet_0\n\nLANGUAGE: md\nCODE:\n```\n## Titles\n```\n\n----------------------------------------\n\nTITLE: Formatting Blockquotes in Markdown - Single Line Example\nDESCRIPTION: Demonstrates how to create a single-line blockquote by adding a '>' character in front of a paragraph.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/markdown.mdx#2025-04-19_snippet_2\n\nLANGUAGE: md\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n```\n\n----------------------------------------\n\nTITLE: Integrating LaTeX Formulas in Markdown with the Latex Component\nDESCRIPTION: Demonstrates how to include mathematical formulas using the Latex component, which enables LaTeX rendering in Mintlify documentation.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/markdown.mdx#2025-04-19_snippet_4\n\nLANGUAGE: md\nCODE:\n```\n<Latex>8 x (vk x H1 - H2) = (0,1)</Latex>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Inline Code Formatting in Markdown\nDESCRIPTION: Shows how to format inline code using backticks in Markdown. This is useful for highlighting short code snippets or commands within regular text.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/code.mdx#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nTo denote a `word` or `phrase` as code, enclose it in backticks (`).\n```\n\n----------------------------------------\n\nTITLE: Example JSON Configuration for OpenAPI URLs\nDESCRIPTION: Examples showing how to specify OpenAPI documentation URLs in Mintlify configuration, including absolute URLs, relative paths, and multiple sources.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/settings.mdx#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"openapi\": \"https://example.com/openapi.json\"\n```\n\nLANGUAGE: json\nCODE:\n```\n\"openapi\": \"/openapi.json\"\n```\n\nLANGUAGE: json\nCODE:\n```\n\"openapi\": [\"https://example.com/openapi1.json\", \"/openapi2.json\", \"/openapi3.json\"]\n```\n\n----------------------------------------\n\nTITLE: Creating a Java Hello World Program\nDESCRIPTION: Demonstrates a basic Java program that prints 'Hello, World!' to the console. This example also shows how to format a code block with syntax highlighting in Markdown.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/code.mdx#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nclass HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Code Blocks with Language Specification in Markdown\nDESCRIPTION: Illustrates how to create a fenced code block in Markdown with language specification for syntax highlighting. This example shows the Markdown syntax for the Java code block above.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/code.mdx#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```java HelloWorld.java\nclass HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Images Using Markdown Syntax\nDESCRIPTION: Demonstrates how to insert images using standard Markdown syntax. The format includes an alt text (title) and the image path.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/images.mdx#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![title](/path/image.jpg)\n```\n\n----------------------------------------\n\nTITLE: Configuring Regular Navigation in Mintlify\nDESCRIPTION: A simple navigation configuration example that shows how to define a group with pages in mint.json. This creates a basic navigation menu with a single group containing one page.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/navigation.mdx#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"navigation\": [\n    {\n        \"group\": \"Getting Started\",\n        \"pages\": [\"quickstart\"]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Videos with iFrames\nDESCRIPTION: Demonstrates how to embed a YouTube video in documentation using an iframe HTML element.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/images.mdx#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<iframe src=\"https://www.youtube.com/embed/4KzFe50RQkQ\"> </iframe>\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Reusable Snippet in MDX\nDESCRIPTION: Demonstrates how to create a simple reusable snippet with a variable in an MDX file. The snippet includes a placeholder for a word that can be filled in via props when imported.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/reusable-snippets.mdx#2025-04-19_snippet_0\n\nLANGUAGE: mdx\nCODE:\n```\nHello world! This is my content I want to reuse across pages. My keyword of the day is {word}.\n```\n\n----------------------------------------\n\nTITLE: Exporting Reusable Variables in MDX\nDESCRIPTION: Demonstrates how to export variables from an MDX snippet file. This example exports a string and an object that can be imported and used in other files.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/reusable-snippets.mdx#2025-04-19_snippet_2\n\nLANGUAGE: mdx\nCODE:\n```\nexport const myName = 'my name';\n\nexport const myObject = { fruit: 'strawberries' };\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Reusable Variables in MDX\nDESCRIPTION: Shows how to import and use variables exported from a snippet file in a destination MDX file. This example imports 'myName' and 'myObject' and uses them in the content.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/reusable-snippets.mdx#2025-04-19_snippet_3\n\nLANGUAGE: mdx\nCODE:\n```\n---\ntitle: My title\ndescription: My Description\n---\n\nimport { myName, myObject } from '/snippets/path/to/custom-variables.mdx';\n\nHello, my name is {myName} and I like {myObject.fruit}.\n```\n\n----------------------------------------\n\nTITLE: Creating a Reusable Component in MDX/JSX\nDESCRIPTION: Demonstrates how to create a reusable component in an MDX file using JSX syntax. This component takes a 'title' prop and renders it along with some static content.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/reusable-snippets.mdx#2025-04-19_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nexport const MyComponent = ({ title }) => (\n  <div>\n    <h1>{title}</h1>\n    <p>... snippet content ...</p>\n  </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Light Mode Only Settings in JSON\nDESCRIPTION: JSON configuration to force light mode and hide the mode toggle switch. This setting ensures the documentation site always displays in light mode without giving users the option to switch.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/settings.mdx#2025-04-19_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"modeToggle\": {\n  \"default\": \"light\",\n  \"isHidden\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using a Reusable Component in MDX\nDESCRIPTION: Shows how to import a reusable component from a snippet file and use it in a destination MDX file. This example imports 'MyComponent' and passes a title prop to it.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/reusable-snippets.mdx#2025-04-19_snippet_5\n\nLANGUAGE: mdx\nCODE:\n```\n---\ntitle: My title\ndescription: My Description\n---\n\nimport { MyComponent } from '/snippets/custom-component.mdx';\n\nLorem ipsum dolor sit amet.\n\n<MyComponent title={'Custom title'} />\n```\n\n----------------------------------------\n\nTITLE: Creating Titles in Markdown\nDESCRIPTION: Demonstrates how to create section headers using double hash symbols.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/ritekit.mdx#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Titles\n```\n\n----------------------------------------\n\nTITLE: Creating Subtitles in Markdown\nDESCRIPTION: Shows how to create subsection headers using triple hash symbols.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/ritekit.mdx#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Subtitles\n```\n\n----------------------------------------\n\nTITLE: Creating Links in Markdown\nDESCRIPTION: Demonstrates how to create external and internal links using Markdown syntax.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/ritekit.mdx#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[link to google](https://google.com)\n[link to text](/writing-content/text)\n```\n\n----------------------------------------\n\nTITLE: Embedding LaTeX Equations with the Latex Component\nDESCRIPTION: Shows how to incorporate mathematical equations using LaTeX syntax with the custom Latex component for the documentation system.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/klavio.mdx#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<Latex>8 x (vk x H1 - H2) = (0,1)</Latex>\n```\n\n----------------------------------------\n\nTITLE: Creating Blockquotes in Markdown\nDESCRIPTION: Shows how to create single-line and multi-line blockquotes using the greater-than symbol.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/ritekit.mdx#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n>\n> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n```\n\n----------------------------------------\n\nTITLE: Integrating LaTeX in Markdown\nDESCRIPTION: Demonstrates how to include LaTeX equations in Markdown using the Latex component.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/ritekit.mdx#2025-04-19_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<Latex>8 x (vk x H1 - H2) = (0,1)</Latex>\n```\n\n----------------------------------------\n\nTITLE: Creating Section Headers in Markdown\nDESCRIPTION: Shows how to create section headers using level 2 markdown headings, which are best used for main section headers.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/klavio.mdx#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Titles\n```\n\n----------------------------------------\n\nTITLE: Inserting LaTeX Equations using Latex Component\nDESCRIPTION: Demonstrates how to include LaTeX equations in the documentation using the Latex component.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<Latex>8 x (vk x H1 - H2) = (0,1)</Latex>\n```\n\n----------------------------------------\n\nTITLE: Creating Subsection Headers in Markdown\nDESCRIPTION: Demonstrates how to create subsection headers using level 3 markdown headings, suitable for dividing content within main sections.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/klavio.mdx#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Subtitles\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-line Blockquotes in Markdown\nDESCRIPTION: Demonstrates how to create multi-line blockquotes with separate paragraphs by using the '>' character at the beginning of each line, including blank lines between paragraphs.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/klavio.mdx#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n>\n> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n```\n\n----------------------------------------\n\nTITLE: Creating Superscript and Subscript Text in HTML\nDESCRIPTION: Demonstrates how to create superscript and subscript text using HTML tags within markdown content.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<sup>superscript</sup>\n<sub>subscript</sub>\n```\n\n----------------------------------------\n\nTITLE: Clearbit Attribution Link in HTML\nDESCRIPTION: HTML code for providing attribution to Clearbit as required by their terms of service for the free Logo API usage.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/clearbit.mdx#2025-04-19_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://logo.clearbit.com\">Logos provided by Clearbit</a>\n```\n\n----------------------------------------\n\nTITLE: Adding Images Using HTML Embeds\nDESCRIPTION: Shows how to insert images using HTML tags for more customization options, including setting image height.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/images.mdx#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img height=\"200\" src=\"/path/image.jpg\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Links in Markdown\nDESCRIPTION: Shows how to create links in markdown, including external links and internal links to other pages in the documentation.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[link to google](https://google.com)\n[link to text](/writing-content/text)\n```\n\n----------------------------------------\n\nTITLE: Creating Titles in Markdown\nDESCRIPTION: Demonstrates how to create section headers using markdown syntax. This is best used for main section headers in the documentation.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Titles\n```\n\n----------------------------------------\n\nTITLE: Creating Subsection Headers with Markdown Subtitles\nDESCRIPTION: Shows how to create subsection headers using level-3 markdown headings, which are best used for subsection headers.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/markdown.mdx#2025-04-19_snippet_1\n\nLANGUAGE: md\nCODE:\n```\n### Subtitles\n```\n\n----------------------------------------\n\nTITLE: Text Formatting Examples in Markdown\nDESCRIPTION: Illustrates various text formatting options including bold, italic, and strikethrough.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/ritekit.mdx#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n**bold**\n_italic_\n~strikethrough~\n**_bold and italic_**\n```\n\n----------------------------------------\n\nTITLE: Text Formatting in Markdown\nDESCRIPTION: Illustrates various text formatting options in markdown, including bold, italic, and strikethrough styles. It also shows how to combine these styles.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n**bold**\n_italic_\n~strikethrough~\n**_bold and italic_**\n```\n\n----------------------------------------\n\nTITLE: Formatting Blockquotes in Markdown - Multi-Line Example\nDESCRIPTION: Shows how to create a multi-line blockquote using the '>' character at the beginning of each paragraph, with an empty '>' line separating paragraphs.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/essentials/markdown.mdx#2025-04-19_snippet_3\n\nLANGUAGE: md\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n>\n> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-line Blockquotes in Markdown\nDESCRIPTION: Shows how to create multi-line blockquotes using markdown syntax, with each line starting with a '>' character.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n>\n> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n```\n\n----------------------------------------\n\nTITLE: Creating Subtitles in Markdown\nDESCRIPTION: Shows how to create subsection headers using markdown syntax. This is best used for subsection headers in the documentation.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Subtitles\n```\n\n----------------------------------------\n\nTITLE: Creating Single-line Blockquotes in Markdown\nDESCRIPTION: Shows how to create a single-line blockquote by adding the '>' character before a paragraph, which is useful for highlighting important statements or quotes.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/klavio.mdx#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n```\n\n----------------------------------------\n\nTITLE: Creating Single-line Blockquotes in Markdown\nDESCRIPTION: Demonstrates how to create a single-line blockquote using markdown syntax.\nSOURCE: https://github.com/logo-dev/docs.logo.dev.git/blob/main/migrations/brandfetch.mdx#2025-04-19_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n```"
  }
]
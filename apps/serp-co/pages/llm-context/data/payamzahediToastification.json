[
  {
    "owner": "payam-zahedi",
    "repo": "toastification",
    "content": "TITLE: Basic Toast Notification Implementation\nDESCRIPTION: Simple example of displaying a toast notification with basic configuration\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.show(\n  context: context, // optional if you use ToastificationWrapper\n  title: Text('Hello, world!'),\n  autoCloseDuration: const Duration(seconds: 5),\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing ToastificationWrapper\nDESCRIPTION: Setup for context-free toast notifications by wrapping MaterialApp with ToastificationWrapper\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nreturn ToastificationWrapper(\n  child: MaterialApp(),\n);\n```\n\n----------------------------------------\n\nTITLE: Advanced Toast Configuration\nDESCRIPTION: Comprehensive example showing all available customization options for toast notifications\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.show(\n  context: context, // optional if you use ToastificationWrapper\n  type: ToastificationType.success,\n  style: ToastificationStyle.flat,\n  autoCloseDuration: const Duration(seconds: 5),\n  title: Text('Hello, World!'),\n  // you can also use RichText widget for title and description parameters\n  description: RichText(text: const TextSpan(text: 'This is a sample toast message. ')),\n  alignment: Alignment.topRight,\n  direction: TextDirection.ltr,\n  animationDuration: const Duration(milliseconds: 300),\n  animationBuilder: (context, animation, alignment, child) {\n    return FadeTransition(\n      turns: animation,\n      child: child,\n    );\n  },\n  icon: const Icon(Icons.check),\n  showIcon: true, // show or hide the icon\n  primaryColor: Colors.green,\n  backgroundColor: Colors.white,\n  foregroundColor: Colors.black,\n  padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 16),\n  margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\n  borderRadius: BorderRadius.circular(12),\n  boxShadow: const [\n    BoxShadow(\n      color: Color(0x07000000),\n      blurRadius: 16,\n      offset: Offset(0, 16),\n      spreadRadius: 0,\n    )\n  ],\n  showProgressBar: true,\n  closeButton: ToastCloseButton(\n    showType: CloseButtonShowType.onHover,\n    buttonBuilder: (context, onClose) {\n      return OutlinedButton.icon(\n        onPressed: onClose,\n        icon: const Icon(Icons.close, size: 20),\n        label: const Text('Close'),\n      );\n    },\n  ),\n  closeOnClick: false,\n  pauseOnHover: true,\n  dragToClose: true,\n  applyBlurEffect: true,\n  callbacks: ToastificationCallbacks(\n    onTap: (toastItem) => print('Toast ${toastItem.id} tapped'),\n    onCloseButtonTap: (toastItem) => print('Toast ${toastItem.id} close button tapped'),\n    onAutoCompleteCompleted: (toastItem) => print('Toast ${toastItem.id} auto complete completed'),\n    onDismissed: (toastItem) => print('Toast ${toastItem.id} dismissed'),\n  ),\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Global Toastification Configuration for an Entire Flutter App\nDESCRIPTION: Demonstrates how to apply global configuration for toast notifications across an entire application by using the ToastificationConfigProvider in the MaterialApp's builder parameter.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_11\n\nLANGUAGE: dart\nCODE:\n```\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Toastification',\n      builder: (context, child) {\n        return ToastificationConfigProvider(\n          config: const ToastificationConfig(\n            margin: EdgeInsets.fromLTRB(0, 16, 0, 110),\n            alignment: Alignment.center,\n            itemWidth: 440,\n            animationDuration: Duration(milliseconds: 500),\n          ),\n          child: child!,\n        );\n      },\n    );\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Toast Implementation\nDESCRIPTION: Example of creating a fully customized toast notification with custom layout and styling\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.showCustom(\n  context: context, // optional if you use ToastificationWrapper\n  autoCloseDuration: const Duration(seconds: 5),\n  alignment: Alignment.topRight,\n  builder: (BuildContext context, ToastificationItem holder) {\n    return Container(\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(8),\n        color: Colors.blue,\n      ),\n      padding: const EdgeInsets.all(16),\n      margin: const EdgeInsets.all(8),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          const Text('Custom Toast',\n              style: TextStyle(\n                  color: Colors.white, fontWeight: FontWeight.bold)),\n          const SizedBox(height: 8),\n          const Text('This is a custom toast message!',\n              style: TextStyle(color: Colors.white)),\n          const SizedBox(height: 16),\n          Row(\n            children: [\n              ElevatedButton(\n                onPressed: () {\n                  // Perform an action when the button is pressed\n                },\n                child: const Text('Do Something'),\n              ),\n            ],\n          ),\n        ],\n      ),\n    );\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Dismissing a Specific Toast Notification in Flutter\nDESCRIPTION: Shows how to dismiss a specific toast notification by reference after displaying it. This code first shows a toast with a 5-second auto-close duration, then dismisses it manually.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_14\n\nLANGUAGE: dart\nCODE:\n```\nfinal notification = toastification.show(\n  context: context,\n  title: Text('Hello'),\n  autoCloseDuration: const Duration(seconds: 5),\n);\n\ntoastification.dismiss(notification);\n```\n\n----------------------------------------\n\nTITLE: Showing a Toast with NavigatorKey in Flutter\nDESCRIPTION: Shows how to display a toast notification using the overlayState from a NavigatorKey instead of a BuildContext. Includes a text title and auto-close duration.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.show(\n  overlayState: navigatorKey.currentState?.overlay,\n  autoCloseDuration: const Duration(seconds: 5),\n  title: Text('Hello, World!'),\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Toast Animations in Flutter\nDESCRIPTION: Shows how to customize the toast animation by providing an animation duration and a custom animation builder. This example uses a rotation transition for the toast notification.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_10\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.show(\n  context: context,\n  title: Text('Hello, world!'),\n  // .... Other parameters\n  animationDuration: const Duration(milliseconds: 300),\n  animationBuilder: (context, animation, alignment, child) {\n    return RotationTransition(\n      turns: animation,\n      child: child,\n    );\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Dismissing All Toast Notifications in Flutter\nDESCRIPTION: Shows how to dismiss all active toast notifications at once using the dismissAll method. The delayForAnimation parameter controls whether to wait for animation completion before removal.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_16\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.dismissAll(delayForAnimation: true);\n```\n\n----------------------------------------\n\nTITLE: Assigning GlobalNavigatorKey to MaterialApp in Flutter\nDESCRIPTION: Demonstrates how to assign the GlobalNavigatorKey to a MaterialApp widget, which allows accessing the overlay state for showing toasts without context.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nMaterialApp(\n  navigatorKey: navigatorKey,\n  // ... other properties\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Page-Specific Toastification Configuration in Flutter\nDESCRIPTION: Shows how to apply toast notification configuration for a specific page by wrapping the page's widget tree with ToastificationConfigProvider and providing custom configuration options.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_12\n\nLANGUAGE: dart\nCODE:\n```\nclass HomePage extends StatelessWidget {\n  const HomePage({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return const ToastificationConfigProvider(\n      config: ToastificationConfig(\n        margin: EdgeInsets.fromLTRB(0, 16, 0, 110),\n        alignment: Alignment.center,\n        itemWidth: 440,\n        animationDuration: Duration(milliseconds: 500),\n      ),\n      child: Scaffold(\n        body: HomeBody(),\n      ),\n    );\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a GlobalNavigatorKey in Dart for Context-free Toast Display\nDESCRIPTION: Creates a GlobalNavigatorKey that can be used to show toasts without needing direct access to BuildContext. This is useful when working with frameworks like GetX.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nfinal GlobalKey<NavigatorState> globalNavigatorKey = GlobalKey<NavigatorState>();\n```\n\n----------------------------------------\n\nTITLE: Showing a Custom Toast with NavigatorKey in Flutter\nDESCRIPTION: Demonstrates using the showCustom method with a NavigatorKey to display a custom toast widget. Requires implementing a builder function to create the custom toast UI.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_9\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.showCustom(\n  overlayState: navigatorKey.currentState?.overlay,\n  autoCloseDuration: const Duration(seconds: 5),\n  builder: (BuildContext context, ToastificationItem holder) {\n     // Your custom toast widget\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Dismissing a Toast Notification by ID in Flutter\nDESCRIPTION: Demonstrates how to dismiss a specific toast notification by its ID using the dismissById method, which is useful when you only have the ID reference available.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_15\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.dismissById('my_notification_id');\n```\n\n----------------------------------------\n\nTITLE: Installing Toastification Package Dependencies\nDESCRIPTION: YAML configuration to add Toastification package to a Flutter project's dependencies\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  toastification: latest_version\n```\n\n----------------------------------------\n\nTITLE: Dismissing the First Toast Notification in Flutter\nDESCRIPTION: Demonstrates how to dismiss only the first toast notification in the queue using the dismissFirst method from the toastification package.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_17\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.dismissFirst();\n```\n\n----------------------------------------\n\nTITLE: Dismissing the Last Toast Notification in Flutter\nDESCRIPTION: Shows how to dismiss only the most recently displayed toast notification using the dismissLast method from the toastification package.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_18\n\nLANGUAGE: dart\nCODE:\n```\ntoastification.dismissLast();\n```\n\n----------------------------------------\n\nTITLE: Finding a Toast Notification by ID in Flutter\nDESCRIPTION: Demonstrates how to find an existing toast notification by its ID using the findToastificationItem method from the toastification package.\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_13\n\nLANGUAGE: dart\nCODE:\n```\nfinal notification = toastification.findToastificationItem('my_notification_id');\n```\n\n----------------------------------------\n\nTITLE: Importing Toastification Package\nDESCRIPTION: Dart import statement to include the Toastification package in a Flutter file\nSOURCE: https://github.com/payam-zahedi/toastification/blob/main/README.md#2025-04-13_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:toastification/toastification.dart';\n```"
  }
]
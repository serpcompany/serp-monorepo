[
  {
    "owner": "reflex-dev",
    "repo": "reflex-llm-examples",
    "content": "TITLE: Pulling the DeepSeek-r1 Model with Ollama\nDESCRIPTION: Command to download and set up the DeepSeek-r1 1.5b model locally using Ollama.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_chatui/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nollama pull deepseek-r1:1.5b\n```\n\n----------------------------------------\n\nTITLE: Creating Vector Database Table for PDF Documents\nDESCRIPTION: SQL command to create a new table with a vector embedding column of dimension 768 for storing PDF document data and embeddings.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE pdf_documents_v2 (\n  id character varying PRIMARY KEY,\n  name character varying,\n  meta_data jsonb DEFAULT '{}'::jsonb,\n  filters jsonb DEFAULT '{}'::jsonb,\n  content text,\n  embedding vector(768),  -- Embedding column with 768 dimensions\n  usage jsonb DEFAULT '{}'::jsonb,\n  content_hash VARCHAR\n);\n```\n\n----------------------------------------\n\nTITLE: Downloading Llama 3.2 Model with Ollama\nDESCRIPTION: Command to download and set up the Llama 3.2 language model locally using Ollama, which is required for the application's RAG functionality.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_pdf_locally/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nollama pull llama3.2\n```\n\n----------------------------------------\n\nTITLE: Listing Python Dependencies for Reflex LLM Application\nDESCRIPTION: A comprehensive list of Python package dependencies for a Reflex-based LLM application. Includes packages for AI/ML (google-generativeai), web framework (reflex), HTML parsing (bs4), search functionality (duckduckgo-search), vector databases (qdrant-client, pgvector), PostgreSQL connection (psycopg), PDF handling (pypdf), and ORM (sqlalchemy).\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nagno\ngoogle-generativeai\nreflex\nbs4\nduckduckgo-search\nqdrant-client\npgvector\npsycopg[binary]\npypdf\nsqlalchemy\n```\n\n----------------------------------------\n\nTITLE: Setting Jina API Key as Environment Variable\nDESCRIPTION: Command to set the Jina API key as an environment variable. This key is required for fetching and extracting webpage content using Jina's services.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport JINA_API_KEY=\"your-jina-api-key-here\"\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies for Reflex LLM Project\nDESCRIPTION: List of Python package dependencies required for the Reflex LLM examples project. It includes the core reflex framework, phidata version 2.7.2 for AI workflows, Google's generative AI library version 0.8.3, and the DuckDuckGo search package for web searching functionality.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_ai_agent/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nreflex\nphidata==2.7.2\ngoogle-generativeai==0.8.3\nduckduckgo-search\n```\n\n----------------------------------------\n\nTITLE: Running the Chat with Github Reflex App\nDESCRIPTION: Command to start the Reflex application, which allows users to chat with Github Readme files using the Llama 3.2 model and RAG.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_github/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Listing Python Dependencies for Reflex LLM Project\nDESCRIPTION: List of Python package dependencies required for a Reflex LLM project, including agno, reflex, and various llama-index components for LLMs, embeddings, and document processing.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/rag_with_docling/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nagno\nreflex\nllama_index\nllama-index-llms-ollama\nllama-index-embeddings-huggingface\nllama-index-readers-docling\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies with Version Specifications\nDESCRIPTION: Lists required Python packages and their specific versions needed for running a Reflex LLM project. Includes browser interaction tools, LLM integration libraries, and the Reflex framework.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nbrowser-use==0.1.27\nlangchain-ollama==0.2.2\nollama==0.4.7\nplaywright==1.49.1\nreflex==0.6.8\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application\nDESCRIPTION: Command for starting the Reflex server to run the AI News Agent application locally.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/news_agent/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies for Reflex-LLM Project\nDESCRIPTION: Specifies the Python package dependencies needed for a Reflex project that uses Ollama and LlamaIndex. The requirements include Reflex 0.6.7 or newer, Ollama version 0.4.5, and several LlamaIndex packages for embeddings and language model integration.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_rag/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nreflex>=0.6.7\nollama==0.4.5\nllama_index\nllama-index-embeddings-huggingface\nllama-index-llms-ollama\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application\nDESCRIPTION: Command to start the Reflex application after completing all the setup steps.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Reflex LLM Project\nDESCRIPTION: This requirements file lists the exact versions of Python packages needed for a Reflex LLM example project. It includes embedchain 0.1.126 for vector database functionality, Reflex 0.6.8 as the main framework, and Ollama 0.4.5 for running local language models.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_github/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nembedchain==0.1.126\nreflex==0.6.8\nollama==0.4.5\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application\nDESCRIPTION: Command to start the Reflex application which powers the browser task automation interface.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for DeepSeek-r1 Chat Application\nDESCRIPTION: Command to install the required Python dependencies from the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_chatui/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Running PgVector Docker Container\nDESCRIPTION: Docker command to set up and run the PgVector container for vector storage and retrieval, configuring database credentials and mapping ports.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d \\\n  -e POSTGRES_DB=ai \\\n  -e POSTGRES_USER=ai \\\n  -e POSTGRES_PASSWORD=ai \\\n  -e PGDATA=/var/lib/postgresql/data/pgdata \\\n  -v pgvolume:/var/lib/postgresql/data \\\n  -p 5532:5432 \\\n  --name pgvector \\\n  agnohq/pgvector:16\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Chat with Github\nDESCRIPTION: Command to install the required dependencies for the Chat with Github application using pip and the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_github/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Example Task Description for arXiv Search Automation\nDESCRIPTION: An example task description that demonstrates how to structure instructions for the automation tool to search arXiv for AI papers and summarize the results.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/README.md#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Go to https://arxiv.org\n2. Search for \"Artificial Intelligence\" or browse AI-related categories\n3. Identify the latest papers (published in the last 7 days)\n4. Summarize the title, authors, abstract, and publication date for each paper\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Excel Chat App\nDESCRIPTION: Command to install the required dependencies for the Excel chat application using pip and the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/rag_with_docling/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies for Reflex-LLM Project\nDESCRIPTION: This requirements.txt file specifies the Python packages needed for a Reflex-LLM project. It includes Reflex framework (version 0.6.7 or higher), LangChain library (without version constraint), and Ollama package (pinned to version 0.4.5).\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_chatui/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nreflex>=0.6.7\nlangchain\nollama==0.4.5\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for AI Stock Analyst Agent\nDESCRIPTION: Command to install all required Python dependencies for the application using the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/ai_stock_analyst_agent/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Listing Dependencies for Reflex with Google Generative AI\nDESCRIPTION: A requirements specification listing the core dependencies needed for a project that integrates Reflex framework with Google's Generative AI services. The file includes just the essential packages without version specifications.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nreflex\ngoogle-generativeai\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies - Bash Command\nDESCRIPTION: Command to install all required Python dependencies for the AI Medical Agent project using pip.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_medical_agent/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies\nDESCRIPTION: Lists required Python packages including Reflex framework, Google's generative AI library, web search tools, and financial data package yfinance.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/ai_stock_analyst_agent/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nagno\ngoogle-generativeai\nreflex\nduckduckgo-search\nyfinance\n```\n\n----------------------------------------\n\nTITLE: Pulling Llama 3.2 Model Using Ollama\nDESCRIPTION: Command to download and set up the Llama 3.2 model locally using Ollama. This step is necessary for running the language model in the Chat with Github application.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_github/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nollama pull llama3.2\n```\n\n----------------------------------------\n\nTITLE: Pulling the Qwen2.5 Model Using Ollama\nDESCRIPTION: Command to download and set up the Qwen2.5 language model locally via Ollama, which will be used for processing and understanding browser tasks.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nollama pull qwen2.5:latest\n```\n\n----------------------------------------\n\nTITLE: Connecting to PgVector Database\nDESCRIPTION: Command to access the PostgreSQL shell inside the PgVector container for database operations.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it pgvector psql -U ai -d ai\n```\n\n----------------------------------------\n\nTITLE: Pulling DeepSeek-r1 Model Using Ollama\nDESCRIPTION: Command to download and set up the DeepSeek-r1 1.5 billion parameter model locally using Ollama.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_rag/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nollama pull deepseek-r1:1.5b\n```\n\n----------------------------------------\n\nTITLE: Cloning the Chat with Github Repository\nDESCRIPTION: Commands to clone the GitHub repository and navigate to the project directory. This is the first step in setting up the Chat with Github application.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_github/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/chat_with_github\n```\n\n----------------------------------------\n\nTITLE: Pulling DeepSeek-r1 Model Using Ollama\nDESCRIPTION: Command to download and set up the DeepSeek-r1 model locally using Ollama, which is required for the Excel chat application.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/rag_with_docling/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nollama pull deepseek-r1:1.5b\n```\n\n----------------------------------------\n\nTITLE: Setting Up Virtual Environment\nDESCRIPTION: Commands for creating and activating a Python virtual environment. This isolates the project dependencies from the global Python installation.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/news_agent/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv venv\nsource venv/bin/activate  # On Windows, use `venv\\Scripts\\activate`\n```\n\n----------------------------------------\n\nTITLE: Pulling Llama 3.2 Model with Ollama\nDESCRIPTION: Command for downloading the Llama 3.2 language model using Ollama. This is required for the local AI processing capabilities of the application.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/news_agent/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Pull the model\nollama pull llama3.2\n```\n\n----------------------------------------\n\nTITLE: Specifying Reflex Package Version in Requirements File\nDESCRIPTION: Defines the exact version requirement for the Reflex Python package. This line would typically be included in a requirements.txt file used for installing project dependencies with pip.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/rag_app/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nreflex==0.6.6.post3\n```\n\n----------------------------------------\n\nTITLE: Setting Up Google Gemini API Key\nDESCRIPTION: Command to set the Google API key as an environment variable. This key is required for accessing the Gemini Flash 2.0 model.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_ai_agent/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport GOOGLE_API_KEY=your_api_key_here\n```\n\n----------------------------------------\n\nTITLE: Setting Google API Key for Gemini\nDESCRIPTION: Command to set the Google API Key as an environment variable for using the Gemini 2.0 Flash model.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport GOOGLE_API_KEY=\"your-api-key-here\"\n```\n\n----------------------------------------\n\nTITLE: Setting Google Gemini API Key as Environment Variable\nDESCRIPTION: Command to set the Google Gemini API key as an environment variable. This key is required for accessing Google's Gemini AI model for LLM functionality.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport GOOGLE_API_KEY=\"your-api-key-here\"\n```\n\n----------------------------------------\n\nTITLE: Setting SERPAPI API Key as Environment Variable\nDESCRIPTION: Command to set the SERPAPI API key as an environment variable. This key is required for performing Google searches programmatically.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport SERPAPI_API_KEY=\"your-serpapi-api-key-here\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up Gemini API Key for Authentication\nDESCRIPTION: Command to set the Google API Key as an environment variable to authenticate with Gemini 2.0 Flash API.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/ai_stock_analyst_agent/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport GOOGLE_API_KEY=\"your-api-key-here\"\n```\n\n----------------------------------------\n\nTITLE: Verifying PgVector Container Status\nDESCRIPTION: Command to check if the PgVector container is running properly using Docker's process list.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright for Browser Automation\nDESCRIPTION: Command to install Playwright, which is required for browser automation functionality in the application.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython -m playwright install\n```\n\n----------------------------------------\n\nTITLE: Running the Chat with PDF Application\nDESCRIPTION: Command to start the Reflex application server, which launches the Chat with PDF interface for uploading documents and asking questions.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_pdf_locally/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex App for Excel Chat\nDESCRIPTION: Command to start the Reflex application, which launches the chat interface for interacting with Excel files.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/rag_with_docling/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application\nDESCRIPTION: Command to start the Reflex server and run the application locally after setup is complete.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_ai_agent/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex PDF Chat Application\nDESCRIPTION: Command to start the Reflex application that enables chatting with PDF documents using the DeepSeek-r1 model.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_rag/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application - Bash Command\nDESCRIPTION: Command to start the Reflex application server for the AI Medical Agent.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_medical_agent/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application\nDESCRIPTION: Command to start the AI Stock Analyst Agent application using the Reflex framework.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/ai_stock_analyst_agent/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the Reflex Application\nDESCRIPTION: Command to start the Reflex application after setup is complete. This launches the web interface for the OpenDeepResearcher tool.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Running the DeepSeek-r1 Chat Application with Reflex\nDESCRIPTION: Command to start the Reflex web application for chatting with DeepSeek-r1.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_chatui/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreflex run\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install the required Python dependencies for the Agentic RAG project using pip.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all required packages for the project from the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_ai_agent/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for DeepSeek-r1 PDF Chat Application\nDESCRIPTION: Command to install all required Python dependencies for the RAG PDF chat application from the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_rag/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Browser Use Task Automation\nDESCRIPTION: Command to install the required Python dependencies listed in the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Chat with PDF\nDESCRIPTION: Command to install the required Python dependencies for the Chat with PDF application using pip and the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_pdf_locally/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command for installing all required Python packages specified in the requirements.txt file.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/news_agent/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Pip\nDESCRIPTION: Command to install all required Python dependencies from the requirements.txt file. This ensures all necessary libraries are available for the application to run.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Cloning the AI Stock Analyst Agent Repository\nDESCRIPTION: Command to clone the repository containing the AI Stock Analyst Agent application and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/ai_stock_analyst_agent/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/ai_stock_analyst_agent\n```\n\n----------------------------------------\n\nTITLE: Cloning the Multimodal AI Agent Repository\nDESCRIPTION: Commands to clone the repository and navigate to the project directory. This is the first step in setting up the application locally.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_ai_agent/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/multi_modal_ai_agent\n```\n\n----------------------------------------\n\nTITLE: Cloning the Reflex LLM Examples Repository\nDESCRIPTION: Commands to clone the GitHub repository containing the DeepSeek-r1 chat application and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_chatui/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git  \ncd reflex-llm-examples/chat_with_deepseek_r1_locally/deepseek_r1_chatui\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository for Excel Chat App\nDESCRIPTION: Commands to clone the GitHub repository containing the Excel chat application to the local machine and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/rag_with_docling/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/rag_with_docling\n```\n\n----------------------------------------\n\nTITLE: Cloning the Chat with PDF Repository\nDESCRIPTION: Commands to clone the GitHub repository containing the Chat with PDF application and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_pdf_locally/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/chat_with_pdf_locally\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository for Browser Use Task Automation\nDESCRIPTION: Commands to clone the GitHub repository containing the Browser Use Task Automation project to your local machine and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/browser_use_locally/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/browser_use_locally\n```\n\n----------------------------------------\n\nTITLE: Cloning the Reflex LLM Examples Repository\nDESCRIPTION: Command to clone the GitHub repository containing the Agentic RAG example and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/agentic_rag/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git  \ncd reflex-llm-examples/agentic_rag\n```\n\n----------------------------------------\n\nTITLE: Cloning OpenDeepResearcher Repository with Git\nDESCRIPTION: Commands to clone the repository from GitHub and navigate to the project directory. This is the first step in the setup process to get the source code locally.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/open_deep_researcher/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/open_deep_researcher\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository for DeepSeek-r1 RAG Application\nDESCRIPTION: Command to clone the reflex-llm-examples repository and navigate to the DeepSeek-r1 RAG project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/chat_with_deepseek_r1_locally/deepseek_r1_rag/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git  \ncd reflex-llm-examples/chat_with_deepseek_r1_locally/deepseek_r1_rag\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository and Navigating to Project Directory\nDESCRIPTION: Commands for cloning the GitHub repository and navigating to the news_agent directory. These commands set up the initial project workspace.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/news_agent/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/news_agent\n```\n\n----------------------------------------\n\nTITLE: Cloning Medical Agent Repository - Bash Commands\nDESCRIPTION: Commands to clone the repository containing the AI Medical Agent implementation and navigate to the project directory.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_medical_agent/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/reflex-dev/reflex-llm-examples.git\ncd reflex-llm-examples/multi_modal_medical_agent\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Virtual Environment\nDESCRIPTION: Commands to create and activate a Python virtual environment. This is recommended for isolating the project dependencies from the system Python installation.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_ai_agent/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv venv\nsource venv/bin/activate  # On Windows, use `venv\\Scripts\\activate`\n```\n\n----------------------------------------\n\nTITLE: Setting Gemini API Key - Bash Environment Variable\nDESCRIPTION: Command to set up the Google API key as an environment variable for authentication with Gemini 2.0 Flash API.\nSOURCE: https://github.com/reflex-dev/reflex-llm-examples/blob/main/multi_modal_medical_agent/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport GOOGLE_API_KEY=\"your-api-key-here\"\n```"
  }
]
[
  {
    "owner": "iamraphson",
    "repo": "react-paystack",
    "content": "TITLE: Implementing Paystack Payment with Hooks in React\nDESCRIPTION: A complete example showing how to implement Paystack payment in a React application using the usePaystackPayment hook. This implementation demonstrates how to initialize payment and handle success and close callbacks.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport logo from './logo.svg';\nimport { usePaystackPayment } from 'react-paystack';\nimport './App.css';\n  \nconst config = {\n    reference: (new Date()).getTime().toString(),\n    email: \"user@example.com\",\n    amount: 20000, //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\n    publicKey: 'pk_test_dsdfghuytfd2345678gvxxxxxxxxxx',\n};\n  \n// you can call this function anything\nconst onSuccess = (reference) => {\n  // Implementation for whatever you want to do with reference and after success call.\n  console.log(reference);\n};\n\n// you can call this function anything\nconst onClose = () => {\n  // implementation for  whatever you want to do when the Paystack dialog closed.\n  console.log('closed')\n}\n\nconst PaystackHookExample = () => {\n    const initializePayment = usePaystackPayment(config);\n    return (\n      <div>\n          <button onClick={() => {\n              initializePayment(onSuccess, onClose)\n          }}>Paystack Hooks Implementation</button>\n      </div>\n    );\n};\n  \nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <PaystackHookExample />\n    </div>\n  );\n}\n  \nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Implementing Paystack Payment with Button Component in React\nDESCRIPTION: An example showing how to implement Paystack payment using the PaystackButton component. This approach provides a pre-built button that handles the payment flow when clicked.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/README.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport logo from './logo.svg';\nimport { PaystackButton } from 'react-paystack';\nimport './App.css';\n  \nconst config = {\n  reference: (new Date()).getTime().toString(),\n  email: \"user@example.com\",\n  amount: 20000, //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\n  publicKey: 'pk_test_dsdfghuytfd2345678gvxxxxxxxxxx',\n};\n  \nfunction App() {\n  // you can call this function anything\n  const handlePaystackSuccessAction = (reference) => {\n    // Implementation for whatever you want to do with reference and after success call.\n    console.log(reference);\n  };\n\n  // you can call this function anything\n  const handlePaystackCloseAction = () => {\n    // implementation for  whatever you want to do when the Paystack dialog closed.\n    console.log('closed')\n  }\n\n  const componentProps = {\n      ...config,\n      text: 'Paystack Button Implementation',\n      onSuccess: (reference) => handlePaystackSuccessAction(reference),\n      onClose: handlePaystackCloseAction,\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <PaystackButton {...componentProps} />\n    </div>\n  );\n}\n  \nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Implementing Paystack Payment with Context Consumer in React\nDESCRIPTION: A demonstration of implementing Paystack payment using the PaystackConsumer component, which provides a render prop for accessing the initializePayment function. This approach offers more flexibility in UI customization.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/README.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport logo from './logo.svg';\nimport { PaystackConsumer } from 'react-paystack';\nimport './App.css';\n  \nconst config = {\n    reference: (new Date()).getTime().toString(),\n    email: \"user@example.com\",\n    amount: 20000, //Amount is in the country's lowest currency. E.g Kobo, so 20000 kobo = N200\n    publicKey: 'pk_test_dsdfghuytfd2345678gvxxxxxxxxxx',\n};\n  \n// you can call this function anything\nconst handleSuccess = (reference) => {\n  // Implementation for whatever you want to do with reference and after success call.\n  console.log(reference);\n};\n\n// you can call this function anything\nconst handleClose = () => {\n  // implementation for  whatever you want to do when the Paystack dialog closed.\n  console.log('closed')\n}\n\nfunction App() {\n    const componentProps = {\n        ...config,\n        text: 'Paystack Button Implementation',\n        onSuccess: (reference) => handleSuccess(reference),\n        onClose: handleClose\n    };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <PaystackConsumer {...componentProps} >\n        {({initializePayment}) => <button onClick={() => initializePayment(handleSuccess, handleClose)}>Paystack Consumer Implementation</button>}\n      </PaystackConsumer>\n    </div>\n  );\n}\n  \nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Adding Metadata to Paystack Transactions in TypeScript\nDESCRIPTION: Example showing how to include additional metadata with a Paystack transaction, such as transaction descriptions or user information. This uses TypeScript to define the configuration object.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst config = {\n   // Your required fields\n      metadata: {\n        custom_fields: [\n            {\n                display_name: 'description',\n                variable_name: 'description',\n                value: 'Funding Wallet'\n            }\n            // To pass extra metadata, add an object with the same fields as above\n        ]\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Installing react-paystack Package\nDESCRIPTION: Commands to install the react-paystack library using npm or yarn package managers.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install react-paystack --save\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add react-paystack\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with Yarn in React Project\nDESCRIPTION: Command to start the development server. Runs the app in development mode, accessible at http://localhost:3000 in the browser.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/example/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Building Production Bundle with Yarn in React Project\nDESCRIPTION: Command to build the app for production deployment. Creates optimized files in the build folder with hashed filenames.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/example/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Yarn in React Project\nDESCRIPTION: Command to launch the test runner in interactive watch mode. This allows for continuous testing while developing.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/example/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Ejecting from Create React App Configuration\nDESCRIPTION: Command to eject from the Create React App setup. This exposes all configuration files and dependencies for customization, but is irreversible.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/example/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn eject\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: Standard robots.txt configuration that allows all user agents (*) full access to the site with no disallowed paths. References robots.txt standard from robotstxt.org.\nSOURCE: https://github.com/iamraphson/react-paystack/blob/master/example/public/robots.txt#2025-04-20_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\n```"
  }
]
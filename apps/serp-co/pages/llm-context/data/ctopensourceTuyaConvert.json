[
  {
    "owner": "ct-open-source",
    "repo": "tuya-convert",
    "content": "TITLE: Starting Tuya-Convert Flashing Process\nDESCRIPTION: Shell command to initiate the Tuya-Convert flashing process, which guides the user through flashing alternative firmware.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/README.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nExecute `./start_flash.sh` and follow the instructions.\n```\n\n----------------------------------------\n\nTITLE: Building and Running Tuya-Convert with Docker Compose in Bash\nDESCRIPTION: This snippet demonstrates how to build the Tuya-Convert Docker image and run a temporary container for flashing Tuya devices. Dependencies include Docker and Docker Compose installed on a Linux host, a properly configured .env file, and the tuya-convert repository cloned locally. The command \"docker-compose build && docker-compose run --rm tuya\" builds the service and then runs the container; the container is automatically removed after the operation completes. The command must be run in the tuya-convert directory containing docker-compose.yml.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build && docker-compose run --rm tuya\n```\n\n----------------------------------------\n\nTITLE: Installing Tuya-Convert Prerequisites on Linux\nDESCRIPTION: Shell commands to clone the Tuya-Convert repository and install necessary prerequisites.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/README.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# git clone https://github.com/ct-Open-Source/tuya-convert\n# cd tuya-convert\n# ./install_prereq.sh\n```\n\n----------------------------------------\n\nTITLE: Defining WLAN, AP, and Gateway Variables for OTA Flashing - Bash\nDESCRIPTION: This Bash snippet sets three key environment variables: WLAN (the wireless interface, usually wlan0 or wlan1), AP (the Wi-Fi network name to use for flashing), and GATEWAY (the IP address for the local access point). The settings are essential for scripts orchestrating the OTA conversion process in tuya-convert, especially because the AP name is hardcoded in related flashing tools. Dependencies include a compatible Linux system, required network drivers, and appropriate script permissions. Changing AP name may break interoperability with bundled OTA-flash utilities.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/config.txt#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Please input the wlan device to be used (most of the time it is wlan0 or wlan1)\nWLAN=wlan0\n\n# Here you could change the WIFI-name but most likely most scripts won't work after\n# Because the WIFI-credentials are hardcoded in the esp8266-ota-flash-convert\nAP=vtrust-flash\nGATEWAY=10.42.42.1\n```\n\n----------------------------------------\n\nTITLE: Starting a Tuya-Convert Container with Custom Entry Point Bash Shell in Bash\nDESCRIPTION: This snippet explains how to launch the Tuya-Convert Docker container with Bash as the entry point instead of the default Tuya application. Using the \"--entrypoint\" flag with Docker Compose, the container will start an interactive shell environment for manual inspection or troubleshooting. Docker, Docker Compose, and a valid image build are required prerequisites. The container will run Bash until exited by the user.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --entrypoint bash tuya\n```\n\n----------------------------------------\n\nTITLE: Manually Rebuilding Docker Image Without Cache in Bash\nDESCRIPTION: This code shows how to force Docker Compose to rebuild the Tuya-Convert image, ignoring all cached layers. The \"--no-cache\" flag ensures that every layer is rebuilt from scratch, which can resolve issues caused by outdated dependencies. This command is intended for troubleshooting and should not be run routinely as it is time-consuming. It must be executed from the tuya-convert project directory.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build --no-cache\n```\n\n----------------------------------------\n\nTITLE: Listing Unsupported OUIs for Tuya Convert\nDESCRIPTION: This code snippet provides a list of Organizationally Unique Identifiers (OUIs) that are known to be unsupported in the Tuya Convert project. These OUIs are associated with specific manufacturers like Tuya and Beijing Winner Microelectronics. The list is updated as of January 26, 2021.\nSOURCE: https://github.com/ct-open-source/tuya-convert/blob/master/scripts/oui/nonesp.txt#_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n000D8A\n000F89\n10D561\n1869D8\n286DCD\n68572D\n708976\n807484\n84E342\nD4A651\nDC446D\nE078A3\nCC8CBF\n```"
  }
]
[
  {
    "owner": "tronprotocol",
    "repo": "tronweb",
    "content": "TITLE: Instantiating TronWeb with fullHost Configuration\nDESCRIPTION: JavaScript example showing how to create a TronWeb instance using the fullHost option with API key headers and a private key.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst tronWeb = new TronWeb({\n    fullHost: 'https://api.trongrid.io',\n    headers: { \"TRON-PRO-API-KEY\": 'your api key' },\n    privateKey: 'your private key'\n})\n```\n\n----------------------------------------\n\nTITLE: Instantiating TronWeb with Mixed Configuration\nDESCRIPTION: JavaScript example showing how to create a TronWeb instance with fullHost for main services but a separate event server configuration.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst tronWeb = new TronWeb({\n    fullHost: 'https://api.trongrid.io',\n    eventServer: 'https://api.someotherevent.io',\n    privateKey: 'your private key'\n  }\n)\n```\n\n----------------------------------------\n\nTITLE: Instantiating TronWeb with Completely Separate Configurations\nDESCRIPTION: JavaScript example demonstrating how to create a TronWeb instance with different servers specified for each service (fullNode, solidityNode, eventServer).\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst tronWeb = new TronWeb({\n    fullNode: 'https://some-node.tld',\n    solidityNode: 'https://some-other-node.tld',\n    eventServer: 'https://some-event-server.tld',\n    privateKey: 'your private key'\n  }\n)\n```\n\n----------------------------------------\n\nTITLE: Installing TronWeb via NPM or Yarn in Node.js\nDESCRIPTION: Command line instructions for installing TronWeb in a Node.js project using either npm or yarn package managers.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install tronweb\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add tronweb\n```\n\n----------------------------------------\n\nTITLE: Importing TronWeb in TypeScript\nDESCRIPTION: TypeScript import statement demonstrating how to import TronWeb and its components in a TypeScript project, showing the different import structure compared to v5.x.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TronWeb, utils as TronWebUtils, Trx, TransactionBuilder, Contract, Event, Plugin } from 'tronweb';\n```\n\n----------------------------------------\n\nTITLE: Running Tron Quickstart Docker Container\nDESCRIPTION: Docker command to run a local private Tron network using the Tron Quickstart container with custom configuration options for testing purposes.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm \\\n  -p 9090:9090 \\\n  -e \"defaultBalance=100000\" \\\n  -e \"showQueryString=true\" \\\n  -e \"showBody=true\" \\\n  -e \"formatJson=true\" \\\n  --name tron \\\n  trontools/quickstart\n```\n\n----------------------------------------\n\nTITLE: Instantiating TronWeb with Separate Parameters (Legacy Method)\nDESCRIPTION: JavaScript example demonstrating the legacy way of instantiating TronWeb by passing each parameter separately and setting headers afterward.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst tronWeb = new TronWeb(fullNode, solidityNode, eventServer, privateKey)\ntronWeb.setHeader({ \"TRON-PRO-API-KEY\": 'your api key' });\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration for .cjs Files\nDESCRIPTION: Webpack configuration rule to properly handle CommonJS modules in TronWeb, solving the 'Cannot destructure property' error by correctly loading .cjs files.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n      test: /\\.cjs$/,\n      type: 'javascript/auto'\n}\n```\n\n----------------------------------------\n\nTITLE: Copying TronWeb to Browser Project\nDESCRIPTION: Command to copy the TronWeb distribution file from node_modules to a project's JavaScript folder for browser usage.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncp node_modules/tronweb/dist/TronWeb.js ./js/tronweb.js\n```\n\n----------------------------------------\n\nTITLE: Including TronWeb in HTML\nDESCRIPTION: HTML script tag example showing how to include TronWeb in a web page after copying the distribution file.\nSOURCE: https://github.com/tronprotocol/tronweb/blob/master/README.md#2025-04-20_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"./js/tronweb.js\"><script>\n```"
  }
]
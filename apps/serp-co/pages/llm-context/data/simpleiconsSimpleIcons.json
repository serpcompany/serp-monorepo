[
  {
    "owner": "simple-icons",
    "repo": "simple-icons",
    "content": "TITLE: Icon Object Structure in JavaScript\nDESCRIPTION: Example of the icon object structure returned when importing an icon from the Simple Icons package. Shows all available properties including title, slug, hex color, SVG, and more.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(siSimpleicons);\n\n/*\n{\n    title: 'Simple Icons',\n    slug: 'simpleicons',\n    hex: '111111',\n    source: 'https://simpleicons.org/',\n    svg: '<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">...</svg>',\n    path: 'M12 12v-1.5c-2.484 ...',\n    guidelines: 'https://simpleicons.org/styleguide',\n    license: {\n        type: '...',\n        url: 'https://example.com/'\n    }\n}\n\nNOTE: the `guidelines` entry will be `undefined` if we do not yet have guidelines for the icon.\nNOTE: the `license` entry will be `undefined` if we do not yet have license data for the icon.\n*/\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Metadata in JSON for Simple Icons\nDESCRIPTION: This snippet shows the structure of the JSON object used to define an icon's metadata in the Simple Icons project. It includes required fields like title, hex color, and source URL, as well as optional fields like slug, guidelines, and license information.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"A Fictional Brand\",\n    \"slug\": \"afictionalbrand_modifier\",\n    \"hex\": \"123456\",\n    \"source\": \"https://www.a-fictional-brand.org/logo\",\n    \"guidelines\": \"https://www.a-fictional-brand.org/brand-guidelines\",\n    \"license\": {\n        \"type\": \"CC0-1.0\",\n        \"url\": \"https://www.a-fictional-brand.org/logo/license\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Icons in JavaScript using ES Modules\nDESCRIPTION: Examples of importing icons in JavaScript using ES Modules (import) or CommonJS (require). Shows how to import specific icons by their slug for efficient tree shaking.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Import a specific icon by its slug as:\n// import { si[ICON SLUG] } from 'simple-icons'\n\n// For example:\n// use import/esm to allow tree shaking\nimport {siSimpleicons} from 'simple-icons';\n// or with require/cjs\nconst {siSimpleicons} = require('simple-icons');\n```\n\n----------------------------------------\n\nTITLE: Embedding Colored Icons via CDN using HTML\nDESCRIPTION: Pattern for embedding icons with color customization using the Simple Icons CDN service. Supports both default and custom colors with optional dark mode variants.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/[ICON SLUG]\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/[ICON SLUG]/[COLOR]\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/[ICON SLUG]/[COLOR]/[DARK_MODE_COLOR]\" />\n```\n\n----------------------------------------\n\nTITLE: Embedding Icons via CDN using HTML\nDESCRIPTION: Examples of embedding Simple Icons in HTML using CDN providers like jsDelivr and unpkg. This requires specifying the icon slug in the URL pattern.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img height=\"32\" width=\"32\" src=\"https://cdn.jsdelivr.net/npm/simple-icons@v14/icons/[ICON SLUG].svg\" />\n<img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v14/icons/[ICON SLUG].svg\" />\n```\n\n----------------------------------------\n\nTITLE: Embedding Specific Icons via CDN using HTML\nDESCRIPTION: Example of embedding the Simple Icons logo via CDN using jsDelivr and unpkg. This shows the practical implementation with a real icon slug.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img height=\"32\" width=\"32\" src=\"https://cdn.jsdelivr.net/npm/simple-icons@v14/icons/simpleicons.svg\" />\n<img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v14/icons/simpleicons.svg\" />\n```\n\n----------------------------------------\n\nTITLE: Embedding Colored Icons Examples using HTML\nDESCRIPTION: Examples of embedding the Simple Icons logo with various color options including default, named colors, hex codes, and dark mode variants.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/gray\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/hotpink\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/0cf\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/0cf9\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/00ccff\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/00ccff99\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/orange/pink\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/_/eee\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/eee/_\" />\n```\n\n----------------------------------------\n\nTITLE: Auto-sized Viewbox for Consistent Sizing in HTML\nDESCRIPTION: Examples of using the viewbox=auto parameter with the Simple Icons CDN to ensure consistent icon sizing regardless of the original dimensions.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<img height=\"20\" src=\"https://cdn.simpleicons.org/github?viewbox=auto\" />\n<img height=\"20\" src=\"https://cdn.simpleicons.org/simpleicons?viewbox=auto\" />\n<img height=\"20\" src=\"https://cdn.simpleicons.org/awesomelists?viewbox=auto\" />\n```\n\n----------------------------------------\n\nTITLE: Importing All Icons in JavaScript\nDESCRIPTION: Code snippet showing how to import all icons from the Simple Icons package when iteration over all icons is needed.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as icons from 'simple-icons';\n```\n\n----------------------------------------\n\nTITLE: TypeScript Type Definitions Usage\nDESCRIPTION: Example of importing TypeScript type definitions that are bundled with the Simple Icons package for type-safe development.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport type {SimpleIcon} from 'simple-icons';\n```\n\n----------------------------------------\n\nTITLE: Using Simple Icons SDK with JavaScript\nDESCRIPTION: Example of importing and using the SDK from the Simple Icons package in JavaScript with JSDoc type annotations to fetch icon data for third-party extension development.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nimport {getIconsData} from 'simple-icons/sdk';\n\n/* @typedef {import(\"./simple-icons/sdk\").IconData} IconData */\n\n/* @type {Promise<IconData[]>} */\nconst iconsData = getIconsData();\n```\n\n----------------------------------------\n\nTITLE: Using Simple Icons SDK with TypeScript\nDESCRIPTION: Example of importing and using the SDK from the Simple Icons package in TypeScript to fetch icon data. The SDK is designed to facilitate third-party extension development.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nimport {getIconsData, type IconData} from 'simple-icons/sdk';\n\nconst iconsData: Promise<IconData[]> = getIconsData();\n```\n\n----------------------------------------\n\nTITLE: Using Simple Icons in PHP\nDESCRIPTION: PHP examples showing how to load and display SVG icons from the Simple Icons package by reading the SVG files directly.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// Import a specific icon by its slug as:\necho file_get_contents('path/to/package/icons/[ICON SLUG].svg');\n\n// For example:\necho file_get_contents('path/to/package/icons/simpleicons.svg');\n\n// <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">...</svg>\n?>\n```\n\n----------------------------------------\n\nTITLE: Installing Simple Icons via Composer for PHP\nDESCRIPTION: Shell command to install the Simple Icons package via Composer for use in PHP applications.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncomposer require simple-icons/simple-icons\n```\n\n----------------------------------------\n\nTITLE: Installing Simple Icons via NPM\nDESCRIPTION: Shell command to install the Simple Icons package via NPM for use in Node.js applications.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm install simple-icons\n```\n\n----------------------------------------\n\nTITLE: Annotating SVG Icon with Accessibility Attributes\nDESCRIPTION: Example of how to properly annotate an SVG icon with accessibility attributes, including role, viewBox, xmlns, and title elements.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: svg\nCODE:\n```\n<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Photoshop</title>...</svg>\n```\n\n----------------------------------------\n\nTITLE: Complete SVG Icon Example for Adobe Photoshop\nDESCRIPTION: A fully optimized and annotated SVG icon for Adobe Photoshop, demonstrating proper formatting, single-line minification, and inclusion of a single path element.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: svg\nCODE:\n```\n<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Photoshop</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm4.8 4.48c0-.067.14-.116.224-.116.644-.033 1.588-.05 2.578-.05 2.772 0 3.85 1.52 3.85 3.466 0 2.54-1.842 3.63-4.102 3.63-.38 0-.51-.017-.775-.017v3.842c0 .083-.033.116-.115.116H5.916c-.083 0-.115-.03-.115-.113V5.78zm1.775 5.312c.23.016.412.016.81.016 1.17 0 2.27-.412 2.27-1.996 0-1.27-.786-1.914-2.122-1.914-.396 0-.775.016-.957.033v3.864zm8.607-1.188c-.792 0-1.056.396-1.056.726 0 .363.18.61 1.237 1.155 1.568.76 2.062 1.485 2.062 2.557 0 1.6-1.22 2.46-2.87 2.46-.876 0-1.62-.183-2.05-.43-.065-.033-.08-.082-.08-.165V14.74c0-.1.048-.133.114-.084.624.413 1.352.594 2.012.594.792 0 1.122-.33 1.122-.776 0-.363-.23-.677-1.237-1.205-1.42-.68-2.014-1.37-2.014-2.527 0-1.287 1.006-2.36 2.755-2.36.86 0 1.464.132 1.794.28.082.05.1.132.1.198v1.37c0 .083-.05.133-.15.1-.444-.264-1.1-.43-1.743-.43z\"/></svg>\n```\n\n----------------------------------------\n\nTITLE: Adding Duplicate Brand Information to Icon Metadata in JSON\nDESCRIPTION: This snippet shows how to add information about duplicate brands that use the same icon but have a different name. It allows the SVG to be available under multiple brand names without duplicating the file.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"the original title\",\n    \"hex\": \"123456\",\n    \"aliases\": {\n        \"dup\": [\n            {\n                \"title\": \"the duplicate's title\",\n                \"hex\": \"654321\",\n                \"guidelines\": \"...\"\n            }\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding 'Also Known As' Aliases to Icon Metadata in JSON\nDESCRIPTION: This snippet demonstrates how to add 'also known as' aliases to an icon's metadata in the Simple Icons JSON file. These aliases help users find brands known by different names or abbreviations.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"the original title\",\n    \"aliases\": {\n        \"aka\": [\n            \"tot\",\n            \"thetitle\"\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Old Brand Names to Icon Metadata in JSON\nDESCRIPTION: This snippet shows how to add old brand names to an icon's metadata in the Simple Icons JSON file. This allows users to find brands by their previous names.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"the title\",\n    \"aliases\": {\n        \"old\": [\n            \"the old title\"\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Localized Names to Icon Metadata in JSON\nDESCRIPTION: This snippet demonstrates how to add localized names to an icon's metadata in the Simple Icons JSON file. This allows users to find brands by their local names and provides SVGs with localized titles.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"the original title\",\n    \"aliases\": {\n        \"loc\": {\n            \"en-US\": \"A different title\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Filename in YAML for Simple Icons\nDESCRIPTION: This snippet demonstrates the naming convention for SVG files in the Simple Icons project. It shows how to convert a brand name into a lowercase, space-free filename.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_10\n\nLANGUAGE: yml\nCODE:\n```\ntitle: Adobe Photoshop\nfilename: adobephotoshop.svg\n```\n\n----------------------------------------\n\nTITLE: Resolving Filename Conflicts in Simple Icons\nDESCRIPTION: This snippet demonstrates how to resolve filename conflicts in the Simple Icons project by appending a modifier to the filename. This is used when two brands would otherwise have the same filename.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_12\n\nLANGUAGE: yml\nCODE:\n```\ntitle: Hive\nfilename: hive_blockchain.svg\n```\n\n----------------------------------------\n\nTITLE: Handling Special Characters in Icon Filenames for Simple Icons\nDESCRIPTION: This snippet shows how to handle special characters when naming SVG files for the Simple Icons project. It demonstrates the replacement of dots with 'dot' in the filename.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_11\n\nLANGUAGE: yml\nCODE:\n```\ntitle: .Net\nfilename: dotnet.svg\n```\n\n----------------------------------------\n\nTITLE: Brand Names to Slugs Mapping Table in Markdown\nDESCRIPTION: A markdown table containing two columns - the first showing the official brand name in backticks, and the second showing the corresponding simplified slug identifier in backticks. This is used for mapping brand names to their standardized slugs in the Simple Icons system.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/slugs.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| `Max-Planck-Gesellschaft` | `maxplanckgesellschaft` |\n| `Maytag` | `maytag` |\n| `Mazda` | `mazda` |\n[...additional entries...]\n```\n\n----------------------------------------\n\nTITLE: Brand-Icon Mapping Table in Markdown\nDESCRIPTION: A markdown table containing two-column mappings between brand/technology names and their corresponding icon identifiers. The list covers brands from Freelancer through Inertia.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/slugs.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| `Freelancer` | `freelancer` |\n| `freelancermap` | `freelancermap` |\n| `FreeNAS` | `freenas` |\n[...truncated for brevity...]\n```\n\n----------------------------------------\n\nTITLE: Brand Icon Mapping Table - P to R Brands\nDESCRIPTION: A markdown table containing two-column mappings between brand display names and their corresponding icon identifiers. Each row represents a brand with its official name and simplified icon identifier.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/slugs.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| `Paytm` | `paytm` |\n| `PCGamingWiki` | `pcgamingwiki` |\n[...additional rows...]\n```\n\n----------------------------------------\n\nTITLE: Brand Name to CSS Class Mapping Table in Markdown\nDESCRIPTION: A markdown table containing two columns - the first showing the brand/company display name and the second showing the corresponding CSS class identifier. The identifiers are typically lowercase versions of the names with special characters removed.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/slugs.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| `Wiki.js` | `wikidotjs` |\n| `Wikibooks` | `wikibooks` |\n| `Wikidata` | `wikidata` |\n| `Wikimedia Commons` | `wikimediacommons` |\n| `Wikimedia Foundation` | `wikimediafoundation` |\n| `Wikipedia` | `wikipedia` |\n| `Wikiquote` | `wikiquote` |\n| `Wikiversity` | `wikiversity` |\n| `Wikivoyage` | `wikivoyage` |\n| `Winamp` | `winamp` |\n| `Wine` | `wine` |\n| `Wipro` | `wipro` |\n| `Wire` | `wire` |\n| `WireGuard` | `wireguard` |\n| `Wireshark` | `wireshark` |\n| `Wise` | `wise` |\n| `Wish` | `wish` |\n| `Wistia` | `wistia` |\n| `Wix` | `wix` |\n| `Wizz Air` | `wizzair` |\n| `Wolfram` | `wolfram` |\n| `Wolfram Language` | `wolframlanguage` |\n| `Wolfram Mathematica` | `wolframmathematica` |\n| `Wondershare` | `wondershare` |\n| `Wondershare Filmora` | `wondersharefilmora` |\n| `Woo` | `woo` |\n| `WooCommerce` | `woocommerce` |\n| `WordPress` | `wordpress` |\n| `Workplace` | `workplace` |\n| `World Health Organization` | `worldhealthorganization` |\n| `WP Engine` | `wpengine` |\n| `WP Rocket` | `wprocket` |\n| `WPExplorer` | `wpexplorer` |\n| `Write.as` | `writedotas` |\n| `WWE` | `wwe` |\n| `Wwise` | `wwise` |\n| `WXT` | `wxt` |\n| `Wykop` | `wykop` |\n| `Wyze` | `wyze` |\n| `X` | `x` |\n| `X.Org` | `xdotorg` |\n| `XAMPP` | `xampp` |\n| `Xcode` | `xcode` |\n| `XDA Developers` | `xdadevelopers` |\n| `Xendit` | `xendit` |\n| `Xero` | `xero` |\n| `XFCE` | `xfce` |\n| `Xiaohongshu` | `xiaohongshu` |\n| `Xiaomi` | `xiaomi` |\n| `Xing` | `xing` |\n| `XML` | `xml` |\n| `XMPP` | `xmpp` |\n| `XO` | `xo` |\n| `XRP` | `xrp` |\n| `XSplit` | `xsplit` |\n| `XState` | `xstate` |\n| `Xubuntu` | `xubuntu` |\n| `xyflow` | `xyflow` |\n| `Y Combinator` | `ycombinator` |\n| `yabai` | `yabai` |\n| `Yale` | `yale` |\n| `Yamaha Corporation` | `yamahacorporation` |\n| `Yamaha Motor Corporation` | `yamahamotorcorporation` |\n| `YAML` | `yaml` |\n| `Yandex Cloud` | `yandexcloud` |\n| `Yarn` | `yarn` |\n| `Yelp` | `yelp` |\n| `Yeti` | `yeti` |\n| `Yii` | `yii` |\n| `Yoast` | `yoast` |\n| `YOLO` | `yolo` |\n| `YouHodler` | `youhodler` |\n| `YouTube` | `youtube` |\n| `YouTube Gaming` | `youtubegaming` |\n| `YouTube Kids` | `youtubekids` |\n| `YouTube Music` | `youtubemusic` |\n| `YouTube Shorts` | `youtubeshorts` |\n| `YouTube Studio` | `youtubestudio` |\n| `YouTube TV` | `youtubetv` |\n| `Yr` | `yr` |\n| `Yubico` | `yubico` |\n| `YunoHost` | `yunohost` |\n| `Żabka` | `zabka` |\n| `Zaim` | `zaim` |\n| `Zalando` | `zalando` |\n| `Zalo` | `zalo` |\n| `ZAP` | `zap` |\n| `Zapier` | `zapier` |\n| `Zara` | `zara` |\n| `Zazzle` | `zazzle` |\n| `Zcash` | `zcash` |\n| `ZCOOL` | `zcool` |\n| `ZDF` | `zdf` |\n| `ZebPay` | `zebpay` |\n| `Zebra Technologies` | `zebratechnologies` |\n| `Zed Industries` | `zedindustries` |\n| `Zelle` | `zelle` |\n| `Zen Browser` | `zenbrowser` |\n| `Zend` | `zend` |\n| `Zendesk` | `zendesk` |\n| `Zenn` | `zenn` |\n| `Zenodo` | `zenodo` |\n| `Zensar` | `zensar` |\n| `Zerodha` | `zerodha` |\n| `ZeroTier` | `zerotier` |\n| `Zettlr` | `zettlr` |\n| `Zhihu` | `zhihu` |\n| `Zig` | `zig` |\n| `Zigbee` | `zigbee` |\n| `Zigbee2MQTT` | `zigbee2mqtt` |\n| `Ziggo` | `ziggo` |\n| `Zilch` | `zilch` |\n| `Zillow` | `zillow` |\n| `ZincSearch` | `zincsearch` |\n| `Zingat` | `zingat` |\n| `Zod` | `zod` |\n| `Zoho` | `zoho` |\n| `Zoiper` | `zoiper` |\n| `Zomato` | `zomato` |\n| `Zoom` | `zoom` |\n| `Zorin` | `zorin` |\n| `Zotero` | `zotero` |\n| `Zsh` | `zsh` |\n| `Zulip` | `zulip` |\n| `Zyte` | `zyte` |\n```\n\n----------------------------------------\n\nTITLE: Brand Icon Mapping Table Entry\nDESCRIPTION: Markdown table entries mapping display names to icon identifiers for the Simple Icons library. Shows the format used for registering brand icons.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/slugs.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| `Cryptomator` | `cryptomator` |\n| `CryptPad` | `cryptpad` |\n```\n\n----------------------------------------\n\nTITLE: Simple Icons Disclaimer in Markdown Format\nDESCRIPTION: This is a full disclaimer document for the Simple Icons project, covering licenses, brand guidelines, updates, and removal procedures. It provides essential information for users about legal considerations and proper usage of icons in the collection.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/DISCLAIMER.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Disclaimer\n\nSimple Icons asks that its users read this disclaimer fully before including an icon in their project.\n\n## Table of Contents\n\n- [Licenses, Copyrights & Trademarks](#licenses-copyrights--trademarks)\n- [Brand Guidelines](#brand-guidelines)\n- [Update of Brands](#update-of-brands)\n- [Removal of Brands](#removal-of-brands)\n\n## Licenses, Copyrights & Trademarks\n\n> [!IMPORTANT]\\\n> The addition of licenses to Simple Icons is an ongoing project. Hence, the absence of licence data for a particular icon does not imply that the icon is not released under a license.\n\n<!-- makdownlint-disable-next-line no-blanks-blockquote -->\n\n> [!NOTE]\\\n> Simple Icons is released under CC0 - though that doesn't mean to imply that all icons within the project are also CC0. Please see individual licenses where available.\n\nSimple Icons provides data on the license under which icons are available. We ask users to carefully consider this when using an icon. As licenses are subject to change we also ask our users to regularly check if the license of the icons they use have been changed.\n\nThe license under which an icon is available can be found in the icon's entry in the JSON data file in the NPM and Packagist packages, or through the license link on the icon's card on [the Simple Icons website].\n\nAs we rely largely on our community to help us keep Simple Icons up-to-date, the license data for an icon may be outdated. If you find that the license data provided is outdated, please [submit an issue][icon-outdated-issues] to [the Simple Icons GitHub repository].\n\nIf an icon includes a registered trademark (`®`) or trademark symbol (`™`) the recommendations outlined in [the Simple Icons Contributing Guidelines] are followed to decide whether to include the symbol or not.\n\nSimple Icons cannot be held responsible for any legal activity raised by a brand, or users of the package. We ask that our users seek the correct permissions to use the icons relevant to their project.\n\n## Brand Guidelines\n\n> [!NOTE]\\\n> The addition of guidelines to Simple Icons is an ongoing project. In the meantime, users of Simple Icons are instead encouraged to check the `source` URL as, in some cases, the icon will have been sourced from official guidelines. The lack of a `guidelines` entry for a particular brand does not imply that the brand has no guidelines.\n\nSimple Icons provides a link to a brand's _branding guidelines_ (or similar) if the brand provides one. We ask our users read these guidelines and ensure their usage of the brand's icon is in accordance with them. As guidelines are subject to change we also ask our users to regularly check if the brand guidelines of the icons they use have been updated.\n\nThe brand guidelines can be found in the icon's entry in the JSON data file in the NPM and Packagist packages, or through the \"Brand Guidelines\" link on the icon's card on [the Simple Icons website].\n\nAs we rely largely on our community to help us keep Simple Icons up-to-date, the guidelines link for a brand may be outdated. If you find that the guidelines are outdated, please [submit an issue][icon-outdated-issues] to [the Simple Icons GitHub repository].\n\n## Update of Brands\n\nShould a brand wish for their icon or data to be updated, please [submit an issue][icon-outdated-issues] to [the Simple Icons GitHub repository]. In the issue, please explain your affiliation with the company and reasons for the update. We generally release updates once a week, but can make exceptions for immediate updates of brands.\n\n## Removal of Brands\n\nShould a brand wish for their icon to be removed from the package, contact `removals at simpleicons dot org` explaining your affiliation with the company, and reasons for removal. Alternatively, it is also possible to [submit an issue][removal-issues] on [the Simple Icons GitHub repository] with the same information. We generally remove icons that no longer [meet our criteria] twice a year in our major releases - but can occasionally make exceptions for immediate removal of brands.\n\n[meet our criteria]: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#requesting-an-icon\n[icon-outdated-issues]: https://github.com/simple-icons/simple-icons/issues/new?assignees=&labels=update+icon%2Fdata&template=icon_update.yml&title=Update%3A+\n[removal-issues]: https://github.com/simple-icons/simple-icons/issues/new?assignees=&labels=breaking+change&template=icon_removal.yml&title=Remove%3A+\n[the simple icons contributing guidelines]: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#icon-guidelines\n[the simple icons github repository]: https://github.com/simple-icons/simple-icons\n[the simple icons website]: https://simpleicons.org/\n```\n\n----------------------------------------\n\nTITLE: Building and Running Simple Icons Docker Container\nDESCRIPTION: Instructions for building a Docker image for the Simple Icons project and starting a container with an interactive shell, which provides a safe environment for development and running SVGO.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ndocker build . -t simple-icons\n```\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it --rm --entrypoint \"/bin/ash\" simple-icons\n```\n\n----------------------------------------\n\nTITLE: Cloning Simple Icons Repository with SSH\nDESCRIPTION: Command to clone the Simple Icons repository using SSH with tree filter to reduce download size.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --filter=tree:0 git@github.com:simple-icons/simple-icons.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Simple Icons Repository with HTTPS\nDESCRIPTION: Command to clone the Simple Icons repository using HTTPS with tree filter to reduce download size.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --filter=tree:0 https://github.com/simple-icons/simple-icons.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Simple Icons Repository with GitHub CLI\nDESCRIPTION: Command to clone the Simple Icons repository using GitHub CLI with tree filter to reduce download size.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngh repo clone simple-icons/simple-icons -- --filter=tree:0\n```\n\n----------------------------------------\n\nTITLE: Auto-generation Notice in HTML Comment\nDESCRIPTION: HTML comment indicating that the file is automatically generated and should not be edited directly. Instead, updates should be made to the script at 'scripts/release/update-slugs-table.js'.\nSOURCE: https://github.com/simple-icons/simple-icons/blob/develop/slugs.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\nThis file is automatically generated. If you want to change something, please\nupdate the script at 'scripts/release/update-slugs-table.js'.\n-->\n```"
  }
]
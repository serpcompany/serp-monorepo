[
  {
    "owner": "restpackio",
    "repo": "restpack-node",
    "content": "TITLE: Initializing Restpack and Converting HTML to PDF\nDESCRIPTION: This snippet initializes the Restpack client with your access key and demonstrates converting a webpage to PDF using the `html2pdf.convert` method. The method takes a URL and options (e.g., page size) as input and returns a Promise that resolves with the document details and CDN URL of the generated PDF or rejects with an error.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar restpack = require(\"@restpack/client\");\n\nvar html2pdf = restpack.html2pdf(\"<YOUR ACCESS KEY>\");\nvar screenshot = restpack.screenshot(\"<YOUR ACCESS KEY>\");\n\nhtml2pdf\n  .convert(\"http://google.com\", { pdf_page: \"A4\" })\n  .then(function success(document) {\n    console.log(document);\n  })\n  .catch(function fail(error) {\n    console.error(error);\n  });\n```\n\n----------------------------------------\n\nTITLE: Converting HTML Content to PDF\nDESCRIPTION: This example shows how to convert HTML content directly to a PDF document using the `convertHTML` method. It takes the HTML string and optional settings, like page size, as input. The function returns a promise that resolves with the generated PDF document details.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert given html content to PDF. Return the document details and CDN url of PDF\nhtml2pdf.convertHTML(\"<p><b>Bold text</b> etc</p>\", {\n  pdf_page: \"A4\" /* , other options */,\n});\n```\n\n----------------------------------------\n\nTITLE: Converting URL to PDF Buffer\nDESCRIPTION: This snippet demonstrates converting a URL into a PDF document and retrieving it as a Buffer using the `convertToPDF` method. This is useful when you need to process the PDF data directly rather than relying on a CDN URL.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert given URL to PDF. Return the PDF document as Buffer\nhtml2pdf.convertToPDF(\"http://google.com\", {\n  pdf_page: \"A4\" /* , other options */,\n});\n```\n\n----------------------------------------\n\nTITLE: Converting HTML Content to PDF Buffer\nDESCRIPTION: This code snippet demonstrates converting HTML content directly into a PDF document and receiving it as a Buffer using the `convertHTMLToPDF` method. The method is suitable when you need the raw PDF data for further processing.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert given html content to PDF. Return the PDF document as Buffer\nhtml2pdf.convertHTMLToPDF(\"<p><b>Bold text</b> etc</p>\", {\n  pdf_page: \"A4\" /* , other options */,\n});\n```\n\n----------------------------------------\n\nTITLE: Converting URL to PDF with Options\nDESCRIPTION: This code snippet demonstrates converting a URL to a PDF document using the Restpack client. It initializes the `html2pdf` service and calls the `convert` method with a URL and an options object, specifying the PDF page size. The promise resolves with document details if successful.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar restpack = require(\"@restpack/client\");\n\nvar html2pdf = restpack.html2pdf(\"<YOUR ACCESS KEY>\");\n\n// Convert given URL to PDF. Return the document details and CDN url of PDF\n// Check Available Options link above for all options.\nvar promise = html2pdf.convert(\"http://google.com\", {\n  pdf_page: \"A4\" /* , other options */,\n});\npromise.then(function (doc) {\n  console.log(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Capturing Website Screenshot with Options\nDESCRIPTION: This code snippet captures a screenshot of a specified URL using the `screenshot.capture` method. It initializes the screenshot service and takes options like page size as input, returning a Promise that resolves with document details upon success.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar restpack = require(\"@restpack/client\");\n\nvar screenshot = restpack.screenshot(\"<YOUR ACCESS KEY>\");\n\n// Convert given URL to PDF. Return the document details and CDN url of PDF\n// Check Available Options link above for all options.\nvar promise = screenshot.capture(\"http://google.com\", {\n  pdf_page: \"A4\" /* , other options */,\n});\npromise.then(function (doc) {\n  console.log(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Capturing Website Screenshot to Image Buffer\nDESCRIPTION: This code demonstrates capturing a website screenshot and receiving it as an image buffer using the `captureToImage` method. This enables direct processing of the image data.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert given URL to PDF. Return the PDF document as Buffer\nscreenshot.captureToImage(\"http://google.com\", {\n  pdf_page: \"A4\" /* , other options */,\n});\n```\n\n----------------------------------------\n\nTITLE: Capturing Screenshot of HTML Content\nDESCRIPTION: This snippet showcases capturing a screenshot from provided HTML content using the `captureHTML` method. This enables taking screenshots of dynamically generated content without needing a URL.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert given html content to PDF. Return the document details and CDN url of PDF\nscreenshot.captureHTML(\"<p><b>Bold text</b> etc</p>\", {\n  pdf_page: \"A4\" /* , other options */,\n});\n```\n\n----------------------------------------\n\nTITLE: Capturing Screenshot of HTML Content to Image Buffer\nDESCRIPTION: This code shows capturing a screenshot from HTML content and retrieving the image data as a buffer using the `captureHTMLToImage` method. It allows processing of screenshots generated directly from HTML code.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert given html content to PDF. Return the PDF document as Buffer\nscreenshot.captureHTMLToImage(\"<p><b>Bold text</b> etc</p>\", {\n  pdf_page: \"A4\" /* , other options */,\n});\n```\n\n----------------------------------------\n\nTITLE: Define PDFConvertOptions Interface\nDESCRIPTION: Defines the PDFConvertOptions interface in TypeScript, outlining the options available when converting HTML to PDF using Restpack's API. These options cover a wide range of configurations, from basic page settings to advanced features like headers, footers, encryption, and custom CSS/JS injection.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/docs/interfaces/html2pdf.pdfconvertoptions.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * Options supplied to the Restpack API for conversion\n */\ninterface PDFConvertOptions {\n  allow_failed?: boolean;\n  block_cookie_warnings?: boolean;\n  cache_ttl?: number;\n  css?: string;\n  delay?: number;\n  emulate_media?: \"screen\" | \"print\";\n  filename?: string;\n  headers?: string;\n  js?: string;\n  owner_password?: string;\n  pdf_encryption?: \"40\" | \"128\";\n  pdf_footer?: string;\n  pdf_header?: string;\n  pdf_height?: string;\n  pdf_margins?: string;\n  pdf_orientation?: \"portrait\" | \"landscape\";\n  pdf_page?: \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"Legal\" | \"Letter\" | \"Tabloid\" | \"Ledger\" | \"Full\";\n  pdf_page_ranges?: string;\n  pdf_width?: string;\n  privacy?: boolean;\n  shutter?: string;\n  user_agent?: string;\n  user_password?: string;\n  wait?: \"load\" | \"network\" | \"dom\";\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Restpack Client with NPM\nDESCRIPTION: This command installs the Restpack client library using NPM, adding it as a dependency to your project. This enables the use of Restpack's HTML to PDF and Screenshot APIs from your Node.js application.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @restpack/client --save\n```\n\n----------------------------------------\n\nTITLE: Installing Restpack Client with Yarn\nDESCRIPTION: This command installs the Restpack client library using Yarn, adding it as a dependency to your project. Yarn is an alternative package manager that offers potentially faster and more reliable installations.\nSOURCE: https://github.com/restpackio/restpack-node/blob/master/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn add @restpack/client\n```"
  }
]
[
  {
    "owner": "nuxt",
    "repo": "image",
    "content": "TITLE: Basic Usage of NuxtImg Component in Vue\nDESCRIPTION: Demonstrates the basic usage of the <NuxtImg> component as a drop-in replacement for the native <img> tag. It shows how to use the component with a local image source.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg src=\"/nuxt-icon.png\" />\n```\n\n----------------------------------------\n\nTITLE: Automatic Installation of Nuxt Image Module\nDESCRIPTION: Command to automatically add the @nuxt/image module to a Nuxt project using nuxi CLI.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx nuxi@latest module add image\n```\n\n----------------------------------------\n\nTITLE: Defining Image Presets in Nuxt Config\nDESCRIPTION: Demonstrates how to define image presets in the Nuxt configuration file for use with the 'preset' prop in <NuxtImg>.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    presets: {\n      cover: {\n        modifiers: {\n          fit: 'cover',\n          format: 'jpg',\n          width: 300,\n          height: 300\n        }\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Responsive Sizes for NuxtImg in Vue\nDESCRIPTION: Shows how to use the 'sizes' prop to specify responsive sizes for the image. This example demonstrates setting different sizes for various screen breakpoints.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  src=\"/logos/nuxt.png\"\n  sizes=\"100vw sm:50vw md:400px\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Image Quality\nDESCRIPTION: Configuration to set the default quality for generated images. This can be overridden at the component level using the quality prop.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    quality: 80\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuxt Image Module in nuxt.config.ts\nDESCRIPTION: Basic configuration structure for the Nuxt Image module in the Nuxt configuration file. This defines the entry point for all image module options.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    // Options\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Custom Rendering with NuxtImg in Vue\nDESCRIPTION: Illustrates how to use the 'custom' prop with <NuxtImg> for custom rendering scenarios. It shows how to implement a placeholder while the image is loading and display the actual image once loaded.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  src=\"/images/nuxt.png\"\n  alt=\"image\"\n  width=\"400\"\n  height=\"400\"\n  :custom=\"true\"\n  v-slot=\"{ src, isLoaded, imgAttrs }\"\n>\n  <!-- Show the actual image when loaded -->\n  <img\n    v-if=\"isLoaded\"\n    v-bind=\"imgAttrs\"\n    :src=\"src\"\n  >\n\n  <!-- Show a placeholder while loading -->\n  <img\n    v-else\n    src=\"https://placehold.co/400x400\"\n    alt=\"placeholder\"\n  >\n</NuxtImg>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtPicture with Multiple Image Formats\nDESCRIPTION: Example showing how to use the <NuxtPicture> component with multiple image formats. This configuration generates images in avif, webp, and png formats automatically.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/2.nuxt-picture.md#2025-04-21_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtPicture\n  format=\"avif,webp\"\n  src=\"/nuxt-icon.png\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding Nuxt Image Module to nuxt.config.ts\nDESCRIPTION: Configuration code to register the @nuxt/image module in the Nuxt project's configuration file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  modules: [\n    '@nuxt/image'\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Image Densities with NuxtImg in Vue\nDESCRIPTION: Demonstrates how to use the 'densities' prop to generate versions of the image for screens with different pixel densities.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  src=\"/logos/nuxt.png\"\n  height=\"50\"\n  densities=\"x1 x2\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Placeholders with NuxtImg in Vue\nDESCRIPTION: Shows various ways to use the 'placeholder' prop with <NuxtImg>, including automatic generation and custom placeholder images.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<!-- Automatically generate a placeholder based on the original image -->\n<NuxtImg src=\"/nuxt.png\" placeholder />\n\n<!-- Set a width, height for the automatically generated placeholder  -->\n<NuxtImg src=\"/nuxt.png\" :placeholder=\"[50, 25]\" />\n\n<!-- Set a width, height, quality & blur for the automatically generated placeholder  -->\n<NuxtImg src=\"/nuxt.png\" :placeholder=\"[50, 25, 75, 5]\" />\n\n<!-- Set the width & height of the automatically generated placeholder, image will be a square -->\n<NuxtImg src=\"/nuxt.png\" :placeholder=\"15\" />\n\n<!-- Provide your own image -->\n<NuxtImg src=\"/nuxt.png\" placeholder=\"./placeholder.png\" />\n```\n\n----------------------------------------\n\nTITLE: Setting Custom HTML Attributes on NuxtPicture's img Element\nDESCRIPTION: Example demonstrating how to set additional HTML attributes on the underlying img element using the imgAttrs prop. This allows customization of id, class, style, and data attributes.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/2.nuxt-picture.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtPicture\n  src=\"/nuxt-icon.png\"\n  :imgAttrs=\"{\n    id: 'my-id',\n    class: 'my-class',\n    style: 'display: block',\n    'data-my-data': 'my-value'\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Responsive Image Implementation with Vuetify and useImage() in Vue\nDESCRIPTION: Complete example showing how to implement responsive images with Vuetify's v-img component, utilizing useImage() and getSizes to generate proper srcset and sizes attributes.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/3.use-image.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<template>\n  <v-img\n    :lazy-src=\"img(src, { width: 10, quality: 70 })\"\n    :src=\"img(src, { height, quality: 70 })\"\n    :srcset=\"_srcset.srcset\"\n    :height=\"height\"\n    :sizes=\"_srcset.sizes\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nconst props = defineProps({\n  height: {\n    type: [Number, String],\n    default: 500\n  },\n  src: {\n    type: String,\n    default: '/img/header-bg.jpg'\n  }\n})\n\nconst img = useImage()\n\nconst _srcset = computed(() => {\n  return img.getSizes(props.src, {\n    sizes: 'xs:100vw sm:100vw md:100vw lg:100vw xl:100vw',\n    modifiers: {\n      format: 'webp',\n      quality: 70,\n      height: props.height\n    }\n  })\n})\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining Screen Size Breakpoints\nDESCRIPTION: Configuration to define predefined screen sizes for responsive images. These sizes are used to generate optimized versions of images for different screen sizes.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    // The screen sizes predefined by `@nuxt/image`:\n    screens: {\n      xs: 320,\n      sm: 640,\n      md: 768,\n      lg: 1024,\n      xl: 1280,\n      xxl: 1536,\n      '2xl': 1536\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Creating URL Aliases for Image Sources\nDESCRIPTION: Configuration to create aliases for image source URLs. This is particularly useful for shortening external URLs and optimizing HTML output.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    domains: [\n      'images.unsplash.com'\n    ],\n    alias: {\n      unsplash: 'https://images.unsplash.com'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Allowing External Domain Optimization\nDESCRIPTION: Configuration to specify which external domains are allowed to have their images optimized. This prevents abuse of external URLs and ensures only trusted domains are processed.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    domains: ['nuxtjs.org']\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudinary Provider for NuxtImg in Nuxt Config\nDESCRIPTION: Shows how to configure the Cloudinary provider in the Nuxt configuration file for use with <NuxtImg>.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudinary: {\n      baseURL: 'https://res.cloudinary.com/nuxt/image/upload'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Basic useImage() Composable Usage in JavaScript\nDESCRIPTION: Demonstrates the basic syntax for the useImage() composable which returns a function that can transform image sources with specified modifiers and options.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/3.use-image.md#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nconst img = useImage()\n\nimg(src, modifiers, options)\n```\n\n----------------------------------------\n\nTITLE: Creating Image Presets in Configuration\nDESCRIPTION: Configuration to define image presets with pre-defined modifiers. Presets help unify image styling across a project and can be referenced in NuxtImg components.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    presets: {\n      avatar: {\n        modifiers: {\n          format: 'jpg',\n          width: 50,\n          height: 50\n        }\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Image Format\nDESCRIPTION: Configuration to set the default format for images used by <NuxtPicture>. Available formats include webp, avif, jpeg, jpg, png, and gif. The first supported format in the list will be used.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    format: ['webp']\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using the getSizes Method from useImage() in JavaScript\nDESCRIPTION: Shows the syntax for the getSizes method which is used to generate responsive image sizes based on breakpoints and modifiers.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/3.use-image.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nconst img = useImage()\n\nimg.getSizes(src, { sizes, modifiers })\n```\n\n----------------------------------------\n\nTITLE: Applying CSS to Loaded Images\nDESCRIPTION: Shows a CSS technique to apply styles only to the loaded image, excluding the placeholder.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_8\n\nLANGUAGE: css\nCODE:\n```\nimg:not(.my-placeholder-class) {\n  /* styles here */\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Image Providers\nDESCRIPTION: Configuration to define custom image providers. Each provider can have its own implementation and options.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    providers: {\n      random: {\n        provider: '~/providers/random',\n        options: {}\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Device Pixel Ratio Support\nDESCRIPTION: Configuration to specify which device pixel ratio values to support for high-resolution displays (like retina). This affects image quality on different devices.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    densities: [1, 2, 3]\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Image Provider in TypeScript\nDESCRIPTION: Creates a custom image provider that generates optimized image URLs. Handles source paths and modifiers to construct CDN URLs with optional baseURL configuration.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/4.advanced/1.custom-provider.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { joinURL } from 'ufo'\nimport { createOperationsGenerator, defineProvider } from '#image'\n\nconst operationsGenerator = createOperationsGenerator()\n\nexport default defineProvider<{ baseURL?: string }>({\n  getImage (src, { modifiers, baseURL }) => {\n    if (!baseURL) {\n      // also support runtime config \n      baseURL = useRuntimeConfig().public.siteUrl\n    }\n\n    const operations = operationsGenerator(modifiers)\n\n    return {\n      url: joinURL(baseURL, src + (operations ? '?' + operations : ''))\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Default Image Provider\nDESCRIPTION: Configuration to set the default image provider for the project. This provider will be used when not specified at the component level.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    provider: 'twicpics',\n    twicpics: {\n      baseURL: 'https://nuxt-demo.twic.pics'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Changing Source Images Directory\nDESCRIPTION: Configuration to change the directory where source images are located. This is useful for organizing images in a custom location rather than the default public directory.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    dir: 'assets/images'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Provider in Nuxt Config\nDESCRIPTION: Nuxt configuration setup for registering the custom image provider with its options and path configuration.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/4.advanced/1.custom-provider.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    providers: {\n      myProvider: {\n        name: 'myProvider', // optional value to overrider provider name\n        provider: '~/providers/my-provider.ts', // Path to custom provider\n        options: {\n          // ... provider options\n          baseURL: 'https://site.com'\n        }\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using useImage() for Background Image Styles in JavaScript\nDESCRIPTION: Example showing how to generate an optimized image URL with width modifier and apply it as a background image using computed styles.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/3.use-image.md#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconst img = useImage()\n\nconst backgroundStyles = computed(() => {\n  const imgUrl = img('https://github.com/nuxt.png', { width: 100 })\n\n  return { backgroundImage: `url('${imgUrl}')` }\n})\n```\n\n----------------------------------------\n\nTITLE: Using Lazy Loading with NuxtImg in Vue\nDESCRIPTION: Demonstrates how to use the 'loading' attribute with NuxtImg to defer image loading until it appears in the viewport.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_9\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg src=\"/nuxt-icon.png\" loading=\"lazy\" />\n```\n\n----------------------------------------\n\nTITLE: Using Custom Provider in Vue Component\nDESCRIPTION: Example of using a custom image provider in a Vue component. This references the provider defined in the Nuxt configuration.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_9\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    provider=\"random\"\n    src=\"main.png\"\n    width=\"300\"\n    height=\"169\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Setting Remote Image Domains with Environment Variable in Nuxt Image\nDESCRIPTION: This code demonstrates how to configure allowed domains for remote images in Nuxt Image using the NUXT_IMAGE_DOMAINS environment variable. Multiple domains can be specified as a comma-separated list.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/3.providers.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nNUXT_IMAGE_DOMAINS=\"example.com,yourdomain.com\"\n```\n\n----------------------------------------\n\nTITLE: Using Cloudflare Provider with NuxtImg Component\nDESCRIPTION: Example of using the NuxtImg component with Cloudflare provider to display and transform an image. Demonstrates setting height and fit modifiers.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudflare.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"cloudflare\"\n  src=\"/burger.jpeg\"\n  height=\"300\"\n  :modifiers=\"{ fit: 'contain' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Content Security Policy Nonce with NuxtImg in Vue\nDESCRIPTION: Shows how to use the 'nonce' attribute with NuxtImg for Content Security Policy. It includes a script setup to retrieve the nonce value.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_10\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    src=\"/nuxt-icon.png\"\n    :nonce=\"nonce\"\n  />\n</template>\n\n<script setup lang=\"ts\">\n// useNonce is not provided by @nuxt/image but might be\n// provided by another module, for example nuxt-security\nconst nonce = useNonce()\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudinary Base URL in Nuxt\nDESCRIPTION: Basic configuration to set up Cloudinary provider in Nuxt Image module by specifying the project's base URL.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudinary: {\n      baseURL: 'https://res.cloudinary.com/<your-cloud-name>/image/upload'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Generating Placeholder with useImage in Vue\nDESCRIPTION: Demonstrates how to use the useImage composable to generate a placeholder image based on the original image, useful for SVG sources or when more control over modifiers is needed.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    src=\"/nuxt.svg\"\n    :placeholder=\"img(`/nuxt.svg`, { h: 10, f: 'png', blur: 2, q: 50 })\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nconst img = useImage()\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuxt Image Module in nuxt.config.ts\nDESCRIPTION: Example of how to add an image configuration section in the Nuxt configuration file for customizing the module's behavior.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    // Options\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Handling Native Events with NuxtImg in Vue\nDESCRIPTION: Illustrates how to listen to native events emitted by the <img> element within NuxtImg, specifically the 'onLoad' event.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/2.usage/1.nuxt-img.md#2025-04-21_snippet_11\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  src=\"/images/colors.jpg\"\n  width=\"500\"\n  height=\"500\"\n  @load=\"doSomethingOnLoad\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Nuxt Image Development Environment with Corepack and PNPM\nDESCRIPTION: Command sequence for setting up the Nuxt Image development environment. This includes cloning the repository, enabling Corepack, installing dependencies, and generating type stubs.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/4.contributing.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncorepack enable\npnpm install\npnpm dev:prepare\n```\n\n----------------------------------------\n\nTITLE: Using Image Presets in Vue Component\nDESCRIPTION: Example of using a predefined image preset in a Vue component. This references the preset defined in the Nuxt configuration.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_7\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    preset=\"avatar\"\n    src=\"/nuxt-icon.png\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Domain Whitelist for Vercel Image Optimization\nDESCRIPTION: Configuration snippet showing how to whitelist external domains for image optimization using Vercel's Edge Network. This is required when using images from external URLs not in the public directory.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/vercel.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    domains: ['avatars0.githubusercontent.com']\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Screen Sizes in Nuxt Config\nDESCRIPTION: Example of configuring custom screen sizes for responsive images in Nuxt config file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/aws-amplify.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    screens: {\n      icon: 40,\n      avatar: 24\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Cloudinary Upload\nDESCRIPTION: Example of using NuxtImg component with Cloudinary provider to display an uploaded image.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"cloudinary\"\n  src=\"/commons/a/ae/Olympic_flag.jpg\"\n  width=\"300\"\n  height=\"200\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Prerendering in Nuxt Config\nDESCRIPTION: Configuration code showing how to set up image prerendering routes when SSR is disabled. This allows Nuxt to pre-generate optimized images during the build process by specifying exact image paths and dimensions.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/4.advanced/2.static-images.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  ssr: false,\n  nitro: {\n    prerender: {\n      routes: [\n        '/_ipx/w_120/market.jpg',\n        '/_ipx/w_140/market.jpg',\n        // etc.\n      ]\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Image Component with Size Constraints\nDESCRIPTION: Example of using NuxtImg component with specific dimensions and the corresponding Nuxt configuration for screen sizes. Shows how to properly define image widths that Vercel requires for optimization.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/vercel.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    height=\"40\"\n    width=\"40\"\n    preset=\"cover\"\n    src=\"/nuxt-icon.png\"\n  />\n</template>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    screens: {\n      icon: 40,\n      icon2x: 80\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Default Cover Fit\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to display an image cropped to 300x300 while preserving the aspect ratio using the default cover fit.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  height=\"300\"\n  width=\"300\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Global $img Helper with inject Option\nDESCRIPTION: Configuration to globally initialize an $img helper that will be available throughout the application. By default, Nuxt Image v1 uses a composable approach.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    inject: true\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Cloudinary Fetch\nDESCRIPTION: Example of using NuxtImg component with Cloudinary provider to fetch and display a remote image.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"cloudinary\"\n  src=\"https://upload.wikimedia.org/wikipedia/commons/a/ae/Olympic_flag.jpg\"\n  width=\"300\"\n  height=\"200\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring ImageKit Provider in Nuxt Config\nDESCRIPTION: Configuration snippet for setting up ImageKit with the Nuxt Image module. The configuration requires specifying your ImageKit URL-endpoint as the baseURL.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    imagekit: {\n      baseURL: 'https://ik.imagekit.io/your_imagekit_id'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Resize Fit\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to resize an image to 300x300 with distortion using the resize fit property.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  fit=\"resize\"\n  height=\"300\"\n  width=\"300\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Imgix with NuxtImg Component and Advanced Modifiers\nDESCRIPTION: Example of using NuxtImg component with Imgix provider, demonstrating advanced features like auto format, compression, and intelligent face cropping for optimal image delivery.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imgix.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imgix\"\n  src=\"/blog/woman-hat.jpg\"\n  width=\"300\"\n  height=\"500\"\n  fit=\"cover\"\n  :modifiers=\"{ auto: 'format,compress', crop: 'faces' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Cloudinary Image with Gravity\nDESCRIPTION: Example of using NuxtImg with Cloudinary's gravity modifier for content-aware cropping.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"cloudinary\"\n  src=\"/remote/nuxt-org/blog/going-full-static/main.png\"\n  width=\"300\"\n  height=\"300\"\n  fit=\"fill\"\n  :modifiers=\"{ gravity: 'subject' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Contain Fit\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to fit an image into a 300x600 area while respecting the original 1:1 ratio using letterboxing with the contain fit property.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  fit=\"contain\"\n  height=\"600\"\n  width=\"300\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Hygraph Image with NuxtImg Component\nDESCRIPTION: Example of using NuxtImg component with Hygraph provider, demonstrating various image modifiers like height, width, fit, format, and quality settings.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/hygraph.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"hygraph\"\n  src=\"/cltsrex89477t08unlckqx9ue\"\n  height=\"512\"\n  width=\"512\"\n  fit=\"max\"\n  format=\"jpg\"\n  :quality=\"90\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Imgix Provider in Nuxt Image Module\nDESCRIPTION: Configuration setup for integrating Imgix with Nuxt Image module. Specifies the base URL of your Imgix service in the Nuxt configuration file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imgix.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    imgix: {\n      baseURL: 'https://assets.imgix.net'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudinary Fetch URL\nDESCRIPTION: Configuration for handling remote images using Cloudinary's fetch functionality.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudinary: {\n      baseURL: 'https://res.cloudinary.com/<your-cloud-name>/image/fetch'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudinary Upload URL\nDESCRIPTION: Configuration for handling uploaded images using Cloudinary's upload functionality with mapping folder.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudinary: {\n      baseURL: 'https://res.cloudinary.com/<your-cloud-name>/image/upload/<mapping-folder>'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Nuxt 3 with Package Managers\nDESCRIPTION: Commands to install project dependencies using npm, pnpm, or yarn package managers. This is the first step after cloning a Nuxt 3 project.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm install\n\n# pnpm\npnpm install\n\n# yarn\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg Component with Storyblok Provider (Vue)\nDESCRIPTION: This snippet demonstrates various ways to use the NuxtImg component with the Storyblok provider, including original image, resized static image, and proportional resizing based on width or height.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<!-- Original -->\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n/>\n\n<!-- Resized static -->\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n  width=\"500\"\n  height=\"500\"\n/>\n\n<!-- Proportional to width -->\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n  width=\"500\"\n/>\n\n<!-- Proportional to height -->\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n  height=\"500\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Cloudinary Image with Round Corners\nDESCRIPTION: Example of using NuxtImg with Cloudinary's roundCorner modifier for rounded corners effect.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"cloudinary\"\n  src=\"/remote/nuxt-org/blog/going-full-static/main.png\"\n  width=\"300\"\n  height=\"169\"\n  :modifiers=\"{ roundCorner: 'max' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Image Aspect Ratio with TwicPics in Nuxt Image\nDESCRIPTION: Examples of how to display images with specific aspect ratios using the cover modifier. These examples show a 300px wide image being displayed in a 4:3 aspect ratio, with options for automatic focus detection.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_17\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  width=\"300\"\n  fit=\"fill\"\n  :modifiers=\"{ cover: '4:3' }\"\n/>\n```\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  width=\"300\"\n  fit=\"fill\"\n  :modifiers=\"{ focus: 'auto', cover: '4:3' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Fit-in with Background Using NuxtImg Component (Vue)\nDESCRIPTION: This snippet shows how to use the fit-in feature with a specific background color using the NuxtImg component and Storyblok provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n  width=\"200\"\n  height=\"200\"\n  fit=\"in\"\n  :modifiers=\"{ filters: { fill: 'CCCCCC' } }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Uploadcare Images with NuxtImg Component in Vue\nDESCRIPTION: Example showing how to use the NuxtImg component with Uploadcare as the provider. The src attribute requires the UUID of the image from the Uploadcare dashboard.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/uploadcare.md#2025-04-21_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"uploadcare\"\n  src=\"c160afba-8b42-45a9-a46a-d393248b0072\"\n  alt=\"My image from uploadcare\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Cloudinary Image with Effect\nDESCRIPTION: Example of applying a grayscale effect using Cloudinary's effect modifier.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_7\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"cloudinary\"\n  src=\"/remote/nuxt-org/blog/going-full-static/main.png\"\n  width=\"300\"\n  height=\"300\"\n  fit=\"fill\"\n  :modifiers=\"{ effect: 'grayscale' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Focus Modifier\nDESCRIPTION: Examples of using NuxtImg with Twicpics provider and focus modifier in different scenarios: with auto focus and crop, with auto focus and cover, and with manual focus point and cover.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_12\n\nLANGUAGE: vue\nCODE:\n```\n<!-- using crop with focus auto -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  :modifiers=\"{ focus: 'auto', crop: '500x500' }\"\n/>\n\n<!-- changing ratio with focus auto -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  :modifiers=\"{ focus: 'auto', cover: '1:1' }\"\n/>\n\n<!-- changing ratio with selected focus -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/path-to-nuxt-demo.jpg\"\n  :modifiers=\"{ focus: '200x200', cover: '1:1' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Adjusting Image Quality with NuxtImg Component (Vue)\nDESCRIPTION: This snippet shows how to adjust the image quality using the NuxtImg component with the Storyblok provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n  width=\"200\"\n  quality=\"10\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Facial Detection with NuxtImg Component (Vue)\nDESCRIPTION: This snippet demonstrates how to enable smart cropping using facial detection with the NuxtImg component and Storyblok provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/2250x1500/c15735a73c/demo-image-human.jpeg\"\n  width=\"600\"\n  height=\"130\"\n  :modifiers=\"{ smart: true }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Image Modifiers with NuxtImg Component\nDESCRIPTION: Vue component example demonstrating how to use image modifiers and quality settings with the NuxtImg component.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/aws-amplify.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  src=\"/test.jpg\"\n  height=\"512\"\n  width=\"512\"\n  :modifiers=\"{ flip: true }\"\n  :quality=\"90\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Focal Points with NuxtImg Component (Vue)\nDESCRIPTION: These snippets show how to set custom focal points for image cropping using the NuxtImg component with the Storyblok provider, focusing on the top and bottom of the image.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<!-- Focus on the top of the image -->\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/1000x600/d962430746/demo-image-human.jpeg\"\n  width=\"600\"\n  height=\"130\"\n  :modifiers=\"{ filters: { focal: '450x0:550x100' } }\"\n/>\n\n<!-- Focus on the bottom of the image -->\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/1000x600/d962430746/demo-image-human.jpeg\"\n  width=\"600\"\n  height=\"130\"\n  :modifiers=\"{ filters: { focal: '450x500:550x600' } }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Basic Directus Image Modifiers with NuxtImg Component\nDESCRIPTION: Example of using the NuxtImg component with Directus provider. Demonstrates setting basic image properties like height, fit, quality, and the withoutEnlargement modifier.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/directus.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"directus\"\n  src=\"ad514db1-eb90-4523-8183-46781437e7ee\"\n  height=\"512\"\n  fit=\"inside\"\n  quality=\"20\"\n  :modifiers=\"{ withoutEnlargement: 'true' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Aliyun Provider with NuxtImg Component\nDESCRIPTION: Example of using the NuxtImg component with Aliyun provider to display and transform an image. Demonstrates setting the provider, source, dimensions, and fit modifiers.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/aliyun.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"aliyun\"\n  src=\"/burger.jpeg\"\n  height=\"300\"\n  :modifiers=\"{ fit: 'contain' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Prismic Provider in NuxtImg Component\nDESCRIPTION: Example of explicitly specifying Prismic as the image provider in a NuxtImg component. This approach allows you to use Prismic for specific images when it's not set as the default provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/prismic.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg provider=\"prismic\" src=\"...\" />\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Custom Modifiers\nDESCRIPTION: Example of using NuxtImg with Twicpics provider and custom modifiers to access specific TwicPics API features.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_9\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/path-to-nuxt-demo.jpg\"\n  :modifiers=\"{\n    key_1: value_1,\n    ...,\n    key_n: value_n\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Applying Image Modifiers with Aliyun\nDESCRIPTION: JavaScript object showing how to configure various image transformations with Aliyun CDN. Demonstrates resize, rotate, and brightness modifiers that can be passed to the NuxtImg component.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/aliyun.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  resize: {\n    fw: 900,\n    fh: 200\n  },\n  rotate: 180,\n  bright: 50,\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Additional Modifiers with NuxtImg in Vue\nDESCRIPTION: This snippet demonstrates how to apply additional modifiers supported by IPX to a NuxtImg component. It shows how to use the grayscale and tint modifiers on an image.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/ipx.md#2025-04-21_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  src=\"/image.png\"\n  :modifiers=\"{ grayscale: true, tint: '#00DC82' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Crop Modifier\nDESCRIPTION: Examples of using NuxtImg with Twicpics provider and crop modifier with different configurations: without coordinates, with coordinates, and with auto focus.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_10\n\nLANGUAGE: vue\nCODE:\n```\n<!-- no coordinates given -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat.jpg\"\n  :modifiers=\"{ crop: '500x100' }\"\n/>\n\n<!-- passing coordinates -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat.jpg\"\n  :modifiers=\"{ crop: '500x100@700x400' }\"\n/>\n\n<!-- using focus auto -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat.jpg\"\n  :modifiers=\"{ focus: 'auto', crop: '500x100' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Cloudimage with Specific URL Format\nDESCRIPTION: Example of configuring Cloudimage with a specific domain and path structure for the baseURL in the Nuxt config.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudimage.md#2025-04-21_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudimage: {\n      token: 'demo',\n      baseURL: 'sample.li'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using Bunny Provider with NuxtImg Component\nDESCRIPTION: Example of using the Bunny provider with NuxtImg component, demonstrating image optimization parameters like height, width, and quality.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/bunny.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"bunny\"\n  src=\"https://bunnyoptimizerdemo.b-cdn.net/bunny1.jpg\"\n  height=\"512\"\n  width=\"512\"\n  :quality=\"90\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Overlaying Image with ImageKit using Raw Parameter\nDESCRIPTION: Complex example demonstrating how to overlay an image on top of another (base) image using ImageKit's layer concept with the raw parameter.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_7\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    provider=\"imagekit\"\n    src=\"/default-image.jpg\"\n    :modifiers=\"modifiers\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nconst modifiers = {\n  raw: 'l-image,i-default-image.jpg,w-300,h-200,b-5_FFFFFF,fo-top_left,l-end'\n}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple TwicPics Parameters in Nuxt Image\nDESCRIPTION: Examples demonstrating how to combine multiple TwicPics transformations and how the order of parameters affects the final image output. The order of modifiers is significant as transformations are applied sequentially.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_16\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  :modifiers=\"{ cover: '16:9', focus: 'auto', turn: 'left' }\"\n/>\n```\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  fit=\"fill\"\n  :modifiers=\"{ focus: 'auto', turn: 'left', cover: '16:9' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg Component with Caisy Provider\nDESCRIPTION: Example of using NuxtImg component with Caisy provider, demonstrating how to set image dimensions, quality, and source URL.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/caisy.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"caisy\"\n  src=\"https://assets.caisy.io/assets/b76210be-a043-4989-98df-ecaf6c6e68d8/056c27e2-81f5-4cd3-b728-cef181dfe7dc/d83ea6f0-f90a-462c-aebd-b8bc615fdce0pexelsmiguelapadrinan1591056.jpg\"\n  height=\"512\"\n  width=\"512\"\n  :quality=\"90\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Advanced Sharp API Transforms with Directus Provider\nDESCRIPTION: Advanced example of using the sharp API transforms through the Directus provider. Shows how to apply multiple transforms like blur and negate effects within the modifiers property.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/directus.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"directus\"\n  src=\"ad514db1-eb90-4523-8183-46781437e7ee\"\n  :modifiers=\"{\n    height: '512',\n    withoutEnlargement: 'true',\n    transforms: [['blur', 4], ['negate']]\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Gumlet with NuxtImg Component (Vue)\nDESCRIPTION: This example demonstrates how to use the NuxtImg component with Gumlet as the provider. It includes width, height, fit, and custom modifiers for format and compression.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/gumlet.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"gumlet\"\n  src=\"/sea.jpeg\"\n  width=\"300\"\n  height=\"500\"\n  fit=\"cover\"\n  :modifiers=\"{ format: 'auto', compress: 'true' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Cloudimage Configuration with Alternative URL Formats\nDESCRIPTION: Examples showing different valid formats for the baseURL parameter when configuring Cloudimage in Nuxt.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudimage.md#2025-04-21_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudimage: {\n      token: 'demo',\n      baseURL: 'sample.li/images',\n      baseURL: 'https://sample.li/images',\n      baseURL: '_sl_' // alias defined in your Cloudimage storage settings\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudflare Provider in Nuxt Config\nDESCRIPTION: Configuration setup for Cloudflare image provider in Nuxt application. Specifies the base URL for the Cloudflare zone where images will be served from.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudflare.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudflare: {\n      baseURL: 'https://that-test.site'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Domains for Netlify Image Provider\nDESCRIPTION: Configuration to allow transformation of images from specific external domains using Netlify provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/netlify.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    provider: 'netlify',\n    domains: ['images.example.com']\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring ImageEngine Provider in Nuxt\nDESCRIPTION: Basic configuration for the ImageEngine provider in Nuxt Image module. The minimum requirement is setting the baseURL to your ImageEngine Delivery Address in the Nuxt configuration file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imageengine.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    imageengine: {\n      baseURL: 'https://xxxxx.imgeng.in'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Contentful Provider in Nuxt Image\nDESCRIPTION: Basic configuration snippet for enabling Contentful integration with Nuxt Image module. This configuration is added to the nuxt.config.ts file, specifying an empty contentful object to enable the provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/contentful.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    contentful: {}\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Glide Provider in Nuxt Config\nDESCRIPTION: Configuration code for setting up Glide image processing provider in Nuxt application. Requires specifying the baseURL of the Glide service in the image module configuration.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/glide.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    glide: {\n      // baseURL of your Laravel application\n      baseURL: 'https://glide.herokuapp.com/1.0'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using ImageEngine Crop Modifier with NuxtImg\nDESCRIPTION: Example showing how to crop an image using ImageEngine's crop directive. The image is cropped to 100x80 pixels, starting from coordinates 10px from top and 20px from left.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imageengine.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imageengine\"\n  src=\"/some-image.jpg\"\n  width=\"100\"\n  height=\"80\"\n  :modifiers=\"{ cr: '100,80,10,20' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Contain Fit and Background Color\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to fit an image with contain fit and specifying a red background color for the letterboxing areas.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  fit=\"contain\"\n  height=\"600\"\n  width=\"300\"\n  background=\"red\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hygraph Provider in Nuxt Config\nDESCRIPTION: Configuration setup for integrating Hygraph image provider with Nuxt Image module. Requires specifying the base URL of your Hygraph project including subdomain and base ID.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/hygraph.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    hygraph: {\n      baseURL: 'https://<subdomain>.graphassets.com/<baseid>'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Fastly Integration in Nuxt.config.ts\nDESCRIPTION: This snippet demonstrates how to configure the Fastly integration for the Nuxt Image module in the nuxt.config.ts file. It specifies the base URL for the Fastly service.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/fastly.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    fastly: {\n      baseURL: 'https://www.fastly.io'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Directus Provider in Nuxt Config\nDESCRIPTION: Basic configuration example for setting up Directus as an image provider in Nuxt. Specifies the base URL pointing to the Directus assets directory.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/directus.md#2025-04-21_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    directus: {\n      // This URL needs to include the final `assets/` directory\n      baseURL: 'http://localhost:8055/assets'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Rotating Images with ImageKit\nDESCRIPTION: Example of how to rotate an image using ImageKit. The rotate parameter accepts values like 0, 90, 180, 270, 360, or auto.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  :modifiers=\"{ rotate: 90 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Sanity Provider in Nuxt Config (TypeScript)\nDESCRIPTION: This snippet shows how to configure the Sanity provider in the Nuxt configuration file. It demonstrates setting the required projectId and optional dataset.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sanity.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    sanity: {\n      projectId: 'yourprojectid',\n      // Defaults to 'production'\n      // dataset: 'development'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Directus Provider Options\nDESCRIPTION: Advanced configuration for the Directus provider that includes custom modifiers and transforms. Shows how to set withoutEnlargement option and apply blur and negate transforms.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/directus.md#2025-04-21_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    directus: {\n      baseURL: 'http://mydirectus-domain.com/assets',\n      modifiers: {\n        withoutEnlargement: 'true',\n        transforms: [['blur', 4], ['negate']]\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Applying Blur Effect with ImageKit\nDESCRIPTION: Usage example showing how to implement blur effect on an image using ImageKit provider. The blur parameter accepts values from 1 to 100.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  :modifiers=\"{ blur: 10 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Background Color with ImageKit\nDESCRIPTION: Example showing how to specify a background color for an image when using pad_extract fit mode in ImageKit.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  height=\"1200\"\n  width=\"1200\"\n  fit=\"pad_extract\"\n  :modifiers=\"{ bg: '272B38' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Sirv Base URL in Nuxt Config\nDESCRIPTION: Configuration setup for Sirv provider in Nuxt Image module by specifying the Sirv baseURL in nuxt.config.ts\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    sirv: {\n      baseURL: 'https://youralias.sirv.com'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudimage Provider in Nuxt Config\nDESCRIPTION: Basic configuration for integrating Cloudimage with Nuxt Image by specifying the required token and baseURL in nuxt.config.ts file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudimage.md#2025-04-21_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudimage: {\n      token: 'your_cloudimage_token',\n      baseURL: 'origin_image_url' // or alias\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Netlify Provider in Nuxt\nDESCRIPTION: Basic configuration to enable Netlify as the image provider in Nuxt config file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/netlify.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    provider: 'netlify'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Gumlet in Nuxt Config (TypeScript)\nDESCRIPTION: This snippet shows how to configure Gumlet in the Nuxt configuration file. It specifies the base URL for the Gumlet service.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/gumlet.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    gumlet: {\n      baseURL: 'https://demo.gumlet.io'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudimage with API Version for Older Tokens\nDESCRIPTION: Demonstration of setting up Cloudimage with API version for tokens created before October 20, 2021, which require specifying v7 as the apiVersion.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudimage.md#2025-04-21_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudimage: {\n      token: 'demo',\n      baseURL: 'sample.li',\n      apiVersion: 'v7'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Rounded Corners with ImageKit\nDESCRIPTION: Code snippet demonstrating how to add rounded corners to an image using the radius parameter in ImageKit.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  :modifiers=\"{ radius: 20 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Prismic Provider in Nuxt Config\nDESCRIPTION: Sets up Prismic as an image provider in the Nuxt configuration file. This configuration makes Prismic the default image provider for the Nuxt Image module.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/prismic.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    prismic: {}\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Prepr Provider in Nuxt Image\nDESCRIPTION: Basic configuration for integrating Prepr CMS with Nuxt Image. Requires specifying the project name that matches your Prepr instance URL.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/prepr.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    prepr: {\n      // E.g.: https://YourProjectName.prepr.io\n      projectName: 'YourProjectName'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Strapi Provider Options\nDESCRIPTION: Custom configuration for the Strapi provider in Nuxt Image, allowing you to override default settings such as the baseURL for image uploads.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/strapi.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    strapi: {\n      baseURL: 'http://localhost:1337/uploads'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Format with NuxtImg\nDESCRIPTION: Example of using NuxtImg component with Sirv provider to specify a custom image format\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"/example-image.jpg\"\n  width=\"300\"\n  format=\"webp\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Strapi Provider in Nuxt Image\nDESCRIPTION: Basic configuration to set Strapi as the default image provider in Nuxt Image module. No specific configuration is required beyond specifying 'strapi' in your Nuxt configuration.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/strapi.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    strapi: {}\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Bunny Provider in Nuxt Config\nDESCRIPTION: Configuration setup for enabling Bunny CDN integration with Nuxt Image module in the Nuxt configuration file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/bunny.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    bunny: {}\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Text Overlay with ImageKit\nDESCRIPTION: Example of adding text overlay to an image with customized styling using ImageKit's layer functionality.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_8\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    provider=\"imagekit\"\n    src=\"/default-image.jpg\"\n    :modifiers=\"modifiers\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nconst modifiers = {\n  raw: 'l-text,i-overlay made easy,fs-45,co-000000,bg-FFFFFF80,r-30,pa-40,l-end'\n}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Rotating Images\nDESCRIPTION: Example of using the rotate modifier to change image orientation\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"/example-image.jpg\"\n  :modifiers=\"{ rotate: 90 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Starting Nuxt 3 Development Server\nDESCRIPTION: Commands to start the Nuxt 3 development server on http://localhost:3000 using different package managers. This is used during the development process.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm run dev\n\n# pnpm\npnpm run dev\n\n# yarn\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Aliyun Provider in Nuxt\nDESCRIPTION: Configuration setup for Aliyun CDN provider in nuxt.config.ts. Specifies the base URL for the Aliyun service.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/aliyun.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    aliyun: {\n      baseURL: 'https://that-test.site'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Watermark Overlay\nDESCRIPTION: Example of adding a watermark image overlay with positioning and size options\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_7\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"example-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{\n    watermark: '/watermark-v1.png',\n    watermarkPosition: 'center',\n    watermarkWidth: '30%'\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Building Nuxt 3 Application for Production\nDESCRIPTION: Commands to build the Nuxt 3 application for production deployment using different package managers. This creates optimized files for a production environment.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm run build\n\n# pnpm\npnpm run build\n\n# yarn\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Configuring Caisy Provider in Nuxt Config\nDESCRIPTION: Basic configuration setup for enabling Caisy image provider in Nuxt project configuration file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/caisy.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    caisy: {}\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Cloudinary Image with Overlay Example\nDESCRIPTION: Complete example showing how to add text overlay to an image using Cloudinary modifiers.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudinary.md#2025-04-21_snippet_8\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <NuxtImg\n    provider=\"cloudinary\"\n    src=\"/remote/nuxt-org/blog/going-full-static/main.png\"\n    width=\"100\"\n    height=\"100\"\n    fit=\"thumb\"\n    :modifiers=\"modifiers\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nconst modifiers = {\n  gravity: 'north',\n  overlay: 'text:default_style:Hello+World'\n}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Storyblok Provider in Nuxt Config (TypeScript)\nDESCRIPTION: This snippet shows how to configure the Storyblok provider in the Nuxt configuration file. It sets the base URL for the Storyblok image service.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    storyblok: {\n      baseURL: 'https://a.storyblok.com'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Changing Image Format with NuxtImg Component (Vue)\nDESCRIPTION: This snippet demonstrates how to change the image format to WebP using the NuxtImg component with the Storyblok provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/storyblok.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"storyblok\"\n  src=\"https://a.storyblok.com/f/39898/3310x2192/e4ec08624e/demo-image.jpeg\"\n  width=\"200\"\n  format=\"webp\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Netlify Image Modifiers with NuxtImg Component\nDESCRIPTION: Example of using NuxtImg component with Netlify-specific modifiers and standard image transformation options.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/netlify.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"netlify\"\n  src=\"owl.jpg\"\n  height=\"400\"\n  width=\"600\"\n  fit=\"cover\"\n  format=\"webp\"\n  quality=\"80\"\n  :modifiers=\"{ position: 'left' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Responsive Breakpoint with Strapi Provider\nDESCRIPTION: Example of using NuxtImg component with Strapi provider while specifying a breakpoint modifier. This utilizes Strapi's responsive image sizes like 'small', 'medium', or 'large'.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/strapi.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"strapi\"\n  src=\"...\"\n  :modifiers=\"{ breakpoint: 'small' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Converting Image to Grayscale with ImageKit\nDESCRIPTION: Example demonstrating how to convert an image to grayscale using ImageKit's effectGray modifier.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  height=\"300\"\n  :modifiers=\"{ effectGray: true }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom CDN for Uploadcare in Nuxt\nDESCRIPTION: Configuration example for setting up a custom CDN domain for Uploadcare in the Nuxt Image module. This allows using a branded domain instead of the default ucarecdn.com.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/uploadcare.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    uploadcare: {\n      cdnURL: 'cdn.mycompany.com'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using zoom Modifier with TwicPics in Nuxt Image\nDESCRIPTION: Examples of using the zoom modifier to enlarge portions of images. The zoom modifier accepts a numeric factor equal to or greater than 1 and can be combined with focus to specify which part of the image to zoom into.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_15\n\nLANGUAGE: vue\nCODE:\n```\n<!-- zooms into image by a factor 1.5 -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cherry-3.jpg\"\n  :modifiers=\"{ zoom: 1.5 }\"\n/>\n\n<!-- zooms into image by a factor 3 -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cherry-3.jpg\"\n :modifiers=\"{ zoom: 3 }\"\n/>\n\n<!-- zooms into image by a factor 3 in direction of the focus-->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cherry-3.jpg\"\n :modifiers=\"{ focus: 'auto', zoom: 3 }\"\n/>\n\n<!-- zooms into image by a factor 3 in direction of the focus-->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cherry-3.jpg\"\n :modifiers=\"{ focus: '200x200', zoom: 3 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Twicpics Provider in Nuxt\nDESCRIPTION: Configuration for the Twicpics provider in nuxt.config.ts, specifying the baseURL which should be set to your Twicpics domain.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    twicpics: {\n      baseURL: 'https://<your-twicpics-domain>',\n      // Feel free to use our demo domain to try the following examples.\n      // baseUrl: 'https://demo.twic.pics'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Border to Images with ImageKit\nDESCRIPTION: Code snippet showing how to add a border with specified width and color to an image using ImageKit.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{ border: '20_FF0000' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Converting Image to Grayscale\nDESCRIPTION: Implementation of color manipulation using the grayscale modifier\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"/example-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{ grayscale: true }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with AVIF Format\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to specify AVIF as the output image format.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  format=\"avif\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Sirv Profile Modifier\nDESCRIPTION: Implementation of Sirv profiles to combine multiple transformation options in a single parameter\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"/example-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{ profile: 'my-profile' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Preview Format\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to generate a blurry preview of the image in SVG format.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  format=\"preview\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Preserving Image Metadata with ImageEngine\nDESCRIPTION: Example demonstrating how to instruct ImageEngine to preserve EXIF metadata in an image, which is normally removed to reduce file size. The meta directive is set to 'true' to enable this behavior.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imageengine.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imageengine\"\n  src=\"/some-image.jpg\"\n  width=\"100\"\n  height=\"80\"\n  :modifiers=\"{ meta: 'true' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Quality Setting\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to set the image quality to a low value of 1.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_7\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/cat_1x1.jpg\"\n  quality=\"1\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Applying Image Sharpening Effect\nDESCRIPTION: Example of using the sharpen modifier to enhance image sharpness\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"/example-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{ sharpen: 50 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Provider Modifiers\nDESCRIPTION: Configuration to set default modifiers for a specific provider. These modifiers will be applied to all images using this provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/2.configuration.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    provider: 'cloudinary',\n    cloudinary: {\n      baseURL: 'https://res.cloudinary.com/<company>/image/fetch',\n      modifiers: {\n        effect: 'sharpen:100',\n        quality: 'auto:best'\n      }\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Flip Modifier\nDESCRIPTION: Examples of using NuxtImg with Twicpics provider and flip modifier in different directions: both horizontal and vertical, horizontal only, and vertical only.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_11\n\nLANGUAGE: vue\nCODE:\n```\n<!-- horizontal and vertical -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/puppy.jpg\"\n  :modifiers=\"{ flip: 'both' }\"\n/>\n\n<!-- horizontal -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/puppy.jpg\"\n  :modifiers=\"{ flip: 'x' }\"\n/>\n\n<!-- vertical -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/puppy.jpg\"\n  :modifiers=\"{ flip: 'y' }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding Frame to Images\nDESCRIPTION: Implementation of frame/border modifications with customizable style, color, and width options\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"/example-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{\n    frameStyle: 'solid',\n    frameColor: '00000',\n    frameWidth: '2',\n    frameRimColor: '97A6B1',\n    frameRimWidth: '2'\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Nuxt Image Module using yarn\nDESCRIPTION: Command to install the @nuxt/image module as a dependency using yarn package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Using truecolor Modifier with TwicPics in Nuxt Image\nDESCRIPTION: Examples of how to use the truecolor modifier to control color quantization in PNG images. Setting truecolor to true prevents color quantization, which preserves image quality at the expense of larger file sizes.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_13\n\nLANGUAGE: vue\nCODE:\n```\n<!-- disallowes color quantization -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/peacock.jpg\"\n  format=\"png\"\n  :modifiers=\"{ truecolor: true }\"\n/>\n\n<!-- allowes color quantization (default value) -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/peacock.jpg\"\n  format=\"png\"\n  :modifiers=\"{ truecolor: false }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Enhancing Image Contrast with ImageKit\nDESCRIPTION: Code snippet showing how to enhance the contrast of an image using ImageKit's effectContrast modifier.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_9\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  height=\"300\"\n  :modifiers=\"{ effectContrast: true }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Nuxt Image Module using bun\nDESCRIPTION: Command to install the @nuxt/image module as a dependency using bun package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbun add @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Uploadcare Image Modifiers Type Definitions in TypeScript\nDESCRIPTION: TypeScript type definitions for the modifiers supported by Uploadcare. Includes options for image compression, geometry adjustments, and other transformations available through Uploadcare's API.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/uploadcare.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Image Compression\nformat: 'jpeg' | 'png' | 'webp' | 'auto'\nquality: 'smart' | 'smart_retina' | 'normal' | 'better' | 'best' | 'lighter' | 'lightest'\nprogressive: 'yes' | 'no'\nstrip_meta: 'all' | 'none' | 'sensitive'\n\n// Image Geometry\npreview: `${number}x${number}` // Height x Width\nresize: `${number}x${number}` | `${number}x`| `x${number}` \nsmart_resize: `${number}x${number}`\ncrop: string | string[]\nscale_crop: string | string[]\nborder_radius: string | string[]\nsetfill: string // 3, 6 or 8 digit hex color\nzoom_objects: string // 1 to 100\n```\n\n----------------------------------------\n\nTITLE: Sharpening Images with ImageKit\nDESCRIPTION: Example of applying sharpening effect to an image using ImageKit's effectSharpen modifier with a specified intensity.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/imagekit.md#2025-04-21_snippet_10\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"imagekit\"\n  src=\"/default-image.jpg\"\n  height=\"300\"\n  :modifiers=\"{ effectSharpen: 10 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Nuxt Image Module using npm\nDESCRIPTION: Command to upgrade the @nuxt/image module to the latest version using npm package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpm up @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Nuxt Image Module using npm\nDESCRIPTION: Command to install the @nuxt/image module as a dependency using npm package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Using NuxtImg with Background for Transparent Images\nDESCRIPTION: Example of using NuxtImg with Twicpics provider to set a red background color for transparent areas in a PNG image.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_8\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/icon-500.png\"\n  background=\"red\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Nuxt Image Module using yarn\nDESCRIPTION: Command to upgrade the @nuxt/image module to the latest version using yarn package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nyarn upgrade @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Nuxt Image Module using pnpm\nDESCRIPTION: Command to install the @nuxt/image module as a dependency using pnpm package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Using turn Modifier with TwicPics in Nuxt Image\nDESCRIPTION: Examples of applying the turn modifier to rotate images with TwicPics. The turn modifier accepts angles in degrees or predefined expressions like 'left', 'right', or 'flip' to change the orientation of images.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/twicpics.md#2025-04-21_snippet_14\n\nLANGUAGE: vue\nCODE:\n```\n<!-- turns image at -90° -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  :modifiers=\"{ turn: 'left' }\"\n/>\n\n<!-- turns image at 180° -->\n<NuxtImg\n  provider=\"twicpics\"\n  src=\"/football.jpg\"\n  :modifiers=\"{ turn: 180 }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Upgrading Nuxt Image Module using bun\nDESCRIPTION: Command to upgrade the @nuxt/image module to the latest version using bun package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nbun update @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Opting into Edge Channel of Nuxt Image Module\nDESCRIPTION: Package.json diff showing how to switch from the stable release to the nightly/edge channel of the @nuxt/image module.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"devDependencies\": {\n-   \"@nuxt/image\": \"^1.0.0\"\n+   \"@nuxt/image\": \"npm:@nuxt/image-nightly@latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Text Overlay\nDESCRIPTION: Implementation of text overlays with customizable positioning, styling, and background options\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_8\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"sirv\"\n  src=\"example-image.jpg\"\n  width=\"300\"\n  :modifiers=\"{\n    text: 'Hello there',\n    textAlign: 'center',\n    textPositionGravity: 'south',\n    textBackgroundColor: '#ffff',\n    textSize: 60,\n    textFontFamily: 'Arial',\n    textColor: 'white'\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Recreating Lockfile for Nuxt Project\nDESCRIPTION: Command to force upgrade a Nuxt project and recreate the lockfile, which can help resolve dependency issues.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnpx nuxi@latest upgrade --force\n```\n\n----------------------------------------\n\nTITLE: Upgrading Nuxt Image Module using pnpm\nDESCRIPTION: Command to upgrade the @nuxt/image module to the latest version using pnpm package manager.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\npnpm up @nuxt/image\n```\n\n----------------------------------------\n\nTITLE: Using Default Image Size with Strapi Provider\nDESCRIPTION: Example of using NuxtImg component with Strapi provider without specifying a breakpoint, which will use the original image size.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/strapi.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg\n  provider=\"strapi\"\n  src=\"...\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Checking Code Style with Linter\nDESCRIPTION: Command to run the linter to ensure code adheres to the project's style guidelines.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/4.contributing.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\n```\n\n----------------------------------------\n\nTITLE: Previewing Nuxt 3 Production Build Locally\nDESCRIPTION: Commands to locally preview the production build of a Nuxt 3 application using different package managers. This allows testing the production build before deployment.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm run preview\n\n# pnpm\npnpm run preview\n\n# yarn\nyarn preview\n```\n\n----------------------------------------\n\nTITLE: Starting Documentation in Development Mode\nDESCRIPTION: Command to start the documentation site in development mode for making and previewing documentation changes.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/4.contributing.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm docs:dev\n```\n\n----------------------------------------\n\nTITLE: Using Custom Provider in Vue Template\nDESCRIPTION: Example of using the custom image provider in a Vue template with the NuxtImg component.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/4.advanced/1.custom-provider.md#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<NuxtImg provider=\"myProvider\" src=\"/image.png\" >\n<!-- <img src=\"https://site.com/image.png\"> -->\n```\n\n----------------------------------------\n\nTITLE: Customizing Cloudimage CDN URL in Nuxt Config\nDESCRIPTION: Example of overriding the default CDN URL structure by explicitly setting the cdnURL parameter for Cloudimage provider.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/cloudimage.md#2025-04-21_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    cloudimage: {\n      cdnURL: 'https://demo.cloudimg.io/v7'\n    }\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Opting out from Edge Channel of Nuxt Image Module\nDESCRIPTION: Package.json diff showing how to switch back from the nightly/edge channel to the stable release of the @nuxt/image module.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/1.installation.md#2025-04-21_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"devDependencies\": {\n-   \"@nuxt/image\": \"npm:@nuxt/image-nightly@latest\"\n+   \"@nuxt/image\": \"^1.0.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Filerobot Provider in Nuxt Image Module\nDESCRIPTION: This code snippet shows how to configure the Filerobot provider in the Nuxt configuration file. You need to specify the base URL of your Filerobot project with your specific slug.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/filerobot.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    filerobot: {\n      baseURL: 'https://<slug>.filerobot.com/',\n    },\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Starting Nuxt Image Playground in Development Mode\nDESCRIPTION: Command to start the Nuxt Image playground in development mode for testing changes.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/4.contributing.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Image Transformation Parameters Table in Markdown\nDESCRIPTION: Markdown table listing all supported image transformation parameters for Sirv's Nuxt Image integration, including parameter names, their API equivalents, and descriptions.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/sirv.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Supported Parameter Name | Translates to Parameter    | Description                                                                                           |\n| ------------------------ | -------------------------- | ----------------------------------------------------------------------------------------------------- |\n| width                    | w                          | Width of image.                                                                                       |\n| height                   | h                          | Height of image.                                                                                      |\n| s                        | s                          | Resize the image by its biggest side                                                                  |\n| quality                  | q                          | JPEG image quality (percentage).                                                                      |\n| fit                      | scale.option               | Image scaling options.                                                                                |\n| profile                  | profile                    | Apply a Sirv [profile](https://sirv.com/help/articles/dynamic-imaging/profiles)                      |\n| format                   | format                     | Image format served (defaults to [optimal](https://sirv.com/help/articles/dynamic-imaging/#optimal)). |\n| webpFallback             | webp-fallback              | Image format for browsers without WebP support.                                                       |\n| subsampling              | subsampling                | Chroma subsampling to reduce JPEG file size.                                                          |\n| gifCompression           | gif.lossy                  | Apply lossy compression, to reduce GIF file size.                                                     |\n```\n\n----------------------------------------\n\nTITLE: Building Nuxt Image for Production\nDESCRIPTION: Command to build the project for production, which should be run before creating a PR to ensure there are no build errors.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/4.contributing.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Configuring Domain Whitelist in Nuxt with TypeScript\nDESCRIPTION: Configuration example showing how to whitelist external domains for image processing in Nuxt config file.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/3.providers/aws-amplify.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  image: {\n    domains: ['avatars0.githubusercontent.com']\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format\nDESCRIPTION: Standard format for documenting version changes in the Nuxt Image module, following conventional commit guidelines with sections for enhancements, fixes, documentation, and other updates.\nSOURCE: https://github.com/nuxt/image/blob/main/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## v1.10.0\n\n[compare changes](https://github.com/nuxt/image/compare/v1.9.0...v1.10.0)\n\n### 🚀 Enhancements\n\n- **imageengine:** Add new modifiers (#1701)\n- **filerobot:** Add new provider (#1680)\n\n### 🩹 Fixes\n\n- **NuxtImg:** Do not access `props` in template (e2e61fa)\n- **NuxtPicture:** Make `img-attrs` and `attrs` responsive (#1696)\n```\n\n----------------------------------------\n\nTITLE: Running Nuxt Image Tests\nDESCRIPTION: Command to run the test suite to verify changes don't break existing functionality.\nSOURCE: https://github.com/nuxt/image/blob/main/docs/content/1.get-started/4.contributing.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n```"
  }
]
[
  {
    "owner": "pytest-dev",
    "repo": "pytest-timeout",
    "content": "TITLE: Using the Timeout Decorator in Python Tests\nDESCRIPTION: Example of how to use the pytest.mark.timeout decorator to set a timeout for an individual test. This decorator overrides any global timeout settings when specified.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n@pytest.mark.timeout(60)\ndef test_foo():\n    pass\n```\n\n----------------------------------------\n\nTITLE: Full Timeout Marker API Usage\nDESCRIPTION: The complete signature of the timeout marker, showing how it can be used with both positional and keyword arguments for timeout value and method.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\npytest.mark.timeout(timeout=0, method=DEFAULT_METHOD)\n```\n\n----------------------------------------\n\nTITLE: Configuring Timeout in Pytest Configuration File\nDESCRIPTION: Example of how to set a global timeout in the pytest configuration file using the timeout option.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\n[pytest]\ntimeout = 300\n```\n\n----------------------------------------\n\nTITLE: Configuring pytest-timeout in INI Files\nDESCRIPTION: Example of setting the session timeout configuration in pytest's INI file. This establishes a 10-minute (600 second) session timeout for all tests.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_8\n\nLANGUAGE: ini\nCODE:\n```\n[pytest]\nsession_timeout = 600\n```\n\n----------------------------------------\n\nTITLE: Using Timeout with Function-Only Option\nDESCRIPTION: Example of how to use the timeout decorator with the func_only parameter set to True, which applies the timeout only to the test function and not to fixtures.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@pytest.mark.timeout(60, func_only=True)\ndef test_foo():\n    pass\n```\n\n----------------------------------------\n\nTITLE: Using Timeout with Thread Method Specification\nDESCRIPTION: Example of how to use the timeout decorator with an explicit timeout method specification, which overrides the default method used by the plugin.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@pytest.mark.timeout(method=\"thread\")\ndef test_foo():\n    pass\n```\n\n----------------------------------------\n\nTITLE: Using is_debugging for Debugger Detection in Python\nDESCRIPTION: Example of using is_debugging() function to detect if a debugger is active during timeout handling. This allows tests to avoid timeout failures when a user is actively debugging.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nimport pytest\nimport pytest_timeout\n\n\ndef on_timeout():\n    if pytest_timeout.is_debugging():\n        return\n    pytest.fail(\"+++ Timeout +++\")\n```\n\n----------------------------------------\n\nTITLE: Defining pytest_timeout_set_timer Hook in Python\nDESCRIPTION: Hook specification for setting up timeout functionality. This hook can be overridden by plugins for alternative timeout implementation strategies. It receives a pytest node item and settings configuration.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@pytest.hookspec(firstresult=True)\ndef pytest_timeout_set_timer(item, settings):\n    \"\"\"Called at timeout setup.\n\n    'item' is a pytest node to setup timeout for.\n\n    'settings' is Settings namedtuple (described below).\n\n    Can be overridden by plugins for alternative timeout implementation strategies.\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining pytest_timeout_cancel_timer Hook in Python\nDESCRIPTION: Hook specification for tearing down timeout functionality. This hook can be overridden by plugins for alternative timeout implementation strategies and receives the pytest node item.\nSOURCE: https://github.com/pytest-dev/pytest-timeout/blob/main/README.rst#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@pytest.hookspec(firstresult=True)\ndef pytest_timeout_cancel_timer(item):\n    \"\"\"Called at timeout teardown.\n\n    'item' is a pytest node which was used for timeout setup.\n\n    Can be overridden by plugins for alternative timeout implementation strategies.\n    \"\"\"\n```"
  }
]
[
  {
    "owner": "codeigniter4",
    "repo": "codeigniter4",
    "content": "TITLE: Creating New CodeIgniter 4 Project with Composer\nDESCRIPTION: Use Composer to create a new CodeIgniter 4 project using the app starter. This command creates a new project folder with the latest released version of the framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer create-project codeigniter4/appstarter project-root\n```\n\n----------------------------------------\n\nTITLE: Creating a Migration in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:migration generator to create a new migration file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_10\n\nLANGUAGE: console\nCODE:\n```\nmake:migration <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Setting Database Group for Migration\nDESCRIPTION: Example demonstrating how to specify which database group a migration should run against by setting the $DBGroup property.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Database\\Migrations;\n\nuse CodeIgniter\\Database\\Migration;\n\nclass AddBlog extends Migration\n{\n    protected $DBGroup = 'alternate_db_group';\n\n    public function up()\n    {\n        // ...\n    }\n\n    public function down()\n    {\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Multiple Database Connections in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to configure multiple database connections in CodeIgniter 4, allowing for connections to different databases or environments (e.g., development, production, test).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\npublic $test = [\n    'DSN'      => '',\n    'hostname' => 'localhost',\n    'username' => 'root',\n    'password' => '',\n    'database' => 'database_name',\n    'DBDriver' => 'MySQLi',\n    'DBPrefix' => 'db_',  // Needed to ensure we're getting the correct config\n    'pConnect' => false,\n    'DBDebug'  => true,\n    'charset'  => 'utf8',\n    'DBCollat' => 'utf8_general_ci',\n    'swapPre'  => '',\n    'encrypt'  => false,\n    'compress' => false,\n    'strictOn' => false,\n    'failover' => [],\n];\n```\n\n----------------------------------------\n\nTITLE: Forcing HTTPS in CodeIgniter 4\nDESCRIPTION: Using the force_https() function in CodeIgniter 4 to redirect HTTP requests to HTTPS.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/security.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nforce_https()\n```\n\n----------------------------------------\n\nTITLE: Basic Transaction Example in CodeIgniter\nDESCRIPTION: Basic example of running database queries within a transaction using transStart() and transComplete() methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transStart();\n\n$this->db->query('AN SQL QUERY...');\n$this->db->query('ANOTHER QUERY...');\n\n$this->db->transComplete();\n```\n\n----------------------------------------\n\nTITLE: Manual Transaction Management\nDESCRIPTION: Example of manually managing transactions using transBegin(), transCommit(), and transRollback() methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nif ($this->db->transBegin()) {\n    $this->db->query('AN SQL QUERY...');\n    $this->db->query('ANOTHER QUERY...');\n\n    if ($this->db->transStatus() === false) {\n        $this->db->transRollback();\n    } else {\n        $this->db->transCommit();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding CodeIgniter 4 to Existing Project\nDESCRIPTION: Use this Composer command to add CodeIgniter 4 as a dependency to an existing project.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require codeigniter4/framework\n```\n\n----------------------------------------\n\nTITLE: Getting Row as Array\nDESCRIPTION: Shows how to get a single row as an array\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$row = $query->getRowArray();\n```\n\n----------------------------------------\n\nTITLE: URI Segment Parameters Example in CodeIgniter 4\nDESCRIPTION: Demonstrates how to access URI segments as method parameters in a controller method, using the example of a products/shoes URL structure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\npublic function passes($sandals, $id) {\n    echo $sandals;\n    echo $id;\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Token Randomization for CSRF Protection\nDESCRIPTION: Configuration code that enables token randomization to mitigate compression side-channel attacks like BREACH and prevent attackers from guessing CSRF tokens.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic bool $tokenRandomize = true;\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables\nDESCRIPTION: Demonstrates different methods to access environment variables in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$s3 = getenv('S3_BUCKET');\n$s3 = $_ENV['S3_BUCKET'];\n$s3 = $_SERVER['S3_BUCKET'];\n```\n\n----------------------------------------\n\nTITLE: Retrieving Query Results as Objects with getResult()\nDESCRIPTION: Example of using getResult() in a foreach loop to get query results as an array of objects\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\nforeach ($query->getResult() as $row) {\n    echo $row->title;\n    echo $row->name;\n    echo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CSRF Token Regeneration in CodeIgniter 4\nDESCRIPTION: Configuration setting to control whether CSRF tokens are regenerated on every submission (default) or kept the same throughout the session lifetime.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic bool $regenerate = true;\n```\n\n----------------------------------------\n\nTITLE: Initializing CodeIgniter 4 Database Class\nDESCRIPTION: Loads and initializes the database class based on configuration settings. This snippet demonstrates how to get started with database operations in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$db = \\Config\\Database::connect();\n\n// Option 1: Get the database object\n$db = db_connect();\n\n// Option 2: Get the database object by passing in the group name\n$db = \\Config\\Database::connect('group_name');\n```\n\n----------------------------------------\n\nTITLE: Implementing Setup and Teardown Methods in Database Tests\nDESCRIPTION: Example showing proper implementation of setUp and tearDown methods while maintaining parent functionality.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\n\nclass MyTests extends CIUnitTestCase\n{\n    use DatabaseTestTrait;\n\n    protected function setUp()\n    {\n        parent::setUp();\n\n        // Extra setup stuff here\n    }\n\n    protected function tearDown()\n    {\n        parent::tearDown();\n\n        // Extra cleanup stuff here\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Timer in CodeIgniter 4 PHP\nDESCRIPTION: Demonstrates how to use the timer() function to benchmark code execution time.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Start timing\ntimer('render view');\n\n// Do something...\n$view = view('users', $data);\n\n// Stop timing\n$time = timer('render view');\n```\n\n----------------------------------------\n\nTITLE: Getting IP Address in CodeIgniter 4\nDESCRIPTION: Gets the IP address of the current user. Returns '0.0.0.0' if the IP address is not valid. Takes into account proxy IPs configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$ipAddress = $request->getIPAddress();\n```\n\n----------------------------------------\n\nTITLE: Creating a Seeder in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:seeder generator to create a new seeder file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_8\n\nLANGUAGE: console\nCODE:\n```\nmake:seeder <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Basic Email Sending with CodeIgniter\nDESCRIPTION: Demonstrates how to send an email using CodeIgniter's Email class with basic configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$email = \\Config\\Services::email();\n\n$email->setFrom('your@example.com', 'Your Name');\n$email->setTo('someone@example.com');\n\n$email->setSubject('Email Test');\n$email->setMessage('Testing the email class.');\n\n$email->send();\n```\n\n----------------------------------------\n\nTITLE: Specifying CodeIgniter 4 Framework Version in composer.json\nDESCRIPTION: Add this to your composer.json file to specify a particular version of the CodeIgniter 4 framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"require\": {\n    ...\n    \"codeigniter4/framework\": \"4.4.8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling CSRF Protection in CodeIgniter 4 Filter Configuration\nDESCRIPTION: This snippet shows how to enable CSRF protection globally in CodeIgniter 4 by configuring the Filters.php file. The configuration applies the CSRF filter to all POST, PUT, PATCH, and DELETE requests across all routes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_security.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $globals = [\n    'before' => [\n        // 'honeypot',\n        'csrf',\n        // 'invalidchars',\n    ],\n    'after' => [\n        'toolbar',\n        // 'honeypot',\n        // 'secureheaders',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Basic Database Seeder Structure in PHP\nDESCRIPTION: Demonstrates the basic structure of a database seeder class in CodeIgniter 4. It extends CodeIgniter\\Database\\Seeder and implements a run() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Database\\Seeds;\n\nuse CodeIgniter\\Database\\Seeder;\n\nclass SimpleSeeder extends Seeder\n{\n    public function run()\n    {\n        $data = [\n            'username' => 'darth',\n            'email'    => 'darth@theempire.com'\n        ];\n\n        // Using Query Builder\n        $this->db->table('users')->insert($data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating CodeIgniter 4 via Composer\nDESCRIPTION: This command updates the CodeIgniter 4 framework to the latest version. It should be run whenever there is a new release of the framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/README.md#2025-04-16_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer update\n```\n\n----------------------------------------\n\nTITLE: Connect to Specific Database Group\nDESCRIPTION: Establishes connection to a specific database group defined in the configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ndb_connect('group_name')\n```\n\n----------------------------------------\n\nTITLE: Valid Controller Class Structure\nDESCRIPTION: Shows the correct way to name and structure a controller class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Products extends BaseController\n{\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Precision for Timer Duration in CodeIgniter 4\nDESCRIPTION: Shows how to set the precision of the calculated duration in the timer data by specifying the number of decimal places as a parameter to getTimers().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$timers = $timer->getTimers(6);\n```\n\n----------------------------------------\n\nTITLE: Creating Seeder Files via Command Line\nDESCRIPTION: Shows how to generate seeder files using the command line interface in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nphp spark make:seeder user --suffix\n```\n\n----------------------------------------\n\nTITLE: Configuring DSN for Database Connection in CodeIgniter 4\nDESCRIPTION: This example demonstrates how to set up a database connection using a DSN (Data Source Name) string in CodeIgniter 4. It's particularly useful for database drivers that require a full DSN, such as PostgreSQL or OCI8.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN' => 'pgsql:host=localhost;port=5432;dbname=database_name;user=username;password=password',\n    'hostname' => '',\n    'username' => '',\n    'password' => '',\n    'database' => '',\n    'DBDriver' => 'Postgre',\n];\n```\n\n----------------------------------------\n\nTITLE: Retrieving JSON Data as Associative Array in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to retrieve JSON data as an associative array using the getJsonVar() method with the second parameter set to true.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$price = $request->getJsonVar('product.price', true);\n```\n\n----------------------------------------\n\nTITLE: Basic Caching Usage in Controllers (PHP)\nDESCRIPTION: Example showing common usage pattern for caching within CodeIgniter controllers. The example demonstrates how to check for cached content and save new content to cache.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/001.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Failovers in CodeIgniter 4\nDESCRIPTION: This example shows how to set up failover connections in CodeIgniter 4's database configuration. Failovers provide backup connection options if the primary connection fails.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN'      => '',\n    'hostname' => 'localhost',\n    'username' => 'root',\n    'password' => '',\n    'database' => 'database_name',\n    'DBDriver' => 'MySQLi',\n    'DBPrefix' => '',\n    'pConnect' => false,\n    'DBDebug'  => true,\n    'charset'  => 'utf8',\n    'DBCollat' => 'utf8_general_ci',\n    'swapPre'  => '',\n    'encrypt'  => false,\n    'compress' => false,\n    'strictOn' => false,\n    'failover' => [\n        [\n            'hostname' => 'localhost1',\n            'username' => '',\n            'password' => '',\n            'database' => '',\n            'DBDriver' => 'MySQLi',\n            'DBPrefix' => '',\n            'pConnect' => false,\n            'DBDebug'  => true,\n            'charset'  => 'utf8',\n            'DBCollat' => 'utf8_general_ci',\n            'swapPre'  => '',\n            'encrypt'  => false,\n            'compress' => false,\n            'strictOn' => false\n        ],\n        [\n            'hostname' => 'localhost2',\n            'username' => '',\n            'password' => '',\n            'database' => '',\n            'DBDriver' => 'MySQLi',\n            'DBPrefix' => '',\n            'pConnect' => false,\n            'DBDebug'  => true,\n            'charset'  => 'utf8',\n            'DBCollat' => 'utf8_general_ci',\n            'swapPre'  => '',\n            'encrypt'  => false,\n            'compress' => false,\n            'strictOn' => false\n        ]\n    ],\n    'port'     => 3306,\n];\n```\n\n----------------------------------------\n\nTITLE: Enabling Global CSRF Protection in Filters Configuration\nDESCRIPTION: Shows how to enable CSRF protection globally by adding the csrf filter to the global filters array in app/Config/Filters.php.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic array $globals = [\n    'before' => [\n        // 'honeypot',\n        'csrf',\n        // 'invalidchars',\n    ],\n    'after' => [\n        'toolbar',\n        // 'honeypot',\n        // 'secureheaders',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Creating Database Tables with Fields\nDESCRIPTION: Demonstrates table creation with field definitions including data types, constraints and defaults.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$fields = [\n    'id' => [\n        'type'           => 'INT',\n        'constraint'     => 5,\n        'unsigned'       => true,\n        'auto_increment' => true\n    ],\n];\n$forge->addField($fields);\n```\n\nLANGUAGE: php\nCODE:\n```\n$fields = [\n    'id' => [\n        'type'           => 'INT',\n        'constraint'     => 5,\n        'unsigned'       => true,\n        'auto_increment' => true\n    ],\n    'title' => [\n        'type'           => 'VARCHAR',\n        'constraint'     => '100',\n        'unique'         => true,\n    ],\n];\n$forge->addField($fields);\n```\n\n----------------------------------------\n\nTITLE: Creating Encryption Key in CodeIgniter 4\nDESCRIPTION: Demonstrates how to generate a cryptographically secure encryption key.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$key = Encryption::createKey(32);\n```\n\n----------------------------------------\n\nTITLE: Setting Validation Rules with Placeholders in PHP\nDESCRIPTION: Example showing how to properly set validation rules when using placeholders in CodeIgniter 4.3.5. Demonstrates the need to add validation rules for placeholder fields to ensure secure validation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_435.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$validation->setRules([\n    'email' => 'required|max_length[254]|valid_email|is_unique[users.email,id,{id}]',\n]);\n```\n\nLANGUAGE: php\nCODE:\n```\n$validation->setRules([\n    'id'    => 'max_length[19]|is_natural_no_zero', // Add this\n    'email' => 'required|max_length[254]|valid_email|is_unique[users.email,id,{id}]',\n]);\n```\n\n----------------------------------------\n\nTITLE: Creating Welcome Message Layout with Multiple Sections\nDESCRIPTION: Shows how to create a layout with multiple section placeholders, including a reusable page title section.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_layouts.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<!doctype html>\n<html>\n<head>\n    <title><?= $this->renderSection('page_title', true) ?></title>\n</head>\n<body>\n    <h1><?= $this->renderSection('page_title') ?><h1>\n    <p><?= $this->renderSection('content') ?></p>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Query with Multiple Results (Object Version) in CodeIgniter 4\nDESCRIPTION: Demonstrates how to execute a standard SQL query and retrieve multiple results as objects using the getResult() method. This approach allows accessing result properties using object notation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT title, name, date FROM my_table');\n\n$results = $query->getResult();\n\nforeach ($results as $row) {\n    echo $row->title;\n    echo $row->name;\n    echo $row->date;\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Database Existence in CodeIgniter 4\nDESCRIPTION: Demonstrates how to check if a specific database exists using the Database Utility Class. Returns a boolean value.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nif ($util->databaseExists('database_name'))\n{\n    // some code...\n}\n```\n\n----------------------------------------\n\nTITLE: Forcing HTTPS in Controller Method\nDESCRIPTION: Demonstrates how to force HTTPS access for a controller method using the forceHTTPS() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic function method()\n{\n    $this->forceHTTPS();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache .htaccess for CodeIgniter 4 Deployment\nDESCRIPTION: Apache .htaccess configuration to redirect requests to the public folder and deny access to hidden files when deploying CodeIgniter 4 to a shared hosting environment.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/deployment.rst#2025-04-16_snippet_2\n\nLANGUAGE: apache\nCODE:\n```\n<IfModule mod_rewrite.c>\n    RewriteEngine On\n    RewriteRule ^(.*)$ public/$1 [L]\n</IfModule>\n\n<FilesMatch \"^\\.\">\n    Require all denied\n    Satisfy All\n</FilesMatch>\n```\n\n----------------------------------------\n\nTITLE: Defining Routes for News Management in CodeIgniter 4\nDESCRIPTION: This code defines routing rules for news-related operations, including creating new news items and viewing existing ones.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nuse App\\Controllers\\News;\nuse App\\Controllers\\Pages;\n\n$routes->get('news/new', [News::class, 'new']);\n$routes->post('news', [News::class, 'create']);\n$routes->get('news/(:segment)', [News::class, 'view']);\n$routes->get('news', [News::class, 'index']);\n$routes->get('pages', [Pages::class, 'index']);\n$routes->get('(:segment)', [Pages::class, 'view']);\n```\n\n----------------------------------------\n\nTITLE: Testing CLI Commands with MockInputOutput in CodeIgniter 4\nDESCRIPTION: This example demonstrates how to test a CLI command ('db:table') that requires user input using the MockInputOutput class. The test sets up mock inputs, executes the command, and then verifies the output.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/cli.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter\\Commands\\Database;\n\nuse CodeIgniter\\CLI\\CLI;\nuse CodeIgniter\\CLI\\MockInputOutput;\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\Filters\\CITestStreamFilter;\n\nfinal class TableCommandTest extends CIUnitTestCase\n{\n    private $io;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->io = new MockInputOutput();\n        CLI::setInputOutput($this->io);\n    }\n\n    protected function tearDown(): void\n    {\n        CLI::resetInputOutput();\n\n        parent::tearDown();\n    }\n\n    public function testTableList(): void\n    {\n        // Set the input 'posts'\n        $this->io->setInputs(['posts']);\n\n        command('db:table');\n\n        // Get command output\n        $output = $this->io->getOutput();\n\n        // Check output text\n        $this->assertStringContainsString('Table information for table:', $output);\n        $this->assertStringContainsString('posts', $output);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Encryption and Decryption in CodeIgniter 4\nDESCRIPTION: Example demonstrating basic string encryption and decryption using the encrypt() and decrypt() methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$key = 'Some random key';\n$message = 'My secret message';\n$encrypter = \\Config\\Services::encrypter();\n$ciphertext = $encrypter->encrypt($message);\n$plaintext = $encrypter->decrypt($ciphertext);\n```\n\n----------------------------------------\n\nTITLE: Instantiating Config Class Using new Keyword\nDESCRIPTION: Example showing how to create a configuration object instance using the new keyword in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nnamespace Config;\n\n$config = new App();\n```\n\n----------------------------------------\n\nTITLE: Getting callable's return value with Timer::record() in CodeIgniter 4\nDESCRIPTION: Demonstrates how to get the return value from a callable function while measuring its execution time using the record() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$timer = new \\CodeIgniter\\Benchmark\\Timer();\n$output = $timer->record('render view', function() {\n    return generateView();\n});\n```\n\n----------------------------------------\n\nTITLE: Updating CodeIgniter 4 Project\nDESCRIPTION: Use this command to update your CodeIgniter 4 project to the latest version or to the version specified in your composer.json file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncomposer update\n```\n\n----------------------------------------\n\nTITLE: Switching to CodeIgniter 4 Development Branch\nDESCRIPTION: Use this command to switch your project to use the latest development branch of CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nphp builds development\n```\n\n----------------------------------------\n\nTITLE: Multiple Database Connections\nDESCRIPTION: Establishes connections to multiple databases simultaneously using different connection groups.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$db['group_one'] = db_connect('group_one');\n$db['group_two'] = db_connect('group_two');\n```\n\n----------------------------------------\n\nTITLE: Starting CodeIgniter Development Server\nDESCRIPTION: Command to start PHP's built-in development server for CodeIgniter applications using the spark CLI tool.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/index.rst#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nphp spark serve\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Secure Access in CodeIgniter 4\nDESCRIPTION: Setting the forceGlobalSecureRequests configuration option in CodeIgniter 4's App config to enforce HTTPS globally.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/security.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nConfig\\App::$forceGlobalSecureRequests\n```\n\n----------------------------------------\n\nTITLE: Configuring Routes in CodeIgniter 4.x\nDESCRIPTION: Example of route configuration in CodeIgniter 4.x, showing the new object-oriented approach to defining routes with the Routes service instead of an array. It demonstrates how to set default routes and add specific route mappings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_routing.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Config;\n\n// Create a new instance of our RouteCollection class.\n$routes = Services::routes();\n\n// Load the system's routing file first, so that the app and ENVIRONMENT\n// can override as needed.\nif (is_file(SYSTEMPATH . 'Config/Routes.php')) {\n    require SYSTEMPATH . 'Config/Routes.php';\n}\n\n/*\n * --------------------------------------------------------------------\n * Router Setup\n * --------------------------------------------------------------------\n */\n$routes->setDefaultNamespace('App\\Controllers');\n$routes->setDefaultController('Home');\n$routes->setDefaultMethod('index');\n$routes->setTranslateURIDashes(false);\n$routes->set404Override();\n// The Auto Routing (Legacy) is very dangerous. It is easy to create vulnerable apps\n// where controller filters or CSRF protection are bypassed.\n// If you don't want to define all routes, please use the Auto Routing (Improved).\n// Set `$autoRoutesImproved` to true in `app/Config/Feature.php` and set the following to true.\n// $routes->setAutoRoute(false);\n\n/*\n * --------------------------------------------------------------------\n * Route Definitions\n * --------------------------------------------------------------------\n */\n\n// We get a performance increase by specifying the default\n// route since we don't have to scan directories.\n$routes->get('/', 'Home::index');\n\n// Mapping to a specific controller\n$routes->add('journals', 'Blogs::index');\n\n// Wildcard mapping\n$routes->add('product/(:segment)', 'Catalog::productLookup');\n\n// Back-reference\n$routes->add('login/(.+)', 'Auth::login/$1');\n\n/*\n * --------------------------------------------------------------------\n * Additional Routing\n * --------------------------------------------------------------------\n *\n * There will often be times that you need additional routing and you\n * need it to be able to override any defaults in this file. Environment\n * based routes is one such time. require() additional route files here\n * to make that happen.\n *\n * You will have access to the $routes object within that file without\n * needing to reload it.\n */\nif (is_file(APPPATH . 'Config/' . ENVIRONMENT . '/Routes.php')) {\n    require APPPATH . 'Config/' . ENVIRONMENT . '/Routes.php';\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Table Keys and Constraints\nDESCRIPTION: Shows how to add primary keys, unique keys, and foreign key constraints to tables.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$forge->addKey('blog_id', true);\n$forge->addKey(['blog_id', 'user_id']);\n$forge->addKey('blog_name', false, true); // unique key\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->addPrimaryKey('blog_id');\n$forge->addUniqueKey(['blog_id', 'user_id']);\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->addForeignKey('users_id', 'users', 'id');\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->addForeignKey('users_id', 'users', 'id', 'CASCADE', 'CASCADE', 'my_fk_name');\n```\n\n----------------------------------------\n\nTITLE: Using global timer() function with callable in CodeIgniter 4\nDESCRIPTION: Shows how to use the global timer() function with a callable second parameter to measure the execution time of a code block.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$output = timer('render view', function() {\n    return generateView();\n});\n```\n\n----------------------------------------\n\nTITLE: Cleaning the Entire Cache (PHP)\nDESCRIPTION: Example of how to 'clean' or clear the entire cache using the clean() method. Returns true on success or false on failure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/009.php\n```\n\n----------------------------------------\n\nTITLE: Making Basic GET Request in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example of making a basic GET request to the homepage in a CodeIgniter 4 feature test using the call() method, which returns a TestResponse object for assertions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$results = $this->call('get', '/');\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Layout Template in PHP\nDESCRIPTION: Demonstrates creating a basic layout template file that uses renderSection() to define content placeholders.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_layouts.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<!doctype html>\n<html>\n<head>\n    <title>My Layout</title>\n</head>\n<body>\n    <?= $this->renderSection('content') ?>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL Socket Connection in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to configure a MySQL connection using a Unix socket in CodeIgniter 4. It specifies the path to the socket file in the 'hostname' setting.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN'      => '',\n    'hostname' => '/var/run/mysqld/mysqld.sock',\n    'username' => 'root',\n    'password' => '',\n    'database' => 'database_name',\n    'DBDriver' => 'MySQLi',\n    // ...\n];\n```\n\n----------------------------------------\n\nTITLE: Dynamically Setting Database Group Based on Environment in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to dynamically set the default database group based on the current environment in CodeIgniter 4. It uses the ENVIRONMENT constant to determine which connection group to use.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\npublic function __construct()\n{\n    parent::__construct();\n\n    // Ensure that we always set the database group to 'tests' if\n    // we are currently running an automated test suite, so that\n    // we don't overwrite live data on accident.\n    if (ENVIRONMENT === 'testing') {\n        $this->defaultGroup = 'tests';\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Timer Data in CodeIgniter 4\nDESCRIPTION: Demonstrates how to retrieve all timer data using the getTimers() method. This returns an array containing details of all timers including start, end, and duration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$timers = $timer->getTimers();\n\n/*\nArray (\n    'render view' => [\n        'start' => 1234567890,\n        'end' => 1234567980,\n        'duration' => 0.0902\n    ]\n);\n*/\n```\n\n----------------------------------------\n\nTITLE: Installing Production Dependencies for CodeIgniter 4\nDESCRIPTION: Run this command when deploying to a production server to remove development dependencies and reduce the vendor folder size.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncomposer install --no-dev\n```\n\n----------------------------------------\n\nTITLE: Custom CORS Configuration Setup\nDESCRIPTION: Example of creating a custom CORS configuration in the Cors config file with specific allowed origins, methods, and headers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/cors.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $api = [\n    'allowedOrigins' => ['https://www.example.com'],\n    'allowedMethods' => ['GET', 'POST', 'OPTIONS'],\n    'allowedHeaders' => ['X-API-KEY', 'Origin', 'Content-Type'],\n    'exposedHeaders' => [],\n    'maxAge' => 0,\n    'supportsCredentials' => false,\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Session-based CSRF Protection in CodeIgniter 4\nDESCRIPTION: Code snippet showing how to set the config parameter in app/Config/Security.php to use Session-based CSRF protection instead of the default Cookie-based method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic bool $sessionProtection = true;\n```\n\n----------------------------------------\n\nTITLE: Setting CORS Filter on Routes in CodeIgniter 4\nDESCRIPTION: Example of applying CORS filter to specific routes in CodeIgniter 4's routing configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/cors.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$routes->get('api/users', 'Users::list', ['filter' => 'cors']);\n$routes->post('api/users', 'Users::create', ['filter' => 'cors']);\n$routes->options('api/users', static fn() => '');\n```\n\n----------------------------------------\n\nTITLE: Adding OPTIONS Routes for CORS Preflight\nDESCRIPTION: Example of adding OPTIONS routes to handle CORS preflight requests for API endpoints.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/cors.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$routes->options('api/(:any)', static fn() => '');\n$routes->options('api/(:any)/(:any)', static fn() => '');\n```\n\n----------------------------------------\n\nTITLE: Table Creation and Deletion Operations\nDESCRIPTION: Examples of creating and dropping tables with various options including IF EXISTS and engine specifications.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$forge->createTable('table_name');\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->createTable('table_name', true);\n```\n\nLANGUAGE: php\nCODE:\n```\n$attributes = ['ENGINE' => 'InnoDB'];\n$forge->createTable('table_name', false, $attributes);\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->dropTable('table_name');\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->dropTable('table_name', true, true);\n```\n\n----------------------------------------\n\nTITLE: Basic Database Connection in CodeIgniter 4\nDESCRIPTION: Establishes a basic database connection using the default connection group settings from the config file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ndb_connect()\n```\n\n----------------------------------------\n\nTITLE: Accessing HTTP Request Properties in CodeIgniter 4\nDESCRIPTION: Example showing how to access various properties of an HTTP request using CodeIgniter's IncomingRequest class. Demonstrates checking request method, retrieving server data, and detecting AJAX requests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/http.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$request->getMethod();       // GET, POST, PUT, etc\n$request->getServer('SERVER_PROTOCOL');\n$request->isAJAX();\n```\n\n----------------------------------------\n\nTITLE: Database Creation and Deletion Operations\nDESCRIPTION: Examples of creating and dropping databases using the Forge class, including conditional creation with IF EXISTS.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif ($forge->createDatabase('my_db')) {\n    echo 'Database created!';\n}\n```\n\nLANGUAGE: php\nCODE:\n```\nif ($forge->createDatabase('my_db', true)) {\n    echo 'Database created!';\n}\n```\n\nLANGUAGE: php\nCODE:\n```\nif ($forge->dropDatabase('my_db')) {\n    echo 'Database deleted!';\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Cache in CodeIgniter 4 PHP\nDESCRIPTION: Demonstrates how to use the cache() function to retrieve the Cache engine instance or a specific cached item.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// Get the Cache engine instance\n$cache = cache();\n\n// Get an item from the cache\n$foo = cache('foo');\n\n// Save an item to the cache\ncache()->save('foo', $foo, 300);\n```\n\n----------------------------------------\n\nTITLE: Calling Spark Commands from PHP Code\nDESCRIPTION: Demonstrates how to programmatically execute spark commands from within PHP code using the command() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/spark_commands.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\ncommand('migrate:create OtherModelMigration')\n```\n\n----------------------------------------\n\nTITLE: Implementing Rate Limiting Filter in CodeIgniter 4\nDESCRIPTION: This code creates a Throttle filter that limits requests to one per second per IP address. It uses the Throttler class to check and limit requests, returning a 429 status code if the limit is exceeded.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/throttler.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Filters;\n\nuse CodeIgniter\\Filters\\FilterInterface;\nuse CodeIgniter\\HTTP\\RequestInterface;\nuse CodeIgniter\\HTTP\\ResponseInterface;\nuse Config\\Services;\n\nclass Throttle implements FilterInterface\n{\n    /**\n     * This is a demo implementation of using the Throttler class\n     * to implement rate limiting for your application.\n     *\n     * @param RequestInterface $request\n     * @param array|null       $arguments\n     *\n     * @return mixed\n     */\n    public function before(RequestInterface $request, $arguments = null)\n    {\n        $throttler = Services::throttler();\n\n        // Restrict an IP address to no more than 1 request\n        // per second across the entire site.\n        if ($throttler->check($request->getIPAddress(), 60, MINUTE) === false) {\n            return Services::response()->setStatusCode(429);\n        }\n    }\n\n    /**\n     * We don't have anything to do here.\n     *\n     * @param RequestInterface  $request\n     * @param ResponseInterface $response\n     * @param array|null        $arguments\n     *\n     * @return mixed\n     */\n    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)\n    {\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Extensions in php.ini\nDESCRIPTION: Instructions for enabling required PHP extensions like curl and intl in the php.ini configuration file\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nextension=curl\nextension=intl\n```\n\n----------------------------------------\n\nTITLE: Input Retrieval using CodeIgniter's Request Object (PHP)\nDESCRIPTION: Shows how to retrieve input data using CodeIgniter's request object, which provides a more convenient and safer approach.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$something = $this->request->getPost('something');\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Configuration Class\nDESCRIPTION: Example of creating a custom configuration class extending BaseConfig with configuration properties.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\n\nclass Blog extends BaseConfig\n{\n    public string $blogName  = 'My Blog';\n    public string $blogDescription = 'This is my blog description';\n    public bool   $commentsEnabled = true;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CORS Filter in Filters Config\nDESCRIPTION: Example showing how to configure CORS filter for specific URI paths in the Filters configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/cors.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic $filters = [\n    'cors' => ['before' => ['api/*']],\n];\n```\n\n----------------------------------------\n\nTITLE: Setting Default Database Configuration in CodeIgniter 4\nDESCRIPTION: This snippet shows the structure of the default database configuration array in CodeIgniter 4's Database.php config file. It includes settings for the database driver, hostname, username, password, database name, and other connection parameters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN'      => '',\n    'hostname' => 'localhost',\n    'username' => 'root',\n    'password' => '',\n    'database' => 'database_name',\n    'DBDriver' => 'MySQLi',\n    'DBPrefix' => '',\n    'pConnect' => false,\n    'DBDebug'  => true,\n    'charset'  => 'utf8',\n    'DBCollat' => 'utf8_general_ci',\n    'swapPre'  => '',\n    'encrypt'  => false,\n    'compress' => false,\n    'strictOn' => false,\n    'failover' => [],\n    'port'     => 3306,\n];\n```\n\n----------------------------------------\n\nTITLE: Setting Development Environment\nDESCRIPTION: Configuration setting in the .env file to switch CodeIgniter from production to development mode for debugging and development purposes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/index.rst#2025-04-16_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nCI_ENVIRONMENT = development\n```\n\n----------------------------------------\n\nTITLE: Initializing Throttler in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to initialize the Throttler class with a bucket that allows 60 actions every minute. It uses the MINUTE constant for readability.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/throttler.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$throttler = \\Config\\Services::throttler();\n$result = $throttler->check($name, 60, MINUTE);\n```\n\n----------------------------------------\n\nTITLE: Nested Transactions Example\nDESCRIPTION: Example demonstrating nested transactions where only the outermost transaction commands are executed.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transStart();\n    $this->db->query('AN SQL QUERY 1');\n\n    $this->db->transStart();\n        $this->db->query('AN SQL QUERY 2');\n\n        $this->db->transStart();\n            $this->db->query('AN SQL QUERY 3');\n        $this->db->transComplete();\n\n    $this->db->transComplete();\n\n$this->db->transComplete();\n```\n\n----------------------------------------\n\nTITLE: Listing Database Tables in CodeIgniter 4\nDESCRIPTION: Example of using listTables() method to retrieve all table names from the currently connected database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$tables = $db->listTables();\n```\n\n----------------------------------------\n\nTITLE: Testing Controllers with Custom App Config\nDESCRIPTION: Shows how to provide a modified configuration to test controllers with different settings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$appConfig = new \\Config\\App();\n$appConfig->baseURL = 'http://example.com';\n\n$results = $this->withConfig($appConfig)\n                ->controller(ForumController::class)\n                ->execute('index');\n```\n\n----------------------------------------\n\nTITLE: Using getUnbufferedRow()\nDESCRIPTION: Example of using getUnbufferedRow() for memory-efficient result processing\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\nwhile ($row = $query->getUnbufferedRow()) {\n    echo $row->title;\n    echo $row->name;\n    echo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Redirect in a Before Filter\nDESCRIPTION: Shows how to perform a redirect in a before filter by returning a Response instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Filters;\n\nuse CodeIgniter\\Filters\\FilterInterface;\nuse CodeIgniter\\HTTP\\RequestInterface;\nuse CodeIgniter\\HTTP\\ResponseInterface;\n\nclass AdminFilter implements FilterInterface\n{\n    public function before(RequestInterface $request, $arguments = null)\n    {\n        if (! $this->isLoggedIn())\n        {\n            return redirect()->to('/login');\n        }\n    }\n\n    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)\n    {\n    }\n\n    //--------------------------------------------------------------------\n\n    private function isLoggedIn()\n    {\n        return false;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Conditional Query Building in CodeIgniter 4\nDESCRIPTION: Example of using the new when() and whenNot() methods in QueryBuilder to conditionally add clauses to a database query.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.0.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$builder->select('*')\n    ->when($userType === 'admin', static function ($query) {\n        $query->where('access_level', 'admin');\n    })\n    ->get('users');\n```\n\n----------------------------------------\n\nTITLE: Scaffolding Multiple Components in CodeIgniter 4\nDESCRIPTION: Example of using the make:scaffold command to generate multiple components (controller, model, migration, seeder) at once in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_12\n\nLANGUAGE: console\nCODE:\n```\nphp spark make:scaffold user\n```\n\n----------------------------------------\n\nTITLE: Configuring PSR-4 Autoloading for Modules in CodeIgniter 4\nDESCRIPTION: Configuration of PSR-4 autoloading in app/Config/Autoload.php to enable module support by adding custom namespace.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$psr4 = [\n    'App'       => APPPATH,\n    'Config'    => APPPATH . 'Config',\n    'Acme\\Blog' => ROOTPATH . 'acme/Blog',\n];\n```\n\n----------------------------------------\n\nTITLE: Enabling Page Caching in CodeIgniter 4 Controller\nDESCRIPTION: This code snippet demonstrates how to enable caching for a specific page in a CodeIgniter 4 controller method. The $n parameter specifies the number of seconds the page should remain cached before refreshing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/caching.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->cachePage($n);\n```\n\n----------------------------------------\n\nTITLE: Extending BaseController in CodeIgniter 4\nDESCRIPTION: This snippet shows how to create a new controller that extends BaseController in CodeIgniter 4. It demonstrates the basic structure of a controller class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/basecontroller.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Home extends BaseController\n{\n    public function index()\n    {\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Exception Throwing in Transactions\nDESCRIPTION: Example showing how to enable exception throwing during transactions when query errors occur.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transException(true);\n```\n\n----------------------------------------\n\nTITLE: Using Universal DSN Format in CodeIgniter 4 Database Configuration\nDESCRIPTION: This snippet shows how to use a universal (URL-like) DSN format to configure a database connection in CodeIgniter 4. This format provides a standardized way to specify connection details across different database types.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN' => 'MySQLi://username:password@hostname:3306/database?charset=utf8&DBCollat=utf8_general_ci',\n    'DBDriver' => 'MySQLi',\n];\n```\n\n----------------------------------------\n\nTITLE: Command Line Migration Commands\nDESCRIPTION: Examples of various command line commands for managing migrations using CodeIgniter's CLI tool 'spark'.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nphp spark migrate\nphp spark migrate -g test -n Acme\\Blog\nphp spark migrate:rollback\nphp spark migrate:refresh\nphp spark migrate:status\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Filters in CodeIgniter 4\nDESCRIPTION: Shows how to set up global filters that run on every request in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic $globals = [\n    'before' => [\n        'honeypot',\n        'csrf',\n    ],\n    'after'  => [\n        'toolbar',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Setting Migration Namespace in CodeIgniter 4 PHP\nDESCRIPTION: This code snippet shows how to set the namespace for migration files using the setNamespace method of the MigrationRunner class. It demonstrates setting the namespace to 'App' and then running the latest migrations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$migration = \\Config\\Services::migrations();\n\n$migration->setNamespace('App');\n$migration->latest();\n```\n\n----------------------------------------\n\nTITLE: Installing CodeIgniter 4 via Composer\nDESCRIPTION: Command to create a new CodeIgniter 4 project using Composer package manager. Creates a new folder 'ci-news' containing the application code with CodeIgniter installed in the vendor folder.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer create-project codeigniter4/appstarter ci-news\n```\n\n----------------------------------------\n\nTITLE: Basic Resource Route Definition in CodeIgniter 4\nDESCRIPTION: Creates five common CRUD routes for a resource using the resource() method. Routes include create, update, list, show, and delete endpoints.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos');\n```\n\n----------------------------------------\n\nTITLE: Logging Database Queries using Events in PHP/CodeIgniter4\nDESCRIPTION: Example of implementing a database query logger using CodeIgniter's Events system. This code sets up an event listener for the 'DBQuery' event to log all database queries with their execution time and connection details.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/events.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nEvents::on('DBQuery', static function ($query) {\n    static $filepath = WRITEPATH . 'DBQuery.log';\n\n    $newLine = sprintf(\n        '[%s] Query: \"%s\" in %.3f ms using %s connection',\n        DateTime::createFromFormat('U.u', microtime(true))->format('Y-m-d H:i:s.u'),\n        $query->getQuery(),\n        $query->getDuration(5), // get duration in float with 5 decimal places\n        $query->getConnectionName()\n    );\n\n    file_put_contents($filepath, $newLine . \"\\n\", FILE_APPEND);\n});\n```\n\n----------------------------------------\n\nTITLE: Encryption with Custom Parameters\nDESCRIPTION: Examples of encrypting data with different parameter configurations including custom keys.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n// Using a custom key by passing as string\n$ciphertext = $encrypter->encrypt($message, $customKey);\n\n// Using a custom key by passing as array\n$ciphertext = $encrypter->encrypt($message, ['key' => $customKey]);\n\n// Using a custom key and different blockSize (with SodiumHandler)\n$ciphertext = $encrypter->encrypt($message, [\n    'key'       => $customKey,\n    'blockSize' => 24\n]);\n```\n\n----------------------------------------\n\nTITLE: Accessing IncomingRequest in Controller (PHP)\nDESCRIPTION: Shows how to access the IncomingRequest object within a controller class that extends CodeIgniter\\Controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->request\n```\n\n----------------------------------------\n\nTITLE: Invalid Controller Class Names\nDESCRIPTION: Examples of incorrect controller class naming conventions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass products extends BaseController\n{\n    // ...\n}\n```\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass PRODUCTS extends BaseController\n{\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Results as Array with getResult('array')\nDESCRIPTION: Demonstrates getting query results as an array of arrays using getResult('array')\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\nforeach ($query->getResult('array') as $row) {\n    echo $row['title'];\n    echo $row['name'];\n    echo $row['body'];\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple CLI Controller in PHP for CodeIgniter 4\nDESCRIPTION: This code snippet demonstrates how to create a basic controller named Tools that can be called from the command line. It includes a method to display a 'Hello World!' message with an optional name parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_controllers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\CLI\\CLI;\n\nclass Tools extends BaseController\n{\n    public function message($to = 'World')\n    {\n        $message = \"Hello {$to}!\";\n        echo $message;\n        if (CLI::isCLI()) {\n            CLI::newLine();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Form with form_open() in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates the basic usage of the form_open() function to create an HTML form opening tag with a dynamically generated action URL.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\necho form_open('email/send');\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Response in CodeIgniter 4\nDESCRIPTION: Example demonstrating how to construct an HTTP response using CodeIgniter's Response class. Shows setting response headers and content type.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/http.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$response->setStatusCode(Response::HTTP_OK);\n$response->setBody($output);\n$response->setHeader('Content-type', 'text/html');\n$response->noCache();\n// Sends the output to the browser\n// This is typically handled by the framework\n```\n\n----------------------------------------\n\nTITLE: Installing CodeIgniter 4 Translations\nDESCRIPTION: Use this Composer command to install the official CodeIgniter 4 system message translations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require codeigniter4/translations\n```\n\n----------------------------------------\n\nTITLE: Converting Query Object to String in CodeIgniter 4\nDESCRIPTION: Demonstrates how to convert a Query object to a string, which returns the final query in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$sql = (string) $query;\n```\n\n----------------------------------------\n\nTITLE: Creating a Controller in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:controller generator to create a new controller file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nmake:controller <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Specific Item from Cache (PHP)\nDESCRIPTION: Example of how to delete a specific item from the cache store using the delete() method with the item's key.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/005.php\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Filters into One Alias\nDESCRIPTION: Shows how to create a single alias for multiple filters in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $aliases = [\n    'apiPrep' => [\n        \\App\\Filters\\Negotiate::class,\n        \\App\\Filters\\ApiAuth::class,\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Declaring Authentication Implementation in composer.json for CodeIgniter 4\nDESCRIPTION: This JSON snippet shows how to indicate compatibility with CodeIgniter 4's authentication implementation in a module's composer.json file. It specifies the 'provide' key to declare that the module provides the 'codeigniter4/authentication-implementation' at version 1.0.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/authentication.rst#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"provide\": {\n    \"codeigniter4/authentication-implementation\": \"1.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Specific JSON Data in CodeIgniter (PHP)\nDESCRIPTION: Shows how to retrieve specific pieces of data from a JSON request using the getJsonVar() method and dot notation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$price = $request->getJsonVar('price');\n\n// Using dot notation\n$price = $request->getJsonVar('product.price');\n```\n\n----------------------------------------\n\nTITLE: Triggering Custom Events\nDESCRIPTION: Demonstrates how to trigger a custom event in CodeIgniter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nEvents::trigger('backend_auth');\n```\n\n----------------------------------------\n\nTITLE: Loading Model with Custom Database\nDESCRIPTION: Example showing how to load a model with a specific database configuration passed as a constructor parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nFactories::models('UserModel', [], ['DBGroup' => 'alternate']);\n```\n\n----------------------------------------\n\nTITLE: Defining Module Routes in CodeIgniter 4\nDESCRIPTION: Example of defining routes for a module's controllers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$routes->get('blog', '\\Acme\\Blog\\Controllers\\Blog::index');\n```\n\n----------------------------------------\n\nTITLE: Data Validation in Controller\nDESCRIPTION: Example of performing data validation using the validate() method with custom rules and error messages.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic function updateUser()\n{\n    $rules = [\n        'username' => 'required|min_length[3]',\n        'password' => 'required|min_length[10]'\n    ];\n    \n    if (! $this->validate($rules)) {\n        return view('myform', [\n            'validation' => $this->validator\n        ]);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Session Handling in CodeIgniter 4.x\nDESCRIPTION: Shows the updated approach for session management in CodeIgniter 4.x, including initializing the session, setting and retrieving data, and using flashdata.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_sessions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Controller;\n\nclass Login extends Controller\n{\n    public function index()\n    {\n        $session = session();\n\n        $session->set('some_name', 'some_value');\n\n        $session->some_name;\n        // or\n        $session->get('some_name');\n\n        $session->setFlashdata('item', 'value');\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Applying Throttle Filter to POST Requests in CodeIgniter 4\nDESCRIPTION: This code demonstrates how to apply the Throttle filter to all POST requests in the CodeIgniter 4 filters configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/throttler.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $methods = [\n    'post' => ['throttle'],\n];\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Filter Class in PHP\nDESCRIPTION: Demonstrates the structure of a basic filter class implementing CodeIgniter\\Filters\\FilterInterface with before() and after() methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Filters;\n\nuse CodeIgniter\\HTTP\\RequestInterface;\nuse CodeIgniter\\HTTP\\ResponseInterface;\nuse CodeIgniter\\Filters\\FilterInterface;\n\nclass MyFilter implements FilterInterface\n{\n    public function before(RequestInterface $request, $arguments = null)\n    {\n        // Do something here\n    }\n\n    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)\n    {\n        // Do something here\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Specific Row as Array\nDESCRIPTION: Demonstrates getting a specific row as an array by index\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$row = $query->getRowArray(5);\n```\n\n----------------------------------------\n\nTITLE: Validation Data Access in PHP Controllers\nDESCRIPTION: Example showing how to properly access validated data using the new Validation::getValidated() method instead of direct validation results.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_440.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nif (! $this->validate($rules)) {\n    return view('signup', [\n        'errors' => $this->validator->getErrors()\n    ]);\n}\n\n// Get only validated data\n$validData = $this->validator->getValidated();\n\n// Continue processing...\n```\n\n----------------------------------------\n\nTITLE: Getting Query Execution Duration in CodeIgniter 4\nDESCRIPTION: Demonstrates how to get the duration of query execution in seconds with microseconds using the getDuration() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$duration = $query->getDuration();\n```\n\n----------------------------------------\n\nTITLE: Checking Field Existence in Table in CodeIgniter 4\nDESCRIPTION: Shows how to verify if a specific field exists in a table using fieldExists() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nif ($db->fieldExists('field_name', 'table_name')) {\n    // do something\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Namespaced Views in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to load a view file from a specific module namespace in CodeIgniter 4. It uses the 'view()' function with a fully qualified namespace path to the view file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\necho view('Acme\\Blog\\Views\\index');\n```\n\n----------------------------------------\n\nTITLE: Database Connection Reconnect\nDESCRIPTION: Maintains database connection by reconnecting when the connection times out during long operations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$db->reconnect();\n```\n\n----------------------------------------\n\nTITLE: Getting Database Platform in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve the current database platform (driver) information.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho $db->getPlatform();\n```\n\n----------------------------------------\n\nTITLE: Using Query Builder for Select Operation in CodeIgniter 4\nDESCRIPTION: Demonstrates how to use the Query Builder class to perform a select operation. This simplified method allows retrieving data from a table without writing raw SQL.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->table('table_name');\n\n$query->select('title, content, date');\n$query->where('id', $id);\n$query->limit(10, 20);\n$results = $query->get();\n\nforeach ($results->getResult() as $row) {\n    echo $row->title;\n    echo $row->content;\n    echo $row->date;\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Content Security Policy in CodeIgniter 4\nDESCRIPTION: Configuration code to enable Content Security Policy in the app/Config/App.php file. This setting activates CSP protection throughout the application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/csp.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $CSPEnabled = true;\n```\n\n----------------------------------------\n\nTITLE: Controller with Data Passing to View in CodeIgniter 4\nDESCRIPTION: Example of a controller that passes title and heading data to a view.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Blog extends BaseController\n{\n    public function index()\n    {\n        $data['title'] = 'My Blog Title';\n        $data['heading'] = 'My Blog Heading';\n\n        return view('blog_view', $data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting X-Requested-With Header in Fetch API for AJAX Detection\nDESCRIPTION: This snippet demonstrates how to set the X-Requested-With header in a Fetch API request to ensure proper AJAX detection in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/ajax.rst#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Module Libraries\nDESCRIPTION: Example of loading library classes from a module.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$lib = new \\Acme\\Blog\\Libraries\\BlogLibrary();\n```\n\n----------------------------------------\n\nTITLE: Custom Database Connection Settings\nDESCRIPTION: Creates a database connection using custom configuration settings passed as an array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$customConfig = [\n    'DSN'      => '',\n    'hostname' => 'localhost',\n    'username' => 'foo',\n    'password' => 'bar',\n    'database' => 'database',\n    'DBDriver' => 'MySQLi',\n    'DBPrefix' => '',\n    'pConnect' => false,\n    'DBDebug'  => true,\n    'charset'  => 'utf8',\n    'DBCollat' => 'utf8_general_ci',\n    'swapPre'  => '',\n    'encrypt'  => false,\n    'compress' => false,\n    'strictOn' => false,\n    'failover' => [],\n];\n\n$db = db_connect($customConfig);\n```\n\n----------------------------------------\n\nTITLE: Generating URL for Controller Method in CodeIgniter\nDESCRIPTION: Demonstrates the use of url_to() function to create an absolute URL to a controller method in a CodeIgniter application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n// Generates: http://example.com/index.php/products/view/shoes\n// Routes set in app/Config/Routes.php:\n// $routes->get('products/(:segment)', 'App\\Controllers\\Catalog::productLookup/$1');\necho url_to('App\\Controllers\\Catalog::productLookup', 'shoes');\n```\n\n----------------------------------------\n\nTITLE: Custom Result Class Example\nDESCRIPTION: Demonstrates creating a custom class for result objects\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nclass User {\n    public $id;\n    public $email;\n    public $username;\n\n    public function __set($name, $value) {\n        $this->$name = $value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Exporting Query Result to CSV in CodeIgniter 4\nDESCRIPTION: Shows how to export a query result to a CSV format using the Database Utility Class. Demonstrates default and custom delimiters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM mytable');\n\necho $util->getCSVFromResult($query);\n```\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM mytable');\n\necho $util->getCSVFromResult($query, ';', \"\\r\\n\", '\"');\n```\n\n----------------------------------------\n\nTITLE: Installing CodeIgniter 4 via Composer\nDESCRIPTION: This command creates a new CodeIgniter 4 project using Composer. It installs the latest version of the CodeIgniter 4 application starter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/README.md#2025-04-16_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer create-project codeigniter4/appstarter\n```\n\n----------------------------------------\n\nTITLE: Configuring SSL Connection for MySQL in CodeIgniter 4\nDESCRIPTION: This snippet shows how to configure an SSL connection for MySQL in CodeIgniter 4 using the 'encrypt' option. It includes settings for SSL verification and the path to the SSL certificate.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN'      => '',\n    'hostname' => 'localhost',\n    'username' => 'root',\n    'password' => '',\n    'database' => 'ci4',\n    'DBDriver' => 'MySQLi',\n    'encrypt'  => [\n        'ssl_verify' => true,\n        'ssl_ca'     => '/var/www/html/BaltimoreCyberTrustRoot.crt.pem'\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Handling Server Errors in CodeIgniter API Responses\nDESCRIPTION: Example of using failServerError() method to respond when an internal server error occurs. This sets the appropriate server error status code and returns a formatted error response.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/api_responses.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nreturn $this->failServerError('Server error occurred while saving the user information.');\n```\n\n----------------------------------------\n\nTITLE: Modifying Table Structure\nDESCRIPTION: Examples of adding, dropping, and modifying columns in existing tables.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$fields = [\n    'preferences' => ['type' => 'TEXT']\n];\n$forge->addColumn('table_name', $fields);\n```\n\nLANGUAGE: php\nCODE:\n```\n$fields = [\n    'preferences' => ['type' => 'TEXT', 'after' => 'email'],\n    'type' => ['type' => 'VARCHAR', 'constraint' => 120, 'first' => true]\n];\n$forge->addColumn('table_name', $fields);\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->dropColumn('table_name', 'column_name');\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge->dropColumn('table_name', ['column_1', 'column_2']);\n```\n\n----------------------------------------\n\nTITLE: Setting Cookies with Default Config Values in CodeIgniter 4.2.7\nDESCRIPTION: Example of setting a cookie using set_cookie() or Response::setCookie() methods in CodeIgniter 4.2.7. This snippet demonstrates how default config values for 'secure' and 'httponly' are now applied if not explicitly set.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_427.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nhelper('cookie');\n\n$cookie = [\n    'name'  => $name,\n    'value' => $value,\n];\nset_cookie($cookie);\n// or\n$this->response->setCookie($cookie);\n```\n\n----------------------------------------\n\nTITLE: Configuring CSRF Filter in CodeIgniter 4\nDESCRIPTION: This snippet shows how to enable CSRF protection for POST requests in the Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\npublic $methods = [\n    'post' => ['csrf'],\n];\n```\n\n----------------------------------------\n\nTITLE: Using base_url() with File Path\nDESCRIPTION: Demonstrates using base_url() to generate a URL to a static file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\necho base_url('images/icons/edit.png');\n```\n\n----------------------------------------\n\nTITLE: Using Feature Testing with Authentication in CodeIgniter 4\nDESCRIPTION: Example demonstrating how to use feature testing with authentication in CodeIgniter 4. This shows how to simulate a logged-in user with specific identity for testing protected routes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\npublic function testCreateUser()\n{\n    $result = $this->withHeaders([\n            'Authorization' => 'token abc123',\n        ])\n        ->call('post', 'api/user', [\n            'first'  => 'First',\n            'last'   => 'Last',\n            'email'  => 'first.last@example.com',\n            'avatar' => 'http://example.com/image.png',\n        ]);\n\n    $result->assertStatus(201);\n    $result->assertJSONFragment(['first' => 'First']);\n}\n```\n\n----------------------------------------\n\nTITLE: Getting HTTP Method in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to retrieve the HTTP method of the current request using the getMethod() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$method = $this->request->getMethod();\n```\n\n----------------------------------------\n\nTITLE: Dependency Injection of IncomingRequest (PHP)\nDESCRIPTION: Shows how to use dependency injection to pass the IncomingRequest object into a class constructor.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\HTTP\\IncomingRequest;\n\nclass UserModel\n{\n    protected $request;\n\n    public function __construct(IncomingRequest $request)\n    {\n        $this->request = $request;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4.x Basic Model Upgrade with Query Builder\nDESCRIPTION: A direct translation of the CI3 model to CI4, using namespaces and the new Model class. This example continues to use Query Builder directly in the model methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_models.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass BlogModel extends Model\n{\n    protected $table = 'entries';\n    protected $allowedFields = ['title', 'content', 'date'];\n\n    public function getLastTenEntries()\n    {\n        $query = $this->db->get('entries', 10);\n        return $query->getResult();\n    }\n\n    public function insertEntry($title, $content)\n    {\n        $this->db->set('title', $title);\n        $this->db->set('content', $content);\n        $this->db->set('date', time());\n\n        return $this->db->insert('entries');\n    }\n\n    public function updateEntry($id, $title, $content)\n    {\n        $this->db->set('title', $title);\n        $this->db->set('content', $content);\n\n        $this->db->where('id', $id);\n\n        return $this->db->update('entries');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Validation Errors in CodeIgniter4\nDESCRIPTION: Example showing how to retrieve validation errors as an array using the validation_errors() function. Useful for accessing validation errors stored in session.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_28\n\nLANGUAGE: php\nCODE:\n```\n<?php $errors = validation_errors(); ?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Get-Post Data in CodeIgniter 4\nDESCRIPTION: Shows how to get request data from combined GET and POST streams, preferring GET values in case of conflicts. Supports optional filtering and flags.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_24\n\nLANGUAGE: php\nCODE:\n```\n$request->getGetPost('field1');\n```\n\n----------------------------------------\n\nTITLE: Deleting Multiple Items from Cache Using Pattern Matching (PHP)\nDESCRIPTION: Example showing how to delete multiple items from the cache store at once by matching their keys against a glob-style pattern using deleteMatching().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/006.php\n```\n\n----------------------------------------\n\nTITLE: Loading Helper Files in Controller\nDESCRIPTION: Shows how to automatically load helper files by defining them as a class property in a controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass MyController extends BaseController\n{\n    protected $helpers = ['url', 'form'];\n}\n```\n\n----------------------------------------\n\nTITLE: Database Query Examples in CodeIgniter 4.x\nDESCRIPTION: Code sample showing the equivalent database operations in CodeIgniter 4.x, including connecting to the database, running queries, using the Query Builder, and retrieving results with the updated method names and syntax.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_database.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass BlogModel extends Model\n{\n    public function getBlogList()\n    {\n        $db = db_connect();\n\n        // Simple Query\n        $query = $db->query('SELECT * FROM blog');\n        $result = $query->getResult();\n\n        // Using Query Builder\n        $builder = $db->table('blog');\n        $query = $builder->get();\n        $result = $query->getResultArray();\n\n        // Using Query Builder with where\n        $builder = $db->table('blog');\n        $query = $builder->getWhere(['id' => 1]);\n        $row = $query->getRow();\n\n        // Query Builder methods\n        $builder = $db->table('blog');\n        $builder->select('title, content, date');\n        $builder->where('status', 'active');\n        $builder->orderBy('date', 'DESC');\n        $builder->limit(10);\n        $query = $builder->get();\n        $result = $query->getResult();\n\n        return $result;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Encryption Configuration in CodeIgniter 4\nDESCRIPTION: Example showing how to use custom encryption configuration by passing a Config object.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$config = new \\Config\\Encryption();\n$config->key = 'aBigsecret_ofAtleast32Characters';\n$config->driver = 'OpenSSL';\n\n$encrypter = \\Config\\Services::encrypter($config);\n```\n\n----------------------------------------\n\nTITLE: Loading Model with Disabled preferApp Option\nDESCRIPTION: Example of loading a model with the preferApp option disabled to ensure loading from a specific namespace.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nFactories::models('\\Blog\\Models\\UserModel', ['preferApp' => false]);\n```\n\n----------------------------------------\n\nTITLE: Using Query Builder for Insert Operation in CodeIgniter 4\nDESCRIPTION: Illustrates how to use the Query Builder class to perform an insert operation. This method simplifies the process of inserting data into a table without writing raw SQL.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$data = [\n    'title' => 'My title',\n    'name'  => 'My Name',\n    'date'  => 'My date'\n];\n\n$db->table('table_name')->insert($data);\n// Produces: INSERT INTO table_name (title, name, date) VALUES ('My title', 'My Name', 'My date')\n```\n\n----------------------------------------\n\nTITLE: Saving an Item to Cache (PHP)\nDESCRIPTION: Example showing how to save an item to the cache store using the save() method with a specified key, data, and optional time-to-live (TTL) value.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/004.php\n```\n\n----------------------------------------\n\nTITLE: Configuring PSR-4 Namespaces in CodeIgniter 4\nDESCRIPTION: Example of configuring PSR-4 compatible namespaces in the Autoload.php configuration file. This maps namespaces to directory locations for class autoloading.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/autoloader.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$psr4 = [\n    'App'         => APPPATH,\n    'Config'      => APPPATH . 'Config',\n    'Modules\\Foo' => ROOTPATH . 'modules/Foo'\n];\n```\n\n----------------------------------------\n\nTITLE: Programmatically Using Seeders in CodeIgniter 4\nDESCRIPTION: Shows how to programmatically use seeders by obtaining a seeder instance through the database config class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$seeder = \\Config\\Database::seeder();\n$seeder->call('UserSeeder');\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Parameters in PHP for CodeIgniter 4 CLI\nDESCRIPTION: This snippet shows how command parameters are passed to the run() method as an array, with each argument as a separate element.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_commands.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\narray(\n    'bar',\n    'baz'\n)\n```\n\n----------------------------------------\n\nTITLE: Sanitizing Filenames for Security in CodeIgniter 4\nDESCRIPTION: Example of using the sanitizeFilename method to prevent directory traversal attempts and other security threats in user-supplied filenames.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$filename = $security->sanitizeFilename($request->getVar('filename'));\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies with Composer for CodeIgniter 4 testing\nDESCRIPTION: Command to install PHPUnit and other testing dependencies via Composer as defined in the CodeIgniter 4 composer.json file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/tests/README.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n> composer install\n```\n\n----------------------------------------\n\nTITLE: Redis Configuration for CodeIgniter (PHP)\nDESCRIPTION: Demonstrates the configuration options available for connecting to a Redis server in the cache configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/014.php\n```\n\n----------------------------------------\n\nTITLE: Initializing Controller with Custom Constructor\nDESCRIPTION: Demonstrates how to properly override the initController() method in a CodeIgniter 4 controller while maintaining parent functionality.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nprotected function initController(\\CodeIgniter\\HTTP\\RequestInterface $request, \\CodeIgniter\\HTTP\\ResponseInterface $response, \\Psr\\Log\\LoggerInterface $logger)\n{\n    parent::initController($request, $response, $logger);\n\n    // Add your code here\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Exception Catching in PHP\nDESCRIPTION: Shows how to implement a try-catch block to handle exceptions thrown by a UserModel.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ntry {\n    $userModel->get(1);\n} catch (\\Exception $e) {\n    die($e->getMessage());\n}\n```\n\n----------------------------------------\n\nTITLE: Using the fake() Function with Models\nDESCRIPTION: Demonstrates how to use the fake() function to generate test data using the Fabricator class. The function accepts a model instance or name and optional overrides for the generated data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/test_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$user = fake(UserModel::class);\n$widget = fake('App\\\\Models\\\\WidgetModel', ['name' => 'Sprocket']);\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Header in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to retrieve a single header from the request using the header() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n$accept = $request->header('accept');\n```\n\n----------------------------------------\n\nTITLE: Setting Email Recipients in CodeIgniter4\nDESCRIPTION: Examples showing different ways to set email recipients using setTo() method - single email, comma-separated list, and array format.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$email->setTo('someone@example.com');\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->setTo('one@example.com, two@example.com, three@example.com');\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->setTo(['one@example.com', 'two@example.com', 'three@example.com']);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Feature Test Class in CodeIgniter 4\nDESCRIPTION: Basic setup for a feature test class in CodeIgniter 4, using DatabaseTestTrait and FeatureTestTrait to enable database operations and feature testing capabilities.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\nuse CodeIgniter\\Test\\FeatureTestTrait;\n\nclass TestFoo extends CIUnitTestCase\n{\n    use DatabaseTestTrait, FeatureTestTrait;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        // Extra code to run before each test\n    }\n\n    protected function tearDown(): void\n    {\n        // Extra code to run after each test\n\n        parent::tearDown();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Method Remapping with Parameters in CodeIgniter 4\nDESCRIPTION: Shows how to implement _remap() with method name parameter handling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\npublic function _remap($method) {\n    if ($method === 'some_method') {\n        return $this->$method();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Class Row with getRow()\nDESCRIPTION: Example of getting a row as an instance of a custom class\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$row = $query->getRow(0, 'User');\n```\n\n----------------------------------------\n\nTITLE: Extending RouteCollection Class in PHP for CodeIgniter 4\nDESCRIPTION: This example shows how to extend the native RouteCollection class in CodeIgniter 4. By extending the class, developers can add functionality while maintaining the core features of the original class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/core_classes.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nnamespace App\\Libraries;\n\nuse CodeIgniter\\Router\\RouteCollection;\n\nclass MyRouteCollection extends RouteCollection\n{\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment in .env File\nDESCRIPTION: Example of setting the CI_ENVIRONMENT variable in the .env file to specify the application environment.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/environments.rst#2025-04-16_snippet_0\n\nLANGUAGE: INI\nCODE:\n```\nCI_ENVIRONMENT = development\n```\n\n----------------------------------------\n\nTITLE: Configuring Required Filters in CodeIgniter 4\nDESCRIPTION: Demonstrates how to set up required filters that run on every request in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic $required = [\n    'before' => [\n        'csrf',\n        'invalidchars',\n    ],\n    'after' => [\n        'secureheaders',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Query with Multiple Results (Array Version) in CodeIgniter 4\nDESCRIPTION: Shows how to execute a standard SQL query and retrieve multiple results as arrays using the getResultArray() method. This method returns results with standard array indexes for accessing data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT title, name, date FROM my_table');\n\n$results = $query->getResultArray();\n\nforeach ($results as $row) {\n    echo $row['title'];\n    echo $row['name'];\n    echo $row['date'];\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing CSRF Token Randomization\nDESCRIPTION: Adds randomization to CSRF token generation, improving security against CSRF attacks.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nfeat: add CSRF token randomization\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination in CodeIgniter 4.x\nDESCRIPTION: Example of pagination implementation in CodeIgniter 4.x showing the new approach with the Model's paginate() method. This demonstrates how to use the built-in pagination functionality and pass the pager instance to the view.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_pagination.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse App\\Models\\ProductModel;\n\nclass Products extends BaseController\n{\n    public function index()\n    {\n        // instantiate model\n        $products = new ProductModel();\n        \n        // get current page records, passing in the products per page\n        $data['products'] = $products->paginate(20);\n        \n        // pass the pager instance to the views\n        $data['pager'] = $products->pager;\n        \n        return view('products/index', $data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Session in BaseController Constructor\nDESCRIPTION: This snippet shows how to initialize the Session Library in the BaseController's initController method. It demonstrates adding custom initialization logic to the constructor.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/basecontroller.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic function initController(\\CodeIgniter\\HTTP\\RequestInterface $request, \\CodeIgniter\\HTTP\\ResponseInterface $response, \\Psr\\Log\\LoggerInterface $logger)\n{\n    parent::initController($request, $response, $logger);\n\n    $this->session = \\Config\\Services::session();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Item from Cache (PHP)\nDESCRIPTION: Example demonstrating how to fetch an item from the cache store using the get() method. Returns null if the item does not exist in cache.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/003.php\n```\n\n----------------------------------------\n\nTITLE: Applying Custom CORS Configuration\nDESCRIPTION: Example of applying a custom CORS configuration to specific routes using the configuration name as a filter argument.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/cors.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$routes->get('api/users', 'Users::list', ['filter' => 'cors:api']);\n$routes->post('api/users', 'Users::create', ['filter' => 'cors:api']);\n$routes->options('api/users', static fn() => '');\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of FileCollection in PHP\nDESCRIPTION: Demonstrates how to create a FileCollection, add files, and filter the collection using various methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/file_collections.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$collection = new \\CodeIgniter\\Files\\FileCollection();\n$collection->add(APPPATH . 'Config');\n$collection->removePattern('*Controller.php');\n$collection->retainPattern('*.php');\n```\n\n----------------------------------------\n\nTITLE: Running Spark Command in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to run the 'spark' command in CodeIgniter 4 to display help information. The 'spark' command is the primary CLI tool for interacting with CodeIgniter 4 framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_overview.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark\n```\n\n----------------------------------------\n\nTITLE: Creating Custom RouteCollection Class in PHP for CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to create a custom RouteCollection class that implements the RouteCollectionInterface. This class can be used to replace the core RouteCollection class in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/core_classes.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nnamespace App\\Libraries;\n\nuse CodeIgniter\\Router\\RouteCollectionInterface;\n\nclass RouteCollection implements RouteCollectionInterface\n{\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Auto-linking URLs and Email Addresses in PHP\nDESCRIPTION: Demonstrates the use of the auto_link() function to automatically convert URLs and email addresses in a string into clickable links.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$string = auto_link($string);\n```\n\n----------------------------------------\n\nTITLE: Caching Views in CodeIgniter 4\nDESCRIPTION: Demonstrates how to cache a view for a specified number of seconds using the view() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nview('file_name', $data, ['cache' => 60]);\n```\n\n----------------------------------------\n\nTITLE: Test Mode Transaction Example\nDESCRIPTION: Example of using test mode in transactions, which forces rollback regardless of query success.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transStart(true);\n// Your queries...\n$this->db->transComplete();\n```\n\n----------------------------------------\n\nTITLE: Configuring CSRF Filter for POST Requests in CodeIgniter 4\nDESCRIPTION: This code snippet demonstrates how to configure the CSRF filter to apply only to POST requests in CodeIgniter 4's Filters configuration file. It's used to maintain the same behavior as the previous version after a bug fix that extended CSRF protection to PUT/PATCH/DELETE requests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_415.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $methods = [\n    'post' => ['csrf'],\n];\n```\n\n----------------------------------------\n\nTITLE: File Upload Implementation in CodeIgniter 4.x\nDESCRIPTION: Example of handling file uploads in CodeIgniter 4.x using the new uploaded files approach. This method simplifies validation with isValid() and provides direct methods for file operations like store().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_file_upload.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Files\\File;\n\nclass Upload extends BaseController\n{\n    protected $helpers = ['form'];\n\n    public function index()\n    {\n        return view('upload_form', ['errors' => []]);\n    }\n\n    public function upload()\n    {\n        $validationRule = [\n            'userfile' => [\n                'label' => 'Image File',\n                'rules' => [\n                    'uploaded[userfile]',\n                    'is_image[userfile]',\n                    'mime_in[userfile,image/jpg,image/jpeg,image/gif,image/png,image/webp]',\n                    'max_size[userfile,100]',\n                    'max_dims[userfile,1024,768]',\n                ],\n            ],\n        ];\n        if (! $this->validate($validationRule)) {\n            $data = ['errors' => $this->validator->getErrors()];\n\n            return view('upload_form', $data);\n        }\n\n        $img = $this->request->getFile('userfile');\n\n        if (! $img->hasMoved()) {\n            $filepath = WRITEPATH . 'uploads/' . $img->store();\n\n            $data = ['uploaded_flleinfo' => new File($filepath)];\n\n            return view('upload_success', $data);\n        }\n\n        $data = ['errors' => 'The file has already been moved.'];\n\n        return view('upload_form', $data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Loops in Views with CodeIgniter 4\nDESCRIPTION: Demonstrates how to loop through an array of data passed from the controller in a view file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<html>\n    <head>\n        <title><?= esc($title) ?></title>\n    </head>\n    <body>\n        <h1><?= esc($heading) ?></h1>\n\n        <h2>My Todo List</h2>\n\n        <ul>\n            <?php foreach ($todo_list as $item): ?>\n\n                <li><?= esc($item) ?></li>\n\n            <?php endforeach; ?>\n        </ul>\n\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Method Remapping in CodeIgniter 4 Controller\nDESCRIPTION: Example of using _remap() method to override default method routing behavior in a controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\npublic function _remap() {\n    echo 'Hello World!';\n}\n```\n\n----------------------------------------\n\nTITLE: Controller Class Structure (PHP)\nDESCRIPTION: Shows the updated controller class structure required for CodeIgniter 4, including namespace and class extension changes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4xx.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nnamespace App\\Controllers;\n\nclass MyController extends BaseController\n```\n\n----------------------------------------\n\nTITLE: Whitelisting URIs from CSRF Protection\nDESCRIPTION: Configuration example that demonstrates how to whitelist specific URIs from CSRF protection, which is useful for API endpoints that expect external POST data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\npublic array $filters = [\n    'csrf' => ['except' => ['api/record/save']],\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Services Class in PHP\nDESCRIPTION: Demonstrates how to create a custom Services class for a Blog module that extends BaseService in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nnamespace Blog\\Config;\n\nuse CodeIgniter\\Config\\BaseService;\n\nclass Services extends BaseService\n{\n    public static function posts()\n    {\n        return new \\Blog\\Models\\PostModel();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Multiple Server Variables in CodeIgniter4\nDESCRIPTION: Demonstrates how to retrieve multiple $_SERVER values by passing an array of keys to the getServer method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_29\n\nLANGUAGE: php\nCODE:\n```\n$serverVars = $request->getServer(['SERVER_PROTOCOL', 'REQUEST_URI']);\n```\n\n----------------------------------------\n\nTITLE: Decryption with Custom Parameters\nDESCRIPTION: Examples of decrypting data with different parameter configurations including custom keys.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n// Using a custom key by passing as string\n$plaintext = $encrypter->decrypt($ciphertext, $customKey);\n\n// Using a custom key by passing as array\n$plaintext = $encrypter->decrypt($ciphertext, ['key' => $customKey]);\n\n// Using a custom key and different blockSize (with SodiumHandler)\n$plaintext = $encrypter->decrypt($ciphertext, [\n    'key'       => $customKey,\n    'blockSize' => 24\n]);\n```\n\n----------------------------------------\n\nTITLE: Image Flattening in CodeIgniter 4\nDESCRIPTION: Example of flattening a transparent PNG to a white background.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.png')\n    ->flatten(255, 255, 255)\n    ->save('/path/to/image/mypic.jpg');\n```\n\n----------------------------------------\n\nTITLE: Generating code coverage reports in CodeIgniter 4\nDESCRIPTION: Command to run tests while generating code coverage reports in both text and HTML formats with increased memory limits for comprehensive analysis.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/tests/README.md#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n> ./phpunit --colors --coverage-text=tests/coverage.txt --coverage-html=tests/coverage/ -d memory_limit=1024m\n```\n\n----------------------------------------\n\nTITLE: Manual Database Connection Close\nDESCRIPTION: Explicitly closes the database connection when needed.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$db->close();\n```\n\n----------------------------------------\n\nTITLE: Retrieving JSON Data in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to retrieve JSON data from the request body using the getJSON() method of the IncomingRequest class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$json = $request->getJSON();\n\n// Get as an associative array\n$json = $request->getJSON(true);\n\n// Get raw JSON stream as a string\n$jsonString = $request->getBody();\n```\n\n----------------------------------------\n\nTITLE: Defining Shared Service Instance in PHP\nDESCRIPTION: Shows how to define a service method that returns a shared instance using getSharedInstance() in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\npublic static function mycache(bool $getShared = true)\n{\n    if ($getShared)\n    {\n        return static::getSharedInstance('mycache');\n    }\n\n    return new \\CodeIgniter\\Cache\\Handlers\\FileHandler();\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Query Results in CodeIgniter 4\nDESCRIPTION: Example demonstrating how to count rows in a result set using countAllResults() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho $db->table('my_table')->where('id', $id)->countAllResults();\n```\n\n----------------------------------------\n\nTITLE: Renaming a Table in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to rename an existing table using the CodeIgniter Forge class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\n$this->forge->renameTable('old_table_name', 'new_table_name');\n```\n\n----------------------------------------\n\nTITLE: Adding Custom RouteCollection Service in PHP for CodeIgniter 4\nDESCRIPTION: This code snippet shows how to add a custom 'routes' service in the Services configuration file. It demonstrates how to replace the core RouteCollection with a custom implementation in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/core_classes.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\npublic static function routes(bool $getShared = true)\n{\n    if ($getShared) {\n        return static::getSharedInstance('routes');\n    }\n\n    return new \\App\\Libraries\\RouteCollection(static::locator(), config('Modules'));\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Strict Mode for Transactions\nDESCRIPTION: Example showing how to disable strict mode for transactions, allowing independent transaction groups.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transStrict(false);\n```\n\n----------------------------------------\n\nTITLE: Creating a Form View for News Items in CodeIgniter 4\nDESCRIPTION: This HTML form allows users to input news items. It includes CSRF protection and displays validation errors.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<h2><?= esc($title) ?></h2>\n\n<?= session()->getFlashdata('error') ?>\n<?= validation_list_errors() ?>\n\n<form action=\"/news\" method=\"post\">\n    <?= csrf_field() ?>\n\n    <label for=\"title\">Title</label>\n    <input type=\"input\" name=\"title\" value=\"<?= set_value('title') ?>\">\n    <br>\n\n    <label for=\"body\">Text</label>\n    <textarea name=\"body\" cols=\"45\" rows=\"4\"><?= set_value('body') ?></textarea>\n    <br>\n\n    <input type=\"submit\" name=\"submit\" value=\"Create news item\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Filtering POST Input in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to filter input data when retrieving it from the request, using the filter_var() function internally.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$email = $request->getPost('email', FILTER_SANITIZE_EMAIL);\n```\n\n----------------------------------------\n\nTITLE: Accessing Cache Engine with Service Function (PHP)\nDESCRIPTION: Shows how to grab an instance of the cache engine directly through the global service() function in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/002.php\n```\n\n----------------------------------------\n\nTITLE: Multiple Image Processing Operations in CodeIgniter 4\nDESCRIPTION: Example of chaining multiple image processing operations including orientation fixing, rotation, and cropping.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->reorient()\n    ->rotate(90)\n    ->crop(100, 100, 0, 0)\n    ->save('/path/to/image/mypic_thumb.jpg');\n```\n\n----------------------------------------\n\nTITLE: Getting File Size with Binary Units in CodeIgniter\nDESCRIPTION: Uses the getSizeByBinaryUnit() method to get file size in various binary units (bytes, KiB, MiB) with specified precision.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\Files\\FileSizeUnit;\n\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->getSizeByBinaryUnit();               // 2048\necho $file->getSizeByBinaryUnit(FileSizeUnit::BYTE);  // 2048\necho $file->getSizeByBinaryUnit(FileSizeUnit::KIBI);  // 2\necho $file->getSizeByBinaryUnit(FileSizeUnit::MEBI);  // 0.00\necho $file->getSizeByBinaryUnit(FileSizeUnit::MEBI, 3); // 0.002\n```\n\n----------------------------------------\n\nTITLE: Counting Table Rows in CodeIgniter 4\nDESCRIPTION: Example showing how to count total rows in a database table using the countAll() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\necho $db->table('my_table')->countAll();\n```\n\n----------------------------------------\n\nTITLE: Setting Validation Rules in CodeIgniter 4 Controller\nDESCRIPTION: Example of defining validation rules as an array in a CodeIgniter 4 controller. This syntax replaces the CI3 method of setting rules with the form_validation library.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_validations.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$rules = [\n    'username' => 'required|min_length[5]|max_length[12]',\n    'password' => 'required|min_length[8]',\n    'passconf' => 'required|matches[password]',\n    'email'    => 'required|valid_email',\n];\n```\n\n----------------------------------------\n\nTITLE: Supporting BaseBuilder Instance as Subquery\nDESCRIPTION: Adds functionality to use a BaseBuilder instance as a subquery in database operations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nFeature: BaseBuilder instance as subquery.\n```\n\n----------------------------------------\n\nTITLE: Using Regular Expressions for CSRF Protection Exceptions\nDESCRIPTION: Shows how to use regular expressions to whitelist URIs from CSRF protection, allowing for more flexible matching patterns.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\npublic array $filters = [\n    'csrf' => ['except' => ['api/record/[0-9]+']],\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Method-Specific Filters\nDESCRIPTION: Demonstrates how to set up filters for specific HTTP methods in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\npublic $methods = [\n    'POST' => ['foo', 'bar'],\n    'GET'  => ['baz'],\n];\n```\n\n----------------------------------------\n\nTITLE: Handling Too Many Requests in CodeIgniter API Responses\nDESCRIPTION: Example of using failTooManyRequests() method to respond when a client has made too many API calls. This is used for rate limiting and throttling scenarios, setting a 400 status code.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/api_responses.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nreturn $this->failTooManyRequests('You have exceeded the allowed number of queries for this minute. Please wait a while before trying again.');\n```\n\n----------------------------------------\n\nTITLE: Loading Migration Class with Foreign Key Handling\nDESCRIPTION: Example showing how to handle foreign key constraints during migrations by temporarily disabling and re-enabling foreign key checks.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$this->db->disableForeignKeyChecks();\n\n// Migration commands go here...\n\n$this->db->enableForeignKeyChecks();\n```\n\n----------------------------------------\n\nTITLE: Enabling CSRF Protection for Specific HTTP Methods\nDESCRIPTION: Configuration to enable CSRF protection only for specific HTTP methods rather than globally, restricting it to data-modifying methods like POST, PUT, DELETE, and PATCH.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\npublic array $methods = [\n    'post' => ['csrf'],\n    'put' => ['csrf'],\n    'delete' => ['csrf'],\n];\n```\n\n----------------------------------------\n\nTITLE: Rendering a View File\nDESCRIPTION: Example of rendering a view file with the View class render() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\necho $view->render('myview');\n```\n\n----------------------------------------\n\nTITLE: Handling Gone Resources in CodeIgniter API Responses\nDESCRIPTION: Example of using failResourceGone() method to respond when a requested resource was previously deleted and is no longer available. This sets a 410 status code and returns a formatted error response.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/api_responses.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nreturn $this->failResourceGone('The user you requested has been previously deleted.');\n```\n\n----------------------------------------\n\nTITLE: Testing Controllers with Custom Request Body\nDESCRIPTION: Demonstrates how to provide a custom request body for controller testing, useful for API testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n// If you were testing a JSON API you might do something like:\n$body = json_encode(['foo' => 'bar']);\n\n$results = $this->withBody($body)\n                ->controller(ForumController::class)\n                ->execute('index');\n```\n\n----------------------------------------\n\nTITLE: Accessing Multiple Server Variables in CodeIgniter 4\nDESCRIPTION: Retrieves multiple values from the $_SERVER array by passing an array of keys.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$values = $request->getServer(['SERVER_PROTOCOL', 'REQUEST_URI']);\n```\n\n----------------------------------------\n\nTITLE: Converting String to XML-safe Format in PHP\nDESCRIPTION: This example shows how to use the xml_convert() function to convert a string containing XML reserved characters into a safe format for XML use. It demonstrates the conversion of ampersands, less than and greater than symbols, and quotes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/xml_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$string = '<p>Here is a paragraph & an entity (&#123;).</p>';\n$string = xml_convert($string);\necho $string;\n```\n\n----------------------------------------\n\nTITLE: Loading and Displaying a View in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load and display a view file using the view() function within a controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nview('name');\n```\n\n----------------------------------------\n\nTITLE: Executing Controller Method with Parameters\nDESCRIPTION: Demonstrates how to execute a specific controller method with parameters for testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n// Executes: $controller->index()\n$results = $this->controller(ForumController::class)\n                ->execute('index');\n\n// Executes: $controller->index('first', 'second')\n$results = $this->controller(ForumController::class)\n                ->execute('index', 'first', 'second');\n```\n\n----------------------------------------\n\nTITLE: Dropping a Foreign Key in CodeIgniter PHP\nDESCRIPTION: Illustrates how to drop a foreign key from an existing table using the CodeIgniter Forge class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n$this->forge->dropForeignKey('table_name', 'foreign_key_name');\n```\n\n----------------------------------------\n\nTITLE: Performing Standard Insert Operation in CodeIgniter 4\nDESCRIPTION: Shows how to perform a standard SQL insert operation using the query() method. This snippet demonstrates inserting data into a table with specific column values.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$sql = \"INSERT INTO table_name (title, name) VALUES (\"Some title\", \"Some name\")\";\n$db->query($sql);\necho $db->affectedRows();\n```\n\n----------------------------------------\n\nTITLE: Enabling Auto Routing (Improved) in CodeIgniter 4 Configuration\nDESCRIPTION: Shows how to enable Auto Routing (Improved) by setting configuration options in app/Config/Routing.php and app/Config/Feature.php.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic bool $autoRoute = true;\n```\n\nLANGUAGE: php\nCODE:\n```\npublic bool $autoRoutesImproved = true;\n```\n\n----------------------------------------\n\nTITLE: Catching Specific Exception Types\nDESCRIPTION: Example of catching a specific DataException while letting other types of exceptions pass through to the error handler.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ntry {\n    $userModel->get(1);\n} catch (\\CodeIgniter\\Database\\Exceptions\\DataException $e) {\n    // Handle the error\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Config Properties\nDESCRIPTION: Shows how to access configuration properties from a configuration object.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$cache = config('Cache');\n$cacheLifetime = $cache->ttl;\n```\n\n----------------------------------------\n\nTITLE: Creating a Model in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:model generator to create a new model file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nmake:model <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Original Query in CodeIgniter 4\nDESCRIPTION: Shows how to get the original, unprocessed SQL query using the getOriginalQuery() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$sql = $query->getOriginalQuery();\n```\n\n----------------------------------------\n\nTITLE: Checking for Specific Mobile Device with isMobile() in CodeIgniter 4\nDESCRIPTION: Shows how to check if the user agent is a specific mobile device by passing the device name as a parameter to the isMobile() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nif ($agent->isMobile('iphone')) {\n    echo 'You are using an iPhone.';\n} elseif ($agent->isMobile()) {\n    echo 'You are using another mobile device.';\n}\n```\n\n----------------------------------------\n\nTITLE: Using HTTP Method Shorthand in CodeIgniter 4 Feature Tests\nDESCRIPTION: Examples of using shorthand methods for different HTTP verbs (GET, POST, PUT, DELETE, OPTIONS, PATCH) in CodeIgniter 4 feature tests, making the code more readable.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// The same as above\n$results = $this->get('/');\n\n// Send a POST request\n$results = $this->post('/posts', ['title' => 'My First Post', 'body' => 'This is the body']);\n\n// Send a PUT request\n$results = $this->put('/posts/1', ['title' => 'My First Post', 'body' => 'This is the body']);\n\n// Send a DELETE request\n$results = $this->delete('/posts/1');\n\n// Send an OPTIONS request\n$results = $this->options('/');\n\n// Send a PATCH request\n$results = $this->patch('/posts/1', ['title' => 'My First Post']);\n\n// Setup a CURL call\n$results = $this->curl('PUT', 'http://example.com/api', ['title' => 'My First Post', 'body' => 'This is the body']);\n```\n\n----------------------------------------\n\nTITLE: Basic Hello World Controller\nDESCRIPTION: Simple example of a controller extending BaseController with a basic index method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Helloworld extends BaseController\n{\n    public function index()\n    {\n        return 'Hello World!';\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Database Test Class in CodeIgniter 4\nDESCRIPTION: Example of a database test class in CodeIgniter 4 extending CIUnitTestCase and using the DatabaseTestTrait. This demonstrates how to set up database-based tests with fixtures.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Tests\\Support\\Models;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\n\nclass MyModelTest extends CIUnitTestCase\n{\n    use DatabaseTestTrait;\n\n    protected $refresh = true;\n    protected $seed    = 'Tests\\\\Support\\\\Database\\\\Seeds\\\\CITestSeeder';\n    protected $basePath = SUPPORTPATH . 'Database/'; // path to CITestSeeder\n\n    public function testModel()\n    {\n        $model = new \\Tests\\Support\\Models\\JobModel();\n        $job   = $model->find(1);\n\n        $this->assertSame('Developer', $job->name);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Exception Handler Selection Logic in CodeIgniter 4 PHP\nDESCRIPTION: This snippet demonstrates how to implement logic in the handler() method to select a specific exception handler based on the HTTP status code or exception type. It shows an example of returning a new instance of a custom handler class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\npublic function handler(int $statusCode, \\Throwable $exception): ?ExceptionHandlerInterface\n{\n    if ($statusCode === 404) {\n        return new \\App\\Exceptions\\Handler404();\n    }\n\n    return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Emails in CodeIgniter4\nDESCRIPTION: Examples of sending emails with automatic and manual parameter clearing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nif ($email->send()) {\n    // success\n} else {\n    // failure\n}\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->send(false);\n```\n\n----------------------------------------\n\nTITLE: Iterating Over FileCollection in PHP\nDESCRIPTION: Shows how to iterate over a FileCollection and work with individual File objects.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/file_collections.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nforeach ($collection as $file)\n{\n    $contents = $file->openFile()->fread($file->getSize());\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Event Handler Priorities\nDESCRIPTION: Illustrates how to set priority levels for event handlers to control execution order.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nEvents::on('pre_system', 'MyClass::myFunction', 1);   // Highest priority\nEvents::on('pre_system', 'OtherClass::someFunction', 75); // Lower priority\n```\n\n----------------------------------------\n\nTITLE: Checking for Specific Browser with isBrowser() in CodeIgniter 4\nDESCRIPTION: Shows how to check if the user agent is a specific browser by passing the browser name as a parameter to the isBrowser() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nif ($agent->isBrowser('Safari')) {\n    echo 'You are using Safari.';\n} else {\n    echo 'You are not using Safari.';\n}\n```\n\n----------------------------------------\n\nTITLE: Loading the Form Helper in CodeIgniter 4\nDESCRIPTION: This code snippet demonstrates how to load the Form Helper in a CodeIgniter 4 application. The helper provides functions for working with HTML forms.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nhelper('form');\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Filtering Raw Input Variables in CodeIgniter (PHP)\nDESCRIPTION: Shows how to retrieve and filter a specific variable from the raw input stream using the getRawInputVar() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$foo = $request->getRawInputVar('foo');\n$bar = $request->getRawInputVar('bar', FILTER_SANITIZE_STRING);\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Routes in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example of overriding existing routes for a feature test using the withRoutes() method, which accepts an array of route definitions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$routes = [\n    ['get', 'users', 'UserController::list'],\n    ['post', 'users', 'UserController::create'],\n    ['get', 'users/(:num)', 'UserController::show/$1'],\n];\n\n$results = $this->withRoutes($routes)\n    ->get('users');\n```\n\n----------------------------------------\n\nTITLE: Filtering FileCollection with Patterns in PHP\nDESCRIPTION: Shows examples of using removePattern and retainPattern methods to filter files in a FileCollection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/file_collections.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$collection->removePattern('*.bak');\n$collection->retainPattern('*.php');\n$collection->removePattern('#^Config/#', APPPATH);\n$collection->retainPattern('Config\\\\*', APPPATH);\n```\n\n----------------------------------------\n\nTITLE: IP Address Validation in CodeIgniter 4\nDESCRIPTION: Validates an IP address using the isValidIP method. Can check for both IPv4 and IPv6 formats.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif ($request->isValidIP($ip))\n{\n    echo 'This is a valid IP address';\n}\nelse\n{\n    echo 'This is not a valid IP address';\n}\n```\n\n----------------------------------------\n\nTITLE: 404 Page Not Found Exception\nDESCRIPTION: Example of throwing a PageNotFoundException with a custom message.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nthrow PageNotFoundException::forPageNotFound();\n```\n\n----------------------------------------\n\nTITLE: Setting Form Values with set_value() in PHP\nDESCRIPTION: Demonstrates how to use the set_value() function to set the value of an input or textarea element. It shows an example of setting a default value for a text input.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_24\n\nLANGUAGE: PHP\nCODE:\n```\n<input type=\"text\" name=\"quantity\" value=\"<?= set_value('quantity', '0') ?>\" size=\"50\">\n```\n\n----------------------------------------\n\nTITLE: Specifying Image Handler in CodeIgniter 4\nDESCRIPTION: Example of initializing the image service with a specific handler (GD or ImageMagick).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$image = \\Config\\Services::image('imagick');\n```\n\n----------------------------------------\n\nTITLE: Encoding Encryption Keys\nDESCRIPTION: Example of encoding binary encryption keys for easier storage and handling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$key = Encryption::createKey(32);\n$encoded = bin2hex($key);\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Event Handler in CodeIgniter\nDESCRIPTION: Shows how to subscribe to a pre_system event by registering a class method as an event handler.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nEvents::on('pre_system', [MyClass::class, 'myFunction']);\n```\n\n----------------------------------------\n\nTITLE: Creating Implicit Configuration Registrar in PHP\nDESCRIPTION: Example of a Registrar class implementing a Pager configuration method to add templates.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nclass Registrar\n{\n    public static function Pager(): array\n    {\n        return [\n            'templates' => [\n                'module_pager' => 'MyModule\\Views\\Pager',\n            ],\n        ];\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Route Filters with Spark Command\nDESCRIPTION: Example of using the filter:check command to inspect filters applied to a specific route and HTTP method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_11\n\nLANGUAGE: console\nCODE:\n```\nphp spark filter:check get /\n```\n\n----------------------------------------\n\nTITLE: Setting Email Preferences with Array in CodeIgniter\nDESCRIPTION: Shows how to configure email preferences by passing an array to the initialize method of the Email class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$config['protocol'] = 'sendmail';\n$config['mailPath'] = '/usr/sbin/sendmail';\n$config['charset']  = 'iso-8859-1';\n$config['wordWrap'] = true;\n\n$email = \\Config\\Services::email();\n$email->initialize($config);\n```\n\n----------------------------------------\n\nTITLE: Starting a Timer in CodeIgniter 4\nDESCRIPTION: Demonstrates how to start a timer using the Timer class in CodeIgniter 4. The start() method takes a single parameter which is the name of the timer.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$timer = new \\CodeIgniter\\Benchmark\\Timer();\n$timer->start('render view');\n```\n\n----------------------------------------\n\nTITLE: Generating a Random Filename with CodeIgniter File Class\nDESCRIPTION: Uses the getRandomName() method to generate a cryptographically secure random filename with a timestamp prepended, useful for making filenames unguessable when moving files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->getRandomName();  // Something like: 1465965676_385e33f741.jpg\n```\n\n----------------------------------------\n\nTITLE: Alternative Event Handler Definitions\nDESCRIPTION: Demonstrates different ways to define event handlers using PHP callables.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nEvents::on('pre_system', 'MyClass::myFunction');     // As a static method\nEvents::on('pre_system', [$myInstance, 'myFunction']); // Object method\nEvents::on('pre_system', function () {                 // Closure\n    // Some code here\n});\n```\n\n----------------------------------------\n\nTITLE: Database Query Example - Grab From Database\nDESCRIPTION: Demonstrates how to retrieve specific data from the database during tests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic function testGetJobInfo()\n{\n    $job = $this->grabFromDatabase('jobs', 'name', ['id' => 1]);\n}\n```\n\n----------------------------------------\n\nTITLE: Image Resizing with Ratio Maintenance in CodeIgniter 4\nDESCRIPTION: Example of resizing an image while maintaining aspect ratio.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->resize(100, 200, true, 'height')\n    ->save('/path/to/image/mypic_resized.jpg');\n```\n\n----------------------------------------\n\nTITLE: Preloading Helpers in BaseController\nDESCRIPTION: This code demonstrates how to preload helpers in the BaseController. It shows how to add HTML and Text helpers to the $helpers array for universal availability.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/basecontroller.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nprotected $helpers = ['html', 'text'];\n```\n\n----------------------------------------\n\nTITLE: Retrieving Next Row in PHP\nDESCRIPTION: This method returns the next row from the result set. The row can be returned as an array, object, or custom class instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_24\n\nLANGUAGE: php\nCODE:\n```\ngetNextRow([$type = 'object'])\n```\n\n----------------------------------------\n\nTITLE: Using Kint d() Method for Debugging in PHP\nDESCRIPTION: Demonstrates using Kint's d() method to dump variable contents to the screen while allowing script execution to continue.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/debugging.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nd($value);\n```\n\n----------------------------------------\n\nTITLE: Filtering GET Parameters in CodeIgniter 4\nDESCRIPTION: Demonstrates retrieving filtered GET parameters using optional filter types and flags for data sanitization.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_26\n\nLANGUAGE: php\nCODE:\n```\n$request->getGet('field1');\n$request->getGet('field1', FILTER_SANITIZE_STRING);\n$request->getGet(null, FILTER_SANITIZE_STRING);\n$request->getGet(['field1', 'field2']);\n$request->getGet(['field1', 'field2'], FILTER_SANITIZE_STRING);\n```\n\n----------------------------------------\n\nTITLE: Getting New Timer Instance in CodeIgniter 4\nDESCRIPTION: Demonstrates how to get a new instance of the Timer service instead of a shared instance by passing false to the getShared parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$timer1 = service('timer', false);\n$timer2 = service('timer', false);\n```\n\n----------------------------------------\n\nTITLE: Loading the Security Library in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load the Security library through the Services file when direct access is needed, though it's typically not required for CSRF protection as it runs as a filter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$security = \\Config\\Services::security();\n```\n\n----------------------------------------\n\nTITLE: Generating Localized URL in CodeIgniter\nDESCRIPTION: Illustrates the use of url_to() function with a locale parameter to generate a localized URL in a CodeIgniter application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_22\n\nLANGUAGE: php\nCODE:\n```\n// Generates: http://example.com/index.php/en/products/chairs\necho url_to('App\\Controllers\\Catalog::productLookup', 'chairs', 'en');\n```\n\n----------------------------------------\n\nTITLE: Setting Up Database Test Class in CodeIgniter 4\nDESCRIPTION: Basic test class setup showing required class extension and trait usage for database testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\n\nclass MyTests extends CIUnitTestCase\n{\n    use DatabaseTestTrait;\n}\n```\n\n----------------------------------------\n\nTITLE: Exception Logging Configuration\nDESCRIPTION: Configuration setting to enable or disable exception logging in CodeIgniter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic bool $log = true;\n```\n\n----------------------------------------\n\nTITLE: Getting Foreign Key Data in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve foreign key information from a table using getForeignKeyData() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$keys = $db->getForeignKeyData('table_name');\n```\n\n----------------------------------------\n\nTITLE: Resource Controller Route Definition\nDESCRIPTION: Route definition for connecting the Photos ResourceController to endpoints.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos');\n```\n\n----------------------------------------\n\nTITLE: Custom Route Definition Example\nDESCRIPTION: Shows how to define custom routes with different naming conventions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$routes->get('products', '\\App\\Controllers\\Products::feature');\n$routes->get('products/(:num)', '\\App\\Controllers\\Products::feature/$1');\n```\n\n----------------------------------------\n\nTITLE: Smart Image Fitting in CodeIgniter 4\nDESCRIPTION: Example of using the fit method for smart image cropping and resizing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->fit(100, 100, 'center')\n    ->save('/path/to/image/mypic_thumb.jpg');\n```\n\n----------------------------------------\n\nTITLE: Language Negotiation\nDESCRIPTION: Demonstrates negotiating language preferences between client and server.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$supported = [\n    'en',\n    'de'\n];\n\n// Using the Negotiator class\n$negotiator->language($supported);\n\n// Using the Request class\n$request->negotiate('language', $supported);\n```\n\n----------------------------------------\n\nTITLE: Using Custom Service from Controller in PHP\nDESCRIPTION: Shows how to use a custom service (posts) from a controller in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$postModel = \\Config\\Services::posts();\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4.x Model Upgrade Using Built-in Model Features\nDESCRIPTION: An enhanced CI4 model implementation that leverages the built-in model features like find(), insert(), and update() methods instead of direct Query Builder usage.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_models.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass BlogModel extends Model\n{\n    protected $table = 'entries';\n    protected $allowedFields = ['title', 'content', 'date'];\n\n    public function getLastTenEntries()\n    {\n        return $this->orderBy('id', 'desc')\n                    ->findAll(10);\n    }\n\n    public function insertEntry($title, $content)\n    {\n        $data = [\n            'title'   => $title,\n            'content' => $content,\n            'date'    => time(),\n        ];\n\n        return $this->insert($data);\n    }\n\n    public function updateEntry($id, $title, $content)\n    {\n        $data = [\n            'title'   => $title,\n            'content' => $content,\n        ];\n\n        return $this->update($id, $data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing SplFileInfo Methods with CodeIgniter File Class\nDESCRIPTION: Demonstrates how to use the underlying SplFileInfo methods through CodeIgniter's File class to get various file details.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\n// Get the file's basename\necho $file->getBasename();\n// Get last modified time\necho $file->getMTime();\n// Get the size in bytes\necho $file->getSize();\n// Get mime type\necho $file->getMimeType();\n\n// Check if the file is writable\nif ($file->isWritable())\n{\n    // do something\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Keys to Existing Table in CodeIgniter PHP\nDESCRIPTION: Shows how to add various types of keys (primary, unique, foreign) to an existing table using the CodeIgniter Forge class, followed by processing the indexes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$this->forge->addKey('blog_id', true);\n$this->forge->addUniqueKey(['blog_id', 'locale']);\n$this->forge->addForeignKey('users_id', 'users', 'id');\n$this->forge->processIndexes('table');\n```\n\n----------------------------------------\n\nTITLE: Creating CURLRequest Instances in CodeIgniter 4\nDESCRIPTION: Shows how to create CURLRequest instances using the service() function, demonstrating that subsequent calls return the same shared instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$options1 = ['base_uri' => 'http://example.com/api/v1/'];\n$client1  = service('curlrequest', $options1);\n\n$options2 = ['base_uri' => 'http://another-example.com/api/v2/'];\n$client2  = service('curlrequest', $options2);\n```\n\n----------------------------------------\n\nTITLE: Configuring Classmap in CodeIgniter 4 Autoloader\nDESCRIPTION: Example of using the classmap in the Autoload.php configuration file to load non-namespaced third-party libraries by mapping class names to file paths.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/autoloader.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $classmap = [\n    'Markdown' => APPPATH . 'ThirdParty/markdown.php'\n];\n```\n\n----------------------------------------\n\nTITLE: Checking for Referrer with isReferral() and getReferrer() in CodeIgniter 4\nDESCRIPTION: Example showing how to check if the user was referred from another site and retrieve the referrer URL if available.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nif ($agent->isReferral()) {\n    echo 'You were referred from: ' . $agent->getReferrer();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Multiple Helpers in CodeIgniter 4\nDESCRIPTION: Illustrates how to load multiple helpers at once by passing an array of file names to the helper() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nhelper(['helper1', 'helper2', 'helper3']);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Database Names in CodeIgniter 4\nDESCRIPTION: Shows how to use the Database Utility Class to retrieve an array of database names.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$dbs = $util->listDatabases();\n```\n\n----------------------------------------\n\nTITLE: Moving Files with Original Filename in CodeIgniter\nDESCRIPTION: Demonstrates how to move a file to a new location while keeping the original filename using the move() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\n$file->move(WRITEPATH.'uploads');\n```\n\n----------------------------------------\n\nTITLE: Creating Mock Cache Instance in CodeIgniter 4\nDESCRIPTION: Creates a mock instance of the Cache service that can be used for testing. The mock is automatically inserted into the Service class, replacing the normal cache implementation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/mocking.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$cache = $this->mock('CacheFactory');\n```\n\n----------------------------------------\n\nTITLE: Loading Namespaced Views in CodeIgniter 4\nDESCRIPTION: Shows how to load view files from namespaced directories using CodeIgniter's namespaced views feature.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nview('Example\\\\Blog\\\\Views\\\\blog_view');\n```\n\n----------------------------------------\n\nTITLE: Getting File Size in Bytes with CodeIgniter\nDESCRIPTION: Retrieves the size of a file in bytes using the getSize() method. This will throw a RuntimeException if the file doesn't exist or an error occurs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->getSize();      // 114\n```\n\n----------------------------------------\n\nTITLE: Creating Encrypter Instance with Custom Configuration\nDESCRIPTION: Example showing how to create an Encrypter instance with custom configuration settings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nuse Config\\Encryption;\nuse CodeIgniter\\Encryption\\Encryption;\n\n$config         = new Encryption();\n$config->driver = 'OpenSSL';\n$config->key    = 'aBigsecret_ofAtleast32Characters';\n\n$encrypter = \\Config\\Services::encrypter($config);\n```\n\n----------------------------------------\n\nTITLE: Generating CSRF Meta Tag in PHP\nDESCRIPTION: Returns a meta tag with CSRF header and hash for AJAX request protection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<meta name=\"{csrf_header}\" content=\"{csrf_hash}\">\n```\n\n----------------------------------------\n\nTITLE: Getting Final Query in CodeIgniter 4\nDESCRIPTION: Shows how to get the final query after all processing using the getQuery() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$sql = $query->getQuery();\n```\n\n----------------------------------------\n\nTITLE: Initializing User Agent Class from IncomingRequest in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve the User Agent class from the current request instance in a controller. This allows access to user agent information for the current visitor.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$agent = $this->request->getUserAgent();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Metadata in CodeIgniter 4\nDESCRIPTION: Example of getting detailed field metadata including type, length, and other properties using getFieldData() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$fields = $db->getFieldData('table_name');\n\nforeach ($fields as $field) {\n    echo $field->name;\n    echo $field->type;\n    echo $field->max_length;\n    echo $field->nullable;\n    echo $field->default;\n    echo $field->primary_key;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Manipulation Parameters in CodeIgniter 4\nDESCRIPTION: Documentation of parameters used for image manipulation in CodeIgniter 4, including alignment, offset, and font settings. These parameters can be used when working with CodeIgniter's image manipulation library.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_14\n\nLANGUAGE: markup\nCODE:\n```\n- ``vAlign``        Vertical alignment: ``'top'``, ``'middle'``, ``'bottom'``\n- ``hOffset``        Additional offset on the x axis, in pixels\n- ``vOffset``        Additional offset on the y axis, in pixels\n- ``fontPath``        The full server path to the TTF font you wish to use. System font will be used if none is given.\n- ``fontSize``        The font size to use. When using the GD handler with the system font, valid values are between ``1`` to ``5``.\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Helper Function in CodeIgniter 4\nDESCRIPTION: Shows how to create a custom helper function named 'get_info()' in a file named 'info_helper.php'.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nfunction get_info()\n{\n    return 'My info';\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination in CodeIgniter 3.x\nDESCRIPTION: Example of pagination implementation in CodeIgniter 3.x showing controller configuration and database queries. The snippet demonstrates how to set up pagination configuration, load the pagination library, and retrieve data with pagination limits.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_pagination.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Products extends CI_Controller\n{\n    public function index()\n    {\n        // load pagination library\n        $this->load->library('pagination');\n        \n        // init params\n        $config['total_rows'] = $this->db->count_all('products');\n        $config['per_page'] = 20;\n        $config['uri_segment'] = 3;\n        $config['base_url'] = site_url('products/index');\n        $this->pagination->initialize($config);\n        \n        $data['pagination'] = $this->pagination;\n        \n        // get current page records\n        $data['products'] = $this->db\n                           ->get('products', $config['per_page'], $this->uri->segment(3))\n                           ->result();\n        \n        $this->load->view('products/index', $data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Checkbox State in HTML Forms with CodeIgniter4\nDESCRIPTION: Example showing how to use set_checkbox() function to maintain checkbox state in forms. The function handles multiple checkboxes with array notation in the name attribute.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_26\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" name=\"mycheck[]\" value=\"1\" <?= set_checkbox('mycheck', '1') ?>>\n<input type=\"checkbox\" name=\"mycheck[]\" value=\"2\" <?= set_checkbox('mycheck', '2') ?>>\n```\n\n----------------------------------------\n\nTITLE: Creating a Dropdown Menu with form_dropdown() in PHP\nDESCRIPTION: Demonstrates how to use the form_dropdown() function to create a standard dropdown field. It shows basic usage and how to add additional attributes to the select tag.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_18\n\nLANGUAGE: PHP\nCODE:\n```\necho form_dropdown('shirts', array('small' => 'Small Shirt', 'large' => 'Large Shirt'), 'large');\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_dropdown('shirts', $options, 'large', 'id=\"shirts\"');\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_dropdown('shirts', $options, 'large', ['id' => 'shirts']);\n```\n\n----------------------------------------\n\nTITLE: Encoding Negotiation\nDESCRIPTION: Example of negotiating content encoding support between client and server.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$supported = [\n    'gzip'\n];\n\n// Using the Negotiator class\n$negotiator->encoding($supported);\n```\n\n----------------------------------------\n\nTITLE: Setting X-Requested-With Header in jQuery AJAX Request\nDESCRIPTION: This snippet shows how to explicitly set the X-Requested-With header in a jQuery AJAX request, although it's typically included by default.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/ajax.rst#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$.ajax({\n    url: \"your url\",\n    headers: {'X-Requested-With': 'XMLHttpRequest'}\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Spark Command in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:command generator to create a new spark command in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nmake:command <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Setting Radio Button State in HTML Forms with CodeIgniter4\nDESCRIPTION: Example demonstrating the use of set_radio() function to maintain radio button state in forms. Shows usage with default selected value and multiple radio options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_27\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"radio\" name=\"myradio\" value=\"1\" <?= set_radio('myradio', '1', true) ?>>\n<input type=\"radio\" name=\"myradio\" value=\"2\" <?= set_radio('myradio', '2') ?>>\n```\n\n----------------------------------------\n\nTITLE: Formatting Request Body in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example of setting the format of a request body (JSON or XML) using the withBodyFormat() method, which is useful when testing APIs expecting specific input formats.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n// Using JSON\n$results = $this->withBodyFormat('json')\n    ->post('users', ['name' => 'Joe Smith']);\n\n// Using XML\n$results = $this->withBodyFormat('xml')\n    ->post('users', ['name' => 'Joe Smith']);\n```\n\n----------------------------------------\n\nTITLE: Replacing Table Prefix in SQL Query in CodeIgniter 4\nDESCRIPTION: Demonstrates how to replace one table prefix with another in an SQL query using the swapPrefix() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$sql = $query->swapPrefix('ci3_', 'ci4_');\n```\n\n----------------------------------------\n\nTITLE: Redirect Exception with Response Interface\nDESCRIPTION: Example of throwing a RedirectException using a ResponseInterface implementation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\nthrow new RedirectException($response);\n```\n\n----------------------------------------\n\nTITLE: Configuring Filter Aliases in CodeIgniter 4\nDESCRIPTION: Demonstrates how to set up filter aliases in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $aliases = [\n    'csrf'     => \\CodeIgniter\\Filters\\CSRF::class,\n    'toolbar'  => \\CodeIgniter\\Filters\\DebugToolbar::class,\n    'honeypot' => \\CodeIgniter\\Filters\\Honeypot::class,\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Exception Handler in CodeIgniter 4 PHP Configuration\nDESCRIPTION: This snippet shows how to configure a custom exception handler in the app/Config/Exceptions.php file. It demonstrates the basic structure of the handler() method where custom logic can be implemented to determine which handler to use.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\nuse CodeIgniter\\Debug\\ExceptionHandlerInterface;\n\nclass Exceptions extends BaseConfig\n{\n    public function handler(int $statusCode, \\Throwable $exception): ?ExceptionHandlerInterface\n    {\n        // Custom logic here\n\n        return null;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Library Factory Configuration\nDESCRIPTION: Example configuration file that defines options for loading library classes from a specific directory.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n<?php namespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\n\nclass Factory extends BaseConfig\n{\n    public $library = [\n        'path' => 'Libraries',\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring URI-Specific Filters\nDESCRIPTION: Shows how to set up filters for specific URI patterns in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\npublic $filters = [\n    'foo' => ['before' => ['admin/*'], 'after' => ['users/*']],\n    'bar' => ['before' => ['api/*', 'admin/*']],\n];\n```\n\n----------------------------------------\n\nTITLE: Moving Files with New Filename in CodeIgniter\nDESCRIPTION: Shows how to move a file to a new location and specify a new filename as the second parameter to the move() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\n$file->move(WRITEPATH.'uploads', 'my_new_file.jpg');\n```\n\n----------------------------------------\n\nTITLE: Getting Filenames in CodeIgniter 4\nDESCRIPTION: Demonstrates retrieving an array of filenames from a directory\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$files = get_filenames('./mydir/');\n```\n\n----------------------------------------\n\nTITLE: Extending the Array Helper in CodeIgniter 4\nDESCRIPTION: Illustrates how to extend the native Array Helper by adding a new function 'array_foo()' and overriding an existing function 'element()'.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n// Extends the array helper\n\nfunction array_foo()\n{\n    return 'foo';\n}\n\n// overrides the element function in the native Array Helper\nfunction element($item, array $array, $default = null)\n{\n    // Your new element-finding code here\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Old Form Data in CodeIgniter 4 PHP\nDESCRIPTION: Shows how to use the old() function to retrieve previously submitted form data, with an optional default value and escaping.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// In a controller\n$name = old('name');\n$email = old('email', 'example@example.com');\n\n// In a view\n<input type=\"text\" name=\"username\" value=\"<?= old('username') ?>\">\n<input type=\"text\" name=\"email\" value=\"<?= old('email', 'example@example.com') ?>\">\n```\n\n----------------------------------------\n\nTITLE: Working with Multiple Header Values in PHP\nDESCRIPTION: Shows how to handle headers with multiple values using getValue() and getValueLine() methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$header = $message->header('Accept-Language');\n\n$values = $header->getValue();\n// [en, en-US]\n\n$values = $header->getValueLine();\n// en, en-US\n```\n\n----------------------------------------\n\nTITLE: Limiting Characters in a String in PHP\nDESCRIPTION: Demonstrates the use of character_limiter() function to truncate a string to a specified number of characters while maintaining word integrity.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a nice text string consisting of eleven words.\";\necho character_limiter($string, 20); // returns \"Here is a nice text...\"\n```\n\n----------------------------------------\n\nTITLE: Creating Image Thumbnail in CodeIgniter 4\nDESCRIPTION: Example of creating a thumbnail by fitting an image to specific dimensions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->fit(100, 100)\n    ->save('/path/to/image/mypic_thumb.jpg');\n```\n\n----------------------------------------\n\nTITLE: Alternative Method for Loading a Helper from a Specific Namespace\nDESCRIPTION: Shows an alternative syntax for loading a helper from a specific namespace using an array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nhelper(['Example\\Blog\\blog']);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Post-Get Data in CodeIgniter 4\nDESCRIPTION: Demonstrates getting request data from combined POST and GET streams, preferring POST values in case of conflicts. Uses optional filtering and flags for data sanitization.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_23\n\nLANGUAGE: php\nCODE:\n```\n$request->getPostGet('field1');\n```\n\n----------------------------------------\n\nTITLE: Specifying CSRF Field ID in form_open() for CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to specify a custom ID for the CSRF field generated by form_open() when CSRF protection is enabled.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\necho form_open('u/sign-up', ['csrf_id' => 'my-id']);\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic AppInfo Command in PHP for CodeIgniter 4\nDESCRIPTION: This code snippet demonstrates how to create a simple AppInfo command class that extends BaseCommand. It includes properties for group, name, and description, as well as a basic run() method implementation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_commands.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Commands;\n\nuse CodeIgniter\\CLI\\BaseCommand;\nuse CodeIgniter\\CLI\\CLI;\n\nclass AppInfo extends BaseCommand\n{\n    protected $group       = 'demo';\n    protected $name        = 'app:info';\n    protected $description = 'Displays basic application information.';\n\n    public function run(array $params)\n    {\n        // ... implementation\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Route has No Filters\nDESCRIPTION: Shows how to assert that a route has no filters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$this->assertNotHasFilters('api/books', 'before');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Table Records in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve and display records from a specific table with various options for limiting rows and field values.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/db_commands.rst#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:table my_table --limit-rows 50 --limit-field-value 20 --desc\n```\n\n----------------------------------------\n\nTITLE: Decoding JSON Database Configuration in CodeIgniter 4\nDESCRIPTION: This example shows how to decode a JSON string containing database configuration options in CodeIgniter 4. This is useful when storing complex configuration values in environment variables.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\npublic function __construct()\n{\n    parent::__construct();\n\n    if (property_exists($this, 'default')) {\n        $this->default['encrypt'] = json_decode($this->default['encrypt'], true);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Composer Path in CodeIgniter 4 Constants\nDESCRIPTION: This code modifies the COMPOSER_PATH constant in the Constants.php file when running multiple applications with one CodeIgniter installation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\ndefined('COMPOSER_PATH') || define('COMPOSER_PATH', ROOTPATH . 'vendor/autoload.php');\n```\n\n----------------------------------------\n\nTITLE: Loading CodeIgniter4 Negotiator Class\nDESCRIPTION: Example of loading the Negotiator class instance through the Service class for content negotiation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$negotiator = \\Config\\Services::negotiator($request);\n```\n\n----------------------------------------\n\nTITLE: Dropping a Primary Key in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to drop a primary key from an existing table using the CodeIgniter Forge class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$this->forge->dropPrimaryKey('table_name', 'pk_name');\n```\n\n----------------------------------------\n\nTITLE: Accessing Server Variables in CodeIgniter 4\nDESCRIPTION: Retrieves values from the $_SERVER array with optional filtering.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$request->getServer('SERVER_PROTOCOL');\n```\n\n----------------------------------------\n\nTITLE: Database Assertion Example - See In Database\nDESCRIPTION: Shows how to assert that specific data exists in the database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic function testUserInDatabase()\n{\n    $this->seeInDatabase('users', [\n        'name' => 'Joe User',\n        'email' => 'joe@example.com',\n    ]);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Report-Only Mode for Content Security Policy\nDESCRIPTION: Example of setting up reporting-only mode for CSP, which allows content to load but reports violations. This is useful for testing CSP implementation before enforcing it.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/csp.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->response->getCSP()\n    ->reportOnly(true)\n    ->addStyleSrc('cdn.example.com')\n    ->addScriptSrc('js.example.com')\n    ->addDirective('report-uri', 'http://example.com/csp_report.php');\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Exception Handler in PHP for CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to create a custom exception handler class that implements the CodeIgniter\\Debug\\ExceptionHandlerInterface. It shows the minimum code required to display a view and exit with the proper exit code.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Exceptions;\n\nuse CodeIgniter\\Debug\\ExceptionHandlerInterface;\nuse CodeIgniter\\Exceptions\\PageNotFoundException;\nuse Throwable;\n\nclass Handler404 implements ExceptionHandlerInterface\n{\n    public function handle(Throwable $exception): void\n    {\n        if ($exception instanceof PageNotFoundException) {\n            echo view('errors/html/error_404');\n            exit(404);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Loading a Helper in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load a helper file named 'name_helper.php' using the helper() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('name');\n```\n\n----------------------------------------\n\nTITLE: CLI Prompt with Allowed Answers\nDESCRIPTION: Demonstrates restricting CLI prompt input to specific allowed answers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$overwrite = CLI::prompt('File exists. Overwrite?', ['y','n']);\n```\n\n----------------------------------------\n\nTITLE: Checking Table Existence in CodeIgniter 4\nDESCRIPTION: Demonstrates how to check if a specific table exists in the database using tableExists() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif ($db->tableExists('table_name')) {\n    // do something\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Single Field Validation Error in CodeIgniter4\nDESCRIPTION: Example demonstrating how to display a validation error for a specific form field using validation_show_error() function. Useful for showing field-specific error messages.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_30\n\nLANGUAGE: php\nCODE:\n```\n<?= validation_show_error('username') ?>\n```\n\n----------------------------------------\n\nTITLE: Using service() Function with Parameters in PHP\nDESCRIPTION: Shows how to use the service() function with additional parameters when creating a service instance in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$db = service('db', $dbConfig);\n```\n\n----------------------------------------\n\nTITLE: Getting Number of Rows\nDESCRIPTION: Shows how to get the number of rows in the result\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM users;');\n\necho 'Number of results: ' . $query->getNumRows();\n```\n\n----------------------------------------\n\nTITLE: CLI Prompt with Default Value\nDESCRIPTION: Shows how to set a default value for CLI prompt that will be used if user just hits enter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$name = CLI::prompt('What is your name?', 'John Smith');\n```\n\n----------------------------------------\n\nTITLE: Escaping Form Field Values in CodeIgniter 4\nDESCRIPTION: This example shows how to safely escape HTML special characters in form field values using the esc() function to prevent breaking the form structure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$string = \"Is your name O'reilly?\";\n\n<input type=\"text\" name=\"myfield\" value=\"<?= esc($string) ?>\">\n```\n\n----------------------------------------\n\nTITLE: Using getCustomRowObject()\nDESCRIPTION: Example of getting a single row as a custom class instance\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$user = $query->getCustomRowObject(0, 'User');\n```\n\n----------------------------------------\n\nTITLE: Centered Image Cropping in CodeIgniter 4\nDESCRIPTION: Example of calculating and performing a centered crop operation on an image.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$info = \\Config\\Services::image('imagick')\n    ->withFile('/path/to/image/mypic.jpg')\n    ->getFile()\n    ->getProperties(true);\n\n$xOffset = ($info['width'] - 50) / 2;\n$yOffset = ($info['height'] - 50) / 2;\n\n\\Config\\Services::image('imagick')\n    ->withFile('/path/to/image/mypic.jpg')\n    ->crop(50, 50, $xOffset, $yOffset)\n    ->save('/path/to/image/mypic_thumb.jpg');\n```\n\n----------------------------------------\n\nTITLE: Padding Output in PHP for CodeIgniter 4 CLI Commands\nDESCRIPTION: This snippet demonstrates the usage of the setPad() method to format output consistently in CLI commands.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_commands.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$pad = $this->setPad($item, $max, $extra, $indent);\n```\n\n----------------------------------------\n\nTITLE: Attaching Files in CodeIgniter4\nDESCRIPTION: Examples of attaching files to emails using different methods and options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$email->attach('/path/to/photo1.jpg');\n$email->attach('/path/to/photo2.jpg');\n$email->attach('/path/to/photo3.jpg');\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->attach('/path/to/photo1.jpg', 'inline');\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->attach('http://example.com/filename.pdf');\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->attach('/path/to/photo1.jpg', '', 'custom_name.jpg');\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->attach($buffer, '', 'photo1.jpg', 'image/jpeg');\n```\n\n----------------------------------------\n\nTITLE: Checking for HTTPS Connection in CodeIgniter (PHP)\nDESCRIPTION: Shows how to determine if the current request was made through an HTTPS connection using the isSecure() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nif ($request->isSecure()) {\n    // .\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Request Headers in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example of setting custom HTTP headers for a feature test request using the withHeaders() method, which accepts an array of header key-value pairs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$headers = [\n    'CONTENT_TYPE' => 'application/json',\n];\n\n$results = $this->withHeaders($headers)\n    ->post('users', ['name' => 'Joe Smith']);\n```\n\n----------------------------------------\n\nTITLE: Running Benchmark Tasks with Iterator in CodeIgniter 4\nDESCRIPTION: Demonstrates how to run the defined tasks with the Iterator's run() method. By default, it runs each task 1000 times, but you can specify a different number of iterations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n// Run the tasks, 2000 iterations each\necho $iterator->run(2000);\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Headers in CodeIgniter4\nDESCRIPTION: Example of adding custom headers to the email using setHeader() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$email->setHeader('Header1', 'Value1');\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Config with DSN Query String in CodeIgniter 4\nDESCRIPTION: This example demonstrates how to override default configuration values by adding them as a query string to the DSN in CodeIgniter 4's database configuration. This allows for fine-tuning connection parameters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $default = [\n    'DSN'      => 'MySQLi://username:password@hostname:3306/database?charset=utf8&DBCollat=utf8_general_ci',\n    'hostname' => '',\n    'username' => '',\n    'password' => '',\n    'database' => '',\n    'DBDriver' => 'MySQLi',\n];\n```\n\n----------------------------------------\n\nTITLE: Bypassing Cache During Tests in CodeIgniter 4\nDESCRIPTION: Instructs the mocked cache handler to never perform caching operations, which emulates using the dummy handler for tests that shouldn't rely on cached data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/mocking.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$cache = $this->mock('CacheFactory');\n$cache->bypass();\n```\n\n----------------------------------------\n\nTITLE: Using getCustomResultObject()\nDESCRIPTION: Shows how to get results as custom class instances\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$users = $query->getCustomResultObject('User');\n```\n\n----------------------------------------\n\nTITLE: Checking Current URL Path in CodeIgniter\nDESCRIPTION: Demonstrates the use of url_is() function to compare the current URL's path against a given path in a CodeIgniter application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_23\n\nLANGUAGE: php\nCODE:\n```\nif (url_is('admin')) {\n    // Do something here\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Factory Options at Runtime\nDESCRIPTION: Demonstrates setting factory options programmatically using the setOptions static method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nFactories::setOptions('blogs', [\n    'instanceOf' => BlogInterface::class,\n]);\n```\n\n----------------------------------------\n\nTITLE: Using is() Method for Request Type Checking (PHP)\nDESCRIPTION: Shows how to use the is() method to check the HTTP method or if the request is AJAX or JSON.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nif ($request->is('get')) {}\nif ($request->is('post')) {}\nif ($request->is('ajax')) {}\nif ($request->is('json')) {}\nif ($request->is('DELETE')) {}\n```\n\n----------------------------------------\n\nTITLE: Method Chaining with View Class\nDESCRIPTION: Example of chaining multiple view data setting methods together.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$view->setVar('name', 'George')\n     ->setVar('title', 'Profile Page')\n     ->setVar('email', 'george@example.com');\n```\n\n----------------------------------------\n\nTITLE: Getting Field Data from Query Result in CodeIgniter 4\nDESCRIPTION: Shows how to get field metadata from a query result object instead of directly from table.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('YOUR QUERY');\n$fieldData = $query->getFieldData();\n```\n\n----------------------------------------\n\nTITLE: Command Line Seeding in CodeIgniter 4\nDESCRIPTION: Demonstrates how to run a seeder from the command line using the Migrations CLI tools.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:seed TestSeeder\n```\n\n----------------------------------------\n\nTITLE: Using Kint trace() Method for Backtrace\nDESCRIPTION: Shows how to use Kint's trace() method to generate a backtrace at the current execution point with Kint's enhanced formatting.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/debugging.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ntrace();\n```\n\n----------------------------------------\n\nTITLE: Modifying a Column in CodeIgniter PHP\nDESCRIPTION: Demonstrates how to modify an existing column in a database table using the CodeIgniter Forge class. It shows adding a 'name' key to change the column name.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$fields = [\n    'old_name' => [\n        'name' => 'new_name',\n        'type' => 'TEXT',\n    ],\n];\n$this->forge->modifyColumn('table_name', $fields);\n```\n\n----------------------------------------\n\nTITLE: Setting From Address with Return-Path in CodeIgniter Email\nDESCRIPTION: Shows how to set the 'from' email address with a return path for handling undelivered mail.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$email->setFrom('you@example.com', 'Your Name', 'returned_emails@example.com');\n```\n\n----------------------------------------\n\nTITLE: Updated RouteCollection Constructor Signature in CodeIgniter 4\nDESCRIPTION: The method signature of RouteCollection::__construct() has been changed to include a third parameter 'Routing $routing'. Classes that extend RouteCollection need to update their constructor signature to maintain Liskov Substitution Principle compliance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_440.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nRouteCollection::__construct(/* ... */, /* ... */, Routing $routing)\n```\n\n----------------------------------------\n\nTITLE: Nesting Seeders in CodeIgniter 4\nDESCRIPTION: Shows how to nest seeders by calling other seeder classes within a main seeder using the call() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Database\\Seeds;\n\nuse CodeIgniter\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    public function run()\n    {\n        $this->call('UserSeeder');\n        $this->call('CountrySeeder');\n        $this->call('JobSeeder');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic CLI Prompt Usage\nDESCRIPTION: Demonstrates how to prompt the user for input using the CLI prompt() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$name = CLI::prompt('What is your name?');\n```\n\n----------------------------------------\n\nTITLE: Setting Select Menu Values with set_select() in PHP\nDESCRIPTION: Shows how to use the set_select() function to display the selected item in a <select> menu. It demonstrates setting default values and multiple options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_25\n\nLANGUAGE: PHP\nCODE:\n```\n<select name=\"myselect\">\n    <option value=\"one\" <?= set_select('myselect', 'one', true) ?>>One</option>\n    <option value=\"two\" <?= set_select('myselect', 'two') ?>>Two</option>\n    <option value=\"three\" <?= set_select('myselect', 'three') ?>>Three</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Custom Row Object in PHP\nDESCRIPTION: This method returns a specific row from the result set as an instance of a custom class. It takes the row index and the class name as parameters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\ngetCustomRowObject($n, $type)\n```\n\n----------------------------------------\n\nTITLE: Rendering Views in CodeIgniter 4 PHP\nDESCRIPTION: Shows how to use the view() function to render a view file with data and options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho view('header', $data);\necho view('menu', $menu);\necho view('content', $data);\necho view('footer');\n\necho view('page', $data, ['cache' => 60]);\n```\n\n----------------------------------------\n\nTITLE: Entity Data Injection in PHP\nDESCRIPTION: Method to inject raw data into an Entity class in CodeIgniter 4, replacing the deprecated setAttributes() method\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.0.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nEntity::injectRawData()\n```\n\n----------------------------------------\n\nTITLE: URI Segment Setting in PHP\nDESCRIPTION: Demonstrates the fixed behavior of URI::setSegment() where an exception is now properly thrown when attempting to set an invalid segment number.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_440.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$uri = new \\CodeIgniter\\HTTP\\URI();\n\n// This will now throw the exception as expected\n$uri->setSegment(3, 'string');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Metadata for a Cached Item (PHP)\nDESCRIPTION: Example demonstrating how to get detailed metadata information for a specific item in the cache using the getMetadata() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/011.php\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Configuration Class in CodeIgniter 4\nDESCRIPTION: Example of converting the CodeIgniter 3 configuration array into a CodeIgniter 4 configuration class, extending BaseConfig and using public properties.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_configuration.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\n\nclass Site extends BaseConfig\n{\n    public $siteName = 'My Great Site';\n    public $theme = 'default';\n    public $timezone = 'America/Chicago';\n    public $currencySymbol = '$';\n    public $currencyCode = 'USD';\n    public $language = 'english';\n}\n```\n\n----------------------------------------\n\nTITLE: Protocol-relative Links with base_url()\nDESCRIPTION: Shows how to generate protocol-relative links using base_url() with empty protocol parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\necho base_url('blog/post/123', '');\n```\n\n----------------------------------------\n\nTITLE: Bypassing Events in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example of skipping event handling during a feature test using the skipEvents() method, which is useful for preventing side effects like email sending during tests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$results = $this->skipEvents()\n    ->post('users', ['name' => 'Joe Smith']);\n```\n\n----------------------------------------\n\nTITLE: Getting Single Row with getRow()\nDESCRIPTION: Demonstrates retrieving a single result row as an object\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$row = $query->getRow();\n\nif (isset($row)) {\n    echo $row->title;\n    echo $row->name;\n    echo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Test Class in CodeIgniter 4\nDESCRIPTION: Example of a basic test class in CodeIgniter 4 extending CIUnitTestCase. This shows the structure of a simple test with setUp() and a test method that demonstrates assertions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Tests\\Support\\Models;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\n\nclass MyModelTest extends CIUnitTestCase\n{\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        // Additional setup goes here\n    }\n\n    public function testFooHasBar()\n    {\n        $result = 'bar';\n\n        $this->assertSame('bar', $result);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Config File in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:config generator to create a new config file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nmake:config <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Disabling Transactions\nDESCRIPTION: Example showing how to disable transactions using transOff() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transOff();\n```\n\n----------------------------------------\n\nTITLE: Loading Multiple Views in CodeIgniter 4\nDESCRIPTION: Shows how to load multiple views that will be appended together with dynamic data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Page extends BaseController\n{\n    public function index()\n    {\n        $data = [\n            'page_title' => 'Your title',\n        ];\n\n        return view('header', $data)\n            . view('menu')\n            . view('content', $data)\n            . view('footer');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Resetting Transaction Status\nDESCRIPTION: Example showing how to reset transaction status after a failure in strict mode.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$this->db->resetTransStatus();\n```\n\n----------------------------------------\n\nTITLE: Highlighting Code in PHP\nDESCRIPTION: Shows how to use highlight_code() function to colorize a string of code using PHP's built-in syntax highlighting.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n$string = highlight_code($string);\n```\n\n----------------------------------------\n\nTITLE: Initializing Image Service in CodeIgniter 4\nDESCRIPTION: Example of initializing the image manipulation service using the default handler.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$image = \\Config\\Services::image();\n```\n\n----------------------------------------\n\nTITLE: Loading Encryption Service in CodeIgniter 4\nDESCRIPTION: Example showing how to load the Encryption Service via Config\\Services.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n\\Config\\Services::encrypter();\n```\n\n----------------------------------------\n\nTITLE: Creating Lowercase URL-Friendly Strings in PHP\nDESCRIPTION: Illustrates the use of url_title() function with the lowercase parameter set to true, forcing all characters to lowercase.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\necho url_title('What would Jesus eat?', '-', true);\n// Produces: what-would-jesus-eat\n```\n\n----------------------------------------\n\nTITLE: Database Assertion Example - Don't See In Database\nDESCRIPTION: Shows how to assert that specific data does not exist in the database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic function testUserNotInDatabase()\n{\n    $this->dontSeeInDatabase('users', [\n        'name' => 'Bogus User',\n        'email' => 'bogus@example.com',\n    ]);\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Reply-To Address in CodeIgniter Email\nDESCRIPTION: Demonstrates how to set the reply-to email address and name when sending an email.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$email->setReplyTo('feedback@example.com', 'Feedback');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Command Line Options in PHP\nDESCRIPTION: Illustrates the use of the getOptions() method to obtain an array of command line arguments considered as options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_request.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$options = $request->getOptions();\n```\n\n----------------------------------------\n\nTITLE: Modifying Files with CodeIgniter 4 Publisher\nDESCRIPTION: Examples of using new Publisher methods to modify files, including replace(), addLineAfter(), and addLineBefore().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.0.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$publisher->replace(\n    'Config/Routes.php',\n    \"app->routes(function(\\RouteCollection &\\$routes) {\",\n    \"app->routes(function(\\CodeIgniter\\Router\\RouteCollection &\\$routes) {\"\n);\n\n$publisher->addLineAfter(\n    'Config/Routes.php',\n    \"* @var \\RouteCollection \\$routes\",\n    \"* @var \\CodeIgniter\\Router\\RouteCollection \\$routes\"\n);\n\n$publisher->addLineBefore(\n    'Config/Routes.php',\n    'app->routes(function(\\RouteCollection &\\$routes) {',\n    '// Define your routes here'\n);\n```\n\n----------------------------------------\n\nTITLE: CLI Error Output\nDESCRIPTION: Demonstrates writing error messages using the error() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\nCLI::error('Cannot write to file.');\n```\n\n----------------------------------------\n\nTITLE: CLI Write with Background Color\nDESCRIPTION: Shows how to write text with both foreground and background colors.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nCLI::write('File created!', 'green', 'black');\n```\n\n----------------------------------------\n\nTITLE: Adding Content Security Policy Rules at Runtime\nDESCRIPTION: Examples of adding various CSP directives at runtime through the response object. These methods allow specifying trusted content sources for different resource types.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/csp.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// Sites we can load images from\n$this->response->getCSP()->addImageSrc('cdn.example.com');\n\n// Sites we can send AJAX requests to\n$this->response->getCSP()->addConnectSrc('api.example.com');\n\n// Allows certain styles, media, scripts, etc to load from specific sources\n$this->response->getCSP()->addStyleSrc('cdn.example.com');\n$this->response->getCSP()->addStyleSrc('css.example.com', true);     // report only for this\n$this->response->getCSP()->addMediaSrc('cdn.example.com');\n$this->response->getCSP()->addScriptSrc('js.example.com', false);    // explicitly block\n$this->response->getCSP()->addFrameSrc('deframe.example.com');       // control iframes\n$this->response->getCSP()->addWorkerSrc('worker.example.com');       // control worker scripts\n$this->response->getCSP()->addFormAction('action.example.com');      // control form actions\n\n// Specify your CSP policy clearly\n$this->response->getCSP()->addDirective('default-src', 'none');      // nothing allowed by default\n$this->response->getCSP()->addDirective('script-src', 'self');       // only local scripts allowed\n$this->response->getCSP()->addDirective('style-src', 'self');        // only local styles allowed\n$this->response->getCSP()->addDirective('img-src', 'self');          // only local images allowed\n$this->response->getCSP()->addDirective('base-uri', 'self');         // only local URIs for <base> allowed\n$this->response->getCSP()->addDirective('form-action', 'self');      // only local form submissions\n$this->response->getCSP()->addEmptySources('object-src');            // don't allow any object sources\n```\n\n----------------------------------------\n\nTITLE: Customizing SecureHeaders Filter Configuration\nDESCRIPTION: Example of extending the SecureHeaders filter class to customize HTTP security headers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\n\nclass Filters extends BaseConfig\n{\n    public $aliases = [\n        'secureheaders' => \\App\\Filters\\SecureHeaders::class,\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Language in CodeIgniter 4\nDESCRIPTION: Specifies the default locale setting in CodeIgniter 4's App.php configuration file. This setting determines which language set will be used by default when the application displays messages.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_localization.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\npublic $defaultLocale = 'en';\n```\n\n----------------------------------------\n\nTITLE: Loading Library Class\nDESCRIPTION: Shows how to load a library class using the Factories library method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nFactories::library('SomeLib');\n```\n\n----------------------------------------\n\nTITLE: Getting Field Names from Table in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve field names directly from a table using getFieldNames() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$fields = $db->getFieldNames('table_name');\n```\n\n----------------------------------------\n\nTITLE: Adding Text Watermark in CodeIgniter 4\nDESCRIPTION: Example of adding a text watermark with various styling options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->text('Copyright 2023 My Name', [\n        'color'         => '#fff',\n        'opacity'       => 0.5,\n        'withShadow'    => true,\n        'hAlign'        => 'center',\n        'vAlign'        => 'bottom',\n        'fontSize'      => 20\n    ])\n    ->save('/path/to/image/mypic_watermarked.jpg');\n```\n\n----------------------------------------\n\nTITLE: Adding Protocol Prefix to URL in PHP\nDESCRIPTION: Shows how to use the prep_url() function to ensure a URL has a protocol prefix (http:// or https://).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n$url = prep_url('example.com');\n```\n\n----------------------------------------\n\nTITLE: Creating a Text Input Field with Attributes in CodeIgniter 4\nDESCRIPTION: This example shows how to create a text input field with additional attributes using the form_input() function by passing an associative array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\n$data = [\n    'name'      => 'username',\n    'id'        => 'username',\n    'value'     => 'johndoe',\n    'maxlength' => '100',\n    'size'      => '50',\n    'style'     => 'width:50%'\n];\n\necho form_input($data);\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Query with Single Result (Array Version) in CodeIgniter 4\nDESCRIPTION: Demonstrates how to execute a standard SQL query and retrieve a single result as an array using the getRowArray() method. This approach returns the result with standard array indexes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT name, title, email FROM my_table LIMIT 1');\n$row = $query->getRowArray();\n\necho $row['title'];\necho $row['name'];\necho $row['email'];\n```\n\n----------------------------------------\n\nTITLE: Nested Sections in View Layout\nDESCRIPTION: Shows how to implement nested sections within a view, including a JavaScript section inside content.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_layouts.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?= $this->extend('default') ?>\n\n<?= $this->section('content') ?>\n    <h1>Hello World!</h1>\n    <?= $this->section('javascript') ?>\n       let a = 'a';\n    <?= $this->endSection() ?>\n<?= $this->endSection() ?>\n```\n\n----------------------------------------\n\nTITLE: Setting Default X-Requested-With Header in VueJS with Axios\nDESCRIPTION: This code sets the X-Requested-With header as a default for all Axios requests in a VueJS application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/ajax.rst#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n```\n\n----------------------------------------\n\nTITLE: Creating an Input Field with Boolean Attributes in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to create an input field with boolean attributes using the form_input() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\necho form_input('email', 'joe@example.com', ['readonly' => true]);\n```\n\n----------------------------------------\n\nTITLE: Dropping a Key in CodeIgniter PHP\nDESCRIPTION: Shows how to drop a key (index) from an existing table using the CodeIgniter Forge class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$this->forge->dropKey('table_name', 'key_name');\n```\n\n----------------------------------------\n\nTITLE: Calling Other Commands in PHP for CodeIgniter 4 CLI\nDESCRIPTION: This snippet demonstrates how to call other commands from within a command using the call() method of BaseCommand.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_commands.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic function run(array $params)\n{\n    $this->call('command:name');\n}\n```\n\n----------------------------------------\n\nTITLE: Generating CSRF Hidden Input in PHP\nDESCRIPTION: Returns a hidden input field with CSRF token and hash for form protection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<input type=\"hidden\" name=\"{csrf_token}\" value=\"{csrf_hash}\">\n```\n\n----------------------------------------\n\nTITLE: Retrieving Index Data in CodeIgniter 4\nDESCRIPTION: Demonstrates how to get index information from a table using getIndexData() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$keys = $db->getIndexData('table_name');\n```\n\n----------------------------------------\n\nTITLE: CLI Write with Text Color\nDESCRIPTION: Demonstrates writing colored text to terminal using the write() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nCLI::write('File created!', 'green');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Command Line Arguments as Path Segments in PHP\nDESCRIPTION: Demonstrates the use of the getSegments() method to retrieve an array of command line arguments that are considered part of the path.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_request.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$segments = $request->getSegments();\n```\n\n----------------------------------------\n\nTITLE: Initializing Database Utility Class in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load the Database Utility Class in CodeIgniter 4. It shows the basic initialization and how to specify a different database group.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$db      = \\Config\\Database::connect();\n$util    = $db->utils();\n```\n\nLANGUAGE: php\nCODE:\n```\n$db      = \\Config\\Database::connect('other_db');\n$util    = $db->utils();\n```\n\n----------------------------------------\n\nTITLE: Group Routing for Modules\nDESCRIPTION: Example of using group routing to simplify module route definitions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$routes->group('blog', ['namespace' => 'Acme\\Blog\\Controllers'], static function($routes) {\n    $routes->get('/', 'Blog::index');\n});\n```\n\n----------------------------------------\n\nTITLE: Advanced Method Remapping with Multiple Parameters\nDESCRIPTION: Demonstrates _remap() implementation with method name and additional parameters handling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\npublic function _remap($method, ...$params) {\n    $method = 'process_' . $method;\n    if (method_exists($this, $method)) {\n        return $this->$method(...$params);\n    }\n    throw new \\CodeIgniter\\Exceptions\\PageNotFoundException();\n}\n```\n\n----------------------------------------\n\nTITLE: Exporting Query Result to XML in CodeIgniter 4\nDESCRIPTION: Demonstrates how to export a query result to an XML format using the Database Utility Class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM mytable');\n\n$config = ['root' => 'root', 'element' => 'element', 'newline' => \"\\n\", 'tab' => \"\\t\"];\n\necho $util->getXMLFromResult($query, $config);\n```\n\n----------------------------------------\n\nTITLE: Adding Attributes as String to form_open() in CodeIgniter 4\nDESCRIPTION: This example shows an alternative way to add HTML attributes to the form tag using form_open() by passing a string as the second parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\necho form_open('email/send', 'class=\"email\" id=\"myform\"');\n```\n\n----------------------------------------\n\nTITLE: Presenter Route Definition\nDESCRIPTION: Creates routes for presentation controller methods using the presenter() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$routes->presenter('photos');\n```\n\n----------------------------------------\n\nTITLE: Creating a Module Registrar\nDESCRIPTION: Example of creating a registrar for module configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nnamespace Acme\\Blog\\Config;\n\nuse CodeIgniter\\Filters\\Config\\Filters;\n\nclass RegisterFilters extends Filters\n{\n    public $aliases = [\n        'blog-auth' => \\Acme\\Blog\\Filters\\BlogAuthFilter::class,\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Testing CLI Input with PhpStreamWrapper in CodeIgniter 4\nDESCRIPTION: This example shows how to use PhpStreamWrapper to simulate user input in CLI commands. The wrapper allows setting predefined input content to be returned when a command requests user input.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/cli.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter;\n\nuse CodeIgniter\\Test\\PhpStreamWrapper;\n\nfinal class SomeTest extends CIUnitTestCase\n{\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        // Register PhpStreamWrapper\n        PhpStreamWrapper::register();\n    }\n\n    protected function tearDown(): void\n    {\n        // Restore the original php protocol wrapper\n        PhpStreamWrapper::restore();\n\n        parent::tearDown();\n    }\n\n    public function testWaitForAnyKey(): void\n    {\n        // Set the input data\n        PhpStreamWrapper::setContent('abcdefg');\n\n        // Call CLI::prompter() asking for user input\n        $output = CLI::prompter('Give a name for the controller', 'Home');\n\n        // Check that the output matches our input\n        $this->assertSame('abcdefg', $output);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using PhpStreamWrapper for CLI Input Testing in PHP\nDESCRIPTION: Demonstration of using the new PhpStreamWrapper to set input data for php://stdin in CLI application testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.0.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nPhpStreamWrapper::register();\nPhpStreamWrapper::setContent('y');\n$input = fopen('php://stdin', 'r');\n$userInput = fgets($input);\nPhpStreamWrapper::restore();\n```\n\n----------------------------------------\n\nTITLE: Incrementing a Cached Value (PHP)\nDESCRIPTION: Example demonstrating how to perform atomic incrementation of a raw stored value in cache using the increment() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/007.php\n```\n\n----------------------------------------\n\nTITLE: Triggering Events with Parameters\nDESCRIPTION: Shows how to trigger events while passing additional parameters to event handlers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nEvents::trigger('user_registration', $user, $activation_code);\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple View Variables\nDESCRIPTION: Demonstrates setting multiple view variables at once using setData() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$data = [\n    'title' => 'My title',\n    'heading' => 'My Heading',\n    'message' => 'My Message'\n];\n$view->setData($data);\n```\n\n----------------------------------------\n\nTITLE: Ellipsizing Text using CodeIgniter 4 Text Helper in PHP\nDESCRIPTION: Demonstrates the ellipsize function which strips tags from a string, splits it at a defined maximum length, and inserts an ellipsis. It takes parameters for the input string, maximum length, position to split, and optional ellipsis character.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n$str = 'this_string_is_entirely_too_long_and_might_break_my_design.jpg';\n$new_str = ellipsize($str, 32, .5);\necho $new_str;\n```\n\n----------------------------------------\n\nTITLE: Creating a Single Hidden Input Field in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to create a single hidden input field using the form_hidden() function with a name/value pair.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\necho form_hidden('username', 'johndoe');\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Route Service in CodeIgniter 4\nDESCRIPTION: Demonstrates how to add a custom routes() method to the Services configuration to use a custom RouteCollection implementation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\npublic static function routes(bool $getShared = true)\n{\n    if ($getShared)\n    {\n        return static::getSharedInstance('routes');\n    }\n\n    return new \\App\\Router\\MyRouteCollection();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing run() Method for AppInfo Command in PHP\nDESCRIPTION: This code demonstrates a basic implementation of the run() method for the AppInfo command, which displays various application information using the CLI library.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_commands.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic function run(array $params)\n{\n    CLI::write('PHP Version: ' . CLI::color(PHP_VERSION, 'yellow'));\n    CLI::write('CI Version: ' . CLI::color(\\CodeIgniter\\CodeIgniter::CI_VERSION, 'yellow'));\n    CLI::write('APPPATH: ' . CLI::color(APPPATH, 'yellow'));\n    CLI::write('SYSTEMPATH: ' . CLI::color(SYSTEMPATH, 'yellow'));\n    CLI::write('ROOTPATH: ' . CLI::color(ROOTPATH, 'yellow'));\n    CLI::write('Included files: ' . CLI::color(count(get_included_files()), 'yellow'));\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing URI Segments in CodeIgniter (PHP)\nDESCRIPTION: Shows how to access different segments of the URI using methods of the URI object.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_22\n\nLANGUAGE: php\nCODE:\n```\n$uri = $request->getUri();\n\necho $uri->getScheme();         // http\necho $uri->getAuthority();      // example.com\necho $uri->getUserInfo();       // username:password\necho $uri->getHost();           // example.com\necho $uri->getPort();           // 80\necho $uri->getPath();           // /some/path\necho $uri->getRoutePath();      // /some/path\necho $uri->getQuery();          // foo=bar&bar=baz\necho $uri->getFragment();       // anchor\necho $uri->getSegments();       // ['some', 'path']\necho $uri->getSegment(1);       // 'some'\necho $uri->getTotalSegments();  // 2\n```\n\n----------------------------------------\n\nTITLE: Using anchor() Function Examples\nDESCRIPTION: Shows various ways to create HTML anchor links using the anchor() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\necho anchor('news/local/123', 'My News');\n\necho anchor('news/local/123', 'My News', ['title' => 'The best news!']);\n\necho anchor('news/local/123', 'My News', 'title=\"The best news!\"');\n```\n\n----------------------------------------\n\nTITLE: Listing Available Spark Commands\nDESCRIPTION: Shows how to display a list of available spark commands using the default help page or the list command. Includes options for simple listing of commands.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/spark_commands.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark\n```\n\nLANGUAGE: console\nCODE:\n```\nphp spark list\n```\n\nLANGUAGE: console\nCODE:\n```\nphp spark list --simple\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed Fields in NewsModel for CodeIgniter 4\nDESCRIPTION: This code defines the fields that are allowed to be saved to the database in the NewsModel class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nclass NewsModel extends Model\n{\n    protected $table = 'news';\n\n    protected $allowedFields = ['title', 'slug', 'body'];\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Controllers with Custom URI\nDESCRIPTION: Shows how to provide a custom URI for controller testing to simulate client requests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$results = $this->withUri('http://example.com/forums/categories')\n                ->controller(ForumController::class)\n                ->execute('index');\n```\n\n----------------------------------------\n\nTITLE: Setting Email Subject in CodeIgniter4\nDESCRIPTION: Example of setting the email subject using setSubject() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$email->setSubject('This is my subject');\n```\n\n----------------------------------------\n\nTITLE: Capturing Moved File Result in CodeIgniter\nDESCRIPTION: Demonstrates how to capture the result of the move() method, which returns a new File instance for the relocated file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\n$newFile = $file->move(WRITEPATH.'uploads');\n```\n\n----------------------------------------\n\nTITLE: Incrementing Strings in PHP\nDESCRIPTION: Demonstrates the use of increment_string() function to append or increase numbers in strings, useful for creating unique identifiers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho increment_string('file', '_');\necho increment_string('file', '-', 2);\necho increment_string('file-4');\n```\n\n----------------------------------------\n\nTITLE: Generating URL with Arguments in CodeIgniter\nDESCRIPTION: Shows how to use url_to() function with additional arguments to create a URL with parameters in a CodeIgniter application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n// Generates: http://example.com/index.php/products/chairs/plastic/123\necho url_to('App\\Controllers\\Catalog::productLookup', 'chairs', 'plastic', '123');\n```\n\n----------------------------------------\n\nTITLE: Logging Messages in CodeIgniter 4\nDESCRIPTION: Using the log_message() function to log messages in CodeIgniter 4 for security monitoring and debugging purposes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/security.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nlog_message()\n```\n\n----------------------------------------\n\nTITLE: Using timezone_select() Function in Date Helper\nDESCRIPTION: Example showing how to generate an HTML select field with timezone options using timezone_select() function. Supports optional class, default value, timezone filter, and country filter parameters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho timezone_select('custom-select', 'America/New_York');\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Link Element\nDESCRIPTION: Creates a basic HTML link element for stylesheets.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\necho link_tag('css/myestyle.css');\n```\n\n----------------------------------------\n\nTITLE: Using nl2brExceptPre Function\nDESCRIPTION: Demonstrates usage of nl2brExceptPre function to convert newlines to HTML line breaks except within pre tags.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$string = $typography->nl2brExceptPre($string);\n```\n\n----------------------------------------\n\nTITLE: Creating a Label with form_label() in PHP\nDESCRIPTION: Shows how to use the form_label() function to generate a <label> element. It includes examples of basic usage and setting additional attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_21\n\nLANGUAGE: PHP\nCODE:\n```\necho form_label('What is your Name', 'username');\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_label('What is your Name', 'username', ['id' => 'name_label', 'class' => 'label']);\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Method Spoofing in HTML Form\nDESCRIPTION: Demonstrates how to add a hidden input field to spoof HTTP methods like PUT or DELETE in an HTML form. The '_method' hidden input allows the form to be treated as a different HTTP verb by CodeIgniter's routing and IncomingRequest class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/methodspoofing.rst#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"_method\" value=\"PUT\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Raw Input Data in CodeIgniter (PHP)\nDESCRIPTION: Shows how to retrieve raw input data from the request body using the getRawInput() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$data = $request->getRawInput();\n```\n\n----------------------------------------\n\nTITLE: Apache mod_rewrite Configuration\nDESCRIPTION: Apache configuration to enable mod_rewrite module for clean URLs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_2\n\nLANGUAGE: apache\nCODE:\n```\nLoadModule rewrite_module modules/mod_rewrite.so\n```\n\n----------------------------------------\n\nTITLE: Deleting a Cookie in CodeIgniter\nDESCRIPTION: Shows how to delete a cookie using the delete_cookie() function with basic parameters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/cookie_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ndelete_cookie($name);\n```\n\n----------------------------------------\n\nTITLE: Using the global timer() function in CodeIgniter 4\nDESCRIPTION: Demonstrates the use of CodeIgniter's global timer() function as an alternative to the Timer class. This function can be used to start and stop timers with a simpler syntax.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Start a timer\ntimer('render view');\n\n// Stop a timer\ntimer('render view');\n```\n\n----------------------------------------\n\nTITLE: Converting Spaces to Underscores in PHP\nDESCRIPTION: This example shows how to use the underscore() function to replace spaces with underscores in a string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\necho underscore('my dog spot'); // Prints 'my_dog_spot'\n```\n\n----------------------------------------\n\nTITLE: Creating Submit and Reset Buttons in PHP\nDESCRIPTION: Demonstrates the use of form_submit() and form_reset() functions to create submit and reset buttons. It shows basic usage and setting attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_22\n\nLANGUAGE: PHP\nCODE:\n```\necho form_submit('mysubmit', 'Submit Post!');\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_reset('myreset', 'Reset');\n```\n\n----------------------------------------\n\nTITLE: Using Renderer Service with Custom View Path in PHP\nDESCRIPTION: Demonstrates how to use the renderer service with a custom view path in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$renderer = \\Config\\Services::renderer('/path/to/views');\n```\n\n----------------------------------------\n\nTITLE: Adding Attributes to form_open() in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to add HTML attributes to the form tag using the form_open() function by passing an associative array as the second parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$attributes = ['class' => 'email', 'id' => 'myform'];\necho form_open('email/send', $attributes);\n```\n\n----------------------------------------\n\nTITLE: Changing Image Quality Without Processing in CodeIgniter 4\nDESCRIPTION: Example of changing image quality without any other processing operations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/images/mypic.jpg')\n    ->withResource()\n    ->save('/path/to/images/my_low_quality_pic.jpg', 10);\n```\n\n----------------------------------------\n\nTITLE: Event Priority Constants Usage\nDESCRIPTION: Shows the usage of predefined priority constants for event handlers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// Events with higher priority will be executed first\nEvents::on('pre_system', 'MyClass::myFunction', Events::PRIORITY_HIGH);\nEvents::on('pre_system', 'MyClass::otherFunction', Events::PRIORITY_NORMAL);\nEvents::on('post_system', 'MyClass::cleanup', Events::PRIORITY_LOW);\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4 Form Validation Controller Implementation\nDESCRIPTION: Complete controller example showing form validation implementation in CodeIgniter 4.x, using the new validation approach with validateData method and passing validation results to the view.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_validations.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Controller;\n\nclass Form extends Controller\n{\n    public function index()\n    {\n        helper('form');\n\n        $rules = [\n            'username' => 'required',\n            'password' => 'required',\n            'passconf' => 'required',\n            'email'    => 'required',\n        ];\n\n        if (! $this->validateData($this->request->getPost(), $rules)) {\n            return view('myform', [\n                'validation' => $this->validator,\n            ]);\n        }\n\n        return view('formsuccess');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Filter Configuration for Testing\nDESCRIPTION: Shows how to customize the filter configuration for testing specific filter behavior.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$this->filtersConfig->globals['before'] = ['debug'];\n$result = $this->getFiltersForRoute('/', 'before');\n$this->assertContains('debug', $result);\n```\n\n----------------------------------------\n\nTITLE: Creating Link with Attributes Array\nDESCRIPTION: Creates a link element using an associative array for attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\necho link_tag([\n    'href'     => 'css/printer.css',\n    'rel'      => 'stylesheet',\n    'type'     => 'text/css',\n    'media'    => 'print'\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuration Exception Example\nDESCRIPTION: Example of throwing a ConfigException for invalid configuration values.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nthrow new ConfigException();\n```\n\n----------------------------------------\n\nTITLE: Testing Controllers with Custom Request\nDESCRIPTION: Demonstrates how to provide a custom IncomingRequest instance for controller testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$request = new \\CodeIgniter\\HTTP\\IncomingRequest(new \\Config\\App(), new \\CodeIgniter\\HTTP\\URI('https://example.com'));\n// Set the request however you need...\n\n$results = $this->withRequest($request)\n                ->controller(ForumController::class)\n                ->execute('index');\n```\n\n----------------------------------------\n\nTITLE: Changing Application Namespace in CodeIgniter 4\nDESCRIPTION: Example of changing the default 'App' namespace to a custom namespace in the Constants.php file. This affects the namespace of application files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/autoloader.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\ndefined('APP_NAMESPACE') || define('APP_NAMESPACE', 'MyApp');\n```\n\n----------------------------------------\n\nTITLE: Optimizing a Database in CodeIgniter 4\nDESCRIPTION: Demonstrates how to optimize the entire connected database using the Database Utility Class. Returns an array of status messages or false on failure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$result = $util->optimizeDatabase();\n\nif (is_bool($result))\n{\n    echo 'Success!';\n}\nelseif (is_array($result))\n{\n    foreach ($result as $msg)\n    {\n        echo $msg;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Caching Views with Custom Cache Name in CodeIgniter 4\nDESCRIPTION: Shows how to cache a view with a custom cache name rather than using the view filename.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nview('file_name', $data, ['cache' => 60, 'cache_name' => 'my_cached_view']);\n```\n\n----------------------------------------\n\nTITLE: Rendering a View String\nDESCRIPTION: Shows how to render a string containing view content using renderString() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\necho $view->renderString($viewContent);\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations in CodeIgniter 4 using CLI\nDESCRIPTION: Example of how to run database migrations in CodeIgniter 4 using the spark command-line interface. This simple command executes all pending migrations on the database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_migrations.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark migrate\n```\n\n----------------------------------------\n\nTITLE: Retrieving Full URL in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to retrieve the full URL of the current request by casting the URI object to a string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n$uri = (string) $request->getUri();\n\n// http://example.com/some/path\n```\n\n----------------------------------------\n\nTITLE: Error Handling in Image Processing for CodeIgniter 4\nDESCRIPTION: Example of implementing error handling for image processing operations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\ntry {\n    $image->withFile('/path/to/image/mypic.jpg')\n        ->fit(100, 100)\n        ->save('/path/to/image/mypic_thumb.jpg');\n}\ncatch (CodeIgniter\\Images\\ImageException $e) {\n    echo $e->getMessage();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Multiple Cookie Values in CodeIgniter4\nDESCRIPTION: Demonstrates how to retrieve multiple cookie values by passing an array of keys to the getCookie method. Unlike the Cookie Helper's get_cookie() function, this does not prepend the configured Cookie prefix.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_27\n\nLANGUAGE: php\nCODE:\n```\n$cookies = $request->getCookie(['cookie1', 'cookie2']);\n```\n\n----------------------------------------\n\nTITLE: Processing Raw Input Data in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to process raw input data retrieved from the request body and convert it to an array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$data = $request->getRawInput();\n\n// Converts\nname=John+Doe&email=john%40example.com\n\n// To:\n[\n    'name'  => 'John Doe',\n    'email' => 'john@example.com'\n]\n```\n\n----------------------------------------\n\nTITLE: Namespace and Model Extension Example (PHP)\nDESCRIPTION: Example showing the required namespace and class extension changes needed when upgrading a model to CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4xx.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nnamespace App\\Models;\nuse CodeIgniter\\Model;\n\nclass MyModel extends Model\n```\n\n----------------------------------------\n\nTITLE: Testing Route does not have Specific Filter\nDESCRIPTION: Shows how to assert that a route does not use a specific filter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$this->assertNotFilter('admin', 'csrf', 'before');\n```\n\n----------------------------------------\n\nTITLE: Retaining Multiple Patterns in FileCollection in CodeIgniter 4 PHP\nDESCRIPTION: Added a new method retainMultiplePatterns() to the FileCollection class for filtering files based on multiple patterns.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nFileCollection::retainMultiplePatterns()\n```\n\n----------------------------------------\n\nTITLE: Updating Composer and Dependencies for CodeIgniter 4.3.0 Upgrade\nDESCRIPTION: Commands to update Composer, remove the vendor directory, and update dependencies for upgrading to CodeIgniter 4.3.0.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_430.rst#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncomposer self-update\nrm -rf vendor/\ncomposer update\n```\n\n----------------------------------------\n\nTITLE: Using addForeignKey() for Composite Foreign Keys in CodeIgniter 4\nDESCRIPTION: The addForeignKey() function of the Forge class now supports defining composite foreign keys using an array. This enhancement allows for more complex database schema definitions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.1.5.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$forge->addForeignKey(['field1', 'field2'], 'table_name', ['field1', 'field2']);\n```\n\n----------------------------------------\n\nTITLE: Auto-linking URLs Only in PHP\nDESCRIPTION: Shows how to use the auto_link() function to convert only URLs in a string into clickable links.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$string = auto_link($string, 'url');\n```\n\n----------------------------------------\n\nTITLE: Defining Renderer Service with Parameters in PHP\nDESCRIPTION: Shows how to define a renderer service that accepts a parameter for the view path in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\npublic static function renderer(string $viewPath = APPPATH . 'views/', bool $getShared = true)\n{\n    if ($getShared)\n    {\n        return static::getSharedInstance('renderer', $viewPath);\n    }\n\n    return new \\CodeIgniter\\View\\View($viewPath);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Image Element\nDESCRIPTION: Creates a basic HTML image element using the img() helper function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\necho img('images/picture.jpg');\n```\n\n----------------------------------------\n\nTITLE: Highlighting Phrases in Text using CodeIgniter 4 Text Helper in PHP\nDESCRIPTION: Demonstrates the usage of the highlight_phrase function to wrap a specific phrase in HTML tags for highlighting. The function takes the original string, the phrase to highlight, and optional opening and closing HTML tags.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\necho highlight_phrase(\"Here is a nice text string about nothing in particular.\", \"nice text\", '<span style=\"color:#990000;\">', '</span>');\n```\n\n----------------------------------------\n\nTITLE: Memcached Configuration for CodeIgniter (PHP)\nDESCRIPTION: Shows the configuration options available for Memcached servers in the cache configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/013.php\n```\n\n----------------------------------------\n\nTITLE: Cache Testing Assertions in CodeIgniter 4\nDESCRIPTION: Available assertions for testing cache functionality that allow verification of whether cache values were set, deleted, or specific keys were checked.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/mocking.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$cache = $this->mock('CacheFactory');\n\n// Test if a value was set with the specified key\n$cache->assertHasValue(string $key);\n\n// Test that a value was not set with the specified key\n$cache->assertMissingValue(string $key);\n\n// Test that `has()` was called with the specified key\n$cache->assertHas(string $key);\n\n// Test that `has()` was not called with the specified key\n$cache->assertNotHas(string $key);\n\n// Test that a key was deleted from the cache\n$cache->assertDidDelete(string $key);\n\n// Test that a key was not deleted from the cache\n$cache->assertDidNotDelete(string $key);\n\n// Test that the entire cache was purged\n$cache->assertDidPurge();\n\n// Test that the entire cache was not purged\n$cache->assertDidNotPurge();\n```\n\n----------------------------------------\n\nTITLE: Initializing Encryption Library\nDESCRIPTION: Example demonstrating how to initialize the encryption library with custom configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$encrypter = $encryption->initialize($config);\n```\n\n----------------------------------------\n\nTITLE: Getting Information About the Cache (PHP)\nDESCRIPTION: Example showing how to retrieve information about the entire cache database using the getCacheInfo() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/010.php\n```\n\n----------------------------------------\n\nTITLE: Using now() Function in Date Helper\nDESCRIPTION: Example demonstrating the use of now() function to get current timestamp, optionally with timezone parameter. Returns UNIX timestamp.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho now('America/Chicago');\n```\n\n----------------------------------------\n\nTITLE: Getting Header Line as String in PHP\nDESCRIPTION: Demonstrates retrieving header values as a combined string using getHeaderLine().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$message->getHeaderLine('Accept-Language');\n// en, en-US\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Text Input Field in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates the basic usage of the form_input() function to create a standard text input field with a name and value.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\necho form_input('username', 'johndoe');\n```\n\n----------------------------------------\n\nTITLE: Getting File Size with Metric Units in CodeIgniter\nDESCRIPTION: Uses the getSizeByMetricUnit() method to get file size in various metric units (bytes, KB, MB) with specified precision.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\Files\\FileSizeUnit;\n\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->getSizeByMetricUnit();               // 2048\necho $file->getSizeByMetricUnit(FileSizeUnit::BYTE);  // 2048\necho $file->getSizeByMetricUnit(FileSizeUnit::KILO);  // 2.05\necho $file->getSizeByMetricUnit(FileSizeUnit::MEGA);  // 0.00\necho $file->getSizeByMetricUnit(FileSizeUnit::MEGA, 3); // 0.002\n```\n\n----------------------------------------\n\nTITLE: Encryption Usage in CodeIgniter 4.x\nDESCRIPTION: Updated example demonstrating encryption usage in CodeIgniter 4.x using the new service approach and updated method calls\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_encryption.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\\n\\n$encrypter = service('encrypter');\\n\\n$plainText  = 'This is a plain-text message!';\\n$ciphertext = $encrypter->encrypt($plainText);\\n\\n// Outputs: This is a plain-text message!\\necho $encrypter->decrypt($ciphertext);\n```\n\n----------------------------------------\n\nTITLE: Alternative PHP Echo Statement in CodeIgniter 4\nDESCRIPTION: This demonstrates the shorter alternative syntax for echo statements in PHP using the short tag format with the esc() function for output escaping in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/alternative_php.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?= esc($variable) ?>\n```\n\n----------------------------------------\n\nTITLE: Updating HTTP Method Filters Configuration\nDESCRIPTION: Configuration array for HTTP method-based filters in Filters.php, showing proper uppercase method names.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_450.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic array $methods = [\n    'POST' => ['invalidchars', 'csrf'],\n    'GET'  => ['csrf'],\n];\n```\n\n----------------------------------------\n\nTITLE: Setting Real Path in CodeIgniter 4\nDESCRIPTION: Shows how to resolve symbolic links and relative paths to absolute paths\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\n$real_path = set_realpath('uploads/images/../image.png');\n```\n\n----------------------------------------\n\nTITLE: Accessing Cookie Data in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve cookie data using the getCookie() method. Supports filtering and flags for data sanitization.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_25\n\nLANGUAGE: php\nCODE:\n```\n$request->getCookie('cookie_name');\n```\n\n----------------------------------------\n\nTITLE: Checking Current URL Path with Wildcard in CodeIgniter\nDESCRIPTION: Shows how to use url_is() function with a wildcard to match multiple URL paths in a CodeIgniter application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_24\n\nLANGUAGE: php\nCODE:\n```\nif (url_is('admin*')) {\n    // Do something here\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating base_url() behavior change in PHP\nDESCRIPTION: The base_url() function now returns the baseURL with a trailing slash, unlike in previous versions where it returned without a trailing slash. This aligns with CodeIgniter 3 behavior.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.2.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nbase_url(); // Now returns: http://localhost:8080/\n```\n\n----------------------------------------\n\nTITLE: Alternative Database Connection Method\nDESCRIPTION: Convenience wrapper method for establishing database connection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n\\Config\\Database::connect()\n```\n\n----------------------------------------\n\nTITLE: Creating a Test in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:test generator to create a new test file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_9\n\nLANGUAGE: console\nCODE:\n```\nmake:test <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Retrieving HTTP Header Value in PHP\nDESCRIPTION: Demonstrates accessing a header value using case-insensitive header name.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$message->header('Host');\n$message->header('HOST');\n$message->header('host');\n```\n\n----------------------------------------\n\nTITLE: Accessing SQLSRV Connection Error in CodeIgniter 4\nDESCRIPTION: Demonstrates the change from using getError() to error() method for retrieving SQLSRV connection errors in CodeIgniter 4. This change is part of the deprecations in the framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.0.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Database\\SQLSRV\\Connection::error()\n```\n\n----------------------------------------\n\nTITLE: Deleting Files and Directories\nDESCRIPTION: Example of deleting both files and directories\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\ndelete_files('./path/to/directory/', true);\n```\n\n----------------------------------------\n\nTITLE: Database Exception Example\nDESCRIPTION: Example of throwing a DatabaseException for database-related errors.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nthrow new DatabaseException();\n```\n\n----------------------------------------\n\nTITLE: Creating URL-Friendly Strings in PHP\nDESCRIPTION: Shows the usage of the url_title() function to convert a string into a URL-friendly format, replacing spaces with dashes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\necho url_title('What would Jesus eat?', '-', true);\n// Produces: what-would-jesus-eat\n```\n\n----------------------------------------\n\nTITLE: Extending RouteCollection with Constructor in PHP for CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to extend the RouteCollection class with a custom constructor. It shows the proper way to call the parent constructor when extending core classes in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/core_classes.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nnamespace App\\Libraries;\n\nuse CodeIgniter\\Router\\RouteCollection;\n\nclass MyRouteCollection extends RouteCollection\n{\n    public function __construct()\n    {\n        parent::__construct();\n\n        // Your custom code here\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Basic base_url() Usage\nDESCRIPTION: Shows basic usage of base_url() function to get the site's base URL.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho base_url();\n```\n\n----------------------------------------\n\nTITLE: Loading Views from Subdirectories in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load view files that are stored within subdirectories of the views folder.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nview('directory_name/file_name');\n```\n\n----------------------------------------\n\nTITLE: Setting Single View Variable\nDESCRIPTION: Shows how to set a single view variable using setVar() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$view->setVar('name', 'Joe');\n```\n\n----------------------------------------\n\nTITLE: Loading Config with Helper Function\nDESCRIPTION: Shows the use of the config() helper function to load a configuration class instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nconfig('App');\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in CodeIgniter 4\nDESCRIPTION: Retrieves values from the $_ENV array with optional filtering.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$request->getEnv('SERVER_PROTOCOL');\n```\n\n----------------------------------------\n\nTITLE: Fixed Method Calls in CodeIgniter 4.2.12\nDESCRIPTION: Code references showing the affected methods that were fixed in this release, including Request::getIPaddress(), link_tag(), spark migrate:status, and Model::save() with $useAutoIncrement flag.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.12.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nRequest::getIPaddress()\nlink_tag()\nspark migrate:status\nModel::save()\n```\n\n----------------------------------------\n\nTITLE: Adding Extra Attributes as Array to Input Field in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to add extra attributes to an input field using the form_input() function by passing them as an array in the third parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_16\n\nLANGUAGE: PHP\nCODE:\n```\necho form_input('username', 'johndoe', ['maxlength' => '100', 'size' => '50', 'style' => 'width:50%']);\n```\n\n----------------------------------------\n\nTITLE: Using site_url() with Array Segments\nDESCRIPTION: Shows how to generate a site URL by passing URI segments as an array to the site_url() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho site_url(['news', 'local', '123']);\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Preloading in PHP\nDESCRIPTION: Example of setting up PHP preloading by modifying the opcache.preload and opcache.preload_user settings in php.ini.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/deployment.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nrequire_once __DIR__.'/app/Config/Paths.php';\n$paths = new Config\\Paths();\nrequire_once SYSTEMPATH . 'bootstrap.php';\n\n// Enable Opcache\nopcache_reset();\n\n// Specify the files to preload\nrequire_once SYSTEMPATH . 'Common.php';\nrequire_once SYSTEMPATH . 'Router/Router.php';\nrequire_once SYSTEMPATH . 'CodeIgniter.php';\n\nif (file_exists(APPPATH . 'Config/App.php')) {\n    require_once APPPATH . 'Config/App.php';\n}\n\nif (file_exists(APPPATH . 'Config/Autoload.php')) {\n    require_once APPPATH . 'Config/Autoload.php';\n}\n\n```\n\n----------------------------------------\n\nTITLE: Recommended XSS Protection Using esc() in PHP\nDESCRIPTION: For better XSS protection, it is recommended to use the `esc()` function with the correct `$context` parameter in views, rather than relying on XSS filtering in `get_cookie()`.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_417.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nesc($value, $context)\n```\n\n----------------------------------------\n\nTITLE: Session Handling in CodeIgniter 3.x\nDESCRIPTION: Demonstrates how to load and use the session library in CodeIgniter 3.x, including setting and retrieving session data, and using flashdata.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_sessions.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Login extends CI_Controller\n{\n    public function index()\n    {\n        $this->load->library('session');\n\n        $this->session->set_userdata('some_name', 'some_value');\n\n        $this->session->some_name;\n\n        $this->session->set_flashdata('item', 'value');\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Specifying Composer Packages for Auto-discovery\nDESCRIPTION: Configuration to specify which Composer packages should be included in auto-discovery process.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $composerPackages = [\n    'acme/blog',\n    'acme/other-package',\n];\n```\n\n----------------------------------------\n\nTITLE: ResourceController Implementation\nDESCRIPTION: Example of a ResourceController class implementing RESTful API endpoints for a Photos resource.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\RESTful\\ResourceController;\n\nclass Photos extends ResourceController\n{\n    protected $modelName = 'App\\Models\\Photos';\n    protected $format    = 'json';\n\n    public function index()\n    {\n        return $this->respond($this->model->findAll());\n    }\n\n    // ... other methods\n}\n```\n\n----------------------------------------\n\nTITLE: Using current_url() Function\nDESCRIPTION: Shows how to get the current URL using current_url() and URI class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nsite_url(uri_string());\n```\n\n----------------------------------------\n\nTITLE: Transaction Error Management\nDESCRIPTION: Example of custom error handling in transactions using transStatus() to check transaction status.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/transactions.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$this->db->transStart();\n\n$this->db->query('AN SQL QUERY...');\n$this->db->query('ANOTHER QUERY...');\n\nif ($this->db->transStatus() === false) {\n    // generate an error... or use the log_message() function to log your error\n}\n\n$this->db->transComplete();\n```\n\n----------------------------------------\n\nTITLE: Getting File MIME Type in CodeIgniter\nDESCRIPTION: Retrieves the MIME type of a file using the getMimeType() method, which employs secure methods to determine the file type.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->getMimeType();\n\n// image/png\n```\n\n----------------------------------------\n\nTITLE: Filter Factory Configuration\nDESCRIPTION: Example configuration file that defines options for the filters component to ensure proper class inheritance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php namespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\nuse CodeIgniter\\Filters\\FilterInterface;\n\nclass Factory extends BaseConfig\n{\n    public $filters = [\n        'instanceOf' => FilterInterface::class,\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Default Controller in CodeIgniter 4\nDESCRIPTION: Example of a default controller 'Home' in the News subdirectory. This controller would handle requests to the /news URI when no specific controller is specified.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers\\News;\n\nuse App\\Controllers\\BaseController;\n\nclass Home extends BaseController\n{\n    public function getIndex($id = null)\n    {\n        // Handle the request here\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Random String Function Reference\nDESCRIPTION: Reference to the random_string() helper function which received security improvements for alpha, alnum, numeric and nozero types.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.3.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nrandom_string()\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Unordered List\nDESCRIPTION: Creates a complex nested unordered list from a multi-dimensional array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\n$list = [\n    'colors'  => [\n        'red',\n        'blue',\n        'green'\n    ],\n    'shapes'  => [\n        'round',\n        'square',\n        'circles' => [\n            'ellipse',\n            'oval',\n            'sphere'\n        ]\n    ],\n    'moods'  => [\n        'happy',\n        'upset' => [\n            'defeated' => [\n                'dejected',\n                'disheartened',\n                'depressed'\n            ],\n            'annoyed',\n            'cross',\n            'angry'\n        ]\n    ]\n];\n\necho ul($list, $attributes);\n```\n\n----------------------------------------\n\nTITLE: Determining Write-Type Queries in CodeIgniter 4\nDESCRIPTION: Shows how to check if a query is a write-type query (INSERT, UPDATE, DELETE, etc.) using the isWriteType() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nif ($query->isWriteType()) {\n    echo 'This is a write-type query.';\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Redirect Exception\nDESCRIPTION: Example of throwing a RedirectException to force a redirect to a specific URI.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nthrow new RedirectException('users/login');\n```\n\n----------------------------------------\n\nTITLE: Running Spark Commands with Arguments\nDESCRIPTION: Examples of running spark commands with and without arguments, showing how missing arguments are prompted for.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/spark_commands.rst#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nphp spark migrate\n```\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:seed DevUserSeeder\n```\n\nLANGUAGE: console\nCODE:\n```\nphp spark make:controller\n```\n\n----------------------------------------\n\nTITLE: Character Set Negotiation\nDESCRIPTION: Shows how to negotiate character set preferences with default fallback to UTF-8.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$supported = [\n    'utf-8',\n    'utf-16'\n];\n\n// Using the Negotiator class\n$negotiator->charset($supported);\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Script Element\nDESCRIPTION: Creates a basic HTML script element.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\necho script_tag('js/mystyle.js');\n```\n\n----------------------------------------\n\nTITLE: Setting Application Directory Path in CodeIgniter 4\nDESCRIPTION: This snippet shows how to set a full server path for the application directory in the Paths.php configuration file. This is useful when renaming or relocating the application directory.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $appDirectory = '/path/to/your/app/directory';\n```\n\n----------------------------------------\n\nTITLE: Alternative Foreach Control Structure in PHP\nDESCRIPTION: Example of using the alternative syntax for a foreach loop in PHP which eliminates braces and uses endforeach instead of closing braces. Note the use of colons instead of semicolons.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/alternative_php.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php foreach ($todo as $item) : ?>\n    <li><?= $item ?></li>\n<?php endforeach ?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Headers in CodeIgniter (PHP)\nDESCRIPTION: Shows how to retrieve all headers from the request as an array using the headers() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n$headers = $request->headers();\n\n// Get the value of a specific header\n$accept = $headers['accept']->getValue();\n```\n\n----------------------------------------\n\nTITLE: Creating a Fieldset with form_fieldset() in PHP\nDESCRIPTION: Shows how to use the form_fieldset() function to generate fieldset/legend fields. It includes examples of basic usage and setting additional attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\necho form_fieldset('Address Information');\necho \"<p>fieldset content here</p>\";\necho form_fieldset_close();\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_fieldset('Address Information', ['id' => 'address_info', 'class' => 'address_info']);\n```\n\n----------------------------------------\n\nTITLE: Interface Change - AutoRouterInterface getRoute() Method\nDESCRIPTION: Modification to the AutoRouterInterface::getRoute() method signature adding a new string parameter for HTTP verb.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.6.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\ngetRoute(string $httpVerb)\n```\n\n----------------------------------------\n\nTITLE: Passing Multi-dimensional Array to View in CodeIgniter 4\nDESCRIPTION: Example of passing a multi-dimensional array to a view to generate loops of data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\npublic function index()\n{\n    $data = [\n        'todo_list' => ['Clean House', 'Call Mom', 'Run Errands'],\n        'title'     => 'My Real Title',\n        'heading'   => 'My Real Heading',\n    ];\n\n    return view('blog_view', $data);\n}\n```\n\n----------------------------------------\n\nTITLE: Humanizing a String in PHP\nDESCRIPTION: This example demonstrates how to use the humanize() function to convert an underscored string to a human-readable format.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\necho humanize('my_dog_spot'); // Prints 'My Dog Spot'\n```\n\n----------------------------------------\n\nTITLE: Getting File Size by Metric Unit in CodeIgniter 4 PHP\nDESCRIPTION: Added a new method getSizeByMetricUnit() to the File class for getting file sizes in metric units (e.g., KB, MB).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nFile::getSizeByMetricUnit()\n```\n\n----------------------------------------\n\nTITLE: Generating Random Strings in PHP\nDESCRIPTION: Shows usage of the random_string() function to generate various types of random strings, including alphanumeric and crypto-safe strings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho random_string('alnum', 16);\necho random_string('numeric', 10);\necho random_string('crypto', 32);\n```\n\n----------------------------------------\n\nTITLE: CSRF Implementation in CodeIgniter 3.x Forms\nDESCRIPTION: This code example demonstrates how CSRF protection was implemented in CodeIgniter 3.x. It shows the manual insertion of a hidden input field with CSRF token data retrieved from the security class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_security.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// In your controller\n$data = [\n    'csrf' => [\n        'name' => $this->security->get_csrf_token_name(),\n        'hash' => $this->security->get_csrf_hash()\n    ],\n];\n$this->load->view('myform', $data);\n\n// In your view: myform.php\n?>\n\n<form method=\"post\" action=\"targetpage\">\n    <input type=\"hidden\" name=\"<?= $csrf['name'] ?>\" value=\"<?= $csrf['hash'] ?>\" />\n    <input type=\"text\" name=\"username\" value=\"\" />\n    <input type=\"password\" name=\"password\" value=\"\" size=\"50\" />\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Setting HTTPS Duration\nDESCRIPTION: Shows how to set a custom duration for HTTPS forcing using forceHTTPS().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic function method()\n{\n    $this->forceHTTPS(31536000);    // one year\n}\n```\n\n----------------------------------------\n\nTITLE: Using Events in CodeIgniter 4 Tests\nDESCRIPTION: Example showing how to use events during testing in CodeIgniter 4. This demonstrates controlling event triggering behavior for tests with the skipEvents() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n// Skip events during a single test\n$result = $this->skipEvents()\n    ->post('users', $data);\n```\n\n----------------------------------------\n\nTITLE: Getting Specific Row by Index\nDESCRIPTION: Shows how to get a specific row by its index number\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$row = $query->getRow(5);\n```\n\n----------------------------------------\n\nTITLE: Number to Amount with Locale\nDESCRIPTION: Demonstrates number to amount conversion with locale-specific formatting.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\necho number_to_amount(123456789, 2, 'de-DE'); // Returns 123,46 million\n```\n\n----------------------------------------\n\nTITLE: Validation Using validateData() Method\nDESCRIPTION: Shows how to validate data using the validateData() method introduced in CI 4.2.0.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic function createUser()\n{\n    $data = [\n        'username' => $this->request->getPost('username'),\n        'password' => $this->request->getPost('password')\n    ];\n\n    if (! $this->validateData($data, [\n        'username' => 'required|min_length[3]',\n        'password' => 'required|min_length[10]'\n    ])) {\n        return view('myform', [\n            'validation' => $this->validator\n        ]);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom FileCollection in PHP\nDESCRIPTION: Demonstrates how to create a custom FileCollection class that defines its own initial set of files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/file_collections.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nclass ConfigCollection extends \\CodeIgniter\\Files\\FileCollection\n{\n    protected function define()\n    {\n        return $this->add(APPPATH . 'Config')->retainPattern('*.php');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Composer Install for Production in PHP\nDESCRIPTION: Removes development packages from the vendor folder to reduce its size for production deployment.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/deployment.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer install --no-dev\n```\n\n----------------------------------------\n\nTITLE: Interface Change - ValidationInterface check() Method\nDESCRIPTION: Changes to ValidationInterface::check() method signature including modified second parameter type and addition of optional database group parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.6.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\ncheck($rules, $dbGroup = null)\n```\n\n----------------------------------------\n\nTITLE: Image Flipping in CodeIgniter 4\nDESCRIPTION: Example of flipping an image horizontally and vertically.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->flip('horizontal')\n    ->save('/path/to/image/mypic_flipped.jpg');\n\n$image->withFile('/path/to/image/mypic.jpg')\n    ->flip('vertical')\n    ->save('/path/to/image/mypic_flipped.jpg');\n```\n\n----------------------------------------\n\nTITLE: Calling MySQL Get Client Info Function in CodeIgniter 4\nDESCRIPTION: Demonstrates how to use $db->callFunction() to call the mysql_get_client_info() function in a platform-independent manner. The 'mysql_' prefix is automatically added based on the current database driver.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$db->callFunction('get_client_info');\n```\n\n----------------------------------------\n\nTITLE: Setting Environment in Nginx Configuration\nDESCRIPTION: Example of setting the CI_ENVIRONMENT variable in an Nginx server block configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/environments.rst#2025-04-16_snippet_2\n\nLANGUAGE: Nginx\nCODE:\n```\nserver {\n    server_name localhost;\n    include     conf/defaults.conf;\n    root        /var/www;\n\n    location    ~* \\.php$ {\n        fastcgi_param CI_ENVIRONMENT \"production\";\n        include conf/fastcgi-php.conf;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Camel Case to Snake Case in PHP\nDESCRIPTION: This snippet illustrates the use of the decamelize() function to convert a camel case or Pascal case string to snake case.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\necho decamelize('myDogSpot');  // Prints 'my_dog_spot'\necho decamelize('MyDogSpot');  // Prints 'my_dog_spot'\n```\n\n----------------------------------------\n\nTITLE: Using the anchor() Function from URL Helper in CodeIgniter 4\nDESCRIPTION: Demonstrates how to use the anchor() function from the URL helper to create a link in a view file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php echo anchor('blog/comments', 'Click Here');?>\n```\n\n----------------------------------------\n\nTITLE: Excluding Multiple URIs from Global Filters\nDESCRIPTION: Shows how to exclude multiple URIs from global filters in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\npublic $globals = [\n    'before' => [\n        'csrf' => ['except' => ['api/*', 'admin/*']],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Loading a Helper from a Specific Namespace in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load a helper from a specific namespace, in this case, the 'blog_helper' from the 'Example\\Blog' namespace.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nhelper('Example\\Blog\\blog');\n```\n\n----------------------------------------\n\nTITLE: Removing Invisible Characters in PHP\nDESCRIPTION: Uses the remove_invisible_characters() function to sanitize a string by removing null characters between ASCII characters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$str = \"<?php\\0alert('XSS');?>\";\\n$str = remove_invisible_characters($str);\\nvar_dump($str); // \"<?php alert('XSS');?\"\n```\n\n----------------------------------------\n\nTITLE: Adding Tasks to the Iterator for Benchmarking in CodeIgniter 4\nDESCRIPTION: Shows how to add tasks as Closures to the Iterator class for performance testing. Each task is given a name and defined as a Closure function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$iterator = new \\CodeIgniter\\Benchmark\\Iterator();\n\n// Add a task\n$iterator->add('single_concat', function() {\n    $str = 'Hello ' . ' World';\n});\n\n// Add another task\n$iterator->add('double_concat', function() {\n    $str = 'Hello ' . ' ' . 'World';\n});\n```\n\n----------------------------------------\n\nTITLE: Error Handling in PHP for CodeIgniter 4 CLI Commands\nDESCRIPTION: This code shows how to use the showError() method of BaseCommand to display consistent error output in CLI commands.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_commands.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic function run(array $params)\n{\n    try {\n        // do something...\n    } catch (\\Exception $e) {\n        $this->showError($e);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing RouteCollection getRoutes Method with New Parameter in PHP\nDESCRIPTION: Example showing the RouteCollection::getRoutes() method with its new boolean parameter $includeWildcard which defaults to true. This represents a breaking change in the 4.3.7 release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.7.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nRouteCollection::getRoutes()\n```\n\n----------------------------------------\n\nTITLE: Getting IncomingRequest from Services (PHP)\nDESCRIPTION: Demonstrates how to obtain the IncomingRequest object using the Services class outside of a controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$request = \\Config\\Services::request();\n```\n\n----------------------------------------\n\nTITLE: CLI Progress Bar Usage\nDESCRIPTION: Demonstrates showing a progress bar for long-running tasks.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\nfor ($i = 0; $i <= 100; $i++) {\n    CLI::showProgress($i, 100);\n}\nCLI::showProgress(false);\n```\n\n----------------------------------------\n\nTITLE: Using Validation loadRuleGroup Method with Changed Return Value in PHP\nDESCRIPTION: Example of the Validation::loadRuleGroup() method which now returns an array containing both rules array and customErrors array instead of just the rules array. This is a breaking change in 4.3.7.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.7.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nValidation::loadRuleGroup()\n```\n\n----------------------------------------\n\nTITLE: CLI Prompt by Key with Options\nDESCRIPTION: Shows how to use promptByKey() to allow selection from predefined options using numeric keys.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$color = CLI::promptByKey('Pick a color:', ['blue', 'red', 'green']);\n```\n\n----------------------------------------\n\nTITLE: Resource Route with Excluded Methods\nDESCRIPTION: Excludes specific methods from route generation using the except option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos', ['except' => ['new', 'edit']]);\n```\n\n----------------------------------------\n\nTITLE: Converting a String to Camel Case in PHP\nDESCRIPTION: This example illustrates the use of the camelize() function to convert a string to camel case.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\necho camelize('my_dog_spot'); // Prints 'myDogSpot'\n```\n\n----------------------------------------\n\nTITLE: Image Manipulation in CodeIgniter 4.x\nDESCRIPTION: Updated code for image manipulation in CodeIgniter 4.x. It uses the image service with method chaining for resizing and cropping operations, and requires explicit save method calls.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_images.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Controller;\n\nclass MyClass extends Controller\n{\n    public function processImage()\n    {\n        $image = \\Config\\Services::image();\n\n        // Resize the image with method chaining\n        $image->withFile(WRITEPATH . 'uploads/images/sample_image.jpg')\n              ->resize(500, 300, true, 'height')\n              ->save(WRITEPATH . 'uploads/images/sample_image_resized.jpg');\n\n        // Crop the image\n        $image->withFile(WRITEPATH . 'uploads/images/sample_image.jpg')\n              ->crop(100, 100, 100, 60, true)\n              ->save(WRITEPATH . 'uploads/images/sample_image_cropped.jpg');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Route with Limited Methods\nDESCRIPTION: Restricts generated routes to specific methods using the only option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos', ['only' => ['index', 'show']]);\n```\n\n----------------------------------------\n\nTITLE: Displaying Database Tables in CodeIgniter 4\nDESCRIPTION: Shows all tables in the configured database using the db:table command with --show option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/db_commands.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:table --show\n```\n\n----------------------------------------\n\nTITLE: Directory Mapping with Depth Control\nDESCRIPTION: Shows how to map a directory with specific recursion depth using directory_map()\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$map = directory_map('./mydirectory', 1);\n```\n\n----------------------------------------\n\nTITLE: Getting File Size by Binary Unit in CodeIgniter 4 PHP\nDESCRIPTION: Added a new method getSizeByBinaryUnit() to the File class for getting file sizes in binary units (e.g., KiB, MiB).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nFile::getSizeByBinaryUnit()\n```\n\n----------------------------------------\n\nTITLE: Using base_url() with URI String\nDESCRIPTION: Demonstrates using base_url() with a URI string to generate a complete URL.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho base_url('blog/post/123');\n```\n\n----------------------------------------\n\nTITLE: ImageMagick Font Path Note in CodeIgniter 4\nDESCRIPTION: Special note about how the ImageMagick driver handles font paths differently than other image manipulation drivers in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_15\n\nLANGUAGE: markup\nCODE:\n```\n.. note:: The ImageMagick driver does not recognize full server path for fontPath. Instead, simply provide the\n        name of one of the installed system fonts that you wish to use, i.e., Calibri.\n```\n\n----------------------------------------\n\nTITLE: Converting Accented Characters in PHP\nDESCRIPTION: Shows how to use convert_accented_characters() function to transliterate high ASCII characters to low ASCII equivalents for URL-safe strings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$string = convert_accented_characters($string);\n```\n\n----------------------------------------\n\nTITLE: Accessing Database Connection ID in CodeIgniter 4\nDESCRIPTION: Illustrates how to obtain the database connection ID, which is often required for custom function calls. The connection ID is accessed using the connID property of the database object.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$db->connID;\n```\n\n----------------------------------------\n\nTITLE: Retrieving First Row in PHP\nDESCRIPTION: This method returns the first row from the result set. The row can be returned as an array, object, or custom class instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_26\n\nLANGUAGE: php\nCODE:\n```\ngetFirstRow([$type = 'object'])\n```\n\n----------------------------------------\n\nTITLE: Getting View Service Instance\nDESCRIPTION: Shows how to get an instance of the View renderer service through dependency injection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nprotected $renderer;\n\npublic function __construct(\\CodeIgniter\\View\\View $renderer)\n{\n    $this->renderer = $renderer;\n}\n```\n\n----------------------------------------\n\nTITLE: Auto-linking with Popup Window in PHP\nDESCRIPTION: Demonstrates how to use the auto_link() function with the popup parameter set to true, opening links in a new window.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$string = auto_link($string, 'both', true);\n```\n\n----------------------------------------\n\nTITLE: Loading Text Helper in CodeIgniter 4\nDESCRIPTION: Demonstrates how to load the Text Helper in CodeIgniter 4 applications.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('text');\n```\n\n----------------------------------------\n\nTITLE: Setting Timezone for Time::createFromTimestamp() in PHP\nDESCRIPTION: This snippet demonstrates how to set the timezone to UTC when using the Time::createFromTimestamp() method in CodeIgniter 4.4.6. This is necessary due to a breaking change where the method now returns a Time instance with the app's timezone by default.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_446.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nuse CodeIgniter\\I18n\\Time;\n\n$time = Time::createFromTimestamp(1501821586)->setTimezone('UTC');\n```\n\n----------------------------------------\n\nTITLE: Autoloading Non-class Files in CodeIgniter 4\nDESCRIPTION: Configuration for autoloading non-class files using the $files property in app/Config/Autoload.php.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic $files = [\n    ROOTPATH . 'acme/Blog/functions.php',\n    ROOTPATH . 'acme/Blog/constants.php',\n];\n```\n\n----------------------------------------\n\nTITLE: Checking PHP INI Settings with Spark Command\nDESCRIPTION: Command to check PHP ini settings using CodeIgniter's CLI tool spark.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark phpini:check\n```\n\n----------------------------------------\n\nTITLE: Defining Filter Aliases in a Module\nDESCRIPTION: Configuration of filter aliases within a module's Config/Filters.php file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic $aliases = [\n    'blog-auth' => \\Acme\\Blog\\Filters\\BlogAuthFilter::class,\n];\n```\n\n----------------------------------------\n\nTITLE: Protected Method Declarations in Test Mocks\nDESCRIPTION: Test mock methods that were changed from public to protected scope in mock request and security classes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_414.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Test\\Mock\\MockIncomingRequest::detectURI()\nCodeIgniter\\Test\\Mock\\MockSecurity.php::sendCookie()\n```\n\n----------------------------------------\n\nTITLE: Setting Header Values in PHP\nDESCRIPTION: Shows how to set single and multiple header values using setHeader().\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$message->setHeader('Host', 'example.com');\n$message->setHeader('Accept-Language', ['en', 'en-US']);\n```\n\n----------------------------------------\n\nTITLE: CLI Table Output\nDESCRIPTION: Shows how to create formatted table output in CLI.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n$thead = ['ID', 'Title', 'Updated At', 'Active'];\n$tbody = [\n    [7, 'A great item title', '2017-11-16 10:35:02', 1],\n    [8, 'Another great item title', '2017-11-16 13:46:54', 0]\n];\n\nCLI::table($tbody, $thead);\n```\n\n----------------------------------------\n\nTITLE: Creating Time Instance with Timezone in PHP\nDESCRIPTION: Example showing how to create a Time instance with a specific timezone using createFromTimestamp()\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_460.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\I18n\\Time;\n\n$time = Time::createFromTimestamp(1501821586, date_default_timezone_get());\n```\n\n----------------------------------------\n\nTITLE: Adding Encryption Cipher Property in PHP Configuration\nDESCRIPTION: The 'app/Config/Encryption.php' file has been updated to include the missing '$cipher' property for CodeIgniter 3 Encryption compatibility.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_433.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\npublic $cipher = 'AES-256-CBC';\n```\n\n----------------------------------------\n\nTITLE: Passing URI Segments to Controller Methods in CodeIgniter 4 Auto Routing\nDESCRIPTION: Demonstrates how URI segments are passed as parameters to controller methods when using Auto Routing (Improved).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic function getProduct($type, $id)\n{\n    return \"Looking at {$type} product id {$id}\";\n}\n```\n\n----------------------------------------\n\nTITLE: Setting From Address in CodeIgniter Email\nDESCRIPTION: Demonstrates how to set the 'from' email address and name when sending an email.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$email->setFrom('you@example.com', 'Your Name');\n```\n\n----------------------------------------\n\nTITLE: Image Manipulation in CodeIgniter 3.x\nDESCRIPTION: Sample code demonstrating image manipulation in CodeIgniter 3.x. It uses the image_lib library with constructor preferences for resizing an image and creating a thumbnail.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_images.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass My_class extends CI_Controller\n{\n    public function process_image()\n    {\n        // Setting preferences\n        $config['image_library'] = 'gd2';\n        $config['source_image'] = 'uploads/images/sample_image.jpg';\n        $config['create_thumb'] = TRUE;\n        $config['maintain_ratio'] = TRUE;\n        $config['width'] = 500;\n        $config['height'] = 300;\n\n        // Loading the image library\n        $this->load->library('image_lib', $config);\n\n        // Resize the image\n        if (! $this->image_lib->resize())\n        {\n            echo $this->image_lib->display_errors();\n        }\n\n        // Clear existing preferences\n        $this->image_lib->clear();\n\n        // Setting preferences for image crop\n        $config2['image_library'] = 'gd2';\n        $config2['source_image'] = 'uploads/images/sample_image.jpg';\n        $config2['x_axis'] = '100';\n        $config2['y_axis'] = '60';\n        $config2['maintain_ratio'] = FALSE;\n\n        // Initialize the image library with new preferences\n        $this->image_lib->initialize($config2);\n\n        // crop the image\n        if (! $this->image_lib->crop())\n        {\n            echo $this->image_lib->display_errors();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Number to Currency Conversion\nDESCRIPTION: Examples of formatting numbers as currency values with different currency types.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\necho number_to_currency(1234.56, 'USD'); // Returns $1,234.56\necho number_to_currency(1234.56, 'EUR'); // Returns €1,234.56\necho number_to_currency(1234.56, 'GBP'); // Returns £1,234.56\necho number_to_currency(1234.56, 'EUR', 'de-DE', 2); // Returns 1.234,56 €\n```\n\n----------------------------------------\n\nTITLE: Using Fully-Qualified Class Names in Seeders\nDESCRIPTION: Demonstrates using fully-qualified class names when calling seeders, allowing for more modular code organization.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Database\\Seeds;\n\nuse CodeIgniter\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    public function run()\n    {\n        $this->call('App\\\\Database\\\\Seeds\\\\CountrySeeder');\n        $this->call('App\\\\Database\\\\Seeds\\\\UserSeeder');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using valid_url_strict Validation Rule\nDESCRIPTION: A new validation rule 'valid_url_strict' has been added to the Validation class. This rule provides stricter URL validation compared to the existing 'valid_url' rule.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.1.5.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$validation->setRules([\n    'website' => 'valid_url_strict'\n]);\n```\n\n----------------------------------------\n\nTITLE: Detecting Windows Platform in PHP\nDESCRIPTION: Demonstrates how to use the is_windows() function to detect if the platform is running on Windows, with an option to mock the return value.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nvar_dump(is_windows()); // auto-detected\nvar_dump(is_windows(true)); // mocked as true\nvar_dump(is_windows(false)); // mocked as false\nvar_dump(is_windows()); // returns mocked value (false)\nvar_dump(is_windows(null)); // auto-detected again\n```\n\n----------------------------------------\n\nTITLE: Getting Help for Spark Commands\nDESCRIPTION: Demonstrates how to get help information for specific spark commands using either the help command or --help option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/spark_commands.rst#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nphp spark help db:seed\n```\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:seed --help\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4 Version Template Structure in RST\nDESCRIPTION: A reStructuredText formatted template that defines the standard sections for documenting a CodeIgniter 4 version release including breaking changes, message changes, general changes, deprecations and bug fixes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/next-changelog-patch.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n#################\nVersion {version}\n#################\n\nRelease Date: Unreleased\n\n**{version} release of CodeIgniter4**\n\n.. contents::\n    :local:\n    :depth: 3\n\n********\nBREAKING\n********\n\n***************\nMessage Changes\n***************\n\n*******\nChanges\n*******\n\n************\nDeprecations\n************\n\n**********\nBugs Fixed\n**********\n\nSee the repo's\n`CHANGELOG.md <https://github.com/codeigniter4/CodeIgniter4/blob/develop/CHANGELOG.md>`_\nfor a complete list of bugs fixed.\n```\n\n----------------------------------------\n\nTITLE: Censoring Words in PHP\nDESCRIPTION: Demonstrates the use of word_censor() function to replace specified words in a string with a placeholder.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n$disallowed = ['darn', 'shucks', 'golly', 'phooey'];\n$string = word_censor($string, $disallowed, 'Beep!');\n```\n\n----------------------------------------\n\nTITLE: Getting Database Version in CodeIgniter 4\nDESCRIPTION: Demonstrates how to get the current database version information.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/helpers.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho $db->getVersion();\n```\n\n----------------------------------------\n\nTITLE: Using single_service() Function in PHP\nDESCRIPTION: Demonstrates the use of single_service() function to get a new instance of a service in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$db = single_service('db', $dbConfig);\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache TTL Setting in CodeIgniter 4.1.3\nDESCRIPTION: New configuration setting for cache Time To Live (TTL) introduced in app/Config/Cache.php. Default value is 60 seconds which matches the previous hard-coded value. This setting will replace the hard-coded version in future releases.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_413.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// app/Config/Cache.php\npublic $ttl = 60;\n```\n\n----------------------------------------\n\nTITLE: Writing File with Custom Mode\nDESCRIPTION: Example of writing to a file with a specific file mode\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nwrite_file('path/to/file.txt', $data, 'r+');\n```\n\n----------------------------------------\n\nTITLE: Updating Filter Paths Configuration - After\nDESCRIPTION: Updated version of filter paths configuration using URL-decoded values for proper filter processing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_447.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic array $globals = [\n    'before' => [\n        'csrf' => ['except' => '日本語/*'],\n    ],\n    // ...\n];\n```\n\n----------------------------------------\n\nTITLE: Accessing Multiple Environment Variables in CodeIgniter 4\nDESCRIPTION: Retrieves multiple values from the $_ENV array by passing an array of keys.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$values = $request->getEnv(['SERVER_PROTOCOL', 'REQUEST_URI']);\n```\n\n----------------------------------------\n\nTITLE: Normalizing URL Slashes in PHP\nDESCRIPTION: Illustrates the use of reduce_double_slashes() function to normalize URL paths while preserving protocol slashes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$string = \"http://example.com//index.php\";\necho reduce_double_slashes($string); // results in \"http://example.com/index.php\"\n```\n\n----------------------------------------\n\nTITLE: Creating View Decorator Class in PHP\nDESCRIPTION: Example of creating a custom view decorator class that implements ViewDecoratorInterface. The class contains a handle method that takes HTML content as input and returns modified HTML.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_decorators.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Views\\Decorators;\n\nuse CodeIgniter\\View\\ViewDecoratorInterface;\n\nclass MyDecorator implements ViewDecoratorInterface\n{\n    public function handle(string $html): string\n    {\n        // Perform any modifications to the HTML here\n        return $html;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retaining Multiple Patterns in FileCollection in PHP\nDESCRIPTION: Demonstrates how to use retainMultiplePatterns method to keep files matching multiple patterns in a FileCollection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/file_collections.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$collection->retainMultiplePatterns([\n    '*.php',\n    '*.css',\n    '*.js'\n]);\n```\n\n----------------------------------------\n\nTITLE: Running tests from a specific directory in CodeIgniter 4\nDESCRIPTION: Command to run only the tests within a specific directory, in this case the Models directory, in a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/tests/README.md#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n> ./phpunit app/Models\n```\n\n----------------------------------------\n\nTITLE: Prepending Header Values in PHP\nDESCRIPTION: Shows how to prepend a value to an existing header array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$message->prependHeader('Accept-Language', 'en-GB');\n```\n\n----------------------------------------\n\nTITLE: Creating a Standard HTML Email Link in PHP\nDESCRIPTION: Demonstrates the usage of the mailto() function to create an HTML email link with optional attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\necho mailto('me@my-site.com', 'Click Here to Contact Me!');\n```\n\n----------------------------------------\n\nTITLE: Protected Method Example\nDESCRIPTION: Demonstrates declaring a protected method in a controller to prevent public access.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nprotected function utility()\n{\n    // some code\n}\n```\n\n----------------------------------------\n\nTITLE: Updating FilterInterface Method Signatures in PHP\nDESCRIPTION: Shows the required changes to FilterInterface method signatures to add the $arguments parameter. This update is necessary due to a bug fix in Controller Filters implementation in CodeIgniter 4.0.4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_404.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic function before(RequestInterface $request)\n```\n\nLANGUAGE: php\nCODE:\n```\npublic function after(RequestInterface $request, ResponseInterface $response)\n```\n\nLANGUAGE: php\nCODE:\n```\npublic function before(RequestInterface $request, $arguments = null)\n```\n\nLANGUAGE: php\nCODE:\n```\npublic function after(RequestInterface $request, ResponseInterface $response, $arguments = null)\n```\n\n----------------------------------------\n\nTITLE: Excluding URIs from Global Filters\nDESCRIPTION: Demonstrates how to exclude specific URIs from global filters in the app/Config/Filters.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\npublic $globals = [\n    'before' => [\n        'csrf' => ['except' => 'api/*'],\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Traditional PHP Echo Statement in CodeIgniter 4\nDESCRIPTION: This shows the traditional way to echo or print a variable in PHP using the esc() function for output escaping in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/alternative_php.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php echo esc($variable); ?>\n```\n\n----------------------------------------\n\nTITLE: Loading Views in CodeIgniter 4.x\nDESCRIPTION: Example of how views are loaded in CodeIgniter 4.x. The view is now returned using the view() function, which can be called directly from a controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_views.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Welcome to CodeIgniter</title>\n</head>\n<body>\n    <h1>Welcome to CodeIgniter!</h1>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Debugging Emails in CodeIgniter4\nDESCRIPTION: Example of using printDebugger to debug email sending issues.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n// You can supply an array of types if you only want to see\n// certain parts of the message:\n$email->printDebugger(['headers', 'subject', 'body']);\n```\n\n----------------------------------------\n\nTITLE: Getting Field Count\nDESCRIPTION: Shows how to get the number of fields in the result\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM users;');\n\necho 'Number of fields: ' . $query->getFieldCount();\n```\n\n----------------------------------------\n\nTITLE: Checking Header Existence in CodeIgniter (PHP)\nDESCRIPTION: Shows how to check if a specific header exists in the request using the hasHeader() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\nif ($request->hasHeader('accept')) {\n    // .\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User Agent Information in CodeIgniter4\nDESCRIPTION: Shows how to retrieve the User Agent instance from server data using the getUserAgent method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_30\n\nLANGUAGE: php\nCODE:\n```\n$userAgent = $request->getUserAgent();\n```\n\n----------------------------------------\n\nTITLE: Using the saveData Option in view() Function\nDESCRIPTION: Shows how to prevent data from persisting between multiple view() calls by using the saveData option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nview('file_name', $data, ['saveData' => false]);\n```\n\n----------------------------------------\n\nTITLE: Running PHP Code Style Fixer in CodeIgniter 4\nDESCRIPTION: Command to automatically fix coding style violations in the CodeIgniter 4 project using Composer.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ncomposer cs-fix\n```\n\n----------------------------------------\n\nTITLE: Stripping Quotes from Strings in PHP\nDESCRIPTION: Demonstrates how to use strip_quotes() function to remove single and double quotes from a string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Joe's \"dinner\"\";\necho strip_quotes($string); // results in \"Joes dinner\"\n```\n\n----------------------------------------\n\nTITLE: Setting Environment in Apache Configuration\nDESCRIPTION: Example of setting the CI_ENVIRONMENT variable in an Apache .htaccess file or server configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/environments.rst#2025-04-16_snippet_1\n\nLANGUAGE: Apache\nCODE:\n```\nSetEnv CI_ENVIRONMENT development\n```\n\n----------------------------------------\n\nTITLE: Accessing Timer Service in CodeIgniter 4\nDESCRIPTION: Shows how to access the Timer service using the Services class in CodeIgniter 4. This method allows for easier swapping of implementations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$timer = \\Config\\Services::timer();\n```\n\n----------------------------------------\n\nTITLE: Accessing Server Variables in CodeIgniter4\nDESCRIPTION: Shows how to access a single server variable using the getServer method. Similar to getPost(), getGet(), and getCookie() methods, but specifically for $_SERVER data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_28\n\nLANGUAGE: php\nCODE:\n```\n$ipAddress = $request->getServer('REMOTE_ADDR');\n```\n\n----------------------------------------\n\nTITLE: Loading the Cookie Helper in CodeIgniter 4\nDESCRIPTION: Shows how to load the cookie_helper.php file using the helper() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/helpers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nhelper('cookie');\n```\n\n----------------------------------------\n\nTITLE: Explicitly Setting Cookie Options in CodeIgniter 4.2.7\nDESCRIPTION: Example of setting a cookie with explicit options for 'secure' and 'httponly' in CodeIgniter 4.2.7. This approach overrides the default config values and ensures consistent behavior across versions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_427.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$cookie = [\n    'name'     => $name,\n    'value'    => $value,\n    'secure'   => false, // Set explicitly\n    'httponly' => false, // Set explicitly\n];\nset_cookie($cookie);\n// or\n$this->response->setCookie($cookie);\n```\n\n----------------------------------------\n\nTITLE: Enabling Config Cache in index.php\nDESCRIPTION: Code modifications required in public/index.php to enable configuration caching in CodeIgniter 4.4.x.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n$factoriesCache = new \\CodeIgniter\\Cache\\FactoriesCache();\n$factoriesCache->load('config');\n\n// Later in the file:\n$factoriesCache->save('config');\n```\n\n----------------------------------------\n\nTITLE: Testing Filter Methods with Specific Inputs\nDESCRIPTION: Shows how to test filter methods by calling them with specific inputs and checking the results.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$caller = $this->getFilterCaller('toolbar', 'before');\n$result = $caller();\n\n$this->assertNull($result); // filter passes\n\n$result = $caller(null); // simulate no arguments\n\n$this->assertNull($result); // filter passes\n```\n\n----------------------------------------\n\nTITLE: Removing Honeypot Display Style in PHP\nDESCRIPTION: Configuration to remove the inline style for hiding the Honeypot field. This is useful when relying on CSP for field hiding instead of inline styles.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_430.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nConfig\\Honeypot::$container\n```\n\n----------------------------------------\n\nTITLE: Including ControllerTestTrait in Tests\nDESCRIPTION: Shows how to include the ControllerTestTrait in your test class to enable controller testing functionality.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Tests\\Support;\n\nuse CodeIgniter\\Test\\ControllerTestTrait;\nuse CodeIgniter\\Test\\CIUnitTestCase;\n\nclass TestControllerA extends CIUnitTestCase\n{\n    use ControllerTestTrait;\n\n    public function testShowCategories()\n    {\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Composer Script for PHP-CS-Fixer\nDESCRIPTION: Demonstrates how to add a Composer script to run PHP-CS-Fixer easily using the 'composer cs-fix' command.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/composer_packages.rst#2025-04-16_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    // ...\n    },\n    \"scripts\": {\n        \"cs-fix\": \"php-cs-fixer fix --ansi --verbose --diff\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Image Types in CodeIgniter 4\nDESCRIPTION: Example of converting between different image types using PHP constants.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/image/mypic.jpg')\n    ->convert(IMAGETYPE_PNG)\n    ->save('/path/to/image/mypic.png');\n```\n\n----------------------------------------\n\nTITLE: Loading Model with Full Namespace\nDESCRIPTION: Example of loading a UserModel class using its fully qualified namespace path.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nFactories::models('\\Blog\\Models\\UserModel');\n```\n\n----------------------------------------\n\nTITLE: Validating a Cache Key (PHP)\nDESCRIPTION: Example showing how to verify that a cache key is valid using the validateKey() static method. This checks for valid characters and length requirements.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/012.php\n```\n\n----------------------------------------\n\nTITLE: Demonstrating get_cookie() Behavior Change in PHP\nDESCRIPTION: This snippet illustrates the change in behavior of the get_cookie() function in CodeIgniter 4.2.1. It shows how the function now handles cookies with prefixed names differently compared to the previous version.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_421.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$_COOKIES = [\n    'test'        => 'Non CI Cookie',\n    'prefix_test' => 'CI Cookie',\n];\n```\n\nLANGUAGE: PHP\nCODE:\n```\nget_cookie('test');        // returns \"Non CI Cookie\"\nget_cookie('prefix_test'); // returns \"CI Cookie\"\n```\n\nLANGUAGE: PHP\nCODE:\n```\nget_cookie('test');              // returns \"CI Cookie\"\nget_cookie('prefix_test');       // returns null\nget_cookie('test', false, null); // returns \"Non CI Cookie\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Honeypot Filter in CodeIgniter 4\nDESCRIPTION: Configuration snippet showing how to enable the Honeypot filter in the app/Config/Filters.php file by uncommenting the honeypot entry in the $globals array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/honeypot.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $globals = [\n    'before' => [\n        'honeypot'\n        // 'csrf',\n    ],\n    'after' => [\n        'toolbar',\n        'honeypot'\n    ]\n];\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Protocol Version in PHP\nDESCRIPTION: Example of setting the HTTP protocol version for the message.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$message->setProtocolVersion('1.1');\n```\n\n----------------------------------------\n\nTITLE: Directory Mapping Example in CodeIgniter 4\nDESCRIPTION: Demonstrates how to use directory_map() function to create an array of files and directories\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$map = directory_map('./mydirectory');\n```\n\n----------------------------------------\n\nTITLE: Setting Email Message Body in CodeIgniter4\nDESCRIPTION: Example of setting the main email message body using setMessage() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$email->setMessage('This is my message');\n```\n\n----------------------------------------\n\nTITLE: Using freeResult()\nDESCRIPTION: Example of freeing result memory\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT title FROM my_table');\n\nforeach ($query->getResult() as $row) {\n    echo $row->title;\n}\n\n$query->freeResult();\n```\n\n----------------------------------------\n\nTITLE: Setting Up Database Migration Test in CodeIgniter 4\nDESCRIPTION: Example showing how to set up a test that uses database migrations in CodeIgniter 4. This configuration allows testing with a temporary database that gets migrated for each test.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Tests\\Database;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\n\nclass MyDatabaseTest extends CIUnitTestCase\n{\n    use DatabaseTestTrait;\n\n    protected $refresh  = true;\n    protected $migrate  = true;\n    protected $migrateOnce = false;\n    protected $seedOnce = false;\n}\n```\n\n----------------------------------------\n\nTITLE: Alternating Values in PHP Loops\nDESCRIPTION: Shows how to use the alternator() function to cycle through multiple values in a loop.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nforeach ($records as $row)\n{\n    echo alternator('one', 'two', 'three');\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Timer Instance Directly in PHP\nDESCRIPTION: Demonstrates creating a Timer instance directly without using services. This approach is less flexible when changing implementations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$timer = new \\CodeIgniter\\Debug\\Timer();\n```\n\n----------------------------------------\n\nTITLE: Converting Quotes to HTML Entities in PHP\nDESCRIPTION: Illustrates the use of quotes_to_entities() function to convert single and double quotes to HTML entities.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Joe's \"dinner\"\";\necho quotes_to_entities($string); // results in \"Joe&#39;s &quot;dinner&quot;\"\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Hidden Input Fields in CodeIgniter 4\nDESCRIPTION: This example shows how to create multiple hidden input fields using the form_hidden() function by passing an associative array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$data = [\n    'name'  => 'John Doe',\n    'email' => 'john@example.com',\n    'url'   => 'http://example.com'\n];\n\necho form_hidden($data);\n```\n\n----------------------------------------\n\nTITLE: Loading Model with Helper Function\nDESCRIPTION: Shows the use of the model() helper function to load a model class instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nmodel('UserModel');\n```\n\n----------------------------------------\n\nTITLE: Loading Class from Subdirectory\nDESCRIPTION: Demonstrates loading a class located in a subdirectory using forward slash notation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nFactories::libraries('Sub/SubLib');\n```\n\n----------------------------------------\n\nTITLE: Testing Route has Any Filters\nDESCRIPTION: Shows how to assert that a route has at least one filter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$this->assertHasFilters('admin/shop', 'after');\n```\n\n----------------------------------------\n\nTITLE: Migration Example in CodeIgniter 4.x\nDESCRIPTION: Updated migration file for CodeIgniter 4.x with timestamp naming, proper namespace, and the new Migration extension. This demonstrates the new format with camelCase method names.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_migrations.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Database\\Migrations;\n\nuse CodeIgniter\\Database\\Migration;\n\nclass CreateBlog extends Migration\n{\n    public function up()\n    {\n        $this->forge->addField([\n            'blog_id' => [\n                'type'           => 'INT',\n                'constraint'     => 5,\n                'unsigned'       => true,\n                'auto_increment' => true,\n            ],\n            'blog_title' => [\n                'type'       => 'VARCHAR',\n                'constraint' => '100',\n            ],\n            'blog_description' => [\n                'type' => 'TEXT',\n                'null' => true,\n            ],\n        ]);\n        $this->forge->addKey('blog_id', true);\n        $this->forge->createTable('blog');\n    }\n\n    public function down()\n    {\n        $this->forge->dropTable('blog');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Result Rows in PHP\nDESCRIPTION: This method returns the number of rows in the result set.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_31\n\nLANGUAGE: php\nCODE:\n```\ngetNumRows()\n```\n\n----------------------------------------\n\nTITLE: Getting Query Execution Start Time in CodeIgniter 4\nDESCRIPTION: Shows how to retrieve the execution start time of a query in seconds with microseconds using the getStartTime() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$startTime = $query->getStartTime();\n```\n\n----------------------------------------\n\nTITLE: Limiting Words in a String in PHP\nDESCRIPTION: Shows the usage of word_limiter() function to truncate a string to a specified number of words.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a nice text string consisting of eleven words.\";\necho word_limiter($string, 4); // returns \"Here is a nice...\"\n```\n\n----------------------------------------\n\nTITLE: Creating Regional Sales Model Registrar in PHP\nDESCRIPTION: Example of a RegionalSales model class implementing a registrar method for sales configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nnamespace App\\Models;\n\nclass RegionalSales\n{\n    public static function MySalesConfig()\n    {\n        return [\n            'target' => 300,\n        ];\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an HTML Email Link with Attributes in PHP\nDESCRIPTION: Shows how to use the mailto() function with additional HTML attributes for the anchor tag.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\necho mailto('me@my-site.com', 'Contact Me!', ['title' => 'Email me']);\n```\n\n----------------------------------------\n\nTITLE: Number to Size with Locale\nDESCRIPTION: Shows number to size conversion with specific locale formatting.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho number_to_size(123456789, 2, 'de-DE'); // Returns 117,73 MB\n```\n\n----------------------------------------\n\nTITLE: Loading Filesystem Helper in CodeIgniter 4\nDESCRIPTION: Shows how to load the filesystem helper in a CodeIgniter 4 application\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nhelper('filesystem');\n```\n\n----------------------------------------\n\nTITLE: Number to Size with Custom Precision\nDESCRIPTION: Demonstrates converting numbers to file sizes with specified decimal precision.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho number_to_size(123456789, 2); // Returns 117.73 MB\necho number_to_size(123456789, 3); // Returns 117.734 MB\n```\n\n----------------------------------------\n\nTITLE: Loading Module Models\nDESCRIPTION: Example of loading model classes from a module.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$model = new \\Acme\\Blog\\Models\\BlogModel();\n```\n\n----------------------------------------\n\nTITLE: CLI Write Basic Usage\nDESCRIPTION: Shows basic usage of the write() method to output text to terminal.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nCLI::write('The rain in Spain falls mainly on the plain.');\n```\n\n----------------------------------------\n\nTITLE: Configuring Filters with Arguments\nDESCRIPTION: Demonstrates how to pass arguments to filters when configuring them for specific URIs in the app/Config/Filters.php file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\npublic $filters = [\n    'group' => ['before' => ['admin/*' => ['admin', 'superadmin']]],\n    'permission' => ['before' => ['admin/users/*' => ['users.manage']]],\n];\n```\n\n----------------------------------------\n\nTITLE: Database Insertion Example - Has In Database\nDESCRIPTION: Shows how to insert test data into the database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\npublic function testHasInDatabase()\n{\n    $this->hasInDatabase('users', [\n        'name' => 'Joe User',\n        'email' => 'joe@example.com',\n    ]);\n}\n```\n\n----------------------------------------\n\nTITLE: Updating PHPStan Baseline in CodeIgniter4\nDESCRIPTION: Command to update the PHPStan baseline when errors cannot be resolved or are false positives.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ncomposer phpstan:baseline\n```\n\n----------------------------------------\n\nTITLE: Setting Raw View Data\nDESCRIPTION: Shows how to set view data without escaping by passing 'raw' as context.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$view->setVar('name', $name, 'raw');\n$view->setData(['name' => $name, 'email' => $email], 'raw');\n```\n\n----------------------------------------\n\nTITLE: Deprecation Logging Configuration\nDESCRIPTION: Configuration settings for handling deprecation warnings in different environments.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\npublic bool $logDeprecations = true;\npublic string $deprecationLogLevel = 'warning';\n```\n\n----------------------------------------\n\nTITLE: Getting Timer Service Using service() Function in PHP\nDESCRIPTION: Demonstrates using the service() function to get a shared instance of the Timer service in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$timer = service('timer');\n```\n\n----------------------------------------\n\nTITLE: Reducing Multiple Characters in PHP\nDESCRIPTION: Demonstrates the use of reduce_multiples() function to reduce repeated characters in a string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Fred, Bill,, Joe, Jimmy\";\n$string = reduce_multiples($string);\necho $string; // results in \"Fred, Bill, Joe, Jimmy\"\n```\n\n----------------------------------------\n\nTITLE: Creating an HTML5 Input Field in CodeIgniter 4\nDESCRIPTION: This example shows how to create an HTML5 input field with a specific type using the form_input() function by specifying the type in the fourth parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_17\n\nLANGUAGE: PHP\nCODE:\n```\necho form_input('email', 'joe@example.com', ['placeholder' => 'Email Address...'], 'email');\n```\n\n----------------------------------------\n\nTITLE: Deleting Files in CodeIgniter 4\nDESCRIPTION: Shows how to delete files in a directory\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\ndelete_files('./path/to/directory/');\n```\n\n----------------------------------------\n\nTITLE: Creating a File Instance in CodeIgniter 4\nDESCRIPTION: Creates a new instance of the File class by providing a file path. The second parameter can be set to true to check if the file exists and throw a FileNotFoundException if it doesn't.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Version of CodeIgniter 4\nDESCRIPTION: Use this command to install a specific version of CodeIgniter 4, for example version 4.4.8.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncomposer create-project codeigniter4/appstarter:4.4.8 project-root\n```\n\n----------------------------------------\n\nTITLE: Counting Result Fields in PHP\nDESCRIPTION: This method returns the number of fields in the result set.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_28\n\nLANGUAGE: php\nCODE:\n```\ngetFieldCount()\n```\n\n----------------------------------------\n\nTITLE: Updating Composer and Dependencies for CodeIgniter 4.3.1 Upgrade\nDESCRIPTION: This console command sequence updates Composer to the latest version, removes the vendor directory, and reinstalls dependencies for the CodeIgniter 4.3.1 upgrade. It ensures compatibility with the new version requirements.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_431.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer self-update\nrm -rf vendor/\ncomposer update\n```\n\n----------------------------------------\n\nTITLE: Using autoTypography Function\nDESCRIPTION: Demonstrates usage of autoTypography function to format text into semantically correct HTML.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$string = $typography->autoTypography($string);\n```\n\n----------------------------------------\n\nTITLE: Force HTTPS Function Call in PHP\nDESCRIPTION: Function to force HTTPS requests in CodeIgniter 4 with 307 status code preservation\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.0.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nforce_https()\n```\n\n----------------------------------------\n\nTITLE: Creating Seeder Files with Custom Namespace (Unix)\nDESCRIPTION: Demonstrates creating a seeder file with a custom namespace using the command line interface on Unix systems.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nphp spark make:seeder MySeeder --namespace Acme\\\\Blog\n```\n\n----------------------------------------\n\nTITLE: Auto-linking Email Addresses Only in PHP\nDESCRIPTION: Illustrates the use of the auto_link() function to convert only email addresses in a string into clickable links.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$string = auto_link($string, 'email');\n```\n\n----------------------------------------\n\nTITLE: Creating URL-Friendly Strings with Underscore Separator in PHP\nDESCRIPTION: Demonstrates the use of url_title() function with an underscore as the word separator instead of a dash.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\necho url_title('What would Jesus eat?', '_');\n// Produces: What_would_Jesus_eat\n```\n\n----------------------------------------\n\nTITLE: Traditional Input Retrieval in PHP\nDESCRIPTION: Demonstrates the traditional way of retrieving and checking input data using global variables in PHP.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nif (isset($_POST['something'])) {\n    $something = $_POST['something'];\n}\n```\n\n----------------------------------------\n\nTITLE: Protected Method Declarations in Image Handlers\nDESCRIPTION: Image handler methods that were changed from public to protected scope for both GD and ImageMagick handlers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_414.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Images\\Handlers\\GDHandler::_flatten()\nCodeIgniter\\Images\\Handlers\\GDHandler::_flip()\nCodeIgniter\\Images\\Handlers\\ImageMagickHandler::_flatten()\nCodeIgniter\\Images\\Handlers\\ImageMagickHandler::_flip()\n```\n\n----------------------------------------\n\nTITLE: nginx URL Configuration for CodeIgniter\nDESCRIPTION: nginx server configuration block that handles URL routing for CodeIgniter applications, attempting to match files/directories before routing to index.php.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/urls.rst#2025-04-16_snippet_1\n\nLANGUAGE: nginx\nCODE:\n```\nlocation / {\n    try_files $uri $uri/ /index.php$is_args$args;\n}\n```\n\n----------------------------------------\n\nTITLE: Default Method Fallback in CodeIgniter 4 Auto Routing\nDESCRIPTION: Illustrates the Default Method Fallback feature where remaining URI segments are passed to the default method if a specific method is not found.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nclass Product extends BaseController\n{\n    public function getIndex($id = null, $action = null)\n    {\n        $data = [\n            'id'     => $id,\n            'action' => $action\n        ];\n        return $this->response->setJSON($data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Typical Directory Structure for a Composer Package\nDESCRIPTION: Shows the recommended folder structure for a Composer package, including source code, tests, and configuration files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/composer_packages.rst#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nyour-package-name/\n├── .gitattributes\n├── .gitignore\n├── LICENSE\n├── README.md\n├── composer.json\n├── src/\n│   └── YourClass.php\n└── tests/\n    └── YourClassTest.php\n```\n\n----------------------------------------\n\nTITLE: View with Partial Include\nDESCRIPTION: Demonstrates how to include a partial view within a section using the include() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_layouts.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?= $this->extend('default') ?>\n\n<?= $this->section('content') ?>\n    <h1>Hello World!</h1>\n\n    <?= $this->include('sidebar') ?>\n<?= $this->endSection() ?>\n```\n\n----------------------------------------\n\nTITLE: Alternative If/Elseif/Else Control Structure in PHP\nDESCRIPTION: Example of using the alternative syntax for if/elseif/else conditions in PHP which eliminates braces and uses endif instead of closing braces. Colons are used after each control structure instead of semicolons.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/alternative_php.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php if ($todo_count > 0) : ?>\n    <h3>My Todo List</h3>\n    <ul>\n    <?php foreach ($todo as $item) : ?>\n        <li><?= $item ?></li>\n    <?php endforeach ?>\n    </ul>\n<?php elseif ($vacation_days > 0) : ?>\n    <h3>Vacation Days Left</h3>\n    <ul>\n    <?php foreach ($vacation_days as $day) : ?>\n        <li><?= $day ?></li>\n    <?php endforeach ?>\n    </ul>\n<?php else : ?>\n    <h3>Nothing to report</h3>\n<?php endif ?>\n```\n\n----------------------------------------\n\nTITLE: Loading Views in CodeIgniter 3.x\nDESCRIPTION: Example of how views were loaded in CodeIgniter 3.x. The view is loaded using the load->view() method, which was typically called within a controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_views.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Welcome to CodeIgniter</title>\n</head>\n<body>\n    <h1>Welcome to CodeIgniter!</h1>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Getting Field Names from Query Result in CodeIgniter 4\nDESCRIPTION: Demonstrates retrieving field names from a query result object.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/metadata.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM table_name');\n$fields = $query->getFieldNames();\n```\n\n----------------------------------------\n\nTITLE: Using get_cookie() with XSS Cleaning in PHP\nDESCRIPTION: The `get_cookie()` function now uses `FILTER_SANITIZE_FULL_SPECIAL_CHARS` instead of `FILTER_SANITIZE_STRING` when `$xssClean` is set to true. This change affects the output and may require adjustments in existing code.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_417.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nget_cookie($name, $xssClean = true)\n```\n\n----------------------------------------\n\nTITLE: Trimming and Reducing Multiple Characters in PHP\nDESCRIPTION: Shows how to use reduce_multiples() function with trimming option to remove characters from start and end of the string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$string = \",Fred, Bill,, Joe, Jimmy,\";\n$string = reduce_multiples($string, ',', true);\necho $string; // results in \"Fred, Bill, Joe, Jimmy\"\n```\n\n----------------------------------------\n\nTITLE: Basic View Extension with Content Section\nDESCRIPTION: Demonstrates how to extend a layout and define content for a single section.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_layouts.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?= $this->extend('default') ?>\n\n<?= $this->section('content') ?>\n    <h1>Hello World!</h1>\n<?= $this->endSection() ?>\n```\n\n----------------------------------------\n\nTITLE: Directory Mirroring in CodeIgniter 4\nDESCRIPTION: Shows how to mirror contents of one directory to another using directory_mirror()\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\ndirectory_mirror('/path/to/source', '/path/to/destination');\n```\n\n----------------------------------------\n\nTITLE: Using HTMX Ajax-Header Extension for AJAX Detection\nDESCRIPTION: This HTML snippet shows how to include the HTMX ajax-header extension to ensure proper AJAX request detection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/ajax.rst#2025-04-16_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<body hx-ext=\"ajax-header\">\n...\n</body>\n```\n\n----------------------------------------\n\nTITLE: Creating a Filter in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:filter generator to create a new filter file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nmake:filter <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Displaying Validation Errors List in CodeIgniter4\nDESCRIPTION: Example showing how to display validation errors in HTML format using validation_list_errors() function. Accepts an optional template parameter for customizing error display.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_29\n\nLANGUAGE: php\nCODE:\n```\n<?= validation_list_errors() ?>\n```\n\n----------------------------------------\n\nTITLE: Measuring a code block with Timer::record() in CodeIgniter 4\nDESCRIPTION: Shows how to use the record() method to measure execution time of a code block wrapped in a callable function. This method handles starting and stopping the timer automatically.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$timer = new \\CodeIgniter\\Benchmark\\Timer();\n$timer->record('render view', function() {\n    generateView();\n});\n```\n\n----------------------------------------\n\nTITLE: Testing CLI Output with StreamFilterTrait in CodeIgniter 4\nDESCRIPTION: This example shows how to use StreamFilterTrait to capture CLI output in a test. The trait provides methods to capture and reset output buffers from streams like STDOUT.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/cli.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter;\n\nuse CodeIgniter\\Test\\Filters\\StreamFilterTrait;\n\nfinal class SomeTest extends CIUnitTestCase\n{\n    use StreamFilterTrait;\n\n    public function testSomeOutput(): void\n    {\n        // Use STDOUT stream filter\n        $this->streamFilter();\n\n        // Generate some output\n        CLI::write('first.');\n        echo 'second';\n        \n        // Get the stream filter buffer\n        $output = $this->getStreamFilterBuffer();\n        \n        // Reset the stream filter buffer\n        $this->resetStreamFilterBuffer();\n        \n        // Test the output\n        $this->assertStringContainsString('first', $output);\n        $this->assertStringContainsString('second', $output);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Apache Directory Configuration\nDESCRIPTION: Apache directory configuration to enable URL rewriting and set permissions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_3\n\nLANGUAGE: apache\nCODE:\n```\n<Directory \"/opt/lamp/apache2/htdocs\">\n    Options Indexes FollowSymLinks\n    AllowOverride All\n    Require all granted\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Language String Usage in CodeIgniter4\nDESCRIPTION: This snippet shows how developers should check language string output in CodeIgniter4. It emphasizes using the lang() function call rather than relying on the content of language files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/backward_compatibility_notes.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nlang('...')\n```\n\n----------------------------------------\n\nTITLE: Using formatCharacters Function\nDESCRIPTION: Shows how to use formatCharacters function to convert quotes to curly entities and format other special characters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$string = $typography->formatCharacters($string);\n```\n\n----------------------------------------\n\nTITLE: Converting a String to Pascal Case in PHP\nDESCRIPTION: This snippet demonstrates how to use the pascalize() function to convert a string to Pascal case.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\necho pascalize('my_dog_spot'); // Prints 'MyDogSpot'\n```\n\n----------------------------------------\n\nTITLE: Appending Header Values in PHP\nDESCRIPTION: Demonstrates adding a value to an existing header array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$message->appendHeader('Accept-Language', 'en-GB');\n```\n\n----------------------------------------\n\nTITLE: CI3 Email Configuration and Usage Example\nDESCRIPTION: Example showing how to configure and send emails using CodeIgniter 3.x's email library, including loading the library, setting email parameters, and sending.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_emails.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\\n\\n$this->load->library('email');\\n\\n$this->email->from('your@example.com', 'Your Name');\\n$this->email->to('someone@example.com');\\n$this->email->cc('another@another-example.com');\\n$this->email->bcc('them@their-example.com');\\n\\n$this->email->subject('Email Test');\\n$this->email->message('Testing the email class.');\\n\\n$this->email->send();\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Pages Controller in CodeIgniter 4\nDESCRIPTION: Implementation of a Pages controller class with an index() method that returns the welcome view and a placeholder view() method that accepts a page parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Pages extends BaseController\n{\n    public function index()\n    {\n        return view('welcome_message');\n    }\n\n    public function view($page = 'home')\n    {\n        // This will be filled in later\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Combined Resource and Presenter Routes\nDESCRIPTION: Example of distinguishing between resource and presenter routes for the same resource.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('api/photos');\n$routes->presenter('photos');\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Controller for Auto Routing in CodeIgniter 4\nDESCRIPTION: Demonstrates how to create a simple HelloWorld controller that works with Auto Routing (Improved). The controller extends BaseController and includes a getIndex() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass HelloWorld extends BaseController\n{\n    public function getIndex()\n    {\n        return 'Hello World!';\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating composer.json for CodeIgniter 4.5.3 Upgrade\nDESCRIPTION: The composer.json file in the project root directory needs to be updated as part of the upgrade process from CodeIgniter 4.5.2 to 4.5.3. This file manages dependencies and project configuration.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_453.rst#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"composer.json\"\n```\n\n----------------------------------------\n\nTITLE: Passing Data to Views in CodeIgniter 4\nDESCRIPTION: Demonstrates how to pass an array of data from a controller to a view.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$data = [\n    'title'  => 'My title',\n    'heading' => 'My Heading',\n    'message' => 'My Message',\n];\n\nreturn view('blog_view', $data);\n```\n\n----------------------------------------\n\nTITLE: Apache VirtualHost Module Configuration\nDESCRIPTION: Configuration to enable Apache's virtual hosting module.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_4\n\nLANGUAGE: apache\nCODE:\n```\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Branches for Bug Fixes\nDESCRIPTION: Commands to create a new branch for bug fixes based on the develop branch. This isolates your changes and makes them easier to review and merge.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n> git switch develop\n> git switch -c fix/problem123\n```\n\n----------------------------------------\n\nTITLE: Using Key Prefixes in CodeIgniter 4\nDESCRIPTION: Demonstrates the use of hex2bin and base64 prefixes for key storage.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\npublic $key = 'hex2bin:<your-hex-encoded-key>';\n\n// or\n\npublic $key = 'base64:<your-base64-encoded-key>';\n```\n\n----------------------------------------\n\nTITLE: Checking if a Word is Pluralizable in PHP\nDESCRIPTION: This example illustrates how to use the is_pluralizable() function to check if a word has a plural version.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nvar_dump(is_pluralizable('equipment')); // Prints 'false'\nvar_dump(is_pluralizable('user'));      // Prints 'true'\n```\n\n----------------------------------------\n\nTITLE: Setting Session Values in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example of setting custom session values for a feature test using the withSession() method, which helps in testing functionality that depends on session data, like authentication.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/feature.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$values = [\n    'logged_in' => true,\n    'username'  => 'admin',\n];\n\n$results = $this->withSession($values)\n    ->get('admin/posts');\n```\n\n----------------------------------------\n\nTITLE: Updated Validation Rule Group Loading in PHP\nDESCRIPTION: Shows the change in Validation::loadRuleGroup() return value format, which now returns an array containing both rules array and customErrors array instead of just the rules array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_437.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$rules = $this->validation->loadRuleGroup($rules);\n    ↓\n[$rules, $customErrors] = $this->validation->loadRuleGroup($rules);\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with form_button() in PHP\nDESCRIPTION: Shows how to use the form_button() function to generate a standard button element. It includes examples of basic usage, setting attributes, and adding JavaScript.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_23\n\nLANGUAGE: PHP\nCODE:\n```\necho form_button('name', 'content');\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_button(['name' => 'button', 'id' => 'button', 'value' => 'true', 'type' => 'reset', 'content' => 'Reset']);\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_button('mybutton', 'Click Me', 'onClick=\"some_function()\"');\n```\n\n----------------------------------------\n\nTITLE: Creating a Validation in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:validation generator to create a new validation file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_11\n\nLANGUAGE: console\nCODE:\n```\nmake:validation <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Validation Rule Changes in CodeIgniter 4.4.4\nDESCRIPTION: This code snippet illustrates the changes in validation behavior for dot array syntax in CodeIgniter 4.4.4. It shows how the '*' wildcard now correctly validates data only at the specified dimension level, fixing a previous bug where it validated at any level.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_444.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$data = [\n    'contacts' => [\n        [\n            'name' => 'John Doe',\n            'phone' => '09012345678',\n            'email' => 'john@example.com',\n        ],\n        [\n            'name' => 'Jane Doe',\n            'phone' => '09023456789',\n            'email' => 'jane@example.com',\n        ],\n    ],\n];\n\n$rules = [\n    // This rule key now only validates 'contacts.*.name'\n    'contacts.*.name' => 'required|string',\n\n    // If you need to validate deeper levels, you must specify them explicitly\n    'contacts.*.*.name' => 'required|string',\n    'contacts.*.*.*.name' => 'required|string',\n];\n\n// Run validation\n$validation = \\Config\\Services::validation();\n$validation->setRules($rules);\n$isValid = $validation->run($data);\n```\n\n----------------------------------------\n\nTITLE: Creating a Cell in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:cell generator command to create a new Cell file and its view in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nmake:cell <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Basic File Structure for PHP Files\nDESCRIPTION: Demonstrates the required order of elements in a PHP file including opening tag, docblock, declare statements, namespace, and import statements.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n/**\n * File docblock\n */\n\ndeclare(strict_types=1);\n\nnamespace App\\Controllers;\n\nuse App\\Models\\UserModel;\nuse function App\\Helpers\\array_sort;\nuse const App\\Constants\\STATUS_ACTIVE;\n```\n\n----------------------------------------\n\nTITLE: Demonstrating SiteURI getPath() and getRoutePath() in PHP\nDESCRIPTION: Shows the difference between getPath() and getRoutePath() methods of the new SiteURI class when the baseURL contains subdirectories.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.0.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n        baseURL: http://localhost:8888/CodeIgniter4/\nThe current URI: http://localhost:8888/CodeIgniter4/foo/bar\n      getPath(): /CodeIgniter4/foo/bar\n getRoutePath(): foo/bar\n```\n\n----------------------------------------\n\nTITLE: Setting System Directory Path in CodeIgniter 4\nDESCRIPTION: This snippet shows how to set the system directory path in the Paths.php configuration file when running multiple applications with one CodeIgniter installation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $systemDirectory = __DIR__ . '/../../vendor/codeigniter4/framework/system';\n```\n\n----------------------------------------\n\nTITLE: Decrementing a Cached Value (PHP)\nDESCRIPTION: Example showing how to perform atomic decrementation of a raw stored value in cache using the decrement() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/caching.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n.. literalinclude:: caching/008.php\n```\n\n----------------------------------------\n\nTITLE: CLI Prompt with Array Validation Rules\nDESCRIPTION: Demonstrates using array syntax for validation rules in CLI prompt.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$email = CLI::prompt('What is your email?', null, ['required', 'valid_email']);\n```\n\n----------------------------------------\n\nTITLE: Specifying Database Group in CodeIgniter 4\nDESCRIPTION: Demonstrates how to specify a different database group using the --dbgroup option when listing tables.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/db_commands.rst#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:table --show --dbgroup tests\n```\n\n----------------------------------------\n\nTITLE: Updating Target Branch\nDESCRIPTION: Commands to update local target branch with upstream changes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_17\n\nLANGUAGE: console\nCODE:\n```\n> git fetch upstream\n> git switch 4.6\n> git merge upstream/4.6\n> git push origin 4.6\n```\n\n----------------------------------------\n\nTITLE: Configuring Static Page Routes in CodeIgniter 4\nDESCRIPTION: Route configuration to handle static pages. Maps /pages to the Pages controller's index() method and uses a segment parameter to route page requests to the view() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$routes->get('pages', 'Pages::index');\n$routes->get('(:segment)', 'Pages::view/$1');\n```\n\n----------------------------------------\n\nTITLE: Defining Custom RouteCollection in PHP\nDESCRIPTION: Shows how to create a custom RouteCollection class that implements the RouteCollectionInterface in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/services.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nclass MyRouteCollection implements RouteCollectionInterface\n{\n    // Implement required methods here\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying News Creation Form in CodeIgniter 4 Controller\nDESCRIPTION: This method in the News controller loads the form helper and returns the view for creating a new news item.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\npublic function new()\n{\n    helper('form');\n\n    return view('templates/header', ['title' => 'Create a news item'])\n        . view('news/create')\n        . view('templates/footer');\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Nested Route Groups with Filters\nDESCRIPTION: Example of nested route groups configuration with filter and namespace options that now properly merge options between groups.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_450.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$routes->group('admin', ['filter' => 'csrf'], static function ($routes) {\n    $routes->get('/', static function () {\n        // ...\n    });\n\n    $routes->group('users', ['namespace' => 'Users'], static function ($routes) {\n        $routes->get('/', static function () {\n            // ...\n        });\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Executing Controller Test\nDESCRIPTION: Demonstrates how to set up the test environment and execute a controller method with parameters for testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\npublic function testShowCategories()\n{\n    $result = $this->withUri('http://example.com/categories')\n                    ->controller(\\App\\Controllers\\ForumController::class)\n                    ->execute('showCategories');\n\n    $this->assertTrue($result->isOK());\n}\n```\n\n----------------------------------------\n\nTITLE: Modified Project Files in CodeIgniter 4.4.2 Upgrade\nDESCRIPTION: List of project space files that received updates during the 4.4.2 upgrade. These files require manual intervention as they are outside the system scope.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_442.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n- app/Config/Migrations.php\n- app/Config/View.php\n- composer.json\n```\n\n----------------------------------------\n\nTITLE: Defining Class to Load\nDESCRIPTION: Shows how to define a specific class to be loaded for a given component and alias.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nFactories::define('models', 'Myth\\Auth\\Models\\UserModel', 'App\\Models\\UserModel');\n```\n\n----------------------------------------\n\nTITLE: User Deprecation Example\nDESCRIPTION: Example of triggering a user deprecation warning.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\ntrigger_error('Function is deprecated', E_USER_DEPRECATED);\n```\n\n----------------------------------------\n\nTITLE: Number to Roman Numeral Conversion\nDESCRIPTION: Converting numbers to Roman numerals, supporting values from 1 to 3999.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\necho number_to_roman(23); // Returns XXIII\necho number_to_roman(2021); // Returns MMXXI\necho number_to_roman(4000); // Returns null\n```\n\n----------------------------------------\n\nTITLE: Setting Up Explicit Registrars in PHP Config\nDESCRIPTION: Example configuration class declaration showing how to specify explicit registrars.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\n\nclass MySalesConfig extends BaseConfig\n{\n    public $target   = 100;\n    public $campaign = \"Winter Wonderland\";\n    public $region   = \"US\";\n\n    protected $registrars = [\n        \\App\\Models\\RegionalSales::class,\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Feature Testing Request Body Example in PHP\nDESCRIPTION: Demonstrates the updated priority for Request body when using multiple methods in feature testing. The $params passed to call() is now used to build the request body instead of $body.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_437.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->withBody($body)->withBodyFormat('json')->call('post', $params)\n```\n\n----------------------------------------\n\nTITLE: Filter Check Command Output Format\nDESCRIPTION: Example output showing the format of filter:check command results, displaying before and after filters for a route.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/filters.rst#2025-04-16_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n+--------+-------+----------------------+-------------------------------+\n| Method | Route | Before Filters       | After Filters                 |\n+--------+-------+----------------------+-------------------------------+\n| GET    | /     | forcehttps pagecache | pagecache performance toolbar |\n+--------+-------+----------------------+-------------------------------+\n\nBefore Filter Classes:\nCodeIgniter\\Filters\\ForceHTTPS → CodeIgniter\\Filters\\PageCache\nAfter Filter Classes:\nCodeIgniter\\Filters\\PageCache → CodeIgniter\\Filters\\PerformanceMetrics → CodeIgniter\\Filters\\DebugToolbar\n```\n\n----------------------------------------\n\nTITLE: Loading Number Helper in CodeIgniter 4\nDESCRIPTION: Code to load the Number Helper functionality in a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('number');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Previous Row in PHP\nDESCRIPTION: This method returns the previous row from the result set. The row can be returned as an array, object, or custom class instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_25\n\nLANGUAGE: php\nCODE:\n```\ngetPreviousRow([$type = 'object'])\n```\n\n----------------------------------------\n\nTITLE: Creating an Entity in CodeIgniter 4\nDESCRIPTION: Usage syntax for the make:entity generator to create a new entity file in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nmake:entity <name> [options]\n```\n\n----------------------------------------\n\nTITLE: Testing CLI Output with CITestStreamFilter in CodeIgniter 4\nDESCRIPTION: This example demonstrates manual usage of CITestStreamFilter to capture CLI output in a single test without using the StreamFilterTrait. It shows how to register, add, and remove filters to capture output streams.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/cli.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter;\n\nuse CodeIgniter\\Test\\Filters\\CITestStreamFilter;\n\nfinal class SomeTest extends CIUnitTestCase\n{\n    public function testSomeOutput(): void\n    {\n        CITestStreamFilter::registration();\n        \n        // Add filter to the output stream\n        CITestStreamFilter::addOutputFilter();\n        \n        // Generate some output\n        CLI::write('first.');\n        echo 'second';\n        \n        // Check the output\n        $this->assertStringContainsString(\n            'first',\n            CITestStreamFilter::$buffer\n        );\n        \n        // Clean up\n        CITestStreamFilter::removeOutputFilter();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Number to Amount with Precision\nDESCRIPTION: Shows number to amount conversion with custom decimal precision.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\necho number_to_amount(123456789, 2); // Returns 123.46 million\necho number_to_amount(123456789, 3); // Returns 123.457 million\n```\n\n----------------------------------------\n\nTITLE: Stripping Image Tags Example\nDESCRIPTION: Demonstrates using the strip_image_tags() function to remove image tags from a string while preserving the image URL as plain text.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/security_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$string = strip_image_tags($string);\n```\n\n----------------------------------------\n\nTITLE: CLI Wait Function Usage\nDESCRIPTION: Demonstrates using wait() method to pause execution with optional message.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n// wait for specified number of seconds\nCLI::wait(5);\n\n// wait for specified number of seconds,\n// with countdown displayed\nCLI::wait(5, true);\n\n// show a countdown timer\nCLI::wait(5, true, 'Waiting to begin a task...');\n```\n\n----------------------------------------\n\nTITLE: CLI Text Wrap with Padding\nDESCRIPTION: Shows text wrapping with left padding for column-like output.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_16\n\nLANGUAGE: php\nCODE:\n```\nCLI::wrap($text, 20, 3);\n```\n\n----------------------------------------\n\nTITLE: Using Underscore as Separator in Environment Variables\nDESCRIPTION: CodeIgniter 4.1.5 introduces the ability to use underscores as separators in environment variable names. This change enhances the flexibility of configuration options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.1.5.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nDB_HOST = localhost\nDB_USERNAME = my_username\nDB_PASSWORD = my_password\n```\n\n----------------------------------------\n\nTITLE: Preparing and Pushing a Feature Branch for Review\nDESCRIPTION: Complete workflow to synchronize with upstream, rebase your feature branch, and push it to your fork for creating a pull request.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n> git fetch upstream\n> git switch develop\n> git merge upstream/develop\n> git push origin develop\n> git switch fix/issue-123\n> git rebase upstream/develop\n> git push --force-with-lease origin fix/issue-123\n```\n\n----------------------------------------\n\nTITLE: Toggling Config Cache in PHP Configuration\nDESCRIPTION: Example of enabling configuration caching by setting the configCacheEnabled property in the Optimize.php configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\npublic bool $configCacheEnabled = true;\n```\n\n----------------------------------------\n\nTITLE: Direct View Class Instantiation\nDESCRIPTION: Demonstrates direct instantiation of the View class when not using it as default renderer.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_renderer.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$view = new \\CodeIgniter\\View\\View();\n```\n\n----------------------------------------\n\nTITLE: Converting a Plural Word to Singular in PHP\nDESCRIPTION: This example shows how to use the singular() function to convert a plural word to its singular form.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho singular('dogs'); // Prints 'dog'\necho singular('cats'); // Prints 'cat'\n```\n\n----------------------------------------\n\nTITLE: Feature Configuration Updates in CodeIgniter 4\nDESCRIPTION: Addition of new feature flags and removal of deprecated configurations in Feature.php, including changes to filter order and query builder behavior.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_450.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nConfig\\Feature::$oldFilterOrder\nConfig\\Feature::$limitZeroAsAll\nConfig\\Feature::$multipleFilters // removed\n```\n\n----------------------------------------\n\nTITLE: Enabling Redirection on CSRF Validation Failure\nDESCRIPTION: Configuration to enable redirection to the previous page when CSRF validation fails, providing a better user experience than throwing exceptions in production environments.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/security.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic bool $redirect = true;\n```\n\n----------------------------------------\n\nTITLE: Basic Number to Size Conversion\nDESCRIPTION: Examples of converting numbers to human-readable file sizes with appropriate suffixes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho number_to_size(456); // Returns 456 Bytes\necho number_to_size(123456); // Returns 120.57 KB\necho number_to_size(123456789); // Returns 117.73 MB\necho number_to_size(123456789123); // Returns 114.97 GB\necho number_to_size(123456789123456); // Returns 112.27 TB\n```\n\n----------------------------------------\n\nTITLE: Loading Test Helper in CodeIgniter 4\nDESCRIPTION: Shows how to load the Test Helper in a CodeIgniter 4 project\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/test_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('test');\n```\n\n----------------------------------------\n\nTITLE: Disabling Composer Package Discovery\nDESCRIPTION: Configuration to disable automatic discovery of Composer packages.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic $discoverInComposer = false;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Last Row in PHP\nDESCRIPTION: This method returns the last row from the result set. The row can be returned as an array, object, or custom class instance.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_27\n\nLANGUAGE: php\nCODE:\n```\ngetLastRow([$type = 'object'])\n```\n\n----------------------------------------\n\nTITLE: Loading Module Helpers\nDESCRIPTION: Example of loading helper files from a module.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nhelper('Acme\\Blog\\blog');\n```\n\n----------------------------------------\n\nTITLE: PHP Controller for INI Settings Check\nDESCRIPTION: Example controller code to check PHP ini settings when spark command cannot be used.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Security\\CheckPhpIni;\n\nclass Home extends BaseController\n{\n    public function index(): string\n    {\n        return CheckPhpIni::run(false);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Row Value in PHP\nDESCRIPTION: This method assigns a value to a particular column in the result set. It can take either a column name and value, or an array of key/value pairs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_23\n\nLANGUAGE: php\nCODE:\n```\nsetRow($key[, $value = null])\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 3 Form Validation Controller Implementation\nDESCRIPTION: Complete controller example showing form validation implementation in CodeIgniter 3.x, including loading the form validation library, setting rules, and handling validation results.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_validations.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Form extends CI_Controller\n{\n    public function index()\n    {\n        $this->load->helper(array('form', 'url'));\n\n        $this->load->library('form_validation');\n\n        $this->form_validation->set_rules('username', 'Username', 'required');\n        $this->form_validation->set_rules('password', 'Password', 'required',\n            array('required' => 'You must provide a %s.')\n        );\n        $this->form_validation->set_rules('passconf', 'Password Confirmation', 'required');\n        $this->form_validation->set_rules('email', 'Email', 'required');\n\n        if ($this->form_validation->run() == FALSE) {\n            $this->load->view('myform');\n        } else {\n            $this->load->view('formsuccess');\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Strict Media Type Matching\nDESCRIPTION: Shows how to enforce strict matching for media type negotiation with a boolean flag.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$supported = [\n    'application/json',\n    'application/xml',\n    'text/xml'\n];\n\n// Using the Negotiator class\n$negotiator->media($supported, true);\n\n// Using the Request class\n$request->negotiate('media', $supported, true);\n```\n\n----------------------------------------\n\nTITLE: Viewing Generator Help in CodeIgniter 4 CLI\nDESCRIPTION: Shows how to view the full description and usage information for a particular generator command using the CLI.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark help <generator_command>\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy IPs in CodeIgniter 4.2.11 PHP\nDESCRIPTION: New format for setting proxy IP addresses and their corresponding HTTP headers for client IP in the App configuration. This change requires updating the $proxyIPs property to use an array format with IP addresses as keys and header names as values.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4211.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic $proxyIPs = [\n        '10.0.1.200'     => 'X-Forwarded-For',\n        '192.168.5.0/24' => 'X-Forwarded-For',\n];\n```\n\n----------------------------------------\n\nTITLE: Setting JPEG Image Quality in CodeIgniter 4\nDESCRIPTION: Example of saving a JPEG image with custom quality settings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/images.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$image->withFile('/path/to/images/mypic.jpg')\n    ->save('/path/to/images/my_low_quality_pic.jpg', 10);\n```\n\n----------------------------------------\n\nTITLE: Converting Image to Base64 Data URI\nDESCRIPTION: Generates a base64 encoded data URI from an image file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\necho img([     \n    'src' => img_data('/path/to/image.jpg'),\n    'alt' => 'Image converted to base64',\n]);\n```\n\n----------------------------------------\n\nTITLE: Initializing CLI Library in Controller\nDESCRIPTION: Shows how to import the CLI library in a controller using a use statement.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\CLI\\CLI;\n```\n\n----------------------------------------\n\nTITLE: Using index_page() Function\nDESCRIPTION: Demonstrates getting the configured index page value.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\necho index_page();\n```\n\n----------------------------------------\n\nTITLE: Using Event Priority Constants in CodeIgniter 4\nDESCRIPTION: Demonstrates the transition from using global constants to class constants for event priorities in CodeIgniter 4. This change affects how event priorities are set in the framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.0.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Events\\Events::PRIORITY_LOW\nCodeIgniter\\Events\\Events::PRIORITY_NORMAL\nCodeIgniter\\Events\\Events::PRIORITY_HIGH\n```\n\n----------------------------------------\n\nTITLE: Setting Migration Group in CodeIgniter 4 PHP\nDESCRIPTION: This code snippet illustrates how to set the database group for migration files using the setGroup method of the MigrationRunner class. It sets the group to 'test' and then runs the latest migrations for that group.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$migration = \\Config\\Services::migrations();\n\n$migration->setGroup('test');\n$migration->latest();\n```\n\n----------------------------------------\n\nTITLE: Setting Encryption Key in Configuration\nDESCRIPTION: Shows how to set the encryption key in the configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic $key = 'aBigsecret_ofAtleast32Characters';\n```\n\n----------------------------------------\n\nTITLE: Testing Controllers with Custom Response\nDESCRIPTION: Shows how to provide a custom Response instance for controller testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$response = new \\CodeIgniter\\HTTP\\Response(new \\Config\\App());\n// Set the response however you need...\n\n$results = $this->withResponse($response)\n                ->controller(ForumController::class)\n                ->execute('index');\n```\n\n----------------------------------------\n\nTITLE: Reconstructing Command Line Options String in PHP\nDESCRIPTION: Shows the use of the getOptionString() method to get a reconstructed command line string for the options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_request.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$optionString = $request->getOptionString();\n```\n\n----------------------------------------\n\nTITLE: Security Configuration Update in CodeIgniter 4\nDESCRIPTION: Security configuration change in Security.php setting the redirect property to true in production environment.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_450.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic $redirect = true; // in production environment\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4.x Controller Implementation Example\nDESCRIPTION: Updated controller code for CodeIgniter 4.x showing the new namespace structure, BaseController extension, and modern method return patterns. This demonstrates the same Blog controller functionality implemented with CI4 conventions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_controllers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Blog extends BaseController\n{\n    public function index()\n    {\n        $data = [\n            'title'     => 'My Blog Title',\n            'heading'   => 'My Blog Heading',\n            'todo_list' => ['Clean House', 'Call Mom', 'Run Errands'],\n        ];\n\n        return view('blog_view', $data);\n    }\n\n    public function post($id)\n    {\n        return 'Post ' . $id;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Separate Database Connection Instance\nDESCRIPTION: Creates a new database connection instance instead of using the shared connection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/connecting.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ndb_connect(false, false)\n```\n\n----------------------------------------\n\nTITLE: Generating Code Coverage Reports\nDESCRIPTION: Command to run tests with detailed code coverage reporting options.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_8\n\nLANGUAGE: console\nCODE:\n```\n./phpunit --colors --coverage-text=build/coverage/text/coverage.txt --coverage-html=build/coverage/html/ -d memory_limit=1024m\n```\n\n----------------------------------------\n\nTITLE: Using Echo in Views - PHP\nDESCRIPTION: Example showing how views use simple PHP echo statements to display variables passed from controllers. This is mentioned in the context of view implementation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/mvc.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\necho\n```\n\n----------------------------------------\n\nTITLE: Getting Field Names\nDESCRIPTION: Demonstrates retrieving the names of result fields\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM users;');\n\necho 'Field names: ' . implode(', ', $query->getFieldNames());\n```\n\n----------------------------------------\n\nTITLE: Loading Module Config Files\nDESCRIPTION: Example of loading configuration files from a module.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$config = new \\Acme\\Blog\\Config\\Blog();\n```\n\n----------------------------------------\n\nTITLE: Stripping Slashes from Arrays in PHP\nDESCRIPTION: Shows how to use strip_slashes() function to remove slashes from an array of strings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$array = [\n    'key1' => 'I\\'m John',\n    'key2' => 'I\\'m Kate'\n];\n\n$array = strip_slashes($array);\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 3.x Model Implementation\nDESCRIPTION: A sample CodeIgniter 3.x model showing the traditional CI_Model extension structure. This example demonstrates the old model pattern without namespaces.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_models.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Blog_model extends CI_Model\n{\n    public function get_last_ten_entries()\n    {\n        $query = $this->db->get('entries', 10);\n        return $query->result();\n    }\n\n    public function insert_entry($title, $content)\n    {\n        $this->db->set('title', $title);\n        $this->db->set('content', $content);\n        $this->db->set('date', time());\n\n        return $this->db->insert('entries');\n    }\n\n    public function update_entry($id, $title, $content)\n    {\n        $this->db->set('title', $title);\n        $this->db->set('content', $content);\n\n        $this->db->where('id', $id);\n\n        return $this->db->update('entries');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Database Configuration for Testing\nDESCRIPTION: Example configuration settings for test database connection in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_2\n\nLANGUAGE: ini\nCODE:\n```\ndatabase.tests.hostname = localhost\ndatabase.tests.database = ci4_test\ndatabase.tests.username = root\ndatabase.tests.password = root\ndatabase.tests.DBDriver = MySQLi\ndatabase.tests.DBPrefix = db_\ndatabase.default.port   = 3306\n```\n\n----------------------------------------\n\nTITLE: CLI New Line Output\nDESCRIPTION: Demonstrates adding a new line in CLI output.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_17\n\nLANGUAGE: php\nCODE:\n```\nCLI::newLine();\n```\n\n----------------------------------------\n\nTITLE: Running Benchmarks without Displaying Results in CodeIgniter 4\nDESCRIPTION: Shows how to run the Iterator's tasks without displaying the HTML results table by passing false as the second parameter to the run() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n// Run tasks but don't display the results\n$results = $iterator->run(100, false);\n```\n\n----------------------------------------\n\nTITLE: Redirect Exception with Custom Code\nDESCRIPTION: Example of throwing a RedirectException with a custom HTTP status code.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nthrow new RedirectException('users/login', 301);\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Link Elements\nDESCRIPTION: Creates multiple link elements with various attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\necho link_tag('favicon.ico', 'shortcut icon', 'image/ico');\necho link_tag('feed', 'alternate', 'application/rss+xml', 'My RSS Feed');\n```\n\n----------------------------------------\n\nTITLE: Loading Cookie Helper in CodeIgniter\nDESCRIPTION: Demonstrates how to load the Cookie Helper in a CodeIgniter application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/cookie_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('cookie');\n```\n\n----------------------------------------\n\nTITLE: Method Declaration with Arguments\nDESCRIPTION: Illustrates correct formatting for method declarations including visibility, return types, and argument formatting.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\npublic function functionName(\n    string $firstArgument,\n    ?int $secondArgument,\n    array &$thirdArgument,\n    ...$variadic\n): ReturnType\n{\n    // Method body\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Honeypot Container ID in PHP\nDESCRIPTION: Configuration for setting the Honeypot container ID when Content Security Policy (CSP) is enabled. This allows changing the default ID to avoid conflicts with existing view elements.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_430.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nConfig\\Honeypot::$containerId\n```\n\n----------------------------------------\n\nTITLE: Generating HTML Object Element in PHP\nDESCRIPTION: Example of creating HTML object elements with parameters using CodeIgniter's object() function. Shows how to include movie.swf with class attributes and nested param elements.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<object data=\"movie.swf\" class=\"test\"></object>\n\n<object data=\"movie.swf\" class=\"test\">\n  <param name=\"foo\" type=\"ref\" value=\"bar\" class=\"test\" />\n  <param name=\"hello\" type=\"ref\" value=\"world\" class=\"test\" />\n</object>\n```\n\n----------------------------------------\n\nTITLE: Re-throwing Exceptions in Catch Block\nDESCRIPTION: Demonstrates catching an exception, performing cleanup, then re-throwing the exception for the error handler.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\ntry {\n    $userModel->get(1);\n} catch (\\CodeIgniter\\Database\\Exceptions\\DataException $e) {\n    // do something here...\n\n    throw new \\RuntimeException($e->getMessage(), $e->getCode(), $e);\n}\n```\n\n----------------------------------------\n\nTITLE: Directory Mapping Including Hidden Files\nDESCRIPTION: Example of mapping a directory while including hidden files\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$map = directory_map('./mydirectory', false, true);\n```\n\n----------------------------------------\n\nTITLE: Initializing Database Forge in CodeIgniter 4\nDESCRIPTION: Shows how to load and initialize the Database Forge class with default and custom database groups.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/forge.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$forge = \\Config\\Database::forge();\n```\n\nLANGUAGE: php\nCODE:\n```\n$forge = \\Config\\Database::forge('other_db');\n```\n\n----------------------------------------\n\nTITLE: Apache URL Rewrite Rule Configuration\nDESCRIPTION: Apache .htaccess configuration to handle URL routing with query string parameter for cases where 'No input file specified' error occurs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/troubleshooting.rst#2025-04-16_snippet_1\n\nLANGUAGE: apache\nCODE:\n```\nRewriteRule ^([\\s\\S]*)$ index.php?/$1 [L,NC,QSA]\n```\n\n----------------------------------------\n\nTITLE: Installing CodeIgniter DevKit\nDESCRIPTION: Commands to install CodeIgniter DevKit, a tool that helps set up development tools for CodeIgniter 4 packages.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/composer_packages.rst#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncomposer config minimum-stability dev\ncomposer config prefer-stable true\ncomposer require --dev codeigniter4/devkit\n```\n\n----------------------------------------\n\nTITLE: Array After Stripping Slashes in PHP\nDESCRIPTION: Displays the resulting array after applying strip_slashes() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$array = [\n    'key1' => 'I'm John',\n    'key2' => 'I'm Kate'\n];\n```\n\n----------------------------------------\n\nTITLE: Accessing Negotiator via Request\nDESCRIPTION: Demonstrates accessing negotiation methods through the request's negotiate() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$request->negotiate('media', ['text/html', 'text/xml', 'text/json']);\n```\n\n----------------------------------------\n\nTITLE: MySQLi Unbuffered Results\nDESCRIPTION: Shows how to use MySQLi's unbuffered results for memory optimization\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$db->resultMode = MYSQLI_USE_RESULT;\n$query = $db->query(\"YOUR QUERY\");\n\nwhile ($row = $query->getUnbufferedRow()) {\n    echo $row->title;\n    echo $row->name;\n    echo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Date Helper in CodeIgniter 4\nDESCRIPTION: Code showing how to load the date helper in a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/date_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('date');\n```\n\n----------------------------------------\n\nTITLE: Using dataSeek()\nDESCRIPTION: Demonstrates using dataSeek() with unbuffered results\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT * FROM users;');\n\n$query->dataSeek(5); // Skip first 5 rows\n$row = $query->getUnbufferedRow();\n```\n\n----------------------------------------\n\nTITLE: Basic Exception Throwing in PHP\nDESCRIPTION: Demonstrates how to throw a basic exception in PHP that halts script execution and sends control to the error handler.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nthrow new \\Exception('Some error message');\n```\n\n----------------------------------------\n\nTITLE: Cloning a Forked Repository in Git\nDESCRIPTION: Commands to clone your forked repository to your local system. This allows you to work with the codebase locally.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n> cd ALL_PROJECTS\n> git clone ORIGIN_URL\n```\n\n----------------------------------------\n\nTITLE: Getting Ordinal Suffix for a Number in PHP\nDESCRIPTION: This example shows how to use the ordinal() function to get the ordinal suffix for a given number.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\necho ordinal(1);  // Prints 'st'\necho ordinal(21); // Prints 'st'\necho ordinal(2);  // Prints 'nd'\necho ordinal(3);  // Prints 'rd'\necho ordinal(4);  // Prints 'th'\necho ordinal(5);  // Prints 'th'\n```\n\n----------------------------------------\n\nTITLE: Strict Locale Negotiation\nDESCRIPTION: Demonstrates strict locale negotiation with regional language variants.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$supported = [\n    'de',\n    'en-US'\n];\n\n// Using the Negotiator class\n$negotiator->language($supported);\n\n// Using the Request class\n$request->negotiate('language', $supported);\n```\n\n----------------------------------------\n\nTITLE: Accessing Database Result ID in CodeIgniter 4\nDESCRIPTION: Demonstrates how to access the database result ID from within a result object. This ID is often needed for custom function calls that operate on query results.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('YOUR QUERY');\n$query->resultID;\n```\n\n----------------------------------------\n\nTITLE: Accessing Shared Model Instance\nDESCRIPTION: Demonstrates how Factories returns the same model instance when requested multiple times.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nFactories::models('UserModel');\n```\n\n----------------------------------------\n\nTITLE: Extending System Controller Directly\nDESCRIPTION: This code shows how to bypass BaseController and extend the system Controller directly. It's an alternative approach if BaseController is not needed for a specific controller.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/basecontroller.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Controller;\n\nclass Home extends Controller\n{\n    public function index()\n    {\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Route has Specific Filter\nDESCRIPTION: Shows how to assert that a route uses a specific filter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$this->assertFilter('admin', 'toolbar', 'before');\n```\n\n----------------------------------------\n\nTITLE: Setting Alternative Message in CodeIgniter4\nDESCRIPTION: Example of setting an alternative plain text message for HTML emails.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$email->setAltMessage('This is the plain text message body');\n```\n\n----------------------------------------\n\nTITLE: Referencing set_cookie() Function in PHP\nDESCRIPTION: This snippet references the set_cookie() function in PHP, which has had its default parameter values changed in this release. The default values for $secure and $httponly parameters are now null.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.7.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nset_cookie()\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP-CS-Fixer for CodeIgniter 4 Package\nDESCRIPTION: Shows how to modify the .php-cs-fixer.dist.php file to configure PHP-CS-Fixer for a CodeIgniter 4 package.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/composer_packages.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n--- a/.php-cs-fixer.dist.php\n+++ b/.php-cs-fixer.dist.php\n@@ -7,7 +7,7 @@ use PhpCsFixer\\Finder;\n $finder = Finder::create()\n     ->files()\n     ->in([\n-        __DIR__ . '/app/',\n+        __DIR__ . '/src/',\n         __DIR__ . '/tests/',\n     ])\n     ->exclude([\n```\n\n----------------------------------------\n\nTITLE: Testing Controllers with Custom Logger\nDESCRIPTION: Demonstrates how to provide a custom Logger instance for controller testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$logger = new \\CodeIgniter\\Log\\Handlers\\FileHandler();\n// Set the logger however you need...\n\n$results = $this->withLogger($logger)\n                ->controller(ForumController::class)\n                ->execute('index');\n```\n\n----------------------------------------\n\nTITLE: Setting Content-Type Header in React Axios Request\nDESCRIPTION: This snippet demonstrates how to set the Content-Type header for an Axios GET request in a React application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/ajax.rst#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\naxios.get(\"your url\", {headers: {'Content-Type': 'application/json'}})\n```\n\n----------------------------------------\n\nTITLE: Encoding PHP Tags Example\nDESCRIPTION: Shows usage of encode_php_tags() function to convert PHP tags to HTML entities for secure output.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/security_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$string = encode_php_tags($string);\n```\n\n----------------------------------------\n\nTITLE: Creating a Form with Localized URL in CodeIgniter 4\nDESCRIPTION: This example shows how to use form_open() with a {locale} placeholder to create a form that points to a localized URL based on the current request locale.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\necho form_open('{locale}/email/send');\n```\n\n----------------------------------------\n\nTITLE: Disabling Event Simulation\nDESCRIPTION: Shows how to disable event simulation and resume normal event handling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nEvents::simulate(false);\n```\n\n----------------------------------------\n\nTITLE: Getting Header Value as String in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to get the value of a header as a string using the getHeaderLine() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n$accepts = $request->getHeaderLine('accept');\n\n// Accept: text/html, text/plain, image/png\n```\n\n----------------------------------------\n\nTITLE: Reconstructing Path from Command Line Arguments in PHP\nDESCRIPTION: Shows how to use the getPath() method to get a reconstructed path as a string from the command line arguments.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_request.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$path = $request->getPath();\n```\n\n----------------------------------------\n\nTITLE: Using getResultArray() for Array Results\nDESCRIPTION: Example of using getResultArray() to get pure array results\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\nforeach ($query->getResultArray() as $row) {\n    echo $row['title'];\n    echo $row['name'];\n    echo $row['body'];\n}\n```\n\n----------------------------------------\n\nTITLE: Comparing Files in CodeIgniter 4\nDESCRIPTION: Demonstrates how to compare two files for equality\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\nif (same_file($file1, $file2)) {\n    echo 'Files are the same!';\n}\n```\n\n----------------------------------------\n\nTITLE: Alternative Custom Row Object\nDESCRIPTION: Shows an alternative way to get a custom row object\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\n$row = $query->getRow(0, 'User');\n```\n\n----------------------------------------\n\nTITLE: CLI Color Method Usage\nDESCRIPTION: Shows how to use color() method to create colored text fragments.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nCLI::write(CLI::color('fileA', 'yellow').\"\\t\".'/path/to/file');\n```\n\n----------------------------------------\n\nTITLE: Error Reporting Configuration\nDESCRIPTION: Configuration example showing how error reporting is handled in CI4's environment-specific boot files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4xx.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nerror_reporting()\n```\n\n----------------------------------------\n\nTITLE: Converting Underscores to Dashes in PHP\nDESCRIPTION: This snippet demonstrates the use of the dasherize() function to replace underscores with dashes in a string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\necho dasherize('hello_world'); // Prints 'hello-world'\n```\n\n----------------------------------------\n\nTITLE: CLI Prompt by Key with Named Keys\nDESCRIPTION: Demonstrates using named keys with promptByKey() for option selection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$color = CLI::promptByKey('Pick a color:', [\n    'r' => 'red',\n    'b' => 'blue',\n    'g' => 'green'\n]);\n```\n\n----------------------------------------\n\nTITLE: Specifying Controller Class for Testing\nDESCRIPTION: Shows how to specify the controller class to be tested using the controller() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$results = $this->controller(\\App\\Controllers\\ForumController::class)\n                ->execute('showCategories');\n```\n\n----------------------------------------\n\nTITLE: Encoding Encrypted Results\nDESCRIPTION: Shows how to encode encrypted data for storage or transmission.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$message = 'My secret message';\n$encrypter = \\Config\\Services::encrypter();\n$ciphertext = $encrypter->encrypt($message);\n$encoded = base64_encode($ciphertext);\n```\n\n----------------------------------------\n\nTITLE: Time Microseconds Comparison Example\nDESCRIPTION: Demonstrates how Time class now preserves microseconds and may affect comparisons\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_460.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\I18n\\Time;\n\n$time1 = Time::parse('2023-10-01 12:00:00.123456');\n$time2 = Time::parse('2023-10-01 12:00:00.123400');\n\n// Now returns false\nvar_dump($time1 == $time2);\n```\n\n----------------------------------------\n\nTITLE: Database Record Count Assertion Example\nDESCRIPTION: Demonstrates how to assert the number of matching records in the database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\npublic function testNumberUsers()\n{\n    $this->seeNumRecords(2, 'users', ['name' => 'Joe User']);\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Attachment CID in CodeIgniter4\nDESCRIPTION: Example of setting Content-ID for inline image attachments.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$filename = '/path/to/photo1.jpg';\n$email->attach($filename);\n$cid = $email->setAttachmentCID($filename);\n```\n\n----------------------------------------\n\nTITLE: Presenter Route with Limited Methods\nDESCRIPTION: Restricts generated presenter routes to specific methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$routes->presenter('photos', ['only' => ['index', 'show']]);\n```\n\n----------------------------------------\n\nTITLE: Variable Data Format for Debug Toolbar\nDESCRIPTION: Demonstrates the array structure for adding variable data to the Debug Toolbar's Vars tab.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/debugging.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n[\n    'section 1' => [\n        'foo' => 'bar',\n        'bar' => 'baz'\n    ],\n    'section 2' => [\n        'foo' => 'bar',\n        'bar' => 'baz'\n    ]\n]\n```\n\n----------------------------------------\n\nTITLE: Session Testing in CodeIgniter 4\nDESCRIPTION: Example of working with sessions in feature tests for CodeIgniter 4. This shows how to initialize the session with test data to simulate a user session for testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n// Set values in the session prior to a request\n$values = [\n    'logged_in' => 123,\n    'username'  => 'foo',\n];\n\n$result = $this->withSession($values)\n    ->get('admin');\n```\n\n----------------------------------------\n\nTITLE: Modifying CodeIgniter 4 public/.htaccess for Shared Hosting\nDESCRIPTION: Diff showing the removal of redirect settings from the public/.htaccess file when deploying to a shared hosting environment.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/deployment.rst#2025-04-16_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n--- a/public/.htaccess\n+++ b/public/.htaccess\n@@ -16,16 +16,6 @@ Options -Indexes\n     # http://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewritebase\n     # RewriteBase /\n \n-   # Redirect Trailing Slashes...\n-   RewriteCond %{REQUEST_FILENAME} !-d\n-   RewriteCond %{REQUEST_URI} (.+)/$\n-   RewriteRule ^ %1 [L,R=301]\n-\n-   # Rewrite \"www.example.com -> example.com\"\n-   RewriteCond %{HTTPS} !=on\n-   RewriteCond %{HTTP_HOST} ^www\\.(.+)$ [NC]\n-   RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]\n-\n     # Checks to see if the user is attempting to access a valid file,\n     # such as an image or css document, if this isn't true it sends the\n     # request to the front controller, index.php\n```\n\n----------------------------------------\n\nTITLE: Displaying View Routes in CLI Command Output\nDESCRIPTION: Example of how the 'spark routes' command now displays view routes in the Handler column.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.0.rst#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n+---------+-------------+------+------------------------------+----------------+---------------+\n| Method  | Route       | Name | Handler                      | Before Filters | After Filters |\n+---------+-------------+------+------------------------------+----------------+---------------+\n| GET     | about       | »    | (View) pages/about           |                | toolbar       |\n+---------+-------------+------+------------------------------+----------------+---------------+\n```\n\n----------------------------------------\n\nTITLE: PHP Requirements in ReStructuredText\nDESCRIPTION: Documentation section specifying required PHP version 8.1+ and mandatory PHP extensions (intl, mbstring, json) for CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/intro/requirements.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n***************************\nPHP and Required Extensions\n***************************\n\n`PHP <https://www.php.net/>`_ version 8.1 or newer is required, with the following PHP extensions are enabled:\n\n  - `intl <https://www.php.net/manual/en/intl.requirements.php>`_\n  - `mbstring <https://www.php.net/manual/en/mbstring.requirements.php>`_\n  - `json <https://www.php.net/manual/en/json.requirements.php>`_\n```\n\n----------------------------------------\n\nTITLE: Accessing Services in CodeIgniter 4\nDESCRIPTION: Demonstrates how to use the service() function to access shared instances of services in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$logger = service('logger');\n$renderer = service('renderer', APPPATH . 'views/');\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Headers in CodeIgniter 4 Feature Tests\nDESCRIPTION: Example showing how to configure request headers for feature tests in CodeIgniter 4. This demonstrates setting custom headers, including authentication tokens and content type specifications.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n// Add a single header\n$result = $this->withHeader('Authorization', 'token abc123')\n    ->get('users');\n\n// Add multiple headers\n$result = $this->withHeaders([\n    'Authorization' => 'token abc123',\n    'Content-type'  => 'application/json',\n])->get('users');\n```\n\n----------------------------------------\n\nTITLE: Checking for Query Errors in CodeIgniter 4\nDESCRIPTION: Demonstrates how to check if an error occurred during query execution using the hasError() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nif ($query->hasError()) {\n    echo 'An error occurred!';\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Full Header as String in CodeIgniter (PHP)\nDESCRIPTION: Shows how to get the full header, including name and values, as a string by casting the header object to a string.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n$accept = (string) $request->header('accept');\n\n// Accept: text/html, text/plain, image/png\n```\n\n----------------------------------------\n\nTITLE: Optimizing a Table in CodeIgniter 4\nDESCRIPTION: Shows how to optimize a specific table using the Database Utility Class. Returns a boolean indicating success or failure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/utilities.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nif ($util->optimizeTable('table_name'))\n{\n    echo 'Success!';\n}\n```\n\n----------------------------------------\n\nTITLE: Using Feature Response Assertions in CodeIgniter 4\nDESCRIPTION: Example showing various response assertions available for feature testing in CodeIgniter 4. This demonstrates how to validate different aspects of HTTP responses like status codes, headers, and content.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n// Check the Response was 200\n$result->assertOK();\n\n// Other Response assertion shortcuts\n$result->assertCreated();\n$result->assertNoContent();\n$result->assertRedirect();\n$result->assertRedirectTo('foo/bar');\n$result->assertSessionHas('foo');\n$result->assertHeader('Content-Type', 'text/html');\n$result->assertCookie('foo', 'bar');\n\n// JSON methods\n$result->assertJSON($data);\n$result->assertJSONFragment($data);\n$result->assertJSONExact($data);\n\n// DOM methods\n$result->assertSee('Hello World');\n$result->assertDontSee('Goodbye cruel world');\n$result->assertSeeElement('.notice');\n$result->assertDontSeeElement('.error');\n$result->assertSeeLink('Delete');\n$result->assertSeeInField('username', 'John Snow');\n```\n\n----------------------------------------\n\nTITLE: Getting Symbolic Permissions\nDESCRIPTION: Example of converting numeric permissions to symbolic notation\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\necho symbolic_permissions(fileperms('./myfile.txt'));\n```\n\n----------------------------------------\n\nTITLE: Converting Output Class Methods from CI3 to CI4\nDESCRIPTION: Demonstrates how to upgrade Output class code from CodeIgniter 3.x style to CodeIgniter 4.x style. Key changes include renaming methods from underscore style to camelCase and changing 'output' to 'response' property.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_responses.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// CodeIgniter Version 3.x\n$this->output->set_content_type('application/json');\n$this->output->set_output($json);\n$this->output->cache(60);\n$this->output->set_header('HTTP/1.0 200 OK');\n$this->output->set_status_header(200);\n$this->output->enable_profiler(TRUE);\n```\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// CodeIgniter Version 4.x\n$this->response->setContentType('application/json');\n$this->response->setBody($json);\n$this->response->setCache(['max-age' => 60]);\n$this->response->setHeader('HTTP/1.0 200 OK');\n$this->response->setStatusCode(200);\n$this->response->enableProfiler(true);\n```\n\n----------------------------------------\n\nTITLE: Loading and Using View Parser in CodeIgniter 3.x\nDESCRIPTION: Example showing how to load and use the Parser Library in CodeIgniter 3.x to parse a blog template with data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_view_parser.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Blog extends CI_Controller\n{\n    public function index()\n    {\n        $data = [\n            'blog_title' => 'My Blog Title',\n            'blog_heading' => 'My Blog Heading'\n        ];\n\n        $this->load->library('parser');\n        $this->parser->parse('blog_template', $data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Breaking Change: Updated FilterInterface Method Signature in PHP\nDESCRIPTION: Updated FilterInterface to include new $arguments parameter in after() and before() methods. This change requires all implementations of FilterInterface to be updated accordingly.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.0.4.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\ninterface FilterInterface {\n    public function before($arguments);\n    public function after($arguments);\n}\n```\n\n----------------------------------------\n\nTITLE: CLI Print with Status Update\nDESCRIPTION: Demonstrates using print() method for inline status updates.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nCLI::print('Copying file...');\nCLI::print('done');\n```\n\n----------------------------------------\n\nTITLE: Running PHPStan Analysis in CodeIgniter4\nDESCRIPTION: Command to run PHPStan static analysis check across the entire framework codebase using Composer.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ncomposer phpstan:check\n```\n\n----------------------------------------\n\nTITLE: Loading Typography Service in CodeIgniter 4\nDESCRIPTION: Shows how to load the Typography service using CodeIgniter's service container.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/typography.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$typography = \\Config\\Services::typography();\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter4 Security Configuration Reference\nDESCRIPTION: Reference to key CodeIgniter4 security configuration options and features mentioned in the documentation for implementing API security recommendations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/security.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nConfig\\App::$forceGlobalSecureRequests\n```\n\n----------------------------------------\n\nTITLE: Timeline Data Format for Debug Toolbar\nDESCRIPTION: Shows the required array structure for formatting timeline data in a Debug Toolbar collector.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/debugging.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n[\n    'name'      => 'Name',\n    'component' => 'Component',\n    'start'     => microtime(true),\n    'duration'  => number,\n]\n```\n\n----------------------------------------\n\nTITLE: Language File Structure in CodeIgniter 4.x\nDESCRIPTION: Example of a language file from CodeIgniter 4.x. This newer format returns an array directly with a named key structure, providing better organization and namespace support.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_localization.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\nreturn [\n    'errorEmailMissing'    => 'You must submit an email address',\n    'errorURLMissing'      => 'You must submit a URL',\n    'errorUsernameMissing' => 'You must submit a username',\n];\n```\n\n----------------------------------------\n\nTITLE: Deleting a Cookie with Advanced Parameters\nDESCRIPTION: Demonstrates deleting a cookie using an array of parameters or discrete parameters in CodeIgniter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/cookie_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\ndelete_cookie(['name' => 'name', 'domain' => '.domain.com', 'path' => '/', 'prefix' => 'prefix_']);\n\ndelete_cookie('name', '.domain.com', '/', 'prefix_');\n```\n\n----------------------------------------\n\nTITLE: Route Configuration in CodeIgniter 4\nDESCRIPTION: Shows how to comment out default route configuration in app/Config/Routes.php file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/controllers.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n// $routes->get('/', 'Home::index');\n```\n\n----------------------------------------\n\nTITLE: Excluding Live Tests\nDESCRIPTION: Command to run tests while excluding DatabaseLive and CacheLive groups.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_7\n\nLANGUAGE: console\nCODE:\n```\n./phpunit --exclude-group DatabaseLive,CacheLive\n```\n\n----------------------------------------\n\nTITLE: Updated BaseConnection Table Exists Method\nDESCRIPTION: Modified method signature of BaseConnection::tableExists() to include an optional cached parameter that controls whether to use cached data, defaulting to true.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.5.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nBaseConnection::tableExists($table, $cached = true)\n```\n\n----------------------------------------\n\nTITLE: Time Microseconds Handling Example\nDESCRIPTION: Shows how to handle microseconds in Time comparisons by removing them\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_460.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\I18n\\Time;\n\n$time1 = Time::parse('2023-10-01 12:00:00.123456')->setMicroseconds(0);\n$time2 = Time::parse('2023-10-01 12:00:00.123400')->setMicroseconds(0);\n\n// Now returns true\nvar_dump($time1 == $time2);\n```\n\n----------------------------------------\n\nTITLE: Loading XML Helper in CodeIgniter 4\nDESCRIPTION: This code snippet demonstrates how to load the XML Helper in a CodeIgniter 4 application. The helper provides functions for working with XML data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/xml_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nhelper('xml');\n```\n\n----------------------------------------\n\nTITLE: Accessing Config Using config() Helper\nDESCRIPTION: Demonstrates how to access configuration using CodeIgniter's config() helper function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$config = config('Config\\\\App');\n```\n\n----------------------------------------\n\nTITLE: Setting Default Route in CodeIgniter 4\nDESCRIPTION: The default route directive in CodeIgniter 4 that handles incoming requests without specified content, directing them to the Home controller's index() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$routes->get('/', 'Home::index');\n```\n\n----------------------------------------\n\nTITLE: Using anchor_popup() with Attributes\nDESCRIPTION: Demonstrates creating a popup window link with custom window attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\necho anchor_popup('news/local/123', 'Click Me!', [\n    'width'       => 800,\n    'height'      => 600,\n    'scrollbars'  => 'yes',\n    'status'      => 'yes',\n    'resizable'   => 'yes',\n    'screenx'     => 0,\n    'screeny'     => 0,\n    'window_name' => '_blank'\n]);\n```\n\n----------------------------------------\n\nTITLE: Listing Changed Project Files in CodeIgniter 4.2.10 Upgrade\nDESCRIPTION: This code block lists the project files that received changes in the upgrade from CodeIgniter 4.2.9 to 4.2.10. It notes that many changes may be simple comments or formatting without runtime effects.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4210.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n* composer.json\n```\n\n----------------------------------------\n\nTITLE: Stopping a Timer in CodeIgniter 4\nDESCRIPTION: Shows how to stop a previously started timer by referencing its name. The stop() method takes the name of the timer as its only parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$timer = new \\CodeIgniter\\Benchmark\\Timer();\n$timer->stop('render view');\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4 App Directory Structure\nDESCRIPTION: Shows the default directory structure within the app folder of a CodeIgniter 4 application. This structure contains key directories for configuration, controllers, database files, filters, helpers, language files, libraries, models, third-party code, and views.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/structure.rst#2025-04-16_snippet_0\n\nLANGUAGE: none\nCODE:\n```\napp/\n    Config/         Stores the configuration files\n    Controllers/    Controllers determine the program flow\n    Database/       Stores the database migrations and seeds files\n    Filters/        Stores filter classes that can run before and after controller\n    Helpers/        Helpers store collections of standalone functions\n    Language/       Multiple language support reads the language strings from here\n    Libraries/      Useful classes that don't fit in another category\n    Models/         Models work with the database to represent the business entities\n    ThirdParty/     ThirdParty libraries that can be used in application\n    Views/          Views make up the HTML that is displayed to the client\n```\n\n----------------------------------------\n\nTITLE: Guessing File Extension from MIME Type in CodeIgniter\nDESCRIPTION: Uses the guessExtension() method to determine the file extension based on the MIME type. Returns null if the MIME type is unknown.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->guessExtension();\n\n// 'jpg'\n```\n\n----------------------------------------\n\nTITLE: Freeing Result Set in PHP\nDESCRIPTION: This method frees the memory associated with the result set.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_32\n\nLANGUAGE: php\nCODE:\n```\nfreeResult()\n```\n\n----------------------------------------\n\nTITLE: Modified Validation::check() Method Signature in CodeIgniter 4\nDESCRIPTION: The Validation::check() method signature has been changed by removing the 'string' typehint from the $rule parameter. Classes extending Validation should remove this typehint to maintain compatibility with the Liskov Substitution Principle.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_440.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nValidation::check(/* ... */, $rule, /* ... */)\n```\n\n----------------------------------------\n\nTITLE: CLI Clear Screen\nDESCRIPTION: Shows how to clear the terminal screen.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_18\n\nLANGUAGE: php\nCODE:\n```\nCLI::clearScreen();\n```\n\n----------------------------------------\n\nTITLE: Excluding Composer Packages from Auto-discovery\nDESCRIPTION: Configuration to exclude specific Composer packages from the auto-discovery process.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/modules.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $composerPackages = [\n    'exclude' => [\n        'acme/blog',\n        'acme/other-package',\n    ],\n];\n```\n\n----------------------------------------\n\nTITLE: Removing ComposerScripts from composer.json in CodeIgniter 4\nDESCRIPTION: For manual installations using Composer, remove the 'CodeIgniter\\ComposerScripts::postUpdate' line from the 'post-update-cmd' script in composer.json. This change is necessary when upgrading to CodeIgniter 4.3.2.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_432.rst#2025-04-16_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    ...\n    \"scripts\": {\n        \"post-update-cmd\": [\n            \"CodeIgniter\\\\ComposerScripts::postUpdate\"  <-- Remove this line\n        ],\n        \"test\": \"phpunit\"\n    },\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Image Data URI with MIME Type\nDESCRIPTION: Generates a base64 encoded data URI with specific MIME type.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\necho img([     \n    'src' => img_data('/path/to/image.jpg', 'image/jpg'),\n    'alt' => 'Image converted to base64',\n]);\n```\n\n----------------------------------------\n\nTITLE: Using Specialized PHPUnit Assertions\nDESCRIPTION: Examples showing how to use dedicated PHPUnit assertions instead of general-purpose assertions with internal PHP functions, improving test readability and specificity.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n-$this->assertSame(true, is_cli());\n+$this->assertTrue(is_cli());\n\n-$this->assertTrue(array_key_exists('foo', $array));\n+$this->assertArrayHasKey('foo', $array);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Table Metadata in CodeIgniter 4\nDESCRIPTION: Displays table metadata including column types and maximum lengths using the --metadata option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/db_commands.rst#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nphp spark db:table my_table --metadata\n```\n\n----------------------------------------\n\nTITLE: Resulting Configuration Properties in PHP\nDESCRIPTION: Example showing the final configuration property values after registrar processing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$target   = 300;         // from RegionalSales\n$campaign = \"Winter Wonderland\";\n$region   = \"US\";\n```\n\n----------------------------------------\n\nTITLE: Humanizing a String with Custom Separator in PHP\nDESCRIPTION: This snippet shows how to use the humanize() function with a custom separator to convert a string to a human-readable format.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\necho humanize('my-dog-spot', '-'); // Prints 'My Dog Spot'\n```\n\n----------------------------------------\n\nTITLE: Moving Result Pointer in PHP\nDESCRIPTION: This method moves the internal results row pointer to a specified offset. It returns true on success and false on failure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_22\n\nLANGUAGE: php\nCODE:\n```\ndataSeek([$n = 0])\n```\n\n----------------------------------------\n\nTITLE: Updating Config\\Encryption Cipher Property\nDESCRIPTION: Addition of the missing cipher property in the Encryption configuration class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.3.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nConfig\\Encryption::$cipher\n```\n\n----------------------------------------\n\nTITLE: Regressing Migrations in CodeIgniter 4 PHP\nDESCRIPTION: This code snippet demonstrates how to use the regress method of the MigrationRunner class to roll back database changes to a previous state. It shows an example of reverting three batches back.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$migration = \\Config\\Services::migrations();\n\n$migration->regress(-3);\n```\n\n----------------------------------------\n\nTITLE: Sample composer.json for a CodeIgniter 4 Package\nDESCRIPTION: Provides an example of a composer.json file for a CodeIgniter 4 package, including package metadata, autoloading configuration, and dependency declarations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/composer_packages.rst#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"your-vendor/your-package\",\n    \"description\": \"Your package description\",\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"autoload\": {\n        \"psr-4\": {\n            \"YourVendor\\\\YourPackage\\\\\": \"src/\"\n        }\n    },\n    \"authors\": [\n        {\n            \"name\": \"Your Name\",\n            \"email\": \"yourname@example.com\"\n        }\n    ],\n    \"require\": {\n        // Any dependencies required by your package go here\n    },\n    \"require-dev\": {\n        // Any development dependencies (e.g., PHPUnit) go here\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering View Decorator in CodeIgniter Config\nDESCRIPTION: Example showing how to register a custom view decorator in the CodeIgniter view configuration file. Decorators are registered in an array and will be called in the specified order.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/view_decorators.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Config;\n\nuse CodeIgniter\\Config\\View as BaseView;\nuse App\\Views\\Decorators\\MyDecorator;\n\nclass View extends BaseView\n{\n    public $decorators = [\n        MyDecorator::class,\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Media Type Negotiation\nDESCRIPTION: Example of negotiating media types between client and server using the Negotiator class.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/content_negotiation.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$supported = [\n    'application/json',\n    'application/xml',\n    'text/xml'\n];\n\n// Using the Negotiator class\n$negotiator->media($supported);\n\n// Using the Request class\n$request->negotiate('media', $supported);\n```\n\n----------------------------------------\n\nTITLE: Generating Routes in CodeIgniter 4\nDESCRIPTION: Shows how to use the route_to() function to generate routes based on controller methods or named routes, including handling of parameters and locales.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/common_functions.rst#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n// Using a controller::method combination\n$route = route_to('Home::index');\n\n// With named routes\n$route = route_to('login');\n$route = route_to('profile', 1, 'tab-1');\n\n// Using named routes with {locale}\n$route = route_to('product', 123, 'en'); // Forces use of english\n$route = route_to('product', 123); // Uses default locale\n```\n\n----------------------------------------\n\nTITLE: Resource Route with Custom Controller\nDESCRIPTION: Specifies a custom controller for handling resource routes using the controller option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos', ['controller' => 'App\\Controllers\\Photos']);\n```\n\n----------------------------------------\n\nTITLE: Enabling Event Simulation\nDESCRIPTION: Shows how to enable event simulation for testing purposes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/events.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nEvents::simulate(true);\n```\n\n----------------------------------------\n\nTITLE: Fixing Incorrect Type in BaseBuilder::$tableName\nDESCRIPTION: Fixes an incorrect type in the BaseBuilder class for the $tableName property. This change may break existing code that relies on the incorrect type.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nfix: Incorrect type `BaseBuilder::$tableName`\n```\n\n----------------------------------------\n\nTITLE: Getting File Size in Different Units with CodeIgniter (Deprecated)\nDESCRIPTION: Demonstrates the deprecated getSizeByUnit() method to get file size in different units like kilobytes (kb) or megabytes (mb).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/files.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$file = new \\CodeIgniter\\Files\\File($path);\n\necho $file->getSizeByUnit('kb');      // 0.111\necho $file->getSizeByUnit('mb');      // 0.000108\n```\n\n----------------------------------------\n\nTITLE: Unbuffered Row as Array\nDESCRIPTION: Example of getting unbuffered rows as arrays\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\nwhile ($row = $query->getUnbufferedRow('array')) {\n    echo $row['title'];\n    echo $row['name'];\n    echo $row['body'];\n}\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Tests with Composer in CodeIgniter 4\nDESCRIPTION: Command to run PHPUnit tests using Composer in the CodeIgniter 4 framework. This is the recommended way to run tests from the command line.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer test\n```\n\n----------------------------------------\n\nTITLE: CI3 Compatibility Configuration in CodeIgniter 4\nDESCRIPTION: Configuration settings to maintain compatibility with CodeIgniter 3 encrypted data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/encryption.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$config = new \\Config\\Encryption();\n$config->driver = 'OpenSSL';\n$config->cipher = 'AES-128-CBC';\n$config->key = hex2bin('64c70b0b8206de9e'). hex2bin('dd3da7ed1c93ebf2');\n$config->rawData = false;\n```\n\n----------------------------------------\n\nTITLE: Creating Video Elements\nDESCRIPTION: Creates HTML video elements with various configurations including tracks and multiple sources.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\necho video('test.mp4', 'Your browser does not support the video tag.');\n\necho video(\n    'http://www.codeigniter.com/test.mp4',\n    'Your browser does not support the video tag.',\n    'controls',\n    [\n        track('subtitles_no.vtt', 'subtitles', 'no', 'Norwegian No'),\n        track('subtitles_yes.vtt', 'subtitles', 'yes', 'Norwegian Yes')\n    ]\n);\n\n$video = [\n    source('movie.mp4', 'video/mp4', 'class=\"test\"'),\n    source('movie.ogg', 'video/ogg'),\n    source('movie.mov', 'video/quicktime'),\n    source('movie.ogv', 'video/ogv; codecs=dirac, speex')\n];\n$tracks = [\n    track('subtitles_no.vtt', 'subtitles', 'no', 'Norwegian No'),\n    track('subtitles_yes.vtt', 'subtitles', 'yes', 'Norwegian Yes')\n];\n\necho video($video, 'Your browser does not support the video tag.', 'class=\"test\" controls', $tracks);\n```\n\n----------------------------------------\n\nTITLE: Testing Filters in CodeIgniter 4\nDESCRIPTION: Example of bypassing filters during testing in CodeIgniter 4. This shows how to skip specific filters to isolate the functionality being tested.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n// Skip specific filters during a test\n$result = $this->skipFilters('honeypot')\n    ->post('users', $data);\n```\n\n----------------------------------------\n\nTITLE: Resetting Services Cache in CodeIgniter 4 PHP\nDESCRIPTION: Added a new method BaseService::resetServicesCache() to reset the services cache, allowing for more control over service instantiation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nBaseService::resetServicesCache()\n```\n\n----------------------------------------\n\nTITLE: Migration Example in CodeIgniter 3.x\nDESCRIPTION: Sample migration file from CodeIgniter 3.x that demonstrates the old format with sequential naming and CI_Migration extension. This shows the structure that needs to be updated.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_migrations.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Migration_Create_blog extends CI_Migration {\n\n    public function up()\n    {\n        $this->dbforge->add_field([\n            'blog_id' => [\n                'type'           => 'INT',\n                'constraint'     => 5,\n                'unsigned'       => true,\n                'auto_increment' => true,\n            ],\n            'blog_title' => [\n                'type'       => 'VARCHAR',\n                'constraint' => '100',\n            ],\n            'blog_description' => [\n                'type' => 'TEXT',\n                'null' => true,\n            ],\n        ]);\n        $this->dbforge->add_key('blog_id', true);\n        $this->dbforge->create_table('blog');\n    }\n\n    public function down()\n    {\n        $this->dbforge->drop_table('blog');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Control Structure Implementation\nDESCRIPTION: Demonstrates proper formatting for control structures including spacing and bracing rules.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nif ($expr1\n    && $expr2\n    && $expr3\n) {\n    // if body\n} elseif ($expr4) {\n    // elseif body\n} else {\n    // else body\n}\n```\n\n----------------------------------------\n\nTITLE: Legacy Autoloader Removal in PHP\nDESCRIPTION: Breaking change notification regarding the removal of Autoloader::loadLegacy() method in CodeIgniter 4.1.0. This method was initially provided for transition support from earlier versions but has been deprecated, requiring all classes to be properly namespaced.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_410.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nAutoloader::loadLegacy()\n```\n\n----------------------------------------\n\nTITLE: Test Class After Migration Example - PHP\nDESCRIPTION: Example of a test class updated to use the new DatabaseTestTrait approach introduced in CodeIgniter 4.1.2.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_412.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\n\nclass MyDatabaseTest extends CIUnitTestCase\n{\n    use DatabaseTestTrait;\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Security Helper in CodeIgniter 4\nDESCRIPTION: Shows how to load the Security Helper in a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/security_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('security');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Names in PHP\nDESCRIPTION: This method returns an array containing the field names in the result set.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_29\n\nLANGUAGE: php\nCODE:\n```\ngetFieldNames()\n```\n\n----------------------------------------\n\nTITLE: Referencing Time::__toString() Method in CodeIgniter\nDESCRIPTION: This snippet references the __toString() method of the Time class, which has been modified to return database-compatible strings in a locale-independent format.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.7.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nTime::__toString()\n```\n\n----------------------------------------\n\nTITLE: Accessing Specific Command Line Option in PHP\nDESCRIPTION: Demonstrates how to use the getOption() method to retrieve the value of a specific command line argument considered as an option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_request.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$option = $request->getOption('foo');\n```\n\n----------------------------------------\n\nTITLE: Defining Database Documentation Structure in ReStructuredText\nDESCRIPTION: ReStructuredText table of contents structure defining the organization of CodeIgniter4's database documentation sections, including configuration, queries, transactions, and utilities.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n    :titlesonly:\n\n    Quick Start: Usage Examples <examples>\n    Database Configuration <configuration>\n    Connecting to a Database <connecting>\n    Running Queries <queries>\n    Generating Query Results <results>\n    Query Helper Methods <helpers>\n    Query Builder Class <query_builder>\n    Transactions <transactions>\n    Getting Metadata <metadata>\n    Custom Function Calls <call_function>\n    Database Events <events>\n    Database Utilities <utilities>\n```\n\n----------------------------------------\n\nTITLE: Clearing Content Security Policy Directives\nDESCRIPTION: Method to remove specific CSP directives that were previously set. This allows for modifying the policy at runtime by removing unwanted directives.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/csp.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// Clears the directive for a Content Security Policy\n$this->response->getCSP()->clearDirective('img-src'); // Single directive\n\n// ...or clear multiple directives\n$this->response->getCSP()->clearDirective(['img-src', 'object-src']);\n```\n\n----------------------------------------\n\nTITLE: Apache URL Rewrite Configuration for CodeIgniter\nDESCRIPTION: Apache .htaccess configuration to remove index.php from URLs using mod_rewrite. Redirects all requests except existing files and directories to index.php.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/urls.rst#2025-04-16_snippet_0\n\nLANGUAGE: apache\nCODE:\n```\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ index.php/$1 [L]\n```\n\n----------------------------------------\n\nTITLE: Checking Request Types in CodeIgniter (PHP)\nDESCRIPTION: Demonstrates how to check if a request is an AJAX request or a CLI request using the IncomingRequest methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/incomingrequest.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nif ($this->request->isAJAX()) {\n    // .\n}\n\nif ($this->request->isCLI()) {\n    // .\n}\n```\n\n----------------------------------------\n\nTITLE: ResourcePresenter Implementation\nDESCRIPTION: Example of a ResourcePresenter class implementing view presentation methods for a Photos resource.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\RESTful\\ResourcePresenter;\n\nclass Photos extends ResourcePresenter\n{\n    protected $modelName = 'App\\Models\\Photos';\n\n    public function index()\n    {\n        return view('photos/index');\n    }\n\n    // ... other methods\n}\n```\n\n----------------------------------------\n\nTITLE: Removing HTTP Headers in PHP\nDESCRIPTION: Example of removing a header from the message.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$message->removeHeader('Host');\n```\n\n----------------------------------------\n\nTITLE: Defining Version and Table of Contents in reStructuredText\nDESCRIPTION: This snippet sets up the document title with a version placeholder and creates a table of contents for the release notes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/next-changelog-minor.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n#################\nVersion {version}\n#################\n\nRelease Date: Unreleased\n\n**{version} release of CodeIgniter4**\n\n.. contents::\n    :local:\n    :depth: 3\n```\n\n----------------------------------------\n\nTITLE: Modified Project Files List\nDESCRIPTION: List of project files that require updates during the upgrade process, including configuration and error view files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_443.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n- app/Config/Boot/development.php\n- app/Config/Boot/production.php\n- app/Config/Boot/testing.php\n- app/Config/Filters.php\n- app/Views/errors/html/error_404.php\n- app/Views/errors/html/error_exception.php\n```\n\n----------------------------------------\n\nTITLE: Resource Route with Web-safe Options\nDESCRIPTION: Defines resource routes with HTML form compatibility for update and delete methods using the websafe option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos', ['websafe' => 1]);\n```\n\n----------------------------------------\n\nTITLE: Fixing Return Type in Database\\SQLSRV\\PreparedQuery::_getResult() Method (PHP)\nDESCRIPTION: Bug fix for CodeIgniter\\Database\\SQLSRV\\PreparedQuery::_getResult() to return the correct resource instead of a boolean value.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.8.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Database\\SQLSRV\\PreparedQuery::_getResult()\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Unordered List\nDESCRIPTION: Creates an unordered HTML list from a simple array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\n$list = [\n    'red',\n    'blue',\n    'green',\n    'yellow'\n];\n\n$attributes = [\n    'class' => 'boldlist',\n    'id'    => 'mylist'\n];\n\necho ul($list, $attributes);\n```\n\n----------------------------------------\n\nTITLE: Committing Changes with GPG Signing\nDESCRIPTION: Commands to add and commit changes with GPG signing for security verification. This ensures your contributions are authenticated.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n> git add .\n> git commit -S -m \"Fix the broken reference problem\"\n```\n\n----------------------------------------\n\nTITLE: Logger Threshold Configuration\nDESCRIPTION: Configuration of logger threshold levels for deprecation warnings.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\npublic array $threshold = [\n    'critical',\n    'error',\n    'warning',\n    'notice',\n];\n```\n\n----------------------------------------\n\nTITLE: Creating a Counted Phrase in PHP\nDESCRIPTION: This snippet shows how to use the counted() function to create a phrase with a word and its count.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\necho counted(3, 'dog'); // Prints '3 dogs'\necho counted(1, 'dog'); // Prints '1 dog'\n```\n\n----------------------------------------\n\nTITLE: Marking New Features in Documentation with reStructuredText\nDESCRIPTION: Shows how to indicate when a feature was added to the framework, helping users understand version compatibility.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_8\n\nLANGUAGE: rst\nCODE:\n```\n.. versionadded:: 4.3.0\n```\n\n----------------------------------------\n\nTITLE: Using random_string() with 'crypto' Parameter in PHP\nDESCRIPTION: When using the random_string() function with the 'crypto' parameter, the length must now be an even number. If an odd number is provided, an InvalidArgumentException will be thrown.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_422.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nrandom_string('crypto', $len)\n```\n\n----------------------------------------\n\nTITLE: Using Feature Testing in CodeIgniter 4\nDESCRIPTION: Example of a feature test in CodeIgniter 4 that simulates HTTP requests to test controller behavior. This uses the FeatureTestTrait to mock requests and assertions for response status and body content.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Tests\\Feature;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\FeatureTestTrait;\n\nclass HomeTest extends CIUnitTestCase\n{\n    use FeatureTestTrait;\n\n    public function testShowHome()\n    {\n        $result = $this->call('get', '/home');\n        $result->assertOK();\n        $result->assertSee('Hello');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Header Values in PHP\nDESCRIPTION: Example of filtering header values using a filter parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$message->header('Accept-Language', FILTER_SANITIZE_STRING);\n```\n\n----------------------------------------\n\nTITLE: Fixing IncomingRequest::getPostGet() and getGetPost() Methods (PHP)\nDESCRIPTION: Bug fix for CodeIgniter\\HTTP\\IncomingRequest::getPostGet() and CodeIgniter\\HTTP\\IncomingRequest::getGetPost() methods to correctly return values from the other stream when index is set to null.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.8.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\HTTP\\IncomingRequest::getPostGet()\nCodeIgniter\\HTTP\\IncomingRequest::getGetPost()\n```\n\n----------------------------------------\n\nTITLE: Response Headers Output Example - Plain Text\nDESCRIPTION: Shows the output format of response headers in the new implementation, demonstrating how duplicate headers are handled.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nCache-Control: no-store, no-cache, must-revalidate\nPragma: no-cache\nExpires: Sun, 17 Nov 2024 14:17:37 GMT\n```\n\n----------------------------------------\n\nTITLE: Word Wrapping Text using CodeIgniter 4 Text Helper in PHP\nDESCRIPTION: Shows how to use the word_wrap function to wrap text at a specified character count while maintaining complete words. The function takes the input string and an optional character limit (default is 76).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n$string = \"Here is a simple string of text that will help us demonstrate this function.\";\n$newstring = word_wrap($string, 25);\necho $newstring;\n```\n\n----------------------------------------\n\nTITLE: Calling MySQL List Tables Function with Parameters in CodeIgniter 4\nDESCRIPTION: Shows how to call the mysql_list_tables() function using $db->callFunction() and pass additional parameters. The second parameter of callFunction() is used to provide any required arguments for the database function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/call_function.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$db->callFunction('list_tables', array('table_name'));\n```\n\n----------------------------------------\n\nTITLE: Running All PHPUnit Tests Directly in CodeIgniter 4\nDESCRIPTION: Direct command to run all PHPUnit tests in the CodeIgniter 4 framework without using Composer. This executes phpunit in the vendor folder.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nvendor/bin/phpunit\n```\n\n----------------------------------------\n\nTITLE: Setting Valid Locales in PHP\nDESCRIPTION: Method to set valid locales in the IncomingRequest class of CodeIgniter 4\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.0.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nIncomingRequest::setValidLocales()\n```\n\n----------------------------------------\n\nTITLE: Basic Number to Amount Conversion\nDESCRIPTION: Examples of converting numbers to human-readable amounts with word representation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/number_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\necho number_to_amount(123456); // Returns 123.46 thousand\necho number_to_amount(123456789); // Returns 123.46 million\necho number_to_amount(123456789123); // Returns 123.46 billion\necho number_to_amount(123456789123456); // Returns 123.46 trillion\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Configuration in CodeIgniter 3\nDESCRIPTION: Example of a custom configuration file in CodeIgniter 3, defining site-specific settings as an array.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_configuration.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$config['site_name'] = 'My Great Site';\n$config['theme'] = 'default';\n$config['timezone'] = 'America/Chicago';\n$config['currency_symbol'] = '$';\n$config['currency_code'] = 'USD';\n$config['language'] = 'english';\n```\n\n----------------------------------------\n\nTITLE: Adding Throttle Filter Alias in CodeIgniter 4 Config\nDESCRIPTION: This snippet shows how to add an alias for the Throttle filter in the CodeIgniter 4 filters configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/throttler.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $aliases = [\n    // ...\n    'throttle' => \\App\\Filters\\Throttle::class,\n];\n```\n\n----------------------------------------\n\nTITLE: Running All Tests (Windows)\nDESCRIPTION: Command to execute the entire test suite on Windows systems.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nvendor\\bin\\phpunit\n```\n\n----------------------------------------\n\nTITLE: Loading HTML Helper in CodeIgniter 4\nDESCRIPTION: Code to load the HTML helper functions into a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nhelper('html');\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for Database Management in ReStructuredText\nDESCRIPTION: This snippet defines a table of contents for the database management section of CodeIgniter 4 documentation using ReStructuredText syntax. It includes links to various database-related topics.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n    :titlesonly:\n\n    Database Forge <forge>\n    Database Migrations <migration>\n    Database Seeding <seeds>\n    db_commands\n```\n\n----------------------------------------\n\nTITLE: Reverting to Stable CodeIgniter 4 Release\nDESCRIPTION: Use this command to revert your project back to the stable release of CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_composer.rst#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nphp builds release\n```\n\n----------------------------------------\n\nTITLE: Creating Header Template in CodeIgniter 4\nDESCRIPTION: HTML template for the header section of static pages. Includes the basic HTML structure and outputs the page title using the esc() function for XSS protection.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<!doctype html>\n<html>\n<head>\n    <title>CodeIgniter Tutorial</title>\n</head>\n<body>\n\n    <h1><?= esc($title) ?></h1>\n```\n\n----------------------------------------\n\nTITLE: Modified URI Protocol Configuration\nDESCRIPTION: Modified URI protocol configuration to force addition of question mark in URLs for servers with limited REQUEST_URI support.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/troubleshooting.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\npublic $uriProtocol = 'QUERY_STRING';\n```\n\n----------------------------------------\n\nTITLE: PHP Helper Function Reference\nDESCRIPTION: Reference to the new model() helper function introduced in CodeIgniter 4.0.0 for creating singleton Models.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.0.0.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nphp:func:`model()`\n```\n\n----------------------------------------\n\nTITLE: Converting ASCII to HTML Entities in PHP\nDESCRIPTION: Illustrates the use of ascii_to_entities() function to convert ASCII values to character entities for consistent display across browsers.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n$string = ascii_to_entities($string);\n```\n\n----------------------------------------\n\nTITLE: Executing Composer Update and File Copy Commands\nDESCRIPTION: Console commands for updating CodeIgniter via Composer and copying required framework files to the project directory.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_450.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer update\ncp vendor/codeigniter4/framework/public/index.php public/index.php\ncp vendor/codeigniter4/framework/spark spark\n```\n\n----------------------------------------\n\nTITLE: Cloning CodeIgniter4 Repository\nDESCRIPTION: Git command to clone a forked CodeIgniter4 repository to local environment.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngit clone git@github.com:<your-name>/CodeIgniter4.git\n```\n\n----------------------------------------\n\nTITLE: Referencing Group Route Filters in CodeIgniter4\nDESCRIPTION: Code demonstration of the bug fix where filters passed to $routes->group() were not being properly merged with inner route filters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.4.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$routes->group()\n```\n\n----------------------------------------\n\nTITLE: Defining a Route for Blog Controller in CodeIgniter 4\nDESCRIPTION: Sets up a route to the Blog controller's index method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$routes->get('blog', 'Blog::index');\n```\n\n----------------------------------------\n\nTITLE: Getting Elapsed Time for a Specific Timer in CodeIgniter 4\nDESCRIPTION: Demonstrates how to retrieve the duration of a specific timer using the getElapsedTime() method. The method accepts the timer name and optionally the number of decimal places to display.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/benchmark.rst#2025-04-16_snippet_8\n\nLANGUAGE: php\nCODE:\n```\necho $timer->getElapsedTime('render view');\n\n// With 6 decimal places\necho $timer->getElapsedTime('render view', 6);\n```\n\n----------------------------------------\n\nTITLE: Traditional Validation Rule Method Signature Change in PHP\nDESCRIPTION: Example showing the change in method signature for Traditional Validation rules to support strict types declaration. The parameter type hint ?string for validation value has been removed.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.0.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nBefore: public function integer(?string $str = null): bool\nAfter:  public function integer($str = null): bool\n```\n\n----------------------------------------\n\nTITLE: Accessing CodeIgniter Context in PHP\nDESCRIPTION: Illustrates the change from using the SPARKED constant to accessing the $context property in the CodeIgniter class. This change is part of the deprecations in the CodeIgniter 4 framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.0.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\CodeIgniter::$context\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Headers with Same Name in PHP\nDESCRIPTION: Demonstrates adding multiple headers with the same name.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$collection->addHeader('Link', '<http://foo.com>; rel=\"next\"');\n$collection->addHeader('Link', '<http://bar.com>; rel=\"prev\"');\n```\n\n----------------------------------------\n\nTITLE: Accessing Routes Configuration Path in CodeIgniter 4\nDESCRIPTION: File path reference for the main routes configuration file in CodeIgniter 4 framework\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.0.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\napp/Config/Routes.php\n```\n\n----------------------------------------\n\nTITLE: Handling Array Configuration in PHP\nDESCRIPTION: Example showing how array config property would be set from environment variables in PHP configuration file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/configuration.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$address = [\n    'city'    => \"Berlin\",   // from Config\\SimpleConfig.address.city\n    'country' => \"Germany\", // from Config\\SimpleConfig.address.country\n    'street'  => 'Unknown',  // not changed\n];\n```\n\n----------------------------------------\n\nTITLE: Modifying Column with NULL Constraint in CodeIgniter 4 Database Forge\nDESCRIPTION: Example of using Forge::modifyColumn() to set the desired NULL constraint in CodeIgniter 4. This change is necessary due to a bug fix that may have altered NULL constraints in previous versions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_434.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$forge->modifyColumn('table_name', [\n    'column_name' => [\n        'type' => 'INT',\n        'constraint' => 11,\n        'null' => true, // or false\n    ],\n]);\n```\n\n----------------------------------------\n\nTITLE: HTML Table Usage in CodeIgniter 4.x\nDESCRIPTION: Shows the updated approach for using HTML Tables in CodeIgniter 4.x. It demonstrates the new way of loading the Table class, setting headings, adding rows, and generating the table.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_html_tables.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$table = new \\CodeIgniter\\View\\Table();\n\n$table->setHeading('Name', 'Color', 'Size');\n\n$table->addRow('Fred', 'Blue', 'Small');\n$table->addRow('Mary', 'Red', 'Large');\n$table->addRow('John', 'Green', 'Medium');\n\necho $table->generate();\n```\n\n----------------------------------------\n\nTITLE: Configuring Template Location in Generators.php\nDESCRIPTION: Demonstrates how to define the template location for a custom generator command 'make:awesome-command' in the Generators configuration file. The template path is specified relative to the app directory.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_generators.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseConfig;\n\nclass Generators extends BaseConfig\n{\n    public $views = [\n        'make:awesome-command' => 'Commands/Generators/Views/awesomecommand.tpl.php',\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Running All Tests (Unix)\nDESCRIPTION: Command to execute the entire test suite on Unix-based systems.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n./phpunit\n```\n\n----------------------------------------\n\nTITLE: Adding Routes with add Method in PHP\nDESCRIPTION: Example showing the $routes->add() method, which previously had a bug where adding a route would make other methods in the same controller inaccessible from the web browser. This issue has been fixed in 4.3.7.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.7.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$routes->add()\n```\n\n----------------------------------------\n\nTITLE: Converting a Number to its Ordinal Form in PHP\nDESCRIPTION: This snippet illustrates how to use the ordinalize() function to convert a number into its ordinal string representation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\necho ordinalize(1);  // Prints '1st'\necho ordinalize(21); // Prints '21st'\necho ordinalize(2);  // Prints '2nd'\necho ordinalize(3);  // Prints '3rd'\necho ordinalize(4);  // Prints '4th'\necho ordinalize(5);  // Prints '5th'\n```\n\n----------------------------------------\n\nTITLE: Custom Debug Toolbar Collector Class Structure\nDESCRIPTION: Example structure of a custom collector class for the Debug Toolbar showing required properties and class extension.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/debugging.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nclass MyCollector extends BaseCollector\n{\n    protected $hasTimeline = false;\n    protected $hasTabContent = false;\n    protected $hasVarData = false;\n    protected $title = '';\n}\n```\n\n----------------------------------------\n\nTITLE: Original URI Protocol Configuration\nDESCRIPTION: Default URI protocol configuration in CodeIgniter's App.php config file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/troubleshooting.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $uriProtocol = 'REQUEST_URI';\n```\n\n----------------------------------------\n\nTITLE: GPG-Signing the Latest Commit\nDESCRIPTION: Commands to amend the latest commit with GPG signature if you forgot to sign it initially.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n> git switch your-branch\n> git commit --amend --no-edit --no-verify -S\n> git push --force-with-lease origin your-branch\n```\n\n----------------------------------------\n\nTITLE: Adding URI Security Configuration in PHP\nDESCRIPTION: Configuration addition to App.php file to enable URI security checking for permitted characters, similar to CodeIgniter 3's URI Security feature.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_447.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\npublic string $permittedURIChars = 'a-z 0-9~%.:_\\-';\n```\n\n----------------------------------------\n\nTITLE: Fixing Bind Cleaning in Database\\Postgre::replace() Method (PHP)\nDESCRIPTION: Bug fix to ensure binds are properly cleaned when calling CodeIgniter\\Database\\Postgre::replace() multiple times in the same context.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.8.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Database\\Postgre::replace()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Field Metadata in PHP\nDESCRIPTION: This method generates an array of stdClass objects containing field meta-data from the result set.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_30\n\nLANGUAGE: php\nCODE:\n```\ngetFieldData()\n```\n\n----------------------------------------\n\nTITLE: Using AutoRouter Constructor with Changed Parameter in PHP\nDESCRIPTION: Example of the AutoRouter constructor with its modified first parameter, changed from $protectedControllers to $cliRoutes in the 4.3.7 release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.7.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nAutoRouter::__construct()\n```\n\n----------------------------------------\n\nTITLE: Apache Alias Configuration\nDESCRIPTION: Apache configuration for serving CodeIgniter application from a subfolder.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_6\n\nLANGUAGE: apache\nCODE:\n```\nAlias /myproject /opt/lamp/apache2/myproject/public\n<Directory \"/opt/lamp/apache2/myproject/public\">\n    AllowOverride All\n    Require all granted\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: CLI Text Wrap with Width\nDESCRIPTION: Demonstrates text wrapping with specified maximum width.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\nCLI::wrap($text, 20);\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Filters and Classname Filter for Routes\nDESCRIPTION: CodeIgniter 4.1.5 adds support for applying multiple filters to a single route and using class names as filters. This feature provides more granular control over request processing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.1.5.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$routes->add('admin', 'AdminController::index', ['filter' => ['auth', 'admin']]);\n$routes->add('api', 'ApiController::index', ['filter' => 'Api\\AuthFilter']);\n```\n\n----------------------------------------\n\nTITLE: HTML Input Form Example - CodeIgniter4 PHP\nDESCRIPTION: Example of HTML form inputs that were affected by validation changes in v4.1.6. Shows the structure of array-based input names.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_416.rst#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type='text' name='invoice_rule[1]'>\n<input type='text' name='invoice_rule[2]'>\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Repository with Upstream Branch\nDESCRIPTION: Commands to synchronize local repository with the upstream develop branch and push changes to origin.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n> git fetch upstream\n> git switch develop\n> git merge upstream/develop\n> git push origin develop\n```\n\n----------------------------------------\n\nTITLE: Using number_to_amount Helper Function in PHP\nDESCRIPTION: Reference to the number_to_amount() helper function which now correctly returns \"1 thousand\" when the input is exactly 1000, fixing previous behavior where it returned \"1000\".\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.7.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nnumber_to_amount()\n```\n\n----------------------------------------\n\nTITLE: Loading Model without Namespace\nDESCRIPTION: Example of loading a UserModel class without specifying the full namespace. Factories will search in the App\\Models namespace first.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nFactories::models('UserModel');\n```\n\n----------------------------------------\n\nTITLE: Getting Message Body in PHP\nDESCRIPTION: Example of retrieving the current message body using the getBody() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/message.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$message->getBody()\n```\n\n----------------------------------------\n\nTITLE: Converting a Singular Word to Plural in PHP\nDESCRIPTION: This example demonstrates the use of the plural() function to convert a singular word to its plural form.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\necho plural('dog'); // Prints 'dogs'\necho plural('cat'); // Prints 'cats'\n```\n\n----------------------------------------\n\nTITLE: Supported Databases in ReStructuredText\nDESCRIPTION: Documentation section detailing supported database systems and their required versions, including MySQL, PostgreSQL, SQLite3, MS SQL Server, and Oracle.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/intro/requirements.rst#2025-04-16_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\n*******************\nSupported Databases\n*******************\n\nCurrently supported databases are:\n\n  - MySQL via the ``MySQLi`` driver (version 5.1 and above only)\n  - PostgreSQL via the ``Postgre`` driver (version 7.4 and above only)\n  - SQLite3 via the ``SQLite3`` driver\n  - Microsoft SQL Server via the ``SQLSRV`` driver (version 2012 and above only)\n  - Oracle Database via the ``OCI8`` driver (version 12.1 and above only)\n```\n\n----------------------------------------\n\nTITLE: Creating Symbolic Link for PHPUnit\nDESCRIPTION: Command for macOS/Linux to create a symbolic link for easier test execution.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nln -s ./vendor/bin/phpunit ./phpunit\n```\n\n----------------------------------------\n\nTITLE: Method Change - Validation check() Method\nDESCRIPTION: Updates to Validation::check() method signature changing the second parameter type from string to mixed and adding optional database group parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.6.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\ncheck($rules, $dbGroup = null)\n```\n\n----------------------------------------\n\nTITLE: Using redirect with status code in CodeIgniter 4\nDESCRIPTION: Example of using redirect() function with a specific status code in CodeIgniter 4. The status code specified will now be preserved in the response.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.4.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nredirect($uri, 'refresh', 302);\n```\n\n----------------------------------------\n\nTITLE: Referencing Shop Page View File Path in CodeIgniter 4\nDESCRIPTION: A reference to the location of a shop page view file in the CodeIgniter 4 framework. The file is located at 'app/Views/pages/shop.php' following CodeIgniter's conventional directory structure for view files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_6\n\nLANGUAGE: markup\nCODE:\n```\napp/Views/pages/shop.php\n```\n\n----------------------------------------\n\nTITLE: Starting CodeIgniter Development Server\nDESCRIPTION: Command to start CodeIgniter's built-in development server for local testing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/troubleshooting.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nphp spark serve\n```\n\n----------------------------------------\n\nTITLE: Including FilterTestTrait in Tests\nDESCRIPTION: Shows how to include the FilterTestTrait in your test class to enable filter testing functionality.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace Tests\\Support;\n\nuse CodeIgniter\\Test\\FilterTestTrait;\nuse CodeIgniter\\Test\\CIUnitTestCase;\n\nclass TestFilterA extends CIUnitTestCase\n{\n    use FilterTestTrait;\n\n    public function testCors()\n    {\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Console Commands for Updating Core Files\nDESCRIPTION: Commands to update the core files index.php and spark after running composer update\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_420.rst#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer update\ncp vendor/codeigniter4/framework/public/index.php public/index.php\ncp vendor/codeigniter4/framework/spark .\n```\n\n----------------------------------------\n\nTITLE: Loading the Inflector Helper in CodeIgniter 4\nDESCRIPTION: This code snippet demonstrates how to load the Inflector Helper in a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/inflector_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nhelper('inflector');\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 3.x Controller Implementation Example\nDESCRIPTION: Sample controller code for CodeIgniter 3.x showing the traditional structure with CI_Controller extension and defined BASEPATH check. This example demonstrates a simple Blog controller with index and post methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_controllers.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Blog extends CI_Controller\n{\n    public function __construct()\n    {\n        parent::__construct();\n    }\n\n    public function index()\n    {\n        $data['title'] = 'My Blog Title';\n        $data['heading'] = 'My Blog Heading';\n        $data['todo_list'] = array('Clean House', 'Call Mom', 'Run Errands');\n\n        $this->load->view('blog_view', $data);\n    }\n\n    public function post($id)\n    {\n        echo 'Post '.$id;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: URI String Function Reference\nDESCRIPTION: Reference to the uri_string() function which had breaking changes in version 4.3.2.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.3.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuri_string()\n```\n\n----------------------------------------\n\nTITLE: Loading Defined Class\nDESCRIPTION: Demonstrates loading a previously defined class using its alias.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\nFactories::models('Myth\\Auth\\Models\\UserModel');\n```\n\n----------------------------------------\n\nTITLE: Presenter Route with Excluded Methods\nDESCRIPTION: Excludes specific methods from presenter route generation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_13\n\nLANGUAGE: php\nCODE:\n```\n$routes->presenter('photos', ['except' => ['new', 'edit']]);\n```\n\n----------------------------------------\n\nTITLE: Using Time::createFromTimestamp() in CodeIgniter 4\nDESCRIPTION: Reference to the Time::createFromTimestamp() method which had a bug fix in 4.4.6. Previously it returned a Time instance with UTC timezone, but now returns one with the app's timezone by default when no timezone is specified.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.6.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n:ref:`Time::createFromTimestamp() <time-createfromtimestamp>`\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for CodeIgniter 4 Library Reference in reStructuredText\nDESCRIPTION: This snippet defines a table of contents for the CodeIgniter 4 library reference documentation using reStructuredText syntax. It includes a title and a list of library topics to be included in the documentation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n#################\nLibrary Reference\n#################\n\n.. toctree::\n    :titlesonly:\n\n    caching\n    cookies\n    cors\n    curlrequest\n    email\n    encryption\n    files\n    file_collections\n    honeypot\n    images\n    pagination\n    publisher\n    security\n    sessions\n    throttler\n    time\n    typography\n    uploaded_files\n    uri\n    user_agent\n    validation\n```\n\n----------------------------------------\n\nTITLE: Deprecating Parameter in CodeIgniter::handleRequest() Method (PHP)\nDESCRIPTION: The third parameter $returnResponse of CodeIgniter::handleRequest() is marked as deprecated in this release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.8.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter::handleRequest($param1, $param2, $returnResponse)\n```\n\n----------------------------------------\n\nTITLE: Deprecated random_string() types in Text Helper\nDESCRIPTION: The 'basic', 'md5', and 'sha1' types for the random_string() function are deprecated as they are not cryptographically secure.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.4.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nrandom_string()\n```\n\n----------------------------------------\n\nTITLE: Using User Agent Class to Get Browser and Platform Information in CodeIgniter 4\nDESCRIPTION: Example showing how to use the User Agent class to determine if the visitor is using a browser, mobile device, robot, and retrieve platform information if available.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/user_agent.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nif ($agent->isBrowser()) {\n    $currentAgent = $agent->getBrowser() . ' ' . $agent->getVersion();\n} elseif ($agent->isRobot()) {\n    $currentAgent = $agent->getRobot();\n} elseif ($agent->isMobile()) {\n    $currentAgent = $agent->getMobile();\n} else {\n    $currentAgent = 'Unidentified User Agent';\n}\n\necho $currentAgent;\necho $agent->getPlatform(); // Platform info (Windows, Linux, Mac, etc.)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Last Query in CodeIgniter 4\nDESCRIPTION: Demonstrates how to retrieve the last executed query using the getLastQuery() method in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/queries.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$db = \\Config\\Database::connect();\n$query = $db->getLastQuery();\n```\n\n----------------------------------------\n\nTITLE: Adding Hidden Fields with form_open() in CodeIgniter 4\nDESCRIPTION: This example shows how to add hidden input fields to a form using the form_open() function by passing an associative array as the third parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$hidden = ['username' => 'Joe', 'member_id' => '234'];\necho form_open('email/send', '', $hidden);\n```\n\n----------------------------------------\n\nTITLE: Invalid Controller Class Names for Auto Routing in CodeIgniter 4\nDESCRIPTION: Demonstrates two invalid controller class names that do not follow the required CamelCase naming convention for Auto Routing (Improved).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nclass helloWorld extends BaseController\n```\n\nLANGUAGE: php\nCODE:\n```\nclass hello_world extends BaseController\n```\n\n----------------------------------------\n\nTITLE: Using Forge::modifyColumn() in CodeIgniter 4\nDESCRIPTION: Example of using the modifyColumn() method with the Forge class in CodeIgniter 4. The method now consistently sets NULL when the 'null' key is not specified.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.4.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$forge->modifyColumn()\n```\n\n----------------------------------------\n\nTITLE: Using site_url() with String URI\nDESCRIPTION: Demonstrates generating a site URL by passing a URI string to the site_url() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/url_helper.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\necho site_url('news/local/123');\n```\n\n----------------------------------------\n\nTITLE: Removing Deprecated Composer Dependencies for CodeIgniter 4.3.0\nDESCRIPTION: JSON snippet showing lines to remove from composer.json when upgrading to CodeIgniter 4.3.0, including the Kint dependency and post-update script.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_430.rst#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    ...\n    \"require\": {\n        ...\n        \"kint-php/kint\": \"^4.2\",  <-- Remove this line\n        ...\n    },\n    ...\n    \"scripts\": {\n        \"post-update-cmd\": [\n            \"CodeIgniter\\\\ComposerScripts::postUpdate\"  <-- Remove this line\n        ],\n        \"test\": \"phpunit\"\n    },\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Route with Custom Placeholder\nDESCRIPTION: Modifies the default segment placeholder used for resource IDs in routes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$routes->resource('photos', ['placeholder' => '(:num)']);\n```\n\n----------------------------------------\n\nTITLE: Complex Alternation in PHP\nDESCRIPTION: Demonstrates more complex usage of alternator() function with multiple parameters and loop iterations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$str = 'one|two|three|four|five';\n$words = explode('|', $str);\nforeach ($words as $word)\n{\n    echo alternator('1', '2', '3', '4', '5');\n    echo $word;\n    echo \"<br>\";\n}\n```\n\n----------------------------------------\n\nTITLE: Database Configuration Changes in CodeIgniter 4\nDESCRIPTION: Updates to the default database configuration values in Database.php, including charset and collation settings changes for default and test connections.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_450.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$default = [\n    'charset' => 'utf8mb4',\n    'DBCollat' => 'utf8mb4_general_ci'\n];\n\n$tests = [\n    'DBCollat' => ''\n];\n```\n\n----------------------------------------\n\nTITLE: Creating Footer Template in CodeIgniter 4\nDESCRIPTION: HTML template for the footer section of static pages. Includes a copyright notice and closes the HTML body and document tags.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n    <em>&copy; 2022</em>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Encryption Usage in CodeIgniter 3.x\nDESCRIPTION: Example showing how to use encryption in CodeIgniter 3.x including loading the library and encrypting/decrypting data\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_encryption.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\\n\\n$this->load->library('encryption');\\n\\n$plainText  = 'This is a plain-text message!';\\n$ciphertext = $this->encryption->encrypt($plainText);\\n\\n// Outputs: This is a plain-text message!\\necho $this->encryption->decrypt($ciphertext);\n```\n\n----------------------------------------\n\nTITLE: Updated BaseBuilder List Tables Method\nDESCRIPTION: Modified abstract method signature of BaseBuilder::_listTables() to include an optional tableName parameter that allows generating SQL to list only a specific table.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.5.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nBaseBuilder::_listTables($tableName = null)\n```\n\n----------------------------------------\n\nTITLE: Modifying CodeIgniter 4 Spark Command Line Tool\nDESCRIPTION: This code modifies the 'spark' command line tool to locate the Paths configuration file when the application directory has been renamed or relocated.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n/**\n * This file is part of CodeIgniter 4 framework.\n *\n * (c) CodeIgniter Foundation <admin@codeigniter.com>\n *\n * For the full copyright and license information, please view\n * the LICENSE file that was distributed with this source code.\n */\n\n/*\n * --------------------------------------------------------------------\n * CodeIgniter command-line tools\n * --------------------------------------------------------------------\n * The main entry point into the CLI system and allows you to run\n * commands and perform maintenance on your application.\n *\n * Because CodeIgniter can be set up to use multiple applications with\n * shared frameworks, we need to be especially careful about loading\n * the correct framework for the application. This line should point\n * to the paths.php file that defines this application's paths.\n */\nrequire realpath(__DIR__ . '/app/Config/Paths.php') ?: __DIR__ . '/app/Config/Paths.php';\n// ^^^ Change this if you move your application folder\n\n/*\n * --------------------------------------------------------------------\n * Load Bootstrap\n * --------------------------------------------------------------------\n *\n * This process sets up the path constants, loads and registers\n * our autoloader, along with Composer's, loads our constants\n * and fires up an environment-specific bootstrapping.\n */\nrequire_once FCPATH . '../system/bootstrap.php';\n\n// Grab our Console\n$app = new CodeIgniter\\CLI\\Console();\n\n// We want errors to be shown when using it from the CLI.\n$app->showErrors();\n\n// Show basic information before we do anything else.\n$app->showHeader();\n\n// fire off the command in the main framework.\n$exit = $app->run();\n\nexit($exit);\n\n```\n\n----------------------------------------\n\nTITLE: Getting Octal Permissions\nDESCRIPTION: Shows how to get octal notation of file permissions\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\necho octal_permissions(fileperms('./myfile.txt'));\n```\n\n----------------------------------------\n\nTITLE: Specifying Bug Fixes Section in reStructuredText\nDESCRIPTION: This snippet defines the 'Bugs Fixed' section of the release notes using reStructuredText syntax. It includes a link to the CHANGELOG.md file in the GitHub repository for a complete list of bug fixes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.1.rst#2025-04-16_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n**********\nBugs Fixed\n**********\n\nSee the repo's\n`CHANGELOG.md <https://github.com/codeigniter4/CodeIgniter4/blob/develop/CHANGELOG.md>`_\nfor a complete list of bugs fixed.\n```\n\n----------------------------------------\n\nTITLE: Deprecated PHP Classes\nDESCRIPTION: List of deprecated classes and their replacements in CodeIgniter 4.1.2\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Entity -> CodeIgniter\\Entity\\Entity\nCIDatabaseTestCase -> DatabaseTestTrait\nFeatureTestCase -> FeatureTestTrait\nControllerTester -> ControllerTestTrait\nControllerResponse and FeatureResponse -> TestResponse\n```\n\n----------------------------------------\n\nTITLE: Referencing Labeled Sections in reStructuredText\nDESCRIPTION: Shows two different ways to reference a labeled section, either with custom text or using the label itself as the reference text.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\nSee :ref:`CURLRequest Class <curlrequest-request-options-headers>` for how to add.\n\nSee :ref:`curlrequest-request-options-headers` for how to add.\n```\n\n----------------------------------------\n\nTITLE: CLI Basic Text Wrapping\nDESCRIPTION: Shows basic usage of wrap() method for text wrapping.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\nCLI::wrap($text);\n```\n\n----------------------------------------\n\nTITLE: Language File Structure in CodeIgniter 3.x\nDESCRIPTION: Example of a language file from CodeIgniter 3.x. This format uses associative arrays with the $lang variable and requires explicit loading of language files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_localization.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n$lang['errorEmailMissing']    = 'You must submit an email address';\n$lang['errorURLMissing']      = 'You must submit a URL';\n$lang['errorUsernameMissing'] = 'You must submit a username';\n```\n\n----------------------------------------\n\nTITLE: Clearing Email Data in CodeIgniter4\nDESCRIPTION: Examples of clearing email data with and without attachments using clear() method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/libraries/email.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$email->clear();\n```\n\nLANGUAGE: php\nCODE:\n```\n$email->clear(true);\n```\n\n----------------------------------------\n\nTITLE: Debug Toolbar Configuration in CodeIgniter\nDESCRIPTION: Configuration code for the Debug Toolbar showing collector settings in app/Config/Toolbar.php.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/debugging.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic array $collectors = [\n    Timers::class,\n    Database::class,\n    Logs::class,\n    Views::class,\n    // \\CodeIgniter\\Debug\\Toolbar\\Collectors\\Cache::class,\n    Files::class,\n    Routes::class,\n    Events::class,\n];\n```\n\n----------------------------------------\n\nTITLE: Database Query Examples in CodeIgniter 3.x\nDESCRIPTION: Code sample demonstrating how database connections and queries were implemented in CodeIgniter 3.x, including loading the database, running queries, using Query Builder methods, and retrieving results.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_database.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Blog_model extends CI_Model\n{\n    public function __construct()\n    {\n        $this->load->database();\n    }\n\n    public function get_blog_list()\n    {\n        // Simple Query\n        $query = $this->db->query('SELECT * FROM blog');\n        $result = $query->result();\n\n        // Using Query Builder\n        $query = $this->db->get('blog');\n        $result = $query->result_array();\n\n        // Using Query Builder with where\n        $query = $this->db->get_where('blog', ['id' => 1]);\n        $row = $query->row();\n\n        // Query Builder methods\n        $this->db->select('title, content, date');\n        $this->db->where('status', 'active');\n        $this->db->order_by('date', 'DESC');\n        $this->db->limit(10);\n        $query = $this->db->get('blog');\n        $result = $query->result();\n\n        return $result;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Controller Filter Exceptions in CodeIgniter 4.3.8\nDESCRIPTION: Demonstrates the corrected behavior of the 'except' parameter in Controller Filters. Empty array now means exclude nothing, while empty string means exclude only the baseURL.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.8.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n['except' => []]\n```\n\nLANGUAGE: php\nCODE:\n```\n['except' => '']\n```\n\n----------------------------------------\n\nTITLE: Force Pushing Updated Branch\nDESCRIPTION: Command to force push local branch changes to remote repository with safety check.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_15\n\nLANGUAGE: console\nCODE:\n```\n> git push --force-with-lease origin fix/problem123\n```\n\n----------------------------------------\n\nTITLE: Configuring Routes in CodeIgniter 3.x\nDESCRIPTION: Example of route configuration in CodeIgniter 3.x, showing how routes are defined as an array with various patterns and their corresponding controller/method destinations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_routing.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\n/*\n| -------------------------------------------------------------------------\n| URI ROUTING\n| -------------------------------------------------------------------------\n| This file lets you re-map URI requests to specific controller functions.\n|\n| Typically there is a one-to-one relationship between a URL string\n| and its corresponding controller class/method. The segments in a\n| URL normally follow this pattern:\n|\n|    example.com/class/method/id/\n|\n| In some instances, however, you may want to remap this relationship\n| so that a different class/function is called than the one\n| corresponding to the URL.\n|\n*/\n\n$route['default_controller'] = 'welcome';\n$route['404_override'] = '';\n$route['translate_uri_dashes'] = FALSE;\n\n// Mapping to a specific controller\n$route['journals'] = 'blogs';\n\n// Wildcard mapping\n$route['product/(:any)'] = 'catalog/product_lookup';\n\n// Back-reference\n$route['login/(.+)'] = 'auth/login/$1';\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Table Rows with Headings in PHP\nDESCRIPTION: Method to synchronize table row columns with headings in CodeIgniter 4's Table class\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.0.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nTable::setSyncRowsWithHeading()\n```\n\n----------------------------------------\n\nTITLE: Fixing Validation Handling of Array Items\nDESCRIPTION: Addresses an issue where validation could not properly handle array items. This change may affect existing validation rules for array inputs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nfix: Validation cannot handle array item\n```\n\n----------------------------------------\n\nTITLE: Registrar Class Implementation Example\nDESCRIPTION: Example of a registrar class implementation that will no longer work due to Config class instantiation restrictions\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_460.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nnamespace Config;\n\nuse CodeIgniter\\Config\\BaseService;\n\nclass Services extends BaseService\n{\n    public static function example($getShared = true)\n    {\n        if ($getShared) {\n            return static::getSharedInstance('example');\n        }\n\n        $config = new CustomConfig();  // This will raise ConfigException\n\n        return new Example($config);\n    }\n```\n\n----------------------------------------\n\nTITLE: Composer.json Namespace Configuration Removal\nDESCRIPTION: Required changes to composer.json to remove App and Config namespace autoloading configurations\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_420.rst#2025-04-16_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{\n    ...\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"app\",             <-- Remove this line\n            \"Config\\\\\": \"app/Config\"    <-- Remove this line\n        }\n    },\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Release Script Usage Example\nDESCRIPTION: Command syntax for running the release deployment script that pushes changes to GitHub repositories and creates release tags.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/README.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nadmin/release-deploy version qualifier\n```\n\n----------------------------------------\n\nTITLE: Referencing Response::setCookie() Method in CodeIgniter\nDESCRIPTION: This snippet references the setCookie() method in the CodeIgniter\\HTTP\\Response class. Similar to set_cookie(), its default parameter values for $secure and $httponly have been changed to null in this release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.7.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\HTTP\\Response::setCookie()\n```\n\n----------------------------------------\n\nTITLE: Displaying CodeIgniter Version in PHP\nDESCRIPTION: This code snippet demonstrates how to echo the current version of CodeIgniter using a constant. It's useful for developers who need to quickly check their CodeIgniter version.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrading.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\necho \\CodeIgniter\\CodeIgniter::CI_VERSION;\n```\n\n----------------------------------------\n\nTITLE: Validation Rule Configuration - CodeIgniter4 PHP\nDESCRIPTION: Example of validation rule configuration that needs to be updated for v4.1.6. Shows the old validation format that requires updating to use array notation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_416.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n'invoice_rule' =>  ['rules' => 'numeric', 'errors' => ['numeric' => 'Not numeric']]\n```\n\n----------------------------------------\n\nTITLE: Rebasing Feature Branch\nDESCRIPTION: Commands to update feature branch with latest changes from upstream develop branch.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_13\n\nLANGUAGE: console\nCODE:\n```\n> git switch fix/problem123\n> git rebase upstream/develop\n```\n\n----------------------------------------\n\nTITLE: Using Strict Assertions in PHPUnit\nDESCRIPTION: Guidelines for using strict assertions in PHPUnit tests. Recommends using assertSame() instead of assertEquals() for more precise type checking.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\n-$this->assertEquals(12, (int) $axis);\n+$this->assertSame(12, (int) $axis);\n```\n\n----------------------------------------\n\nTITLE: HTML Doctype Generation Examples\nDESCRIPTION: Comprehensive list of available doctype declarations in CodeIgniter, including XHTML, HTML4/5, MathML, SVG, and hybrid doctypes. Shows the type parameter and corresponding output for each doctype option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<!DOCTYPE html>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Implementing Dependency Injection in CodeIgniter 4 Classes\nDESCRIPTION: Demonstrates the recommended pattern for handling dependencies in CodeIgniter 4 packages. This approach allows dependencies to be passed in via the constructor while providing a fallback using the service() function, maintaining package isolation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/internals.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n    public function __construct(?Foo $foo = null)\n    {\n        $this->foo = $foo ?? service('foo');\n    }\n```\n\n----------------------------------------\n\nTITLE: Executing Release Deployment Script in Bash\nDESCRIPTION: Command for maintainers to deploy a prepared CodeIgniter4 release. This script merges and pushes the release branch after verification.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/workflow.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nadmin/release-deploy please\n```\n\n----------------------------------------\n\nTITLE: Ignore Status Codes Configuration\nDESCRIPTION: Configuration to specify which HTTP status codes should not be logged when exceptions occur.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/errors.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\npublic array $ignoreCodes = [404];\n```\n\n----------------------------------------\n\nTITLE: Setting Response Headers Example - PHP\nDESCRIPTION: Demonstrates how response headers are now handled in CodeIgniter 4.6.0, showing that headers set by Response class now replace those set by PHP header() function rather than being added alongside them.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$response->removeHeader('Expires'); // has no effect\nreturn $response->setHeader('Expires', 'Sun, 17 Nov 2024 14:17:37 GMT');\n```\n\n----------------------------------------\n\nTITLE: Defining RST Table of Contents for CodeIgniter 4 Documentation\nDESCRIPTION: A reStructuredText directive that creates a table of contents for general CodeIgniter 4 documentation topics. Uses the titlesonly option to include only top-level headings in the generated table of contents.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n##############\nGeneral Topics\n##############\n\n.. toctree::\n    :titlesonly:\n\n    configuration\n    urls\n    helpers\n    common_functions\n    logging\n    errors\n    caching\n    ajax\n    modules\n    managing_apps\n    environments\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Test Migration and Seeding\nDESCRIPTION: Example showing how to configure migration and seeding options for database tests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/database.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace CodeIgniter;\n\nuse CodeIgniter\\Test\\CIUnitTestCase;\nuse CodeIgniter\\Test\\DatabaseTestTrait;\n\nclass MyTests extends CIUnitTestCase\n{\n    use DatabaseTestTrait;\n\n    protected $migrate     = true;\n    protected $migrateOnce = false;\n    protected $refresh     = true;\n    protected $namespace   = 'App';\n    protected $seed        = 'TestSeeder';\n    protected $seedOnce    = false;\n    protected $basePath    = SUPPORTPATH . 'Database';\n}\n```\n\n----------------------------------------\n\nTITLE: CLI Prompt with Validation Rules\nDESCRIPTION: Shows how to add validation rules to CLI prompt input.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_library.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$email = CLI::prompt('What is your email?', null, 'required|valid_email');\n```\n\n----------------------------------------\n\nTITLE: Creating a Checkbox with form_checkbox() in PHP\nDESCRIPTION: Demonstrates the use of form_checkbox() function to generate a checkbox field. It shows basic usage, setting attributes, and adding JavaScript.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_20\n\nLANGUAGE: PHP\nCODE:\n```\necho form_checkbox('newsletter', 'accept', true);\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_checkbox('newsletter', 'accept', true, ['id' => 'newsletter']);\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_checkbox('newsletter', 'accept', true, 'onClick=\"some_function()\"');\n```\n\nLANGUAGE: PHP\nCODE:\n```\necho form_checkbox('newsletter', 'accept', true, ['onClick' => 'some_function()']);\n```\n\n----------------------------------------\n\nTITLE: Setting Default GPG Signing Command for Git\nDESCRIPTION: Git command for setting up global GPG signing configuration. This enables automatic secure signing of all commits without needing the -S flag. The example shows how to configure the signing key using your GPG key ID.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/signing.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global commit.gpgsign true\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global user.signingkey 3AC5C34371567BD2\n```\n\n----------------------------------------\n\nTITLE: Checking PHP Code Style in CodeIgniter 4\nDESCRIPTION: Command to check for coding style violations in the CodeIgniter 4 project using Composer.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\ncomposer cs\n```\n\n----------------------------------------\n\nTITLE: Adding a Normal Method to a Controller for Auto Routing in CodeIgniter 4\nDESCRIPTION: Shows how to add a normal method (getComment) to a controller that can be accessed via Auto Routing (Improved).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\npublic function getComment()\n{\n    return 'I am not flat!';\n}\n```\n\n----------------------------------------\n\nTITLE: RST Documentation Structure for CodeIgniter Helpers\nDESCRIPTION: ReStructuredText (RST) markup defining the documentation structure for CodeIgniter 4 helpers section. Uses RST directives for heading and table of contents.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n#######\nHelpers\n#######\n\nHelpers are collections of useful procedural functions.\nSee also :doc:`../general/helpers`.\n\n.. toctree::\n    :glob:\n    :titlesonly:\n\n    *\n```\n\n----------------------------------------\n\nTITLE: Test Class Before Migration Example - PHP\nDESCRIPTION: Example of a test class using CIDatabaseTestCase before migrating to the new trait-based approach in CodeIgniter 4.1.2.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_412.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nclass MyDatabaseTest extends CIDatabaseTestCase\n```\n\n----------------------------------------\n\nTITLE: Using Cache Clear Command in Console\nDESCRIPTION: Command to clear the CodeIgniter configuration cache using the CLI spark command.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/factories.rst#2025-04-16_snippet_15\n\nLANGUAGE: console\nCODE:\n```\nphp spark cache:clear\n```\n\n----------------------------------------\n\nTITLE: Using Forge's _createTable Method in CodeIgniter\nDESCRIPTION: The second parameter $ifNotExists of Forge::_createTable() is now deprecated. This affects how tables are created in the database.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.2.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nForge::_createTable($table, $ifNotExists)\n```\n\n----------------------------------------\n\nTITLE: Presenter Route with Custom Placeholder\nDESCRIPTION: Modifies the default segment placeholder for presenter routes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$routes->presenter('photos', ['placeholder' => '(:num)']);\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents Structure in reStructuredText for CodeIgniter4 User Guide\nDESCRIPTION: This code snippet defines the overall structure of the CodeIgniter4 User Guide using reStructuredText directives. It organizes the documentation into major sections and subsections, providing a hierarchical layout for easy navigation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n#######################\nCodeIgniter4 User Guide\n#######################\n\n.. toctree::\n    :includehidden:\n    :titlesonly:\n\n    intro/index\n\n***************\nGetting Started\n***************\n\n.. toctree::\n    :maxdepth: 2\n    :titlesonly:\n\n    installation/index\n\n****************************\nBuild Your First Application\n****************************\n\n.. toctree::\n    :includehidden:\n    :titlesonly:\n\n    tutorial/index\n\n*************************\nOverview & General Topics\n*************************\n\n.. toctree::\n    :titlesonly:\n\n    concepts/index\n\n.. toctree::\n    :titlesonly:\n\n    general/index\n\n****************\nRequest Handling\n****************\n\n.. toctree::\n    :titlesonly:\n\n    incoming/index\n\n.. toctree::\n    :titlesonly:\n\n    outgoing/index\n\n******************\nHandling Databases\n******************\n\n.. toctree::\n    :titlesonly:\n\n    database/index\n\n.. toctree::\n    :titlesonly:\n\n    models/index\n\n.. toctree::\n    :titlesonly:\n\n    dbmgmt/index\n\n*******************\nLibraries & Helpers\n*******************\n\n.. toctree::\n    :titlesonly:\n\n    libraries/index\n\n.. toctree::\n    :titlesonly:\n\n    helpers/index\n\n***************\nAdvanced Topics\n***************\n\n.. toctree::\n    :titlesonly:\n\n    testing/index\n\n.. toctree::\n    :titlesonly:\n\n    cli/index\n\n.. toctree::\n    :titlesonly:\n\n    extending/index\n\n.. toctree::\n    :hidden:\n\n    license\n    changelogs/index\n\n*****************\nOfficial Packages\n*****************\n\n.. toctree::\n    :titlesonly:\n\n    libraries/official_packages\n```\n\n----------------------------------------\n\nTITLE: Presenter Controller Route Definition\nDESCRIPTION: Route definition for connecting the Photos ResourcePresenter to endpoints.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$routes->presenter('photos');\n```\n\n----------------------------------------\n\nTITLE: Force Pushing Rebased Branch\nDESCRIPTION: Command to force push the rebased branch to remote repository.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_20\n\nLANGUAGE: console\nCODE:\n```\n> git push --force-with-lease origin feat-abc\n```\n\n----------------------------------------\n\nTITLE: GPG-Signing All Commits in a Branch\nDESCRIPTION: Commands to sign all commits in a branch with GPG signatures using interactive rebase from root.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n> git switch your-branch\n> git rebase -i --root --exec 'git commit --amend --no-edit --no-verify -S'\n> git push --force-with-lease origin your-branch\n```\n\n----------------------------------------\n\nTITLE: Basic Blog Controller with View in CodeIgniter 4\nDESCRIPTION: A simple blog controller that loads a view file called 'blog_view'.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/outgoing/views.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nclass Blog extends BaseController\n{\n    public function index()\n    {\n        return view('blog_view');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Marking Deprecated Features in Documentation with reStructuredText\nDESCRIPTION: Demonstrates how to indicate when a feature was deprecated and what to use instead, helping users update their code.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_9\n\nLANGUAGE: rst\nCODE:\n```\n.. deprecated:: 4.3.0\n   Use :php:meth:`CodeIgniter\\\\Database\\\\BaseBuilder::setData()` instead.\n```\n\n----------------------------------------\n\nTITLE: Testing the release in AppStarter\nDESCRIPTION: Commands to install and test the AppStarter package after a release to verify the new version has been properly deployed.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nrm -rf release-test\ncomposer create-project codeigniter4/appstarter release-test\ncd release-test\ncomposer test && composer info codeigniter4/framework\n```\n\n----------------------------------------\n\nTITLE: Fast-forwarding develop branch after release\nDESCRIPTION: Git commands to fast-forward the develop branch to include the merge commit from master after the release is complete.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ngit fetch upstream\ngit checkout develop\ngit merge upstream/develop\ngit merge upstream/master\ngit push upstream HEAD\n```\n\n----------------------------------------\n\nTITLE: Referencing Validation Rules in CodeIgniter\nDESCRIPTION: This snippet references two validation rules in CodeIgniter that have been modified: required_without() in both the standard and strict rule sets. The parameters and logic for these rules have been changed in this release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.7.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nValidation\\Rule::required_without()\n```\n\nLANGUAGE: PHP\nCODE:\n```\nValidation\\StrictRules\\Rule::required_without()\n```\n\n----------------------------------------\n\nTITLE: Using CodeIgniter's gatherOutput Method\nDESCRIPTION: The first parameter $cacheConfig of CodeIgniter::gatherOutput() is now deprecated. This is part of the changes to how page caching works in relation to after filters.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.2.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nCodeIgniter::gatherOutput($cacheConfig)\n```\n\n----------------------------------------\n\nTITLE: Event System Implementation (PHP)\nDESCRIPTION: Example of the new Events system that replaces CI3's Hooks functionality.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4xx.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nuse CodeIgniter\\Events\\Events;\n\nEvents::on('post_controller_constructor', ['MyClass', 'MyFunction']);\n```\n\n----------------------------------------\n\nTITLE: Mocking HTTP Requests with FeatureTestCase in CodeIgniter 4\nDESCRIPTION: Example of mocking HTTP requests for feature tests in CodeIgniter 4. This shows how to simulate different HTTP methods with parameters using the FeatureTestCase helper methods.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n// Send a GET request\n$result = $this->get('home');\n\n// Send a GET request with query parameters\n$result = $this->get('users', ['active' => 1]);\n\n// Send a POST request\n$result = $this->post('users/create', [\n    'first'  => 'First',\n    'last'   => 'Last',\n    'email'  => 'first.last@example.com',\n    'avatar' => 'http://example.com/image.png',\n]);\n\n// Send a PUT request\n$result = $this->put('users/1', [\n    'first'  => 'First',\n    'email'  => 'first.last@example.com',\n]);\n\n// Send a PATCH request\n$result = $this->patch('users/1', [\n    'first'  => 'First',\n]);\n\n// Send a DELETE request\n$result = $this->delete('users/1');\n\n// Send an OPTIONS request\n$result = $this->options('users/create');\n```\n\n----------------------------------------\n\nTITLE: Modifying CodeIgniter 4 Front Controller\nDESCRIPTION: This code modifies the front controller (public/index.php) to locate the Paths configuration file when the application directory has been renamed or relocated.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/general/managing_apps.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse CodeIgniter\\Config\\DotEnv;\nuse CodeIgniter\\Config\\Services;\n\n// Check PHP version.\n$minPhpVersion = '7.4'; // If you update this, don't forget to update `spark`.\nif (version_compare(PHP_VERSION, $minPhpVersion, '<')) {\n    $message = sprintf(\n        'Your PHP version must be %s or higher to run CodeIgniter. Current version: %s',\n        $minPhpVersion,\n        PHP_VERSION\n    );\n\n    exit($message);\n}\n\n// Path to the front controller (this file)\ndefine('FCPATH', __DIR__ . DIRECTORY_SEPARATOR);\n\n// Ensure the current directory is pointing to the front controller's directory\nif (getcwd() . DIRECTORY_SEPARATOR !== FCPATH) {\n    chdir(FCPATH);\n}\n\n/*\n *---------------------------------------------------------------\n * BOOTSTRAP THE APPLICATION\n *---------------------------------------------------------------\n * This process sets up the path constants, loads and registers\n * our autoloader, along with Composer's, loads our constants\n * and fires up an environment-specific bootstrapping.\n */\n\n// Load our paths config file\n// This is the line that might need to be changed, depending on your folder structure.\nrequire FCPATH . '../app/Config/Paths.php';\n// ^^^ Change this line if you move your application folder\n\n$app = require rtrim($paths->systemDirectory, '/ ') . '/bootstrap.php';\n\n/*\n *---------------------------------------------------------------\n * LAUNCH THE APPLICATION\n *---------------------------------------------------------------\n * Now that everything is set up, it's time to actually fire\n * up the engines and make this app do its thang.\n */\n$app->run();\n\n```\n\n----------------------------------------\n\nTITLE: Running Individual Test File\nDESCRIPTION: Command to run a single test file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n./phpunit tests/system/HTTP/RequestTest.php\n```\n\n----------------------------------------\n\nTITLE: Creating Local Table of Contents in reStructuredText\nDESCRIPTION: Shows how to automatically insert a local table of contents in a reStructuredText document. This directive creates a table of contents for the current page with a specified depth.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. contents::\n    :local:\n    :depth: 2\n```\n\n----------------------------------------\n\nTITLE: Valid Controller Class Name for Auto Routing in CodeIgniter 4\nDESCRIPTION: Shows a valid controller class name (HelloWorld) that follows the CamelCase naming convention required for Auto Routing (Improved).\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/auto_routing_improved.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nclass HelloWorld extends BaseController\n```\n\n----------------------------------------\n\nTITLE: Configuring PSR-4 Namespaces\nDESCRIPTION: Configuration example showing how to define PSR-4 namespaces for autoloading migrations from multiple locations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/migration.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\npublic $psr4 = [\n    'App'         => APPPATH,\n    'MyCompany'   => ROOTPATH . 'MyCompany'\n];\n```\n\n----------------------------------------\n\nTITLE: Illustrating uri_string() behavior change in PHP\nDESCRIPTION: The uri_string() function no longer accepts a $relative parameter and always returns a path relative to baseURL. When baseURL is accessed, it now returns an empty string, consistent with CodeIgniter 3.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.2.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nuri_string(); // When baseURL is accessed, returns: ''\n```\n\n----------------------------------------\n\nTITLE: Running tests in CodeIgniter 4 on Windows\nDESCRIPTION: Command to run the test suite in a CodeIgniter 4 application on Windows systems using the vendor path to PHPUnit.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/tests/README.md#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n> vendor\\bin\\phpunit\n```\n\n----------------------------------------\n\nTITLE: Installing Sphinx and dependencies\nDESCRIPTION: Commands to install Sphinx and its dependencies using pip. Shows different commands for various operating systems using the requirements.txt file.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r user_guide_src/requirements.txt\n\npip3 install -r user_guide_src/requirements.txt\n\n# For Windows using the Python Launcher\npy -3 -m pip install -r user_guide_src/requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Updated Validation Process Rules Methods\nDESCRIPTION: Modified method signatures of Validation::processRules() and Validation::getErrorMessage() to include a new originalField parameter for enhanced validation handling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.5.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nValidation::processRules($field, $value, $rules, $data, $originalField)\nValidation::getErrorMessage($rule, $field, $label, $param = null, $originalField)\n```\n\n----------------------------------------\n\nTITLE: Running Rector Code Fixes\nDESCRIPTION: Command to run Rector and automatically fix code issues in specified files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nvendor/bin/rector process path/to/file\n```\n\n----------------------------------------\n\nTITLE: Checking Python versions in Terminal\nDESCRIPTION: Commands to check installed Python versions in different operating systems. This helps ensure you have Python 3.5+ which is required for Sphinx.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython --version\nPython 2.7.17\n\npython3 --version\nPython 3.6.9\n\n# For Windows using the Python Launcher\npy -3 --version\nPython 3.8.1\n```\n\n----------------------------------------\n\nTITLE: Presenter Route with Custom Controller\nDESCRIPTION: Specifies a custom controller for handling presenter routes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/restful.rst#2025-04-16_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$routes->presenter('photos', ['controller' => 'App\\Controllers\\Photos']);\n```\n\n----------------------------------------\n\nTITLE: Switching Between Multiple Feature Branches\nDESCRIPTION: Commands demonstrating workflow when working on multiple features simultaneously, showing how to keep changes isolated in separate branches.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n> git switch new/mind-reader\n> ## work away\n> git add .\n> git commit -S -m \"Added adapter for abc\"\n> git switch fix/issue-123\n> ## work away\n> git add .\n> git commit -S -m \"Fixed problem in DEF\\Something\"\n> git switch develop\n```\n\n----------------------------------------\n\nTITLE: Generating file changes for upgrade documentation\nDESCRIPTION: Git command to generate a list of changed files that should be included in the upgrade documentation, excluding specific directories and file types.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ngit diff --name-status origin/master -- . ':!.github/' ':!admin/' ':!system/' ':!tests/' \\\n    ':!user_guide_src/' ':!utils/' ':!*.json' ':!*.xml' ':!*.dist' ':!rector.php' \\\n    ':!phpstan*' ':!psalm*' ':!.php-cs-fixer.*' ':!LICENSE' ':!CHANGELOG.md'\n```\n\n----------------------------------------\n\nTITLE: Getting Directory File Information\nDESCRIPTION: Shows how to get detailed information about files in a directory\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n$files = get_dir_file_info('./mydir/');\n```\n\n----------------------------------------\n\nTITLE: Generating the documentation HTML\nDESCRIPTION: Commands to generate the HTML documentation using make. Shows how to navigate to the source directory and build the documentation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd user_guide_src\nmake html\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Local Repository with Upstream\nDESCRIPTION: Commands to synchronize your local repository with the upstream CodeIgniter repository, ensuring you have the latest changes before making your contributions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n> git fetch upstream\n> git switch develop\n> git merge upstream/develop\n> git push origin develop\n```\n\n----------------------------------------\n\nTITLE: Referencing PHP Methods in reStructuredText\nDESCRIPTION: Demonstrates how to reference a PHP class method in the documentation using the php domain extension for Sphinx.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_7\n\nLANGUAGE: rst\nCODE:\n```\n:php:meth:`CodeIgniter\\\\HTTP\\\\Response::setCookie()`\n```\n\n----------------------------------------\n\nTITLE: Using random_string() Function with Crypto Parameter in PHP\nDESCRIPTION: The random_string() function with 'crypto' parameter now throws InvalidArgumentException if the length parameter is an odd number. This is a breaking change in CodeIgniter 4.2.2.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.2.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrandom_string('crypto', $len)\n```\n\n----------------------------------------\n\nTITLE: Linking to CHANGELOG.md in reStructuredText\nDESCRIPTION: This snippet creates a hyperlink to the CHANGELOG.md file in the CodeIgniter4 GitHub repository using reStructuredText syntax.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.2.rst#2025-04-16_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n`CHANGELOG.md <https://github.com/codeigniter4/CodeIgniter4/blob/develop/CHANGELOG.md>`_\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Encryption in CodeIgniter 4\nDESCRIPTION: Setting the 'encrypt' option in the database configuration to enable encryption for database connections.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/security.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n\"encrypt\" => true\n```\n\n----------------------------------------\n\nTITLE: Running docbot Script from Project Root\nDESCRIPTION: Command for executing the docbot script from the CodeIgniter 4 project root directory. The optional 'deploy' parameter determines whether to push the built documentation to the repository or just build it locally.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/docbot.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n`admin/docbot [deploy]`\n```\n\n----------------------------------------\n\nTITLE: Creating Seeder Files with Custom Namespace (Windows)\nDESCRIPTION: Shows how to create a seeder file with a custom namespace using the command line interface on Windows systems.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/dbmgmt/seeds.rst#2025-04-16_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nphp spark make:seeder MySeeder --namespace Acme\\Blog\n```\n\n----------------------------------------\n\nTITLE: Compiling SASS to CSS for CodeIgniter Debug Toolbar\nDESCRIPTION: Command to compile the Debug Toolbar's SCSS file into CSS using Dart Sass. The command prevents sourcemap generation and specifies input SCSS and output CSS file paths.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/css.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nsass --no-source-map admin/css/debug-toolbar/toolbar.scss system/Debug/Toolbar/Views/toolbar.css\n```\n\n----------------------------------------\n\nTITLE: Defining a CLI-Only Route in CodeIgniter 4\nDESCRIPTION: This code snippet shows how to define a route that is only accessible via the command-line interface in CodeIgniter 4. It uses the cli() method to specify a CLI-only route for the Tools controller's message method.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_controllers.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$routes->cli('tools/message/(:any)', 'Tools::message/$1');\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Table of Contents Configuration\nDESCRIPTION: Defines a table of contents (toctree) directive in ReStructuredText format that lists the various documentation sections for extending CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/extending/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n    :titlesonly:\n\n    core_classes\n    common\n    events\n    basecontroller\n    authentication\n    composer_packages\n    contributing\n```\n\n----------------------------------------\n\nTITLE: Class Implementation with Traits\nDESCRIPTION: Shows proper formatting for class declaration with trait implementation including proper spacing and indentation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nclass ClassName extends ParentClass implements InterfaceName\n{\n    use FirstTrait;\n    use SecondTrait;\n\n    // Class body\n}\n```\n\n----------------------------------------\n\nTITLE: Running Rector Code Analysis (Dry Run)\nDESCRIPTION: Command to analyze specific files with Rector without making changes, using dry-run mode.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/pull_request.md#2025-04-16_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nvendor/bin/rector process --dry-run path/to/file\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Specific Directory\nDESCRIPTION: Command to run tests within a specific directory.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n./phpunit tests/system/HTTP/\n```\n\n----------------------------------------\n\nTITLE: Referencing Other Documentation Pages in reStructuredText\nDESCRIPTION: Shows two ways to reference other documentation pages, either with custom text or using just the path.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_4\n\nLANGUAGE: rst\nCODE:\n```\nSee :doc:`Session <../libraries/sessions>` library\n\nSee :doc:`../libraries/sessions` library\n```\n\n----------------------------------------\n\nTITLE: Executing Release Preparation Script in Bash\nDESCRIPTION: Command for maintainers to prepare a new CodeIgniter4 release. This script creates a release branch, updates version information, and prepares documentation without pushing to the repository.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/workflow.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadmin/release version [qualifier]\n```\n\n----------------------------------------\n\nTITLE: GPG-Signing a Specific Number of Previous Commits\nDESCRIPTION: Commands to sign a specific number of previous commits with GPG signatures using interactive rebase.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n> git switch your-branch\n> git rebase -i HEAD~3 --exec 'git commit --amend --no-edit --no-verify -S'\n> git push --force-with-lease origin your-branch\n```\n\n----------------------------------------\n\nTITLE: Optional PHP Extensions in ReStructuredText\nDESCRIPTION: Documentation section listing optional PHP extensions for enhanced functionality including MySQL, cURL, image processing, and caching capabilities.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/intro/requirements.rst#2025-04-16_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\n***********************\nOptional PHP Extensions\n***********************\n\nThe following PHP extensions should be enabled on your server:\n\n  - `mysqlnd <https://www.php.net/manual/en/mysqlnd.install.php>`_ (if you use MySQL)\n  - `curl <https://www.php.net/manual/en/curl.requirements.php>`_\n  - `imagick <https://www.php.net/manual/en/imagick.requirements.php>`_\n  - `gd <https://www.php.net/manual/en/image.requirements.php>`_\n  - `simplexml <https://www.php.net/manual/en/simplexml.requirements.php>`_\n```\n\n----------------------------------------\n\nTITLE: View Loading Syntax Change (PHP)\nDESCRIPTION: Demonstrates the difference in view loading syntax between CI3 and CI4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4xx.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// CI3\n$this->load->view('directory_name/file_name');\n\n// CI4\necho view('directory_name/file_name');\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4 Project Structure\nDESCRIPTION: Basic folder structure required for a CodeIgniter 4 project after manual installation. These directories contain the core framework files, application code, public assets, tests, and writable storage.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/installing_manual.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napp, public, tests, writable, system\n```\n\n----------------------------------------\n\nTITLE: Creating Mock Classes in CodeIgniter 4 Tests\nDESCRIPTION: Example of creating mock classes for unit testing in CodeIgniter 4. This shows how to create a mock object that returns predetermined values for method calls.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_14\n\nLANGUAGE: php\nCODE:\n```\npublic function testSomething()\n{\n    $mock = $this->createMock(SomeClass::class);\n    $mock->method('getSomething')->willReturn('foo');\n\n    $this->assertSame('foo', $mock->getSomething());\n}\n```\n\n----------------------------------------\n\nTITLE: Apache VirtualHost Setup\nDESCRIPTION: Complete VirtualHost configuration for a CodeIgniter 4 application.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/running.rst#2025-04-16_snippet_5\n\nLANGUAGE: apache\nCODE:\n```\n<VirtualHost *:80>\n    DocumentRoot \"/opt/lamp/apache2/myproject/public\"\n    ServerName   myproject.local\n    ErrorLog     \"logs/myproject-error_log\"\n    CustomLog    \"logs/myproject-access_log\" common\n\n    <Directory \"/opt/lamp/apache2/myproject/public\">\n        AllowOverride All\n        Require all granted\n    </Directory>\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Mocking Services in CodeIgniter 4 Tests\nDESCRIPTION: Example of mocking services for testing in CodeIgniter 4. This shows how to replace a service with a mock version to control its behavior during tests.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_15\n\nLANGUAGE: php\nCODE:\n```\npublic function testSomething()\n{\n    $mock = $this->getMockBuilder('SomeClass')\n        ->disableOriginalConstructor()\n        ->getMock();\n    $mock->method('getSomething')->willReturn('foo');\n\n    Services::injectMock('someservice', $mock);\n\n    // ... trigger the code that uses this service\n}\n```\n\n----------------------------------------\n\nTITLE: Using BaseBuilder Methods in CodeIgniter\nDESCRIPTION: BaseBuilder::increment() and BaseBuilder::decrement() had a bug fix to ensure they reset the BaseBuilder state after a query. Also, method signatures for insert() and update() have changed to remove ?array typehint.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.2.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nBaseBuilder::increment()\nBaseBuilder::decrement()\nBaseBuilder::insert()\nBaseBuilder::update()\n```\n\n----------------------------------------\n\nTITLE: Custom Object Results with getResult()\nDESCRIPTION: Shows how to get query results as instances of a custom class\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/results.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query(\"YOUR QUERY\");\n\nforeach ($query->getResult('User') as $row) {\n    echo $row->title;\n    echo $row->name;\n    echo $row->body;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Image with Attributes Array\nDESCRIPTION: Creates an image element using an associative array for complete attribute control.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\necho img(['src' => 'images/picture.jpg', 'alt' => 'Me Picture', 'class' => 'post_images', 'width' => '200', 'height' => '200', 'title' => 'That was me in Costa Rica', 'rel' => 'lightbox']);\n```\n\n----------------------------------------\n\nTITLE: Running the API Documentation Builder Script in CodeIgniter 4\nDESCRIPTION: Command to execute the apibot script from the project root, with an optional 'deploy' parameter to push changes to the repository. Without the deploy parameter, the script runs in trial mode.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/apibot.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadmin/apibot [deploy]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies via Composer\nDESCRIPTION: Command to install required dependencies including PHPUnit through Composer package manager.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/README.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ncomposer install\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Table of Contents\nDESCRIPTION: A hidden table of contents directive that links to key documentation sections including requirements, credits, PSR standards, and license agreement.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/intro/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n    :hidden:\n    :titlesonly:\n\n    self\n    requirements\n    credits\n    psr\n    License Agreement <../license>\n```\n\n----------------------------------------\n\nTITLE: Removing Redundant PHPDoc Annotations in PHP\nDESCRIPTION: Example showing how to eliminate unnecessary PHPDoc comments when the type information is already provided by PHP's type hints and return type declarations.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n-/**\n- * @param string $data Data\n- * @return void\n- */\n  public function analyse(string $data): void {};\n```\n\n----------------------------------------\n\nTITLE: Creating CLI Command Code Block in reStructuredText\nDESCRIPTION: Shows how to format a code block specifically for command-line interface commands using the console language identifier.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_10\n\nLANGUAGE: rst\nCODE:\n```\n.. code-block:: console\n\n    php spark migrate\n```\n\n----------------------------------------\n\nTITLE: Referencing PHP Functions in reStructuredText\nDESCRIPTION: Shows how to reference a PHP function in the documentation using the php domain extension for Sphinx.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_6\n\nLANGUAGE: rst\nCODE:\n```\n:php:func:`dot_array_search()`\n```\n\n----------------------------------------\n\nTITLE: Setting CLI Stream Filter in PHP\nDESCRIPTION: Example of using the new StreamFilterTrait to capture output from STDOUT and STDERR streams in CLI applications.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.0.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCITestStreamFilter::$buffer = '';\nstream_filter_register('CITestStreamFilter', 'CITestStreamFilter');\nstream_filter_append(STDOUT, 'CITestStreamFilter');\nstream_filter_append(STDERR, 'CITestStreamFilter');\n```\n\n----------------------------------------\n\nTITLE: Updating the next minor version branch after release\nDESCRIPTION: Git commands to update the next minor version branch with changes from develop after the release is complete.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_5\n\nLANGUAGE: console\nCODE:\n```\ngit fetch upstream\ngit switch 4.y\ngit merge upstream/4.y\ngit merge upstream/develop\ngit push upstream HEAD\n```\n\n----------------------------------------\n\nTITLE: CURLRequest Version Configuration in CodeIgniter4\nDESCRIPTION: Reference to the bug fix allowing string values for the version parameter in CURLRequest configuration arrays.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.4.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nversion\n```\n\n----------------------------------------\n\nTITLE: HTML Table Usage in CodeIgniter 3.x\nDESCRIPTION: Demonstrates how to load and use the HTML Table library in CodeIgniter 3.x. It shows setting table headings, adding rows, and generating the table.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_html_tables.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$this->load->library('table');\n\n$this->table->set_heading('Name', 'Color', 'Size');\n\n$this->table->add_row('Fred', 'Blue', 'Small');\n$this->table->add_row('Mary', 'Red', 'Large');\n$this->table->add_row('John', 'Green', 'Medium');\n\necho $this->table->generate();\n```\n\n----------------------------------------\n\nTITLE: Getting Request Object from Services in CodeIgniter\nDESCRIPTION: The Services::request() method now returns either IncomingRequest or CLIRequest. The parameters for this method are now deprecated.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.2.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nServices::request()\n```\n\n----------------------------------------\n\nTITLE: Checking pip versions in Terminal\nDESCRIPTION: Commands to verify pip installation across different operating systems. Shows how to check if pip is correctly installed for Python 3.x.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/README.rst#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip --version\npip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)\n\npip3 --version\npip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)\n\n# For Windows using the Python Launcher\npy -3 -m pip --version\npip 20.0.2 from C:\\Users\\<username>\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pip (python 3.8)\n```\n\n----------------------------------------\n\nTITLE: Defining RST Table of Contents for Data Modeling\nDESCRIPTION: ReStructuredText markup defining the table of contents for data modeling documentation sections, including Model usage and Entity Classes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/models/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n    :titlesonly:\n\n    Using CodeIgniter's Model <model>\n    Using Entity Classes <entities>\n```\n\n----------------------------------------\n\nTITLE: Formatting Logical Operators in PHP\nDESCRIPTION: Guidelines for formatting the negation operator with proper spacing. The negation operator '!' should have one space from its argument.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.md#2025-04-16_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n-!$result\n+! $result\n```\n\n----------------------------------------\n\nTITLE: Using clean_path() Function in CodeIgniter 4\nDESCRIPTION: Shows the replacement of cleanPath() methods with the clean_path() function in various parts of CodeIgniter 4, including Exceptions, BaseCollector, Logger, and TestLogger classes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.0.rst#2025-04-16_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nclean_path()\n```\n\n----------------------------------------\n\nTITLE: Creating Script with Attributes Array\nDESCRIPTION: Creates a script element using an associative array for attributes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\necho script_tag([\n    'src'     => 'js/printer.js',\n    'charset' => 'UTF-8',\n    'defer'   => true\n]);\n```\n\n----------------------------------------\n\nTITLE: Release Branch Creation Example\nDESCRIPTION: Command syntax for creating a new release branch with version updates and documentation generation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/README.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nadmin/release version qualifier\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: This robots.txt configuration allows all web crawlers full access to the website. The 'User-agent: *' directive targets all crawlers, and 'Disallow:' with an empty value indicates no restrictions on crawling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/public/robots.txt#2025-04-16_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: \n```\n\n----------------------------------------\n\nTITLE: Creating External URL References in reStructuredText\nDESCRIPTION: Demonstrates how to create a hyperlink to an external website with custom text.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_5\n\nLANGUAGE: rst\nCODE:\n```\n`CodeIgniter 4 framework <https://github.com/codeigniter4/framework>`_\n```\n\n----------------------------------------\n\nTITLE: Referencing Sections Within the Same Page in reStructuredText\nDESCRIPTION: Demonstrates how to create a reference to another section within the current page using a simple syntax.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_3\n\nLANGUAGE: rst\nCODE:\n```\nSee `Result Rows`_\n```\n\n----------------------------------------\n\nTITLE: Release Preparation Script Examples in Bash\nDESCRIPTION: Example commands showing how to prepare different types of CodeIgniter4 releases, including alpha releases and full version releases.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/workflow.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nadmin/release 4.0.0 alpha.1\n```\n\nLANGUAGE: bash\nCODE:\n```\nadmin/release 4.0.0\n```\n\nLANGUAGE: bash\nCODE:\n```\nadmin/release peanut butter banana\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in reStructuredText\nDESCRIPTION: This snippet creates a local table of contents with a depth of 3 using reStructuredText directives.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.2.rst#2025-04-16_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. contents::\n    :local:\n    :depth: 3\n```\n\n----------------------------------------\n\nTITLE: Using withBodyFormat Method in FeatureTestTrait in PHP\nDESCRIPTION: Reference to the withBodyFormat() method in FeatureTestTrait, which has a changed priority for the request body in version 4.3.7. Users should consult the upgrading guide for details.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.7.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nwithBodyFormat()\n```\n\n----------------------------------------\n\nTITLE: Reconstructing Command Line Options with Long Format in PHP\nDESCRIPTION: Demonstrates how to use the getOptionString() method with a true argument to write long options using two dashes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/cli_request.rst#2025-04-16_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$optionString = $request->getOptionString(true);\n```\n\n----------------------------------------\n\nTITLE: Updating Spark File for CodeIgniter 4.3.0\nDESCRIPTION: Command to copy the updated spark file from the framework to the project root after running composer update.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_430.rst#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncomposer update\ncp vendor/codeigniter4/framework/spark .\n```\n\n----------------------------------------\n\nTITLE: File Upload Implementation in CodeIgniter 3.x\nDESCRIPTION: Example of handling file uploads in CodeIgniter 3.x using the File Uploading Class. This approach requires configuration of upload options and manual validation of upload status.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_file_upload.rst#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nclass Upload extends CI_Controller\n{\n    public function __construct()\n    {\n        parent::__construct();\n        $this->load->helper(array('form', 'url'));\n    }\n\n    public function index()\n    {\n        $this->load->view('upload_form', array('error' => ' '));\n    }\n\n    public function do_upload()\n    {\n        $config['upload_path']      = './uploads/';\n        $config['allowed_types']    = 'gif|jpg|png';\n        $config['max_size']         = 100;\n        $config['max_width']        = 1024;\n        $config['max_height']       = 768;\n\n        $this->load->library('upload', $config);\n\n        if (! $this->upload->do_upload('userfile')) {\n            $error = array('error' => $this->upload->display_errors());\n\n            $this->load->view('upload_form', $error);\n        } else {\n            $data = array('upload_data' => $this->upload->data());\n\n            $this->load->view('upload_success', $data);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running all tests in CodeIgniter 4 on Unix-like systems\nDESCRIPTION: Command to run the entire test suite in a CodeIgniter 4 application using the PHPUnit executable.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/tests/README.md#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n> ./phpunit\n```\n\n----------------------------------------\n\nTITLE: Creating Image with Index Page\nDESCRIPTION: Creates an image element with index page parameter for media controller usage.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/html_helper.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\necho img('images/picture.jpg', true);\n```\n\n----------------------------------------\n\nTITLE: Rebasing onto New Base Branch\nDESCRIPTION: Command to rebase PR branch onto the correct base branch.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_19\n\nLANGUAGE: console\nCODE:\n```\n> git rebase --onto 4.6 develop feat-abc\n```\n\n----------------------------------------\n\nTITLE: Merging develop branch into next minor version branch\nDESCRIPTION: Git commands to merge the develop branch into the next minor version branch before starting the release process. This ensures all commits are properly merged and conflicts are resolved.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngit fetch upstream\ngit switch 4.y\ngit merge upstream/4.y\ngit merge upstream/develop\ngit push upstream HEAD\n```\n\n----------------------------------------\n\nTITLE: Referencing auto_link() Function in PHP\nDESCRIPTION: Refers to the auto_link() function in the URL Helper, which had a bug fix related to its regular expression. The function is now using the same regular expression as CodeIgniter 3.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.5.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n:php:func:`auto_link()`\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents in reStructuredText for CodeIgniter4 Architecture\nDESCRIPTION: This snippet defines a table of contents using reStructuredText syntax. It lists the main architectural topics covered in the CodeIgniter4 documentation, providing a structured overview of the framework's core concepts.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/concepts/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n    :titlesonly:\n\n    structure\n    mvc\n    autoloader\n    services\n    factories\n    http\n    security\n    goals\n```\n\n----------------------------------------\n\nTITLE: Accessing Request Type Methods in CodeIgniter\nDESCRIPTION: CLIRequest::isCLI() now always returns true, while IncommingRequest::isCLI() always returns false. This represents a change in request handling behavior.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.2.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nCLIRequest::isCLI() // Always returns true\nIncommingRequest::isCLI() // Always returns false\n```\n\n----------------------------------------\n\nTITLE: Running Specific PHPUnit Test Group in CodeIgniter 4\nDESCRIPTION: Command to run a specific group of tests in CodeIgniter 4 using PHPUnit's group filter option. The example shows how to run only tests in the 'Database' group.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/tests/_support/HTTP/Files/CookiesHolder.txt#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvendor/bin/phpunit --group Database\n```\n\n----------------------------------------\n\nTITLE: Cloning CodeIgniter4 repositories for release preparation\nDESCRIPTION: Commands to clone both the main CodeIgniter4 repository and the userguide repository for release preparation, after backing up existing directories.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nrm -rf CodeIgniter4.bk userguide.bk\nmv CodeIgniter4 CodeIgniter4.bk\nmv userguide userguide.bk\ngit clone git@github.com:codeigniter4/CodeIgniter4.git\ngit clone git@github.com:codeigniter4/userguide.git\n```\n\n----------------------------------------\n\nTITLE: CodeIgniter 4 Package Structure in RestructuredText\nDESCRIPTION: Detailed hierarchical listing of all packages and components included in CodeIgniter 4.0.0-alpha.1, showing the namespace structure and class organization across the framework.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.0.0-alpha.1.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\nVersion 4.0.0-alpha.1\n=====================\n\nRelease Date: September 28, 2018\n\n**Rewrite of the CodeIgniter framework**\n\n.. contents::\n    :local:\n    :depth: 2\n\nNew Packages List\n-----------------\n\n    - API\n        - \\\\ ResponseTrait\n    - Autoloader\n        - \\\\ AutoLoader, FileLocator\n    - CLI\n        - \\\\ BaseCommand, CLI, CommandRunner, Console\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Branch Backup\nDESCRIPTION: Optional command to create backup of feature branch.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_18\n\nLANGUAGE: console\nCODE:\n```\n> git branch feat-abc.bk feat-abc\n```\n\n----------------------------------------\n\nTITLE: Defining ReStructuredText Table of Contents for CLI Documentation\nDESCRIPTION: ReStructuredText markup defining the table of contents structure for CodeIgniter 4's command line interface documentation. Lists key sections including CLI overview, controllers, Spark commands, custom commands, generators, and libraries.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n##################\nCommand Line Usage\n##################\n\nCodeIgniter 4 can also be used with command line programs.\n\n.. toctree::\n    :titlesonly:\n\n    cli_overview\n    cli_controllers\n    spark_commands\n    cli_commands\n    cli_generators\n    cli_library\n    cli_request\n```\n\n----------------------------------------\n\nTITLE: Deprecated PHP Method References\nDESCRIPTION: List of deprecated methods and their replacements in CodeIgniter 4.1.2\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nTime::instance() -> Time::createFromInstance()\nIncomingRequest::removeRelativeDirectory() -> URI::removeDotSegments()\n\\API\\ResponseTrait::failValidationError -> \\API\\ResponseTrait::failValidationErrors\n```\n\n----------------------------------------\n\nTITLE: Release Notes Structure in RST\nDESCRIPTION: ReStructuredText formatted release notes showing version number, release date, and bug fixes for CodeIgniter 4.4.1\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.4.1.rst#2025-04-16_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nVersion 4.4.1\n#############\n\nRelease Date: September 5, 2023\n\n**4.4.1 release of CodeIgniter4**\n\n.. contents::\n    :local:\n    :depth: 3\n\nBugs Fixed\n**********\n\n- **AutoRouting Legacy:** Fixed a bug that Auto Routing Legacy does not work.\n- **FeatureTest:**\n    - Fixed a bug that FeatureTest may cause risky tests.\n    - Fixed a bug that FeatureTest fails when forceGlobalSecureRequests is true.\n\nSee the repo's\n`CHANGELOG.md <https://github.com/codeigniter4/CodeIgniter4/blob/develop/CHANGELOG.md>`_\nfor a complete list of bugs fixed.\n```\n\n----------------------------------------\n\nTITLE: Viewing Commit History\nDESCRIPTION: Command to view git commit history and IDs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_16\n\nLANGUAGE: console\nCODE:\n```\n> git log\n```\n\n----------------------------------------\n\nTITLE: Checking for removed hidden files in admin directory\nDESCRIPTION: Git command to check for any removed hidden files in the admin directory, as Action deploy scripts don't remove these files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\ncd CodeIgniter4\ngit diff --name-status origin/master admin/\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for CodeIgniter4 Change Logs in reStructuredText\nDESCRIPTION: This snippet defines a table of contents using reStructuredText syntax. It lists all the CodeIgniter4 releases from version 4.6.1 down to 4.0.0-alpha.1, providing a structure for easy navigation through the change logs.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/index.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n    :titlesonly:\n\n    v4.6.1\n    v4.6.0\n    v4.5.8\n    v4.5.7\n    v4.5.6\n    v4.5.5\n    v4.5.4\n    v4.5.3\n    v4.5.2\n    v4.5.1\n    v4.5.0\n    v4.4.8\n    v4.4.7\n    v4.4.6\n    v4.4.5\n    v4.4.4\n    v4.4.3\n    v4.4.2\n    v4.4.1\n    v4.4.0\n    v4.3.8\n    v4.3.7\n    v4.3.6\n    v4.3.5\n    v4.3.4\n    v4.3.3\n    v4.3.2\n    v4.3.1\n    v4.3.0\n    v4.2.12\n    v4.2.11\n    v4.2.10\n    v4.2.9\n    v4.2.8\n    v4.2.7\n    v4.2.6\n    v4.2.5\n    v4.2.4\n    v4.2.3\n    v4.2.2\n    v4.2.1\n    v4.2.0\n    v4.1.9\n    v4.1.8\n    v4.1.7\n    v4.1.6\n    v4.1.5\n    v4.1.4\n    v4.1.3\n    v4.1.2\n    v4.1.1\n    v4.1.0\n    v4.0.5\n    v4.0.4\n    v4.0.3\n    v4.0.0\n    v4.0.0-rc.4\n    v4.0.0-rc.3\n    v4.0.0-rc.2\n    v4.0.0-rc.1\n    v4.0.0-beta.4\n    v4.0.0-beta.3\n    v4.0.0-beta.2\n    v4.0.0-beta.1\n    v4.0.0-alpha.5\n    v4.0.0-alpha.4\n    v4.0.0-alpha.3\n    v4.0.0-alpha.2\n    v4.0.0-alpha.1\n```\n\n----------------------------------------\n\nTITLE: Installing Sphinx Documentation Dependencies with pip\nDESCRIPTION: Defines the Python package dependencies needed to build Sphinx documentation, including specific version constraints for Sphinx, PHP domain extension, docutils, ReadTheDocs theme and Jinja2 templating engine.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/requirements.txt#2025-04-16_snippet_0\n\nLANGUAGE: pip\nCODE:\n```\nsphinx>=5.3.0,<6.0.0\nsphinxcontrib-phpdomain>=0.11.0\ndocutils>=0.19\nsphinx-rtd-theme>=2.0.0,<3.0.0\njinja2>=3.1.3,<4.0.0\n```\n\n----------------------------------------\n\nTITLE: Email Contact Information in Markdown\nDESCRIPTION: Security contact email address for reporting vulnerabilities to the CodeIgniter 4 team\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/SECURITY.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nsecurity@codeigniter.com\n```\n\n----------------------------------------\n\nTITLE: Loading Libraries in CodeIgniter 4\nDESCRIPTION: Examples showing the difference between CI3 and CI4 library loading syntax. CI4 uses namespaced classes and can utilize either direct instantiation or the Factories pattern.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_4xx.rst#2025-04-16_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$this->x = new \\App\\Libraries\\X();\n```\n\nLANGUAGE: php\nCODE:\n```\n$this->x = \\CodeIgniter\\Config\\Factories::libraries('X');\n```\n\n----------------------------------------\n\nTITLE: Updating Composer Packages\nDESCRIPTION: Command to update development dependencies using Composer.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_14\n\nLANGUAGE: console\nCODE:\n```\ncomposer update\n```\n\n----------------------------------------\n\nTITLE: Protected Method Declarations in Database Connections\nDESCRIPTION: List of database connection methods that were changed from public to protected scope to match their parent class methods and align with their intended usage. This affects MySQLi, Postgres, SQLSRV, and SQLite3 connection classes.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_414.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Database\\MySQLi\\Connection::execute()\nCodeIgniter\\Database\\MySQLi\\Connection::_fieldData()\nCodeIgniter\\Database\\MySQLi\\Connection::_indexData()\nCodeIgniter\\Database\\MySQLi\\Connection::_foreignKeyData()\nCodeIgniter\\Database\\Postgre\\Builder::_like_statement()\nCodeIgniter\\Database\\Postgre\\Connection::execute()\nCodeIgniter\\Database\\Postgre\\Connection::_fieldData()\nCodeIgniter\\Database\\Postgre\\Connection::_indexData()\nCodeIgniter\\Database\\Postgre\\Connection::_foreignKeyData()\nCodeIgniter\\Database\\SQLSRV\\Connection::execute()\nCodeIgniter\\Database\\SQLSRV\\Connection::_fieldData()\nCodeIgniter\\Database\\SQLSRV\\Connection::_indexData()\nCodeIgniter\\Database\\SQLSRV\\Connection::_foreignKeyData()\nCodeIgniter\\Database\\SQLite3\\Connection::execute()\nCodeIgniter\\Database\\SQLite3\\Connection::_fieldData()\nCodeIgniter\\Database\\SQLite3\\Connection::_indexData()\nCodeIgniter\\Database\\SQLite3\\Connection::_foreignKeyData()\n```\n\n----------------------------------------\n\nTITLE: Deprecating Cookie Never Expiring Method in PHP\nDESCRIPTION: The method 'withNeverExpiring()' in the CodeIgniter\\Cookie\\Cookie class is being deprecated in this version.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.2.6.rst#2025-04-16_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCodeIgniter\\Cookie\\Cookie::withNeverExpiring()\n```\n\n----------------------------------------\n\nTITLE: Modified Project Files List for CodeIgniter 4.5.2 Upgrade\nDESCRIPTION: List of project files that received updates during the upgrade from CodeIgniter 4.5.1 to 4.5.2. These files are in the project space and require manual intervention to update.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_452.rst#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n- app/Config/DocTypes.php\n- app/Config/Exceptions.php\n- preload.php\n- spark\n- writable/.htaccess\n- writable/cache/index.html\n- writable/debugbar/index.html\n- writable/index.html\n- writable/logs/index.html\n- writable/session/index.html\n```\n\n----------------------------------------\n\nTITLE: Extracting Excerpts using CodeIgniter 4 Text Helper in PHP\nDESCRIPTION: Shows the usage of the excerpt function which extracts a portion of text around a specified phrase. It takes parameters for the text, phrase to extract around, radius of characters, and optional ellipsis character.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/text_helper.rst#2025-04-16_snippet_21\n\nLANGUAGE: php\nCODE:\n```\n$text = 'Quisque vestibulum lorem eu neque vehicula, vitae mollis magna placerat. Duis ac enim sapien. Fusce consectetur magna id quam accumsan, vel dapibus felis sagittis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Duis eu condimentum risus. Praesent sit amet velit auctor, convallis elit vel, ultricies ex. Donec dolor lectus, feugiat quis rhoncus in, finibus sed neque. Quisque egestas enim id purus mollis scelerisque. Fusce tincidunt sollicitudin tempus. Aenean feugiat ex eu sapien eleifend interdum. Cras sed auctor mauris.';\n\n$excerpt = excerpt($text, 'Donec');\necho $excerpt;\n```\n\n----------------------------------------\n\nTITLE: Defining Version and Release Date in reStructuredText\nDESCRIPTION: This snippet defines the version number and release date for CodeIgniter4 version 4.5.2 using reStructuredText syntax.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.2.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n#############\nVersion 4.5.2\n#############\n\nRelease Date: June 10, 2024\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Section Headers\nDESCRIPTION: Section headers for CodeIgniter4 upgrade documentation using ReStructuredText markup syntax. Includes main sections for mandatory changes, breaking changes, and project files.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/next-upgrading-guide.rst#2025-04-16_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n##############################\nUpgrading from {version} to {version}\n##############################\n\n**********************\nMandatory File Changes\n**********************\n\n****************\nBreaking Changes\n****************\n\n*********************\nBreaking Enhancements\n*********************\n\n*************\nProject Files\n*************\n```\n\n----------------------------------------\n\nTITLE: Handling News Item Creation in CodeIgniter 4 Controller\nDESCRIPTION: This method validates form data, saves the news item to the database, and returns a success view upon successful creation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/create_news_items.rst#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\npublic function create()\n{\n    helper('form');\n\n    $data = $this->request->getPost(['title', 'body']);\n\n    // Checks whether the submitted data passed the validation rules.\n    if (! $this->validateData($data, [\n        'title' => 'required|max_length[255]|min_length[3]',\n        'body'  => 'required|max_length[5000]|min_length[10]',\n    ])) {\n        // The validation fails, so returns the form.\n        return $this->new();\n    }\n\n    // Gets the validated data.\n    $post = $this->validator->getValidated();\n\n    $model = model(NewsModel::class);\n\n    $model->save([\n        'title' => $post['title'],\n        'slug'  => url_title($post['title'], '-', true),\n        'body'  => $post['body'],\n    ]);\n\n    return view('templates/header', ['title' => 'Create a news item'])\n        . view('news/success')\n        . view('templates/footer');\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Version and Release Date in reStructuredText\nDESCRIPTION: This snippet defines the version number and release date for CodeIgniter 4.5.1 using reStructuredText syntax. It includes a title, release date, and a brief description of the release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.5.1.rst#2025-04-16_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n#############\nVersion 4.5.1\n#############\n\nRelease Date: April 14, 2024\n\n**4.5.1 release of CodeIgniter4**\n\n.. contents::\n    :local:\n    :depth: 3\n```\n\n----------------------------------------\n\nTITLE: CI4 Email Configuration and Usage Example\nDESCRIPTION: Updated example showing how to configure and send emails using CodeIgniter 4.x's email service, demonstrating the new service() method and updated method naming conventions.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_emails.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\\n\\n$email = service('email');\\n\\n$email->setFrom('your@example.com', 'Your Name');\\n$email->setTo('someone@example.com');\\n$email->setCC('another@another-example.com');\\n$email->setBCC('them@their-example.com');\\n\\n$email->setSubject('Email Test');\\n$email->setMessage('Testing the email class.');\\n\\n$email->send();\n```\n\n----------------------------------------\n\nTITLE: CSRF Implementation in CodeIgniter 4.x Forms\nDESCRIPTION: This code example shows the simplified CSRF protection implementation in CodeIgniter 4.x. Instead of manually creating the CSRF field, it uses the csrf_field() helper function to generate the token input field.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_security.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<form method=\"post\" action=\"targetpage\">\n    <?= csrf_field() ?>\n    <input type=\"text\" name=\"username\" value=\"\" />\n    <input type=\"password\" name=\"password\" value=\"\" size=\"50\" />\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\" />\n</form>\n```\n\n----------------------------------------\n\nTITLE: Implementing the view() Method in Pages Controller\nDESCRIPTION: Complete implementation of the view() method in the Pages controller that checks if a page exists, loads appropriate templates, and handles 404 errors using PageNotFoundException.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/tutorial/static_pages.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\npublic function view($page = 'home')\n{\n    if (! is_file(APPPATH . 'Views/pages/' . $page . '.php')) {\n        // Whoops, we don't have a page for that!\n        throw new PageNotFoundException($page);\n    }\n\n    $data['title'] = ucfirst($page); // Capitalize the first letter\n\n    return view('templates/header', $data)\n        . view('pages/' . $page, $data)\n        . view('templates/footer', $data);\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Standard Query with Single Result (Object Version) in CodeIgniter 4\nDESCRIPTION: Illustrates how to execute a standard SQL query and retrieve a single result as an object using the getRow() method. This is useful when expecting only one row of result.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/examples.rst#2025-04-16_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$query = $db->query('SELECT name, title, email FROM my_table LIMIT 1');\n$row = $query->getRow();\n\necho $row->title;\necho $row->name;\necho $row->email;\n```\n\n----------------------------------------\n\nTITLE: Loading and Using View Parser in CodeIgniter 4.x\nDESCRIPTION: Example showing how to load and use the Parser service in CodeIgniter 4.x to parse a blog template with data.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_view_parser.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace App\\Controllers;\n\nuse CodeIgniter\\Controller;\n\nclass Blog extends Controller\n{\n    public function index()\n    {\n        $data = [\n            'blog_title' => 'My Blog Title',\n            'blog_heading' => 'My Blog Heading'\n        ];\n\n        $parser = service('parser');\n        return $parser->setData($data)->render('blog_template');\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Branches for Enhancements\nDESCRIPTION: Commands to create a new branch for enhancements based on the next minor version branch (e.g., 4.6). This ensures new features go into the appropriate release.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n> git switch 4.6\n> git switch -c new/mind-reader\n```\n\n----------------------------------------\n\nTITLE: Resetting Transaction Status in CodeIgniter 4 PHP\nDESCRIPTION: Added a new method BaseConnection::resetTransStatus() to reset the transaction status in database connections. This allows for more control over transaction handling.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.6.0.rst#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nBaseConnection::resetTransStatus()\n```\n\n----------------------------------------\n\nTITLE: Creating Hidden Input Fields with Nested Arrays in CodeIgniter 4\nDESCRIPTION: This snippet demonstrates how to create hidden input fields with nested arrays using the form_hidden() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n$data = [\n    'name'  => 'John Doe',\n    'email' => 'john@example.com',\n    'url'   => 'http://example.com',\n    'colors' => [\n        'red',\n        'blue',\n        'green'\n    ]\n];\n\necho form_hidden($data);\n```\n\n----------------------------------------\n\nTITLE: Adding Extra Attributes to Input Field in CodeIgniter 4\nDESCRIPTION: This example shows how to add extra attributes to an input field using the form_input() function by passing them as a string in the third parameter.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\necho form_input('username', 'johndoe', 'maxlength=\"100\" size=\"50\" style=\"width:50%\"');\n```\n\n----------------------------------------\n\nTITLE: Updating Filter Paths Configuration - Before\nDESCRIPTION: Example of URL-encoded filter paths configuration that needs to be updated to use URL-decoded values for proper filter processing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_447.rst#2025-04-16_snippet_1\n\nLANGUAGE: php\nCODE:\n```\npublic array $globals = [\n    'before' => [\n        'csrf' => ['except' => '%E6%97%A5%E6%9C%AC%E8%AA%9E/*'],\n    ],\n    // ...\n];\n```\n\n----------------------------------------\n\nTITLE: Creating Hidden Input Fields with Extra Attributes in CodeIgniter 4\nDESCRIPTION: This example shows how to create hidden input fields with additional HTML attributes using the form_hidden() function.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/form_helper.rst#2025-04-16_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\necho form_hidden('email', 'joe@example.com', ['id' => 'hidden_email']);\necho form_hidden('user_id', '', ['id' => 'hidden_user_id']);\n```\n\n----------------------------------------\n\nTITLE: Creating Section Labels and References in reStructuredText\nDESCRIPTION: Demonstrates how to add a label to a section header and reference it elsewhere in the documentation. This is essential for creating cross-references within the documentation.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/documentation.rst#2025-04-16_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. _curlrequest-request-options-headers:\n\nheaders\n=======\n```\n\n----------------------------------------\n\nTITLE: Adding Upstream Remote for Repository Synchronization\nDESCRIPTION: Command to add the original CodeIgniter repository as a remote called 'upstream', enabling synchronization between your fork and the main project.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> git remote add upstream UPSTREAM_URL\n```\n\n----------------------------------------\n\nTITLE: Setting Manual Index Names in CodeIgniter 4 Database Forge\nDESCRIPTION: Demonstration of manually setting index names using the updated Forge methods in CodeIgniter 4.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/changelogs/v4.3.0.rst#2025-04-16_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$forge->addKey('title', false, false, 'my_title_index');\n$forge->addPrimaryKey('id', 'my_primary_key');\n$forge->addUniqueKey(['email', 'username'], 'my_unique_key');\n```\n\n----------------------------------------\n\nTITLE: Setting HTML5 Compatibility in PHP\nDESCRIPTION: Configuration to set HTML5 compatibility for void HTML elements in helpers. Setting this to false makes the output compatible with XHTML.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/installation/upgrade_430.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$html5\n```\n\n----------------------------------------\n\nTITLE: Setting Default Database Group in CodeIgniter 4\nDESCRIPTION: This example shows how to set the default database group in CodeIgniter 4's database configuration. This determines which connection group will be used by default.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/database/configuration.rst#2025-04-16_snippet_7\n\nLANGUAGE: php\nCODE:\n```\npublic $defaultGroup = 'default';\n```\n\n----------------------------------------\n\nTITLE: Creating a symbolic link for PHPUnit in macOS/Linux\nDESCRIPTION: Command to create a symbolic link to the PHPUnit executable for easier test execution on macOS or Linux systems.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/starter/tests/README.md#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n> ln -s ./vendor/bin/phpunit ./phpunit\n```\n\n----------------------------------------\n\nTITLE: Creating a new minor version branch\nDESCRIPTION: Git commands to create a new minor version branch from the develop branch for the next next minor version.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/admin/RELEASE.md#2025-04-16_snippet_6\n\nLANGUAGE: console\nCODE:\n```\ngit fetch upstream\ngit switch develop\ngit switch -c 4.z\ngit push upstream HEAD\n```\n\n----------------------------------------\n\nTITLE: Adding Filter for Invalid Character Detection in User Input\nDESCRIPTION: Introduces a new filter to check for invalid characters in user input, enhancing input validation and security.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nfeat: add filter to check invalid chars in user input\n```\n\n----------------------------------------\n\nTITLE: Getting Filters for a Specific Route\nDESCRIPTION: Demonstrates how to check which filters would run for a specific route and position.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/testing/controllers.rst#2025-04-16_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$result = $this->getFiltersForRoute('admin/users', 'before');\n// ['toolbar', 'adminFilter', 'usersFilter']\n```\n\n----------------------------------------\n\nTITLE: Suppressing Header Output in Spark Commands\nDESCRIPTION: Shows how to suppress the default header output when running spark commands using the --no-header option.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/cli/spark_commands.rst#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nphp spark env\n```\n\nLANGUAGE: console\nCODE:\n```\nphp spark env --no-header\n```\n\n----------------------------------------\n\nTITLE: Writing Data to File in CodeIgniter 4\nDESCRIPTION: Demonstrates writing data to a file using write_file()\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/helpers/filesystem_helper.rst#2025-04-16_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$data = 'Some file data';\nif (write_file('path/to/file.txt', $data)) {\n    echo 'File written!';\n} else {\n    echo 'Unable to write the file';\n}\n```\n\n----------------------------------------\n\nTITLE: Getting HTTP Request Method in CodeIgniter 4\nDESCRIPTION: Retrieves the HTTP request method from $_SERVER['REQUEST_METHOD'].\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/user_guide_src/source/incoming/request.rst#2025-04-16_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$method = $request->getMethod();\n\n// Lets you check it is being called from a specific method\nif ($request->getMethod() === 'post')\n{\n    // do something\n}\n```\n\n----------------------------------------\n\nTITLE: Adding SecureHeaders Filter\nDESCRIPTION: Introduces a new SecureHeaders filter to enhance security-related HTTP headers in responses.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/changelogs/CHANGELOG_4.1.md#2025-04-16_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nfeat: add SecureHeaders filter\n```\n\n----------------------------------------\n\nTITLE: Creating Backup Branch\nDESCRIPTION: Optional command to create a backup branch before rebasing.\nSOURCE: https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/workflow.md#2025-04-16_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n> git branch fix/problem123.bk fix/problem123\n```"
  }
]
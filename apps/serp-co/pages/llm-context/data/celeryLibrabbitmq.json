[
  {
    "owner": "celery",
    "repo": "librabbitmq",
    "content": "TITLE: Publishing messages with librabbitmq\nDESCRIPTION: Example of publishing a message to an exchange with a routing key using librabbitmq.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n>>> channel.basic_publish(body, exchange, routing_key, ...)\n```\n\n----------------------------------------\n\nTITLE: Consuming messages with librabbitmq\nDESCRIPTION: Example of setting up a consumer to handle messages from a queue, including a callback function and event loop for continuous consumption.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n>>> def dump_message(message):\n...     print(\"Body:'%s', Properties:'%s', DeliveryInfo:'%s'\" % (\n...         message.body, message.properties, message.delivery_info))\n...     message.ack()\n\n>>> channel.basic_consume(queue, ..., callback=dump_message)\n\n>>> while True:\n...    connection.drain_events()\n```\n\n----------------------------------------\n\nTITLE: Establishing a standalone connection in librabbitmq\nDESCRIPTION: Example of creating a connection to RabbitMQ server directly using librabbitmq, including creating a channel and declaring exchanges/queues.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n>>> from librabbitmq import Connection\n\n>>> conn = Connection(host=\"localhost\", userid=\"guest\",\n...                   password=\"guest\", virtual_host=\"/\")\n\n>>> channel = conn.channel()\n>>> channel.exchange_declare(exchange, type, ...)\n>>> channel.queue_declare(queue, ...)\n>>> channel.queue_bind(queue, exchange, routing_key)\n```\n\n----------------------------------------\n\nTITLE: Polling for messages with librabbitmq\nDESCRIPTION: Example of polling for messages using basic_get instead of setting up a consumer, suitable for occasional message retrieval.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n>>> message = channel.basic_get(queue, ...)\n>>> if message:\n...     dump_message(message)\n...     print(\"Body:'%s' Properties:'%s' DeliveryInfo:'%s'\" % (\n...         message.body, message.properties, message.delivery_info))\n```\n\n----------------------------------------\n\nTITLE: Cleanup operations with librabbitmq\nDESCRIPTION: Example of unbinding a queue and closing channel and connection resources in librabbitmq.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n>>> channel.queue_unbind(queue, ...)\n>>> channel.close()\n>>> connection.close()\n```\n\n----------------------------------------\n\nTITLE: Using librabbitmq with Kombu\nDESCRIPTION: Example of creating a connection using Kombu with the librabbitmq transport.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n>>> from kombu import Connection\n>>> x = Connection(\"librabbitmq://\")\n```\n\n----------------------------------------\n\nTITLE: Installing librabbitmq via pip\nDESCRIPTION: Command to install the librabbitmq package using pip package manager.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install librabbitmq\n```\n\n----------------------------------------\n\nTITLE: Installing librabbitmq from source\nDESCRIPTION: Commands to download, extract, build, and install librabbitmq from source.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ tar xvfz librabbitmq-0.0.0.tar.gz\n$ cd librabbitmq-0.0.0\n$ python setup.py build\n# python setup.py install # as root\n```\n\n----------------------------------------\n\nTITLE: Cloning and installing development version\nDESCRIPTION: Commands to clone the librabbitmq repository and install the development version.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git://github.com/celery/librabbitmq.git\n$ cd librabbitmq\n$ make install        # or make develop\n```\n\n----------------------------------------\n\nTITLE: Defining Dependencies for librabbitmq in Celery\nDESCRIPTION: Specifies the required Python packages and their minimum versions for the librabbitmq project. It requires six version 1.0.0 or higher and amqp version 1.4.6 or higher.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/requirements/default.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsix>=1.0.0\namqp>=1.4.6\n```\n\n----------------------------------------\n\nTITLE: Installing librabbitmq via easy_install\nDESCRIPTION: Command to install the librabbitmq package using easy_install.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/README.rst#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ easy_install librabbitmq\n```\n\n----------------------------------------\n\nTITLE: Installing Requirements for Running Tests in librabbitmq\nDESCRIPTION: Command sequence demonstrating how to install both default and test dependencies for running the unittest suite. This installs the core dependencies first, followed by the test-specific dependencies.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/requirements/README.rst#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install -U -r requirements/default.txt\n$ pip install -U -r requirements/test.txt\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies for librabbitmq Project\nDESCRIPTION: This requirements file lists all the dependencies needed for the librabbitmq project. It includes mock for testing, six for Python 2/3 compatibility, amqp for messaging protocol support, and coverage for code coverage analysis.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/requirements/test-ci.txt#2025-04-23_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nmock\nsix>=1.0.0\namqp>=1.4.6\ncoverage>=3.0\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Development Dependencies\nDESCRIPTION: Lists required development tools including flake8 for code style checking, flakeplus for additional linting rules, and tox for automated testing across Python versions.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/requirements/pkgutils.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nflake8\nflakeplus\ntox\n```\n\n----------------------------------------\n\nTITLE: Specifying Documentation Dependencies for librabbitmq\nDESCRIPTION: Lists the Python packages required for building documentation for the librabbitmq project. It includes Sphinx for documentation generation and the sphinxcontrib-issuetracker extension (version 0.9 or higher) for linking to issue trackers in the documentation.\nSOURCE: https://github.com/celery/librabbitmq/blob/master/requirements/docs.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nSphinx\nsphinxcontrib-issuetracker>=0.9\n```"
  }
]
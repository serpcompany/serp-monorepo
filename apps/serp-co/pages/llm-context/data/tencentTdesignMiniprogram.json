[
  {
    "owner": "tencent",
    "repo": "tdesign-miniprogram",
    "content": "TITLE: Installing TDesign MiniProgram with npm\nDESCRIPTION: Command to install the TDesign MiniProgram UI component library using npm. After installation, npm needs to be built in WeChat developer tools.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i tdesign-miniprogram -S --production\n```\n\n----------------------------------------\n\nTITLE: Using TDesign Button Component in WXML\nDESCRIPTION: HTML markup showing how to use the registered TDesign button component in a WeChat MiniProgram WXML template.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<t-button theme=\"primary\">按钮</t-button>\n```\n\n----------------------------------------\n\nTITLE: Installing TDesign MiniProgram via NPM\nDESCRIPTION: Command to install the TDesign MiniProgram library using NPM. After installation, build NPM in WeChat Developer Tools.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i tdesign-miniprogram -S --production\n```\n\n----------------------------------------\n\nTITLE: Setting Up Development Environment for TDesign Miniprogram\nDESCRIPTION: Commands to set up the development environment for TDesign Miniprogram. Includes installing dependencies and running the component compilation process.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# 安装项目依赖\nnpm install\n\n# 执行组件编译\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing TDesign Miniprogram with NPM\nDESCRIPTION: Command to install the TDesign Miniprogram component library via NPM. This is the recommended installation method rather than copying source code.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i tdesign-miniprogram -S --production\n```\n\n----------------------------------------\n\nTITLE: Project Setup Commands\nDESCRIPTION: Bash commands for installing project dependencies and starting the development compilation process for the TDesign MiniProgram project.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.en-US.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Install project dependencies\nnpm install\n\n# compile\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Using TDesign Button Component in WXML\nDESCRIPTION: Example of using the imported TDesign button component in a Wechat MiniProgram WXML file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<t-button theme=\"primary\">按钮</t-button>\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Paths for TDesign MiniProgram\nDESCRIPTION: Modification to tsconfig.json to specify paths for TypeScript development with TDesign MiniProgram components.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"paths\": {\n      \"tdesign-miniprogram/*\":[\"./miniprogram/miniprogram_npm/tdesign-miniprogram/*\"]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Paths for TDesign\nDESCRIPTION: JSON configuration for tsconfig.json to specify paths for TDesign components when using TypeScript for development.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"paths\": {\n      \"tdesign-miniprogram/*\":[\"./miniprogram/miniprogram_npm/tdesign-miniprogram/*\"]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing TDesign Button Component in WeChat Mini Program\nDESCRIPTION: JSON configuration to import a TDesign button component in a WeChat Mini Program. This example shows how to register the component in the usingComponents section.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/README.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-button\": \"tdesign-miniprogram/button/button\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Global Theme Colors with CSS Variables\nDESCRIPTION: This snippet shows how to define global theme colors using CSS Variables. It includes variables for the main brand color, success color, warning color, and error color.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-theme.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n@brand-color: var(--td-brand-color, #0052d9); // 主题色\n@success-color: var(--td-success-color, #00a870); // 成功\n@warning-color: var(--td-warning-color, #ed7b2f); // 警告\n@error-color: var(--td-error-color, #e34d59); // 失败\n```\n\n----------------------------------------\n\nTITLE: Using style and custom-style with virtualHost enabled\nDESCRIPTION: Example showing how to use both style and custom-style properties to override component styling when virtualHost is enabled. Both methods will directly apply styles to the component's root element.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<t-button style=\"color: red\">填充按钮</t-button>\n\n<t-button custom-style=\"color: red\">填充按钮</t-button>\n```\n\n----------------------------------------\n\nTITLE: Configuring Dark Mode in WeChat Mini Program\nDESCRIPTION: JSON configuration required in app.json to enable dark mode support for the mini program.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/dark-mode.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"darkmode\": true // 开启深色模式\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding styles by disabling style isolation in a page\nDESCRIPTION: Example of overriding component styles by targeting TDesign component classes directly in the page's stylesheets, which is possible because TDesign components have addGlobalClass enabled.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<t-button theme=\"primary\" >填充按钮</t-button>\n```\n\nLANGUAGE: css\nCODE:\n```\n.t-button--primary {\n  background-color: navy;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TDesign MiniProgram\nDESCRIPTION: Command to install project dependencies using npm.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Brand Color in app.wxss\nDESCRIPTION: This snippet demonstrates how to set a custom brand color by overriding the --td-brand-color CSS Variable in the app.wxss file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-theme.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\npage {\n  --td-brand-color: navy; // 任何你想要的主题色\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Guide Component in Mini Program\nDESCRIPTION: Configuration code for importing the Guide component either globally in app.json or locally in a page's index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/guide/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-guide\": \"tdesign-miniprogram/guide/guide\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using CSS Variables for Dark Mode\nDESCRIPTION: Example of using Design Token CSS variables for text color styling to support dark mode.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/dark-mode.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.text {\n  font-size: 28rpx;\n  color: var(--td-text-color-secondary); // 使用 CSS Variable\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ActionSheetItem Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of an ActionSheetItem, which is used in the 'items' prop of the ActionSheet component. It specifies the properties that can be set for each action sheet item.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/action-sheet/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ActionSheetItem { \n  label: string; \n  color?: string; \n  disabled?: boolean; \n  icon?: string; \n  suffixIcon?: string \n}\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Variables for Button Customization\nDESCRIPTION: This snippet defines a wide range of CSS variables for customizing button appearances, including colors, sizes, borders, and states for different button types. It covers variables for default, primary, danger, light, and ghost buttons, as well as their active, disabled, and outline states.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/button/README.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n--td-button-border-radius: @radius-default;\n--td-button-border-width: 4rpx;\n--td-button-danger-active-bg-color: @error-color-active;\n--td-button-danger-active-border-color: @error-color-active;\n--td-button-danger-bg-color: @error-color;\n--td-button-danger-border-color: @error-color;\n--td-button-danger-color: @text-color-anti;\n--td-button-danger-dashed-border-color: @button-danger-dashed-color;\n--td-button-danger-dashed-color: @error-color;\n--td-button-danger-dashed-disabled-color: @button-danger-disabled-color;\n--td-button-danger-disabled-bg: @error-color-3;\n--td-button-danger-disabled-border-color: @error-color-3;\n--td-button-danger-disabled-color: @font-white-1;\n--td-button-danger-outline-active-bg-color: @bg-color-container-active;\n--td-button-danger-outline-active-border-color: @error-color-active;\n--td-button-danger-outline-border-color: @button-danger-outline-color;\n--td-button-danger-outline-color: @error-color;\n--td-button-danger-outline-disabled-color: @error-color-3;\n--td-button-danger-text-active-bg-color: @bg-color-container-active;\n--td-button-danger-text-color: @error-color;\n--td-button-danger-text-disabled-color: @button-danger-disabled-color;\n--td-button-default-active-bg-color: @bg-color-component-active;\n--td-button-default-active-border-color: @bg-color-component-active;\n--td-button-default-bg-color: @bg-color-component;\n--td-button-default-border-color: @bg-color-component;\n--td-button-default-color: @text-color-primary;\n--td-button-default-disabled-bg: @bg-color-component-disabled;\n--td-button-default-disabled-border-color: @bg-color-component-disabled;\n--td-button-default-disabled-color: @text-color-disabled;\n--td-button-default-outline-active-bg-color: @bg-color-container-active;\n--td-button-default-outline-active-border-color: @component-border;\n--td-button-default-outline-border-color: @component-border;\n--td-button-default-outline-color: @text-color-primary;\n--td-button-default-outline-disabled-color: @component-border;\n--td-button-default-text-active-bg-color: @bg-color-container-active;\n--td-button-extra-small-font-size: @font-size-base;\n--td-button-extra-small-height: 56rpx;\n--td-button-extra-small-icon-font-size: 36rpx;\n--td-button-extra-small-padding-horizontal: 16rpx;\n--td-button-font-weight: 600;\n--td-button-ghost-border-color: @button-ghost-color;\n--td-button-ghost-color: @text-color-anti;\n--td-button-ghost-danger-border-color: @error-color;\n--td-button-ghost-danger-color: @error-color;\n--td-button-ghost-danger-hover-color: @error-color-active;\n--td-button-ghost-disabled-color: @font-white-4;\n--td-button-ghost-hover-color: @font-white-2;\n--td-button-ghost-primary-border-color: @brand-color;\n--td-button-ghost-primary-color: @brand-color;\n--td-button-ghost-primary-hover-color: @brand-color-active;\n--td-button-icon-border-radius: 8rpx;\n--td-button-icon-spacer: @spacer;\n--td-button-large-font-size: @font-size-m;\n--td-button-large-height: 96rpx;\n--td-button-large-icon-font-size: 48rpx;\n--td-button-large-padding-horizontal: 40rpx;\n--td-button-light-active-bg-color: @brand-color-light-active;\n--td-button-light-active-border-color: @brand-color-light-active;\n--td-button-light-bg-color: @brand-color-light;\n--td-button-light-border-color: @brand-color-light;\n--td-button-light-color: @brand-color;\n--td-button-light-disabled-bg: @brand-color-light;\n--td-button-light-disabled-border-color: @brand-color-light;\n--td-button-light-disabled-color: @brand-color-disabled;\n--td-button-light-outline-active-bg-color: @brand-color-light-active;\n--td-button-light-outline-active-border-color: @brand-color-active;\n--td-button-light-outline-bg-color: @brand-color-light;\n--td-button-light-outline-border-color: @button-light-outline-color;\n--td-button-light-outline-color: @brand-color;\n--td-button-light-outline-disabled-color: @brand-color-disabled;\n--td-button-light-text-active-bg-color: @bg-color-container-active;\n--td-button-light-text-color: @brand-color;\n--td-button-medium-font-size: @font-size-m;\n--td-button-medium-height: 80rpx;\n--td-button-medium-icon-font-size: 40rpx;\n--td-button-medium-padding-horizontal: 32rpx;\n--td-button-primary-active-bg-color: @brand-color-active;\n--td-button-primary-active-border-color: @brand-color-active;\n--td-button-primary-bg-color: @brand-color;\n--td-button-primary-border-color: @brand-color;\n--td-button-primary-color: @text-color-anti;\n--td-button-primary-dashed-border-color: @button-primary-dashed-color;\n--td-button-primary-dashed-color: @brand-color;\n--td-button-primary-dashed-disabled-color: @brand-color-disabled;\n--td-button-primary-disabled-bg: @brand-color-disabled;\n--td-button-primary-disabled-border-color: @brand-color-disabled;\n--td-button-primary-disabled-color: @text-color-anti;\n--td-button-primary-outline-active-bg-color: @bg-color-container-active;\n--td-button-primary-outline-active-border-color: @brand-color-active;\n--td-button-primary-outline-border-color: @button-primary-outline-color;\n--td-button-primary-outline-color: @brand-color;\n--td-button-primary-outline-disabled-color: @brand-color-disabled;\n--td-button-primary-text-active-bg-color: @bg-color-container-active;\n--td-button-primary-text-color: @brand-color;\n--td-button-primary-text-disabled-color: @brand-color-disabled;\n--td-button-small-font-size: @font-size-base;\n--td-button-small-height: 64rpx;\n--td-button-small-icon-font-size: 36rpx;\n--td-button-small-padding-horizontal: 24rpx;\n```\n\n----------------------------------------\n\nTITLE: SwipeCell Usage Example with Left Swipe Action\nDESCRIPTION: An example of using the SwipeCell component with a left swipe action. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/swipe-cell/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{ left }}\n```\n\n----------------------------------------\n\nTITLE: Importing Design Token Styles\nDESCRIPTION: CSS import statement for including Design Token variables in the app.wxss file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/dark-mode.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@import 'miniprogram_npm/tdesign-miniprogram/common/style/theme/_index.wxss'; // 引入主题变量\n```\n\n----------------------------------------\n\nTITLE: Using external style classes with TDesign components\nDESCRIPTION: Example of using TDesign's predefined external style classes (t-class-*) to apply custom styles to specific parts of components. Important to use !important to ensure style priority.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<t-button t-class-loading=\"red-loading\">填充按钮</t-button>\n```\n\nLANGUAGE: css\nCODE:\n```\n.red-loading {\n  color: red !important;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing TDesign Miniprogram via NPM\nDESCRIPTION: Command to install the TDesign miniprogram component library using NPM. This is the first step to add TDesign to your project.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/row/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i tdesign-miniprogram\n```\n\n----------------------------------------\n\nTITLE: Installing Footer Component in Tencent Design Miniprogram\nDESCRIPTION: JSON configuration to import the Footer component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/footer/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-footer\": \"tdesign-miniprogram/footer/footer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Rate Component Colors\nDESCRIPTION: This snippet shows how to customize the colors of the Rate component by setting specific CSS Variables for selected and unselected states.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-theme.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\npage {\n  --td-rate-selected-color: #ed7b2f; /* 选中的颜色 */\n  --td-rate-unselected-color: #e3e6eb; /* 未选中的颜色 */\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ActionSheetTriggerSource Type in TypeScript\nDESCRIPTION: This TypeScript type definition specifies the possible trigger sources for the ActionSheet's close event. It includes 'overlay', 'command', and 'select' as possible values.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/action-sheet/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype ActionSheetTriggerSource = 'overlay' | 'command' | 'select'\n```\n\n----------------------------------------\n\nTITLE: Using ActionSheet Component with JavaScript Command\nDESCRIPTION: Example of calling the ActionSheet component programmatically using JavaScript commands instead of component references. This creates a list-type action sheet with default, disabled, and warning options.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/action-sheet/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport ActionSheet, { ActionSheetTheme } from 'tdesign-miniprogram/action-sheet/index';\n\n// 指令调用不同于组件引用不需要传入visible\nconst basicListOption: ActionSheetShowOption = {\n  theme: ActionSheetTheme.List,\n  selector: '#t-action-sheet',\n  items: [\n    {\n      label: '默认选项',\n    },\n    {\n      label: '失效选项',\n      disabled: true,\n    },\n    {\n      label: '警告选项',\n      color: '#e34d59',\n    },\n  ],\n};\n\nconst handler = ActionSheet.show(basicListOption);\n```\n\n----------------------------------------\n\nTITLE: Importing TDesign Base Styles in App WXSS\nDESCRIPTION: Code snippet showing how to import the base styles from the TDesign miniprogram package into your app.wxss file. This ensures consistent styling across all TDesign components.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/row/README.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@import 'tdesign-miniprogram/dist/tdesign.wxss';\n```\n\n----------------------------------------\n\nTITLE: Closing ActionSheet Programmatically\nDESCRIPTION: Code snippet showing how to close an ActionSheet that was opened using the command approach.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/action-sheet/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhandler.close();\n```\n\n----------------------------------------\n\nTITLE: Importing Sticky Component in TDesign MiniProgram\nDESCRIPTION: This snippet shows how to import the Sticky component in a MiniProgram application, either globally in app.json or locally in a page or component's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/sticky/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-sticky\": \"tdesign-miniprogram/sticky/sticky\"\n}\n```\n\n----------------------------------------\n\nTITLE: Dark Mode Adaptation for Special Components\nDESCRIPTION: HTML markup examples showing how to adapt TabBar and root-portal components for dark mode support using the .page class.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/dark-mode.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n// 开启虚拟节点\n<view class=\"page\" >\n  <t-tab-bar  />\n</view>\n\n// 不开启虚拟节点\n<t-tab-bar class=\"page\" />\n\n// root-portal 场景\n<root-portal>\n\t<view class=\"page\">\n\t</view>\n</root-portal>\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Declaration File\nDESCRIPTION: Configuration for adding TypeScript declaration files to support TDesign miniprogram components. This setup enables TypeScript autocomplete and type checking for TDesign components.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/row/README.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"paths\": {\n      \"tdesign-miniprogram/*\": [\"./miniprogram/miniprogram_npm/tdesign-miniprogram/*\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component in WeChat Miniprogram\nDESCRIPTION: Configuration for importing the Button component in a WeChat Miniprogram. This can be added globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/button/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-button\": \"tdesign-miniprogram/button/button\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Avatar Components in WeChat Mini Program\nDESCRIPTION: Code snippet showing how to import the Avatar and AvatarGroup components in a WeChat Mini Program, either globally in app.json or locally in page-specific index.json files.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/avatar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-avatar\": \"tdesign-miniprogram/avatar/avatar\",\n  \"t-avatar-group\": \"tdesign-miniprogram/avatar-group/avatar-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using custom-style with virtualHost disabled\nDESCRIPTION: Example of using the custom-style property to override component styling when virtualHost is disabled. This is necessary because style would be captured by the component wrapper rather than passed to the internal elements.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<t-button custom-style=\"color: red\">填充按钮</t-button>\n```\n\n----------------------------------------\n\nTITLE: Initializing Slider in Hidden Container\nDESCRIPTION: Example of how to properly initialize a slider component when it's wrapped in a hidden container, requiring manual initialization after revealing.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/slider/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<t-slider id=\"slider\" />\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst $slider = this.selectComponent('#slider');\n\n$slider.init();\n```\n\n----------------------------------------\n\nTITLE: Dialog CSS Variables\nDESCRIPTION: CSS variables for customizing the Dialog component's appearance, including dimensions, colors, and typography.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/dialog/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n--td-dialog-body-max-height: 912rpx;\n--td-dialog-border-radius: @radius-extra-large;\n--td-dialog-close-color: @text-color-placeholder;\n--td-dialog-content-color: @text-color-secondary;\n--td-dialog-content-font-size: 32rpx;\n--td-dialog-content-line-height: 48rpx;\n--td-dialog-title-color: @text-color-primary;\n--td-dialog-title-font-size: 36rpx;\n--td-dialog-title-line-height: 52rpx;\n--td-dialog-width: 622rpx;\n```\n\n----------------------------------------\n\nTITLE: Importing Cascader Component in JSON Configuration\nDESCRIPTION: Configuration snippet showing how to import the Cascader component either globally in app.json or locally in a page's index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/cascader/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-cascader\": \"tdesign-miniprogram/cascader/cascader\"\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding styles in a custom component with shared styleIsolation\nDESCRIPTION: Example showing how to override TDesign component styles from within a custom component by setting the styleIsolation option to 'shared'.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<t-button theme=\"primary\" >填充按钮</t-button>\n```\n\nLANGUAGE: js\nCODE:\n```\nComponent({\n  options: {\n    styleIsolation: 'shared'\n  }\n})\n```\n\nLANGUAGE: css\nCODE:\n```\n.t-button--primary {\n  background-color: navy;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component in Mini Program\nDESCRIPTION: Configuration to import the Button component globally in the app.json or locally in specific page/component index.json files.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/button/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-button\": \"tdesign-miniprogram/button/button\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Loading Component in WeChat Mini Program\nDESCRIPTION: JSON configuration to import the Loading component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/loading/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-loading\": \"tdesign-miniprogram/loading/loading\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML result with virtualHost disabled\nDESCRIPTION: Shows how the button component is rendered in the DOM when virtualHost is disabled. The component creates a wrapper element, and the style is correctly applied to the internal button element.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<t-button>\n  <button class=\"t-button\" style=\"color: red\">填充按钮</button>\n<t-button>\n```\n\n----------------------------------------\n\nTITLE: Importing Cell Components in Mini Program\nDESCRIPTION: Configuration for importing the Cell and CellGroup components globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/cell/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-cell\": \"tdesign-miniprogram/cell/cell\",\n  \"t-cell-group\": \"tdesign-miniprogram/cell-group/cell-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Toast Component Props Table in Markdown\nDESCRIPTION: Markdown table defining the available props for the Toast component, including their types, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/toast/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ndirection | String | row | options: row/column | N\nduration | Number | 2000 | \\- | N\nicon | String / Object / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nmessage | String / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\noverlay-props | Object | - | Typescript：`OverlayProps `，[Overlay API Documents](./overlay?tab=api)。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/toast/type.ts) | N\nplacement | String | middle | options:  top/middle/bottom | N\nprevent-scroll-through | Boolean | false | \\- | N\nshow-overlay | Boolean | false | \\- | N\ntheme | String | - | options: loading/success/warning/error | N\nusing-custom-navbar | Boolean | false | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Importing Slider Component in Miniprogram\nDESCRIPTION: Configuration for importing the Slider component either globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/slider/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-slider\": \"tdesign-miniprogram/slider/slider\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Input Component in Mini Program\nDESCRIPTION: This snippet shows how to import the Input component in the app.json or page's index.json file for global or local usage respectively.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/input/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-input\": \"tdesign-miniprogram/input/input\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing BackTop Component in WeChat Mini Program\nDESCRIPTION: Configuration for importing the BackTop component either globally in app.json or locally in a page or component's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/back-top/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n\"t-back-top\": \"tdesign-miniprogram/back-top/back-top\",\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Upload File Structure in TypeScript\nDESCRIPTION: TypeScript interface definition for the structure of an uploaded file, including properties like URL, name, size, type, and status.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/upload/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UploadFile { url: string; name?: string; size?: number; type?: 'image' | 'video'; percent?: number; status: 'loading' | 'reload' | 'failed' | 'done' }\n```\n\n----------------------------------------\n\nTITLE: Importing Link Component in JSON Configuration\nDESCRIPTION: Shows how to import the Link component globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/link/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-link\": \"tdesign-miniprogram/link/link\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Icon Component in Miniprogram\nDESCRIPTION: Configuration for importing the Icon component either globally in app.json or locally in component/page index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/icon/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-icon\": \"tdesign-miniprogram/icon/icon\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Row and Col Components in miniprogram\nDESCRIPTION: JSON configuration to import the Row and Col components globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/col/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-row\": \"tdesign-miniprogram/row/row\",\n  \"t-col\": \"tdesign-miniprogram/col/col\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Drawer Props in Markdown\nDESCRIPTION: This snippet defines the props available for the Drawer component, including their names, types, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/drawer/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Drawer Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nclose-on-overlay-click | Boolean | true | \\- | N\ndestroy-on-close | Boolean | false | \\- | N\nfooter | Slot | - | `0.29.0`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nitems | Array | - | Typescript：`DrawerItem[] ` `interface DrawerItem { title: string; icon: string; }。[详细类型定义](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/drawer/type.ts)`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/drawer/type.ts) | N\nplacement | String | right | options: left/right | N\nshow-overlay | Boolean | true | \\- | N\ntitle | String / Slot | - | `0.29.0`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nusing-custom-navbar | Boolean | false | \\- | N\nvisible | Boolean | false | \\- | N\nz-index | Number | 11500 | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Importing PullDownRefresh Component in Mini Program\nDESCRIPTION: Configuration for importing the PullDownRefresh component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/pull-down-refresh/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-pull-down-refresh\": \"tdesign-miniprogram/pull-down-refresh/pull-down-refresh\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing DropdownMenu Components in Mini Program\nDESCRIPTION: JSON configuration for importing the DropdownMenu and DropdownItem components in a Mini Program app.json or page.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/dropdown-menu/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-dropdown-menu\": \"tdesign-miniprogram/dropdown-menu/dropdown-menu\",\n  \"t-dropdown-item\": \"tdesign-miniprogram/dropdown-item/dropdown-item\"\n}\n```\n\n----------------------------------------\n\nTITLE: Overlay Component API Reference in Markdown\nDESCRIPTION: Comprehensive API reference for the Overlay component, showing available properties, events, and CSS variables that can be used for customization.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/overlay/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## API\n\n\n### Overlay Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nbackground-color | String | - | \\- | N\nduration | Number | 300 | \\- | N\nprevent-scroll-through | Boolean | true | \\- | N\nusing-custom-navbar | Boolean | false | \\- | N\nvisible | Boolean | false | \\- | N\nz-index | Number | 11000 | \\- | N\n\n### Overlay Events\n\nname | params | description\n-- | -- | --\nclick | `({ visible: boolean })` | \\-\n\n\n### CSS Variables\n\nThe component provides the following CSS variables, which can be used to customize styles.\nName | Default Value | Description \n-- | -- | --\n--td-overlay-bg-color | @font-gray-2 | - \n--td-overlay-transition-duration | 300ms | - \n```\n\n----------------------------------------\n\nTITLE: Importing Badge Component in Mini Program\nDESCRIPTION: Configuration for importing the Badge component either globally in app.json or locally in a page/component's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/badge/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-badge\": \"tdesign-miniprogram/badge/badge\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TreeSelect CSS Variables in Markdown\nDESCRIPTION: This snippet defines the CSS variables for the TreeSelect component, allowing for style customization of various component aspects.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tree-select/README.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description \n-- | -- | --\n--td-tree-bg-color | @bg-color-container | - \n--td-tree-colum-width | 206rpx | - \n--td-tree-item-active-color | @brand-color | - \n--td-tree-item-font-size | 32rpx | - \n--td-tree-item-height | 112rpx | - \n--td-tree-root-bg-color | @bg-color-secondarycontainer | -\n```\n\n----------------------------------------\n\nTITLE: Controlled Tabs Implementation\nDESCRIPTION: Example of implementing tabs with controlled value state and change handler\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tabs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<t-tabs value=\"{{value}}\" bind:change=\"onTabsChange\">\n  <t-tab-panel label=\"标签页一\" value=\"0\">标签一内容</t-tab-panel>\n  <t-tab-panel label=\"标签页二\" value=\"1\">标签二内容</t-tab-panel>\n</t-tabs>\n```\n\nLANGUAGE: js\nCODE:\n```\nPage({\n  data: {\n    value: '0',\n  },\n  onTabsChange(e) {\n    this.setData({ value: e.detail.value })\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Importing CountDown Component in miniprogram\nDESCRIPTION: Configuration for importing the CountDown component globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/count-down/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-count-down\": \"tdesign-miniprogram/count-down/count-down\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Navbar Component in MiniProgram\nDESCRIPTION: Configuration code to import the Navbar component either globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/navbar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-navbar\": \"tdesign-miniprogram/navbar/navbar\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing SideBar Components in Tencent Mini Program\nDESCRIPTION: JSON configuration for importing the SideBar and SideBarItem components globally or locally in a Tencent Mini Program project.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/side-bar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-side-bar\": \"tdesign-miniprogram/side-bar/side-bar\",\n    \"t-side-bar-item\": \"tdesign-miniprogram/side-bar-item/side-bar-item\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing ColorPicker Component in Mini Program\nDESCRIPTION: Configuration code for importing the ColorPicker component either globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/color-picker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-color-picker\": \"tdesign-miniprogram/color-picker/color-picker\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Rate Component in Tdesign Mini Program\nDESCRIPTION: Configuration for importing the Rate component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/rate/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-rate\": \"tdesign-miniprogram/rate/rate\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: SwipeCell Usage Example with Right Swipe Action\nDESCRIPTION: An example of using the SwipeCell component with a right swipe action. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/swipe-cell/README.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n{{ right }}\n```\n\n----------------------------------------\n\nTITLE: Custom Icon CSS Definition\nDESCRIPTION: CSS template for defining custom icons using @font-face and icon classes with specific unicode content\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/icon/README.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@font-face {\n  font-family: 'icon';  // 使用自定义的字体名称\n  ···\n}\n\n.icon {\n  font-family: 'icon' !important;  // 字体名称\n  ···\n}\n\n.icon-a-0:before {  // icon 图标。注意 FontClass 前缀与 font-family 保持一致\n  content: '\\e64d';\n}\n```\n\n----------------------------------------\n\nTITLE: SwipeCell Usage Example with Left and Right Swipe Actions\nDESCRIPTION: An example of using the SwipeCell component with both left and right swipe actions. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/swipe-cell/README.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n{{ double }}\n```\n\n----------------------------------------\n\nTITLE: Installing TabBar Component in Tencent Miniprogram\nDESCRIPTION: JSON configuration to import the TabBar and TabBarItem components globally or locally in a Tencent Miniprogram project.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tab-bar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-tab-bar\": \"tdesign-miniprogram/tab-bar/tab-bar\",\n  \"t-tab-bar-item\": \"tdesign-miniprogram/tab-bar-item/tab-bar-item\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing TreeSelect Component in Miniprogram\nDESCRIPTION: Configuration code to import the TreeSelect component either globally in app.json or locally in a page/component's index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tree-select/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-tree-select\": \"tdesign-miniprogram/tree-select/tree-select\"\n}\n```\n\n----------------------------------------\n\nTITLE: SwipeCell Usage Example with Icon in Swipe Actions\nDESCRIPTION: An example of using the SwipeCell component with icons in the swipe actions. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/swipe-cell/README.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n{{ icon }}\n```\n\n----------------------------------------\n\nTITLE: Importing Fab Component in Tencent Miniprogram\nDESCRIPTION: JSON configuration for importing the Fab component in a miniprogram. This should be added to app.json for global imports or index.json for page-specific imports.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/fab/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-fab\": \"tdesign-miniprogram/fab/fab\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Checkbox Components in Mini Program\nDESCRIPTION: Configuration for importing Checkbox and CheckboxGroup components globally in app.json or locally in page/component index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/checkbox/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-checkbox\": \"tdesign-miniprogram/checkbox/checkbox\",\n  \"t-checkbox-group\": \"tdesign-miniprogram/checkbox-group/checkbox-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing SwipeCell Component in WeChat Mini Program\nDESCRIPTION: Configure the SwipeCell component in the app.json or index.json file of the WeChat Mini Program project to enable its use.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/swipe-cell/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n   \"t-swipe-cell\": \"tdesign-miniprogram/swipe-cell/swipe-cell\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Skeleton Type Structure in TypeScript\nDESCRIPTION: TypeScript type definition for the row-col property of the Skeleton component, describing the structure for configuring skeleton layout patterns.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/skeleton/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype SkeletonRowCol = Array<Number \\| SkeletonRowColObj \\| Array<SkeletonRowColObj>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SkeletonRowColObj { width?: string; size?: string;height?: string; marginRight?: string; marginLeft?: string; margin?: string; type?: 'rect' \\| 'circle' \\| 'text';}\n```\n\n----------------------------------------\n\nTITLE: Typescript Type Definition - CheckboxOption\nDESCRIPTION: Type definitions for checkbox options including support for string, number and object types with optional properties for label, value, disabled and checkAll flags.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/checkbox/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype CheckboxOption = string | number | CheckboxOptionObj\ninterface CheckboxOptionObj {\n  label?: string;\n  value?: string | number;\n  disabled?: boolean;\n  checkAll?: true\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Result Component in TDesign Mini Program\nDESCRIPTION: Configuration for importing the Result component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/result/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-result\": \"tdesign-miniprogram/result/result\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Upload Props Types in TypeScript\nDESCRIPTION: TypeScript type definitions for various configuration options of the Upload component, including image and video upload settings.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/upload/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ntype UploadMpConfig = ImageConfig | VideoConfig\ninterface ImageConfig { count?: number; sizeType?: Array<SizeTypeValues>; sourceType?: Array<SourceTypeValues> }\ntype SizeTypeValues = 'original' | 'compressed'\ntype SourceTypeValues = 'album' | 'camera'\ninterface VideoConfig { sourceType?: Array<SourceTypeValues>; compressed?: boolean; maxDuration?: number; camera?: 'back' | 'front' }\n```\n\n----------------------------------------\n\nTITLE: Defining Indexes ListItem Type in TypeScript\nDESCRIPTION: TypeScript interface definition for the list item structure used in the Indexes component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/indexes/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListItem { \n  title: string;\n  index: string;\n  children: { \n    title: string; \n    [key: string]: any\n  }[] \n}\n```\n\n----------------------------------------\n\nTITLE: Tabs with Popup Integration\nDESCRIPTION: Implementation of tabs within a popup component with manual track setting\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tabs/README.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<t-popup visible=\"{{visible}}\" bind:visible-change=\"onVisibleChange\">\n  <t-tabs id=\"tabs\" defaultValue=\"{{0}}\" bind:change=\"onTabsChange\" bind:click=\"onTabsClick\" t-class=\"custom-tabs\">\n    <t-tab-panel label=\"标签页一\" value=\"0\">标签一内容</t-tab-panel>\n    <t-tab-panel label=\"标签页二\" value=\"1\">标签二内容</t-tab-panel>\n    <t-tab-panel label=\"标签页三\" value=\"2\">标签三内容</t-tab-panel>\n  </t-tabs>\n</t-popup>\n```\n\nLANGUAGE: js\nCODE:\n```\nPage({\n  data: {\n    visible: false\n  },\n  showPopup() {\n    this.setData({\n      visible: true\n    }, () => {\n      const tabs = this.selectComponent('tabs');\n\n      tabs.setTrack(); // 这一步很重要，因为小程序的无法正确执行生命周期，所以需要手动设置下 tabs 的滑块\n    })\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Components in Miniprogram JSON\nDESCRIPTION: Configuration to import Tag and CheckTag components globally in app.json or locally in component/page index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tag/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-tag\": \"tdesign-miniprogram/tag/tag\",\n  \"t-check-tag\": \"tdesign-miniprogram/check-tag/check-tag\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TreeSelect Props in Markdown\nDESCRIPTION: This snippet defines the props for the TreeSelect component, including their names, types, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tree-select/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nheight | String / Number | 336 | \\- | N\nkeys | Object | - | alias filed name in data。Typescript：`KeysType`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nmultiple | Boolean | false | \\- | N\noptions | Array | [] | Typescript：`Array<DataOption>` | N\nvalue | String / Number / Array | - | Typescript：`TreeSelectValue` `type TreeSelectValue = string \\| number \\| Array<TreeSelectValue>`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/tree-select/type.ts) | N\ndefault-value | String / Number / Array | undefined | uncontrolled property。Typescript：`TreeSelectValue` `type TreeSelectValue = string \\| number \\| Array<TreeSelectValue>`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/tree-select/type.ts) | N\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom TabBar in HTML\nDESCRIPTION: This snippet demonstrates how to implement a custom TabBar by adding a class to the t-tab-bar component in HTML.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-theme.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<t-tab-bar class=\"custom-tab-bar\">\n  <t-tab-bar-item value=\"home\" icon=\"home\">home</t-tab-bar-item>\n</t-tab-bar>\n```\n\n----------------------------------------\n\nTITLE: NoticeBar TypeScript Interface Definition\nDESCRIPTION: TypeScript interface definition for the NoticeBar marquee property, showing the available configuration options for marquee behavior.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/notice-bar/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NoticeBarMarquee { speed?: number; loop?: number; delay?: number }\n```\n\n----------------------------------------\n\nTITLE: Importing Grid Components in Tencent Mini Program\nDESCRIPTION: Configuration for importing the Grid and GridItem components globally in app.json or locally in index.json of a page or component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/grid/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-grid\": \"tdesign-miniprogram/grid/grid\",\n  \"t-grid-item\": \"tdesign-miniprogram/grid-item/grid-item\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TreeSelect Events in Markdown\nDESCRIPTION: This snippet defines the events for the TreeSelect component, including their names, parameters, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tree-select/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\nchange | `(value: TreeSelectValue, level: TreeLevel) ` | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/tree-select/type.ts)。<br/>`type TreeLevel = 0 \\| 1 \\| 2`<br/>\n```\n\n----------------------------------------\n\nTITLE: Defining Slider Value Type in TypeScript\nDESCRIPTION: Type definition for the Slider component's value property, supporting both single number and array of numbers.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/slider/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype SliderValue = number | Array<number>\n```\n\n----------------------------------------\n\nTITLE: Importing Divider Component in Mini Program\nDESCRIPTION: This code snippet shows how to import the Divider component globally in the app.json file or locally in a page's index.json file of a Mini Program project.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/divider/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-divider\": \"tdesign-miniprogram/divider/divider\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Indexes Components in TDesign MiniProgram\nDESCRIPTION: Configuration for importing the Indexes and IndexesAnchor components in a MiniProgram app. This can be added to app.json for global use or to index.json for local component use.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/indexes/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-indexes\": \"tdesign-miniprogram/indexes/indexes\",\n  \"t-indexes-anchor\": \"tdesign-miniprogram/indexes-anchor/indexes-anchor\"\n}\n```\n\n----------------------------------------\n\nTITLE: Image Component Properties Table\nDESCRIPTION: Markdown table defining the available properties for the Image component, including their types, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/image/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nerror | String / Slot | 'default' | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nheight | String / Number | - | \\- | N\nlazy | Boolean | false | \\- | N\nloading | String / Slot | 'default' | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nmode | String | scaleToFill | options: scaleToFill/aspectFit/aspectFill/widthFix/heightFix/top/bottom/center/left/right/top left/top right/bottom left/bottom right | N\nshape | String | square | options: circle/round/square | N\nshow-menu-by-longpress | Boolean | false | \\- | N\nsrc | String | - | src attribute of `<img>`. image File can also be loaded | N\nt-id | String | - | `1.2.10`。image tag id | N\nwebp | Boolean | false | \\- | N\nwidth | String / Number | - | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Defining Slider Marks Type in TypeScript\nDESCRIPTION: Type definition for the marks property of the Slider component, supporting either a record of number-string pairs or an array of numbers.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/slider/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nRecord<number, string> | Array<number>\n```\n\n----------------------------------------\n\nTITLE: Styling Custom TabBar with CSS\nDESCRIPTION: This snippet shows how to style the custom TabBar by defining CSS Variables for the custom-tab-bar class.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-theme.md#2025-04-21_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n.custom-tab-bar {\n  --td-tab-bar-item-color: red;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing ActionSheet Component in Mini Program\nDESCRIPTION: Configuration for importing the ActionSheet component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/action-sheet/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-action-sheet\": \"tdesign-miniprogram/action-sheet/action-sheet\",\n}\n```\n\n----------------------------------------\n\nTITLE: Navbar Component Properties Table in Markdown\nDESCRIPTION: Markdown table defining the available properties for the Navbar component, including their types, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/navbar/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nanimation | Boolean | true | \\- | N\ncapsule | Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\ndelta | Number | 1 | \\- | N\nfixed | Boolean | true | \\- | N\nleft | Slot | - | `0.26.0`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nleft-arrow | Boolean | false | `0.26.0` | N\ntitle | String / Slot | - | page title。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\ntitle-max-length | Number | - | \\- | N\nvisible | Boolean | true | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Implementing ColorPicker in ScrollView\nDESCRIPTION: Example of using ColorPicker within a scroll-view component, including both HTML structure and JavaScript event handling.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/color-picker/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<scroll-view type=\"list\" scroll-y bind:scroll=\"onScroll\">\n  <t-color-picker id=\"ColorPicker\" fixed />\n</scroll-view>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nonScroll(e) {\n  if (!this.colorPicker) this.colorPicker = this.selectComponent('#ColorPicker');\n  this.colorPicker.debouncedUpdateEleRect(e);\n}\n```\n\n----------------------------------------\n\nTITLE: Message Component Type Definitions - TypeScript\nDESCRIPTION: TypeScript type definitions for Message component properties including alignment and theme options.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/message/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype MessageAlignType = 'left' | 'center';\n\ntype MessageThemeList = 'info' | 'success' | 'warning' | 'error';\n\ninterface MessageMarquee {\n  speed?: number;\n  loop?: number;\n  delay?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Swiper Components in Mini Program\nDESCRIPTION: Configuration for importing the t-swiper and t-swiper-nav components in the app.json or page-level index.json files of a WeChat Mini Program.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/swiper/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-swiper\": \"tdesign-miniprogram/swiper/swiper\",\n  \"t-swiper-nav\": \"tdesign-miniprogram/swiper-nav/swiper-nav\"\n}\n```\n\n----------------------------------------\n\nTITLE: CellGroup Properties API Table\nDESCRIPTION: Markdown table defining the available properties for the CellGroup component\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/cell/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nbordered | Boolean | false | \\- | N\ntheme | String | default | options: default/card | N\ntitle | String | - | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Tag Component Type Definition\nDESCRIPTION: Type definitions for Tag component props including style, closable, theme and variant options\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tag/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagProps {\n  style?: Object;\n  customStyle?: Object;\n  closable?: Boolean | Object | Slot;\n  disabled?: Boolean;\n  icon?: String | Object | Slot;\n  maxWidth?: String | Number;\n  shape?: 'square' | 'round' | 'mark';\n  size?: 'small' | 'medium' | 'large' | 'extra-large';\n  theme?: 'default' | 'primary' | 'warning' | 'danger' | 'success';\n  variant?: 'dark' | 'light' | 'outline' | 'light-outline';\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GridItem Props Interface in TypeScript\nDESCRIPTION: TypeScript interface definitions for various props of the GridItem component, including badge-props, image-props, and jump-type.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/grid/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbadge-props: BadgeProps\nimage-props: ImageProps\njump-type: 'redirect-to' | 'switch-tab' | 'relaunch' | 'navigate-to'\n```\n\n----------------------------------------\n\nTITLE: TabBar Type Definition\nDESCRIPTION: Type definition for TabBar value property showing supported types\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tab-bar/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nstring | number | Array<string | number>\n```\n\n----------------------------------------\n\nTITLE: CSS Variables Table\nDESCRIPTION: Markdown table listing all available CSS variables for customizing the component styles\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/cell/README.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description \n-- | -- | --\n--td-cell-group-border-color | @component-stroke | - \n--td-cell-group-title-bg-color | @bg-color-secondarycontainer | - \n--td-cell-group-title-color | @text-color-placeholder | - \n--td-cell-group-title-font-size | 28rpx | - \n--td-cell-group-title-line-height | 90rpx | - \n--td-cell-group-title-padding-left | 32rpx | - \n--td-cell-bg-color | @bg-color-container | - \n--td-cell-border-color | @component-stroke | - \n--td-cell-border-left-space | @cell-horizontal-padding | - \n--td-cell-border-right-space | 0 | - \n--td-cell-border-width | 1px | - \n--td-cell-description-color | @text-color-secondary | - \n--td-cell-description-font-size | @font-size-base | - \n--td-cell-description-line-height | 44rpx | - \n--td-cell-height | auto | - \n--td-cell-horizontal-padding | 32rpx | - \n--td-cell-hover-color | @bg-color-secondarycontainer | - \n--td-cell-image-height | 96rpx | - \n--td-cell-image-width | 96rpx | - \n--td-cell-left-icon-color | @brand-color | - \n--td-cell-left-icon-font-size | 48rpx | - \n--td-cell-line-height | 48rpx | - \n--td-cell-note-color | @text-color-placeholder | - \n--td-cell-note-font-size | @font-size-m | - \n--td-cell-required-color | @error-color | - \n--td-cell-required-font-size | @font-size-m | - \n--td-cell-right-icon-color | @text-color-placeholder | - \n--td-cell-right-icon-font-size | 48rpx | - \n--td-cell-title-color | @text-color-primary | - \n--td-cell-title-font-size | @font-size-m | - \n--td-cell-vertical-padding | 32rpx | -\n```\n\n----------------------------------------\n\nTITLE: CheckTag Component Type Definition\nDESCRIPTION: Type definitions for CheckTag component including checked state, content and size options\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tag/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CheckTagProps {\n  style?: Object;\n  customStyle?: Object;\n  checked?: Boolean;\n  defaultChecked?: Boolean;\n  closable?: Boolean;\n  content?: string | number | string[];\n  disabled?: Boolean;\n  icon?: String | Object | Slot;\n  shape?: 'square' | 'round' | 'mark';\n  size?: 'small' | 'medium' | 'large';\n  variant?: 'dark' | 'light' | 'outline' | 'light-outline';\n}\n```\n\n----------------------------------------\n\nTITLE: PickerItem Option Interface\nDESCRIPTION: TypeScript interface defining the structure of picker item options with label and value properties.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/picker/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PickerItemOption { label: string; value: string | number }\n```\n\n----------------------------------------\n\nTITLE: Installing Stepper Component in Mini Program\nDESCRIPTION: Configuration code to import the Stepper component either globally in app.json or locally in component/page index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/stepper/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-stepper\": \"tdesign-miniprogram/stepper/stepper\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Picker Value Type Definition\nDESCRIPTION: TypeScript type definition for picker values that can be either string or number.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/picker/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype PickerValue = string | number\n```\n\n----------------------------------------\n\nTITLE: Typescript Type Definition - CheckboxGroupValue\nDESCRIPTION: Type definition for checkbox group value array that can contain strings, numbers or booleans.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/checkbox/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype CheckboxGroupValue = Array<string | number | boolean>\n```\n\n----------------------------------------\n\nTITLE: Displaying Transition Component Props Table in Markdown\nDESCRIPTION: A markdown table showing the available properties for the Transition component including their types, default values, descriptions, and whether they are required.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/transition/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nappear | Boolean | false | \\- | N\ndestory-on-hide | Boolean | false | \\- | N\ndurations | Number / Array | - | Typescript：`number \\| number[]` | N\nname | String | t-transition | \\- | N\nvisible | Boolean | false | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Importing Steps Components in WeChat Mini Program\nDESCRIPTION: Configuration for importing the Steps components globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/steps/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-steps\": \"tdesign-miniprogram/steps/steps\",\n  \"t-step-item\": \"tdesign-miniprogram/step-item/step-item\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sticky Component Event Handler Type Definition\nDESCRIPTION: Type definition for the scroll event handler in the Sticky component. The handler receives scrollTop and isFixed parameters.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/sticky/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n(detail: { scrollTop: number, isFixed: boolean })\n```\n\n----------------------------------------\n\nTITLE: NoticeBar Trigger Type Definition\nDESCRIPTION: TypeScript type definition for NoticeBarTrigger which defines the possible click trigger areas within the NoticeBar component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/notice-bar/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype NoticeBarTrigger = 'prefix-icon' | 'content' | 'operation' | 'suffix-icon';\n```\n\n----------------------------------------\n\nTITLE: Toast External Classes Table in Markdown\nDESCRIPTION: Markdown table showing the external CSS classes available for the Toast component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/toast/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | \\-\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Components in JSON Configuration\nDESCRIPTION: This snippet shows how to import the Radio and RadioGroup components in the app.json or page-level index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/radio/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-radio\": \"tdesign-miniprogram/radio/radio\",\n  \"t-radio-group\": \"tdesign-miniprogram/radio-group/radio-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Badge Component Type Definition\nDESCRIPTION: Type definition showing offset property structure for Badge component\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/badge/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nArray<string | number>\n```\n\n----------------------------------------\n\nTITLE: Defining Calendar Trigger Type in TypeScript\nDESCRIPTION: This snippet defines the type for calendar trigger events. It specifies the possible sources of calendar close events.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/calendar/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype CalendarTrigger = 'close-btn' | 'confirm-btn' | 'overlay'\n```\n\n----------------------------------------\n\nTITLE: Navbar Events Table in Markdown\nDESCRIPTION: Markdown table listing all available events for the Navbar component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/navbar/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\ncomplete | \\- | \\-\nfail | \\- | \\-\ngo-back | \\- | \\-\nsuccess | \\- | \\-\n```\n\n----------------------------------------\n\nTITLE: Installing Switch Component in Tdesign Miniprogram\nDESCRIPTION: Configuration for importing the Switch component either globally in app.json or locally in component/page index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/switch/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-switch\": \"tdesign-miniprogram/switch/switch\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DialogEventSource Type in TypeScript\nDESCRIPTION: TypeScript type definition for dialog event source values.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/dialog/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype DialogEventSource = 'cancel' | 'overlay' | 'close-btn'\n```\n\n----------------------------------------\n\nTITLE: Footer Link Object Type Definition\nDESCRIPTION: TypeScript interface defining the structure of footer link objects, including name, URL, and navigation type options.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/footer/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LinkObj { \n  name: string; \n  url?: string; \n  openType?: 'navigate' | 'redirect' | 'relaunch' | 'switchTab' | 'navigateBack' \n}\n```\n\n----------------------------------------\n\nTITLE: Defining Size Limit Object in TypeScript\nDESCRIPTION: TypeScript type and interface definitions for specifying file size limits in the Upload component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/upload/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ntype SizeLimitObj = { size: number; unit: SizeUnit ; message?: string }\ntype SizeUnitArray = ['B', 'KB', 'MB', 'GB']\ntype SizeUnit = SizeUnitArray[number]\n```\n\n----------------------------------------\n\nTITLE: Installing Textarea Component in Mini Program\nDESCRIPTION: Configuration for importing the Textarea component either globally in app.json or locally in component/page index.json\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/textarea/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-textarea\": \"tdesign-miniprogram/textarea/textarea\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Guide Counter Function Type\nDESCRIPTION: TypeScript type definition for the Guide counter function that accepts total and current parameters.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/guide/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n(params: { total: number; current: number }) => string\n```\n\n----------------------------------------\n\nTITLE: Defining Textarea Autosize Configuration Type\nDESCRIPTION: Type definition for the autosize property configuration object.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/textarea/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nboolean | { maxHeight?: number, minHeight?: number }\n```\n\n----------------------------------------\n\nTITLE: Importing Upload Component in JSON Configuration\nDESCRIPTION: Shows how to import the Upload component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/upload/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-upload\": \"tdesign-miniprogram/upload/upload\"\n}\n```\n\n----------------------------------------\n\nTITLE: Footer Logo Type Definition\nDESCRIPTION: TypeScript interface defining the structure of the footer logo object, including icon, title, and URL properties.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/footer/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FooterLogo { \n  icon: string; \n  title?: string; \n  url?: string \n}\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Components in Mini Program\nDESCRIPTION: Configuration for importing Tabs and TabPanel components globally or locally in a Mini Program project\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tabs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-tabs\": \"tdesign-miniprogram/tabs/tabs\",\n  \"t-tab-panel\": \"tdesign-miniprogram/tab-panel/tab-panel\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding ItemHeight Property to Picker Component\nDESCRIPTION: Added an 'itemHeight' property to the Picker component to support customizing the height of PickerItem sub-items.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nPicker: {\n  itemHeight: Number\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Transition Component in JSON configuration\nDESCRIPTION: Shows how to import the t-transition component in the app.json or page.json configuration file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/transition/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-transition\": \"tdesign-miniprogram/transition/transition\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Unit and Integration Tests for TDesign MiniProgram\nDESCRIPTION: Command to execute unit and integration tests using miniprogram-simulate and Jest.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test\n```\n\n----------------------------------------\n\nTITLE: Importing Dialog Component in TDesign-Miniprogram\nDESCRIPTION: Configuration code for importing the Dialog component either globally in app.json or locally in a specific page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/dialog/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-dialog\": \"tdesign-miniprogram/dialog/dialog\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Calendar Format Type in TypeScript\nDESCRIPTION: This snippet defines the type for the format function used in the Calendar component. It specifies the structure of date objects and possible date types.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/calendar/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype CalendarFormatType = (day: TDate) => TDate\ntype TDateType = 'selected' | 'disabled' | 'start' | 'centre' | 'end' | ''\ninterface TDate {\n  date: Date;\n  day: number;\n  type: TDateType;\n  className?: string;\n  prefix?: string;\n  suffix?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Transition Object in TypeScript\nDESCRIPTION: TypeScript interface definition for configuring transition effects in the Upload component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/upload/README.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface Transition { backTransition?: boolean, duration?: number, timingFunction?: string }\n```\n\n----------------------------------------\n\nTITLE: Displaying Basic Footer in Tencent Design Miniprogram\nDESCRIPTION: HTML code for rendering a basic footer component. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/footer/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{ base }}\n```\n\n----------------------------------------\n\nTITLE: Importing TDesign Button Component in JSON\nDESCRIPTION: JSON configuration to import the TDesign button component in a Wechat MiniProgram page or component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-button\": \"tdesign-miniprogram/button/button\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Type Definition for FAB Component Props\nDESCRIPTION: Type definitions for the draggable property of the FAB component, defining possible movement directions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/fab/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype FabDirectionEnum = 'all' | 'vertical' | 'horizontal'\n```\n\n----------------------------------------\n\nTITLE: Defining Media Context Types in TypeScript\nDESCRIPTION: TypeScript type and interface definitions for video and image contexts used in Upload component events.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/upload/README.en-US.md#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\ntype MediaContext = VideoContext[] | ImageContext[]\ninterface VideoContext { name?: string; type?: string; url?: string; duration?: number; size?: number; width?: number; height?: number; thumb: string; progress: number }\ninterface ImageContext { name: string; type: string; url: string;  size: number; width: number; height: number; progress: number  }\n```\n\n----------------------------------------\n\nTITLE: Image External Classes Table\nDESCRIPTION: Markdown table showing the external CSS classes that can be applied to the Image component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/image/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | \\-\nt-class-load | \\-\nt-class-image | \\-\nt-class-error | \\-\n```\n\n----------------------------------------\n\nTITLE: Registering TDesign Button Component\nDESCRIPTION: JSON configuration to register the TDesign button component in a WeChat MiniProgram page or component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/getting-started.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-button\": \"tdesign-miniprogram/button/button\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Image Events Table\nDESCRIPTION: Markdown table listing the available events that can be handled by the Image component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/image/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\nerror | - | trigger on image load failed\nload | - | trigger on image loaded\n```\n\n----------------------------------------\n\nTITLE: HTML Informational Block\nDESCRIPTION: Displays an informational block about the component version using HTML and inline SVG.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/link/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"background: #ecf2fe; display: flex; align-items: center; line-height: 20px; padding: 14px 24px; border-radius: 3px; color: #555a65\">\n  <svg fill=\"none\" viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\" style=\"margin-right: 5px\">\n    <path fill=\"#0052d9\" d=\"M8 15A7 7 0 108 1a7 7 0 000 14zM7.4 4h1.2v1.2H7.4V4zm.1 2.5h1V12h-1V6.5z\" fillOpacity=\"0.9\"></path>\n  </svg>\n  该组件于 0.32.0 版本上线，请留意版本。\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Search Component in Mini Program\nDESCRIPTION: Code snippet showing how to import the Search component in a Mini Program project. Can be imported globally in app.json or locally in a specific page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/search/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-search\": \"tdesign-miniprogram/search/search\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Grid Props Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the border prop of the Grid component. It allows for boolean or object values with specific properties.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/grid/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nborder: boolean | { color?: string; width?: string; style?: 'solid' | 'dashed' | 'dotted' | 'double' | 'groove' | 'inset' | 'outset' }\n```\n\n----------------------------------------\n\nTITLE: Defining IndexesAnchor Props in Markdown\nDESCRIPTION: This snippet defines the properties for the IndexesAnchor component using a markdown table. It specifies the 'index' prop, which can be a String or Number type and is used to set the index character.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/indexes-anchor/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| 名称 | 类型 | 默认值 | 说明 | 必传 |\n| -- | -- | -- | -- | -- |\n| index | String / Number | - | 索引字符 | N |\n```\n\n----------------------------------------\n\nTITLE: Navbar External Classes Table in Markdown\nDESCRIPTION: Markdown table defining the external CSS classes that can be applied to the Navbar component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/navbar/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | \\-\nt-class-capsule | \\-\nt-class-center | \\-\nt-class-home-icon | \\-\nt-class-left | \\-\nt-class-left-icon | \\-\nt-class-nav-btn | \\-\nt-class-title | \\-\n```\n\n----------------------------------------\n\nTITLE: Importing Drawer Component in Mini Program\nDESCRIPTION: Configuration for importing the Drawer component in a Mini Program app.json or page.json file. This configures the custom component for use in the application.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/drawer/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-drawer\": \"tdesign-miniprogram/drawer/drawer\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Variables for Drawer Customization in Markdown\nDESCRIPTION: This snippet lists the CSS variables provided by the Drawer component for customizing its styles, including variable names, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/drawer/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### CSS Variables\n\nThe component provides the following CSS variables, which can be used to customize styles.\nName | Default Value | Description \n-- | -- | --\n--td-drawer-bg-color | @bg-color-container | - \n--td-drawer-border-color | @border-color | - \n--td-drawer-footer-padding-bottom | 40rpx | - \n--td-drawer-hover-color | @bg-color-secondarycontainer | - \n--td-drawer-item-icon-color | @drawer-title-color\n--td-drawer-item-height | 48rpx | - \n--td-drawer-item-icon-size | 48rpx | - \n--td-drawer-item-padding | 32rpx | - \n--td-drawer-sidebar-height | 70vh | - \n--td-drawer-title-color | @font-gray-1 | - \n--td-drawer-title-font-size | 36rpx | - \n--td-drawer-title-padding | 48rpx 32rpx 16rpx | - \n--td-drawer-width | 560rpx | -\n```\n\n----------------------------------------\n\nTITLE: Defining IndexesAnchor Props in Markdown Table\nDESCRIPTION: This markdown table defines the props available for the IndexesAnchor component. It includes the prop name, type, default value, description, and whether it's required.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/indexes-anchor/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| name | type | default | description | required |\n| -- | -- | -- | -- | -- |\n| external-classes | Array | - | `['t-class']` | N |\n| index | String / Number | - | \\- | N |\n```\n\n----------------------------------------\n\nTITLE: Image CSS Variables Table\nDESCRIPTION: Markdown table defining the customizable CSS variables available for styling the Image component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/image/README.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description\n-- | -- | --\n--td-image-color | @font-gray-3 | -\n--td-image-loading-bg-color | @bg-color-secondarycontainer | -\n--td-image-loading-color | @font-gray-3 | -\n--td-image-round-radius | @radius-default | -\n```\n\n----------------------------------------\n\nTITLE: Importing Collapse Components in Tencent Miniprogram\nDESCRIPTION: JSON configuration for importing the Collapse and CollapsePanel components globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/collapse/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-collapse\": \"tdesign-miniprogram/collapse/collapse\",\n  \"t-collapse-panel\": \"tdesign-miniprogram/collapse-panel/collapse-panel\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ColorPicker Props in Markdown\nDESCRIPTION: This snippet defines the props for the ColorPicker component using a markdown table. It includes properties like style, custom-style, auto-close, enable-alpha, and others, along with their types, default values, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/color-picker/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nauto-close | Boolean | true | \\- | N\nenable-alpha | Boolean | false | \\- | N\nfixed | Boolean | false | `1.8.5` | N\nfooter | Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nformat | String | RGB | options: RGB/RGBA/HSL/HSLA/HSB/HSV/HSVA/HEX/CMYK/CSS | N\nheader | Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\npopup-props | Object | {} | Typescript：`PopupProps`，[Popup API Documents](./popup?tab=api)。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/color-picker/type.ts) | N\nswatch-colors | Array | - | swatch colors。Typescript：`Array<string> \\| null` | N\ntype | String | base | options: base/multiple。Typescript：`TypeEnum ` `type TypeEnum = 'base' \\| 'multiple'`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/color-picker/type.ts) | N\nuse-popup | Boolean | false | \\- | N\nvalue | String | - | color value | N\ndefault-value | String | undefined | color value。uncontrolled property | N\nvisible | Boolean | false | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Defining Calendar Locale Text Interface in TypeScript\nDESCRIPTION: This snippet defines the interface for localization text used in the Calendar component. It includes properties for title, weekdays, month title, months, and confirm button text.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/calendar/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CalendarLocaleText {\n  title?: string;\n  weekdays?: string[];\n  monthTitle?: string;\n  months?: string[];\n  confirm?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IndexesAnchor External Style Classes in Markdown\nDESCRIPTION: This snippet defines the external style classes for the IndexesAnchor component using a markdown table. It specifies the 't-class' style class for the root node.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/indexes-anchor/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| 类名 | 说明 |\n| -- | -- |\n| t-class | 根节点样式类 |\n```\n\n----------------------------------------\n\nTITLE: Defining version 0.20.0 release notes in Markdown\nDESCRIPTION: Markdown structure for documenting the changes in version 0.20.0 of tdesign-miniprogram, including breaking changes, new features, bug fixes, and other updates.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n## 🌈 0.20.0 `2022-09-05`\n### ❗️BREKING CHANGES\n- `Icon`: `size` 不在支持 `middle`、`small`等关键字，默认单位 `px` @anlyyao ([#828](https://github.com/Tencent/tdesign-miniprogram/pull/828))\n### 🚀 Features\n- `Textarea`: 更新演示代码文档 @anlyyao ([#817](https://github.com/Tencent/tdesign-miniprogram/pull/817))\n- `Dialog`: 新增 overlayProps 属性透传至 Overlay 组件 @LeeJim ([#822](https://github.com/Tencent/tdesign-miniprogram/pull/822))\n- `Icon`:  `name` 支持图片链接 @anlyyao ([#828](https://github.com/Tencent/tdesign-miniprogram/pull/828))\n- `Tabs`: change 和 click 事件返回 label 的值 @LeeJim ([#841](https://github.com/Tencent/tdesign-miniprogram/pull/841))\n- `Icon`: 新增更多的图标 @anlyyao ([#838](https://github.com/Tencent/tdesign-miniprogram/pull/838))\n\n### 🐞 Bug Fixes\n- `Tab`: 修复滑块定位错误的问题 @CodingOnStar ([#781](https://github.com/Tencent/tdesign-miniprogram/pull/781))\n- `NoticeBar`: 解决函数同名导致控制台报错  @anlyyao ([#814](https://github.com/Tencent/tdesign-miniprogram/pull/814))\n- `tabs`: 修复无法正常移除 tab panel 的问题 @LeeJim ([#830](https://github.com/Tencent/tdesign-miniprogram/pull/830))\n- `DropdownMenu`: 修复下拉菜单定位错误的问题 @LeeJim ([#836](https://github.com/Tencent/tdesign-miniprogram/pull/836))\n- `Tabs`: 修复垂直模式下内容区域绑定事件无效的问题 @anlyyao ([#837](https://github.com/Tencent/tdesign-miniprogram/pull/837))\n- `Fab`: 修复悬浮按钮随页面滚动的问题 @anlyyao ([#842](https://github.com/Tencent/tdesign-miniprogram/pull/842))\n### 🚧 Others\n- `ActionSheet`: 新增单元测试 @anlyyao ([#832](https://github.com/Tencent/tdesign-miniprogram/pull/832))\n- `Dialog`: 新增单元测试 @LeeJim ([#816](https://github.com/Tencent/tdesign-miniprogram/pull/816))\n- `Overlay`: 新增单元测试 @LeeJim ([#818](https://github.com/Tencent/tdesign-miniprogram/pull/818))\n- `Avatar`: 新增单元测试 @Perisiguiendo ([#812](https://github.com/Tencent/tdesign-miniprogram/pull/812))\n- `Image`: 新增单元测试 @LeeJim ([#820](https://github.com/Tencent/tdesign-miniprogram/pull/820))\n- `NoticeBar`: 新增单元测试 @anlyyao ([#821](https://github.com/Tencent/tdesign-miniprogram/pull/821))\n- `CountDown`: 新增单元测试 @LeeJim ([#824](https://github.com/Tencent/tdesign-miniprogram/pull/824))\n- `Collapse`: 新增单元测试 @LeeJim ([#825](https://github.com/Tencent/tdesign-miniprogram/pull/825))\n- `Navbar`: 新增单元测试 @LeeJim ([#829](https://github.com/Tencent/tdesign-miniprogram/pull/829))\n- `ImageViewer`: 新增单元测试 @LeeJim ([#826](https://github.com/Tencent/tdesign-miniprogram/pull/826))\n- `Tabs`: 新增单元测试 @LeeJim ([#831](https://github.com/Tencent/tdesign-miniprogram/pull/831))\n- `PullDownRefresh`: 新增单元测试 @anlyyao ([#835](https://github.com/Tencent/tdesign-miniprogram/pull/835))\n```\n\n----------------------------------------\n\nTITLE: Importing Image Component in Tdesign Miniprogram\nDESCRIPTION: Configuration for importing the Image component either globally in app.json or locally in a page/component's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/image/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"usingComponents\": {\n        \"t-image\": \"tdesign-miniprogram/image/image\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: CountDown TimeData Interface Definition\nDESCRIPTION: TypeScript interface defining the time data structure used in the CountDown component's change event.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/count-down/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimeData {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  milliseconds: number\n}\n```\n\n----------------------------------------\n\nTITLE: Adding ResultList Property to Search Component\nDESCRIPTION: Added a 'resultList' property to the Search component to support preview lists.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nSearch: {\n  resultList: Array\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Calendar Component in tdesign-miniprogram\nDESCRIPTION: JSON configuration to import the Calendar component either globally in app.json or locally in a page or component's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/calendar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-calendar\": \"tdesign-miniprogram/calendar/calendar\"\n}\n```\n\n----------------------------------------\n\nTITLE: Cell Component Properties API Table\nDESCRIPTION: Markdown table defining the available properties for the Cell component, including types, defaults, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/cell/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nalign | String | middle | options: top/middle/bottom | N\narrow | Boolean / Object | false | \\- | N\nbordered | Boolean | true | \\- | N\ndescription | String / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nhover | Boolean | - | \\- | N\nimage | String / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\njump-type | String | navigateTo | options: switchTab/reLaunch/redirectTo/navigateTo | N\nleft-icon | String / Object / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nnote | String / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nrequired | Boolean | false | \\- | N\nright-icon | String / Object / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\ntitle | String / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nurl | String | - | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Guide Step Element Type Definition\nDESCRIPTION: TypeScript type definition for the Guide step element function that returns a Promise with bounding client rect data.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/guide/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype StepElement = () => Promise<WechatMiniprogram.BoundingClientRectCallbackResult>\n```\n\n----------------------------------------\n\nTITLE: Adding Disabled Property to PullDownRefresh Component\nDESCRIPTION: Added a 'disabled' property to the PullDownRefresh component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nPullDownRefresh: {\n  disabled: Boolean\n}\n```\n\n----------------------------------------\n\nTITLE: Installing NoticeBar Component in MiniProgram\nDESCRIPTION: Configuration code to import the NoticeBar component either globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/notice-bar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-notice-bar\": \"tdesign-miniprogram/notice-bar/notice-bar\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TreeSelect External Classes in Markdown\nDESCRIPTION: This snippet defines the external classes for the TreeSelect component, providing customization options for various component parts.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tree-select/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | \\-\nt-class-left-column | \\-\nt-class-left-item | \\-\nt-class-middle-item | \\-\nt-class-right-column | \\-\nt-class-right-item | \\-\nt-class-right-item-label | \\-\n```\n\n----------------------------------------\n\nTITLE: Guide Step Placement Type Definition\nDESCRIPTION: TypeScript type definition for the Guide step popover placement options.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/guide/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype StepPopoverPlacement = 'top'|'left'|'right'|'bottom'|'top-left'|'top-right'|'bottom-left'|'bottom-right'|'left-top'|'left-bottom'|'right-top'|'right-bottom'|'center'\n```\n\n----------------------------------------\n\nTITLE: Importing ImageViewer Component in WeChat Mini Program\nDESCRIPTION: Configuration for importing the ImageViewer component either globally in app.json or locally in a page or component's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/image-viewer/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-image-viewer\": \"tdesign-miniprogram/image-viewer/image-viewer\",\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Drawer Events in Markdown\nDESCRIPTION: This snippet defines the events that can be triggered by the Drawer component, including their names, parameters, and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/drawer/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Drawer Events\n\nname | params | description\n-- | -- | --\nclose | `(trigger: TriggerSource)` | \\-\nitem-click | `(index: number; item: DrawerItem)` | \\-\noverlay-click | \\- | \\-\n```\n\n----------------------------------------\n\nTITLE: Defining Textarea Value Type in TypeScript\nDESCRIPTION: Type definition for the textarea value property showing supported value types.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/textarea/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype TextareaValue = string | number\n```\n\n----------------------------------------\n\nTITLE: Importing Picker Component in miniprogram\nDESCRIPTION: Configuration to import the Picker and PickerItem components in a miniprogram project. This can be done globally in app.json or locally in the specific page's index.json.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/picker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-picker\": \"tdesign-miniprogram/picker/picker\",\n  \"t-picker-item\": \"tdesign-miniprogram/picker-item/picker-item\",\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Textarea Confirm Type Options\nDESCRIPTION: Type definition for the confirm-type property showing allowed values.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/textarea/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n'return' | 'send' | 'search' | 'next' | 'go' | 'done'\n```\n\n----------------------------------------\n\nTITLE: Importing Empty Component in TDesign Miniprogram\nDESCRIPTION: Configuration for importing the Empty component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/empty/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-empty\": \"tdesign-miniprogram/empty/empty\"\n}\n```\n\n----------------------------------------\n\nTITLE: Picker Trigger Source Type\nDESCRIPTION: TypeScript type definition for picker trigger sources including overlay, cancel button, and confirm button.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/picker/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype TriggerSource = 'overlay' | 'cancel-btn' | 'confirm-btn'\n```\n\n----------------------------------------\n\nTITLE: Importing Progress Component in miniprogram\nDESCRIPTION: JSON configuration for importing the Progress component in the app.json or page.json file of a WeChat Mini Program.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/progress/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-progress\": \"tdesign-miniprogram/progress/progress\"\n}\n```\n\n----------------------------------------\n\nTITLE: Toast Events Table in Markdown\nDESCRIPTION: Markdown table listing the available events for the Toast component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/toast/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\nclose | \\- | \\-\ndestroy | \\- | \\-\n```\n\n----------------------------------------\n\nTITLE: Importing Overlay Component in WeChat MiniProgram\nDESCRIPTION: Configuration to import the Overlay component either globally in app.json or locally in page/component index.json files.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/overlay/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-overlay\": \"tdesign-miniprogram/overlay/overlay\"\n}\n```\n\n----------------------------------------\n\nTITLE: Toast CSS Variables Table in Markdown\nDESCRIPTION: Markdown table listing the CSS variables available for customizing the Toast component styles.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/toast/README.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description \n-- | -- | --\n--td-toast-bg-color | @font-gray-2 | - \n--td-toast-color | @font-white-1 | - \n--td-toast-column-icon-size | 64rpx | - \n--td-toast-max-width | 374rpx | - \n--td-toast-radius | 8rpx | - \n--td-toast-row-icon-size | 48rpx | -\n```\n\n----------------------------------------\n\nTITLE: SubTabBarItem Interface Definition\nDESCRIPTION: Interface definition for sub-tab-bar items containing value and label properties\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/tab-bar/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SubTabBarItem { value: string; label: string }\n```\n\n----------------------------------------\n\nTITLE: Navbar CSS Variables Table in Markdown\nDESCRIPTION: Markdown table listing all customizable CSS variables for the Navbar component with their default values.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/navbar/README.en-US.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description \n-- | -- | --\n--td-navbar-bg-color | @bg-color-container | - \n--td-navbar-capsule-border-color | #e3e6ea | - \n--td-navbar-capsule-border-radius | 32rpx | - \n--td-navbar-capsule-height | 64rpx | - \n--td-navbar-capsule-width | 176rpx | - \n--td-navbar-color | @font-gray-1 | - \n--td-navbar-height | 96rpx | - \n--td-navbar-left-arrow-size | 48rpx | - \n--td-navbar-title-font-size | 36rpx | - \n--td-navbar-title-font-weight | 600 | -\n```\n\n----------------------------------------\n\nTITLE: Configuring Component Usage in JSON Configuration\nDESCRIPTION: JSON configuration for registering TDesign miniprogram components in a page or component configuration file. Shows how to reference the component path for use in templates.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/row/README.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-button\": \"tdesign-miniprogram/button/button\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for TDesign MiniProgram\nDESCRIPTION: Command to start the development server, which builds both the 'dist' and 'example' directories.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Using the Transition Component in XML\nDESCRIPTION: Demonstrates how to use the t-transition component in a page template, showing a simple implementation with a red block that transitions based on visibility state.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/transition/README.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<!-- page.wxml -->\n<t-transition\n  name=\"transition-class\"\n  visible=\"{{ visible }}\"\n>\n  <view class=\"block\" style=\"width: 100px; height: 100px; background: red;\"></view>\n</t-transition>\n```\n\n----------------------------------------\n\nTITLE: Running End-to-End Tests for TDesign MiniProgram\nDESCRIPTION: Command to run end-to-end tests using miniprogram-automator and Jest.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:e2e\n```\n\n----------------------------------------\n\nTITLE: CSS Style Definition for FAB Component\nDESCRIPTION: Default style positioning for the FAB component\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/fab/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\nright: 16px; bottom: 32px;\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML result with virtualHost enabled\nDESCRIPTION: Shows how the button component is rendered in the DOM when virtualHost is enabled and custom styles are applied. The style gets applied directly to the root element.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/custom-style.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"t-button\" style=\"color: red\">填充按钮</button>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Start Angle for Circle Progress Bar\nDESCRIPTION: Added support for customizing the start angle of the circle style progress bar in the Progress component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nProgress: {\n  circle: {\n    startAngle: Number\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Events to SwipeCell Component\nDESCRIPTION: Added 'dragstart' and 'dragend' events to the SwipeCell component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nSwipeCell: {\n  dragstart: Function,\n  dragend: Function\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Collapse Preview Link in Tencent Miniprogram\nDESCRIPTION: HTML link to preview the Collapse component effect in the WeChat developer tools.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/collapse/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://developers.weixin.qq.com/s/P67sAimx75Sy\" title=\"在开发者工具中预览效果\" target=\"_blank\" rel=\"noopener noreferrer\"> 在开发者工具中预览效果 </a>\n```\n\n----------------------------------------\n\nTITLE: Defining ColorPicker Events in Markdown\nDESCRIPTION: This snippet defines the events for the ColorPicker component using a markdown table. It includes events like change, close, and palette-bar-change, along with their parameters and descriptions.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/color-picker/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\nchange | `(value: string, context: { color: ColorObject; trigger: ColorPickerChangeTrigger })` | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/color-picker/type.ts)。<br/>`type ColorPickerChangeTrigger = 'palette-hue-bar' \\| 'palette-alpha-bar' \\| 'preset' `<br/>\nclose | `(trigger: ColorPickerTrigger)` | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/color-picker/type.ts)。<br/>`type ColorPickerTrigger = 'overlay'`<br/>\npalette-bar-change | `(detail: { color: ColorObject })` | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/color-picker/type.ts)。<br/>`interface ColorObject { alpha: number; css: string; hex: string; hex8: string; hsl: string; hsla: string; hsv: string; hsva: string; rgb: string; rgba: string; value: number;}`<br/>\n```\n\n----------------------------------------\n\nTITLE: Updating wx:key in TabBarItem Component\nDESCRIPTION: Changed the wx:key value from 'index' to the 'value' property as the identifier in the TabBarItem component.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: wxml\nCODE:\n```\nwx:key=\"{{value}}\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Preview Link in HTML\nDESCRIPTION: HTML code for displaying a link to preview the component effect in the WeChat developer tools.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/pull-down-refresh/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://developers.weixin.qq.com/s/HH8v1imF7iSf\" title=\"在开发者工具中预览效果\" target=\"_blank\" rel=\"noopener noreferrer\"> 在开发者工具中预览效果 </a>\n```\n\n----------------------------------------\n\nTITLE: Displaying Branded Footer in Tencent Design Miniprogram\nDESCRIPTION: HTML code for rendering a footer component with a brand logo. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/footer/README.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n{{ logo }}\n```\n\n----------------------------------------\n\nTITLE: Defining version 0.21.0 release notes in Markdown\nDESCRIPTION: Markdown structure for documenting the changes in version 0.21.0 of tdesign-miniprogram, including breaking changes, new features, bug fixes, and other updates.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n## 🌈 0.21.0 `2022-09-13`\n### ❗️BREAKING CHANGES\n- `TabBar`: 点击 subTabBar 选项时，返回的值从数组改成选项的值 @LeeJim ([#846](https://github.com/Tencent/tdesign-miniprogram/pull/846))\n### 🚀 Features\n- `Slider`: 属性 marks 支持动态响应 @LeeJim ([#853](https://github.com/Tencent/tdesign-miniprogram/pull/853))\n### 🐞 Bug Fixes\n- `TabBar`: 修复子选项激活时，父选项未展示激活的问题 @LeeJim ([#846](https://github.com/Tencent/tdesign-miniprogram/pull/846))\n- `Slider`: 修复 disabled 状态下点击报错的问题 @LeeJim ([#853](https://github.com/Tencent/tdesign-miniprogram/pull/853))\n### 🚧 Others\n- `TabBar`: 新增单元测试 @LeeJim ([#846](https://github.com/Tencent/tdesign-miniprogram/pull/846))\n- `Upload`: 新增单元测试 @anlyyao ([#847](https://github.com/Tencent/tdesign-miniprogram/pull/847))\n- `DropdownMenu`: 新增单元测试 @LeeJim ([#848](https://github.com/Tencent/tdesign-miniprogram/pull/848))\n- `Slider`: 新增单元测试 @LeeJim ([#853](https://github.com/Tencent/tdesign-miniprogram/pull/853))\n- `Picker`: 新增单元测试 @LeeJim ([#854](https://github.com/Tencent/tdesign-miniprogram/pull/854))\n- `DateTimePicker`: 新增单元测试 @LeeJim ([#855](https://github.com/Tencent/tdesign-miniprogram/pull/855))\n- `Sticky`: 新增单元测试 @Perisiguiendo ([#852](https://github.com/Tencent/tdesign-miniprogram/pull/852))\n```\n\n----------------------------------------\n\nTITLE: Displaying Linked Footer in Tencent Design Miniprogram\nDESCRIPTION: HTML code for rendering a footer component with links. The actual implementation is represented by a placeholder.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/footer/README.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n{{ link }}\n```\n\n----------------------------------------\n\nTITLE: Creating Navigation Link for Toast Component in TDesign MiniProgram\nDESCRIPTION: HTML code that creates a clickable item linking to the Toast component documentation page. The item includes both light and dark mode preview images of the component and a label displaying the component name.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/overview.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"item\" href=\"/miniprogram/components/toast-en\">\n  <img class=\"__light__\" src=\"https://tdesign.gtimg.com/site/miniprogram-doc/doc-toast.png\" />\n  <img class=\"__dark__\" src=\"https://tdesign.gtimg.com/site/miniprogram-doc/doc-toast-dark.png\" />\n  <p class=\"name\">Toast</p>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Displaying Toast Component Images and Title in HTML\nDESCRIPTION: HTML markup for displaying Toast component documentation images in light/dark modes along with component title. Includes responsive image switching based on theme.\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/site/docs/overview.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img class=\"__light__\" src=\"https://tdesign.gtimg.com/site/miniprogram-doc/doc-toast.png\" />\n<img class=\"__dark__\" src=\"https://tdesign.gtimg.com/site/miniprogram-doc/doc-toast-dark.png\" />\n<p class=\"name\">Toast 轻提示</p>\n</a>\n</div>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Cell Events API Table\nDESCRIPTION: Markdown table showing the available events for the Cell component\nSOURCE: https://github.com/tencent/tdesign-miniprogram/blob/develop/src/cell/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\nclick | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts)\n```"
  }
]
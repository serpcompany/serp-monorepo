[
  {
    "owner": "hummingbot",
    "repo": "hummingbot",
    "content": "TITLE: Visualizing Project Directory Structure in Markdown\nDESCRIPTION: A tree representation of the Hummingbot project directory structure showing the main folders and their purposes. The structure outlines components like connectors to exchanges, core functionality, data feeds, and strategy implementations.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nhummingbot\n│\n├── client\t\t\t\t# CLI related files\n│\n├── connector\t\t\t\t# connectors to individual exchanges\n│   ├── derivative\t\t\t# derivative connectors\n│   ├── exchange\t \t\t# spot exchanges\n│   ├── gateway\t\t\t\t# gateway connectors\n│   ├── other\t\t\t\t# misc connectors\t\n│   ├── test_support\t\t\t# utilities and frameworks for testing connectors\n│   └── utilities\t\t\t# helper functions / libraries that support connector functions\n│\n├── core\n│   ├── api_throttler\t\t\t# api throttling mechanism\n│   ├── cpp\t\t\t\t# high-performance data types written in .cpp\n│   ├── data_type\t\t\t# key data\n│   ├── event\t\t\t\t# defined events and event-tracking related files\t\t\t\t\t\t\t\t\t\t\n│   ├── gateway\t\t\t\t# gateway-related components\n│   ├── management\t\t\t# management-related functionality such as console and diagnostic tools\n│   ├── mock_api\t\t\t# mock implementation of APIs for testing\n│   ├── rate_oracle\t\t\t# manages exchange rates from different sources \n│   ├── utils\t\t\t\t# helper functions and bot plugins\t\t\n│   └── web_assistant\t\t\t# web-related functionalities\n│\n├── data_feed\t\t\t\t# price feeds such as CoinCap\n│\n├── logger\t\t\t\t# handles logging functionality\n│\n├── model\t\t\t\t# data models for managing DB migrations and market data structures\n│\n├── notifier\t\t\t\t# connectors to services that sends notifications\n│\n├── pmm_script\t\t\t\t# Script Strategies\n│\n├── remote_iface\t\t\t# remote interface for external services like MQTT\n│\n├── smart_components\t\t\t# smart components like controllers, executors, and frameworks for strategy implementation\n│   ├── controllers\t\t\t# controllers scripts for various trading strategies or algorithm\t\t\t\t\n│   ├── executors\t\t\t# various executors \n│   ├── strategy_frameworks \t\t# base frameworks for strategies including backtesting and base classes\n│   └── utils\t\t\t\t# utility scripts and modules that support smart components\n│\n├── strategy\t\t\t\t# high-level strategies that work with every market\t\n│\n├── templates\t\t\t\t# templates for config files: general, strategy, and logging\n│\n└── user\t\t\t\t# handles user-specific data like balances across exchanges\n```\n```\n\n----------------------------------------\n\nTITLE: Hummingbot Exchange Connectors Table\nDESCRIPTION: Markdown table listing all supported exchange connectors with their IDs, exchange names, types (CEX/DEX), trading types (CLOB/AMM), documentation links, and discount information.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Connector ID | Exchange | CEX/DEX | Type | Docs | Discount |\n|----|------|-------|------|------|----------|\n| `ascend_ex` | AscendEx | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/ascendex/) | - |\n```\n\n----------------------------------------\n\nTITLE: Setting Up VS Code Debug Configuration for Hummingbot\nDESCRIPTION: This launch.json configuration allows debugging the main Hummingbot application directly from VS Code or Cursor via the integrated terminal.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CURSOR_VSCODE_SETUP.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Python: Hummingbot\",\n            \"type\": \"debugpy\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceRoot}/bin/hummingbot.py\",\n            \"console\": \"integratedTerminal\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VS Code Settings for Pytest in Hummingbot\nDESCRIPTION: This JSON configuration enables pytest in VS Code with specific test arguments, including paths to ignore broken tests and environment file settings.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CURSOR_VSCODE_SETUP.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"python.testing.pytestEnabled\": true,\n    \"python.testing.pytestArgs\": [\n        \"test\",\n        // \"-v\",  // optional: verbose output\n\n        // From MakeFile (currently broken tests - KEEP UPDATED)\n        \"--ignore=test/hummingbot/connector/derivative/dydx_v4_perpetual/\",\n        \"--ignore=test/hummingbot/connector/derivative/injective_v2_perpetual/\",\n        \"--ignore=test/hummingbot/connector/exchange/injective_v2/\",\n        \"--ignore=test/hummingbot/remote_iface/\",\n        \"--ignore=test/connector/utilities/oms_connector/\",\n        \"--ignore=test/hummingbot/strategy/amm_arb/\",\n\n        // Skip prompt tests that modify conf_client.yml\n        \"--ignore=test/hummingbot/client/command/test_create_command.py\",\n    ],\n    \"python.envFile\": \"${workspaceFolder}/.env\",\n    \"python.pythonPath\": \"${config:python.defaultInterpreterPath}\" // Ensure correct Python interpreter\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Hummingbot Development\nDESCRIPTION: This snippet shows the content of the .env file needed in the project root directory to set up the PYTHONPATH and specify the Conda environment.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CURSOR_VSCODE_SETUP.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nPYTHONPATH=${PYTHONPATH}:${PWD}\nCONDA_ENV=hummingbot\n```\n\n----------------------------------------\n\nTITLE: Hummingbot Related Repositories List\nDESCRIPTION: Markdown list of related Hummingbot repositories including Deploy, Dashboard, Quants Lab, Gateway, and documentation site.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* [Deploy](https://github.com/hummingbot/deploy): Deploy Hummingbot in various configurations with Docker\n* [Dashboard](https://github.com/hummingbot/dashboard): Web app that help you create, backtest, deploy, and manage Hummingbot instances\n* [Quants Lab](https://github.com/hummingbot/quants-lab): Juypter notebooks that enable you to fetch data and perform research using Hummingbot\n* [Gateway](https://github.com/hummingbot/gateway): Typescript based API client for DEX connectors\n* [Hummingbot Site](https://github.com/hummingbot/hummingbot-site): Official documentation for Hummingbot - we welcome contributions here too!\n```\n\n----------------------------------------\n\nTITLE: Adding Upstream Remote and Fetching Data in Git\nDESCRIPTION: Commands to add the Hummingbot repository as an upstream remote and fetch upstream data in Git. This is part of the initial setup process for contributors.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add upstream https://github.com/hummingbot/hummingbot.git\ngit fetch upstream\n```\n\n----------------------------------------\n\nTITLE: Creating a New Feature Branch in Git\nDESCRIPTION: Command to create and switch to a new local branch based on the development branch of the remote upstream. This is used when starting work on a new feature or fix.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b feat/[branch_name] upstream/development\n```\n\n----------------------------------------\n\nTITLE: Rebasing Upstream Changes in Git\nDESCRIPTION: Command to rebase upstream changes from the development branch into the current working branch. This helps keep the branch up-to-date with the latest changes.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit pull --rebase upstream development\n```\n\n----------------------------------------\n\nTITLE: Creating Symbolic Link for Conda Environment Detection\nDESCRIPTION: Bash commands to create a symbolic link that works around a known Conda environment detection issue for test discovery in VS Code.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CURSOR_VSCODE_SETUP.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ~/anaconda3/envs/hummingbot/envs\nln -s ~/anaconda3/envs/hummingbot/ ~/anaconda3/envs/hummingbot/envs/hummingbot\n```\n\n----------------------------------------\n\nTITLE: Continuing Git Rebase After Resolving Conflicts\nDESCRIPTION: Command to continue the rebase process after resolving conflicts. This is used when conflicts occur during the rebase process.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit rebase --continue\n```\n\n----------------------------------------\n\nTITLE: Drawing Hummingbird Logo in ASCII Art\nDESCRIPTION: ASCII art drawing of a hummingbird using basic text characters and spacing. The image shows a side view of a hummingbird with basic features like beak, body, and tail rendered using characters like commas, dashes, forward/back slashes, and pipes.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/hb_with_flower_up_close_2.txt#2025-04-23_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n                                   ,\n                               .--'|}     _\n                              /    /}}===;o`\\\n                            .=\\.--'`\\}.----'-\\\n                           //` '---./` `'-..- |\n                           ||  /|          /\\/\\\n                            \\\\| |          `--`\n                          |\\_\\\\/\n                          \\__/\\\\\n                               \\\\\n                                \\|\n```\n\n----------------------------------------\n\nTITLE: Displaying Hummingbot ASCII Art Logo\nDESCRIPTION: An ASCII art representation of the Hummingbot logo using text characters to create a visual design. This is typically used for decorative purposes in terminal outputs or documentation.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/rein_1.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n__                   __ ______ _____ _____ _   _  __                   __\n\\ \\                 / / | ___ \\  ___|_   _| \\ | | \\ \\                 / /\n \\ \\   _ __ ___    / /  | |_/ / |__   | | |  \\| |  \\ \\   _ __ ___    / / \n  \\ \\ | '_ ` _ \\  / /   |    /|  __|  | | | . ` |   \\ \\ | '_ ` _ \\  / /  \n   \\ \\| | | | | |/ /    | |\\ \\| |___ _| |_| |\\  |    \\ \\| | | | | |/ /   \n    \\_\\_| |_| |_/_/     \\_| \\_\\____/ \\___/\\_| \\_/     \\_\\_| |_| |_/_/    \n                                                                        \n```\n\n----------------------------------------\n\nTITLE: Displaying Hummingbot ASCII Art Logo in Plain Text\nDESCRIPTION: This code snippet shows an ASCII art representation of the Hummingbot logo and the text 'DENALI TESTING'. It uses various ASCII characters to create a visual design that resembles large, stylized text.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/dennis_2.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n         _______   _______ .__   __. .__   __.  __       _______.\\n        |       \\ |   ____||  \\ |  | |  \\ |  | |  |     /       |\\n        |  .--.  ||  |__   |   \\|  | |   \\|  | |  |    |   (----`\\n        |  |  |  ||   __|  |  . `  | |  . `  | |  |     \\   \\\\n        |  '--'  ||  |____ |  |\\   | |  |\\   | |  | .----)   |\\n        |_______/ |_______||__| \\__| |__| \\__| |__| |_______/\\n\\n        .___________. _______     _______.___________. __  .__   __.   _______\\n        |           ||   ____|   /       |           ||  | |  \\ |  |  /  _____|\\n        `---|  |----`|  |__     |   (----`---|  |----`|  | |   \\|  | |  |  __\\n            |  |     |   __|     \\   \\       |  |     |  | |  . `  | |  | |_ |\\n            |  |     |  |____.----)   |      |  |     |  | |  |\\   | |  |__| |\\n            |__|     |_______|_______/       |__|     |__| |__| \\__|  \\______|\n```\n\n----------------------------------------\n\nTITLE: Displaying Hummingbot ASCII Art Logo\nDESCRIPTION: This ASCII art represents the Hummingbot logo using text characters. It creates a visual representation of the word 'HUMMING' with a stylized design.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/rein_3.txt#2025-04-23_snippet_0\n\nLANGUAGE: ASCII\nCODE:\n```\n__                   __  _   _  ___________ _____  __                   __\n\\ \\                 / / | | | ||  ___| ___ \\  ___| \\ \\                 / /\n \\ \\   _ __ ___    / /  | |_| || |__ | |_/ / |__    \\ \\   _ __ ___    / / \n  \\ \\ | '_ ` _ \\  / /   |  _  ||  __||    /|  __|    \\ \\ | '_ ` _ \\  / /  \n   \\ \\| | | | | |/ /    | | | || |___| |\\ \\| |___     \\ \\| | | | | |/ /   \n    \\_\\_| |_| |_/_/     \\_| |_/\\____/\\_| \\_\\____/      \\_\\_| |_| |_/_/    \n                                                                          \n```\n\n----------------------------------------\n\nTITLE: ASCII Art Loading Progress Bar for Dennis Silly Command\nDESCRIPTION: This ASCII art displays a loading screen for the 'Dennis Silly Command' with a visual progress bar showing 86% completion. The display is contained within a bordered box made of ASCII characters.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/dennis_loading_3.txt#2025-04-23_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n=======================================\n║         DENNIS SILLY COMMAND        ║\n║                                     ║\n║              LOADING ...            ║\n║  ████████████████████████████       ║\n║            PROGRESS = 86%           ║\n=======================================\n```\n\n----------------------------------------\n\nTITLE: Creating ASCII Art Loading Screen with Text\nDESCRIPTION: Creates a bordered ASCII art display showing a loading screen with a 10% progress bar indicator using box drawing characters and block elements.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/dennis_loading_1.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n=======================================\n║         DENNIS SILLY COMMAND        ║\n║                                     ║\n║              LOADING ...            ║\n║  ███                                ║\n║            PROGRESS = 10%           ║\n=======================================\n```\n\n----------------------------------------\n\nTITLE: Displaying ASCII Art Loading Screen in Plaintext\nDESCRIPTION: ASCII art that shows a loading screen titled 'DENNIS SILLY COMMAND' with a progress bar at 43% completion. The art uses box drawing characters and simple progress visualization.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/dennis_loading_2.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n                                  =======================================\n                                  ║         DENNIS SILLY COMMAND        ║\n                                  ║                                     ║\n                                  ║              LOADING ...            ║\n                                  ║  ███████████                        ║\n                                  ║            PROGRESS = 43%           ║\n                                  =======================================\n```\n\n----------------------------------------\n\nTITLE: ASCII Art Logo Text Design\nDESCRIPTION: Decorative ASCII art text display showing multiple words in stylized block letters. The text appears to be a header or logo design for a system or application interface.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/dennis_4.txt#2025-04-23_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n         _______   _______ .__   __. .__   __.  __       _______.\\n        |       \\ |   ____||  \\ |  | |  \\ |  | |  |     /       |\\n        |  .--.  ||  |__   |   \\|  | |   \\|  | |  |    |   (----`\\n        |  |  |  ||   __|  |  . `  | |  . `  | |  |     \\   \\\\n        |  '--'  ||  |____ |  |\\   | |  |\\   | |  | .----)   |\\n        |_______/ |_______||__| \\__| |__| \\__| |__| |_______/\\n\\n        .___________. _______     _______.___________. __  .__   __.   _______\\n        |           ||   ____|   /       |           ||  | |  \\ |  |  /  _____|\\n        `---|  |----`|  |__     |   (----`---|  |----`|  | |   \\|  | |  |  __\\n            |  |     |   __|     \\   \\       |  |     |  | |  . `  | |  | |_ |\\n            |  |     |  |____.----)   |      |  |     |  | |  |\\   | |  |__| |\\n            |__|     |_______|_______/       |__|     |__| |__| \\__|  \\______|\\n\\n             _______. __   __       __      ____    ____\\n            /       ||  | |  |     |  |     \\   \\  /   /\\n           |   (----`|  | |  |     |  |      \\   \\/   /\\n            \\   \\    |  | |  |     |  |       \\_    _/\\n        .----)   |   |  | |  `----.|  `----.    |  |\\n        |_______/    |__| |_______||_______|    |__|\\n\\n          ______   ______   .___  ___. .___  ___.      ___      .__   __.  _______       _______.\\n         /      | /  __  \\  |   \\/   | |   \\/   |     /   \\     |  \\ |  | |       \\     /       |\\n        |  ,----'|  |  |  | |  \\  /  | |  \\  /  |    /  ^  \\    |   \\|  | |  .--.  |   |   (----`\\n        |  |     |  |  |  | |  |\\/|  | |  |\\/|  |   /  /_\\  \\   |  . `  | |  |  |  |    \\   \\\\n        |  `----.|  `--'  | |  |  |  | |  |  |  |  /  _____  \\  |  |\\   | |  '--'  |.----)   |\\n         \\______| \\______/  |__|  |__| |__|  |__| /__/     \\__\\ |__| \\__| |_______/ |_______/\n```\n\n----------------------------------------\n\nTITLE: WAVES ASCII Art Logo Implementation\nDESCRIPTION: An ASCII art implementation that creates a stylized logo of the word 'WAVES' using basic text characters. The pattern uses underscores, forward slashes, backslashes, and whitespace to create a decorative visual effect.\nSOURCE: https://github.com/hummingbot/hummingbot/blob/master/hummingbot/client/command/silly_resources/rein_2.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n__                   __  _    _  ___   _____  __                   __\n\\ \\                 / / | |  | |/ _ \\ /  ___| \\ \\                 / /\n \\ \\   _ __ ___    / /  | |  | / /_\\ \\\\ `--.   \\ \\   _ __ ___    / / \n  \\ \\ | '_ ` _ \\  / /   | |/\\| |  _  | `--. \\   \\ \\ | '_ ` _ \\  / /  \n   \\ \\| | | | | |/ /    \\  /\\  / | | |/\\__/ /    \\ \\| | | | | |/ /   \n    \\_\\_| |_| |_/_/      \\/  \\/\\_| |_/\\____/      \\_\\_| |_| |_/_/    \n                                                                     \n```"
  }
]
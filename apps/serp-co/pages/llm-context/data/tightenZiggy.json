[
  {
    "owner": "tighten",
    "repo": "ziggy",
    "content": "TITLE: Basic Usage of route() Function in JavaScript\nDESCRIPTION: Demonstrates how to use Ziggy's route() function to generate a URL for a named route in JavaScript.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nroute('posts.index'); // 'https://ziggy.test/posts'\n```\n\n----------------------------------------\n\nTITLE: Using route() with Parameters in JavaScript\nDESCRIPTION: Shows different ways to pass parameters to Ziggy's route() function in JavaScript.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nroute('posts.show', 1);           // 'https://ziggy.test/posts/1'\nroute('posts.show', [1]);         // 'https://ziggy.test/posts/1'\nroute('posts.show', { post: 1 }); // 'https://ziggy.test/posts/1'\n```\n\n----------------------------------------\n\nTITLE: HTTP Request with Axios Using route() in JavaScript\nDESCRIPTION: Example of making an HTTP request with axios using Ziggy's route() function.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nconst post = { id: 1, title: 'Ziggy Stardust' };\n\nreturn axios.get(route('posts.show', post)).then((response) => response.data);\n```\n\n----------------------------------------\n\nTITLE: Using route() with Multiple Parameters in JavaScript\nDESCRIPTION: Demonstrates passing multiple parameters to Ziggy's route() function in JavaScript.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nroute('venues.events.show', [1, 2]);                 // 'https://ziggy.test/venues/1/events/2'\nroute('venues.events.show', { venue: 1, event: 2 }); // 'https://ziggy.test/venues/1/events/2'\n```\n\n----------------------------------------\n\nTITLE: Using route() with Query Parameters in JavaScript\nDESCRIPTION: Shows how to add query parameters to routes using Ziggy's route() function in JavaScript.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nroute('venues.events.show', {\n    venue: 1,\n    event: 2,\n    page: 5,\n    count: 10,\n});\n// 'https://ziggy.test/venues/1/events/2?page=5&count=10'\n```\n\n----------------------------------------\n\nTITLE: Using the route().current() Method in JavaScript\nDESCRIPTION: Shows how to use Ziggy's route().current() method to check the current route.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// Laravel route called 'events.index' with URI '/events'\n// Current window URL is https://ziggy.test/events\n\nroute().current();               // 'events.index'\nroute().current('events.index'); // true\nroute().current('events.*');     // true\nroute().current('events.show');  // false\n```\n\n----------------------------------------\n\nTITLE: Using route().current() with Parameters in JavaScript\nDESCRIPTION: Demonstrates checking the current route with parameters using Ziggy's route().current() method.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// Laravel route called 'venues.events.show' with URI '/venues/{venue}/events/{event}'\n// Current window URL is https://myapp.com/venues/1/events/2?hosts=all\n\nroute().current('venues.events.show', { venue: 1 });           // true\nroute().current('venues.events.show', { venue: 1, event: 2 }); // true\nroute().current('venues.events.show', { hosts: 'all' });       // true\nroute().current('venues.events.show', { venue: 6 });           // false\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Route Parameters with route().params in JavaScript\nDESCRIPTION: Demonstrates how to retrieve the parameters of the current route using Ziggy's route().params property.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// Laravel route called 'venues.events.show' with URI '/venues/{venue}/events/{event}'\n// Current window URL is https://myapp.com/venues/1/events/2?hosts=all\n\nroute().params; // { venue: '1', event: '2', hosts: 'all' }\n```\n\n----------------------------------------\n\nTITLE: Using Named Query Parameters with route() in JavaScript\nDESCRIPTION: Shows how to use named query parameters that match route parameters using the _query key in Ziggy.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nroute('venues.events.show', {\n    venue: 1,\n    event: 2,\n    _query: {\n        event: 3,\n        page: 5,\n    },\n});\n// 'https://ziggy.test/venues/1/events/2?event=3&page=5'\n```\n\n----------------------------------------\n\nTITLE: Using route() with Route-Model Binding in JavaScript\nDESCRIPTION: Shows how Ziggy handles route-model binding when using the route() function in JavaScript.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nconst post = {\n    id: 3,\n    title: 'Introducing Ziggy v1',\n    slug: 'introducing-ziggy-v1',\n    date: '2020-10-23T20:59:24.359278Z',\n};\n\n// Ziggy knows that this route uses the 'slug' route-model binding key:\n\nroute('posts.show', post); // 'https://ziggy.test/blog/introducing-ziggy-v1'\n```\n\n----------------------------------------\n\nTITLE: Using route() with Default Parameter Values in JavaScript\nDESCRIPTION: Shows how Ziggy uses Laravel's default parameter values when generating URLs.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nroute('posts.show', 1); // 'https://ziggy.test/de/posts/1'\n```\n\n----------------------------------------\n\nTITLE: Checking if a Route Exists with route().has() in JavaScript\nDESCRIPTION: Shows how to check if a named route exists using Ziggy's route().has() method.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// Laravel app has only one named route, 'home'\n\nroute().has('home');   // true\nroute().has('orders'); // false\n```\n\n----------------------------------------\n\nTITLE: Using route() with Custom Keys for Scoped Bindings in JavaScript\nDESCRIPTION: Shows how Ziggy handles custom keys for scoped bindings when using the route() function.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nconst photo = {\n    uuid: '714b19e8-ac5e-4dab-99ba-34dc6fdd24a5',\n    filename: 'sunset.jpg',\n}\n\nroute('authors.photos.show', [{ id: 1, name: 'Ansel' }, photo]);\n// 'https://ziggy.test/authors/1/photos/714b19e8-ac5e-4dab-99ba-34dc6fdd24a5'\n```\n\n----------------------------------------\n\nTITLE: Vue Integration with Ziggy\nDESCRIPTION: Setup for using Ziggy with Vue.js including plugin registration and component usage\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createApp } from 'vue';\nimport { ZiggyVue } from 'ziggy-js';\nimport App from './App.vue';\n\ncreateApp(App).use(ZiggyVue);\n```\n\nLANGUAGE: vue\nCODE:\n```\n<a class=\"nav-link\" :href=\"route('home')\">Home</a>\n```\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { inject } from 'vue';\n\nconst route = inject('route');\n</script>\n```\n\n----------------------------------------\n\nTITLE: React Integration with Ziggy\nDESCRIPTION: Example of using Ziggy's useRoute hook in React components\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_32\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport { useRoute } from 'ziggy-js';\n\nexport default function PostsLink() {\n    const route = useRoute();\n\n    return <a href={route('posts.index')}>Posts</a>;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Ziggy with Composer\nDESCRIPTION: Command to install Ziggy in a Laravel application using Composer package manager.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require tightenco/ziggy\n```\n\n----------------------------------------\n\nTITLE: Importing Ziggy Route Function\nDESCRIPTION: Example of importing and using the route() function with manual Ziggy configuration\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nimport { route } from '../../vendor/tightenco/ziggy';\nimport { Ziggy } from './ziggy.js';\n\nroute('home', undefined, undefined, Ziggy);\n```\n\n----------------------------------------\n\nTITLE: Boolean Query Parameters with route() in JavaScript\nDESCRIPTION: Demonstrates how Ziggy handles boolean query parameters, converting them to integers in the URL.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nroute('venues.events.show', {\n    venue: 1,\n    event: 2,\n    _query: {\n        draft: false,\n        overdue: true,\n    },\n});\n// 'https://ziggy.test/venues/1/events/2?draft=0&overdue=1'\n```\n\n----------------------------------------\n\nTITLE: Using current() Method with Parameters in JavaScript\nDESCRIPTION: Shows examples of using Ziggy's current() method to check if the current route matches a specific route name and parameters. This feature enables more precise route matching with parameter values.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/UPGRADING.md#2025-04-15_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Route called 'events.venues.show', with URI '/events/{event}/venues/{venue}'\n// Window URL is https://myapp.com/events/1/venues/2?authors=all\n\n// Before (unchanged)\nroute().current(); // 'events.venues.show'\nroute().current('events.venues.show'); // true\n\n// New in Ziggy v1\nroute().current('events.venues.show', { event: 1, venue: 2 }); // true\nroute().current('events.venues.show', { authors: 'all' }); // true\nroute().current('events.venues.show', { venue: 6 }); // false\n```\n\n----------------------------------------\n\nTITLE: Using Route-Model Binding with Ziggy in JavaScript\nDESCRIPTION: Demonstrates how to use Ziggy's route helper with an object representing a model instance. The object's slug property is automatically used as the route parameter value based on the model's getRouteKeyName method.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/UPGRADING.md#2025-04-15_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst post = { id: 15, slug: 'announcing-ziggy-v1', author: 'Jacob', published: false };\n\nroute('posts.update', post); // 'https://ziggy.test/posts/announcing-ziggy-v1'\n```\n\n----------------------------------------\n\nTITLE: Basic Route Definition in Laravel\nDESCRIPTION: Example of defining a named route in Laravel that can be used with Ziggy in JavaScript.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nRoute::get('posts', fn (Request $request) => /* ... */)->name('posts.index');\n```\n\n----------------------------------------\n\nTITLE: Route with Single Parameter in Laravel\nDESCRIPTION: Example of defining a named route with a single parameter in Laravel.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nRoute::get('posts/{post}', fn (Post $post) => /* ... */)->name('posts.show');\n```\n\n----------------------------------------\n\nTITLE: Route with Multiple Parameters in Laravel\nDESCRIPTION: Example of defining a named route with multiple parameters in Laravel.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nRoute::get('venues/{venue}/events/{event}', fn (Venue $venue, Event $event) => /* ... */)\n    ->name('venues.events.show');\n```\n\n----------------------------------------\n\nTITLE: Route with Route-Model Binding in Laravel\nDESCRIPTION: Example of a route using route-model binding in Laravel.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_19\n\nLANGUAGE: php\nCODE:\n```\nRoute::get('blog/{post}', function (Post $post) {\n    return view('posts.show', ['post' => $post]);\n})->name('posts.show');\n```\n\n----------------------------------------\n\nTITLE: Custom Route Key Name for Route-Model Binding in Laravel\nDESCRIPTION: Example of defining a custom route key name for route-model binding in a Laravel model.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n// app/Models/Post.php\n\nclass Post extends Model\n{\n    public function getRouteKeyName()\n    {\n        return 'slug';\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Route with Default Parameter Values in Laravel\nDESCRIPTION: Example of a route with default parameter values in Laravel.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nRoute::get('{locale}/posts/{post}', fn (Post $post) => /* ... */)->name('posts.show');\n```\n\n----------------------------------------\n\nTITLE: Setting Default Parameter Values in Laravel Middleware\nDESCRIPTION: Example of setting default route parameter values in Laravel middleware.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n// app/Http/Middleware/SetLocale.php\n\nURL::defaults(['locale' => $request->user()->locale ?? 'de']);\n```\n\n----------------------------------------\n\nTITLE: Route with Custom Keys for Scoped Bindings in Laravel\nDESCRIPTION: Example of a route with custom keys for scoped bindings in Laravel.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_21\n\nLANGUAGE: php\nCODE:\n```\nRoute::get('authors/{author}/photos/{photo:uuid}', fn (Author $author, Photo $photo) => /* ... */)\n    ->name('authors.photos.show');\n```\n\n----------------------------------------\n\nTITLE: Generating Ziggy Configuration with Artisan\nDESCRIPTION: Command to generate Ziggy's configuration file using Artisan CLI\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan ziggy:generate\n```\n\n----------------------------------------\n\nTITLE: Generated Ziggy Configuration Structure\nDESCRIPTION: Example of the generated Ziggy configuration file structure containing route definitions and base URL\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nconst Ziggy = {\n    url: 'https://ziggy.test',\n    port: null,\n    routes: {\n        home: {\n            uri: '/',\n            methods: [ 'GET', 'HEAD'],\n            domain: null,\n        },\n        login: {\n            uri: 'login',\n            methods: ['GET', 'HEAD'],\n            domain: null,\n        },\n    },\n};\n\nexport { Ziggy };\n```\n\n----------------------------------------\n\nTITLE: Global TypeScript Declaration for Ziggy's route() Function\nDESCRIPTION: TypeScript declaration to make Ziggy's route() function available globally in TypeScript projects.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nimport { route as routeFn } from 'ziggy-js';\n\ndeclare global {\n    var route: typeof routeFn;\n}\n```\n\n----------------------------------------\n\nTITLE: Vite Configuration for Ziggy Alias\nDESCRIPTION: Vite configuration to create an alias for simplified Ziggy imports\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nexport default defineConfig({\n    resolve: {\n        alias: {\n            'ziggy-js': path.resolve('vendor/tightenco/ziggy'),\n        },\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: TypeScript Declaration for Vue\nDESCRIPTION: TypeScript declaration to avoid type errors when using route() in Vue components\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\ndeclare module 'vue' {\n    interface ComponentCustomProperties {\n        route: typeof routeFn;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Route Filtering Configuration\nDESCRIPTION: PHP configuration for filtering routes in Ziggy's output\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_33\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n    'only' => ['home', 'posts.index', 'posts.show'],\n];\n```\n\n----------------------------------------\n\nTITLE: Generating TypeScript Route Types with Artisan Command\nDESCRIPTION: Command to generate TypeScript type definitions for routes using Ziggy's Artisan command.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan ziggy:generate --types\n```\n\n----------------------------------------\n\nTITLE: Configuring Ziggy Types in TypeScript Configuration\nDESCRIPTION: Configuration for loading Ziggy's TypeScript types from the vendor directory when not using the NPM package.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/README.md#2025-04-15_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"compilerOptions\": {\n        \"paths\": {\n            \"ziggy-js\": [\"./vendor/tightenco/ziggy\"]\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Route-Model Binding with Custom Key in PHP\nDESCRIPTION: Demonstrates defining a custom route key for a Post model using the getRouteKeyName method. This allows Ziggy to use the 'slug' property instead of 'id' when binding route parameters.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/UPGRADING.md#2025-04-15_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nclass Post extends Model\n{\n     public function getRouteKeyName()\n     {\n         return 'slug';\n     }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Route with Post Model Type-Hint in PHP\nDESCRIPTION: Shows how to define a Laravel route with implicit model binding using a type-hinted Post parameter in the closure. This enables Ziggy to automatically resolve the correct model attribute.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/UPGRADING.md#2025-04-15_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nRoute::post('posts/{post}', function (Post $post) {\n    return view('posts.show', ['post' => $post]);\n})->name('posts.update');\n```\n\n----------------------------------------\n\nTITLE: Running Ziggy Tests\nDESCRIPTION: Commands for running PHP tests with Pest and JavaScript tests with npm. These commands are used to verify that contributions maintain the integrity of the codebase.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/CONTRIBUTING.md#2025-04-15_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nvendor/bin/pest\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Building Ziggy Assets\nDESCRIPTION: Command to rebuild Ziggy's assets during the release process. This ensures the distributed files are up to date with the latest changes.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/CONTRIBUTING.md#2025-04-15_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running NPM Version Command for Releases\nDESCRIPTION: Command for updating package.json version without creating a git tag. This is part of the release process for maintaining version consistency.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/CONTRIBUTING.md#2025-04-15_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm version <version> --no-git-tag-version\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Line Endings for Windows\nDESCRIPTION: Git configuration command to fix CRLF/LF line ending issues when running tests on Windows systems. This preserves the line endings from the repository when cloning.\nSOURCE: https://github.com/tighten/ziggy/blob/2.x/CONTRIBUTING.md#2025-04-15_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global core.autocrlf input\n```"
  }
]
[
  {
    "owner": "frdel",
    "repo": "agent-zero",
    "content": "TITLE: Docker Commands for Managing Agent Zero\nDESCRIPTION: This collection of Docker commands is used to manage the Agent Zero application, including stopping, removing, and running a new container. These commands ensure that any updates or changes in the container environment do not affect the data.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop agent-zero\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker rm agent-zero\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker rmi frdel/agent-zero-run\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull frdel/agent-zero-run\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p $PORT:80 -v /path/to/your/data:/a0 frdel/agent-zero-run\n```\n\n----------------------------------------\n\nTITLE: Running the Local Agent Zero Instance - Python\nDESCRIPTION: This snippet runs the Agent Zero application with a web interface by executing the Python script 'run_ui.py'. After running this command, users are instructed to open the displayed URL in a web browser to access Agent Zero's interface.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\npython run_ui.py\n```\n\n----------------------------------------\n\nTITLE: Launching Agent Zero Web UI using Python\nDESCRIPTION: This command starts the Agent Zero Web UI. It should be run from the Agent Zero directory after activating the conda environment if one is being used.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/quickstart.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython run_ui.py\n```\n\n----------------------------------------\n\nTITLE: Running Agent Zero with Docker\nDESCRIPTION: This Bash snippet demonstrates how to pull and run the Agent Zero Docker image on your local machine. It requires Docker to be installed and running. By executing these commands, you will start the Agent Zero AI framework on port 50001, accessible via a web browser at http://localhost:50001.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/github_readme.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Pull and run with Docker\n\ndocker pull frdel/agent-zero-run\ndocker run -p 50001:80 frdel/agent-zero-run\n\n# Visit http://localhost:50001 to start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Agent Zero with Docker\nDESCRIPTION: This snippet demonstrates how to pull and run the Agent Zero Docker image. It includes commands to download the image and start a container, making the Agent Zero interface accessible via a web browser.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Pull and run with Docker\n\ndocker pull frdel/agent-zero-run\ndocker run -p 50001:80 frdel/agent-zero-run\n\n# Visit http://localhost:50001 to start\n```\n\n----------------------------------------\n\nTITLE: Structuring Response Tool Call in JSON for Agent-Zero Project\nDESCRIPTION: This JSON structure demonstrates how to use the 'response' tool to provide a final answer to the user and end task processing. It includes a 'thoughts' array for reasoning, 'tool_name' set to 'response', and 'tool_args' with a 'text' field containing the answer.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.response.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"...\",\n    ],\n    \"tool_name\": \"response\",\n    \"tool_args\": {\n        \"text\": \"Answer to the user\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Agent Zero Docker Container\nDESCRIPTION: Command to run the Agent Zero Docker container, mapping a port and mounting a local directory for data persistence. Replace $PORT with the desired port number and /path/to/your/data with the local directory path.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p $PORT:80 -v /path/to/your/data:/a0 frdel/agent-zero-run\n```\n\n----------------------------------------\n\nTITLE: Running Agent Zero Docker Container\nDESCRIPTION: Command to run the Agent Zero Docker container with port mapping and volume mounting for data persistence\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p $PORT:80 -v /path/to/your/data:/a0 frdel/agent-zero-run\n```\n\n----------------------------------------\n\nTITLE: Executing Python Code with Code Execution Tool\nDESCRIPTION: This snippet demonstrates how to use the code execution tool to run Python code. It imports the os module and prints the current working directory.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.code_exe.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"Need to do...\",\n        \"I can use...\",\n        \"Then I can...\",\n    ],\n    \"tool_name\": \"code_execution_tool\",\n    \"tool_args\": {\n        \"runtime\": \"python\",\n        \"session\": 0,\n        \"code\": \"import os\\nprint(os.getcwd())\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling Agent Zero Docker Image\nDESCRIPTION: Command to pull the Agent Zero Docker image from the Docker Hub repository. This is an alternative to using the Docker Desktop GUI for pulling the image.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull frdel/agent-zero-run\n```\n\n----------------------------------------\n\nTITLE: Loading Memories with Query and Filters in JSON\nDESCRIPTION: This snippet demonstrates how to use the memory_load tool to search and retrieve memories based on a query, threshold, limit, and filter. It returns memory content as metadata key-value pairs.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.memory.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"Let's search my memory for...\",\n    ],\n    \"tool_name\": \"memory_load\",\n    \"tool_args\": {\n        \"query\": \"File compression library for...\",\n        \"threshold\": 0.6,\n        \"limit\": 5,\n        \"filter\": \"area=='main' and timestamp<'2024-01-01 00:00:00'\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling Agent Zero Docker Image\nDESCRIPTION: Command to pull the Agent Zero Docker image from Docker Hub repository\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull frdel/agent-zero-run\n```\n\n----------------------------------------\n\nTITLE: Loading Image Data for LLM using vision_load Tool in JSON\nDESCRIPTION: This snippet demonstrates how to use the vision_load tool to load image data into an LLM. The tool takes a 'paths' argument which should contain the file path(s) to the image(s) to be loaded. This is typically used when an agent needs to process or analyze visual information.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tools_vision.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"I need to see the image...\",\n    ],\n    \"tool_name\": \"vision_load\",\n    \"tool_args\": {\n        \"paths\": [\"/path/to/image.png\"],\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Terminal Command with Code Execution Tool\nDESCRIPTION: This snippet shows how to use the code execution tool to run a terminal command. It demonstrates installing the 'zip' package using apt-get.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.code_exe.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"Need to do...\",\n        \"Need to install...\",\n    ],\n    \"tool_name\": \"code_execution_tool\",\n    \"tool_args\": {\n        \"runtime\": \"terminal\",\n        \"session\": 0,\n        \"code\": \"apt-get install zip\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Ollama on macOS using Homebrew\nDESCRIPTION: This snippet installs Ollama on macOS using the Homebrew package manager. Ensure you have Homebrew installed on your system before executing this command.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install ollama\n```\n\n----------------------------------------\n\nTITLE: Knowledge Tool Usage Example in JSON\nDESCRIPTION: Example JSON structure showing how to use the knowledge tool with thoughts and question arguments. The tool processes questions by combining responses from memory and online sources.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.knowledge.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"...\",\n    ],\n    \"tool_name\": \"knowledge_tool\",\n    \"tool_args\": {\n        \"question\": \"How to...\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Ollama on macOS using Homebrew\nDESCRIPTION: Command to install Ollama on macOS using the Homebrew package manager.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install ollama\n```\n\n----------------------------------------\n\nTITLE: Example Usage of webpage_content_tool\nDESCRIPTION: Demonstrates the JSON structure for calling the webpage content tool with a URL parameter. The tool requires a fully qualified URL including http:// or https:// protocol.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.web.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"...\",\n    ],\n    \"tool_name\": \"webpage_content_tool\",\n    \"tool_args\": {\n        \"url\": \"https://...comexample\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling a Model with Ollama\nDESCRIPTION: This command pulls a specified language model using Ollama. Replace <model-name> with the desired model, such as 'mistral-large'. Ensure Ollama is correctly installed before running this command.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nollama pull <model-name>\n```\n\n----------------------------------------\n\nTITLE: Calling a Subordinate Agent using JSON in Task Delegation System\nDESCRIPTION: This code snippet demonstrates how to use the call_subordinate tool to delegate a task to a subordinate agent. It includes the thought process, tool name, and arguments for creating a new subordinate or communicating with an existing one.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.call_sub.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"The result seems to be ok but...\",\n        \"I will ask a coder subordinate to fix...\"\n    ],\n    \"tool_name\": \"call_subordinate\",\n    \"tool_args\": {\n        \"message\": \"...\",\n        \"reset\": \"true\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling an Ollama model\nDESCRIPTION: Generic command to download a specific model using Ollama. Replace <model-name> with the desired model.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nollama pull <model-name>\n```\n\n----------------------------------------\n\nTITLE: Defining Agent-Zero Communication Protocol in JSON\nDESCRIPTION: This snippet demonstrates the expected JSON structure for communication in the Agent-Zero project. It includes fields for thoughts, reflections, tool name, and tool arguments. Mathematical expressions should use KaTeX delimiters.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/reflection/agent.system.main.communication.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"...\",\n    ],\n    \"reflection\": [\n        \"...\",\n    ],\n    \"tool_name\": \"name_of_tool\",\n    \"tool_args\": {\n        \"arg1\": \"val1\",\n        \"arg2\": \"val2\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Downloaded Models with Ollama\nDESCRIPTION: This command lists all models that have been downloaded on your system using Ollama. It helps you manage and review the models currently available for use.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nollama list\n```\n\n----------------------------------------\n\nTITLE: Using Input Tool for Keyboard Input in Agent-Zero\nDESCRIPTION: This JSON structure demonstrates how to use the input tool to provide keyboard input for a terminal program. It includes thoughts about the program's prompt and specifies the keyboard input to be sent.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.input.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"The program asks for Y/N...\",\n    ],\n    \"tool_name\": \"input\",\n    \"tool_args\": {\n        \"keyboard\": \"Y\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Removing a Model with Ollama\nDESCRIPTION: This command allows you to remove a specific model that has been downloaded using Ollama. Replace <model-name> with the name of the model you intend to delete.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nollama rm <model-name>\n```\n\n----------------------------------------\n\nTITLE: Defining Agent Behavior Guidelines in Markdown\nDESCRIPTION: This Markdown snippet outlines important behavior guidelines for the Agent Zero project, including instructions on task execution, website interaction, and content summarization.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/browser_agent.system.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# important\ndo not overdo task\nwhen told go to website open website and stop\ndo not interact unless told to\nwaiting for instructions means ending task as done\naccept any cookies do not go to cokkie settings\nin page_summary respond with one paragraph of main content plus brief overview of page elements\n```\n\n----------------------------------------\n\nTITLE: Removing an Ollama model\nDESCRIPTION: Command to remove a specific model downloaded with Ollama. Replace <model-name> with the model to be removed.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nollama rm <model-name>\n```\n\n----------------------------------------\n\nTITLE: Saving Text to Memory in JSON\nDESCRIPTION: This snippet shows how to use the memory_save tool to save text to memory. It returns an ID for the saved memory.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.memory.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"I need to memorize...\",\n    ],\n    \"tool_name\": \"memory_save\",\n    \"tool_args\": {\n        \"text\": \"# To compress...\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Conda Environment for Agent Zero - Python\nDESCRIPTION: This code snippet illustrates how to create a new Conda environment named 'a0' with Python version 3.12. It uses the command 'conda create' to set up the environment, and the '-y' flag bypasses confirmation prompts. This is required to isolate the project dependencies from the system Python installation.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nconda create -n a0 python=3.12 -y\n```\n\n----------------------------------------\n\nTITLE: Formatting JSON Response for Successful Solutions in Python\nDESCRIPTION: This snippet demonstrates the expected JSON format for documenting successful technical solutions. It includes problem description and step-by-step solution instructions.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/memory.solutions_sum.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"problem\": \"Task is to download a video from YouTube. A video URL is specified by the user.\",\n    \"solution\": \"1. Install yt-dlp library using 'pip install yt-dlp'\\n2. Download the video using yt-dlp command: 'yt-dlp YT_URL', replace YT_URL with your video URL.\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating a Conda Environment for Agent Zero\nDESCRIPTION: This command creates a new Conda environment named 'a0' with Python version 3.12. The '-y' flag automatically confirms any prompts. Ensure Conda is installed and available in your PATH.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nconda create -n a0 python=3.12 -y\n```\n\n----------------------------------------\n\nTITLE: Formatting Successful Solutions in JSON for Agent Assistance\nDESCRIPTION: This JSON structure demonstrates how to format successful technical solutions, including problem description and step-by-step instructions for solving the problem. It includes details such as library installation and command execution.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.memory.hist_suc.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"problem\": \"Task is to download a video from YouTube. A video URL is specified by the user.\",\n    \"solution\": \"1. Install yt-dlp library using 'pip install yt-dlp'\\n2. Download the video using yt-dlp command: 'yt-dlp YT_URL', replace YT_URL with your video URL.\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Activating Conda Environment - Python\nDESCRIPTION: This snippet demonstrates how to activate the newly created Conda environment 'a0'. The command 'conda activate a0' changes the terminal's context, allowing all subsequent package installations to occur within the new environment. This is crucial for maintaining project dependencies.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nconda activate a0\n```\n\n----------------------------------------\n\nTITLE: Waiting for Output from Long-Running Scripts\nDESCRIPTION: This snippet illustrates how to use the code execution tool to wait for output from long-running scripts. It uses the 'output' runtime to check for program completion.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.code_exe.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"Waiting for program to finish...\",\n    ],\n    \"tool_name\": \"code_execution_tool\",\n    \"tool_args\": {\n        \"runtime\": \"output\",\n        \"session\": 0,\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Activating Conda Environment\nDESCRIPTION: Activates the 'a0' Conda environment in the current terminal session. The prompt should change to indicate the active environment.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nconda activate a0\n```\n\n----------------------------------------\n\nTITLE: Generating Search Queries from User Messages in JSON\nDESCRIPTION: This snippet demonstrates the expected input-output format for the AI system. It shows how the AI should interpret user messages and generate concise search queries based on the user's intent.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/memory.solutions_query.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"USER\": \"I want to download a video from YouTube. A video URL is specified by the user.\",\n\"AI\": \"download youtube video\",\n\"USER\": \"Now compress all files in that folder\",\n\"AI\": \"compress files in folder\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Python Requirements from File - Python\nDESCRIPTION: This command installs all necessary packages listed in the 'requirements.txt' file using the pip package manager. It ensures that the environment has all the dependencies needed for the Agent Zero project. This process may take some time depending on the number of packages to be installed.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Example JSON Memory Notes Format\nDESCRIPTION: Demonstrates the expected JSON array format for storing extracted memory notes. Shows how to structure simple facts about a user that are worth remembering.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/memory.memories_sum.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  \"User's name is John Doe\",\n  \"User's age is 30\"\n]\n```\n\n----------------------------------------\n\nTITLE: Installing Python Packages with pip\nDESCRIPTION: Installs all required Python packages listed in 'requirements.txt' using pip. Ensure the 'a0' environment is activated when executing this command.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Implementing Agent-Zero's Process Input Method in Python\nDESCRIPTION: This method processes user input, generates a response using AI models, and executes any necessary actions. It handles natural language understanding and task execution.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.ai_response.md#2025-04-21_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\ndef process_input(self, user_input):\n    # Analyze input and retrieve relevant context\n    context = self.memory.get_relevant_context(user_input)\n    \n    # Generate initial response\n    response = self.gpt4.generate_response(user_input, context)\n    \n    # Plan and execute actions if needed\n    if self.task_planner.requires_action(response):\n        action_plan = self.task_planner.create_plan(response)\n        action_result = self.action_executor.execute_plan(action_plan)\n        response += f\"\\n\\nAction taken: {action_result}\"\n    \n    # Update memory\n    self.memory.add_interaction(user_input, response)\n    \n    return response\n```\n\n----------------------------------------\n\nTITLE: Listing downloaded Ollama models\nDESCRIPTION: Command to display a list of all models downloaded using Ollama.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nollama list\n```\n\n----------------------------------------\n\nTITLE: Installing Python dependencies for Agent Zero\nDESCRIPTION: Command to install required Python packages for Agent Zero using pip and the requirements.txt file.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Forgetting Memories with Query and Filters in JSON\nDESCRIPTION: This snippet demonstrates the use of the memory_forget tool to remove memories based on a query, threshold, and filter. It has a default threshold of 0.75 to prevent accidental deletions.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.memory.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"Let's remove all memories about cars\",\n    ],\n    \"tool_name\": \"memory_forget\",\n    \"tool_args\": {\n        \"query\": \"cars\",\n        \"threshold\": 0.75,\n        \"filter\": \"timestamp.startswith('2022-01-01')\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Ollama on Linux using curl\nDESCRIPTION: This snippet provides the command to install Ollama on Linux using a shell command with curl. Make sure you have curl installed and the appropriate permissions to execute the command.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -fsSL https://ollama.com/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Executing Task Completion in Agent-Zero JSON Format\nDESCRIPTION: This JSON snippet demonstrates how to structure a response when there are no more tasks to complete. It includes thoughts, the tool name to be used, and the arguments for that tool.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.msg_timeout.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"There's no more work for me, I will ask for another task\",\n    ],\n    \"tool_name\": \"task_done\",\n    \"tool_args\": {\n        \"text\": \"I have no more work, please tell me if you need anything.\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Ollama on Linux using curl\nDESCRIPTION: Command to download and run the Ollama installation script on Linux systems.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -fsSL https://ollama.com/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Resetting Terminal Session with Code Execution Tool\nDESCRIPTION: This snippet demonstrates how to reset the terminal session using the code execution tool. It's useful when the tool is not responding or needs to be restarted.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.code_exe.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"code_execution_tool not responding...\",\n    ],\n    \"tool_name\": \"code_execution_tool\",\n    \"tool_args\": {\n        \"runtime\": \"reset\",\n        \"session\": 0,\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding User to Docker Group on Linux\nDESCRIPTION: Commands for adding the current user to the docker group and logging in to Docker on Linux systems. This is necessary for using Docker without sudo privileges.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/installation.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo usermod -aG docker $USER\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker login\n```\n\n----------------------------------------\n\nTITLE: Initializing Agent-Zero Class in Python\nDESCRIPTION: This snippet defines the Agent-Zero class, initializing it with various components such as memory, task planner, and model interfaces. It sets up the core structure of the AI assistant.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.ai_response.md#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nclass AgentZero:\n    def __init__(self):\n        self.memory = Memory()\n        self.task_planner = TaskPlanner()\n        self.gpt4 = GPT4Interface()\n        self.claude = ClaudeInterface()\n        self.stable_diffusion = StableDiffusionInterface()\n        self.voice = VoiceInterface()\n        self.vision = VisionInterface()\n        self.action_executor = ActionExecutor()\n```\n\n----------------------------------------\n\nTITLE: Adding User to Docker Group on Linux\nDESCRIPTION: Commands for adding the current user to the docker group and verifying Docker access on Linux systems\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo usermod -aG docker $USER\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker login\n```\n\n----------------------------------------\n\nTITLE: Deleting Memories by IDs in JSON\nDESCRIPTION: This snippet illustrates how to use the memory_delete tool to remove memories using their IDs. The IDs are provided as a comma-separated string.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.memory.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"I need to delete...\",\n    ],\n    \"tool_name\": \"memory_delete\",\n    \"tool_args\": {\n        \"ids\": \"32cd37ffd1-101f-4112-80e2-33b795548116, d1306e36-6a9c- ...\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Agent Zero Docker container\nDESCRIPTION: Series of Docker commands to stop, remove, update, and run a new Agent Zero container.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# Stop the current container\ndocker stop agent-zero\n\n# Remove the container (data is safe in the folder)\ndocker rm agent-zero\n\n# Remove the old image\ndocker rmi frdel/agent-zero-run\n\n# Pull the latest image\ndocker pull frdel/agent-zero-run\n\n# Run new container with the same volume mount\ndocker run -p $PORT:80 -v /path/to/your/data:/a0 frdel/agent-zero-run\n```\n\n----------------------------------------\n\nTITLE: Implementing Agent-Zero's Generate Image Method in Python\nDESCRIPTION: This method generates an image based on a text description using the Stable Diffusion model. It handles the integration of text-to-image generation capabilities.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.ai_response.md#2025-04-21_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\ndef generate_image(self, description):\n    image = self.stable_diffusion.generate_image(description)\n    return image\n```\n\n----------------------------------------\n\nTITLE: Navigating to Agent Zero Directory in Terminal\nDESCRIPTION: This command changes the current directory to the Agent Zero project folder using the 'cd' command. Ensure you replace the example path with the actual path where Agent Zero is located on your system.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncd C:\\Users\\frdel\\Desktop\\agent-zero\n```\n\n----------------------------------------\n\nTITLE: Example Query Generation in JSON\nDESCRIPTION: Demonstrates how the AI generates search queries from user messages, showing the simplified query extraction process through example interactions.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/memory.memories_query.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nUSER: \"Write a song about my dog\"\nAI: \"user's dog\"\nUSER: \"following the results of the biology project, summarize...\"\nAI: \"biology project results\"\n```\n\n----------------------------------------\n\nTITLE: Listing Key Files in Agent Zero Project\nDESCRIPTION: This snippet provides a list of key files in the Agent Zero project along with brief descriptions of their purposes. It includes configuration files, core implementation files, and entry points for different interfaces.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/architecture.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| File | Description |\n| --- | --- |\n| `.env` | Environment configuration |\n| `agent.py` | Core agent implementation |\n| `example.env` | Configuration template |\n| `initialize.py` | Framework initialization |\n| `models.py` | Model providers and configs |\n| `preload.py` | Pre-initialization routines |\n| `prepare.py` | Environment preparation |\n| `requirements.txt` | Python dependencies |\n| `run_cli.py` | CLI launcher |\n| `run_ui.py` | Web UI launcher |\n```\n\n----------------------------------------\n\nTITLE: Defining Directory Structure for Agent Zero\nDESCRIPTION: This snippet outlines the directory structure of the Agent Zero project, detailing the purpose of each main directory and subdirectory. It provides a clear overview of where different components and resources are located within the project.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/architecture.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Directory | Description |\n| --- | --- |\n| `/docker` | Docker-related files for runtime container |\n| `/docs` | Documentation files and guides |\n| `/instruments` | Custom scripts and tools for runtime environment |\n| `/knowledge` | Knowledge base storage |\n| `/logs` | HTML CLI-style chat logs |\n| `/memory` | Persistent agent memory storage |\n| `/prompts` | System and tool prompts |\n| `/python` | Core Python codebase: |\n| `/api` | API endpoints and interfaces |\n| `/extensions` | Modular extensions |\n| `/helpers` | Utility functions |\n| `/tools` | Tool implementations |\n| `/tmp` | Temporary runtime data |\n| `/webui` | Web interface components: |\n| `/css` | Stylesheets |\n| `/js` | JavaScript modules |\n| `/public` | Static assets |\n| `/work_dir` | Working directory |\n```\n\n----------------------------------------\n\nTITLE: Implementing Agent-Zero's Process Voice Input Method in Python\nDESCRIPTION: This method processes voice input by converting speech to text, generating a response, and then converting the response back to speech. It enables voice-based interactions with the AI assistant.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.ai_response.md#2025-04-21_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\ndef process_voice_input(self, audio_input):\n    text_input = self.voice.speech_to_text(audio_input)\n    response = self.process_input(text_input)\n    audio_response = self.voice.text_to_speech(response)\n    return audio_response\n```\n\n----------------------------------------\n\nTITLE: Outlining Built-in Tools for Agent Zero\nDESCRIPTION: This snippet lists and describes the built-in tools available in Agent Zero. Each tool is briefly explained, providing an overview of the core functionalities agents can leverage within the framework.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/architecture.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Tool | Function |\n| --- | --- |\n| behavior_adjustment | Agent Zero use this tool to change its behavior according to a prior request from the user.\n| call_subordinate | Allows agents to delegate tasks to subordinate agents |\n| code_execution_tool | Allows agents to execute Python, Node.js, and Shell code in the terminal |\n| input | Allows agents to use the keyboard to interact with an active shell |\n| knowledge_tool | Enables agents to retrieve information from memory, knowledge base or online external sources |\n| response_tool | Allows agents to output a response |\n| memory_tool | Enables agents to save, load, delete and forget information from memory |\n| webpage_content_tool | Enables agents to fetch and analyze the text content of webpages |\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Template for Tool Output in agent-zero Project\nDESCRIPTION: This JSON template provides a structure for tool output, containing fields for the tool name and its result. The values are represented as placeholders ({{tool_name}} and {{tool_result}}) which are likely to be replaced with actual data when the template is used.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.tool_result.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"tool_name\": {{tool_name}},\n    \"tool_result\": {{tool_result}}\n}\n```\n\n----------------------------------------\n\nTITLE: Project Path Structure\nDESCRIPTION: Directory path specification showing Agent Zero framework location within the container filesystem.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.main.environment.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n/frdel/agent-zero\\n/a0\n```\n\n----------------------------------------\n\nTITLE: Formatting JSON Response for No Solutions Found\nDESCRIPTION: This snippet shows the expected JSON format when no helpful technical solutions are found in the conversation history.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/memory.solutions_sum.sys.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[]\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Development Docker Image for Agent Zero\nDESCRIPTION: This command builds a multi-platform Docker image for the development branch of Agent Zero and pushes it to DockerHub. It includes a timestamp for cache busting.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker buildx build --build-arg BRANCH=development -t frdel/agent-zero-run:development --platform linux/amd64,linux/arm64 --push --build-arg CACHE_DATE=$(date +%Y-%m-%d:%H:%M:%S) .\n```\n\n----------------------------------------\n\nTITLE: Implementing Agent-Zero's Analyze Image Method in Python\nDESCRIPTION: This method analyzes an image using the vision interface and generates a description. It demonstrates the AI assistant's capability to process and understand visual information.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.ai_response.md#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\ndef analyze_image(self, image):\n    description = self.vision.analyze_image(image)\n    return description\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Testing Docker Image for Agent Zero\nDESCRIPTION: This command builds a multi-platform Docker image for the testing branch of Agent Zero and pushes it to DockerHub. It includes a timestamp for cache busting.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker buildx build --build-arg BRANCH=testing -t frdel/agent-zero-run:testing --platform linux/amd64,linux/arm64 --push --build-arg CACHE_DATE=$(date +%Y-%m-%d:%H:%M:%S) .\n```\n\n----------------------------------------\n\nTITLE: Defining AI Role for Conversation Summarization in Markdown\nDESCRIPTION: Specifies the AI assistant's role in summarizing conversations, including handling pre-summarized records and producing consolidated summaries.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.topic_summary.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AI role\nYou are AI summarization assistant\nYou are provided with a conversation history and your goal is to provide a short summary of the conversation\nRecords in the conversation may already be summarized\nYou must return a single summary of all records\n```\n\n----------------------------------------\n\nTITLE: Defining System Warning in JSON for Agent Zero\nDESCRIPTION: This JSON snippet defines a system_warning key with a message about no output or error being returned. It suggests using console printing in the code if output is required.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.code_no_output.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"system_warning\": \"No output or error was returned. If you require output from the tool, you have to use use console printing in your code. Otherwise proceed.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Main Docker Image for Agent Zero\nDESCRIPTION: This command builds a multi-platform Docker image for the main branch of Agent Zero and pushes it to DockerHub as the latest version. It includes a timestamp for cache busting.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker buildx build --build-arg BRANCH=main -t frdel/agent-zero-run:latest --platform linux/amd64,linux/arm64 --push --build-arg CACHE_DATE=$(date +%Y-%m-%d:%H:%M:%S) .\n```\n\n----------------------------------------\n\nTITLE: Defining AI Assistant's Job in Markdown\nDESCRIPTION: Outlines the three main tasks of the AI assistant in merging and refining AGENT behavior rulesets.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/behaviour.merge.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Assistant's job\n1. The assistant receives a markdown ruleset of AGENT's behaviour and text of adjustments to be implemented\n2. Assistant merges the ruleset with the instructions into a new markdown ruleset\n3. Assistant keeps the ruleset short, removing any duplicates or redundant information\n```\n\n----------------------------------------\n\nTITLE: Building Local Docker Image for Agent Zero with Smart Cache\nDESCRIPTION: This command builds a local Docker image for Agent Zero with a smart cache mechanism. It uses the development branch and includes a timestamp for cache busting.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t agent-zero-run:local --build-arg BRANCH=development --build-arg CACHE_DATE=$(date +%Y-%m-%d:%H:%M:%S)  .\n```\n\n----------------------------------------\n\nTITLE: Building Local Docker Image for Agent Zero without Cache\nDESCRIPTION: This command builds a local Docker image for Agent Zero without using cache. It uses the development branch.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t agent-zero-run:local --build-arg BRANCH=development --no-cache  .\n```\n\n----------------------------------------\n\nTITLE: JSON Message Template with Variables\nDESCRIPTION: A JSON structure that defines a template for user messages and attachments using double curly brace notation for variable interpolation. The template includes two fields: user_message and attachments.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.user_message.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"user_message\": {{message}},\n  \"attachments\": {{attachments}}\n}\n```\n\n----------------------------------------\n\nTITLE: Building Kali-based Docker Image for Agent Zero\nDESCRIPTION: This command builds a Docker image for Agent Zero based on Kali Linux. It uses the main branch and includes a timestamp for cache busting.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -f ./DockerfileKali -t agent-zero-run:hacking --build-arg BRANCH=main --build-arg CACHE_DATE=$(date +%Y-%m-%d:%H:%M:%S) .\n```\n\n----------------------------------------\n\nTITLE: Formatting System Error Response in JSON\nDESCRIPTION: This JSON structure defines a template for system error responses. It includes a single key 'system_error' with a placeholder value '{{error}}' which can be replaced with the actual error message when used.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.error.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"system_error\": \"{{error}}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Login for DockerHub Push\nDESCRIPTION: This command logs into DockerHub to prepare for pushing images.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docker/run/build.txt#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker login\n```\n\n----------------------------------------\n\nTITLE: Generating Behavior Modification Instructions in JSON\nDESCRIPTION: These code snippets demonstrate the JSON format for returning behavior modification instructions. The first example shows a non-empty array with an instruction, while the second shows an empty array when no instructions are found.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/behaviour.search.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  \"Never call the user by his name\",\n]\n```\n\nLANGUAGE: json\nCODE:\n```\n[]\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Structure for User Intervention and Attachments\nDESCRIPTION: This JSON snippet outlines a structure for capturing user intervention messages and associated attachments. The values are represented as placeholders ({{message}} and {{attachments}}), which are likely to be replaced with actual data in a real-world scenario.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.intervention.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"user_intervention\": {{message}},\n  \"attachments\": {{attachments}}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Browser Agent with Reset in JSON\nDESCRIPTION: This JSON snippet demonstrates how to initialize the browser agent with a reset flag. It includes thoughts, tool name, and arguments for opening and logging into a website.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.browser.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"thoughts\": [\"I need to log in to...\"],\n  \"tool_name\": \"browser_agent\",\n  \"tool_args\": {\n    \"message\": \"Open and log me into...\",\n    \"reset\": \"true\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Chat Naming Assistant Role Definition in Markdown\nDESCRIPTION: Defines the role of an AI assistant that suggests concise chat names based on conversation history. The assistant is instructed to only change names when topics change, focus on recent conversation, and respond with just the name using proper capitalization.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.rename_chat.sys.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AI role\n- You are a chat naming assistant\n- Your role is to suggest a short chat name for the current conversation\n\n# Input\n- You are given the current chat name and current chat history\n\n# Output\n- Respond with a short chat name (1-3 words) based on the chat history\n- Consider current chat name and only change it when the conversation topic has changed\n- Focus mainly on the end of the conversation history, there you can detect if the topic has changed\n- Only respond with the chat name without any formatting, intro or additional text\n- Maintain proper capitalization\n\n# Example responses\nDatabase setup\nRequirements installation\nMerging documents\nImage analysis\n```\n\n----------------------------------------\n\nTITLE: Continuing Browser Agent Task without Reset in JSON\nDESCRIPTION: This JSON snippet shows how to continue a browser agent task without resetting. It includes thoughts, tool name, and arguments for interacting with open pages.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.browser.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"thoughts\": [\"I need to log in to...\"],\n  \"tool_name\": \"browser_agent\",\n  \"tool_args\": {\n    \"message\": \"Considering open pages, click...\",\n    \"reset\": \"false\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Next.js TypeScript Configuration\nDESCRIPTION: TypeScript configuration specifically for Next.js applications. It extends the base configuration with Next.js-specific settings and includes appropriate file patterns for a Next.js project.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.msg_truncated.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Agent Behavior via JSON Request\nDESCRIPTION: JSON structure for sending behavior adjustment requests to an agent. Uses the behaviour_update tool to modify behavioral rules in the system prompt. Includes thoughts array for context and tool arguments for specifying adjustments.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.tool.behaviour.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"...\",\n    ],\n    \"tool_name\": \"behaviour_update\",\n    \"tool_args\": {\n        \"adjustments\": \"behavioral_rules in system prompt updated via this arg\",\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Output Format Requirements in Markdown\nDESCRIPTION: Details the expected format and constraints for the summary output, including length requirements and formatting restrictions.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.topic_summary.sys.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# Expected output\nYour output will be a text of the summary\nLength of the text should be one paragraph, approximately 100 words\nNo intro\nNo conclusion\nNo formatting\nOnly the summary text is returned\n```\n\n----------------------------------------\n\nTITLE: Implementing JSON Response Structure for Agent-Zero Communication\nDESCRIPTION: This JSON structure defines the format for responses in the Agent-Zero project. It includes an array of thoughts expressed in natural language, the name of the tool being used, and key-value pairs for tool arguments.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.main.communication.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"thoughts\": [\n        \"instructions?\",\n        \"solution steps?\",\n        \"processing?\",\n        \"actions?\"\n    ],\n    \"tool_name\": \"name_of_tool\",\n    \"tool_args\": {\n        \"arg1\": \"val1\",\n        \"arg2\": \"val2\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing TypeScript Configuration\nDESCRIPTION: TypeScript configuration for testing environments. It extends the project's base configuration and sets up compiler options optimized for testing, including CommonJS modules for compatibility with testing frameworks.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.msg_truncated.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"module\": \"commonjs\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Including Markdown Components in Main Manual\nDESCRIPTION: Template structure showing the inclusion of separate markdown files that make up the complete Agent Zero system manual documentation.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.main.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Agent Zero System Manual\n\n{{ include \"./agent.system.main.role.md\" }}\n\n{{ include \"./agent.system.main.environment.md\" }}\n\n{{ include \"./agent.system.main.communication.md\" }}\n\n{{ include \"./agent.system.main.solving.md\" }}\n\n{{ include \"./agent.system.main.tips.md\" }}\n```\n\n----------------------------------------\n\nTITLE: Specifying Markdown Formatting Rules\nDESCRIPTION: Defines the formatting requirements for the merged ruleset, including heading levels and bullet point usage.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/behaviour.merge.sys.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# Format\n- The response format is a markdown format of instructions for AI AGENT explaining how the AGENT is supposed to behave\n- No level 1 headings (#), only level 2 headings (##) and bullet points (*)\n```\n\n----------------------------------------\n\nTITLE: Executing YouTube Download Script in Bash\nDESCRIPTION: This command runs a bash script located at '/a0/instruments/default/yt_download/yt_download.sh' to download a YouTube video. It requires a video URL as an argument.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/instruments/default/yt_download/yt_download.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash /a0/instruments/default/yt_download/yt_download.sh <url>\n```\n\n----------------------------------------\n\nTITLE: Tool Not Found Error Template\nDESCRIPTION: Template string for displaying an error when a requested tool is not found. Shows the missing tool name and lists available tools.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.tool_not_found.md#2025-04-21_snippet_0\n\nLANGUAGE: template\nCODE:\n```\nTool {{tool_name}} not found. Available tools: \\n{{tools_prompt}}\n```\n\n----------------------------------------\n\nTITLE: Defining JSON System Warning Template\nDESCRIPTION: JSON structure that defines a template for system warnings, using a dynamic placeholder {{message}} that can be populated with actual warning content.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.warning.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"system_warning\": {{message}}\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Memories Template in Markdown\nDESCRIPTION: A markdown template that provides context for displaying topic-related memories, with a header and cautionary notes about memory reliability.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.memories.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Memories on the topic\n- following are memories about current topic\n- do not overly rely on them they might not be relevant\n\n{{memories}}\n```\n\n----------------------------------------\n\nTITLE: Formatting Memory Deletion Response in JSON for Agent Zero\nDESCRIPTION: This JSON structure is used to format the response after deleting memories. It includes a single key 'memories_deleted' with a placeholder value that should be replaced with the actual count of deleted memories.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.memories_deleted.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"memories_deleted\": \"{{memory_count}}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Solutions Template Placeholder in Markdown\nDESCRIPTION: Template marker for solutions using double curly brace notation, indicating where historical solutions should be inserted.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.solutions.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{solutions}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Warning Message in JSON\nDESCRIPTION: Defines a system warning message template that includes a placeholder for the runtime value. Used to alert users when they attempt to use an unsupported runtime environment.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.code_runtime_wrong.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"system_warning\": \"The runtime '{{runtime}}' is not supported, available options are 'terminal', 'python', 'nodejs' and 'output'.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Python Dependencies List with Version Requirements\nDESCRIPTION: A requirements.txt file listing all Python package dependencies with their specific version numbers for the agent-zero project. Includes AI-related packages like various LangChain integrations, document processing libraries, web interaction tools, and utility packages.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nansio==0.0.1\nbeautifulsoup4==4.12.3\nbrowser-use==0.1.37\ndocker==7.1.0\nduckduckgo-search==6.1.12\nfaiss-cpu==1.8.0.post1\nflask[async]==3.0.3\nflask-basicauth==0.2.0\nGitPython==3.1.43\ninputimeout==1.0.4\nlangchain-anthropic==0.3.3\nlangchain-community==0.3.13\nlangchain-google-genai==2.0.8\nlangchain-groq==0.2.2\nlangchain-huggingface==0.1.2\nlangchain-mistralai==0.2.4\nlangchain-ollama==0.2.2\nlangchain-openai==0.3.1\nopenai-whisper==20240930\nlxml_html_clean==0.3.1\nmarkdown==3.7\nnewspaper3k==0.2.8\nparamiko==3.5.0\nplaywright==1.49.0\npypdf==4.3.1\npython-dotenv==1.0.1\nsentence-transformers==3.0.1\ntiktoken==0.8.0\nunstructured==0.15.13\nunstructured-client==0.25.9\nwebcolors==24.6.0\n```\n\n----------------------------------------\n\nTITLE: Formatting No Memories JSON Response\nDESCRIPTION: Defines a JSON response structure used when no memories are found for a query parameter. The template includes a placeholder {{query}} that can be dynamically replaced with the actual search query.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.memories_not_found.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"memory\": \"No memories found for specified query: {{query}}\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Message Summary Template\nDESCRIPTION: Basic JSON template structure demonstrating a messages_summary field that uses a double-curly brace placeholder {{summary}} to be replaced with actual content.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.msg_summary.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"messages_summary\": {{summary}}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Behavioral Rules Placeholder in Markdown\nDESCRIPTION: This snippet creates a placeholder section for behavioral rules using custom syntax. The '!!!' likely indicates a special section, while '{{rules}}' is probably a template variable that will be replaced with actual rule definitions.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/agent.system.behaviour.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Behavioral rules\n!!! {{rules}}\n```\n\n----------------------------------------\n\nTITLE: Root TypeScript Configuration\nDESCRIPTION: The root tsconfig.json file that defines base TypeScript configuration for the project. It specifies compiler options, includes source files, and excludes build artifacts and node_modules.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.msg_truncated.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Placeholder Sections in Markdown\nDESCRIPTION: This snippet defines two sections using Markdown headers, with placeholder content denoted by double curly braces. These are likely meant to be replaced with actual content during processing.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/tool.knowledge.response.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Online sources\n{{online_sources}}\n\n# Memory\n{{memory}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Message History Placeholder in Markdown\nDESCRIPTION: This snippet shows a markdown comment and a placeholder for message history content. It's likely used as a template for generating summaries of conversation histories in the agent-zero project.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.bulk_summary.msg.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Message history to summarize:\n{{content}}\n```\n\n----------------------------------------\n\nTITLE: Template Placeholder for Message Content\nDESCRIPTION: A basic placeholder format using double curly braces to indicate where message content should be injected for summarization purposes.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.topic_summary.msg.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{{content}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Chat Naming Variables in Markdown\nDESCRIPTION: Uses Markdown to display the current chat name and chat history placeholders that would be populated at runtime.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/prompts/default/fw.rename_chat.msg.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{current_name}}\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{history}}\n```\n\n----------------------------------------\n\nTITLE: Running Agent Zero UI Locally\nDESCRIPTION: Executes the 'run_ui.py' script using Python to start the Agent Zero Web UI. Make sure Python is installed and configured correctly in your environment.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/knowledge/default/main/about/installation.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\npython run_ui.py\n```\n\n----------------------------------------\n\nTITLE: Display KaTeX Math Expression Example\nDESCRIPTION: Shows how to create centered display equations using double dollar signs in KaTeX syntax.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/usage.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n$$F = G\\frac{m_1m_2}{r^2}$$\n```\n\n----------------------------------------\n\nTITLE: Inline KaTeX Math Expression Example\nDESCRIPTION: Demonstrates how to write inline mathematical expressions using single dollar signs in KaTeX syntax.\nSOURCE: https://github.com/frdel/agent-zero/blob/main/docs/usage.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nThe area of a circle is $A = πr^2$\n```"
  }
]
[
  {
    "owner": "jenkinsci",
    "repo": "jenkins",
    "content": "TITLE: Building Jenkins WAR File with Maven\nDESCRIPTION: Command to build jenkins.war file quickly without running tests using Maven quick-build profile\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmvn -am -pl war,bom -Pquick-build clean install\n```\n\n----------------------------------------\n\nTITLE: Launching Jenkins Development Instance\nDESCRIPTION: Command to start a development instance of Jenkins using Maven and Jetty with necessary Java module permissions\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nMAVEN_OPTS='--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED' mvn -pl war jetty:run\n```\n\n----------------------------------------\n\nTITLE: Running Jenkins with Frontend Dev Server\nDESCRIPTION: Command to start Jenkins development server without processing frontend assets\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nMAVEN_OPTS='--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED' mvn -pl war jetty:run -Dskip.yarn\n```\n\n----------------------------------------\n\nTITLE: Setting Up Node and Yarn Path\nDESCRIPTION: Command to add downloaded Node.js and Yarn to system PATH for frontend development\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport PATH=$PWD/node:$PWD/node/node_modules/corepack/shims:$PATH\n```\n\n----------------------------------------\n\nTITLE: Fixing Backend Code Style Issues\nDESCRIPTION: Command to automatically fix backend code style issues using Spotless\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nmvn spotless:apply\n```\n\n----------------------------------------\n\nTITLE: Running Frontend Linting\nDESCRIPTION: Command to check frontend code for style issues\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nyarn lint\n```\n\n----------------------------------------\n\nTITLE: Fixing Frontend Code Style Issues\nDESCRIPTION: Command to automatically fix frontend code style issues\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/CONTRIBUTING.md#2025-04-14_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nyarn lint:fix\n```\n\n----------------------------------------\n\nTITLE: Determining Whitelist Entries Script\nDESCRIPTION: Groovy script to determine whitelist entries for methods and fields in a given class, useful for administrators who need to customize their whitelist.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\ncom.acme.package.ClassName.class.methods.each {\n  println new org.kohsuke.stapler.Function.InstanceFunction(it).signature\n}\ncom.acme.package.ClassName.class.fields.each {\n  println org.kohsuke.stapler.lang.FieldRef.wrap(it).signature\n}\n```\n\n----------------------------------------\n\nTITLE: Plugin Whitelist Configuration\nDESCRIPTION: Whitelist configuration entries for various Jenkins plugins including Credentials, JUnit, Metrics, Pipeline, and other plugins. Each entry specifies allowed methods and fields for Stapler request dispatching.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-whitelist.txt#2025-04-14_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nmethod com.cloudbees.plugins.credentials.CredentialsSelectHelper getResolver java.lang.String\nmethod com.cloudbees.plugins.credentials.CredentialsSelectHelper$WrappedContextResolver getProvider java.lang.String\nmethod com.cloudbees.plugins.credentials.CredentialsStoreAction$DomainWrapper getCredentials\n\nclass hudson.tasks.junit.History\n\nmethod jenkins.metrics.api.MetricsRootAction getCurrentUser\n\nmethod org.jenkinsci.plugins.workflow.job.WorkflowRun getExecution\nmethod org.jenkinsci.plugins.workflow.job.views.FlowGraphTableAction getFlowGraph\n\nfield hudson.maven.reporters.MavenArtifactRecord attachedArtifacts\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Dependency Cycle Breaking Rules in Jenkins\nDESCRIPTION: Configuration that specifies which plugin dependency relationships should be ignored to break cycles in the plugin loading process. This is referenced by ClassicPluginStrategy.BREAK_CYCLES and used by plugin-compat-tester according to JENKINS-47634. The file contains multiple sections addressing different cycle issues.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/split-plugin-cycles.txt#2025-04-14_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\n# See ClassicPluginStrategy.BREAK_CYCLES. As of JENKINS-47634 also used by plugin-compat-tester.\n# JENKINS-28942 could make this obsolete.\n\ncredentials matrix-auth\n\nscript-security antisamy-markup-formatter\nscript-security bouncycastle-api\nscript-security command-launcher\nscript-security matrix-auth\nscript-security matrix-project\n\n# Weird unexpected cycle that showed up during testing of this new plugin\n# so breaking all potential cycles until JENKINS-28942\n# FIXME: remove when JENKINS-28942 is in (and used in the JAXB plugin)\nscript-security jaxb\nmaven-plugin jaxb\nsubversion jaxb\ncvs jaxb\nant jaxb\njavadoc jaxb\nexternal-monitor-job jaxb\nldap jaxb\npam-auth jaxb\nmailer jaxb\nmatrix-auth jaxb\nantisamy-markup-formatter jaxb\nmatrix-project jaxb\njunit jaxb\nbouncycastle-api jaxb\ncommand-launcher jaxb\njdk-tool jaxb\n\njavax-activation-api javax-mail-api\njavax-activation-api sshd\njavax-mail-api sshd\n\n# JENKINS-55582\nbouncycastle-api instance-identity\nbouncycastle-api sshd\njavax-activation-api instance-identity\njavax-mail-api instance-identity\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Stapler Whitelist Format Example\nDESCRIPTION: Example demonstrating the format for configuring allowed/denied views for model classes in the whitelist configuration. Shows how to specify the fully qualified class name followed by space-separated view names, with optional denial prefix (!).\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nio.jenkins.plugins.example.ModelClass viewA viewB !viewC\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Plugin Label Mappings\nDESCRIPTION: Defines label pairs that need to be unified across plugins while maintaining compatibility with older Jenkins core versions. Each line represents a mapping from an old label to a new standardized label.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/canonical-labels.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nlibrary api-plugin\nslaves agent\n```\n\n----------------------------------------\n\nTITLE: Defining Jenkins Plugin Detachment Information\nDESCRIPTION: This code snippet defines a list of Jenkins plugins that have been detached from the core. Each line represents a plugin and includes its ID, last core release version, and implied plugin version. Some entries also include comments with additional information or references to specific JIRA issues.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/split-plugins.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmaven-plugin 1.296 1.296\nsubversion 1.310 1.0\ncvs 1.340 0.1\nant 1.430 1.0\njavadoc 1.430 1.0\nexternal-monitor-job 1.467 1.0\nldap 1.467 1.0\npam-auth 1.467 1.0\nmailer 1.493 1.2\nmatrix-auth 1.535 1.0.2\nantisamy-markup-formatter 1.553 1.0\nmatrix-project 1.561 1.0\njunit 1.577 1.0\nbouncycastle-api 2.16 2.16.0\n# JENKINS-47393\ncommand-launcher 2.86 1.0\n# JENKINS-22367\njdk-tool 2.112 1.0\n\n# JENKINS-55681\njaxb 2.163 2.3.0\n\n#JENKINS-43610 Split Trilead out from Core\ntrilead-api 2.184 1.0.4\n\n# JENKINS-64107\nsshd 2.281 3.236.ved5e1b_cb_50b_2\n\njavax-activation-api 2.330 1.2.0-2\njavax-mail-api 2.330 1.6.2-5\n\n# JENKINS-55582\ninstance-identity 2.356 3.1\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Exclusion Standard for Jenkins Server\nDESCRIPTION: A standard robots.txt file that instructs all web crawlers to avoid indexing or traversing any part of the Jenkins server. This prevents search engine bots and other crawlers from accidentally triggering builds by following links.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/war/src/main/webapp/robots.txt#2025-04-14_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\n# we don't want robots to click \"build\" links\nUser-agent: *\nDisallow: /\n```\n\n----------------------------------------\n\nTITLE: Coverity Plugin Views Configuration\nDESCRIPTION: Configuration entries for the Coverity plugin, allowing checkConfig and defectFilters views for respective descriptor classes.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\njenkins.plugins.coverity.CheckConfig$DescriptorImpl checkConfig\njenkins.plugins.coverity.CIMStream$DescriptorImpl defectFilters\n```\n\n----------------------------------------\n\nTITLE: Sounds Plugin View Configuration\nDESCRIPTION: Whitelist configuration for the Sounds plugin, allowing the jsonpdemo view for SoundsAgentAction class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_5\n\nLANGUAGE: properties\nCODE:\n```\nnet.hurstfrost.hudson.sounds.SoundsAgentAction jsonpdemo\n```\n\n----------------------------------------\n\nTITLE: Gerrit Trigger Plugin View Configuration\nDESCRIPTION: Whitelist configuration for the Gerrit Trigger plugin, allowing the help-Search view for the ManualTriggerAction class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\ncom.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.actions.manual.ManualTriggerAction help-Search\n```\n\n----------------------------------------\n\nTITLE: Dependency Graph View Plugin Configuration\nDESCRIPTION: Configuration for the Dependency Graph View plugin, allowing the jsplumb view for AbstractDependencyGraphAction class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nhudson.plugins.depgraph_view.AbstractDependencyGraphAction jsplumb\n```\n\n----------------------------------------\n\nTITLE: Multi-Slave Config Plugin View Configuration\nDESCRIPTION: Whitelist entry for the Multi-Slave Config plugin, permitting the slavefilter view for NodeManageLink class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\ncom.sonyericsson.hudson.plugins.multislaveconfigplugin.NodeManageLink slavefilter\n```\n\n----------------------------------------\n\nTITLE: SCM2Job Plugin View Configuration\nDESCRIPTION: Configuration entry for the SCM2Job plugin, permitting the showResultsPlain view for SCM2Job class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_6\n\nLANGUAGE: properties\nCODE:\n```\ncom.unitedinternet.jenkins.plugins.scm2job.SCM2Job showResultsPlain\n```\n\n----------------------------------------\n\nTITLE: Serenity Plugin View Configuration\nDESCRIPTION: Whitelist entry for the Serenity plugin, allowing the nocoverage view for SerenityProjectAction class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_7\n\nLANGUAGE: properties\nCODE:\n```\ncom.ikokoon.serenity.hudson.SerenityProjectAction nocoverage\n```\n\n----------------------------------------\n\nTITLE: Pipeline Config History Plugin View Configuration\nDESCRIPTION: Configuration for the Pipeline Config History plugin, allowing the configSingleFile view for PipelineConfigHistoryProjectAction class.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/jenkins/security/stapler/default-views-whitelist.txt#2025-04-14_snippet_8\n\nLANGUAGE: properties\nCODE:\n```\norg.jenkinsci.plugins.pipelineConfigHistory.view.PipelineConfigHistoryProjectAction configSingleFile\n```\n\n----------------------------------------\n\nTITLE: Custom Object Retrieval Methods in StaticRoutingDecisionProviderTest\nDESCRIPTION: Method declarations for retrieving custom objects in Jenkins security Stapler routing test implementation. These methods are part of the ContentProvider inner class and handle custom object routing scenarios.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaticRoutingDecisionProvider2Test/whitelist_multiline/stapler-whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmethod jenkins.security.stapler.StaticRoutingDecisionProviderTest$ContentProvider getObjectCustom\nmethod jenkins.security.stapler.StaticRoutingDecisionProviderTest$ContentProvider getObjectCustom2\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Stapler Dispatch Validator Test Paths\nDESCRIPTION: Defines whitelisted paths for testing Stapler dispatch validation in Jenkins security. Lists root path with fragment restriction and extended whitelisted root path.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaplerDispatchValidatorTest/whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\njenkins.security.stapler.StaplerDispatchValidatorTest$Whitelist root !frag\njenkins.security.stapler.StaplerDispatchValidatorTest$Extended whitelistedRoot\n```\n\n----------------------------------------\n\nTITLE: Jenkins Build Signature Validation Log\nDESCRIPTION: Log output showing results of signature validation checks, where signatures 1 and 3 passed validation while signatures 2 and 4 failed validation.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaticRoutingDecisionProvider2Test/greylist_multiline/stapler-whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: log\nCODE:\n```\nsignature-1-ok\n!signature-2-not-ok\nsignature-3-ok\n!signature-4-not-ok\n```\n\n----------------------------------------\n\nTITLE: Defining Signature 1 Template in Jenkins\nDESCRIPTION: This code defines the first signature template labeled 'signature-1' followed by an empty line.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaticRoutingDecisionProvider2Test/whitelist_emptyline/stapler-whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsignature-1\n# just an empty line\n```\n\n----------------------------------------\n\nTITLE: Defining Signature 2 Template with Exclamation Mark Formatting\nDESCRIPTION: This code defines the second signature template with comments explaining exclamation mark formatting - one with space after it and one with no space.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaticRoutingDecisionProvider2Test/whitelist_emptyline/stapler-whitelist.txt#2025-04-14_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nsignature-2\n# space after the exclamation mark\n!      \n# no space\n!\n```\n\n----------------------------------------\n\nTITLE: Defining Signature 3 Template in Jenkins\nDESCRIPTION: This code defines the third signature template labeled 'signature-3'.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaticRoutingDecisionProvider2Test/whitelist_emptyline/stapler-whitelist.txt#2025-04-14_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nsignature-3\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Inclusion/Exclusion List\nDESCRIPTION: This snippet defines a list of items to be included or excluded in a Jenkins configuration. Lines without '#' are included, while lines starting with '#' are treated as comments or excluded items.\nSOURCE: https://github.com/jenkinsci/jenkins/blob/master/test/src/test/resources/jenkins/security/stapler/StaticRoutingDecisionProvider2Test/comment_ignored/stapler-whitelist.txt#2025-04-14_snippet_0\n\nLANGUAGE: Plain Text\nCODE:\n```\nthis-one-is\nthis-one-also\n```"
  }
]
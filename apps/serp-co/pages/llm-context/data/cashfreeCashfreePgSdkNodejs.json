[
  {
    "owner": "cashfree",
    "repo": "cashfree-pg-sdk-nodejs",
    "content": "TITLE: Creating Payment Orders with Cashfree PG SDK for Node.js\nDESCRIPTION: This snippet demonstrates how to create a new order using the Cashfree Payment Gateway Node.js SDK. It includes setting up the order details with customer information and handling the API response with proper error handling.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Orders.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar request = {\n    \"order_amount\": \"1\",\n    \"order_currency\": \"INR\",\n    \"customer_details\": {\n      \"customer_id\": \"node_sdk_test\",\n      \"customer_email\": \"example@gmail.com\",\n      \"customer_phone\": \"9999999999\"\n    },\n    \"order_meta\": {\n      \"return_url\": \"https://test.cashfree.com/pgappsdemos/return.php?order_id={order_id}\"\n    }\n  }\n\n  Cashfree.PGCreateOrder(\"2022-09-01\", request).then((response) => {\n    console.log(response.data)\n  })\n  .catch((error) => {\n    console.error('Error creating order', error.response.data);\n  });\n```\n\n----------------------------------------\n\nTITLE: Creating Payment Order (Version >=5)\nDESCRIPTION: Example of creating a new payment order with customer details and order metadata for version 5+.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar request = {\n    \"order_amount\": 1,\n    \"order_currency\": \"INR\",\n    \"order_id\": \"order_34692745\",\n    \"customer_details\": {\n        \"customer_id\": \"walterwNrcMi\",\n        \"customer_phone\": \"9999999999\"\n    },\n    \"order_meta\": {\n        \"return_url\": \"https://www.cashfree.com/devstudio/preview/pg/web/checkout?order_id={order_id}\"\n    }\n};\nCashfree.PGCreateOrder(request).then((response) => {\n    console.log('Order Created successfully:',response.data)\n}).catch((error) => {\n    console.error('Error:', error.response.data.message);\n});\n```\n\n----------------------------------------\n\nTITLE: Verifying Cashfree Webhook Signature in Express.js\nDESCRIPTION: Example of implementing a webhook endpoint in Express.js that verifies incoming Cashfree webhook signatures. The code demonstrates how to access webhook headers and body, and process the verification response.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Webhook.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\napp.post('/webhook', function (req, res) {\n    try {\n        const response = Cashfree.PGVerifyWebhookSignature(req.headers[\"x-webhook-signature\"], req.rawBody, req.headers[\"x-webhook-timestamp\"]))\n        console.log(response.object)\n    } catch (err) {\n        console.log(err.message)\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Validating Webhooks\nDESCRIPTION: Example of validating incoming webhook signatures for payment notifications.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\napp.post('/webhook', function (req, res) {\n    try {\n        Cashfree.PGVerifyWebhookSignature(req.headers[\"x-webhook-signature\"], req.rawBody, req.headers[\"x-webhook-timestamp\"]))\n    } catch (err) {\n        console.log(err.message)\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Fetching Payment Details by ID using Cashfree SDK\nDESCRIPTION: Example showing how to fetch payment details using payment ID and order ID. Uses the PGOrderFetchPayment method that returns payment entity details.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGOrderFetchPayment(\"2022-09-01\", \"order_342WhBoQTXIsQsc75BGEAVKY5QLWF\", \"2150153399\").then((response) => {\n    console.log('Payment fetched successfully:', response.data);\n })\n.catch((error) => {\n    console.error('Error fetching payment details', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Cashfree SDK (Version >=5)\nDESCRIPTION: Initialize the Cashfree SDK with sandbox environment and API credentials for version 5 and above.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Cashfree } from \"cashfree-pg\"; \n\nvar cashfree = new Cashfree(Cashfree.SANDBOX, \"<x-client-id>\", \"<x-client-secret>\")\n```\n\n----------------------------------------\n\nTITLE: Fetching Order Details with Cashfree PG SDK for Node.js\nDESCRIPTION: This snippet shows how to retrieve information about an existing order using the Cashfree Payment Gateway Node.js SDK. It provides the order ID as a parameter and handles the API response with proper error handling.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Orders.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGFetchOrder(\"2022-09-01\", \"order_342annnkYeYMCNAguymxFwp6eV4ck\").then((response) => { // add the order_id here\n    console.log('Order fetched successfully:', response.data);\n})\n.catch((error) => {\n    console.error('Error fetching order', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Card Payment using Cashfree SDK\nDESCRIPTION: Example showing how to create a card payment transaction using payment session ID and card details.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst orderPayRequest = {\n    \"payment_session_id\": \"session_CLLC8TuxmB48U8pYJy4z8Ktk9Eh6IMnJzAScehfhKRarvab9KCl09YNxLsDjfeU104u4bqcKgk3ckbIsGsAWHBjvlv0XhRlJEzx4E5cLUHRC\",\n    \"payment_method\": {\n      \"card\": {\n        \"channel\": \"link\",\n        \"card_holder_name\": \"Test\",\n        \"card_number\": \"4111111111111111\",\n        \"card_expiry_mm\": \"12\",\n        \"card_expiry_yy\": \"30\",\n        \"card_cvv\": \"123\"\n      }\n    }\n  }\nCashfree.PGPayOrder(\"2022-09-01\", orderPayRequest).then((response) => {\n    console.log('Transaction Initiated successfully:', response.data);\n})\n.catch((error) => {\n    console.error('Error creating transaction:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Order Details (Version >=5)\nDESCRIPTION: Retrieve order details using order ID for version 5 and above.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGFetchOrder(\"<order_id>\").then((response) => {\n    console.log('Order fetched successfully:', response.data);\n}).catch((error) => {\n    console.error('Error:', error.response.data.message);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Refund with Cashfree Payment Gateway in JavaScript\nDESCRIPTION: Example showing how to create a refund for a specific order using the Cashfree SDK. The request requires a unique refund ID and an amount to be refunded, which must be less than or equal to the original transaction amount.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Refunds.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"refund_id\": \"refund_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\",\n    \"refund_amount\": 1\n}\nCashfree.PGOrderCreateRefund(\"2022-09-01\", \"order_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\", request).then((response) => {\n    console.log('Create Refund successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while creating a refund:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching All Payments for an Order using Cashfree SDK\nDESCRIPTION: Example demonstrating how to fetch all payments associated with an order ID. Returns an array of payment entities.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGOrderFetchPayments(\"2022-09-01\", \"order_342WhBoQTXIsQsc75BGEAVKY5QLWF\").then((response) => {\n    console.log('Payments fetched successfully:', response.data);\n})\n.catch((error) => {\n    console.error('Error fetching payment details', error.response.data);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Payment Link with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet shows how to create a new payment link using the PGCreateLink method. It requires the API version and a request object with payment details such as amount, currency, customer information, and additional configuration options.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"link_amount\": 100,\n    \"link_currency\": \"INR\",\n    \"link_minimum_partial_amount\": 20,\n    \"link_id\": \"my_link_id_test\",\n    \"link_partial_payments\": true,\n    \"customer_details\": {\n      \"customer_name\": \"John Doe\",\n      \"customer_phone\": \"9999999999\",\n      \"customer_email\": \"john@cashfree.com\"\n    },\n    \"link_expiry_time\": \"2024-10-14T15:04:05+05:30\",\n    \"link_purpose\": \"Payment for PlayStation 11\",\n    \"link_notify\": {\n      \"send_sms\": false,\n      \"send_email\": true\n    },\n    \"link_auto_reminders\": false,\n    \"link_notes\": {\n      \"key_1\": \"value_1\",\n      \"key_2\": \"value_2\"\n    },\n    \"link_meta\": {\n      \"notify_url\": \"https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net\",\n      \"upi_intent\": false,\n      \"return_url\": \"https://b8af79f41056.eu.ngrok.io\"\n    }\n  }\n  \nCashfree.PGCreateLink(\"2022-09-01\", request).then((response) => {\n    console.log('Payment Link creation successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while creating payment link:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: EMI Payment Integration\nDESCRIPTION: Setup for EMI payment integration including card details and EMI-specific parameters like bank name and tenure.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst orderPayRequest = {\n    \"payment_session_id\": \"session_CLLC8TuxmB48U8pYJy4z8Ktk9Eh6IMnJzAScehfhKRarvab9KCl09YNxLsDjfeU104u4bqcKgk3ckbIsGsAWHBjvlv0XhRlJEzx4E5cLUHRC\",\n    \"payment_method\": {\n        \"emi\": {\n          \"channel\": \"link\",\n          \"card_number\": \"4748461111111111\",\n          \"card_expiry_mm\": \"12\",\n          \"card_expiry_yy\": \"24\",\n          \"card_cvv\": \"123\",\n          \"card_bank_name\": \"ICICI\",\n          \"emi_tenure\": 3\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Eligible Cardless EMI Options with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the PGEligibilityFetchCardlessEMI method to retrieve eligible cardless EMI options for a customer and order. It includes the request body structure and error handling.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Eligibility.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"queries\": {\n      \"amount\": 10000,\n      \"customer_details\": {\n        \"customer_phone\": \"7330797796\"\n      }\n    }\n  }\nCashfree.PGEligibilityFetchCardlessEMI(\"2022-09-01\", request).then((response) => {\n    console.log('Eligible Cardless EMI fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching Cardless EMI eligibility:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Payment Authentication with OTP\nDESCRIPTION: Implementation for submitting or resending OTP for payment authentication. Includes error handling and response processing.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"otp\": \"111000\",\n    \"action\": \"SUBMIT_OTP\" // or RESEND_OTP\n}\nCashfree.PGOrderAuthenticatePayment(\"2022-09-01\", \"14910204607\", request).then((response) => {\n    console.log('Authenticate Payment successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error on payment authenticate:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Payment Authorization Implementation\nDESCRIPTION: Example of payment authorization API call to capture or void transactions with specified amount.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"action\": \"CAPTURE\", // or VOID\n    \"amount\": 1\n}\nCashfree.PGAuthorizeOrder(\"2022-09-01\", \"order_342WhBoQTXIsQsc75BGEAVKY5QLWF\", request).then((response) => {\n    console.log('Authorize Order successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error on authorize order call:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Settlement Details using Cashfree PG SDK\nDESCRIPTION: Example of using the PGOrderFetchSettlement method to retrieve settlement details for a specific order. The method requires an API version and order ID, with optional request ID and idempotency key parameters.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Settlements.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGOrderFetchSettlement(\"2022-09-01\", \"order-12-127\").then((response) => {\n    console.log('Settlement Details Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching settlement details:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Eligible Offers with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet shows how to use the PGEligibilityFetchOffers method to get eligible offers for a customer and order. It includes the request body structure and error handling.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Eligibility.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"queries\": {\n      \"amount\": 1,\n    }\n  }\nCashfree.PGEligibilityFetchOffers(\"2022-09-01\", request).then((response) => {\n    console.log('Eligible Offer Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching eligible offers:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Card Payment Integration with Native OTP\nDESCRIPTION: Implementation of card payment with native OTP using Cashfree payment session. Includes card details like number, expiry and CVV.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Payments.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst orderPayRequest = {\n    \"payment_session_id\": \"session_CLLC8TuxmB48U8pYJy4z8Ktk9Eh6IMnJzAScehfhKRarvab9KCl09YNxLsDjfeU104u4bqcKgk3ckbIsGsAWHBjvlv0XhRlJEzx4E5cLUHRC\",\n    \"payment_method\": {\n         \"card\": {\n          \"channel\": \"post\",\n          \"card_number\": \"4111111111111111\",\n          \"card_expiry_mm\": \"03\",\n          \"card_expiry_yy\": \"25\",\n          \"card_cvv\": \"326\"\n        }\n    }\n  }\n```\n\n----------------------------------------\n\nTITLE: Creating Payment Order (Version <5)\nDESCRIPTION: Example of creating a new payment order with customer details and order metadata for versions below 5.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar request = {\n    \"order_amount\": 1,\n    \"order_currency\": \"INR\",\n    \"order_id\": \"order_34692745\",\n    \"customer_details\": {\n        \"customer_id\": \"walterwNrcMi\",\n        \"customer_phone\": \"9999999999\"\n    },\n    \"order_meta\": {\n        \"return_url\": \"https://www.cashfree.com/devstudio/preview/pg/web/checkout?order_id={order_id}\"\n    }\n};\nCashfree.PGCreateOrder(\"2023-08-01\", request).then((response) => {\n    console.log('Order Created successfully:',response.data)\n}).catch((error) => {\n    console.error('Error:', error.response.data.message);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Eligible Payment Methods with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet shows how to use the PGEligibilityFetchPaymentMethods method to get eligible payment methods for an account and order. It includes the request body structure and error handling.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Eligibility.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"queries\": {\n      \"amount\": 1000,\n    }\n  }\nCashfree.PGEligibilityFetchPaymentMethods(\"2022-09-01\", request).then((response) => {\n    console.log('Eligibility Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching eligibility:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Cashfree PG SDK via NPM\nDESCRIPTION: Command to install the Cashfree payment gateway SDK package using npm.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i cashfree-pg\n```\n\n----------------------------------------\n\nTITLE: Fetching Payment Link Details with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve details of an existing payment link using the PGFetchLink method. It requires the API version and the link_id as parameters and returns the complete details of the specified payment link.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGFetchLink(\"2022-09-01\", \"my_link_id_test\").then((response) => {\n    console.log('Fetching Payment Link successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching payment link:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching All Saved Card Instruments using Cashfree SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to fetch all saved card instruments for a customer using the Cashfree SDK. It requires the API version, customer ID, and instrument type as parameters. The method returns a Promise that resolves with an array of instrument details or rejects with an error.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/TokenVault.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGCustomerFetchInstruments(\"2022-09-01\", \"<customer_id>\", \"card\").then((response) => {\n    console.log('Fetching Instruments Successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching instruments:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Eligible Paylater Options with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the PGEligibilityFetchPaylater method to retrieve eligible paylater options for a customer and order. It includes the request body structure and error handling.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Eligibility.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"queries\": {\n      \"amount\": 10,\n      \"customer_details\": {\n        \"customer_phone\": \"8908908901\"\n      }\n    }\n  }\nCashfree.PGEligibilityFetchPaylater(\"2022-09-01\", request).then((response) => {\n    console.log('Eligibility Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching eligibility:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching a Specific Refund with Cashfree Payment Gateway in JavaScript\nDESCRIPTION: Example showing how to fetch details for a specific refund using the Cashfree SDK. Requires both the order ID and the refund ID to identify the specific refund to retrieve.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Refunds.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGOrderFetchRefund(\"2022-09-01\", \"order_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\", \"refund_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\").then((response) => {\n    console.log('Refund information fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching refund information:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Specific Saved Card Instrument using Cashfree SDK in JavaScript\nDESCRIPTION: This code snippet shows how to fetch a specific saved card instrument using the Cashfree SDK. It requires the API version, customer ID, and instrument ID as parameters. The method returns a Promise that resolves with the instrument details or rejects with an error.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/TokenVault.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGCustomerFetchInstrument(\"2022-09-01\", \"<customer_id>\", \"<instrument_id>\").then((response) => {\n    console.log('Instrument Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching instrument:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Saved Card Instrument using Cashfree SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a saved card instrument using the Cashfree SDK. It requires the API version, customer ID, and instrument ID as parameters. The method returns a Promise that resolves with the deleted instrument details or rejects with an error.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/TokenVault.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGCustomerDeleteInstrument(\"2022-09-01\", \"<customer_id>\", \"<instrument_id>\").then((response) => {\n    console.log('Instrument Delete successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while deleting instrument:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Cancelling a Payment Link with Cashfree SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to cancel an existing payment link using the PGCancelLink method from the Cashfree SDK. It requires the API version and the link_id as parameters. The method returns details of the cancelled payment link.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGCancelLink(\"2022-09-01\", \"my_link_id_test\").then((response) => {\n    console.log('Cancel Payment Link successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while cancelling payment link:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching All Refunds for an Order with Cashfree Payment Gateway in JavaScript\nDESCRIPTION: Example showing how to fetch all refunds associated with a specific order using the Cashfree SDK. Returns an array of refund details, with each element containing the complete information about a refund.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Refunds.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGOrderFetchRefunds(\"2022-09-01\", \"order_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\").then((response) => {\n    console.log('Refund information fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching refund information:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Cryptogram for Saved Card Instrument using Cashfree SDK in JavaScript\nDESCRIPTION: This code snippet shows how to fetch a cryptogram for a saved card instrument using the Cashfree SDK. It requires the API version, customer ID, and instrument ID as parameters. The method returns a Promise that resolves with the cryptogram details or rejects with an error.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/TokenVault.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGCustomerInstrumentsFetchCryptogram(\"2022-09-01\", \"<customer_id>\", \"<instrument_id>\").then((response) => {\n    console.log('Cryptogram Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error fetching cryptogram:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Reconciliation Data with Cashfree PG SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the PGFetchRecon method to fetch reconciliation data. It includes setting up the request object with pagination and date filters, and handling the API response.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Reconciliation.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"pagination\": {\n      \"limit\": 10,\n      \"cursor\": \"eyJzZWFyY2hBZnRlciI6eyJsaXN0IjpbMTg4NjcxNDVdLCJlbXB0eSI6ZmFsc2V9LCJyZWNvbkFQSVR5cGUiOiJMRURHRVIifQ==\"\n    },\n    \"filters\": {\n      \"start_date\": \"2022-07-20T00:00:00Z\",\n      \"end_date\": \"2022-07-21T23:59:59Z\"\n    }\n  }\n Cashfree.PGFetchRecon(\"2022-09-01\", request, \"application/json\", null, null, \"application/json\").then((response) => {\n    console.log('Fetch Recon successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating New Offer with Cashfree Payment Gateway\nDESCRIPTION: Creates a new offer with specified discount and cashback details, terms and conditions, and validation rules. Requires API version and offer details in the request body. Returns offer details including generated offer ID and status.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Offers.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst request = {\n    \"offer_meta\": {\n      \"offer_title\": \"Test Offer\",\n      \"offer_description\": \"Offer Description\",\n      \"offer_code\": \"CFTESTOFFER\",\n      \"offer_start_time\": \"2023-03-21T08:09:51Z\",\n      \"offer_end_time\": \"2024-03-21T08:09:51Z\"\n    },\n    \"offer_tnc\": {\n      \"offer_tnc_type\": \"text\",\n      \"offer_tnc_value\": \"Terms and Condition of the Offer\"\n    },\n    \"offer_details\": {\n      \"offer_type\": \"DISCOUNT_AND_CASHBACK\",\n      \"discount_details\": {\n        \"discount_type\": \"flat\",\n        \"discount_value\": \"10\",\n        \"max_discount_amount\": \"10\"\n      },\n      \"cashback_details\": {\n        \"cashback_type\": \"percentage\",\n        \"cashback_value\": \"10\",\n        \"max_cashback_amount\": \"10\"\n      }\n    },\n    \"offer_validations\": {\n      \"payment_method\": {\n        \"card\": {\n          \"type\": [\n            \"cc\"\n          ],\n          \"bank_name\": \"hdfc bank\",\n          \"scheme_name\": [\n            \"visa\"\n          ]\n        }\n      },\n      \"min_amount\": 15,\n      \"max_allowed\": 100\n    }\n  }\n\nCashfree.PGCreateOffer(\"2022-09-01\", request).then((response) => {\n    console.log('Offer creation successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while creating offers:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Orders for a Payment Link using Cashfree PG SDK in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the Cashfree PG SDK to fetch orders associated with a payment link. It includes error handling and uses the PGLinkFetchOrders method.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGLinkFetchOrders(\"2022-09-01\", \"my_link_id_test_01\").then((response) => {\n    console.log('Fetching Link Orders successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching Link Orders:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching Order Details (Version <5)\nDESCRIPTION: Retrieve order details using order ID for versions below 5.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGFetchOrder(\"2023-08-01\", \"<order_id>\").then((response) => {\n    console.log('Order fetched successfully:', response.data);\n}).catch((error) => {\n    console.error('Error:', error.response.data.message);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Cashfree SDK (Version <5)\nDESCRIPTION: Initialize the Cashfree SDK with sandbox environment and API credentials for versions below 5.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/README.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Cashfree } from \"cashfree-pg\"; \n\nCashfree.XClientId = \"<x-client-id>\";\nCashfree.XClientSecret = \"<x-client-secret>\";\nCashfree.XEnvironment = Cashfree.Environment.SANDBOX;\n```\n\n----------------------------------------\n\nTITLE: Fetching Offer Details by ID\nDESCRIPTION: Retrieves details of an existing offer using its offer ID. Requires API version and offer ID as parameters. Returns complete offer details including status, terms, and validation rules.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Offers.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCashfree.PGFetchOffer(\"2022-09-01\", \"afbc424a-a21c-4e77-8b3d-5ac0d9b91974\").then((response) => {\n    console.log('Offer Fetch successful:', response.data);\n})\n.catch((error) => {\n    console.error('Error while fetching offer:', error);\n});\n```\n\n----------------------------------------\n\nTITLE: Order Creation Response Structure in Cashfree PG SDK\nDESCRIPTION: This JSON example shows the response structure returned by the Cashfree Payment Gateway API after successfully creating an order. It contains order details, payment links, customer information, and other metadata.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Orders.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cf_order_id\": 2149460581,\n  \"created_at\": \"2023-08-11T18:02:46+05:30\",\n  \"customer_details\": {\n    \"customer_id\": \"409128494\",\n    \"customer_name\": \"Johmn Doe\",\n    \"customer_email\": \"pmlpayme@ntsas.com\",\n    \"customer_phone\": \"9876543210\"\n  },\n  \"entity\": \"order\",\n  \"order_amount\": 22,\n  \"order_currency\": \"INR\",\n  \"order_expiry_time\": \"2023-09-09T18:02:46+05:30\",\n  \"order_id\": \"order_3242Tq4Edj9CC5RDcMeobmJOWOBJij\",\n  \"order_meta\": {\n    \"return_url\": \"https://example.com/return/{order_id}\",\n    \"notify_url\": \"https://example.com/notify\",\n    \"payment_methods\": \"cc\"\n  },\n  \"order_note\": \"some order note LIST\",\n  \"order_splits\": [],\n  \"order_status\": \"ACTIVE\",\n  \"order_tags\": {\n    \"name\": \"John\",\n    \"age\": \"19\"\n  },\n  \"payment_session_id\": \"session_a1VXIPJo8kh7IBigVXX8LgTMupQW_cu25FS8KwLwQLOmiHqbBxq5UhEilrhbDSKKHA6UAuOj9506aaHNlFAHEqYrHSEl9AVtYQN9LIIc4vkH\",\n  \"payments\": {\n    \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/payments\"\n  },\n  \"refunds\": {\n    \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/refunds\"\n  },\n  \"settlements\": {\n    \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/settlements\"\n  },\n  \"terminal_data\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Cashfree Webhook Response Structure\nDESCRIPTION: Example JSON structure showing the format of a successful payment webhook response from Cashfree. The response includes the webhook type, raw body, and parsed object data.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Webhook.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"type\": \"PAYMENT_SUCCESS_WEBHOOK\",\n    \"rawBody\":\"{\\\"type\\\":\\\"PAYMENT_SUCCESS_WEBHOOK\\\",\\\"data\\\":{}}\",\n    \"object\": {\n        \"type\": \"PAYMENT_SUCCESS_WEBHOOK\",\n        \"data\": {\n            \n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Order Fetch Response Structure in Cashfree PG SDK\nDESCRIPTION: This JSON example shows the response structure returned by the Cashfree Payment Gateway API when fetching an existing order's details. It provides comprehensive information about the order status, customer details, and payment options.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Orders.md#2025-04-18_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cf_order_id\": 2149460581,\n  \"created_at\": \"2023-08-11T18:02:46+05:30\",\n  \"customer_details\": {\n    \"customer_id\": \"409128494\",\n    \"customer_name\": \"Johmn Doe\",\n    \"customer_email\": \"pmlpayme@ntsas.com\",\n    \"customer_phone\": \"9876543210\"\n  },\n  \"entity\": \"order\",\n  \"order_amount\": 22,\n  \"order_currency\": \"INR\",\n  \"order_expiry_time\": \"2023-09-09T18:02:46+05:30\",\n  \"order_id\": \"order_3242Tq4Edj9CC5RDcMeobmJOWOBJij\",\n  \"order_meta\": {\n    \"return_url\": \"https://example.com/return/{order_id}\",\n    \"notify_url\": \"https://example.com/notify\",\n    \"payment_methods\": \"cc\"\n  },\n  \"order_note\": \"some order note LIST\",\n  \"order_splits\": [],\n  \"order_status\": \"ACTIVE\",\n  \"order_tags\": {\n    \"name\": \"John\",\n    \"age\": \"19\"\n  },\n  \"payment_session_id\": \"session_a1VXIPJo8kh7IBigVXX8LgTMupQW_cu25FS8KwLwQLOmiHqbBxq5UhEilrhbDSKKHA6UAuOj9506aaHNlFAHEqYrHSEl9AVtYQN9LIIc4vkH\",\n  \"payments\": {\n    \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/payments\"\n  },\n  \"refunds\": {\n    \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/refunds\"\n  },\n  \"settlements\": {\n    \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/settlements\"\n  },\n  \"terminal_data\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Payment Link Response Structure in Cashfree SDK\nDESCRIPTION: This JSON structure represents the response format for payment link operations in the Cashfree SDK. It includes information such as link ID, status, amount, customer details, metadata, URLs, expiry time, and notification settings.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cf_link_id\": 1996567,\n  \"link_id\": \"my_link_id\",\n  \"link_status\": \"ACTIVE\",\n  \"link_currency\": \"INR\",\n  \"link_amount\": 100,\n  \"link_amount_paid\": 0,\n  \"link_partial_payments\": true,\n  \"link_minimum_partial_amount\": 20,\n  \"link_purpose\": \"Payment for PlayStation 11\",\n  \"link_created_at\": \"2021-09-30T17:05:01+05:30\",\n  \"customer_details\": {\n    \"customer_name\": \"John Doe\",\n    \"customer_phone\": \"9999999999\",\n    \"customer_email\": \"john@example.com\"\n  },\n  \"link_meta\": {\n    \"title\": \"link_meta\",\n    \"description\": \"Payment link meta information object\",\n    \"type\": \"object\",\n    \"example\": {\n      \"notify_url\": \"https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net\",\n      \"upi_intent\": false,\n      \"return_url\": \"https://b8af79f41056.eu.ngrok.io\"\n    },\n    \"properties\": {\n      \"notify_url\": {\n        \"type\": \"string\",\n        \"description\": \"Notification URL for server-server communication. It should be an https URL.\"\n      },\n      \"upi_intent\": {\n        \"type\": \"boolean\",\n        \"description\": \"If \\\"true\\\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere\"\n      },\n      \"return_url\": {\n        \"type\": \"string\",\n        \"description\": \"The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250.\"\n      },\n      \"payment_methods\": {\n        \"type\": \"string\",\n        \"description\": \"Allowed payment modes for this link. Pass comma-separated values among following options - \\\"cc\\\", \\\"dc\\\", \\\"ccc\\\", \\\"ppc\\\", \\\"nb\\\", \\\"upi\\\", \\\"paypal\\\", \\\"app\\\". Leave it blank to show all available payment methods\"\n      }\n    },\n    \"x-readme-ref-name\": \"LinkMetaEntity\"\n  },\n  \"link_url\": \"https://payments-test.cashfree.com/links/o1tf1nvcvjhg\",\n  \"link_expiry_time\": \"2021-10-14T15:04:05+05:30\",\n  \"link_notes\": {\n    \"title\": \"link_notes\",\n    \"type\": \"object\",\n    \"description\": \"Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs\",\n    \"example\": {\n      \"key_1\": \"value_1\",\n      \"key_2\": \"value_2\"\n    },\n    \"additionalProperties\": {\n      \"type\": \"string\"\n    },\n    \"x-readme-ref-name\": \"LinkNotesEntity\"\n  },\n  \"link_auto_reminders\": true,\n  \"link_notify\": {\n    \"title\": \"link_notify\",\n    \"type\": \"object\",\n    \"description\": \"Payment link Notify Object for SMS and Email\",\n    \"example\": {\n      \"send_sms\": false,\n      \"send_email\": true\n    },\n    \"properties\": {\n      \"send_sms\": {\n        \"type\": \"boolean\",\n        \"description\": \"If \\\"true\\\", Cashfree will send sms on customer_phone\"\n      },\n      \"send_email\": {\n        \"type\": \"boolean\",\n        \"description\": \"If \\\"true\\\", Cashfree will send email on customer_email\"\n      }\n    },\n    \"x-readme-ref-name\": \"LinkNotifyEntity\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Refund Creation Response Structure in JSON\nDESCRIPTION: The JSON response structure returned when creating a refund. Contains details such as refund status, amount, IDs, timestamps, and processing information.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Refunds.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cf_payment_id\": 2388816360,\n  \"cf_refund_id\": \"refund_40564529\",\n  \"created_at\": \"2024-01-11T16:58:06+05:30\",\n  \"entity\": \"refund\",\n  \"metadata\": null,\n  \"order_id\": \"order_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\",\n  \"processed_at\": null,\n  \"refund_amount\": 1,\n  \"refund_arn\": null,\n  \"refund_charge\": 0,\n  \"refund_currency\": \"INR\",\n  \"refund_id\": \"refund_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\",\n  \"refund_mode\": null,\n  \"refund_note\": null,\n  \"refund_speed\": {\n    \"requested\": \"STANDARD\",\n    \"accepted\": \"STANDARD\",\n    \"processed\": null,\n    \"message\": null\n  },\n  \"refund_splits\": [],\n  \"refund_status\": \"PENDING\",\n  \"refund_type\": \"MERCHANT_INITIATED\",\n  \"status_description\": \"In Progress\"\n}\n```\n\n----------------------------------------\n\nTITLE: Settlement API Response Format\nDESCRIPTION: Example JSON response structure returned by the settlement API, containing details like payment ID, order amount, settlement amount, transfer details, and currency information.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Settlements.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cf_payment_id\": 553338,\n  \"order_id\": \"order-12-127\",\n  \"entity\": \"settlement\",\n  \"order_amount\": 100,\n  \"payment_time\": \"2021-07-13T13:13:59+05:30\",\n  \"service_charge\": 10,\n  \"service_tax\": 1.8,\n  \"settlement_amount\": 88.2,\n  \"cf_settlement_id\": 6121238,\n  \"transfer_id\": 238,\n  \"transfer_time\": \"2021-07-25T12:57:52+05:30\",\n  \"transfer_utr\": \"N87912312\",\n  \"order_currency\": \"INR\",\n  \"settlement_currency\": \"INR\"\n}\n```\n\n----------------------------------------\n\nTITLE: Payment Link Details Response Structure in JSON\nDESCRIPTION: This JSON structure represents the response format for fetching payment link details. It includes information about the link status, amount, customer details, and various configuration options.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cf_link_id\": 1996567,\n  \"link_id\": \"my_link_id\",\n  \"link_status\": \"ACTIVE\",\n  \"link_currency\": \"INR\",\n  \"link_amount\": 100,\n  \"link_amount_paid\": 0,\n  \"link_partial_payments\": true,\n  \"link_minimum_partial_amount\": 20,\n  \"link_purpose\": \"Payment for PlayStation 11\",\n  \"link_created_at\": \"2021-09-30T17:05:01+05:30\",\n  \"customer_details\": {\n    \"customer_name\": \"John Doe\",\n    \"customer_phone\": \"9999999999\",\n    \"customer_email\": \"john@example.com\"\n  },\n  \"link_meta\": {\n    \"title\": \"link_meta\",\n    \"description\": \"Payment link meta information object\",\n    \"type\": \"object\",\n    \"example\": {\n      \"notify_url\": \"https://ee08e626ecd88c61c85f5c69c0418cb5.m.pipedream.net\",\n      \"upi_intent\": false,\n      \"return_url\": \"https://b8af79f41056.eu.ngrok.io\"\n    },\n    \"properties\": {\n      \"notify_url\": {\n        \"type\": \"string\",\n        \"description\": \"Notification URL for server-server communication. It should be an https URL.\"\n      },\n      \"upi_intent\": {\n        \"type\": \"boolean\",\n        \"description\": \"If \\\"true\\\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere\"\n      },\n      \"return_url\": {\n        \"type\": \"string\",\n        \"description\": \"The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250.\"\n      },\n      \"payment_methods\": {\n        \"type\": \"string\",\n        \"description\": \"Allowed payment modes for this link. Pass comma-separated values among following options - \\\"cc\\\", \\\"dc\\\", \\\"ccc\\\", \\\"ppc\\\", \\\"nb\\\", \\\"upi\\\", \\\"paypal\\\", \\\"app\\\". Leave it blank to show all available payment methods\"\n      }\n    },\n    \"x-readme-ref-name\": \"LinkMetaEntity\"\n  },\n  \"link_url\": \"https://payments-test.cashfree.com/links/o1tf1nvcvjhg\",\n  \"link_expiry_time\": \"2021-10-14T15:04:05+05:30\",\n  \"link_notes\": {\n    \"title\": \"link_notes\",\n    \"type\": \"object\",\n    \"description\": \"Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs\",\n    \"example\": {\n      \"key_1\": \"value_1\",\n      \"key_2\": \"value_2\"\n    },\n    \"additionalProperties\": {\n      \"type\": \"string\"\n    },\n    \"x-readme-ref-name\": \"LinkNotesEntity\"\n  },\n  \"link_auto_reminders\": true,\n  \"link_notify\": {\n    \"title\": \"link_notify\",\n    \"type\": \"object\",\n    \"description\": \"Payment link Notify Object for SMS and Email\",\n    \"example\": {\n      \"send_sms\": false,\n      \"send_email\": true\n    },\n    \"properties\": {\n      \"send_sms\": {\n        \"type\": \"boolean\",\n        \"description\": \"If \\\"true\\\", Cashfree will send sms on customer_phone\"\n      },\n      \"send_email\": {\n        \"type\": \"boolean\",\n        \"description\": \"If \\\"true\\\", Cashfree will send email on customer_email\"\n      }\n    },\n    \"x-readme-ref-name\": \"LinkNotifyEntity\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response for PG Reconciliation API in JSON\nDESCRIPTION: This JSON snippet shows the structure of the response returned by the PGFetchRecon method. It includes reconciliation data such as settlement details, transaction amounts, and event types for various payment-related events.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Reconciliation.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cursor\": \"cursor-uid\",\n  \"limit\": 9,\n  \"data\": [\n    {\n      \"cf_settlement_id\": 45345,\n      \"settlement_date\": \"2022-08-16T14:45:24+05:30\",\n      \"sale_type\": \"CREDIT\",\n      \"event_amount\": 3000,\n      \"amount_settled\": 2796.46,\n      \"event_settlement_amount\": 2800,\n      \"event_currency\": \"INR\",\n      \"payment_till\": \"2022-08-16T14:45:00+05:30\",\n      \"event_id\": \"45345\",\n      \"event_type\": \"SETTLEMENT\",\n      \"service_charge\": 0,\n      \"service_tax\": 0,\n      \"settlement_utr\": \"PGI45345\",\n      \"payment_from\": \"2022-08-16T14:14:55+05:30\",\n      \"settlement_initiated_on\": \"2022-08-16T14:45:24+05:30\",\n      \"adjustment\": -200,\n      \"settlement_tax\": 0.54,\n      \"event_time\": \"2022-08-16T14:45:07+05:30\",\n      \"settlement_charge\": 3,\n      \"entity\": \"recon\",\n      \"remarks\": \"Settled\",\n      \"event_status\": \"PAID\",\n      \"settlement_type\": \"INSTANT_SETTLEMENT\",\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45356,\n      \"settlement_date\": \"2022-08-16T14:45:14+05:30\",\n      \"sale_type\": \"CREDIT\",\n      \"event_amount\": 0,\n      \"amount_settled\": 0,\n      \"event_settlement_amount\": 0,\n      \"event_currency\": \"INR\",\n      \"payment_till\": \"2022-08-16T14:45:14+05:30\",\n      \"event_id\": \"45356\",\n      \"event_type\": \"SETTLEMENT\",\n      \"service_charge\": 0,\n      \"service_tax\": 0,\n      \"settlement_utr\": \"\",\n      \"payment_from\": \"2022-08-16T14:45:14+05:30\",\n      \"adjustment\": 0,\n      \"settlement_tax\": 0,\n      \"event_time\": \"2022-08-16T14:45:14+05:30\",\n      \"settlement_charge\": 0,\n      \"entity\": \"recon\",\n      \"remarks\": \"No eligible transactions to settle\",\n      \"event_status\": \"PAID\",\n      \"settlement_type\": \"INSTANT_SETTLEMENT\",\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45373,\n      \"settlement_date\": \"2022-08-16T14:45:38+05:30\",\n      \"sale_type\": \"CREDIT\",\n      \"event_amount\": 0,\n      \"amount_settled\": 0,\n      \"event_settlement_amount\": 0,\n      \"event_currency\": \"INR\",\n      \"payment_till\": \"2022-08-16T14:45:38+05:30\",\n      \"event_id\": \"45373\",\n      \"event_type\": \"SETTLEMENT\",\n      \"service_charge\": 0,\n      \"service_tax\": 0,\n      \"settlement_utr\": \"\",\n      \"payment_from\": \"2022-08-16T14:45:38+05:30\",\n      \"adjustment\": 0,\n      \"settlement_tax\": 0,\n      \"event_time\": \"2022-08-16T14:45:38+05:30\",\n      \"settlement_charge\": 0,\n      \"entity\": \"recon\",\n      \"remarks\": \"No eligible transactions to settle\",\n      \"event_status\": \"PAID\",\n      \"settlement_type\": \"INSTANT_SETTLEMENT\",\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45406,\n      \"split_service_charge\": 0,\n      \"sale_type\": \"DEBIT\",\n      \"event_amount\": 3067.26,\n      \"payment_service_charge\": 0,\n      \"event_settlement_amount\": 3067.26,\n      \"event_type\": \"DISPUTE\",\n      \"order_amount\": 3000,\n      \"payment_service_tax\": 0,\n      \"closed_in_favor_of\": \"MERCHANT\",\n      \"dispute_resolved_on\": \"2022-08-16 14:53:15\",\n      \"event_status\": \"CLOSED\",\n      \"settlement_date\": \"2022-08-16T14:45:24+05:30\",\n      \"customer_phone\": \"8281554863\",\n      \"dispute_note\": \"tesr\",\n      \"event_currency\": \"INR\",\n      \"event_id\": \"272\",\n      \"settlement_utr\": \"PGI45406\",\n      \"customer_email\": \"manideep.ellur@cashfree.com\",\n      \"dispute_category\": \"1402-Duplicate Processing\",\n      \"customer_name\": \"Manideep\",\n      \"split_service_tax\": 0,\n      \"vendor_commission\": 0,\n      \"order_id\": \"order_1527072DQpGNwTMBlnAc1GfxmWalriHBG\",\n      \"entity\": \"recon\",\n      \"event_time\": \"2022-08-16T14:52:55+05:30\",\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45406,\n      \"split_service_charge\": 0,\n      \"sale_type\": \"CREDIT\",\n      \"event_amount\": 3067.26,\n      \"payment_service_charge\": 0,\n      \"event_settlement_amount\": 3067.26,\n      \"event_type\": \"DISPUTE_REVERSAL\",\n      \"order_amount\": 3000,\n      \"payment_service_tax\": 0,\n      \"closed_in_favor_of\": \"MERCHANT\",\n      \"dispute_resolved_on\": \"2022-08-16 14:53:15\",\n      \"event_status\": \"CLOSED\",\n      \"settlement_date\": \"2022-08-16T14:45:24+05:30\",\n      \"customer_phone\": \"8281554863\",\n      \"dispute_note\": \"tesr\",\n      \"event_currency\": \"INR\",\n      \"event_id\": \"272\",\n      \"settlement_utr\": \"PGI45406\",\n      \"customer_email\": \"manideep.ellur@cashfree.com\",\n      \"dispute_category\": \"1402-Duplicate Processing\",\n      \"customer_name\": \"Manideep\",\n      \"split_service_tax\": 0,\n      \"vendor_commission\": 0,\n      \"order_id\": \"order_1527072DQpGNwTMBlnAc1GfxmWalriHBG\",\n      \"entity\": \"recon\",\n      \"event_time\": \"2022-08-16T14:52:55+05:30\",\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45345,\n      \"event_id\": \"45345\",\n      \"event_type\": \"OTHER_ADJUSTMENT\",\n      \"sale_type\": \"CREDIT\",\n      \"event_amount\": 3000,\n      \"adjustment_remarks\": \"INSTANT_SETTLEMENT_COMPUTE\",\n      \"event_currency\": \"INR\",\n      \"event_time\": \"2022-08-16T14:45:07+05:30\",\n      \"entity\": \"recon\",\n      \"event_settlement_amount\": 3000,\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45345,\n      \"event_id\": \"45345\",\n      \"event_type\": \"OTHER_ADJUSTMENT\",\n      \"sale_type\": \"DEBIT\",\n      \"event_amount\": 3,\n      \"adjustment_remarks\": \"INSTANT_SETTLEMENT_CHARGE\",\n      \"event_currency\": \"INR\",\n      \"event_time\": \"2022-08-16T14:45:21+05:30\",\n      \"entity\": \"recon\",\n      \"event_settlement_amount\": 3,\n      \"payment_group\": \"CREDIT_CARD\"\n    },\n    {\n      \"cf_settlement_id\": 45345,\n      \"event_id\": \"45345\",\n      \"event_type\": \"OTHER_ADJUSTMENT\",\n      \"sale_type\": \"DEBIT\",\n      \"event_amount\": 0.54,\n      \"adjustment_remarks\": \"INSTANT_SETTLEMENT_TAX\",\n      \"event_currency\": \"INR\",\n      \"event_time\": \"2022-08-16T14:45:21+05:30\",\n      \"entity\": \"recon\",\n      \"event_settlement_amount\": 0.54\n    },\n    {\n      \"cf_settlement_id\": 45345,\n      \"event_id\": \"45345\",\n      \"event_type\": \"OTHER_ADJUSTMENT\",\n      \"sale_type\": \"DEBIT\",\n      \"event_amount\": 2796.46,\n      \"adjustment_remarks\": \"INSTANT_SETTLEMENT_SWEEP\",\n      \"event_currency\": \"INR\",\n      \"event_time\": \"2022-08-16T14:45:21+05:30\",\n      \"entity\": \"recon\",\n      \"event_settlement_amount\": 2796.46,\n      \"payment_group\": \"CREDIT_CARD\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Refunds Response Structure in JSON\nDESCRIPTION: The JSON response structure when fetching all refunds for an order. Returns an array of refund objects, each containing complete details about individual refunds including status, amount, and processing information.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Refunds.md#2025-04-18_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n  \"cf_payment_id\": 2388816360,\n  \"cf_refund_id\": \"refund_40564529\",\n  \"created_at\": \"2024-01-11T16:58:06+05:30\",\n  \"entity\": \"refund\",\n  \"metadata\": null,\n  \"order_id\": \"order_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\",\n  \"processed_at\": null,\n  \"refund_amount\": 1,\n  \"refund_arn\": null,\n  \"refund_charge\": 0,\n  \"refund_currency\": \"INR\",\n  \"refund_id\": \"refund_145082ao5HaUJOvfXKfdQwZ3A1jy5Pq8\",\n  \"refund_mode\": null,\n  \"refund_note\": null,\n  \"refund_speed\": {\n    \"requested\": \"STANDARD\",\n    \"accepted\": \"STANDARD\",\n    \"processed\": null,\n    \"message\": null\n  },\n  \"refund_splits\": [],\n  \"refund_status\": \"PENDING\",\n  \"refund_type\": \"MERCHANT_INITIATED\",\n  \"status_description\": \"In Progress\"\n}\n]\n```\n\n----------------------------------------\n\nTITLE: Offer API Response Structure\nDESCRIPTION: JSON structure showing the response format for both create and fetch offer operations. Includes offer details, status, terms and conditions, and validation rules.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/Offers.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"offer_id\": \"d2b430fb-1afe-455a-af31-66d00377b29a\",\n  \"offer_status\": \"active\",\n  \"offer_meta\": {\n    \"offer_title\": \"some title\",\n    \"offer_description\": \"some offer description\",\n    \"offer_code\": \"CFTESTOFFER\",\n    \"offer_start_time\": \"2023-03-21T08:09:51Z\",\n    \"offer_end_time\": \"2023-03-29T08:09:51Z\"\n  },\n  \"offer_tnc\": {\n    \"offer_tnc_type\": \"text\",\n    \"offer_tnc_value\": \"TnC for the Offer.\"\n  },\n  \"offer_details\": {\n    \"offer_type\": \"DISCOUNT_AND_CASHBACK\",\n    \"discount_details\": {\n      \"discount_type\": \"flat\",\n      \"discount_value\": \"10\",\n      \"max_discount_amount\": \"10\"\n    },\n    \"cashback_details\": {\n      \"cashback_type\": \"percentage\",\n      \"cashback_value\": \"20\",\n      \"max_cashback_amount\": \"150\"\n    }\n  },\n  \"offer_validations\": {\n    \"min_amount\": 10,\n    \"payment_method\": {\n      \"wallet\": {\n        \"issuer\": \"paytm\"\n      }\n    },\n    \"max_allowed\": 2\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Order Details Response Structure for Payment Link in JSON\nDESCRIPTION: This JSON structure represents the response format for fetching orders associated with a payment link. It includes detailed information about each order, such as order ID, amount, customer details, and payment status.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/docs/PaymentLink.md#2025-04-18_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"cf_order_id\": 2149460581,\n    \"created_at\": \"2023-08-11T18:02:46+05:30\",\n    \"customer_details\": {\n      \"customer_id\": \"409128494\",\n      \"customer_name\": \"Johmn Doe\",\n      \"customer_email\": \"pmlpayme@ntsas.com\",\n      \"customer_phone\": \"9876543210\"\n    },\n    \"entity\": \"order\",\n    \"order_amount\": 22,\n    \"order_currency\": \"INR\",\n    \"order_expiry_time\": \"2023-09-09T18:02:46+05:30\",\n    \"order_id\": \"order_3242Tq4Edj9CC5RDcMeobmJOWOBJij\",\n    \"order_meta\": {\n      \"return_url\": \"https://example.com/return/{order_id}\",\n      \"notify_url\": \"https://example.com/notify\",\n      \"payment_methods\": \"cc\"\n    },\n    \"order_note\": \"some order note LIST\",\n    \"order_splits\": [],\n    \"order_status\": \"ACTIVE\",\n    \"order_tags\": {\n      \"name\": \"John\",\n      \"age\": \"19\"\n    },\n    \"payment_session_id\": \"session_a1VXIPJo8kh7IBigVXX8LgTMupQW_cu25FS8KwLwQLOmiHqbBxq5UhEilrhbDSKKHA6UAuOj9506aaHNlFAHEqYrHSEl9AVtYQN9LIIc4vkH\",\n    \"payments\": {\n      \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/payments\"\n    },\n    \"refunds\": {\n      \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/refunds\"\n    },\n    \"settlements\": {\n      \"url\": \"https://sandbox.cashfree.com/pg/orders/order_3242Tq4Edj9CC5RDcMeobmJOWOBJij/settlements\"\n    },\n    \"terminal_data\": null\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: A template for the boilerplate license notice that should be included in project files. Developers should replace the bracketed fields with their own information and include this notice in the appropriate comment syntax for their file format.\nSOURCE: https://github.com/cashfree/cashfree-pg-sdk-nodejs/blob/main/LICENSE.md#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```"
  }
]
[
  {
    "owner": "microsoftdocs",
    "repo": "azure-devops-yaml-schema",
    "content": "TITLE: Configuring PR Triggers with Branch and Path Filters in Azure DevOps YAML\nDESCRIPTION: This example demonstrates the full syntax for configuring PR triggers in Azure DevOps pipelines. It shows how to include specific branch patterns, exclude certain branches, and exclude specific file paths from triggering pipeline runs when pull requests are created or updated.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pr.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include:\n    - features/*\n    exclude:\n    - features/experimental/*\n  paths:\n    exclude:\n    - README.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Service Deploy Task in YAML\nDESCRIPTION: YAML configuration for Azure App Service deployment task v3 showing all available input parameters for deploying web, mobile, or API applications to Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure App Service deploy v3\n# Deploy to Azure App Service a web, mobile, or API app using Docker, Java, .NET, .NET Core, Node.js, PHP, Python, or Ruby.\n- task: AzureRmWebAppDeployment@3\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    appType: 'app' # 'app' | 'applinux' | 'functionapp' | 'api' | 'mobileapp'. Alias: WebAppKind. Required. App type. Default: app.\n    WebAppName: # string. Required. App Service name. \n    #DeployToSlotFlag: false # boolean. Optional. Use when WebAppKind != \"\". Deploy to slot. Default: false.\n    #ResourceGroupName: # string. Required when DeployToSlotFlag = true. Resource group. \n    #SlotName: # string. Required when DeployToSlotFlag = true. Slot. \n    #ImageSource: 'Registry' # 'Registry' | 'Builtin'. Optional. Use when WebAppKind = applinux || WebAppKind = linux. Image Source. Default: Registry.\n    #Package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required when WebAppKind != linux && WebAppKind != applinux &&  WebAppKind != \"\". Package or folder.\n    #UseWebDeploy: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\". Publish using Web Deploy. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline with Stages in YAML\nDESCRIPTION: Demonstrates the full syntax for defining a pipeline with stages, including various optional properties like triggers, resources, and variables. This structure is used for complex pipelines with multiple stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages: [ stage | template ] # Required. Stages are groups of jobs that can run without human intervention.\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\nname: string # Pipeline run number.\nappendCommitMessageToRunName: boolean # Append the commit message to the build number. The default is true.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\nlockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n```\n\n----------------------------------------\n\nTITLE: Defining Stages in Azure Pipelines (Latest Version)\nDESCRIPTION: YAML schema for defining stages in the latest version of Azure Pipelines. Each stage contains properties for identification, display, execution control, dependencies, and job definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: string # Required as first property. ID of the stage.\n  displayName: string # Human-readable name for the stage.\n  pool: string | pool # Pool where jobs in this stage will run unless otherwise specified.\n  dependsOn: string | [ string ] # Any stages which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this stage.\n  variables: variables | [ variable ] # Stage-specific variables.\n  jobs: [ job | deployment | template ] # Jobs which make up the stage.\n  lockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n  trigger: manual | automatic # Stage trigger manual or automatic (default).\n  isSkippable: boolean # Setting false prevents the stage from being skipped. By default it's always true.\n  templateContext: # Stage related information passed from a pipeline when extending a template.\n```\n\n----------------------------------------\n\nTITLE: Example Pipeline Configuration with Jobs\nDESCRIPTION: This example demonstrates a basic Azure Pipeline configuration with a trigger, pool, and two jobs running on different VM images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool: \n  vmImage: ubuntu-latest\n\njobs:\n- job: PreWork\n  steps:\n  - script: \"Do pre-work\"\n\n- job: PostWork\n  pool: windows-latest\n  steps:\n  - script: \"Do post-work using a different hosted image\"\n```\n\n----------------------------------------\n\nTITLE: Example Jobs Implementation in Azure DevOps Pipeline\nDESCRIPTION: A practical example showing how to define a job in an Azure DevOps pipeline with display name, error handling, workspace configuration, and steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: MyJob\n  displayName: My First Job\n  continueOnError: true\n  workspace:\n    clean: outputs\n  steps:\n  - script: echo My first job\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Pipeline Structure in YAML\nDESCRIPTION: Demonstrates the hierarchical structure of a pipeline with stages, jobs, and steps. This shows how a complex pipeline can be organized into logical units of work.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- Pipeline\n  - Stage A\n    - Job 1\n      - Step 1.1\n      - Step 1.2\n      - ...\n    - Job 2\n      - Step 2.1\n      - Step 2.2\n      - ...\n  - Stage B\n    - ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Canary Deployment Strategy in Azure DevOps YAML\nDESCRIPTION: Defines the structure for canary deployment strategy in Azure DevOps pipelines. Includes configuration for deployment increments, pre/post deployment hooks, traffic routing, and success/failure handlers. Each section can specify custom steps and pool configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  canary: # Canary Deployment strategy.\n    increments: [ string ] # Maximum batch size for deployment.\n    preDeploy: # Pre deploy hook for canary deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where pre deploy steps will run.\n    deploy: # Deploy hook for canary deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where deploy steps will run.\n    routeTraffic: # Route traffic hook for canary deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where route traffic steps will run.\n    postRouteTraffic: # Post route traffic hook for canary deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where post route traffic steps will run.\n    on: # On success or failure hook for canary deployment strategy.\n      failure: # Runs on failure of any step.\n        steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n        pool: string | pool # Pool where post on failure steps will run.\n      success: # Runs on success of all of the steps.\n        steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n        pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: Publishing Artifacts with YAML in Azure DevOps Pipelines\nDESCRIPTION: This YAML snippet demonstrates how to use the 'publish' keyword to upload a build directory as a WebApp artifact in an Azure DevOps pipeline. The 'publish' step uploads the contents of the $(Build.SourcesDirectory)/build folder as a pipeline artifact named 'WebApp'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-publish.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- publish: $(Build.SourcesDirectory)/build\n  artifact: WebApp\n  displayName: Publish artifact WebApp\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Azure DevOps YAML Pipeline\nDESCRIPTION: This example shows a basic Azure DevOps YAML pipeline definition with triggers, stages, jobs, and steps. It defines a CI pipeline that runs on Ubuntu and has two stages: CI and Test.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool: \n  vmImage: ubuntu-latest\n\nstages:\n- stage: CI\n  jobs:\n  - job: CIWork\n    steps:\n    - script: \"Do CI work\"\n\n- stage: Test\n  jobs:\n  - job: TestWork\n    steps:\n    - script: \"Do test work\"\n```\n\n----------------------------------------\n\nTITLE: Multi-Repository Checkout in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to check out multiple repositories in a single Azure DevOps pipeline, including the current repository, another project repository, and a GitHub repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: self\n- checkout: git://MyProject/MyRepo\n- checkout: MyGitHubRepo # Repo declared in a repository resource\n```\n\n----------------------------------------\n\nTITLE: Configuring KubernetesManifest Task in Azure DevOps YAML Pipeline\nDESCRIPTION: YAML configuration for the KubernetesManifest@1 task that supports Kubernetes operations such as deployment, baking manifests with Helm charts, creating secrets, deleting resources, patching, promoting, scaling, and rejecting deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Deploy to Kubernetes v1\n# Use Kubernetes manifest files to deploy to clusters or even bake the manifest files to be used for deployments using Helm charts.\n- task: KubernetesManifest@1\n  inputs:\n    #action: 'deploy' # 'bake' | 'createSecret' | 'delete' | 'deploy' | 'patch' | 'promote' | 'scale' | 'reject'. Action. Default: deploy.\n    #connectionType: 'kubernetesServiceConnection' # 'azureResourceManager' | 'kubernetesServiceConnection'. Required when action != bake. Service connection type. Default: kubernetesServiceConnection.\n    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when action != bake && connectionType = kubernetesServiceConnection. Kubernetes service connection. \n    #azureSubscriptionConnection: # string. Alias: azureSubscriptionEndpoint. Required when action != bake && connectionType = azureResourceManager. Azure subscription. \n    #azureResourceGroup: # string. Required when action != bake && connectionType = azureResourceManager. Resource group. \n    #kubernetesCluster: # string. Required when action != bake && connectionType = azureResourceManager. Kubernetes cluster. \n    #useClusterAdmin: false # boolean. Optional. Use when connectionType = azureResourceManager. Use cluster admin credentials. Default: false.\n    #namespace: # string. Namespace. \n    #strategy: 'none' # 'canary' | 'none'. Optional. Use when action = deploy || action = promote || action = reject. Strategy. Default: none.\n    #trafficSplitMethod: 'pod' # 'pod' | 'smi'. Optional. Use when strategy = canary. Traffic split method. Default: pod.\n    #percentage: '0' # string. Required when strategy = Canary && action = deploy. Percentage. Default: 0.\n    #baselineAndCanaryReplicas: '1' # string. Required when strategy = Canary && action = deploy && trafficSplitMethod = SMI. Baseline and canary replicas. Default: 1.\n    #manifests: # string. Required when action = deploy || action = promote || action = reject. Manifests. \n    #containers: # string. Optional. Use when action = deploy || action = promote || action = bake. Containers. \n    #imagePullSecrets: # string. Optional. Use when action = deploy || action = promote. ImagePullSecrets. \n    #renderType: 'helm' # 'helm' | 'kompose' | 'kustomize'. Optional. Use when action = bake. Render Engine. Default: helm.\n    #dockerComposeFile: # string. Required when action = bake && renderType = kompose. Path to docker compose file. \n    #helmChart: # string. Required when action = bake && renderType = helm. Helm Chart. \n    #releaseName: # string. Optional. Use when action = bake && renderType = helm. Helm Release Name. \n    #overrideFiles: # string. Optional. Use when action = bake && renderType = helm. Override Files. \n    #overrides: # string. Optional. Use when action = bake && renderType = helm. Overrides. \n    #kustomizationPath: # string. Optional. Use when action = bake && renderType = kustomize. Kustomization Path. \n    #resourceToPatch: 'file' # 'file' | 'name'. Required when action = patch. Resource to patch. Default: file.\n    #resourceFileToPatch: # string. Required when action = patch && resourceToPatch = file. File path. \n    #kind: # 'deployment' | 'replicaset' | 'statefulset'. Required when action = scale || resourceToPatch = name. Kind. \n    #name: # string. Required when action = scale || resourceToPatch = name. Name. \n    #replicas: # string. Required when action = scale. Replica count. \n    #mergeStrategy: 'strategic' # 'json' | 'merge' | 'strategic'. Required when action = patch. Merge Strategy. Default: strategic.\n    #arguments: # string. Optional. Use when action = delete. Arguments. \n    #patch: # string. Required when action = patch. Patch. \n    #secretType: 'dockerRegistry' # 'dockerRegistry' | 'generic'. Required when action = createSecret. Type of secret. Default: dockerRegistry.\n    #secretName: # string. Optional. Use when action = createSecret. Secret name. \n    #secretArguments: # string. Optional. Use when action = createSecret && secretType = generic. Arguments. \n    #dockerRegistryEndpoint: # string. Optional. Use when action = createSecret && secretType = dockerRegistry. Docker registry service connection. \n    #rolloutStatusTimeout: '0' # string. Optional. Use when action = deploy || action = patch || action = scale || action = promote. Timeout for rollout status. Default: 0.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Container Apps Deploy Task in YAML\nDESCRIPTION: YAML configuration syntax for the AzureContainerApps@1 task that builds and deploys Azure Container Apps. Includes all available input parameters like Azure subscription connection, container registry settings, dockerfile configuration, and deployment options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Container Apps Deploy v1\n# An Azure DevOps Task to build and deploy Azure Container Apps.\n- task: AzureContainerApps@1\n  inputs:\n  # advanced\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #appSourcePath: # string. Application source path. \n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure Resource Manager connection. \n    #acrName: # string. Azure Container Registry name. \n    #acrUsername: # string. Azure Container Registry username. \n    #acrPassword: # string. Azure Container Registry password. \n    #dockerfilePath: # string. Dockerfile path. \n    #imageToBuild: # string. Docker image to build. \n    #imageToDeploy: # string. Docker image to deploy. \n    #containerAppName: # string. Azure Container App name. \n    #resourceGroup: # string. Azure resource group name. \n    #containerAppEnvironment: # string. Azure Container App environment. \n    #runtimeStack: # string. Application runtime stack. \n    #targetPort: # string. Application target port. \n    #location: # string. Location of the Container App. \n    #environmentVariables: # string. Environment variables. \n    #ingress: # string. Ingress setting. \n    #yamlConfigPath: # string. YAML configuration file path. \n    #disableTelemetry: # boolean. Disable telemetry.\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Structure with Jobs in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows the structure for defining a pipeline with jobs in Azure Pipelines. It includes required and optional properties like jobs, pool, triggers, resources, and variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\njobs: [ job | deployment | template ] # Required. Jobs represent units of work which can be assigned to a single agent or server.\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\nname: string # Pipeline run number.\nappendCommitMessageToRunName: boolean # Append the commit message to the build number. The default is true.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\nlockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n```\n\n----------------------------------------\n\nTITLE: Deploying a Web App to Windows App Service with Multiple Deployment Slots\nDESCRIPTION: A YAML pipeline that deploys a web application to different deployment slots (Dev and Staging) in Windows App Service. The pipeline uses a two-stage approach with dependencies between stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'windows-latest'\n\nvariables:\n  solution: '**/*.sln'\n  buildPlatform: 'Any CPU'\n  buildConfiguration: 'Release'\n\nstages:\n - stage: DeployDevStage\n    displayName: 'Deploy App to Dev Slot'\n    jobs:\n      - job:  DeployApp\n        displayName: 'Deploy App'\n        steps:\n        - task: DownloadPipelineArtifact@2\n          inputs:\n            buildType: 'current'\n            artifactName: 'drop'\n            targetPath: '$(System.DefaultWorkingDirectory)'\n        - task: AzureRmWebAppDeployment@4\n          inputs:\n            ConnectionType: 'AzureRM'\n            azureSubscription: 'Fabrikam Azure Subscription - PartsUnlimited'\n            appType: 'webApp'\n            WebAppName: 'partsunlimited'\n            deployToSlotOrASE: true\n            ResourceGroupName: 'rgPartsUnlimited'\n            SlotName: 'Dev'\n            packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'\n\n  - stage: DeployStagingStage\n    displayName: 'Deploy App to Staging Slot'\n    dependsOn: DeployDevStage\n    jobs:\n      - job:  DeployApp\n        displayName: 'Deploy App'\n        steps:\n        - task: DownloadPipelineArtifact@2\n          inputs:\n            buildType: 'current'\n            artifactName: 'drop'\n            targetPath: '$(System.DefaultWorkingDirectory)'\n        - task: AzureRmWebAppDeployment@4\n          inputs:\n            appType: webApp\n            ConnectionType: AzureRM            \n            ConnectedServiceName: 'Fabrikam Azure Subscription - PartsUnlimited'\n            ResourceGroupName: 'rgPartsUnlimited'\n            WebAppName: 'partsunlimited'\n            Package: '$(System.DefaultWorkingDirectory)/**/*.zip'\n            deployToSlotOrASE: true\n            SlotName: 'staging'\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker@0 Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines the schema for the Docker@0 task, including all available input parameters and their descriptions. It covers options for container registry type, Docker actions, image naming, and advanced settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker v0\n# Build, tag, push, or run Docker images, or run a Docker command.\n- task: Docker@0\n  inputs:\n    containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Container Registry'. Required. Container Registry Type. Default: Azure Container Registry.\n    #dockerRegistryConnection: # string. Alias: dockerRegistryEndpoint. Optional. Use when containerregistrytype = Container Registry. Docker Registry Service Connection. \n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Optional. Use when containerregistrytype = Azure Container Registry. Azure subscription. \n    #azureContainerRegistry: # string. Optional. Use when containerregistrytype = Azure Container Registry. Azure Container Registry. \n    action: 'Build an image' # 'Build an image' | 'Tag images' | 'Push an image' | 'Push images' | 'Run an image' | 'Run a Docker command'. Required. Action. Default: Build an image.\n    #dockerFile: '**/Dockerfile' # string. Required when action = Build an image. Docker File. Default: **/Dockerfile.\n    #buildArguments: # string. Optional. Use when action = Build an image. Build Arguments. \n    #defaultContext: true # boolean. Optional. Use when action = Build an image. Use Default Build Context. Default: true.\n    #context: # string. Optional. Use when action = Build an image && defaultContext = false. Build Context. \n    #imageName: '$(Build.Repository.Name):$(Build.BuildId)' # string. Required when action == Build an image || action == Push an image || action == Run an image. Image Name. Default: $(Build.Repository.Name):$(Build.BuildId).\n    #imageNamesPath: # string. Required when action == Tag images || action == Push images. Image Names Path. \n    #qualifyImageName: true # boolean. Optional. Use when action = Build an image || action = Tag images || action = Push an image || action = Push images || action = Run an image. Qualify Image Name. Default: true.\n    #additionalImageTags: # string. Optional. Use when action = Build an image || action = Tag images || action = Push an image || action = Push images. Additional Image Tags. \n    #includeSourceTags: false # boolean. Optional. Use when action = Build an image || action = Tag image || action = Push an image || action = Push images. Include Source Tags. Default: false.\n    #includeLatestTag: false # boolean. Optional. Use when action = Build an image || action = Push an image || action = Push images. Include Latest Tag. Default: false.\n    #imageDigestFile: # string. Optional. Use when action = Push an image || action = Push images. Image Digest File. \n    #containerName: # string. Optional. Use when action = Run an image. Container Name. \n    #ports: # string. Optional. Use when action = Run an image. Ports. \n    #volumes: # string. Optional. Use when action = Run an image. Volumes. \n    #envVars: # string. Optional. Use when action = Run an image. Environment Variables. \n    #workDir: # string. Optional. Use when action = Run an image. Working Directory. \n    #entrypoint: # string. Optional. Use when action = Run an image. Entry Point Override. \n    #containerCommand: # string. Optional. Use when action = Run an image. Command. \n    #detached: true # boolean. Optional. Use when action = Run an image. Run In Background. Default: true.\n    #restartPolicy: 'no' # 'no' | 'onFailure' | 'always' | 'unlessStopped'. Required when action = Run an image && detached = true. Restart Policy. Default: no.\n    #restartMaxRetries: # string. Optional. Use when action = Run an image && detached = true && restartPolicy = onFailure. Maximum Restart Retries. \n    #customCommand: # string. Required when action = Run a Docker command. Command. \n  # Advanced Options\n    #dockerHostEndpoint: # string. Docker Host Service Connection. \n    #enforceDockerNamingConvention: true # boolean. Force image name to follow Docker naming convention. Default: true.\n    #workingDirectory: '$(System.DefaultWorkingDirectory)' # string. Alias: cwd. Working Directory. Default: $(System.DefaultWorkingDirectory).\n    #memory: # string. Memory limit.\n```\n\n----------------------------------------\n\nTITLE: Maven Build Task Input Parameters\nDESCRIPTION: Defines the YAML schema for configuring Maven build task inputs in Azure Pipelines. Includes essential parameters like POM file location, build goals, test publishing options, code coverage settings, Java environment configuration and Maven options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ninputs:\n  mavenPOMFile: 'pom.xml'  # Required\n  goals: 'package'       # Optional\n  options: ''          # Optional\n  publishJUnitResults: true\n  testResultsFiles: '**/TEST-*.xml'\n  testRunTitle: ''     # Optional\n  codeCoverageToolOption: 'None' # Allowed: None, Cobertura, JaCoCo\n  javaHomeOption: 'JDKVersion'   # Required\n  mavenVersionOption: 'Default'  # Required\n  mavenOptions: '-Xmx1024m'      # Optional\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker@1 Task in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet shows the complete configuration for the Docker@1 task with all available options. It includes container registry settings, commands for building, tagging, pushing, or running Docker images, and various advanced options. The snippet is heavily commented to explain each parameter's purpose and constraints.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Build, tag, push, or run Docker images, or run a Docker command.\n- task: Docker@1\n  inputs:\n  # Container Registry\n    #containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Container Registry'. Required when command != logout. Container registry type. Default: Azure Container Registry.\n    #dockerRegistryEndpoint: # string. Optional. Use when containerregistrytype = Container Registry && command != logout. Docker registry service connection. \n    #azureSubscriptionEndpoint: # string. Optional. Use when containerregistrytype = Azure Container Registry && command != logout. Azure subscription. \n    #azureContainerRegistry: # string. Optional. Use when containerregistrytype = Azure Container Registry && command != logout. Azure container registry. \n  # Commands\n    command: 'Build an image' # 'Build an image' | 'Tag image' | 'Push an image' | 'Run an image' | 'login' | 'logout'. Required. Command. Default: Build an image.\n    #dockerFile: '**/Dockerfile' # string. Required when command = Build an image || command = build. Dockerfile. Default: **/Dockerfile.\n    #arguments: # string. Optional. Use when command != login && command != logout. Arguments. \n    #pushMultipleImages: false # boolean. Optional. Use when command = Push an image || command = push. Push multiple images. Default: false.\n    #tagMultipleImages: false # boolean. Optional. Use when command = Tag image || command = tag. Tag multiple images. Default: false.\n    #imageName: '$(Build.Repository.Name):$(Build.BuildId)' # string. Required when command = Build an image || command = build || command = Run an image || command = run || pushMultipleImages = false || tagMultipleImages = false. Image name. Default: $(Build.Repository.Name):$(Build.BuildId).\n    #imageNamesPath: # string. Required when tagMultipleImages = true || pushMultipleImages = true. Image names path. \n    #qualifyImageName: true # boolean. Optional. Use when command = Build an image || command = build || command = Tag image || command = tag || command = Push an image || command = push || command = Run an image || command = run. Qualify image name. Default: true.\n    #qualifySourceImageName: false # boolean. Optional. Use when command = Tag image || command = tag. Qualify source image name. Default: false.\n    #includeSourceTags: false # boolean. Optional. Use when command = Build an image || command = build || command = Tag image || command = tag  || command = Push an image || command = push. Include source tags. Default: false.\n    #includeLatestTag: false # boolean. Optional. Use when command = Build an image || command = build. Include latest tag. Default: false.\n    #addDefaultLabels: true # boolean. Optional. Use when addDefaultLabels = false. Add default labels. Default: true.\n    #useDefaultContext: true # boolean. Optional. Use when command = Build an image || command = build. Use default build context. Default: true.\n    #buildContext: # string. Optional. Use when useDefaultContext = false. Build context. \n    #imageDigestFile: # string. Optional. Use when command = Push an image || command = push. Image digest file. \n    #containerName: # string. Optional. Use when command = Run an image || command = run. Container name. \n    #ports: # string. Optional. Use when command = Run an image || command = run. Ports. \n    #volumes: # string. Optional. Use when command = Run an image || command = run. Volumes. \n    #envVars: # string. Optional. Use when command = Run an image || command = run. Environment variables. \n    #workingDirectory: # string. Optional. Use when command = Run an image || command = run. Working directory. \n    #entrypointOverride: # string. Optional. Use when command = Run an image || command = run. Entry point override. \n    #containerCommand: # string. Optional. Use when command = Run an image || command = run. Container command. \n    #runInBackground: true # boolean. Optional. Use when command = Run an image || command = run. Run in background. Default: true.\n    restartPolicy: 'no' # 'no' | 'onFailure' | 'always' | 'unlessStopped'. Required when runInBackground = true. Restart policy. Default: no.\n    #maxRestartRetries: # string. Optional. Use when runInBackground = true && restartPolicy = onFailure. Maximum restart retries. \n  # Advanced Options\n    #dockerHostEndpoint: # string. Optional. Use when command != login && command != logout. Docker host service connection. \n    #enforceDockerNamingConvention: true # boolean. Optional. Use when command != login && command != logout. Force image name to follow Docker naming convention. Default: true.\n    #memoryLimit: # string. Optional. Use when command != login && command != logout. Memory limit.\n```\n\n----------------------------------------\n\nTITLE: Defining Resources in Azure Pipelines (2020.1 and newer)\nDESCRIPTION: YAML syntax for defining resources in Azure DevOps pipelines version 2020.1 and newer. This allows you to specify builds, containers, pipelines, repositories, webhooks, and packages that are referenced by your pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\n```\n\n----------------------------------------\n\nTITLE: Basic Steps Definition Syntax in Azure Pipelines YAML\nDESCRIPTION: The basic syntax for defining steps in an Azure DevOps Pipeline YAML file. Steps can be tasks, scripts, powershell, pwsh, bash, checkout, download, downloadBuild, getPackage, publish, template, or reviewApp.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # Steps are a linear sequence of operations that make up a job.\n```\n\n----------------------------------------\n\nTITLE: Example Stage Template Definition in Azure Pipelines YAML\nDESCRIPTION: Complete example of a stage template definition in a separate YAML file. It includes parameters, stage definition, and jobs for Windows and Mac environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-template.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: stages/test.yml\n\nparameters:\n  name: ''\n  testFile: ''\n\nstages:\n- stage: Test_${{ parameters.name }}\n  jobs:\n  - job: ${{ parameters.name }}_Windows\n    pool:\n      vmImage: windows-latest\n    steps:\n    - script: npm install\n    - script: npm test -- --file=${{ parameters.testFile }}\n  - job: ${{ parameters.name }}_Mac\n    pool:\n      vmImage: macos-latest\n    steps:\n    - script: npm install\n    - script: npm test -- --file=${{ parameters.testFile }}\n```\n\n----------------------------------------\n\nTITLE: NuGetCommand@2 - NuGet v2 task in YAML\nDESCRIPTION: This YAML snippet defines the structure and parameters for the NuGetCommand@2 task in Azure Pipelines. It showcases various options for restoring, packing, and pushing NuGet packages, including feed selection, versioning, and verbosity settings.  It specifies command options such as `restore`, `pack`, `push`, and `custom`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# NuGet v2\n# Restore, pack, or push NuGet packages, or run a NuGet command. Supports NuGet.org and authenticated feeds like Azure Artifacts and MyGet. Uses NuGet.exe and works with .NET Framework apps. For .NET Core and .NET Standard apps, use the .NET Core task.\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore' # 'restore' | 'pack' | 'push' | 'custom'. Required. Command. Default: restore.\n    restoreSolution: '**/*.sln' # string. Alias: solution. Required when command = restore. Path to solution, packages.config, or project.json. Default: **/*.sln.\n    #packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg.\n    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.\n    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. \n    #allowPackageConflicts: false # boolean. Optional. Use when command = push && nuGetFeedType = internal. Allow duplicates to be skipped. Default: false.\n    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. \n    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.\n    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to package. Default: $(BuildConfiguration).\n    #packDestination: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package folder. Default: $(Build.ArtifactStagingDirectory).\n    #arguments: # string. Required when command = custom. Command and arguments. \n  # Feeds and authentication\n    feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.\n    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts/TFS feed. Select from the dropdown or enter [project name/]feed name. \n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. \n    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. \n  # Advanced\n    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.\n    #disableParallelProcessing: false # boolean. Optional. Use when command = restore. Disable parallel processing. Default: false.\n    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. \n    #verbosityRestore: 'Detailed' # 'Quiet' | 'Normal' | 'Detailed'. Optional. Use when command = restore. Verbosity. Default: Detailed.\n  # Advanced\n    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.\n    #verbosityPush: 'Detailed' # 'Quiet' | 'Normal' | 'Detailed'. Optional. Use when command = push. Verbosity. Default: Detailed.\n  # Pack options\n    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.\n    #includeReferencedProjects: false # boolean. Optional. Use when versioningScheme = off && command = pack. Include referenced projects. Default: false.\n    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. \n    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.\n    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.\n    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.\n    #packTimezone: 'utc' # 'utc' | 'local'. Optional. Use when versioningScheme = byPrereleaseNumber && command = pack. Time zone. Default: utc.\n    #includeSymbols: false # boolean. Optional. Use when command = pack. Create symbols package. Default: false.\n    #toolPackage: false # boolean. Optional. Use when command = pack. Tool Package. Default: false.\n  # Advanced\n    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. \n    #basePath: # string. Optional. Use when command = pack. Base path. \n    #verbosityPack: 'Detailed' # 'Quiet' | 'Normal' | 'Detailed'. Optional. Use when command = pack. Verbosity. Default: Detailed.\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline with Steps in Azure DevOps YAML\nDESCRIPTION: YAML schema for defining a pipeline with a list of steps and one implicit job, including optional properties like strategy, pool, triggers, and resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsteps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # Required. A list of steps to run in this job.\nstrategy: strategy # Execution strategy for this job.\ncontinueOnError: string # Continue running even on failure?\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\ncontainer: string | container # Container resource name.\nservices: # Container resources to run as a service container.\n  string: string # Name/value pairs\nworkspace: # Workspace options on the agent.\n  clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\nname: string # Pipeline run number.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\n```\n\n----------------------------------------\n\nTITLE: Azure PowerShell Task Configuration (2022.1+)\nDESCRIPTION: YAML configuration for Azure PowerShell task version 4 with support for script signature validation. Allows running PowerShell scripts within an authenticated Azure environment using specified Azure subscription.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure PowerShell v4\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@4\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n    #RestrictContextToCurrentTask: false # boolean. Restrict scope of context to current task. Default: false.\n    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. \n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #validateScriptSignature: false # boolean. Optional. Use when ScriptType = FilePath. Validate script signature. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Pipeline YAML Structure\nDESCRIPTION: YAML schema definition for Azure Pipelines configuration. Shows the complete structure including required and optional properties like jobs, pool, triggers, resources and variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\njobs: [ job | deployment | template ] # Required. Jobs represent units of work which can be assigned to a single agent or server.\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\nname: string # Pipeline run number.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\nlockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubectl v0 Task in Azure Pipelines\nDESCRIPTION: YAML configuration for the Kubernetes@0 task in Azure Pipelines. This task allows running kubectl commands to deploy, configure, and update a Kubernetes cluster in Azure Container Service. It includes options for commands, secrets management, ConfigMaps, version control, and output formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Kubectl v0\n# Deploy, configure, update a Kubernetes cluster in Azure Container Service by running kubectl commands.\n- task: Kubernetes@0\n  inputs:\n    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Kubernetes service connection. \n    #namespace: # string. Namespace. \n  # Commands\n    #command: # 'apply' | 'create' | 'delete' | 'exec' | 'expose' | 'get' | 'logs' | 'run' | 'set' | 'top'. Command. \n    #useConfigurationFile: false # boolean. Use Configuration files. Default: false.\n    #configuration: # string. Required when useConfigurationFile = true. Configuration file. \n    #arguments: # string. Arguments. \n  # Secrets\n    secretType: 'dockerRegistry' # 'dockerRegistry' | 'generic'. Required. Type of secret. Default: dockerRegistry.\n    #secretArguments: # string. Optional. Use when secretType = generic. Arguments. \n    containerRegistryType: 'Azure Container Registry' # 'Azure Container Registry' | 'Container Registry'. Required when secretType = dockerRegistry. Container Registry type. Default: Azure Container Registry.\n    #dockerRegistryConnection: # string. Alias: dockerRegistryEndpoint. Optional. Use when secretType = dockerRegistry && containerRegistryType = Container Registry. Docker Registry service connection. \n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Optional. Use when secretType = dockerRegistry && containerRegistryType = Azure Container Registry. Azure subscription. \n    #azureContainerRegistry: # string. Optional. Use when secretType = dockerRegistry && containerRegistryType = Azure Container Registry. Azure Container Registry. \n    #secretName: # string. Secret name. \n    #forceUpdate: true # boolean. Force update secret. Default: true.\n  # ConfigMaps\n    #configMapName: # string. ConfigMap name. \n    #forceUpdateConfigMap: false # boolean. Force update configmap. Default: false.\n    #useConfigMapFile: false # boolean. Use file. Default: false.\n    #configMapFile: # string. Required when useConfigMapFile = true. ConfigMap file. \n    #configMapArguments: # string. Optional. Use when useConfigMapFile = false. Arguments. \n  # Advanced\n    #versionOrLocation: 'version' # 'version' | 'location'. Kubectl. Default: version.\n    #versionSpec: '1.7.0' # string. Optional. Use when versionOrLocation = version. Version spec. Default: 1.7.0.\n    #checkLatest: false # boolean. Optional. Use when versionOrLocation = version. Check for latest version. Default: false.\n    #specifyLocation: # string. Required when versionOrLocation = location. Path to Kubectl. \n    #workingDirectory: '$(System.DefaultWorkingDirectory)' # string. Alias: cwd. Working directory. Default: $(System.DefaultWorkingDirectory).\n  # Output\n    #outputFormat: 'json' # 'json' | 'yaml'. Output format. Default: json.\n    #kubectlOutput: # string. Output variable name.\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Results - Azure Pipelines 2022.2+\nDESCRIPTION: YAML configuration for publishing test results in Azure Pipelines version 2022.2 and newer. Supports advanced options like failing on missing results and publishing failures.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Test Results v2\n# Publish test results to Azure Pipelines.\n- task: PublishTestResults@2\n  inputs:\n    testResultsFormat: 'JUnit' # 'JUnit' | 'NUnit' | 'VSTest' | 'XUnit' | 'CTest'. Alias: testRunner. Required. Test result format. Default: JUnit.\n    testResultsFiles: '**/TEST-*.xml' # string. Required. Test results files. Default: **/TEST-*.xml.\n    #searchFolder: '$(System.DefaultWorkingDirectory)' # string. Search folder. Default: $(System.DefaultWorkingDirectory).\n    #mergeTestResults: false # boolean. Merge test results. Default: false.\n    #failTaskOnFailedTests: false # boolean. Fail if there are test failures. Default: false.\n    #failTaskOnFailureToPublishResults: false # boolean. Fail if there is failure in publishing test results. Default: false.\n    #failTaskOnMissingResultsFile: false # boolean. Fail if no result files are found. Default: false.\n    #testRunTitle: # string. Test run title. \n  # Advanced\n    #buildPlatform: # string. Alias: platform. Build Platform. \n    #buildConfiguration: # string. Alias: configuration. Build Configuration. \n    #publishRunAttachments: true # boolean. Upload test results files. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Jobs in Azure Pipelines 2022 and Later\nDESCRIPTION: YAML schema for defining deployment jobs in Azure Pipelines 2022 and later. This structure allows you to specify deployment jobs with properties like environment targeting, execution strategy, and resource configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment: string # Required as first property. Name of the deployment job, A-Z, a-z, 0-9, and underscore. The word deploy is a keyword and is unsupported as the deployment name.\n  displayName: string # Human-readable name for the deployment.\n  dependsOn: string | [ string ] # Any jobs which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this deployment.\n  continueOnError: string # Continue running even on failure?\n  timeoutInMinutes: string # Time to wait for this job to complete before the server kills it.\n  cancelTimeoutInMinutes: string # Time to wait for the job to cancel before forcibly terminating it.\n  variables: variables | [ variable ] # Deployment-specific variables.\n  pool: string | pool # Pool where this job will run.\n  environment: string | environment # Target environment name and optionally a resource name to record the deployment history; format: environment-name.resource-name.\n  strategy: strategy # Execution strategy for this deployment.\n  workspace: # Workspace options on the agent.\n    clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n  uses: # Any resources required by this job that are not already referenced.\n    repositories: [ string ] # Repository references.\n    pools: [ string ] # Pool references.\n  container: string | container # Container resource name.\n  services: # Container resources to run as a service container.\n    string: string # Name/value pairs\n  templateContext: # Deployment related information passed from a pipeline when extending a template.\n```\n\n----------------------------------------\n\nTITLE: Configuring DotNetCoreCLI@0 Task in YAML\nDESCRIPTION: YAML syntax for configuring the DotNetCoreCLI@0 task. This snippet shows the basic structure and available inputs for the task, including command selection, project specification, and publishing options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# .NET Core v0\n# Build, test and publish using dotnet core command-line.\n- task: DotNetCoreCLI@0\n  inputs:\n    command: 'build' # 'build' | 'publish' | 'restore' | 'test' | 'run'. Required. Command. Default: build.\n    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish Web Projects. Default: true.\n    #projects: # string. Optional. Use when command != publish || publishWebProjects = false. Project(s). \n    #arguments: # string. Arguments. \n    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip Published Projects. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Service Deployment Task in YAML\nDESCRIPTION: Comprehensive task configuration for deploying applications to Azure App Service. Includes options for connection types, app types, deployment methods, runtime stacks, and various deployment customization settings. Supports multiple deployment scenarios including web apps, function apps, and containerized applications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureRmWebAppDeployment@5\n  inputs:\n    ConnectionType: 'AzureRM' # 'AzureRM' | 'PublishProfile'. Required. Connection type. Default: AzureRM.\n    azureSubscription: # string. Alias: ConnectedServiceName. Required when ConnectionType = AzureRM. Azure subscription. \n    #PublishProfilePath: '$(System.DefaultWorkingDirectory)/**/*.pubxml' # string. Required when ConnectionType = PublishProfile. Publish profile path. Default: $(System.DefaultWorkingDirectory)/**/*.pubxml.\n    #PublishProfilePassword: # string. Required when ConnectionType = PublishProfile. Publish profile password. \n    appType: 'webApp' # 'webApp' | 'webAppLinux' | 'webAppContainer' | 'webAppHyperVContainer' | 'functionApp' | 'functionAppLinux' | 'functionAppContainer' | 'apiApp' | 'mobileApp'. Alias: WebAppKind. Required when ConnectionType = AzureRM. App Service type. Default: webApp.\n    WebAppName: # string. Required when ConnectionType = AzureRM. App Service name. \n    #deployToSlotOrASE: false # boolean. Alias: DeployToSlotOrASEFlag. Optional. Use when ConnectionType = AzureRM && WebAppKind != \"\". Deploy to Slot or App Service Environment. Default: false.\n    #ResourceGroupName: # string. Required when DeployToSlotOrASEFlag = true. Resource group. \n    #SlotName: 'production' # string. Required when DeployToSlotOrASEFlag = true. Slot. Default: production.\n    #DockerNamespace: # string. Required when WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = webAppHyperVContainer. Registry or Namespace. \n    #DockerRepository: # string. Required when WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = webAppHyperVContainer. Image. \n    #DockerImageTag: # string. Optional. Use when WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = webAppHyperVContainer. Tag. \n    #VirtualApplication: # string. Optional. Use when WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && WebAppKind != functionApp && webAppKind != functionAppLinux && WebAppKind != \"\". Virtual application. \n    #packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Alias: Package. Required when ConnectionType = PublishProfile || WebAppKind = webApp || WebAppKind = apiApp || WebAppKind = functionApp || WebAppKind = mobileApp || WebAppKind = webAppLinux || webAppKind = functionAppLinux. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #RuntimeStack: # 'DOTNETCORE:9.0' | 'DOTNETCORE:8.0' | 'DOTNETCORE:7.0' | 'DOTNETCORE:6.0' | 'NODE:20-lts' | 'NODE:18-lts' | 'NODE:16-lts' | 'PYTHON:3.12' | 'PYTHON:3.11' | 'PYTHON:3.10' | 'PYTHON:3.9' | 'PYTHON:3.8' | 'PHP:8.3' | 'PHP:8.2' | 'PHP:8.1' | 'PHP:8.0' | 'JAVA:21-java21' | 'JAVA:17-java17' | 'JAVA:11-java11' | 'JAVA:8-jre8' | 'JBOSSEAP:8-java17' | 'JBOSSEAP:8-java11' | 'JBOSSEAP:7-java17' | 'JBOSSEAP:7-java11' | 'JBOSSEAP:7-java8' | 'TOMCAT:10.1-java21' | 'TOMCAT:10.1-java17' | 'TOMCAT:10.1-java11' | 'TOMCAT:10.0-java17' | 'TOMCAT:10.0-java11' | 'TOMCAT:10.0-jre8' | 'TOMCAT:9.0-java21' | 'TOMCAT:9.0-java17' | 'TOMCAT:9.0-java11' | 'TOMCAT:9.0-jre8' | 'TOMCAT:8.5-java11' | 'TOMCAT:8.5-jre8'. Optional. Use when WebAppKind = webAppLinux. Runtime Stack. \n    #RuntimeStackFunction: # 'DOTNET|2.2' | 'DOTNET|3.1' | 'JAVA|8' | 'JAVA|11' | 'NODE|8' | 'NODE|10' | 'NODE|12' | 'NODE|14' | 'PYTHON|3.6' | 'PYTHON|3.7' | 'PYTHON|3.8'. Optional. Use when WebAppKind = functionAppLinux. Runtime Stack. \n    #StartupCommand: # string. Optional. Use when WebAppKind = webAppLinux || WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = functionAppLinux || WebAppKind = webAppHyperVContainer. Startup command. \n    #ScriptType: # 'Inline Script' | 'File Path'. Optional. Use when ConnectionType = AzureRM && WebAppKind != \"\" && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer. Deployment script type. \n    #InlineScript: ':: You can provide your deployment commands here. One command per line.' # string. Required when ScriptType == Inline Script && ConnectionType = AzureRM && WebAppKind != \"\" && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer. Inline Script. Default: :: You can provide your deployment commands here. One command per line..\n    #ScriptPath: # string. Required when ScriptType == File Path && ConnectionType = AzureRM && WebAppKind != \"\" && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer. Deployment script path. \n    #WebConfigParameters: # string. Optional. Use when WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && WebAppKind != webAppLinux && webAppKind != functionAppLinux && Package NotEndsWith .war. Generate web.config parameters for Python, Node.js, Go and Java apps. \n    #enableXmlTransform: false # boolean. Alias: XmlTransformation. Optional. Use when WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && WebAppKind != webAppLinux && webAppKind != functionAppLinux && Package NotEndsWith .war. XML transformation. Default: false.\n    #enableXmlVariableSubstitution: false # boolean. Alias: XmlVariableSubstitution. Optional. Use when WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && WebAppKind != webAppLinux && webAppKind != functionAppLinux && Package NotEndsWith .war. XML variable substitution. Default: false.\n    #JSONFiles: # string. Optional. Use when WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && WebAppKind != webAppLinux && webAppKind != functionAppLinux && Package NotEndsWith .war. JSON variable substitution. \n    #AppSettings: # string. Optional. Use when ConnectionType = AzureRM. App settings. \n    #ConfigurationSettings: # string. Optional. Use when ConnectionType = AzureRM. Configuration settings. \n    #enableCustomDeployment: false # boolean. Alias: UseWebDeploy. Optional. Use when ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Select deployment method. Default: false.\n    #DeploymentType: 'webDeploy' # 'webDeploy' | 'zipDeploy' | 'runFromZip'. Required when UseWebDeploy == true && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Deployment method. Default: webDeploy.\n    #TakeAppOfflineFlag: true # boolean. Optional. Use when UseWebDeploy == true && DeploymentType != runFromZip && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Take App Offline. Default: true.\n    #SetParametersFile: # string. Optional. Use when UseWebDeploy == true && DeploymentType == webDeploy && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. SetParameters file. \n    #RemoveAdditionalFilesFlag: false # boolean. Optional. Use when UseWebDeploy == true && DeploymentType == webDeploy && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Remove additional files at destination. Default: false.\n    #ExcludeFilesFromAppDataFlag: true # boolean. Optional. Use when UseWebDeploy == true && DeploymentType == webDeploy && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Exclude files from the App_Data folder. Default: true.\n    #AdditionalArguments: '-retryAttempts:6 -retryInterval:10000' # string. Optional. Use when UseWebDeploy == true && DeploymentType == webDeploy && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Additional arguments. Default: -retryAttempts:6 -retryInterval:10000.\n    #RenameFilesFlag: true # boolean. Optional. Use when UseWebDeploy == true && DeploymentType == webDeploy && ConnectionType = AzureRM && WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && webAppKind != functionAppLinux && WebAppKind != \"\" && Package NotEndsWith .war && Package NotEndsWith .jar. Rename locked files. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Detailed Container Configuration (Azure Pipelines 2020.1+)\nDESCRIPTION: Syntax for specifying a container job with detailed configuration options, including image tag, endpoint, environment variables, Docker socket mapping, container options, ports, volumes, and read-only volume mounting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-container.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncontainer:\n  image: string # Required. Container image tag.\n  endpoint: string # ID of the service endpoint connecting to a private container registry.\n  env: # Variables to map into the container's environment.\n    string: string # Name/value pairs\n  mapDockerSocket: boolean # Set this flag to false to force the agent not to setup the /var/run/docker.sock volume on container jobs.\n  options: string # Options to pass into container host.\n  ports: [ string ] # Ports to expose on the container.\n  volumes: [ string ] # Volumes to mount on the container.\n  mountReadOnly: # Volumes to mount read-only, the default is all false.\n    work: boolean # Mount the work directory as readonly.\n    externals: boolean # Mount the externals directory as readonly.\n    tools: boolean # Mount the tools directory as readonly.\n    tasks: boolean # Mount the tasks directory as readonly.\n```\n\n----------------------------------------\n\nTITLE: Defining Job Template Structure in YAML\nDESCRIPTION: Illustrates the structure of a job template YAML file, including parameter definitions and job specifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-template.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nparameters: { string: any } # expected parameters\njobs: [ job ]\n```\n\n----------------------------------------\n\nTITLE: HelmDeploy@1 - Package and Deploy Helm Charts Task\nDESCRIPTION: This YAML snippet demonstrates the structure and available options for the HelmDeploy@1 task in Azure Pipelines. It showcases the various input parameters that can be configured to manage Helm chart deployments, including Kubernetes cluster connection details, Azure Container Registry settings, Helm commands, and TLS configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Package and deploy Helm charts v1\n# Deploy, configure, update a Kubernetes cluster in Azure Container Service by running helm commands.\n- task: HelmDeploy@1\n  inputs:\n  # Kubernetes Cluster\n    #connectionType: 'Azure Resource Manager' # 'Azure Resource Manager' | 'Kubernetes Service Connection' | 'None'. Required when command != logout && command != package. Connection Type. Default: Azure Resource Manager.\n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Required when connectionType = Azure Resource Manager && command != logout && command != package. Azure subscription. \n    #azureResourceGroup: # string. Required when connectionType = Azure Resource Manager && command != logout && command != package. Resource group. \n    #kubernetesCluster: # string. Required when connectionType = Azure Resource Manager && command != logout && command != package. Kubernetes cluster. \n    #useClusterAdmin: false # boolean. Optional. Use when connectionType = Azure Resource Manager && command != logout && command != package. Use cluster admin credentials. Default: false.\n    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection && command != logout && command != package. Kubernetes Service Connection. \n    #namespace: # string. Optional. Use when command != logout && command != package. Namespace. \n  # Azure Container Registry\n    #azureSubscriptionForACR: # string. Alias: azureSubscriptionEndpointForACR. Required when command == login || command == package || command == push. Azure subscription for Container Registry. \n    #azureResourceGroupForACR: # string. Required when command == login || command == package || command == push. Resource group. \n    #azureContainerRegistry: # string. Required when command == login || command == package || command == push. Azure Container Registry. \n  # Commands\n    command: 'ls' # 'create' | 'delete' | 'expose' | 'get' | 'init' | 'install' | 'login' | 'logout' | 'ls' | 'push' | 'package' | 'rollback' | 'upgrade' | 'uninstall'. Required. Command. Default: ls.\n    #chartType: 'Name' # 'Name' | 'FilePath'. Required when command == install || command == upgrade. Chart Type. Default: Name.\n    #chartName: # string. Required when chartType == Name || command == create. Chart Name. \n    #chartPath: # string. Required when chartType == FilePath || command == package || command == push. Chart Path. \n    #remoteRepo: # string. Required when command == push. Remote Repo. \n    #chartVersion: # string. Alias: version. Optional. Use when command == package || command == install || command == upgrade. Version. \n    #releaseName: # string. Optional. Use when command == install || command == upgrade || command == rollback || command == uninstall || command == delete. Release Name. \n    #overrideValues: # string. Optional. Use when command == install || command == upgrade. Set Values. \n    #valueFile: # string. Optional. Use when command == install || command == upgrade. Value File. \n    #destination: '$(Build.ArtifactStagingDirectory)' # string. Optional. Use when command == package. Destination. Default: $(Build.ArtifactStagingDirectory).\n    #canaryimage: false # boolean. Optional. Use when command == init. Use canary image version. Default: false.\n    #upgradetiller: true # boolean. Optional. Use when command == init. Upgrade Tiller. Default: true.\n    #updatedependency: false # boolean. Optional. Use when command == install || command == package. Update Dependency. Default: false.\n    #save: true # boolean. Optional. Use when command == package. Save. Default: true.\n    #install: true # boolean. Optional. Use when command == upgrade. Install if release not present. Default: true.\n    #recreate: false # boolean. Optional. Use when command == upgrade. Recreate Pods. Default: false.\n    #resetValues: false # boolean. Optional. Use when command == upgrade. Reset Values. Default: false.\n    #force: false # boolean. Optional. Use when command == upgrade. Force. Default: false.\n    #waitForExecution: true # boolean. Optional. Use when command == init || command == install || command == upgrade. Wait. Default: true.\n    #arguments: # string. Optional. Use when command != login && command != logout. Arguments. \n    #chartNameForACR: # string. Required when command == package || command == push. Chart Name For Azure Container Registry. \n    #chartPathForACR: # string. Required when command == package || command == push. Chart Path for Azure Container Registry. \n  # TLS\n    #enableTls: false # boolean. Optional. Use when command != login && command != logout && command != package. Enable TLS. Default: false.\n    #caCert: # string. Required when enableTls == true && command != login && command != logout && command != package. CA certificate. \n    #certificate: # string. Required when enableTls == true && command != login && command != logout && command != package. Certificate. \n    #privatekey: # string. Required when enableTls == true && command != login && command != logout && command != package. Key. \n  # Advanced\n    #tillernamespace: # string. Optional. Use when command != login && command != logout && command != package. Tiller namespace. \n    #failOnStderr: false # boolean. Optional. Use when command != login && command != logout && command != package. Fail on Standard Error. Default: false.\n    #publishPipelineMetadata: true # boolean. Optional. Use when command != login && command != logout && command != package. Publish pipeline metadata. Default: true.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Properties in YAML\nDESCRIPTION: This YAML snippet demonstrates the structure and syntax for defining various properties of an Azure Pipeline configuration. It includes elements like jobs, pool, triggers, parameters, and resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\njobs: [ job | deployment | template ] # Required. Jobs represent units of work which can be assigned to a single agent or server.\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\nname: string # Pipeline run number.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\n```\n\n----------------------------------------\n\nTITLE: Passing Arguments to Script Path in Azure CLI Task (YAML)\nDESCRIPTION: This snippet illustrates how to pass arguments to a script file using the AzureCLI@2 task. It shows the configuration for executing a PowerShell script with pipeline variables as arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: <Azure_Resource_Manager_Service_Connection>\n    scriptType: 'ps'\n    scriptLocation: 'scriptPath'\n    arguments: '$(AZURE_STORAGE_ACCOUNT) $(AZURE_STORAGE_KEY)'\n    scriptPath: './scripts/publish.ps1'\n```\n\n----------------------------------------\n\nTITLE: Full Environment Object Syntax in YAML Pipeline\nDESCRIPTION: Comprehensive example showing the full object syntax for environment configuration in a deployment job, including all available properties and deployment strategy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-environment.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment:            # create environment and/or record deployments\n  name: string          # name of the environment to run this job on.\n  resourceName: string  # name of the resource in the environment to record the deployments against\n  resourceId: number    # resource identifier\n  resourceType: string  # type of the resource you want to target. Supported types - virtualMachine, Kubernetes\n  tags: string          # comma separated tag names to filter the resources in the environment\nstrategy:               # deployment strategy\n  runOnce:              # default strategy\n    deploy:\n      steps:\n      - script: echo Hello world\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Key Vault Task in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to configure the Azure Key Vault v1 task in an Azure Pipeline. It specifies the required inputs including Azure subscription, Key Vault name, and secrets filter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-key-vault-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Key Vault v1\n# Download Azure Key Vault secrets.\n- task: AzureKeyVault@1\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    KeyVaultName: # string. Required. Key vault. \n    SecretsFilter: '*' # string. Required. Secrets filter. Default: *.\n    #RunAsPreJob: false # boolean. Make secrets available to whole job. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Running .NET Core tests with automatic result publishing in YAML\nDESCRIPTION: This example demonstrates how to run tests in a .NET Core project repository. The task automatically publishes test results to the Azure DevOps pipeline without any additional configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_18\n\nLANGUAGE: YAML\nCODE:\n```\n# Run tests and auto publish test results.\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'test'\n```\n\n----------------------------------------\n\nTITLE: Job Definition Schema for Azure Pipelines 2022+\nDESCRIPTION: YAML schema for defining a job in Azure Pipelines 2022 and newer versions. Includes properties for job identification, execution control, resource allocation, and step definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string # Required as first property. ID of the job.\n  displayName: string # Human-readable name for the job.\n  dependsOn: string | [ string ] # Any jobs which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this job.\n  continueOnError: string # Continue running even on failure?\n  timeoutInMinutes: string # Time to wait for this job to complete before the server kills it.\n  cancelTimeoutInMinutes: string # Time to wait for the job to cancel before forcibly terminating it.\n  variables: variables | [ variable ] # Job-specific variables.\n  strategy: strategy # Execution strategy for this job.\n  pool: string | pool # Pool where this job will run.\n  container: string | container # Container resource name.\n  services: # Container resources to run as a service container.\n    string: string # Name/value pairs\n  workspace: # Workspace options on the agent.\n    clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n  uses: # Any resources required by this job that are not already referenced.\n    repositories: [ string ] # Repository references.\n    pools: [ string ] # Pool references.\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  templateContext: # Job related information passed from a pipeline when extending a template.\n```\n\n----------------------------------------\n\nTITLE: Setting Sequential Lock Behavior on Stage Level\nDESCRIPTION: Example of configuring sequential lock behavior at the stage level in an Azure DevOps pipeline. This allows the stage to process one job at a time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: A\n  lockBehavior: sequential\n  jobs:\n  - job: Job\n    steps:\n    - script: Hey!\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Job in Azure Pipelines YAML\nDESCRIPTION: This example demonstrates how to define a basic job in an Azure Pipelines YAML file. It includes setting the job ID, display name, error handling, workspace cleaning, and a simple script step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: MyJob\n  displayName: My First Job\n  continueOnError: true\n  workspace:\n    clean: outputs\n  steps:\n  - script: echo My first job\n```\n\n----------------------------------------\n\nTITLE: Manual Validation Task Example with Timeout\nDESCRIPTION: Example YAML snippet showing the ManualValidation@1 task within a job. The example specifies 'notifyUsers', 'instructions', and 'onTimeout' parameters, with a job timeout of 3 days and a task timeout of 1 day.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/manual-validation-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  jobs:\\n  - job: waitForValidation\\n    displayName: Wait for external validation\\n    pool: server\\n    timeoutInMinutes: 4320 # job times out in 3 days\\n    steps:\\n    - task: ManualValidation@1\\n      timeoutInMinutes: 1440 # task times out in 1 day\\n      inputs:\\n        notifyUsers: |\\n          test@test.com,\\n          example@example.com\\n        instructions: 'Please validate the build configuration and resume'\\n        onTimeout: 'resume'\n```\n\n----------------------------------------\n\nTITLE: Basic Azure DevOps Pipeline Configuration in YAML\nDESCRIPTION: A simple example of an Azure DevOps pipeline that triggers on changes to the main branch, runs on an Ubuntu latest agent, and executes a basic script step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\npool: \n  vmImage: ubuntu-latest\n\nsteps:\n- script: \"Hello world!\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven v4 Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the Maven v4 task in Azure Pipelines. The task allows for building, testing, and deploying Java applications with comprehensive options for JUnit test reporting, code coverage, Java/Maven versions, and code analysis tools.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Maven v4\n# Build, test, and deploy with Apache Maven.\n- task: Maven@4\n  inputs:\n    #azureSubscription: # string. Alias: ConnectedServiceName. Azure Resource Manager connection. \n    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.\n    #goals: 'package' # string. Goal(s). Default: package.\n    #options: # string. Options. \n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\n    testResultsFiles: '**/surefire-reports/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/surefire-reports/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n    #allowBrokenSymlinks: true # boolean. Alias: allowBrokenSymbolicLinks. Optional. Use when publishJUnitResults = true. Allow broken symbolic links. Default: true.\n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class files directories. \n    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source files directories. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n    #codeCoverageRestoreOriginalPomXml: false # boolean. Alias: restoreOriginalPomXml. Optional. Use when codeCoverageTool != None. Restore original pom.xml after task execution. Default: false.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.21' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven version. Default: Default.\n    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven path. \n    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.\n    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.\n    #mavenAuthenticateFeed: false # boolean. Alias: mavenFeedAuthenticate. Authenticate with Artifacts feeds. Default: false.\n    #effectivePomSkip: false # boolean. Alias: skipEffectivePom. Skip generating effective POM while authenticating with Artifacts feeds. Default: false.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud analysis. Default: false.\n    #isJacocoCoverageReportXML: false # boolean. Optional. Use when sqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Use XML Jacoco reports for SonarQube analysis. Default: false.\n    #sqMavenPluginVersionChoice: 'latest' # 'latest' | 'pom'. Required when sqAnalysisEnabled = true. SonarQube scanner for Maven version. Default: latest.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #spotBugsRunAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs analysis. Default: false.\n    #spotBugsVersion: '4.5.3.0' # string. Alias: spotBugsMavenPluginVersion. Optional. Use when spotBugsAnalysisEnabled = true. Version number. Default: 4.5.3.0.\n    #spotBugsGoal: 'spotbugs' # 'spotbugs' | 'check'. Optional. Use when spotBugsAnalysisEnabled = true. The goal for the spotbugs plugin. Default: spotbugs.\n    #failWhenBugsFound: true # boolean. Alias: spotBugsFailWhenBugsFound | sbFailWhenBugsFound. Optional. Use when spotBugsAnalysisEnabled = true && spotBugsGoal = check. Fail when bugs are found with spotbugs:check. Default: true.\n```\n\n----------------------------------------\n\nTITLE: RunOnce Deployment Strategy With Kubernetes Task\nDESCRIPTION: Advanced example showing a deployment job that targets a specific resource (Kubernetes namespace) within an environment. The steps automatically inherit the connection details of the resource.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-run-once.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment: DeployWeb\n  displayName: deploy Web App\n  pool:\n    vmImage: ubuntu-latest\n  # Records deployment against bookings resource - Kubernetes namespace.\n  environment: 'smarthotel-dev.bookings'\n  strategy: \n    runOnce:\n      deploy:\n        steps:\n          # No need to explicitly pass the connection details.\n        - task: KubernetesManifest@0\n          displayName: Deploy to Kubernetes cluster\n          inputs:\n            action: deploy\n            namespace: $(k8sNamespace)\n            manifests: |\n              $(System.ArtifactsDirectory)/manifests/*\n            imagePullSecrets: |\n              $(imagePullSecret)\n            containers: |\n              $(containerRegistry)/$(imageRepository):$(tag)\n```\n\n----------------------------------------\n\nTITLE: Basic Jobs Definition Syntax in Azure DevOps Pipelines YAML\nDESCRIPTION: The basic syntax for defining jobs in an Azure DevOps pipeline, showing that jobs can be a job, deployment, or template type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs: [ job | deployment | template ] # Specifies the jobs that make up the work of a stage.\n```\n\n----------------------------------------\n\nTITLE: Gradle Build Configuration (Azure Pipelines 2020)\nDESCRIPTION: This YAML snippet configures the Gradle task (Gradle@2) for building a Java project using a Gradle wrapper script within the Azure Pipelines 2020 scope.  It defines the essential inputs for the task, such as the Gradle wrapper file path and the tasks to be executed. The snippet further outlines the options for publishing JUnit test results and generating code coverage reports while taking into account adjustments related to the `codeCoverageTool` parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Gradle@2\n  inputs:\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\n    #workingDirectory: # string. Alias: cwd. Working directory. \n    #options: # string. Options. \n    tasks: 'build' # string. Required. Tasks. Default: build.\n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\n    #codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool = false. Class files directories. Default: build/classes/main/.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Resources in Azure DevOps 2020.1 and later\nDESCRIPTION: YAML schema for defining pipeline resources in Azure DevOps 2020.1 and later. This schema supports pipeline triggers with stages and tags configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npipelines:\n- pipeline: string # Required as first property. ID of the pipeline resource.\n  project: string # Project for the source; defaults to current project.\n  source: string # Name of the pipeline that produces the artifact.\n  version: string # The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.\n  branch: string # Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.\n  tags: [ string ] # List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.\n  trigger:  # Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.\n    enabled: boolean # Whether the trigger is enabled; defaults to true.\n    branches: branches # Branches to include or exclude for triggering a run.\n    stages: [ string ] # List of stages that when matched will trigger the pipeline.\n    tags: [ string ] # List of tags that when matched will trigger the pipeline.\n```\n\n----------------------------------------\n\nTITLE: Configuring App Center distribute task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the AppCenterDistribute@1 task in an Azure Pipelines workflow. It includes all available input parameters with their descriptions and default values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# App Center distribute v1\n# Distribute app builds to testers and users via Visual Studio App Center.\n- task: AppCenterDistribute@1\n  inputs:\n    serverEndpoint: # string. Required. App Center service connection. \n    appSlug: # string. Required. App slug. \n    appFile: # string. Alias: app. Required. Binary file path. \n    releaseNotesOption: 'input' # 'input' | 'file'. Alias: releaseNotesSelection. Required. Create release notes. Default: input.\n    releaseNotesInput: # string. Required when releaseNotesSelection = input. Release notes. \n    #releaseNotesFile: # string. Required when releaseNotesSelection = file. Release notes file. \n    #isMandatory: false # boolean. Require users to update to this release. Default: false.\n    #distributionGroupId: # string. Alias: destinationId. Destination ID. \n  # Symbols\n    #symbolsOption: 'Apple' # 'Apple'. Alias: symbolsType. Symbols type. Default: Apple.\n    #symbolsPath: # string. Optional. Use when symbolsType == AndroidNative || symbolsType = Windows. Symbols path. \n    #symbolsPdbFiles: '**/*.pdb' # string. Alias: pdbPath. Optional. Use when symbolsType = UWP. Symbols path (*.pdb). Default: **/*.pdb.\n    #symbolsDsymFiles: # string. Alias: dsymPath. Optional. Use when symbolsType = Apple. dSYM path. \n    #symbolsMappingTxtFile: # string. Alias: mappingTxtPath. Optional. Use when symbolsType = AndroidJava. Mapping file. \n    #symbolsIncludeParentDirectory: # boolean. Alias: packParentFolder. Include all items in parent folder.\n```\n\n----------------------------------------\n\nTITLE: Basic Checkout Options in Azure Pipelines YAML\nDESCRIPTION: Demonstrates three basic checkout options in Azure DevOps pipelines: checking out the current repository, preventing checkout, and checking out a different repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# Checkout the current repository\nsteps:\n- checkout: self\n\n# Prevent checking out any source code\nsteps:\n- checkout: none\n\n# Checkout a different repository\nsteps:\n- checkout: my-other-repo\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Job in Azure DevOps Pipeline\nDESCRIPTION: Example showing how to configure a basic deployment job in Azure DevOps YAML pipeline. The example demonstrates setting up a deployment to a web app with environment configuration, deployment strategy, and basic deployment steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  # track deployments on the environment\n- deployment: DeployWeb\n  displayName: deploy Web App\n  pool:\n    vmImage: ubuntu-latest\n  # creates an environment if it doesn't exist\n  environment: 'smarthotel-dev'\n  strategy:\n    # default deployment strategy, more coming...\n    runOnce:\n      deploy:\n        steps:\n        - script: echo my first deployment\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines 2022 Task Step Definition\nDESCRIPTION: YAML schema for task steps in Azure Pipelines 2022 and newer versions. Defines the structure for configuring task execution including inputs, conditions, timeout, and retry settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-task.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: string # Required as first property. Name of the task to run.\n  inputs: # Inputs for the task.\n    string: string # Name/value pairs\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Configuring KubernetesManifest@0 Task in Azure DevOps YAML Pipeline\nDESCRIPTION: YAML configuration for the KubernetesManifest@0 task in Azure DevOps pipelines. This shows all available parameters for deploying to Kubernetes clusters or baking manifest files with Helm charts. The task supports multiple actions including deploy, bake, createSecret, delete, patch, promote, scale, and reject.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Deploy to Kubernetes v0\n# Use Kubernetes manifest files to deploy to clusters or even bake the manifest files to be used for deployments using Helm charts.\n- task: KubernetesManifest@0\n  inputs:\n    #action: 'deploy' # 'bake' | 'createSecret' | 'delete' | 'deploy' | 'patch' | 'promote' | 'scale' | 'reject'. Action. Default: deploy.\n    #kubernetesServiceConnection: # string. Required when action != bake. Kubernetes service connection. \n    #namespace: # string. Namespace. \n    #strategy: 'none' # 'canary' | 'none'. Optional. Use when action = deploy || action = promote || action = reject. Strategy. Default: none.\n    #trafficSplitMethod: 'pod' # 'pod' | 'smi'. Optional. Use when strategy = canary. Traffic split method. Default: pod.\n    #percentage: '0' # string. Required when strategy = Canary && action = deploy. Percentage. Default: 0.\n    #baselineAndCanaryReplicas: '1' # string. Required when strategy = Canary && action = deploy && trafficSplitMethod = SMI. Baseline and canary replicas. Default: 1.\n    #manifests: # string. Required when action = deploy || action = promote || action = reject. Manifests. \n    #containers: # string. Optional. Use when action = deploy || action = promote || action = bake. Containers. \n    #imagePullSecrets: # string. Optional. Use when action = deploy || action = promote. ImagePullSecrets. \n    #renderType: 'helm' # 'helm' | 'kompose' | 'kustomize'. Optional. Use when action = bake. Render Engine. Default: helm.\n    #dockerComposeFile: # string. Required when action = bake && renderType = kompose. Path to docker compose file. \n    #helmChart: # string. Required when action = bake && renderType = helm. Helm Chart. \n    #releaseName: # string. Optional. Use when action = bake && renderType = helm. Helm Release Name. \n    #overrideFiles: # string. Optional. Use when action = bake && renderType = helm. Override Files. \n    #overrides: # string. Optional. Use when action = bake && renderType = helm. Overrides. \n    #kustomizationPath: # string. Optional. Use when action = bake && renderType = kustomize. Kustomization Path. \n    #resourceToPatch: 'file' # 'file' | 'name'. Required when action = patch. Resource to patch. Default: file.\n    #resourceFileToPatch: # string. Required when action = patch && resourceToPatch = file. File path. \n    #kind: # 'deployment' | 'replicaset' | 'statefulset'. Required when action = scale || resourceToPatch = name. Kind. \n    #name: # string. Required when action = scale || resourceToPatch = name. Name. \n    #replicas: # string. Required when action = scale. Replica count. \n    #mergeStrategy: 'strategic' # 'json' | 'merge' | 'strategic'. Required when action = patch. Merge Strategy. Default: strategic.\n    #arguments: # string. Optional. Use when action = delete. Arguments. \n    #patch: # string. Required when action = patch. Patch. \n    #secretType: 'dockerRegistry' # 'dockerRegistry' | 'generic'. Required when action = createSecret. Type of secret. Default: dockerRegistry.\n    #secretName: # string. Optional. Use when action = createSecret. Secret name. \n    #secretArguments: # string. Optional. Use when action = createSecret && secretType = generic. Arguments. \n    #dockerRegistryEndpoint: # string. Optional. Use when action = createSecret && secretType = dockerRegistry. Docker registry service connection. \n    #rolloutStatusTimeout: '0' # string. Optional. Use when action = deploy || action = patch || action = scale || action = promote. Timeout for rollout status. Default: 0.\n```\n\n----------------------------------------\n\nTITLE: Use Python Version in Azure Pipelines (>=azure-pipelines-2022.1)\nDESCRIPTION: This snippet demonstrates how to use the UsePythonVersion@0 task in Azure Pipelines to specify the Python version. It includes optional inputs for disabling downloads from the GitHub registry, allowing unstable releases, and specifying a GitHub token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/use-python-version-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Use Python version v0\n# Use the specified version of Python from the tool cache, optionally adding it to the PATH.\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.\n    #disableDownloadFromRegistry: false # boolean. Disable downloading releases from the GitHub registry. Default: false.\n    #allowUnstable: false # boolean. Optional. Use when disableDownloadFromRegistry = false. Allow downloading unstable releases. Default: false.\n    #githubToken: # string. Optional. Use when disableDownloadFromRegistry = false. GitHub token for GitHub Actions python registry. \n    #addToPath: true # boolean. Add to PATH. Default: true.\n  # Advanced\n    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Gradle v4 Task Definition in YAML\nDESCRIPTION: This YAML snippet defines a Gradle v4 task for Azure Pipelines. It specifies the Gradle wrapper file, tasks to execute, JUnit test result publishing settings, Java home configuration, and options for code analysis with tools like SonarQube, Checkstyle, FindBugs, PMD and SpotBugs. It also includes Gradle-specific options like memory allocation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n# Gradle v4\n# Build using a Gradle wrapper script.\n- task: Gradle@4\n  inputs:\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\n    #workingDirectory: # string. Alias: cwd. Working directory. \n    #options: # string. Options. \n    tasks: 'build' # string. Required. Tasks. Default: build.\n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.\n    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.\n    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Bash Task v3 in Azure Pipelines (2022+)\nDESCRIPTION: YAML configuration for Bash@3 task showing all available parameters for Azure Pipelines 2022 and later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/bash-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Bash v3\n# Run a Bash script on macOS, Linux, or Windows.\n- task: Bash@3\n  inputs:\n    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.\n    filePath: # string. Required when targetType = filePath. Script Path. \n    #arguments: # string. Optional. Use when targetType = filePath. Arguments. \n    #script: # string. Required when targetType = inline. Script. \n  # Advanced\n    #workingDirectory: # string. Working Directory. \n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #bashEnvValue: # string. Set value for BASH_ENV environment variable.\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying a Container App with Pre-defined Image in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to use the AzureContainerApps@1 task to build and deploy a Container App using a pre-defined image in ACR. The task creates a new Container App with a dynamically generated name in a new resource group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    imageToBuild: 'mytestacr.azurecr.io/app:latest'\n```\n\n----------------------------------------\n\nTITLE: Using Parameters to Configure Build Environment\nDESCRIPTION: Example of using parameters to select a VM image for a build job. Defines a parameter with allowed values that can be selected when running the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/parameters-parameter.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\nparameters:\n- name: image\n  displayName: Pool Image\n  type: string\n  default: ubuntu-latest\n  values:\n    - windows-latest\n    - ubuntu-latest\n    - macOS-latest\n\ntrigger: none\n\njobs:\n  - job: build\n    displayName: build\n    pool: \n      vmImage: ${{ parameters.image }}\n    steps:\n      - script: echo The image parameter is ${{ parameters.image }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Key Vault Task in YAML\nDESCRIPTION: YAML configuration for the AzureKeyVault@2 task to download secrets from Azure Key Vault. Specifies required inputs like Azure subscription, Key Vault name, and secrets filter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-key-vault-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Key Vault v2\n# Download Azure Key Vault secrets.\n- task: AzureKeyVault@2\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    KeyVaultName: # string. Required. Key vault. \n    SecretsFilter: '*' # string. Required. Secrets filter. Default: *.\n    #RunAsPreJob: false # boolean. Make secrets available to whole job. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CLI Task Inputs in YAML\nDESCRIPTION: Example YAML configuration for the Azure CLI task inputs, showing various options for script type, location, and execution settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: 'myAzureServiceConnection'\n    scriptType: 'ps'\n    scriptLocation: 'scriptPath'\n    scriptPath: './deploy-script.ps1'\n    arguments: '-ResourceGroupName \"myRG\" -Location \"eastus\"'\n    powerShellErrorActionPreference: 'stop'\n    addSpnToEnvironment: true\n    useGlobalConfig: false\n    workingDirectory: '$(System.DefaultWorkingDirectory)'\n    failOnStandardError: true\n```\n\n----------------------------------------\n\nTITLE: Error Action Preference Example\nDESCRIPTION: Example showing how to configure error action preference in a PowerShell step to continue execution even after an error occurs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-powershell.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: |\n    Write-Error 'Uh oh, an error occurred'\n    Write-Host 'Trying again...'\n  displayName: Error action preference\n  errorActionPreference: continue\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Service Management Task in YAML\nDESCRIPTION: YAML syntax for the AzureAppServiceManage@0 task, which enables starting, stopping, restarting, swapping slots, deleting slots, installing extensions, and enabling monitoring for Azure App Services. It includes required and optional parameters for various actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-manage-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Service manage v0\n# Start, stop, restart, slot swap, slot delete, install site extensions or enable continuous monitoring for an Azure App Service.\n- task: AzureAppServiceManage@0\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    #Action: 'Swap Slots' # 'Swap Slots' | 'Start Azure App Service' | 'Stop Azure App Service' | 'Restart Azure App Service' | 'Start Swap With Preview' | 'Complete Swap' | 'Cancel Swap' | 'Delete Slot' | 'Install Extensions' | 'Enable Continuous Monitoring' | 'Start all continuous webjobs' | 'Stop all continuous webjobs'. Action. Default: Swap Slots.\n    WebAppName: # string. Required. App Service name. \n    #SpecifySlotOrASE: false # boolean. Alias: SpecifySlot. Optional. Use when Action != Swap Slots && Action != Delete Slot && Action != Start Swap With Preview && Action != Complete Swap && Action != Cancel Swap. Specify Slot or App Service Environment. Default: false.\n    #ResourceGroupName: # string. Required when Action = Swap Slots || Action = Delete Slot || SpecifySlot = true || Action = Start Swap With Preview || Action = Complete Swap || Action = Cancel Swap. Resource group. \n    #SourceSlot: # string. Required when Action = Swap Slots || Action = Start Swap With Preview  || Action = Complete Swap. Source Slot. \n    #SwapWithProduction: true # boolean. Optional. Use when Action = Swap Slots || Action = Start Swap With Preview  || Action = Complete Swap. Swap with Production. Default: true.\n    #TargetSlot: # string. Required when SwapWithProduction = false. Target Slot. \n    #PreserveVnet: false # boolean. Optional. Use when Action = Swap Slots || Action = Start Swap With Preview || Action = Complete Swap. Preserve Vnet. Default: false.\n    #Slot: 'production' # string. Required when Action = Delete Slot || Action = Cancel Swap || SpecifySlot = true. Slot. Default: production.\n    #ExtensionsList: # string. Required when Action = Install Extensions. Install Extensions. \n    #OutputVariable: # string. Optional. Use when Action = Install Extensions. Output variable. \n    #AppInsightsResourceGroupName: # string. Required when Action == Enable Continuous Monitoring. Resource Group name for Application Insights. \n    #ApplicationInsightsResourceName: # string. Required when Action == Enable Continuous Monitoring. Application Insights resource name. \n  # Advanced Settings\n    #ApplicationInsightsWebTestName: # string. Optional. Use when Action == Enable Continuous Monitoring. Application Insights web test name.\n```\n\n----------------------------------------\n\nTITLE: Publishing .NET Core projects to a specified folder in YAML\nDESCRIPTION: This example demonstrates how to publish all C# projects to a specified output folder, zip the published files, and modify the output path structure. It explicitly disables the default behavior of only publishing web projects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\n# Publish projects to specified folder.\n- task: DotNetCoreCLI@2\n  displayName: 'dotnet publish'\n  inputs:\n    command: 'publish'\n    publishWebProjects: false\n    projects: '**/*.csproj'\n    arguments: '-o $(Build.ArtifactStagingDirectory)/Output'\n    zipAfterPublish: true\n    modifyOutputPath: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkout Step in Azure Pipelines (Latest)\nDESCRIPTION: YAML schema for configuring repository checkout in the latest version of Azure Pipelines. Includes advanced features like sparse checkout and workspace repo settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: string # Required as first property. Configures checkout for the specified repository.\n  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.\n  fetchDepth: string # Depth of Git graph to fetch.\n  fetchFilter: string # Filter Git history.\n  fetchTags: string # Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.\n  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.\n  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.\n  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.\n  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).\n  sparseCheckoutDirectories: string # Directories for sparse checkout in cone mode and prioritized over sparseCheckoutPatterns if both properties are provided.\n  sparseCheckoutPatterns: string # Patterns for sparse checkout in non-cone mode that are ignored if sparseCheckoutDirectories is provided.\n  workspaceRepo: true | false # When true, use the repository root directory as the default working directory for the pipeline. The default is false.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Implementing Canary Deployment for Kubernetes in Azure Pipelines\nDESCRIPTION: A complete example showing a canary deployment job for a Kubernetes application. It demonstrates incremental deployment with 10% and 20% rollout phases, health monitoring, and success/failure handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-canary.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs: \n- deployment: \n  environment: smarthotel-dev.bookings\n  pool: \n    name: smarthotel-devPool\n  strategy:                  \n    canary:      \n      increments: [10,20]  \n      preDeploy:                                     \n        steps:           \n        - script: initialize, cleanup....   \n      deploy:             \n        steps: \n        - script: echo deploy updates... \n        - task: KubernetesManifest@0 \n          inputs: \n            action: $(strategy.action)       \n            namespace: 'default' \n            strategy: $(strategy.name) \n            percentage: $(strategy.increment) \n            manifests: 'manifest.yml' \n      postRouteTraffic: \n        pool: server \n        steps:           \n        - script: echo monitor application health...   \n      on: \n        failure: \n          steps: \n          - script: echo clean-up, rollback...   \n        success: \n          steps: \n          - script: echo checks passed, notify...\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Build Pipeline with Gradle and App Center\nDESCRIPTION: Complete YAML pipeline configuration that builds an Android project using Gradle, runs tests through App Center CLI, and handles app distribution. Includes pool configuration, Gradle build setup, artifact management, and App Center integration steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'macOS-latest'\nsteps:\n\n- script: sudo npm install -g appcenter-cli\n- script: appcenter login --token {YOUR_TOKEN}\n\n- task: Gradle@2\n  inputs:\n    workingDirectory: ''\n    gradleWrapperFile: 'gradlew'\n    gradleOptions: '-Xmx3072m'\n    publishJUnitResults: false\n    testResultsFiles: '**/TEST-*.xml'\n    tasks: build\n\n- task: CopyFiles@2\n  inputs:\n    contents: '**/*.apk'\n    targetFolder: '$(build.artifactStagingDirectory)'\n\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathToPublish: '$(build.artifactStagingDirectory)'\n    artifactName: 'outputs'\n    artifactType: 'container'\n\n# Run tests using the App Center CLI\n- script: appcenter test run espresso --app \"{APP_CENTER_SLUG}\" --devices \"{DEVICE}\" --app-path {APP_FILE} --test-series \"master\" --locale \"en_US\" --build-dir {PAT_ESPRESSO} --debug\n\n# Distribute the app\n- task: AppCenterDistribute@3\n  inputs:\n    serverEndpoint: 'AppCenter'\n    appSlug: '$(APP_CENTER_SLUG)'\n    appFile: '$(APP_FILE)' # Relative path from the repo root to the APK or IPA file you want to publish\n    symbolsOption: 'Android'\n    releaseNotesOption: 'input'\n    releaseNotesInput: 'Here are the release notes for this version.'\n    destinationType: 'groups'\n```\n\n----------------------------------------\n\nTITLE: Configuring .NET CLI Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet configures a task for executing .NET CLI commands within Azure Pipelines. It requires the DotNetCoreCLI@2 plugin and supports various commands such as build, publish, and test. Users can specify additional project parameters, including paths, arguments, and feed details for publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.\n    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.\n    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s) or solution(s).\n    #custom: # string. Required when command = custom. Custom command.\n    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments.\n    #restoreArguments: # string. Optional. Use when command = restore. Arguments.\n    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.\n    #testRunTitle: # string. Optional. Use when command = test. Test run title.\n    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.\n    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.\n    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.\n    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.\n    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed.\n    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server.\n    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.\n    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).\n    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).\n    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.\n    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.\n    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.\n  # Feeds and authentication\n    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.\n    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed.\n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config.\n    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection.\n  # Advanced\n    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.\n    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory.\n    #verbosityRestore: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Detailed.\n  # Advanced\n    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.\n  # Pack options\n    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.\n    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable.\n    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.\n    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.\n    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.\n  # Advanced\n    #buildProperties: # string. Optional. Use when command = pack. Additional build properties.\n    #verbosityPack: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Detailed.\n  # Advanced\n    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.\n```\n\n----------------------------------------\n\nTITLE: Azure App Service Deploy v5 Task Basic Syntax\nDESCRIPTION: Basic YAML syntax for the Azure App Service deployment task version 5 that can be used in Azure Pipelines to deploy web, mobile, or API applications to Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Service deploy v5\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom .NET Restore and Build with NuGet Authenticate\nDESCRIPTION: This YAML snippet demonstrates how to use the NuGetAuthenticate task to authenticate with Azure DevOps NuGet feeds before restoring and building a .NET Core project. This setup avoids conflicts with Package Source Mapping by performing authentication separately from the restore and build commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n# Authenticate Azure DevOps NuGet feed\n- task: NuGetAuthenticate@1\n  displayName: 'Authenticate Azure DevOps NuGet feed'\n\n# Restore project\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'custom'\n    custom: 'restore'\n\n# Build project\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'custom'\n    custom: 'build'\n    arguments: '--no-restore'\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Reusable Job Template in Azure Pipelines\nDESCRIPTION: Demonstrates a complete example of defining a reusable job template with parameters for name, pool, and conditional signing step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-template.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: jobs/build.yml\n\nparameters:\n  name: ''\n  pool: ''\n  sign: false\n\njobs:\n- job: ${{ parameters.name }}\n  pool: ${{ parameters.pool }}\n  steps:\n  - script: npm install\n  - script: npm test\n  - ${{ if eq(parameters.sign, 'true') }}:\n    - script: sign\n```\n\n----------------------------------------\n\nTITLE: Passing Parameters to Pipeline Templates\nDESCRIPTION: Example showing how to define a template with parameters and then use that template in a pipeline while passing specific parameter values. This demonstrates parameter passing between template files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/parameters-parameter.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# File: template.yml \nparameters:\n  - name: environment\n    type: string\n    default: 'production'\n\njobs:\n- job: Deploy\n  displayName: 'Deploy to ${{ parameters.environment }}'\n  pool:\n    vmImage: 'ubuntu-latest'\n  steps:\n  - script: echo \"Deploying to ${{ parameters.environment }}\"\n    displayName: 'Deploy Step'\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\njobs:\n- template: template.yml\n  parameters:\n    environment: 'staging'\n```\n\n----------------------------------------\n\nTITLE: Baking Kubernetes Manifests with Kustomize in YAML\nDESCRIPTION: This snippet demonstrates how to bake Kubernetes manifests using Kustomize and then deploy them. It uses the Kubernetes Manifest task for both baking and deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from kustomization path\n  inputs:\n    action: bake\n    renderType: kustomize\n    kustomizationPath: folderContainingKustomizationFile\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n```\n\n----------------------------------------\n\nTITLE: Azure Functions Deploy YAML Configuration (Azure Pipelines Latest)\nDESCRIPTION: YAML configuration for deploying applications to Azure Functions in the latest version of Azure Pipelines. Includes settings for deployment method, runtime stack, and slot deployment options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Functions Deploy v2\n# Update a function app with .NET, Python, JavaScript, PowerShell, Java based web applications.\n- task: AzureFunctionApp@2\n  inputs:\n    connectedServiceNameARM: # string. Alias: azureSubscription. Required. Azure Resource Manager connection. \n    appType: # 'functionApp' | 'functionAppLinux'. Required. App type. \n    #isFlexConsumption: false # boolean. Is Function App on Flex Consumption Plan. Default: false.\n    appName: # string. Required. Azure Functions App name. \n    #deployToSlotOrASE: false # boolean. Optional. Use when appType != \"\" && isFlexConsumption = false. Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #runtimeStack: # 'DOTNET|6.0' | 'DOTNET-ISOLATED|6.0' | 'DOTNET-ISOLATED|7.0' | 'DOTNET-ISOLATED|8.0' | 'JAVA|8' | 'JAVA|11' | 'JAVA|17' | 'JAVA|21' | 'NODE|14' | 'NODE|16' | 'NODE|18' | 'NODE|20' | 'PYTHON|3.8' | 'PYTHON|3.9' | 'PYTHON|3.10' | 'PYTHON|3.11'. Optional. Use when appType = functionAppLinux && isFlexConsumption = false. Runtime stack. \n  # Application and Configuration Settings\n    #appSettings: # string. App settings. \n  # Additional Deployment Options\n    #deploymentMethod: 'auto' # 'auto' | 'zipDeploy' | 'runFromPackage'. Required when appType != \"\" && isFlexConsumption = false && package NotEndsWith .war && Package NotEndsWith .jar. Deployment method. Default: auto.\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Task in Azure Pipelines YAML\nDESCRIPTION: Example YAML configuration showing how to use PowerShell and PowerShell Core (pwsh) tasks in Azure Pipelines. This snippet demonstrates the shortcut syntax for both Windows PowerShell and cross-platform PowerShell Core execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: # Run a script in Windows PowerShell on Windows, and pwsh on Linux and macOS.\n- pwsh: # Run a script in PowerShell Core on Windows, macOS, and Linux.\n```\n\n----------------------------------------\n\nTITLE: Restoring NuGet packages with .NET Core CLI in YAML\nDESCRIPTION: This example shows how to restore NuGet packages for all C# projects in the repository. It uses a specific Azure Artifacts feed while also including packages from NuGet.org as a fallback source.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_17\n\nLANGUAGE: YAML\nCODE:\n```\n#Restore packages with the .NET Core CLI task\n- task: DotNetCoreCLI@2\n  displayName: 'dotnet restore'\n  inputs:\n    command: 'restore'\n    feedsToUse: 'select'\n    feedRestore: 'projectName/feedName'\n    projects: '**/*.csproj'\n    includeNuGetOrg: true\n```\n\n----------------------------------------\n\nTITLE: Multiple Step Types Example in Azure Pipelines\nDESCRIPTION: Example showing multiple types of steps in an Azure DevOps Pipeline, including a generic script, a bash script, and a PowerShell Core script. Each script type has different execution contexts across various operating systems.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo This runs in the default shell on any machine\n- bash: |\n    echo This multiline script always runs in Bash.\n    echo Even on Windows machines!\n- pwsh: |\n    Write-Host \"This multiline script always runs in PowerShell Core.\"\n    Write-Host \"Even on non-Windows machines!\"\n```\n\n----------------------------------------\n\nTITLE: Using Job Template Across Multiple Platforms in Azure Pipelines\nDESCRIPTION: Shows how to use a single job template to define builds for macOS, Linux, and Windows platforms with different parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-template.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\njobs:\n- template: jobs/build.yml  # Template reference\n  parameters:\n    name: macOS\n    pool:\n      vmImage: macOS-latest\n\n- template: jobs/build.yml  # Template reference\n  parameters:\n    name: Linux\n    pool:\n      vmImage: ubuntu-latest\n\n- template: jobs/build.yml  # Template reference\n  parameters:\n    name: Windows\n    pool:\n      vmImage: windows-latest\n    sign: true  # Extra step on Windows only\n```\n\n----------------------------------------\n\nTITLE: Pushing Module Images in Azure IoT Edge\nDESCRIPTION: This example illustrates how to push module images to an Azure Container Registry. It demonstrates the necessary inputs including container registry settings and an example of using variables in the configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n\"variables:\\n  azureSubscriptionEndpoint: Contoso\\n  azureContainerRegistry: contoso.azurecr.io\\n\\nsteps:\\n- task: AzureIoTEdge@2\\n  displayName: AzureIoTEdge - Push module images\\n  inputs:\\n    action: Push module images\\n    containerregistrytype: Azure Container Registry\\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\\n    azureContainerRegistry: {\\\"loginServer\\\":\\\"$(azureContainerRegistry)\\\"}\\n    templateFilePath: deployment.template.json\\n    defaultPlatform: amd64\\n    fillRegistryCredential: true\"\n```\n\n----------------------------------------\n\nTITLE: Defining Script Step in Azure Pipelines 2022+\nDESCRIPTION: YAML syntax for defining a script step in Azure Pipelines 2022 and later versions. Includes all available properties such as failOnStderr, workingDirectory, and retryCountOnTaskFailure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-script.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: string # Required as first property. An inline script.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Defining Variables at Different Scopes in Azure Pipelines YAML\nDESCRIPTION: Shows how to define variables at pipeline, stage, and job levels in Azure Pipelines YAML. This example illustrates the hierarchical nature of variable scopes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:      # pipeline-level\n  MY_VAR: 'my value'\n  ANOTHER_VAR: 'another value'\n\nstages:\n- stage: Build\n  variables:    # stage-level\n    STAGE_VAR: 'that happened'\n\n  jobs:\n  - job: FirstJob\n    variables:  # job-level\n      JOB_VAR: 'a job var'\n    steps:\n    - script: echo $(MY_VAR) $(STAGE_VAR) $(JOB_VAR)\n```\n\n----------------------------------------\n\nTITLE: Using Stage Template in Main Azure Pipelines YAML\nDESCRIPTION: Example of using a stage template in the main Azure Pipelines YAML file. It demonstrates referencing the template twice with different parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-template.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\nstages:\n- template: stages/test.yml  # Template reference\n  parameters:\n    name: Mini\n    testFile: tests/miniSuite.js\n\n- template: stages/test.yml  # Template reference\n  parameters:\n    name: Full\n    testFile: tests/fullSuite.js\n```\n\n----------------------------------------\n\nTITLE: Defining Canary Deployment Strategy Syntax in Azure Pipelines YAML\nDESCRIPTION: YAML schema for the canary deployment strategy configuration, showing all available properties including increments and lifecycle hooks (preDeploy, deploy, routeTraffic, postRouteTraffic, and success/failure handlers).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-canary.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncanary:\n  increments: [ string ] # Maximum batch size for deployment.\n  preDeploy: # Pre deploy hook for canary deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where pre deploy steps will run.\n  deploy: # Deploy hook for canary deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where deploy steps will run.\n  routeTraffic: # Route traffic hook for canary deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where route traffic steps will run.\n  postRouteTraffic: # Post route traffic hook for canary deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where post route traffic steps will run.\n  on: # On success or failure hook for canary deployment strategy.\n    failure: # Runs on failure of any step.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where post on failure steps will run.\n    success: # Runs on success of all of the steps.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Spring Apps Deployment Task in YAML\nDESCRIPTION: YAML configuration for the AzureSpringCloud@0 task to deploy and manage applications on Azure Spring Apps. Includes options for different actions, deployment types, and application settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Spring Apps v0\n# Deploy applications to Azure Spring Apps and manage deployments.\n- task: AzureSpringCloud@0\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    Action: 'Deploy' # 'Deploy' | 'Set Production' | 'Delete Staging Deployment'. Required. Action. Default: Deploy.\n    AzureSpringCloud: # string. Required. Azure Spring Apps Name. \n    AppName: # string. Required. App. \n    #DeploymentType: 'Artifacts' # 'Artifacts' | 'CustomContainer'. Optional. Use when Action = Deploy. Deployment Type. Default: Artifacts.\n    #UseStagingDeployment: true # boolean. Optional. Use when Action = Deploy || Action = Set Production. Use Staging Deployment. Default: true.\n    #CreateNewDeployment: false # boolean. Optional. Use when Action = Deploy && UseStagingDeployment = false. Create a new staging deployment if one does not exist. Default: false.\n    #DeploymentName: # string. Optional. Use when UseStagingDeployment = false && Action != Delete Staging Deployment. Deployment. \n    #Package: '$(System.DefaultWorkingDirectory)/**/*.jar' # string. Optional. Use when Action = Deploy && DeploymentType = Artifacts. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.jar.\n    #RegistryServer: 'docker.io' # string. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Registry Server. Default: docker.io.\n    #RegistryUsername: # string. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Registry Username. \n    #RegistryPassword: # string. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Registry Password. \n    #ImageName: 'hello-world:v1' # string. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Image Name and Tag. Default: hello-world:v1.\n    #ImageCommand: # string. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Image Command. \n    #ImageArgs: # string. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Image Arguments. \n    #ImageLanguageFramework: # 'springboot'. Optional. Use when Action = Deploy && DeploymentType = CustomContainer. Language Framework. \n  # Application and Configuration Settings\n    #Builder: # string. Optional. Use when Action = Deploy && DeploymentType = Artifacts. Builder. \n    #EnvironmentVariables: # string. Optional. Use when Action = Deploy. Environment Variables. \n    #JvmOptions: # string. Optional. Use when Action = Deploy && DeploymentType = Artifacts. JVM Options. \n    #RuntimeVersion: 'Java_11' # 'Java_8' | 'Java_11' | 'Java_17' | 'Java_21' | 'NetCore_31'. Optional. Use when Action = Deploy && DeploymentType = Artifacts. Runtime Version. Default: Java_11.\n    #DotNetCoreMainEntryPath: # string. Optional. Use when RuntimeVersion = NetCore_31. Main Entry Path. \n    #Version: # string. Optional. Use when Action = Deploy. Version.\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Pipeline Resources with Triggers in Azure DevOps\nDESCRIPTION: Example showing how to configure multiple pipeline resources with triggers in an Azure DevOps YAML pipeline. This includes referencing pipelines from different projects and accessing pipeline variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n pipelines:\n   - pipeline: source-pipeline\n     source: PipelineTriggerSource\n     project: FabrikamFiber\n     trigger: true\n   - pipeline: other-project-pipeline\n     source: PipelineTriggerFromOtherProject\n     project: FabrikamRepo\n     trigger: true\n\ntrigger: none # Only trigger with pipeline resource trigger\n\npool:\n  vmImage: ubuntu-latest\n\n- bash: echo $(resources.pipeline.source-pipeline.projectName)\n- bash: printenv | sort\n```\n\n----------------------------------------\n\nTITLE: Configuring MSBuild Task in Azure Pipelines YAML\nDESCRIPTION: Defines an MSBuild task for building .NET solutions with configurable build parameters. Supports specifying solution files, MSBuild version, architecture, and advanced build options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: MSBuild@1\n  inputs:\n    solution: '**/*.sln'\n    #msbuildLocationMethod: 'version'\n    #msbuildVersion: 'latest'\n    #msbuildArchitecture: 'x86'\n    #platform: ''\n    #configuration: ''\n    #msbuildArguments: ''\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Steps in YAML\nDESCRIPTION: This YAML snippet shows the structure for defining steps in an Azure Pipeline. It includes options for strategy, pool, container, services, workspace, and various triggers and resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsteps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # Required. A list of steps to run in this job.\nstrategy: strategy # Execution strategy for this job.\ncontinueOnError: string # Continue running even on failure?\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\ncontainer: string | container # Container resource name.\nservices: # Container resources to run as a service container.\n  string: string # Name/value pairs\nworkspace: # Workspace options on the agent.\n  clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\nname: string # Pipeline run number.\nappendCommitMessageToRunName: boolean # Append the commit message to the build number. The default is true.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\nlockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n```\n\n----------------------------------------\n\nTITLE: Building with Gradle Wrapper Script - Azure Pipelines YAML - Gradle v3\nDESCRIPTION: This snippet defines the configuration for a Gradle task in Azure Pipelines. It specifies necessary parameters such as the Gradle wrapper file, tasks to run, and test result files. The snippet ensures the build process is streamlined through reliable configurations for code coverage and test results publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Gradle@3\n  inputs:\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\n    #workingDirectory: # string. Alias: cwd. Working directory. \n    #options: # string. Options. \ntasks: 'build' # string. Required. Tasks. Default: build.\n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\ntestResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\ncodeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.\n    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.\n    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Gradle@3\n  inputs:\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\n    #workingDirectory: # string. Alias: cwd. Working directory. \n    #options: # string. Options. \ntasks: 'build' # string. Required. Tasks. Default: build.\n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\ntestResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\ncodeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.\n    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.\n    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.\n```\n\n----------------------------------------\n\nTITLE: Pushing Service Images with Docker Compose in Azure DevOps\nDESCRIPTION: YAML configuration for pushing Docker container images to a registry using the DockerCompose@0 task. It uses Azure Container Registry credentials and tags the images with the build ID.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Push services\n  inputs:\n    action: Push services\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    additionalImageTags: $(Build.BuildId)\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Environment in Azure Pipelines (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to use the UseNode@1 task to set up a Node.js environment in an Azure Pipeline. It includes options for specifying the Node.js version, checking for the latest version, and using a 32-bit version on 64-bit agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/use-node-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Use Node.js ecosystem v1\n# Set up a Node.js environment and add it to the PATH, additionally providing proxy support.\n- task: UseNode@1\n  inputs:\n    #version: '10.x' # string. Version. Default: 10.x.\n    #checkLatest: false # boolean. Check for Latest Version. Default: false.\n    #force32bit: false # boolean. Use 32 bit version on x64 agents. Default: false.\n  # advanced\n    #retryCountOnDownloadFails: '5' # string. Set retry count when nodes downloads failed. Default: 5.\n    #delayBetweenRetries: '1000' # string. Set delay between retries. Default: 1000.\n```\n\n----------------------------------------\n\nTITLE: Configuring VSTest Task in Azure Pipelines - YAML\nDESCRIPTION: This snippet configures a VSTest task in Azure Pipelines. It specifies settings for selecting test assemblies and includes logic to exclude certain test files. The configuration is part of a YAML file used in an Azure DevOps pipeline to automate tests using VSTest@3. Dependencies include the VSTest runner, and it is used when 'testSelector' is set to 'testAssemblies'. The expected input is a YAML configuration for VSTest, with the output being an executed test suite with specified inclusions and exclusions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/vstest-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: VSTest@3\n  inputs:\n    testSelector: 'testAssemblies'\n    testAssemblyVer2: |\n      **\\*test*.dll\n      !**\\*TestAdapter.dll\n      !**\\obj\\**\n```\n\n----------------------------------------\n\nTITLE: Build and Deploy Container App with ACR Authentication\nDESCRIPTION: This example shows how to build and deploy a Container App using ACR credentials for authentication. It creates a new Container App with a default name in a new resource group, using an image built from the provided source path and authenticated ACR push.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    acrUsername: $(ACR_USERNAME_SECRET)\n    acrPassword: $(ACR_PASSWORD_SECRET)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure PowerShell Task in YAML Pipeline\nDESCRIPTION: YAML configuration for Azure PowerShell task that specifies how to run PowerShell scripts in Azure environment. Includes options for subscription type, script type, and script parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure PowerShell v1\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@1\n  inputs:\n    #ConnectedServiceNameSelector: 'ConnectedServiceName' # 'ConnectedServiceName' | 'ConnectedServiceNameARM'. Azure Connection Type. Default: ConnectedServiceName.\n    ConnectedServiceName: # string. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Classic Subscription. \n    #ConnectedServiceNameARM: # string. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. Azure Subscription. \n    ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Required. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Script Arguments.\n```\n\n----------------------------------------\n\nTITLE: Full Syntax for Pull Request Triggers in Azure Pipelines YAML\nDESCRIPTION: Demonstrates the complete syntax for configuring pull request triggers, including auto-cancellation, branch filters, and path filters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pr.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  autoCancel: boolean # Whether to cancel running PR builds when a new commit lands in the branch. Default: true.\n  branches: # Branch names to include or exclude for triggering a run.\n    include: [ string ] # List of items to include.\n    exclude: [ string ] # List of items to exclude.\n  paths: # File paths to include or exclude for triggering a run.\n    include: [ string ] # List of items to include.\n    exclude: [ string ] # List of items to exclude.\n  drafts: boolean # Whether to start a run when a draft PR is created. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Copying files to artifacts staging directory and publishing\nDESCRIPTION: Example of using CopyFiles@2 to copy build output to the artifacts staging directory, then using PublishBuildArtifacts@1 to publish the artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CopyFiles@2\n  inputs:\n    contents: '_buildOutput/**'\n    targetFolder: $(Build.ArtifactStagingDirectory)\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathToPublish: $(Build.ArtifactStagingDirectory)\n    artifactName: MyBuildOutputs\n```\n\n----------------------------------------\n\nTITLE: Download an artifact from a specific build run in YAML\nDESCRIPTION: This YAML snippet demonstrates downloading a specific artifact ('WebApp') from a specific build run, placing it in the 'bin' directory.  It configures the buildType to 'specific' and provides values for project, definition, buildVersionToDownload, and pipelineId parameters to pinpoint the exact build run for artifact retrieval.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n\"# Download an artifact named 'WebApp' from a specific build run to 'bin' in $(Build.SourcesDirectory)\\n- task: DownloadPipelineArtifact@2\\n  inputs:\\n    buildType: 'specific'\\n    artifactName: 'WebApp'\\n    targetPath: $(Build.SourcesDirectory)/bin\\n    project: 'FabrikamFiber'\\n    definition: 12\\n    buildVersionToDownload: 'specific'\\n    pipelineId: 40\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Web App Deployment for Latest Azure Pipelines\nDESCRIPTION: YAML configuration for deploying Azure Web Apps in the latest version of Azure Pipelines. Includes comprehensive options for deployment settings, runtime configurations, and application parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Web App v1\n# Deploy an Azure Web App for Linux or Windows.\n- task: AzureWebApp@1\n  inputs:\n    azureSubscription: # string. Required. Azure subscription. \n    appType: # 'webApp' | 'webAppLinux'. Required. App type. \n    appName: # string. Required. App name. \n    #deployToSlotOrASE: false # boolean. Optional. Use when appType != \"\". Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #customDeployFolder: # string. Optional. Use when package EndsWith .war. Custom Deploy Folder. \n    #runtimeStack: # 'DOTNETCORE:9.0' | 'DOTNETCORE:8.0' | 'DOTNETCORE:7.0' | 'DOTNETCORE:6.0' | 'NODE:20-lts' | 'NODE:18-lts' | 'NODE:16-lts' | 'PYTHON:3.12' | 'PYTHON:3.11' | 'PYTHON:3.10' | 'PYTHON:3.9' | 'PYTHON:3.8' | 'PHP:8.3' | 'PHP:8.2' | 'PHP:8.1' | 'PHP:8.0' | 'JAVA:21-java21' | 'JAVA:17-java17' | 'JAVA:11-java11' | 'JAVA:8-jre8' | 'JBOSSEAP:8-java17' | 'JBOSSEAP:8-java11' | 'JBOSSEAP:7-java17' | 'JBOSSEAP:7-java11' | 'JBOSSEAP:7-java8' | 'TOMCAT:10.1-java21' | 'TOMCAT:10.1-java17' | 'TOMCAT:10.1-java11' | 'TOMCAT:10.0-java17' | 'TOMCAT:10.0-java11' | 'TOMCAT:10.0-jre8' | 'TOMCAT:9.0-java21' | 'TOMCAT:9.0-java17' | 'TOMCAT:9.0-java11' | 'TOMCAT:9.0-jre8' | 'TOMCAT:8.5-java11' | 'TOMCAT:8.5-jre8'. Optional. Use when appType = webAppLinux. Runtime stack. \n    #startUpCommand: # string. Optional. Use when appType = webAppLinux. Startup command. \n  # Application and Configuration Settings\n    #customWebConfig: # string. Optional. Use when appType != webAppLinux && package NotEndsWith .war. Generate web.config parameters for Python, Node.js, Go and Java apps. \n    #appSettings: # string. App settings. \n    #configurationStrings: # string. Configuration settings. \n  # Additional Deployment Options\n    #deploymentMethod: 'auto' # 'auto' | 'zipDeploy' | 'runFromPackage'. Required when appType != webAppLinux && appType != \"\" && package NotEndsWith .war && package NotEndsWith .jar. Deployment method. Default: auto.\n```\n\n----------------------------------------\n\nTITLE: Example: Canary Deployment Configuration\nDESCRIPTION: This example demonstrates how to configure a canary deployment strategy with a 25% traffic split. It showcases the use of `replicas`, `strategy`, and `percentage` parameters to create baseline and canary variants of a deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\"replicas: 4\nstrategy: canary\npercentage: 25\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Npm@1 Task in YAML\nDESCRIPTION: The YAML snippet defines how to configure the Npm@1 task in Azure Pipelines for running npm commands such as install, ci, publish, or custom. It includes configurable inputs for specifying the command, working directory, registry settings, and more. The task requires a package.json file in the target directory and optionally supports verbose logging and custom registry/authentication settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# npm v1\n# Install and publish npm packages, or run an npm command.\n- task: Npm@1\n  inputs:\n    command: 'install' # 'ci' | 'install' | 'publish' | 'custom'. Required. Command. Default: install.\n    #workingDir: # string. Working folder that contains package.json. \n    #customCommand: # string. Required when command = custom. Command and arguments. \n  # Advanced\n    #verbose: # boolean. Optional. Use when command = install || command = ci || command = publish. Verbose logging. \n    #publishPackageMetadata: true # boolean. Optional. Use when command = publish && publishRegistry = useFeed. Publish pipeline metadata. Default: true.\n  # Custom registries and authentication\n    #customRegistry: 'useNpmrc' # 'useNpmrc' | 'useFeed'. Optional. Use when command = install || command = ci || command = custom. Registries to use. Default: useNpmrc.\n    #customFeed: # string. Required when (command = install || command = ci || command = custom) && customRegistry = useFeed. Use packages from this Azure Artifacts/TFS registry. \n    #customEndpoint: # string. Optional. Use when (command = install || command = ci || command = custom) && customRegistry = useNpmrc. Credentials for registries outside this organization/collection. \n  # Destination registry and authentication\n    #publishRegistry: 'useExternalRegistry' # 'useExternalRegistry' | 'useFeed'. Optional. Use when command = publish. Registry location. Default: useExternalRegistry.\n    #publishFeed: # string. Required when publishRegistry = useFeed && command = publish. Target registry. \n    #publishEndpoint: # string. Required when publishRegistry = useExternalRegistry && command = publish. External Registry.\n```\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Docker Images to a Specific Registry in YAML\nDESCRIPTION: This example shows how to build and push Docker images to a specific container registry by explicitly specifying the containerRegistry input with the buildAndPush command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: Docker@2\n  displayName: Build and Push\n  inputs:\n    command: buildAndPush\n    containerRegistry: dockerRegistryServiceConnection1\n    repository: contosoRepository\n    tags: |\n      tag1\n      tag2\n```\n\n----------------------------------------\n\nTITLE: Azure App Service Settings Task Configuration\nDESCRIPTION: Base YAML configuration for the AzureAppServiceSettings@1 task showing required and optional parameters for configuring Azure App Service settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-settings-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Service Settings v1\n# Update/Add App settings an Azure Web App for Linux or Windows.\n- task: AzureAppServiceSettings@1\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    appName: # string. Required. App Service name. \n    resourceGroupName: # string. Required. Resource group. \n    #slotName: 'production' # string. Slot. Default: production.\n  # Application and Configuration Settings\n    #appSettings: # string. App settings. \n    #generalSettings: # string. General settings. \n    #connectionStrings: # string. Connection Strings.\n```\n\n----------------------------------------\n\nTITLE: Example of Download Step Usage\nDESCRIPTION: Practical examples of how to use the download step to retrieve artifacts from the current pipeline and from an associated pipeline resource with specific patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-download.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: current  # refers to artifacts published by current pipeline\n  artifact: WebApp\n  patterns: '**/.js'\n  displayName: Download artifact WebApp\n- download: MyAppA   # downloads artifacts available as part of the pipeline resource specified as MyAppA\n```\n\n----------------------------------------\n\nTITLE: NuGet Build Definition Naming Convention\nDESCRIPTION: This configuration snippet pertains to the build number format in Azure DevOps, specifically for NuGet packages. It uses the build definition name, year, month, day, and revision to create a structured versioning scheme. The URL provided leads to further documentation on build number formatting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: None\nCODE:\n```\n\n$(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)\n\n```\n\n----------------------------------------\n\nTITLE: Defining .NET Core v2 Task in Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet defines the .NET Core v2 task which allows users to build, test, package, or publish .NET applications along with optional commands to execute custom .NET CLI commands. The parameters help customize the build process based on user requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DotNetCoreCLI@2\n  inputs:\n    #azureSubscription: # string. Alias: ConnectedServiceName. Azure Resource Manager connection. \n    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.\n    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.\n    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s) or solution(s). \n    #custom: # string. Required when command = custom. Custom command. \n    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. \n    #restoreArguments: # string. Optional. Use when command = restore. Arguments. \n    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.\n    #testRunTitle: # string. Optional. Use when command = test. Test run title. \n    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.\n    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.\n    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.\n    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.\n    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. \n    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. \n    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.\n    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).\n    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).\n    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.\n    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.\n    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.\n    #requestTimeout: '300000' # string. Set timeout for package download request. Default: 300000.\n  # Feeds and authentication\n    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.\n    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. Select from the dropdown or enter [project name/]feed name.\n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. \n    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection.\n  # Advanced\n    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.\n    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. \n    #verbosityRestore: 'Normal' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Normal.\n  # Advanced\n    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.\n  # Pack options\n    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.\n    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. \n    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.\n    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.\n    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.\n  # Advanced\n    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. \n    #verbosityPack: 'Normal' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Normal.\n  # Advanced\n    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.\n```\n\n----------------------------------------\n\nTITLE: Download Pipeline Artifacts v2 Task in YAML\nDESCRIPTION: This YAML snippet defines the DownloadPipelineArtifact@2 task, used to download artifacts produced by a build or pipeline. It specifies the build type, project, pipeline, and various options for selecting the build version and filtering artifacts. The target path determines where the downloaded artifacts are placed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Download Pipeline Artifacts v2\n# Download build and pipeline artifacts.\n- task: DownloadPipelineArtifact@2\n  inputs:\n    buildType: 'current' # 'current' | 'specific'. Alias: source. Required. Download artifacts produced by. Default: current.\n    #project: # string. Required when source == specific. Project. \n    #definition: # string. Alias: pipeline. Required when source == specific. Build pipeline. \n    #specificBuildWithTriggering: false # boolean. Alias: preferTriggeringPipeline. Optional. Use when source == specific. When appropriate, download artifacts from the triggering build. Default: false.\n    #buildVersionToDownload: 'latest' # 'latest' | 'latestFromBranch' | 'specific'. Alias: runVersion. Required when source == specific. Build version to download. Default: latest.\n    #branchName: 'refs/heads/master' # string. Alias: runBranch. Required when source == specific && runVersion == latestFromBranch. Branch name. Default: refs/heads/master.\n    #pipelineId: # string. Alias: runId | buildId. Required when source == specific && runVersion == specific. Build. \n    #tags: # string. Optional. Use when source == specific && runVersion != specific. Build Tags. \n    #allowPartiallySucceededBuilds: false # boolean. Optional. Use when source == specific && runVersion != specific. Download artifacts from partially succeeded builds. Default: false.\n    #allowFailedBuilds: false # boolean. Optional. Use when source == specific && runVersion != specific. Download artifacts from failed builds. Default: false.\n    #artifactName: # string. Alias: artifact. Artifact name. \n    #itemPattern: '**' # string. Alias: patterns. Matching patterns. Default: **.\n    targetPath: '$(Pipeline.Workspace)' # string. Alias: path | downloadPath. Required. Destination directory. Default: $(Pipeline.Workspace).\n```\n\n```\n\n----------------------------------------\n\nTITLE: Sequential Stages with Parallel Jobs in Azure DevOps Pipeline\nDESCRIPTION: Example of three sequential stages in an Azure DevOps pipeline, with the middle stage running two jobs in parallel. Demonstrates basic stage and job structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: Build\n  jobs:\n  - job: BuildJob\n    steps:\n    - script: echo Building!\n- stage: Test\n  jobs:\n  - job: TestOnWindows\n    steps:\n    - script: echo Testing on Windows!\n  - job: TestOnLinux\n    steps:\n    - script: echo Testing on Linux!\n- stage: Deploy\n  jobs:\n  - job: Deploy\n    steps:\n    - script: echo Deploying the code!\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure File Copy Task in YAML Pipeline\nDESCRIPTION: YAML configuration for AzureFileCopy@4 task showing all available parameters including required and optional inputs for both Azure Blob Storage and Azure VM destinations. The task requires source path, Azure subscription, destination type, and storage account as mandatory fields.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure file copy v4\n# Copy files to Azure Blob Storage or virtual machines.\n- task: AzureFileCopy@4\n  inputs:\n    SourcePath: # string. Required. Source. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. \n    storage: # string. Alias: StorageAccountRM. Required. RM Storage Account. \n    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. \n    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. \n    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when Destination = AzureVMs. Resource Group. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. \n    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. \n    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. \n    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. \n    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). \n    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). \n    #sasTokenTimeOutInMinutes: '240' # string. Optional. Use when Destination = AzureBlob. SAS Token Expiration Period In Minutes. Default: 240.\n    #enableCopyPrerequisites: false # boolean. Optional. Use when Destination = AzureVMs. Enable Copy Prerequisites. Default: false.\n    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.\n    #CleanTargetBeforeCopy: false # boolean. Optional. Use when Destination = AzureVMs. Clean Target. Default: false.\n    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Defining Docker@1 Task in Azure Pipelines YAML\nDESCRIPTION: YAML schema for configuring the Docker@1 task in Azure Pipelines. Specifies inputs for container registry, commands, and advanced options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker v1\n# Build, tag, push, or run Docker images, or run a Docker command.\n- task: Docker@1\n  inputs:\n  # Container Registry\n    #containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Container Registry'. Required when command != logout. Container registry type. Default: Azure Container Registry.\n    #dockerRegistryEndpoint: # string. Optional. Use when containerregistrytype = Container Registry && command != logout. Docker registry service connection. \n    #azureSubscriptionEndpoint: # string. Optional. Use when containerregistrytype = Azure Container Registry && command != logout. Azure subscription. \n    #azureContainerRegistry: # string. Optional. Use when containerregistrytype = Azure Container Registry && command != logout. Azure container registry. \n  # Commands\n    #addBaseImageData: true # boolean. Add base image metadata to image(s). Default: true.\n    command: 'Build an image' # 'Build an image' | 'Tag image' | 'Push an image' | 'Run an image' | 'login' | 'logout'. Required. Command. Default: Build an image.\n    #dockerFile: '**/Dockerfile' # string. Required when command = Build an image || command = build. Dockerfile. Default: **/Dockerfile.\n    #arguments: # string. Optional. Use when command != login && command != logout. Arguments. \n    #pushMultipleImages: false # boolean. Optional. Use when command = Push an image || command = push. Push multiple images. Default: false.\n    #tagMultipleImages: false # boolean. Optional. Use when command = Tag image || command = tag. Tag multiple images. Default: false.\n    #imageName: '$(Build.Repository.Name):$(Build.BuildId)' # string. Required when command = Build an image || command = build || command = Run an image || command = run || pushMultipleImages = false || tagMultipleImages = false. Image name. Default: $(Build.Repository.Name):$(Build.BuildId).\n    #imageNamesPath: # string. Required when tagMultipleImages = true || pushMultipleImages = true. Image names path. \n    #qualifyImageName: true # boolean. Optional. Use when command = Build an image || command = build || command = Tag image || command = tag || command = Push an image || command = push || command = Run an image || command = run. Qualify image name. Default: true.\n    #qualifySourceImageName: false # boolean. Optional. Use when command = Tag image || command = tag. Qualify source image name. Default: false.\n    #includeSourceTags: false # boolean. Optional. Use when command = Build an image || command = build || command = Tag image || command = tag  || command = Push an image || command = push. Include source tags. Default: false.\n    #includeLatestTag: false # boolean. Optional. Use when command = Build an image || command = build. Include latest tag. Default: false.\n    #addDefaultLabels: true # boolean. Optional. Use when addDefaultLabels = false. Add default labels. Default: true.\n    #useDefaultContext: true # boolean. Optional. Use when command = Build an image || command = build. Use default build context. Default: true.\n    #buildContext: # string. Optional. Use when useDefaultContext = false. Build context. \n    #imageDigestFile: # string. Optional. Use when command = Push an image || command = push. Image digest file. \n    #containerName: # string. Optional. Use when command = Run an image || command = run. Container name. \n    #ports: # string. Optional. Use when command = Run an image || command = run. Ports. \n    #volumes: # string. Optional. Use when command = Run an image || command = run. Volumes. \n    #envVars: # string. Optional. Use when command = Run an image || command = run. Environment variables. \n    #workingDirectory: # string. Optional. Use when command = Run an image || command = run. Working directory. \n    #entrypointOverride: # string. Optional. Use when command = Run an image || command = run. Entry point override. \n    #containerCommand: # string. Optional. Use when command = Run an image || command = run. Container command. \n    #runInBackground: true # boolean. Optional. Use when command = Run an image || command = run. Run in background. Default: true.\n    restartPolicy: 'no' # 'no' | 'onFailure' | 'always' | 'unlessStopped'. Required when runInBackground = true. Restart policy. Default: no.\n    #maxRestartRetries: # string. Optional. Use when runInBackground = true && restartPolicy = onFailure. Maximum restart retries. \n  # Advanced Options\n    #dockerHostEndpoint: # string. Optional. Use when command != login && command != logout. Docker host service connection. \n    #enforceDockerNamingConvention: true # boolean. Optional. Use when command != login && command != logout. Force image name to follow Docker naming convention. Default: true.\n    #memoryLimit: # string. Optional. Use when command != login && command != logout. Memory limit.\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Signing Task in YAML\nDESCRIPTION: This YAML snippet shows how to configure the AndroidSigning@1 task in an Azure Pipelines workflow. It includes all available input parameters with their descriptions and default values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/android-signing-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Android Signing v1\n# Sign and align Android APK files.\n- task: AndroidSigning@1\n  inputs:\n    files: # string. Required. APK Files. \n  # Signing Options\n    #jarsign: true # boolean. Sign the APK. Default: true.\n    keystoreFile: # string. Required when jarsign = true. Keystore File. \n    #keystorePass: # string. Optional. Use when jarsign = true. Keystore Password. \n    #keystoreAlias: # string. Optional. Use when jarsign = true. Alias. \n    #keyPass: # string. Optional. Use when jarsign = true. Key Password. \n    #jarsignerArguments: '-verbose -sigalg MD5withRSA -digestalg SHA1' # string. Optional. Use when jarsign = true. Jarsigner Arguments. Default: -verbose -sigalg MD5withRSA -digestalg SHA1.\n  # Zipalign Options\n    #zipalign: true # boolean. Zipalign. Default: true.\n    #zipalignLocation: # string. Optional. Use when zipalign = true. Zipalign Location.\n```\n\n----------------------------------------\n\nTITLE: Packaging Projects with Azure DevOps Pipeline YAML\nDESCRIPTION: Illustrates how to use the NuGetCommand@2 task to package projects into NuGet packages. Designed to pack .csproj files into a specified destination directory. This requires the setup of proper folder paths in the YAML configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_23\n\nLANGUAGE: YAML\nCODE:\n```\n# Package a project\n- task: NuGetCommand@2\n  inputs:\n    command: 'pack'\n    packagesToPack: '**/*.csproj'\n    packDestination: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CLI Task for Azure Pipelines Latest\nDESCRIPTION: YAML configuration for Azure CLI v2 task in the latest version of Azure Pipelines, supporting PowerShell Core/Shell scripts on Linux and PowerShell/PowerShell Core/Batch scripts on Windows.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure CLI v2\n# Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/PowerShell Core/Batch script when running on Windows agent.\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure Resource Manager connection. \n    scriptType: # 'ps' | 'pscore' | 'batch' | 'bash'. Required. Script Type. \n    scriptLocation: 'scriptPath' # 'inlineScript' | 'scriptPath'. Required. Script Location. Default: scriptPath.\n    scriptPath: # string. Required when scriptLocation = scriptPath. Script Path. \n    #inlineScript: # string. Required when scriptLocation = inlineScript. Inline Script. \n    #arguments: # string. Alias: scriptArguments. Script Arguments. \n    #powerShellErrorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. Optional. Use when scriptType = ps || scriptType = pscore. ErrorActionPreference. Default: stop.\n  # Advanced\n    #addSpnToEnvironment: false # boolean. Access service principal details in script. Default: false.\n    #useGlobalConfig: false # boolean. Use global Azure CLI configuration. Default: false.\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n    #powerShellIgnoreLASTEXITCODE: false # boolean. Optional. Use when scriptType = ps || scriptType = pscore. Ignore $LASTEXITCODE. Default: false.\n    #visibleAzLogin: true # boolean. az login output visibility. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Results Configuration in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for PublishTestResults@1 task showing required and optional parameters for publishing test results to Azure Pipelines. Supports multiple test formats including JUnit, NUnit, VSTest and XUnit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish test results v1\n# Publish test results to Azure Pipelines.\n- task: PublishTestResults@1\n  inputs:\n    testRunner: 'JUnit' # 'JUnit' | 'NUnit' | 'VSTest' | 'XUnit'. Required. Test Result Format. Default: JUnit.\n    testResultsFiles: '**/TEST-*.xml' # string. Required. Test Results Files. Default: **/TEST-*.xml.\n    #mergeTestResults: false # boolean. Merge Test Results. Default: false.\n    #testRunTitle: # string. Test Run Title. \n  # Advanced\n    #platform: # string. Platform. \n    #configuration: # string. Configuration. \n    #publishRunAttachments: true # boolean. Upload Test Attachments. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Defining jobs.template Syntax in Azure Pipelines YAML\nDESCRIPTION: Demonstrates the basic syntax for defining a jobs.template in Azure Pipelines YAML. It shows the required 'template' property and optional 'parameters' property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-template.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- template: string # Required as first property. Reference to a template for this deployment.\n  parameters: # Parameters used in a deployment template.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CLI v1 Task in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to configure the AzureCLI@1 task in an Azure Pipeline. It specifies the required inputs and optional advanced settings for running Azure CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure CLI v1\n# Run Azure CLI commands against an Azure subscription in a Shell script when running on Linux agent or Batch script when running on Windows agent.\n- task: AzureCLI@1\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure subscription. \n    scriptLocation: 'scriptPath' # 'inlineScript' | 'scriptPath'. Required. Script Location. Default: scriptPath.\n    scriptPath: # string. Required when scriptLocation = scriptPath. Script Path. \n    #inlineScript: # string. Required when scriptLocation = inlineScript. Inline Script. \n    #arguments: # string. Alias: args. Arguments. \n  # Advanced\n    #addSpnToEnvironment: false # boolean. Access service principal details in script. Default: false.\n    #useGlobalConfig: false # boolean. Use global Azure CLI configuration. Default: false.\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Docker v2 Task Configuration for Azure Pipelines 2022+\nDESCRIPTION: YAML configuration for the Docker@2 task in Azure Pipelines 2022 and later versions. Includes options for building, pushing, logging in/out, and managing containers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker v2\n# Build or push Docker images, login or logout, start or stop containers, or run a Docker command.\n- task: Docker@2\n  inputs:\n  # Container Repository\n    #containerRegistry: # string. Container registry. \n    #repository: # string. Optional. Use when command != login && command != logout && command != start && command != stop. Container repository. \n  # Commands\n    command: 'buildAndPush' # 'buildAndPush' | 'build' | 'push' | 'login' | 'logout' | 'start' | 'stop'. Required. Command. Default: buildAndPush.\n    Dockerfile: '**/Dockerfile' # string. Required when command = build || command = buildAndPush. Dockerfile. Default: **/Dockerfile.\n    #buildContext: '**' # string. Optional. Use when command = build || command = buildAndPush. Build context. Default: **.\n    #tags: '$(Build.BuildId)' # string. Optional. Use when command = build || command = push || command = buildAndPush. Tags. Default: $(Build.BuildId).\n    #arguments: # string. Optional. Use when command != login && command != logout && command != buildAndPush. Arguments. \n    #addPipelineData: true # boolean. Add Pipeline metadata to image(s). Default: true.\n    #addBaseImageData: true # boolean. Add base image metadata to image(s). Default: true.\n    #container: # string. Optional. Use when command = start || command = stop. Container.\n```\n\n----------------------------------------\n\nTITLE: RunOnce Deployment Strategy Syntax in Azure Pipelines\nDESCRIPTION: YAML syntax for the runOnce deployment strategy which executes each deployment step once. Includes lifecycle hooks like preDeploy, deploy, routeTraffic, postRouteTraffic, and event handlers for success or failure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  runOnce: # RunOnce Deployment strategy.\n    preDeploy: # Pre deploy hook for runOnce deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where pre deploy steps will run.\n    deploy: # Deploy hook for runOnce deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where deploy steps will run.\n    routeTraffic: # Route traffic hook for runOnce deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where route traffic steps will run.\n    postRouteTraffic: # Post route traffic hook for runOnce deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where post route traffic steps will run.\n    on: # On success or failure hook for runOnce deployment strategy.\n      failure: # Runs on failure of any step.\n        steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n        pool: string | pool # Pool where post on failure steps will run.\n      success: # Runs on success of all of the steps.\n        steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n        pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: Implementing Rolling Deployment for VMs in Azure DevOps Pipelines\nDESCRIPTION: An example showing a rolling deployment strategy for VMs that updates up to five targets in each iteration. The example demonstrates all lifecycle hooks including preDeploy, deploy, routeTraffic, postRouteTraffic, and success/failure handlers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-rolling.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs: \n- deployment: VMDeploy\n  displayName: web\n  environment:\n    name: smarthotel-dev\n    resourceType: VirtualMachine\n  strategy:\n    rolling:\n      maxParallel: 5  #for percentages, mention as x%\n      preDeploy:\n        steps:\n        - download: current\n          artifact: drop\n        - script: echo initialize, cleanup, backup, install certs\n      deploy:\n        steps:\n        - task: IISWebAppDeploymentOnMachineGroup@0\n          displayName: 'Deploy application to Website'\n          inputs:\n            WebSiteName: 'Default Web Site'\n            Package: '$(Pipeline.Workspace)/drop/**/*.zip'\n      routeTraffic:\n        steps:\n        - script: echo routing traffic\n      postRouteTraffic:\n        steps:\n        - script: echo health check post-route traffic\n      on:\n        failure:\n          steps:\n          - script: echo Restore from backup! This is on failure\n        success:\n          steps:\n          - script: echo Notify! This is on success\n```\n\n----------------------------------------\n\nTITLE: Example of Multiple Scheduled Triggers in Azure Pipelines\nDESCRIPTION: This example defines two scheduled triggers: a daily midnight build and a weekly Sunday build. It demonstrates how to use different cron schedules, branch filtering, and the 'always' property for different execution behaviors.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/schedules-cron.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: '0 0 * * *'\n  displayName: Daily midnight build\n  branches:\n    include:\n    - main\n    - releases/*\n    exclude:\n    - releases/ancient/*\n- cron: '0 12 * * 0'\n  displayName: Weekly Sunday build\n  branches:\n    include:\n    - releases/*\n  always: true\n```\n\n----------------------------------------\n\nTITLE: Blue-Green Deployment in Azure Spring Cloud\nDESCRIPTION: A YAML configuration showcasing a blue-green deployment strategy in Azure Spring Cloud. This approach allows deploying to a staging deployment without immediately routing production traffic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\\n  azureSubscription: Contoso\\n\\nsteps:\\n- task: AzureSpringCloud@0\\n    inputs:\\n    azureSubscription: $(azureSubscription)\\n    Action: 'Deploy'\\n    AzureSpringCloud: contoso-dev-az-spr-cld\\n    AppName: customer-api\\n    UseStagingDeployment: true\\n    Package: '$(System.DefaultWorkingDirectory)/**/*customer-api*.jar'\n```\n\n----------------------------------------\n\nTITLE: Configuring PackerBuild Task in Azure Pipelines YAML\nDESCRIPTION: Defines a Packer build task for creating machine images with various configuration options including Azure subscription, base image selection, and deployment settings\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/packer-build-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PackerBuild@0\n  inputs:\n    templateType: 'builtin'\n    ConnectedServiceName: # Azure subscription\n    location: # Storage location\n    storageAccountName: # Storage account\n    azureResourceGroup: # Resource group\n    baseImageSource: 'default'\n    packagePath: # Deployment Package\n    deployScriptPath: # Deployment script\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Containers as Resources in Azure DevOps Pipelines\nDESCRIPTION: This example demonstrates how to define multiple containers as resources and reference them in jobs using dynamic variables. It creates a matrix strategy to run the same job across different Ubuntu container versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-container.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: u14\n    image: ubuntu:14.04\n\n  - container: u16\n    image: ubuntu:16.04\n\n  - container: u18\n    image: ubuntu:18.04\n\njobs:\n- job: RunInContainer\n  pool:\n    vmImage: 'ubuntu-18.04'\n\n  strategy:\n    matrix:\n      ubuntu14:\n        containerResource: u14\n      ubuntu16:\n        containerResource: u16\n      ubuntu18:\n        containerResource: u18\n\n  container: $[ variables['containerResource'] ]\n\n  steps:\n  - script: printenv\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifacts in YAML (Azure Pipelines 2020.1 and earlier)\nDESCRIPTION: This YAML snippet shows how to use the PublishPipelineArtifact@0 task to publish a local directory or file as a named artifact for the current pipeline in Azure Pipelines 2020.1 and earlier versions. It includes options for specifying the artifact name and target path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-pipeline-artifact-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Pipeline Artifacts v0\n# Publish a local directory or file as a named artifact for the current pipeline.\n- task: PublishPipelineArtifact@0\n  inputs:\n    artifactName: 'drop' # string. Required. The name of this artifact. Default: drop.\n    targetPath: # string. Required. Path to publish.\n```\n\n----------------------------------------\n\nTITLE: Creating a GitHub Release with Manual Tag\nDESCRIPTION: YAML configuration to create a GitHub release using the build number as the tag version. It uploads specified assets from the artifact staging directory and generates a change log as release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GithubRelease@1 \n  displayName: 'Create GitHub Release'      \n  inputs:\n    gitHubConnection: zenithworks\n    repositoryName: zenithworks/javaAppWithMaven\n    tagSource: manual\n    tag: $(Build.BuildNumber)      \n    assets: |\n      $(Build.ArtifactStagingDirectory)/*.exe\n      $(Build.ArtifactStagingDirectory)/README.txt\n```\n\n----------------------------------------\n\nTITLE: PowerShell Core Step Syntax for Azure Pipelines 2022+\nDESCRIPTION: YAML syntax for the 'pwsh' step in Azure Pipelines 2022 and newer versions. This defines all available properties including error handling options, working directory, environment variables, and timeout settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-pwsh.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- pwsh: string # Required as first property. Inline PowerShell script.\n  errorActionPreference: string # Unless otherwise specified, the error action preference defaults to the value stop. See the following section for more information.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  ignoreLASTEXITCODE: string # Check the final exit code of the script to determine whether the step succeeded?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Basic PowerShell Step Syntax for Azure Pipelines 2022+\nDESCRIPTION: YAML syntax for PowerShell steps in Azure Pipelines 2022 and later versions, showing all available configuration options including retryCountOnTaskFailure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-powershell.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: string # Required as first property. Inline PowerShell script.\n  errorActionPreference: string # Unless otherwise specified, the error action preference defaults to the value stop. See the following section for more information.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  ignoreLASTEXITCODE: string # Check the final exit code of the script to determine whether the step succeeded?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Parameters in YAML\nDESCRIPTION: Specifies the syntax for defining runtime parameters passed to a pipeline. The 'parameters' keyword is followed by a list of parameter objects.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/parameters.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters: [ parameter ] # Specifies the runtime parameters passed to a pipeline.\n```\n\n----------------------------------------\n\nTITLE: Gradle Build Configuration in Azure DevOps YAML\nDESCRIPTION: This YAML snippet configures the Gradle task (Gradle@2) to build a Java project using a Gradle wrapper script. It specifies the location of the wrapper script, the tasks to be executed (e.g., 'build'), and settings for JUnit test results and code coverage. The snippet also provides options for setting the JAVA_HOME and configuring code analysis tools like SonarQube.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Gradle@2\n  inputs:\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\n    #workingDirectory: # string. Alias: cwd. Working directory. \n    #options: # string. Options. \n    tasks: 'build' # string. Required. Tasks. Default: build.\n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\n    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Properties in Azure Pipelines YAML\nDESCRIPTION: Example YAML showing the structure and properties available for configuring an Azure Pipeline. This includes stages, pool, name, triggers, parameters, and other pipeline-level settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstages: [ stage | template ] # Required. Stages are groups of jobs that can run without human intervention.\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\nname: string # Pipeline run number.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\nlockBehavior: string # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests. sequential | runLatest.\n```\n\n----------------------------------------\n\nTITLE: Defining onSuccessOrFailureHook in Azure Pipelines YAML\nDESCRIPTION: YAML syntax for the onSuccessOrFailureHook definition, which specifies steps to run on failure of any step or success of all steps. It includes options for specifying steps and pools for both failure and success scenarios.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/on-success-or-failure-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nonSuccessOrFailureHook:\n  failure: # Runs on failure of any step.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where post on failure steps will run.\n  success: # Runs on success of all of the steps.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: Template with Simple Boolean Parameter\nDESCRIPTION: Example of a template file that defines a boolean parameter with a default value, and a pipeline that extends the template while providing a parameter value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/parameters-parameter.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: simple-param.yml\nparameters:\n- name: yesNo # name of param; required\n  type: boolean # data type of param; required\n  default: false\n\nsteps:\n- script: echo ${{ parameters.yesNo }}\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\ntrigger:\n- main\n\nextends:\n    template: simple-param.yml\n    parameters:\n        yesNo: false \n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Manifests with Container Image Substitution\nDESCRIPTION: Example of deploying to a Kubernetes namespace using manifest files with container image substitution and image pull secrets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Deploy\n  inputs:\n    kubernetesServiceConnection: someK8sSC1\n    namespace: default\n    manifests: |\n      manifests/deployment.yml\n      manifests/service.yml\n    containers: |\n      foo/demo:$(tagVariable1)\n      bar/demo:$(tagVariable2)\n    imagePullSecrets: |\n      some-secret\n      some-other-secret\n```\n\n----------------------------------------\n\nTITLE: Complex Trigger Configuration with Path Exclusions in Azure DevOps YAML Pipelines\nDESCRIPTION: Advanced trigger configuration that uses batching, includes feature branches while excluding experimental ones, and excludes README.md file changes from triggering builds. This demonstrates combining branch patterns with path filters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/trigger.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n  batch: true\n  branches:\n    include:\n    - features/*\n    exclude:\n    - features/experimental/*\n  paths:\n    exclude:\n    - README.md\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters with Basic Data Types\nDESCRIPTION: Example showing how to define parameters with various data types including string, number, boolean, object, step, and stepList. Demonstrates the proper structure for each type with default values and constraints.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/parameters-parameter.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n  - name: myString\n    type: string\n    default: a string\n  - name: myMultiString\n    type: string\n    default: default\n    values:\n      - default\n      - ubuntu\n  - name: myNumber\n    type: number\n    default: 2\n    values:\n      - 1\n      - 2\n      - 4\n      - 8\n      - 16\n  - name: myBoolean\n    type: boolean\n    default: true\n  - name: myObject\n    type: object\n    default:\n      foo: FOO\n      bar: BAR\n      things:\n        - one\n        - two\n        - three\n      nested:\n        one: apple\n        two: pear\n        count: 3\n  - name: myStep\n    type: step\n    default:\n      script: echo my step\n  - name: mySteplist\n    type: stepList\n    default:\n      - script: echo step one\n      - script: echo step two\n\ntrigger: none\n\njobs: \n  - job: stepList\n    steps: ${{ parameters.mySteplist }}\n  - job: myStep\n    steps:\n      - ${{ parameters.myStep }}\n```\n\n----------------------------------------\n\nTITLE: Deploying Web Applications with Web Deploy using YAML\nDESCRIPTION: This YAML snippet details the configuration for deploying a website or web application using Web Deploy in Azure pipelines. It utilizes the IISWebAppDeploymentOnMachineGroup@0 task, where key inputs such as WebSiteName, Package, and advanced options can be configured. This task requires configuration of the web application's package location, and it offers extended features like XML transformation and JSON variable substitution through optional parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-on-machine-group-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# IIS web app deploy v0\\n# Deploy a website or web application using Web Deploy.\\n- task: IISWebAppDeploymentOnMachineGroup@0\\n  inputs:\\n    WebSiteName: # string. Required. Website Name. \\n    #VirtualApplication: # string. Virtual Application. \\n    Package: '$(System.DefaultWorkingDirectory)\\**\\*.zip' # string. Required. Package or Folder. Default: $(System.DefaultWorkingDirectory)\\**\\*.zip.\\n  # Advanced Deployment Options\\n    #SetParametersFile: # string. SetParameters File. \\n    #RemoveAdditionalFilesFlag: false # boolean. Remove Additional Files at Destination. Default: false.\\n    #ExcludeFilesFromAppDataFlag: false # boolean. Exclude Files from the App_Data Folder. Default: false.\\n    #TakeAppOfflineFlag: false # boolean. Take App Offline. Default: false.\\n    #AdditionalArguments: # string. Additional Arguments. \\n  # File Transforms & Variable Substitution Options\\n    #XmlTransformation: false # boolean. XML transformation. Default: false.\\n    #XmlVariableSubstitution: false # boolean. XML variable substitution. Default: false.\\n    #JSONFiles: # string. JSON variable substitution.\n```\n\n----------------------------------------\n\nTITLE: Multi-Platform Build Configuration\nDESCRIPTION: Example showing how to use matrix strategy to build on multiple platforms (Linux, Mac, Windows) with specific build and test steps for a NodeJS Express app.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-strategy.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix:\n    linux:\n      imageName: 'ubuntu-latest'\n    mac:\n      imageName: 'macOS-latest'\n    windows:\n      imageName: 'windows-latest'\n\npool:\n  vmImage: $(imageName)\n\nsteps:\n- task: NodeTool@0\n  inputs:\n    versionSpec: '8.x'\n\n- script: |\n    npm install\n    npm test\n\n- task: PublishTestResults@2\n  inputs:\n    testResultsFiles: '**/TEST-RESULTS.xml'\n    testRunTitle: 'Test results for JavaScript'\n\n- task: PublishCodeCoverageResults@1\n  inputs: \n    codeCoverageTool: Cobertura\n    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'\n    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'\n\n- task: ArchiveFiles@2\n  inputs:\n    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'\n    includeRootFolder: false\n\n- task: PublishBuildArtifacts@1\n```\n\n----------------------------------------\n\nTITLE: Providing Arguments for ConfigMap\nDESCRIPTION: Specifies additional keys and literal values to be inserted into the ConfigMap, useful when creating ConfigMaps without using files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"configMapArguments\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`configMapArguments`** - **Arguments**<br>\n`string`. Optional. Use when `useConfigMapFile = false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies keys and literal values to insert in `configMap`. For example, `--from-literal=key1=value1` or `--from-literal=key2=\"top secret\"`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring a Simple Container Job in Azure DevOps\nDESCRIPTION: This example fetches the ubuntu image tagged 18.04 from Docker Hub and runs the job in that container. When the printenv command runs, it executes inside the ubuntu:18.04 container.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-container.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: 'ubuntu-18.04'\n\ncontainer: ubuntu:18.04\n\nsteps:\n- script: printenv\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure SQL Database Deployment Task in YAML\nDESCRIPTION: YAML configuration for the SqlAzureDacpacDeployment@1 task, including options for authentication, deployment package, and firewall rules. This snippet shows the full syntax with all available parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-azure-dacpac-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure SQL Database deployment v1\n# Deploy an Azure SQL Database using DACPAC or run scripts using SQLCMD.\n- task: SqlAzureDacpacDeployment@1\n  inputs:\n    #azureConnectionType: 'ConnectedServiceNameARM' # 'ConnectedServiceName' | 'ConnectedServiceNameARM'. Alias: ConnectedServiceNameSelector. Azure Service Connection Type. Default: ConnectedServiceNameARM.\n    #azureClassicSubscription: # string. Alias: ConnectedServiceName. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Classic Subscription. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. Azure Subscription. \n  # SQL Database\n    AuthenticationType: 'server' # 'server' | 'aadAuthenticationPassword' | 'aadAuthenticationIntegrated' | 'connectionString' | 'servicePrincipal'. Required. Authentication Type. Default: server.\n    #ServerName: # string. Required when AuthenticationType = server || AuthenticationType = aadAuthenticationPassword || AuthenticationType = aadAuthenticationIntegrated || AuthenticationType = servicePrincipal. Azure SQL Server. \n    #DatabaseName: # string. Required when AuthenticationType = server || AuthenticationType = aadAuthenticationPassword || AuthenticationType = aadAuthenticationIntegrated || AuthenticationType = servicePrincipal. Database. \n    SqlUsername: # string. Required when AuthenticationType = server. Login. \n    SqlPassword: # string. Required when AuthenticationType = server. Password. \n    #aadSqlUsername: # string. Required when AuthenticationType = aadAuthenticationPassword. Login. \n    #aadSqlPassword: # string. Required when AuthenticationType = aadAuthenticationPassword. Password. \n    #ConnectionString: # string. Required when AuthenticationType = connectionString. Connection String. \n  # Deployment Package\n    deployType: 'DacpacTask' # 'DacpacTask' | 'SqlTask' | 'InlineSqlTask'. Alias: TaskNameSelector. Required. Deploy type. Default: DacpacTask.\n    DeploymentAction: 'Publish' # 'Publish' | 'Extract' | 'Export' | 'Import' | 'Script' | 'DriftReport' | 'DeployReport'. Required when TaskNameSelector = DacpacTask. Action. Default: Publish.\n    #DacpacFile: # string. Required when DeploymentAction = Publish || DeploymentAction = Script || DeploymentAction = DeployReport. DACPAC File. \n    #BacpacFile: # string. Required when DeploymentAction = Import. BACPAC File. \n    #SqlFile: # string. Required when TaskNameSelector = SqlTask. SQL Script. \n    #SqlInline: # string. Required when TaskNameSelector = InlineSqlTask. Inline SQL Script. \n    #PublishProfile: # string. Optional. Use when TaskNameSelector = DacpacTask || DeploymentAction = Script || DeploymentAction = DeployReport. Publish Profile. \n    #AdditionalArguments: # string. Optional. Use when TaskNameSelector = DacpacTask || DeploymentAction = Extract || DeploymentAction = Export || DeploymentAction = Import || DeploymentAction = Script || DeploymentAction = DeployReport || DeploymentAction = DriftReport. Additional SqlPackage.exe Arguments. \n    #SqlAdditionalArguments: # string. Optional. Use when TaskNameSelector = SqlTask. Additional Invoke-Sqlcmd Arguments. \n    #InlineAdditionalArguments: # string. Optional. Use when TaskNameSelector = InlineSqlTask. Additional Invoke-Sqlcmd Arguments. \n  # Firewall\n    IpDetectionMethod: 'AutoDetect' # 'AutoDetect' | 'IPAddressRange'. Required. Specify Firewall Rules Using. Default: AutoDetect.\n    #StartIpAddress: # string. Required when IpDetectionMethod = IPAddressRange. Start IP Address. \n    #EndIpAddress: # string. Required when IpDetectionMethod = IPAddressRange. End IP Address. \n    #DeleteFirewallRule: true # boolean. Delete Rule After Task Ends. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Azure Function App Deployment in YAML\nDESCRIPTION: This YAML snippet defines the input parameters for deploying an Azure Function App using an Azure DevOps pipeline task. It includes options for specifying the Azure subscription, app type, deployment slots, package location, and runtime stack.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ninputs:\n  connectedServiceNameARM: string # Azure Resource Manager connection\n  appType: string # App type (Function App on Windows or Linux)\n  isFlexConsumption: boolean # Is Function App on Flex Consumption Plan\n  appName: string # Azure Functions App name\n  deployToSlotOrASE: boolean # Deploy to Slot or App Service Environment\n  resourceGroupName: string # Resource group\n  slotName: string # Slot\n  package: string # Package or folder\n  runtimeStack: string # Runtime stack\n  appSettings: string # App settings\n  deploymentMethod: string # Deployment method\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Task for Azure Pipelines 2020.1 and Later\nDESCRIPTION: YAML configuration for the CMake@1 task in Azure Pipelines version 2020.1 and later. It includes options for working directory, arguments, and running inside a shell.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cmake-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# CMake v1\n# Build with the CMake cross-platform build system.\n- task: CMake@1\n  inputs:\n    #workingDirectory: 'build' # string. Alias: cwd. Working Directory. Default: build.\n    #cmakeArgs: # string. Arguments. \n  # Advanced\n    #runInsideShell: false # boolean. Run cmake command inside shell. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Variables Using List Syntax in Azure Pipelines YAML\nDESCRIPTION: Illustrates how to define variables using list syntax in Azure Pipelines YAML. This approach allows for defining individual variables, including variable groups, and setting variables as read-only for enhanced security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: string  # name of a variable\n  value: string # value of the variable\n- group: string # name of a variable group\n```\n\n----------------------------------------\n\nTITLE: NuGet Configuration for Azure Artifacts Authentication\nDESCRIPTION: This XML snippet shows a nuget.config file configured to authenticate with Azure Artifacts feeds within the organization, including both project-scoped and organization-scoped feeds. It supports dev.azure.com and visualstudio.com domains.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n\"<configuration>\n  <packageSources>\n    <!-- \n      Any Azure Artifacts feeds within your organization will automatically be authenticated. Both dev.azure.com and visualstudio.com domains are supported.\n      Project scoped feed URL includes the project, organization scoped feed URL does not.\n    -->\n    <add key=\\\"MyProjectFeed1\\\" value=\\\"https://pkgs.dev.azure.com/{organization}/{project}/_packaging/{feed}/nuget/v3/index.json\\\" />\n    <add key=\\\"MyProjectFeed2\\\" value=\\\"https://{organization}.pkgs.visualstudio.com/{project}/_packaging/{feed}/nuget/v3/index.json\\\" />\n    <add key=\\\"MyOtherProjectFeed1\\\" value=\\\"https://pkgs.dev.azure.com/{organization}/{project}/_packaging/{feed@view}/nuget/v3/index.json\\\" />\n    <add key=\\\"MyOrganizationFeed1\\\" value=\\\"https://pkgs.dev.azure.com/{organization}/_packaging/{feed}/nuget/v3/index.json\\\" />\n  </packageSources>\n</configuration>\"\n```\n\n----------------------------------------\n\nTITLE: Rolling Deployment Strategy Syntax in Azure Pipelines\nDESCRIPTION: YAML syntax for the rolling deployment strategy which gradually replaces instances of the previous application version with the new version across a set of virtual machines. Includes maxParallel configuration and lifecycle hooks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  rolling: # Rolling Deployment strategy.\n    maxParallel: string # Maximum number of jobs running in parallel.\n    preDeploy: # Pre deploy hook for rolling deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where pre deploy steps will run.\n    deploy: # Deploy hook for rolling deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where deploy steps will run.\n    routeTraffic: # Route traffic hook for rolling deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where route traffic steps will run.\n    postRouteTraffic: # Post route traffic hook for rolling deployment strategy.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where post route traffic steps will run.\n    on: # On success or failure hook for rolling deployment strategy.\n      failure: # Runs on failure of any step.\n        steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n        pool: string | pool # Pool where post on failure steps will run.\n      success: # Runs on success of all of the steps.\n        steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n        pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: GitHub Release v1 task syntax\nDESCRIPTION: This YAML snippet defines the syntax for the GitHubRelease@1 task in Azure Pipelines. It demonstrates how to configure various inputs such as the GitHub connection, repository name, action to perform (create, edit, delete), tag source, and release notes.  The snippet also showcases options for managing assets, draft releases, pre-releases and automatically adding a changelog based on commits or issues.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# GitHub Release v1\n# Create, edit, or delete a GitHub release.\n- task: GitHubRelease@1\n  inputs:\n    gitHubConnection: # string. Required. GitHub connection (OAuth or PAT). \n    repositoryName: '$(Build.Repository.Name)' # string. Required. Repository. Default: $(Build.Repository.Name).\n    action: 'create' # 'create' | 'edit' | 'delete'. Required. Action. Default: create.\n    #target: '$(Build.SourceVersion)' # string. Required when action = create || action = edit. Target. Default: $(Build.SourceVersion).\n    tagSource: 'gitTag' # 'gitTag' | 'userSpecifiedTag'. Required when action = create. Tag source. Default: gitTag.\n    #tagPattern: # string. Optional. Use when tagSource = gitTag. Tag Pattern. \n    #tag: # string. Required when action = edit || action = delete || tagSource = userSpecifiedTag. Tag. \n    #title: # string. Optional. Use when action = create || action = edit. Release title. \n    #releaseNotesSource: 'filePath' # 'filePath' | 'inline'. Optional. Use when action = create || action = edit. Release notes source. Default: filePath.\n    #releaseNotesFilePath: # string. Optional. Use when releaseNotesSource = filePath. Release notes file path. \n    #releaseNotesInline: # string. Optional. Use when releaseNotesSource = inline. Release notes. \n    #assets: '$(Build.ArtifactStagingDirectory)/*' # string. Optional. Use when action = create || action = edit. Assets. Default: $(Build.ArtifactStagingDirectory)/*.\n    #assetUploadMode: 'delete' # 'delete' | 'replace'. Optional. Use when action = edit. Asset upload mode. Default: delete.\n    #isDraft: false # boolean. Optional. Use when action = create || action = edit. Draft release. Default: false.\n    #isPreRelease: false # boolean. Optional. Use when action = create || action = edit. Pre-release. Default: false.\n    #addChangeLog: true # boolean. Optional. Use when action = create || action = edit. Add changelog. Default: true.\n  # Changelog configuration\n    changeLogCompareToRelease: 'lastFullRelease' # 'lastFullRelease' | 'lastNonDraftRelease' | 'lastNonDraftReleaseByTag'. Required when addChangeLog = true. Compare to. Default: lastFullRelease.\n    #changeLogCompareToReleaseTag: # string. Required when changeLogCompareToRelease = lastNonDraftReleaseByTag && addChangeLog = true. Release Tag. \n    changeLogType: 'commitBased' # 'commitBased' | 'issueBased'. Required when addChangeLog = true. Changelog type. Default: commitBased.\n    #changeLogLabels: '[{ \"label\" : \"bug\", \"displayName\" : \"Bugs\", \"state\" : \"closed\" }]' # string. Optional. Use when changeLogType = issueBased && addChangeLog = true. Categories. Default: [{ \"label\" : \"bug\", \"displayName\" : \"Bugs\", \"state\" : \"closed\" }].\n```\n```\n\n----------------------------------------\n\nTITLE: Azure Static Web App Deployment YAML for v2022.1+\nDESCRIPTION: YAML configuration for deploying Azure Static Web Apps using pipeline version 2022.1 or higher. Includes all available parameters including data_api_location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-static-web-app-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Deploy Azure Static Web App v0\n# Build and deploy an Azure Static Web App.\n- task: AzureStaticWebApp@0\n  inputs:\n    #workingDirectory: '$(System.DefaultWorkingDirectory)' # string. Alias: cwd | rootDirectory. Working directory. Default: $(System.DefaultWorkingDirectory).\n    #app_location: # string. App location. \n    #app_build_command: # string. App build command. \n    #output_location: # string. Output location. \n    #api_location: # string. Api location. \n    #api_build_command: # string. Api build command. \n    #routes_location: # string. Routes location. \n    #config_file_location: # string. Config file location. \n    #skip_app_build: # boolean. Skip app build. \n    #skip_api_build: # boolean. Skip api build. \n    #is_static_export: # boolean. Set static export. \n    #verbose: # boolean. Verbose. \n    #build_timeout_in_minutes: # string. Build timeout in minutes. \n    #azure_static_web_apps_api_token: # string. Azure Static Web Apps api token. \n    #deployment_environment: # string. Deployment Environment. \n    #production_branch: # string. Production Branch. \n    #data_api_location: # string. Data api location.\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Build Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the ContainerBuild@0 task in an Azure Pipelines workflow. It specifies the task inputs including Dockerfile path, build context, and image tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/container-build-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Container Build v0\n# Container Build Task.\n- task: ContainerBuild@0\n  inputs:\n    #dockerRegistryServiceConnection: # string. Docker registry service connection. \n    #repository: # string. Container repository. \n    Dockerfile: 'Dockerfile' # string. Required. Dockerfile. Default: Dockerfile.\n    #buildContext: '.' # string. Build context. Default: ..\n    #tags: '$(Build.BuildId)' # string. Tags. Default: $(Build.BuildId).\n```\n\n----------------------------------------\n\nTITLE: Publishing Code Coverage Results Task Configuration in YAML\nDESCRIPTION: YAML configuration for the PublishCodeCoverageResults@1 task to publish Cobertura or JaCoCo code coverage results from a build. The task supports specifying the coverage tool, summary file location, source paths, report directory, and additional coverage files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-code-coverage-results-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Publish code coverage results v1\n# Publish Cobertura or JaCoCo code coverage results from a build.\n- task: PublishCodeCoverageResults@1\n  inputs:\n    codeCoverageTool: 'JaCoCo' # 'Cobertura' | 'JaCoCo'. Required. Code coverage tool. Default: JaCoCo.\n    summaryFileLocation: # string. Required. Summary file. \n    #pathToSources: # string. Path to Source files. \n    #reportDirectory: # string. Report directory. \n    #additionalCodeCoverageFiles: # string. Additional files. \n    #failIfCoverageEmpty: false # boolean. Fail when code coverage results are missing. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the SSH@0 task to run commands on a remote machine using SSH. It includes options for specifying the SSH endpoint, run options, commands, and advanced settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ssh-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# SSH v0\n# Run shell commands or a script on a remote machine using SSH.\n- task: SSH@0\n  inputs:\n    sshEndpoint: # string. Required. SSH service connection. \n    runOptions: 'commands' # 'commands' | 'script' | 'inline'. Required. Run. Default: commands.\n    commands: # string. Required when runOptions = commands. Commands. \n    #scriptPath: # string. Required when runOptions = script. Shell script path. \n    #inline: # string. Required when runOptions = inline. Inline Script. \n    #interpreterCommand: '/bin/bash' # string. Optional. Use when runOptions = inline. Interpreter command. Default: /bin/bash.\n    #args: # string. Optional. Use when runOptions = script. Arguments. \n  # Advanced\n    #failOnStdErr: true # boolean. Fail on STDERR. Default: true.\n    #interactiveSession: false # boolean. Enable interactive session. Default: false.\n    readyTimeout: '20000' # string. Required. SSH handshake timeout. Default: 20000.\n    #interactiveKeyboardAuthentication: false # boolean. Use interactive-keyboard authentication. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining CopyFilesOverSSH Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines a task to copy files or build artifacts to a remote machine via SSH in Azure Pipelines. Dependencies include an SSH service connection to the target machine, and various optional parameters to customize the copy operation, such as source and target folders, concurrency settings, and timeouts. The snippet requires a service connection and specifies the content patterns to be copied.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-over-ssh-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Copy files over SSH v0\n# Copy files or build artifacts to a remote machine over SSH.\n- task: CopyFilesOverSSH@0\n  inputs:\n    sshEndpoint: # string. Required. SSH service connection. \n    #sourceFolder: # string. Source folder. \n    contents: '**' # string. Required. Contents. Default: **.\n    #targetFolder: # string. Target folder. \n  # Advanced\n    #isWindowsOnTarget: false # boolean. Target machine running Windows. Default: false.\n    #cleanTargetFolder: false # boolean. Clean target folder. Default: false.\n    #cleanHiddenFilesInTarget: false # boolean. Optional. Use when cleanTargetFolder = true. Remove hidden files in target folder. Default: false.\n    readyTimeout: '20000' # string. Required. SSH handshake timeout. Default: 20000.\n    #overwrite: true # boolean. Overwrite. Default: true.\n    #failOnEmptySource: false # boolean. Fail if no files found to copy. Default: false.\n    #flattenFolders: false # boolean. Flatten folders. Default: false.\n    #concurrentUploads: '10' # string. Number of concurrent uploads when copying files. Default: 10.\n    #delayBetweenUploads: '50' # string. Delay between queueing uploads (in milliseconds). Default: 50.\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Copy files over SSH v0\n# Copy files or build artifacts to a remote machine over SSH.\n- task: CopyFilesOverSSH@0\n  inputs:\n    sshEndpoint: # string. Required. SSH service connection. \n    #sourceFolder: # string. Source folder. \n    contents: '**' # string. Required. Contents. Default: **.\n    #targetFolder: # string. Target folder. \n  # Advanced\n    #isWindowsOnTarget: false # boolean. Target machine running Windows. Default: false.\n    #cleanTargetFolder: false # boolean. Clean target folder. Default: false.\n    #cleanHiddenFilesInTarget: false # boolean. Optional. Use when cleanTargetFolder = true. Remove hidden files in target folder. Default: false.\n    readyTimeout: '20000' # string. Required. SSH handshake timeout. Default: 20000.\n    #overwrite: true # boolean. Overwrite. Default: true.\n    #failOnEmptySource: false # boolean. Fail if no files found to copy. Default: false.\n    #flattenFolders: false # boolean. Flatten folders. Default: false.\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Copy files over SSH v0\n# Copy files or build artifacts to a remote machine over SSH.\n- task: CopyFilesOverSSH@0\n  inputs:\n    sshEndpoint: # string. Required. SSH service connection. \n    #sourceFolder: # string. Source folder. \n    contents: '**' # string. Required. Contents. Default: **.\n    #targetFolder: # string. Target folder. \n  # Advanced\n    #isWindowsOnTarget: false # boolean. Target machine running Windows. Default: false.\n    #cleanTargetFolder: false # boolean. Clean target folder. Default: false.\n    readyTimeout: '20000' # string. Required. SSH handshake timeout. Default: 20000.\n    #overwrite: true # boolean. Overwrite. Default: true.\n    #failOnEmptySource: false # boolean. Fail if no files found to copy. Default: false.\n    #flattenFolders: false # boolean. Flatten folders. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure File Copy Task in YAML Pipeline\nDESCRIPTION: This YAML configuration snippet demonstrates how to set up an Azure File Copy task in a DevOps pipeline. It includes defining an agent pool, specifying source paths and Azure subscriptions, and designating target destinations in Azure Blob storage. Key parameters include SourcePath and azureSubscription, which require valid path and subscription details respectively. The setup displays the URI and SAS token of the storage container upon execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: windows-latest\n\nsteps:\n- task: AzureFileCopy@5\n  inputs:\n    SourcePath: 'Readme.md'\n    azureSubscription: 'MyAzureSubscription'\n    Destination: 'AzureBlob'\n    storage: 'MyStorage'\n    ContainerName: 'MyContainerName'\n  name: AzureFileCopy\n  \n- script: | \n    echo $(AzureFileCopy.StorageContainerUri)\n    echo $(AzureFileCopy.StorageContainerSasToken)\n```\n\n----------------------------------------\n\nTITLE: VSBuild Task Example\nDESCRIPTION: Example showing how to configure a Visual Studio Build task with display name, timeout, and solution path configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-task.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: VSBuild@1\n  displayName: Build\n  timeoutInMinutes: 120\n  inputs:\n    solution: '**\\*.sln'\n```\n\n----------------------------------------\n\nTITLE: Defining downloadBuild Step in Azure Pipelines 2022+\nDESCRIPTION: YAML syntax for the downloadBuild step in Azure Pipelines 2022 and newer versions. This defines the schema for downloading build artifacts with parameters for artifact name, download path, file patterns, and execution options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-download-build.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- downloadBuild: string # Required as first property. Alias of the build resource.\n  artifact: string # Artifact name.\n  path: string # Path to download the artifact into.\n  patterns: string # Downloads the files which matches the patterns.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Container Apps Deploy Task in YAML\nDESCRIPTION: YAML syntax for configuring the AzureContainerApps@0 task in an Azure Pipelines workflow. This task is used to build and deploy Azure Container Apps. It includes various input parameters for specifying Azure resources, container images, and deployment settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Container Apps Deploy v0\n# An Azure DevOps Task to build and deploy Azure Container Apps.\n- task: AzureContainerApps@0\n  inputs:\n  # advanced\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #appSourcePath: # string. Application source path. \n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure Resource Manager connection. \n    #acrName: # string. Azure Container Registry name. \n    #acrUsername: # string. Azure Container Registry username. \n    #acrPassword: # string. Azure Container Registry password. \n    #dockerfilePath: # string. Dockerfile path. \n    #imageToBuild: # string. Docker image to build. \n    #imageToDeploy: # string. Docker image to deploy. \n    #containerAppName: # string. Azure Container App name. \n    #resourceGroup: # string. Azure resource group name. \n    #containerAppEnvironment: # string. Azure Container App environment. \n    #runtimeStack: # string. Application runtime stack. \n    #targetPort: # string. Application target port. \n    #location: # string. Location of the Container App. \n    #environmentVariables: # string. Environment variables. \n    #ingress: # string. Ingress setting. \n    #yamlConfigPath: # string. YAML configuration file path. \n    #disableTelemetry: # boolean. Disable telemetry.\n```\n\n----------------------------------------\n\nTITLE: Deploy Helm with Kubernetes Service Connection - YAML\nDESCRIPTION: This YAML example shows how to deploy Helm using a Kubernetes service connection to interact with a Kubernetes cluster, requiring the Kubernetes service endpoint as an input for the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm deploy\n  inputs:\n    connectionType: Kubernetes Service Connection\n    kubernetesServiceEndpoint: Contoso\n```\n\n----------------------------------------\n\nTITLE: PowerShell Task Configuration for Azure Pipelines 2022.1+\nDESCRIPTION: YAML configuration for PowerShell@2 task with complete parameter set including preference variables and advanced options. Supports both file-based and inline scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell v2\n# Run a PowerShell script on Linux, macOS, or Windows.\n- task: PowerShell@2\n  inputs:\n    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.\n    filePath: # string. Required when targetType = filePath. Script Path. \n    #arguments: # string. Optional. Use when targetType = filePath. Arguments. \n    #script: # string. Required when targetType = inline. Script. \n  # Preference Variables\n    #errorActionPreference: 'stop' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #warningPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. WarningPreference. Default: default.\n    #informationPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. InformationPreference. Default: default.\n    #verbosePreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. VerbosePreference. Default: default.\n    #debugPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. DebugPreference. Default: default.\n    #progressPreference: 'silentlyContinue' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ProgressPreference. Default: silentlyContinue.\n  # Advanced\n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.\n    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.\n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #workingDirectory: # string. Working Directory. \n    #runScriptInSeparateScope: false # boolean. Run script in the separate scope. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Downloading Build Artifacts in Azure Pipelines using YAML\nDESCRIPTION: The YAML snippet specifies the configuration for the DownloadBuildArtifacts@1 task, used to download files saved as artifacts from a completed Azure DevOps build. Key parameters include 'buildType', 'downloadType', 'artifactName', and 'downloadPath', each dictating the source, method, name, and destination of the artifacts respectively. Defaults are provided for most options, while certain fields become mandatory based on other inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Download build artifacts v1\n# Download files that were saved as artifacts of a completed build.\n- task: DownloadBuildArtifacts@1\n  inputs:\n    buildType: 'current' # 'current' | 'specific'. Required. Download artifacts produced by. Default: current.\n    #project: # string. Required when buildType == specific. Project.\n    #pipeline: # string. Alias: definition. Required when buildType == specific. Build pipeline.\n    #specificBuildWithTriggering: false # boolean. Optional. Use when buildType == specific. When appropriate, download artifacts from the triggering build. Default: false.\n    #buildVersionToDownload: 'latest' # 'latest' | 'latestFromBranch' | 'specific'. Required when buildType == specific. Build version to download. Default: latest.\n    #allowPartiallySucceededBuilds: false # boolean. Optional. Use when buildType == specific && buildVersionToDownload != specific. Download artifacts even from partially succeeded builds. Default: false.\n    #branchName: 'refs/heads/master' # string. Required when buildType == specific && buildVersionToDownload == latestFromBranch. Branch name. Default: refs/heads/master.\n    #buildId: # string. Required when buildType == specific && buildVersionToDownload == specific. Build.\n    #tags: # string. Optional. Use when buildType == specific && buildVersionToDownload != specific. Build Tags.\n    downloadType: 'single' # 'single' | 'specific'. Required. Download type. Default: single.\n    artifactName: # string. Required when downloadType == single. Artifact name.\n    #itemPattern: '**' # string. Matching pattern. Default: **.\n    downloadPath: '$(System.ArtifactsDirectory)' # string. Required. Destination directory. Default: $(System.ArtifactsDirectory).\n    #cleanDestinationFolder: false # boolean. Clean destination folder. Default: false.\n  # Advanced\n    #parallelizationLimit: '8' # string. Parallelization limit. Default: 8.\n    #checkDownloadedFiles: false # boolean. Check downloaded files. Default: false.\n    #retryDownloadCount: '4' # string. Retry count. Default: 4.\n    #extractTars: # boolean. Extract all files that are stored inside tar archives.\n```\n\n----------------------------------------\n\nTITLE: Deleting Multiple File Patterns in Azure Pipelines\nDESCRIPTION: This example demonstrates how to use the DeleteFiles@1 task to remove specific files and patterns, including 'some/file', all files starting with 'test', and all files in 'bin' subdirectories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/delete-files-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DeleteFiles@1\n  displayName: 'Remove unneeded files'\n  inputs:\n    contents: |\n      some/file\n      test*\n      **/bin/*\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App Using YAML Configuration\nDESCRIPTION: This example demonstrates deploying a Container App using a YAML configuration file. It creates a new Container App based on the specifications in the YAML file, which includes an existing image and additional Container App properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    yamlConfigPath: simple-image-container-app.yaml\n```\n\n----------------------------------------\n\nTITLE: Docker v2 Task Configuration for Azure Pipelines 2020\nDESCRIPTION: YAML configuration for the Docker@2 task in Azure Pipelines 2020. Includes options for building, pushing, and logging in/out, but lacks container management commands present in later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker v2\n# Build or push Docker images, login or logout, or run a Docker command.\n- task: Docker@2\n  inputs:\n  # Container Repository\n    #containerRegistry: # string. Container registry. \n    #repository: # string. Optional. Use when command != login && command != logout. Container repository. \n  # Commands\n    command: 'buildAndPush' # 'buildAndPush' | 'build' | 'push' | 'login' | 'logout'. Required. Command. Default: buildAndPush.\n    Dockerfile: '**/Dockerfile' # string. Required when command = build || command = buildAndPush. Dockerfile. Default: **/Dockerfile.\n    #buildContext: '**' # string. Optional. Use when command = build || command = buildAndPush. Build context. Default: **.\n    #tags: '$(Build.BuildId)' # string. Optional. Use when command = build || command = push || command = buildAndPush. Tags. Default: $(Build.BuildId).\n    #arguments: # string. Optional. Use when command != login && command != logout && command != buildAndPush. Arguments. \n    #addPipelineData: true # boolean. Add Pipeline metadata to image(s). Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Tool Installer in Azure Pipelines YAML\nDESCRIPTION: This code snippet shows the YAML syntax for using the JavaToolInstaller@1 task to acquire a specific version of Java and set JAVA_HOME in an Azure Pipeline. It includes all available configuration options for different sources of Java.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Java tool installer v1\n# Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME.\n- task: JavaToolInstaller@1\n  inputs:\n    versionSpec: '8' # string. Required. JDK version. Default: 8.\n    jdkArchitectureOption: # 'x64' | 'x86'. Required. JDK architecture. \n    jdkSourceOption: # 'AzureStorage' | 'LocalDirectory' | 'PreInstalled'. Required. JDK source. \n    #jdkFile: # string. Required when jdkSourceOption == LocalDirectory. JDK file. \n    #azureResourceManagerEndpoint: # string. Required when jdkSourceOption == AzureStorage. Azure subscription. \n    #azureStorageAccountName: # string. Required when jdkSourceOption == AzureStorage. Storage account name. \n    #azureContainerName: # string. Required when jdkSourceOption == AzureStorage. Container name. \n    #azureCommonVirtualFile: # string. Required when jdkSourceOption == AzureStorage. Common virtual path. \n    #jdkDestinationDirectory: # string. Required when jdkSourceOption != PreInstalled. Destination directory. \n    #azureResourceGroupName: # string. Optional. Use when jdkSourceOption == AzureStorage. Resource Group name. \n    #cleanDestinationDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Clean destination directory. Default: true.\n    #createExtractDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Create directory for extracting. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Registry Secret in Kubernetes using YAML\nDESCRIPTION: This example shows how to create a Docker registry secret in Kubernetes using the Kubernetes Manifest task. It uses a Docker Registry service connection to authenticate with the registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Create secret\n  inputs: \n    action: createSecret\n    secretType: dockerRegistry\n    secretName: foobar\n    dockerRegistryEndpoint: demoACR\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Multi-Stage Sequential Pipeline Configuration\nDESCRIPTION: Example showing three sequential stages in a pipeline, with the middle stage running two parallel jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: Build\n  jobs:\n  - job: BuildJob\n    steps:\n    - script: echo Building!\n- stage: Test\n  jobs:\n  - job: TestOnWindows\n    steps:\n    - script: echo Testing on Windows!\n  - job: TestOnLinux\n    steps:\n    - script: echo Testing on Linux!\n- stage: Deploy\n  jobs:\n  - job: Deploy\n    steps:\n    - script: echo Deploying the code!\n```\n\n----------------------------------------\n\nTITLE: Executing Azure CLI Commands in Azure DevOps Pipeline (YAML)\nDESCRIPTION: This snippet demonstrates how to use the AzureCLI@2 task to run Azure CLI commands in a pipeline. It shows the configuration to list the Azure CLI version and get subscription details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureCLI@2\n  displayName: Azure CLI\n  inputs:\n    azureSubscription: <Name of the Azure Resource Manager service connection>\n    scriptType: ps\n    scriptLocation: inlineScript\n    inlineScript: |\n      az --version\n      az account show\n```\n\n----------------------------------------\n\nTITLE: Deploy Using Existing Container Image\nDESCRIPTION: Creates a new Container App using an existing published container image without building a new image\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    imageToDeploy: mcr.microsoft.com/<existing-image>:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure PowerShell v3 Task in YAML\nDESCRIPTION: YAML configuration for the AzurePowerShell@3 task. This snippet shows the available input parameters and their default values for running PowerShell scripts in an Azure environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure PowerShell v3\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@3\n  inputs:\n    #azureConnectionType: 'ConnectedServiceNameARM' # 'ConnectedServiceName' | 'ConnectedServiceNameARM'. Alias: ConnectedServiceNameSelector. Azure Connection Type. Default: ConnectedServiceNameARM.\n    #azureClassicSubscription: # string. Alias: ConnectedServiceName. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Classic Subscription. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. Azure Subscription. \n    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n  # Azure PowerShell version options\n    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version.\n```\n\n----------------------------------------\n\nTITLE: Combining Variable Types in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to combine different types of variables (hard-coded, variable groups) using sequence syntax in Azure Pipelines YAML. This approach provides flexibility in variable definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: MY_VARIABLE           # hard-coded value\n  value: some value\n- group: my-variable-group-1  # variable group\n- group: my-variable-group-2  # another variable group\n```\n\n----------------------------------------\n\nTITLE: Implementing Manual Validation Task in Azure Pipelines YAML (Current Version)\nDESCRIPTION: YAML configuration for the Manual validation task in the latest Azure Pipelines version. This task pauses pipeline execution until manual validation is provided, with options to notify users, provide instructions, and define timeout behavior.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/manual-validation-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Manual validation v0\n# Pause a pipeline run to wait for manual interaction. Works only with YAML pipelines.\n- task: ManualValidation@0\n  inputs:\n    notifyUsers: # string. Required. Notify users. \n    #instructions: # string. Instructions. \n    #onTimeout: 'reject' # 'reject' | 'resume'. On timeout. Default: reject.\n```\n\n----------------------------------------\n\nTITLE: Baking Kubernetes Manifests from Docker Compose with Kompose in YAML\nDESCRIPTION: This example shows how to bake Kubernetes manifests from a Docker Compose file using Kompose and then deploy them. It uses the Kubernetes Manifest task for both baking and deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Docker Compose\n  inputs:\n    action: bake\n    renderType: kompose\n    dockerComposeFile: docker-compose.yaml\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n```\n\n----------------------------------------\n\nTITLE: Combining Variable Groups with Inline Variables in Azure Pipelines\nDESCRIPTION: Example showing how to use both a variable group and variables defined directly in the pipeline YAML. This combines centrally managed variables with pipeline-specific ones.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-group.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n- name: my-bare-variable\n  value: 'value of my-bare-variable'\n```\n\n----------------------------------------\n\nTITLE: Configuring ServiceFabricDeploy Task in YAML\nDESCRIPTION: This YAML snippet shows the full configuration schema for the ServiceFabricDeploy@1 task. It includes all possible input parameters for deploying a Service Fabric application, covering basic settings, advanced options, upgrade configurations, and Docker-related settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Service Fabric application deployment v1\n# Deploy an Azure Service Fabric application to a cluster.\n- task: ServiceFabricDeploy@1\n  inputs:\n    applicationPackagePath: # string. Required. Application Package. \n    serviceConnectionName: # string. Required. Cluster Service Connection. \n    #publishProfilePath: # string. Publish Profile. \n    #applicationParameterPath: # string. Application Parameters. \n    #overrideApplicationParameter: false # boolean. Override Application Parameters. Default: false.\n  # Advanced Settings\n    #compressPackage: false # boolean. Compress Package. Default: false.\n    #copyPackageTimeoutSec: # string. CopyPackageTimeoutSec. \n    #registerPackageTimeoutSec: # string. RegisterPackageTimeoutSec. \n    overwriteBehavior: 'SameAppTypeAndVersion' # 'Always' | 'Never' | 'SameAppTypeAndVersion'. Required. Overwrite Behavior. Default: SameAppTypeAndVersion.\n    #skipUpgradeSameTypeAndVersion: false # boolean. Skip upgrade for same Type and Version. Default: false.\n    #skipPackageValidation: false # boolean. Skip package validation. Default: false.\n  # Upgrade Settings\n    #useDiffPackage: false # boolean. Use Diff Package. Default: false.\n    #overridePublishProfileSettings: false # boolean. Override All Publish Profile Upgrade Settings. Default: false.\n    #isUpgrade: true # boolean. Optional. Use when overridePublishProfileSettings = true. Upgrade the Application. Default: true.\n    #unregisterUnusedVersions: true # boolean. Unregister Unused Versions. Default: true.\n    #upgradeMode: 'Monitored' # 'Monitored' | 'UnmonitoredAuto' | 'UnmonitoredManual'. Required when overridePublishProfileSettings = true && isUpgrade = true. Upgrade Mode. Default: Monitored.\n    #FailureAction: 'Rollback' # 'Rollback' | 'Manual'. Required when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. FailureAction. Default: Rollback.\n    #UpgradeReplicaSetCheckTimeoutSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true. UpgradeReplicaSetCheckTimeoutSec. \n    #TimeoutSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true. TimeoutSec. \n    #ForceRestart: false # boolean. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true. ForceRestart. Default: false.\n    #HealthCheckRetryTimeoutSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. HealthCheckRetryTimeoutSec. \n    #HealthCheckWaitDurationSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. HealthCheckWaitDurationSec. \n    #HealthCheckStableDurationSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. HealthCheckStableDurationSec. \n    #UpgradeDomainTimeoutSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. UpgradeDomainTimeoutSec. \n    #ConsiderWarningAsError: false # boolean. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. ConsiderWarningAsError. Default: false.\n    #DefaultServiceTypeHealthPolicy: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. DefaultServiceTypeHealthPolicy. \n    #MaxPercentUnhealthyDeployedApplications: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. MaxPercentUnhealthyDeployedApplications. \n    #UpgradeTimeoutSec: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. UpgradeTimeoutSec. \n    #ServiceTypeHealthPolicyMap: # string. Optional. Use when overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored. ServiceTypeHealthPolicyMap. \n  # Docker Settings\n    #configureDockerSettings: false # boolean. Configure Docker settings. Default: false.\n    #registryCredentials: 'AzureResourceManagerEndpoint' # 'AzureResourceManagerEndpoint' | 'ContainerRegistryEndpoint' | 'UsernamePassword'. Required when configureDockerSettings = true. Registry Credentials Source. Default: AzureResourceManagerEndpoint.\n    #dockerRegistryConnection: # string. Alias: dockerRegistryEndpoint. Required when configureDockerSettings = true && registryCredentials = ContainerRegistryEndpoint. Docker Registry Service Connection. \n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Required when configureDockerSettings = true && registryCredentials = AzureResourceManagerEndpoint. Azure subscription. \n    #registryUserName: # string. Optional. Use when configureDockerSettings = true && registryCredentials = UsernamePassword. Registry User Name. \n    #registryPassword: # string. Optional. Use when configureDockerSettings = true && registryCredentials = UsernamePassword. Registry Password. \n    #passwordEncrypted: true # boolean. Optional. Use when configureDockerSettings = true && registryCredentials = UsernamePassword. Password Encrypted. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Visual Studio Test Agent Deployment in YAML\nDESCRIPTION: YAML syntax for the DeployVisualStudioTestAgent@2 task, specifying parameters for deploying Visual Studio test agents to target machines. Includes options for machine configuration, authentication, and test agent settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/deploy-visual-studio-test-agent-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Visual Studio test agent deployment v2\n# DeployVisualStudioTestAgent@2 is deprecated. Use the Visual Studio Test task to run unit and functional tests.\n- task: DeployVisualStudioTestAgent@2\n  inputs:\n  # Test Machines\n    testMachines: # string. Required. Machines. \n    adminUserName: # string. Required. Admin login. \n    adminPassword: # string. Required. Admin password. \n    winRmProtocol: 'Http' # 'Http' | 'Https'. Required. Protocol. Default: Http.\n    #testCertificate: true # boolean. Optional. Use when winRmProtocol = Https. Test Certificate. Default: true.\n  # Agent Configuration\n    machineUserName: # string. Required. Username. \n    machinePassword: # string. Required. Password. \n    #runAsProcess: false # boolean. Run UI tests. Default: false.\n    #isDataCollectionOnly: false # boolean. Enable data collection only. Default: false.\n  # Advanced\n    #testPlatform: '14.0' # '15.0' | '14.0'. Test agent version. Default: 14.0.\n    #agentLocation: # string. Test agent location. \n    #updateTestAgent: false # boolean. Update test agent. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Building a .NET Core project with DotNetCoreCLI task\nDESCRIPTION: This YAML snippet demonstrates building a .NET Core project using the `DotNetCoreCLI@2` task in Azure Pipelines. The `command` input is set to `'build'` to execute the build command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n# Build project\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'build'\n\n```\n\n----------------------------------------\n\nTITLE: Go Task Example in YAML\nDESCRIPTION: This YAML snippet provides an example of how to use the Go@0 task within an Azure Pipelines workflow. It defines variables for Go environment setup, uses the GoTool task to select a Go version, and then uses the Go@0 task to execute 'go get' and 'go build' commands with specified arguments. Finally, it archives and publishes the build artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/go-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n```yml\nvariables:\n  GOBIN:  '$(GOPATH)/bin' # Go binaries path\n  GOROOT: '/usr/local/go1.11' # Go installation path\n  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path\n  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code\n\nsteps:\n- task: GoTool@0\n  displayName: 'Use Go 1.10'\n\n- task: Go@0\n  displayName: 'go get'\n  inputs:\n    arguments: '-d'\n\n- task: Go@0\n  displayName: 'go build'\n  inputs:\n    command: build\n    arguments: '-o \"$(System.TeamProject).exe\"'\n\n- task: ArchiveFiles@2\n  displayName: 'Archive files'\n  inputs:\n    rootFolderOrFile: '$(Build.Repository.LocalPath)'\n    includeRootFolder: False\n\n- task: PublishBuildArtifacts@1\n  displayName: 'Publish artifact'\n  condition: succeededOrFailed()\n```\n```\n\n----------------------------------------\n\nTITLE: NuGet Authenticate Task Syntax (Azure Pipelines 2022)\nDESCRIPTION: Configures NuGet tools to authenticate with Azure Artifacts and other NuGet repositories, requiring NuGet >= 4.8.5385, dotnet >= 6, or MSBuild >= 15.8.166.59604. This snippet shows the YAML syntax for the NuGetAuthenticate@1 task in Azure Pipelines 2022, highlighting configurable inputs such as service connections and credential provider reinstallation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\"# NuGet authenticate v1\n# Configure NuGet tools to authenticate with Azure Artifacts and other NuGet repositories. Requires NuGet >= 4.8.5385, dotnet >= 6, or MSBuild >= 15.8.166.59604.\n- task: NuGetAuthenticate@1\n  inputs:\n    #nuGetServiceConnections: # string. Service connection credentials for feeds outside this organization. \n    #forceReinstallCredentialProvider: false # boolean. Reinstall the credential provider even if already installed. Default: false.\"\n```\n\n----------------------------------------\n\nTITLE: Setting Package or Folder for Azure Spring Apps Deployment\nDESCRIPTION: Specifies the file path to the package or folder containing the Azure Spring Apps app contents. Supports variables and wildcards. This is an optional string input used when Action is Deploy and DeploymentType is Artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nPackage: \"$(System.DefaultWorkingDirectory)/**/*.jar\" # Optional. Use when Action = Deploy && DeploymentType = Artifacts\n```\n\n----------------------------------------\n\nTITLE: Defining runOnce Deployment Strategy in Azure Pipelines YAML\nDESCRIPTION: Complete YAML syntax for the runOnce deployment strategy showing all available properties including preDeploy, deploy, routeTraffic, postRouteTraffic, and on hooks (failure/success).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-run-once.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrunOnce:\n  preDeploy: # Pre deploy hook for runOnce deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where pre deploy steps will run.\n  deploy: # Deploy hook for runOnce deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where deploy steps will run.\n  routeTraffic: # Route traffic hook for runOnce deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where route traffic steps will run.\n  postRouteTraffic: # Post route traffic hook for runOnce deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where post route traffic steps will run.\n  on: # On success or failure hook for runOnce deployment strategy.\n    failure: # Runs on failure of any step.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where post on failure steps will run.\n    success: # Runs on success of all of the steps.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: NuGet Configuration for External Feeds Authentication\nDESCRIPTION: This XML snippet shows a nuget.config file configured to authenticate with Azure Artifacts feeds both within and outside the organization, as well as with third-party repositories.  It relies on service connections configured in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n\"<configuration>\n  <packageSources>\n    <!-- Any Azure Artifacts feeds within your organization will automatically be authenticated -->\n    <add key=\\\"MyProjectFeed1\\\" value=\\\"https://pkgs.dev.azure.com/{organization}/{project}/_packaging/{feed}/nuget/v3/index.json\\\" />\n    <add key=\\\"MyOrganizationFeed\\\" value=\\\"https://pkgs.dev.azure.com/{organization}/_packaging/{feed}/nuget/v3/index.json\\\" />\n    <!-- Any package source listed here whose URL matches the URL of a service connection in nuGetServiceConnections will also be authenticated.\n         The key name here does not need to match the name of the service connection. -->\n    <add key=\\\"OtherOrganizationFeed\\\" value=\\\"https://pkgs.dev.azure.com/{otherorganization}/_packaging/{feed}/nuget/v3/index.json\\\" />\n    <add key=\\\"ThirdPartyRepository\\\" value=\\\"https://{thirdPartyRepository}/index.json\\\" />\n  </packageSources>\n</configuration>\"\n```\n\n----------------------------------------\n\nTITLE: NuGet Authenticate Task with dotnet CLI in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the NuGetAuthenticate task with dotnet CLI to restore and push NuGet packages. It includes configuring service connections for feeds in other organizations or third-party repositories. It uses UseDotNet@2 to specify the .NET SDK.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: OtherOrganizationFeedConnection, ThirdPartyRepositoryConnection\n- task: UseDotNet@2 # Optional if the .NET Core SDK is already installed\n- script: dotnet restore\n# ...\n- script: dotnet nuget push --api-key AzureArtifacts --source https://pkgs.dev.azure.com/{organization}/_packaging/{feed1}/nuget/v3/index.json MyProject.*.nupkg\"\n```\n\n----------------------------------------\n\nTITLE: Baking and Deploying Helm Charts in Kubernetes using YAML\nDESCRIPTION: This example shows how to bake Kubernetes manifests from a Helm chart and then deploy them. It uses two Kubernetes Manifest tasks: one for baking and another for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Helm chart\n  inputs:\n    action: bake\n    helmChart: charts/sample\n    overrides: 'image.repository:nginx'\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n    manifests: $(bake.manifestsBundle)\n    containers: |\n      nginx: 1.7.9\n```\n\n----------------------------------------\n\nTITLE: Pool Definition with Single Demand\nDESCRIPTION: Pool configuration with a single capability demand to ensure specific software or capabilities are present on the agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: Default\n  demands: SpecialSoftware\n```\n\n----------------------------------------\n\nTITLE: Bash Step Syntax for Azure Pipelines 2022+\nDESCRIPTION: YAML schema definition for the bash step in Azure Pipelines 2022 or newer. This snippet shows all available properties for configuring a bash script execution within a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-bash.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- bash: string # Required as first property. An inline script.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Install Helm Chart with Command `install` - YAML\nDESCRIPTION: This YAML demonstrates the Helm `install` command to deploy a Helm chart located in a specified path. It includes inputs like the chart file path, Azure subscription, resource group, and cluster information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm install\n  inputs:\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureResourceGroup: $(azureResourceGroup)\n    kubernetesCluster: $(kubernetesCluster)\n    command: install\n    chartType: FilePath\n    chartPath: Application/charts/sampleapp\n```\n\n----------------------------------------\n\nTITLE: Building and Testing with Dockerfile in .NET\nDESCRIPTION: This Dockerfile sets up a build environment for .NET apps, running tests inside the container and copying the results as a .trx file. The process includes restoring dependencies, building, and testing .NET projects, and finally publishing the application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: Dockerfile\nCODE:\n```\n# Build and run tests inside the docker container\nFROM mcr.microsoft.com/dotnet/sdk:2.1\nWORKDIR /app\n# copy the contents of agent working directory on host to workdir in container\nCOPY . ./\n# dotnet commands to build, test, and publish\nRUN dotnet restore\nRUN dotnet build -c Release\nRUN dotnet test dotnetcore-tests/dotnetcore-tests.csproj -c Release --logger \"trx;LogFileName=testresults.trx\"\nRUN dotnet publish -c Release -o out\nENTRYPOINT dotnet dotnetcore-sample/out/dotnetcore-sample.dll\n```\n\n----------------------------------------\n\nTITLE: Deploying a Web Application to Azure App Service using YAML\nDESCRIPTION: This YAML snippet demonstrates how to deploy a web application to an Azure Web App Service running on Windows. It specifies the Azure subscription, app name, and package location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  azureSubscription: Contoso\n  # To ignore SSL error uncomment the below variable\n  # VSTS_ARM_REST_IGNORE_SSL_ERRORS: true\n\nsteps:\n\n- task: AzureWebApp@1\n  displayName: Azure Web App Deploy\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: samplewebapp\n    package: $(System.DefaultWorkingDirectory)/**/*.zip\n```\n\n----------------------------------------\n\nTITLE: Installing SSH Key in Azure Pipelines (2020.1+)\nDESCRIPTION: YAML syntax for the InstallSSHKey@0 task for Azure Pipelines version 2020.1 and later. This configuration includes advanced options for SSH config entries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Install SSH key v0\n# Install an SSH key prior to a build or deployment.\n- task: InstallSSHKey@0\n  inputs:\n    knownHostsEntry: # string. Alias: hostName. Required. Known Hosts Entry. \n    #sshPublicKey: # string. SSH Public Key. \n    #sshPassphrase: # string. SSH Passphrase. \n    sshKeySecureFile: # string. Required. SSH Key. \n  # Advanced\n    #addEntryToConfig: false # boolean. Add entry to SSH config. Default: false.\n    #configHostAlias: # string. Required when addEntryToConfig = true. Alias. \n    #configHostname: # string. Required when addEntryToConfig = true. Host name. \n    #configUser: # string. Optional. Use when addEntryToConfig = true. User. \n    #configPort: # string. Optional. Use when addEntryToConfig = true. Port.\n```\n\n----------------------------------------\n\nTITLE: Enabling Code Quality Analysis Tools\nDESCRIPTION: Configuration options to run static code analysis tools including Checkstyle and FindBugs. Results from these tools are uploaded as build artifacts for review.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ncheckStyleRunAnalysis: true\nfindBugsRunAnalysis: true\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters in Azure Pipelines YAML\nDESCRIPTION: Basic syntax for defining pipeline parameters with required properties. Parameters define values that can be passed to a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/parameters-parameter.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: string # Required as first property.\n  displayName: string # Human-readable name for the parameter.\n  type: string\n  default: string | parameters | [ parameters ]\n  values: [ string ]\n```\n\n----------------------------------------\n\nTITLE: Pushing NuGet packages to external feed with .NET Core CLI in YAML\nDESCRIPTION: This example shows how to push all NuGet packages from a build to an external feed using the DotNetCoreCLI task. It uses an external service connection to authenticate with the NuGet feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n# Push all NuGet packages from a build to external Feed\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'push'\n    nugetFeedType: 'external'\n    externalEndPoint: 'MyNuGetServiceConnection'\n```\n\n----------------------------------------\n\nTITLE: Defining DownloadPackage Task in YAML for Azure Artifacts\nDESCRIPTION: This YAML snippet demonstrates how to configure the DownloadPackage@1 task in Azure Pipelines. The task facilitates downloading a package from a package management feed in Azure Artifacts, supporting various package types like nuget, maven, npm, etc. Key parameters include packageType, feed, definition (package), version, and downloadPath. The snippet shows the default configuration for packageType as 'nuget' and downloadPath as $(System.ArtifactsDirectory).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-package-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Download package v1\n# Download a package from a package management feed in Azure Artifacts.\n- task: DownloadPackage@1\n  inputs:\n    packageType: 'nuget' # 'maven' | 'npm' | 'nuget' | 'pypi' | 'upack' | 'cargo'. Required. Package Type. Default: nuget.\n    feed: # string. Required. Feed. \n    #view: # string. View. \n    definition: # string. Required. Package. \n    version: # string. Required. Version. \n    downloadPath: '$(System.ArtifactsDirectory)' # string. Required. Destination directory. Default: $(System.ArtifactsDirectory).\n  # Advanced\n    #files: '**' # string. Optional. Use when packageType = maven || packageType = pypi || packageType = upack. Files. Default: **.\n    #extract: true # boolean. Optional. Use when packageType = nuget || packageType = npm. Extract package contents. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Azure PowerShell v5 Task Configuration (2022.1+)\nDESCRIPTION: YAML configuration schema for Azure PowerShell v5 task in Azure Pipelines version 2022.1 and above. Includes all available parameters for configuring PowerShell script execution in an Azure environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v5.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure PowerShell v5\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@5\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n  # Azure PowerShell version options\n    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. \n  # Advanced\n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #validateScriptSignature: false # boolean. Optional. Use when ScriptType = FilePath. Validate script signature. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Queuing a Jenkins Job in Azure Pipelines YAML\nDESCRIPTION: Configures a task to queue a job on a Jenkins server with required service endpoint and job name. Supports capturing console output and handling parameterized jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-queue-job-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: JenkinsQueueJob@1\n  inputs:\n    serverEndpoint: # string. Required. Jenkins service endpoint. \n    jobName: # string. Required. Job name. \n    #isMultibranchJob: false # boolean. Job is of Multibranch Pipeline type. Default: false.\n    #multibranchPipelineBranch: # string. Required when isMultibranchJob = true. Multibranch Pipeline Branch. \n    #captureConsole: true # boolean. Capture console output and wait for completion. Default: true.\n    #capturePipeline: true # boolean. Optional. Use when captureConsole = true. Capture pipeline output and wait for pipeline completion. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Defining Command Line v2 Task in YAML\nDESCRIPTION: YAML syntax for configuring the Command Line v2 task in Azure Pipelines. Specifies required and optional inputs for running command line scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cmd-line-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Command Line v2\n# Run a command line script using Bash on Linux and macOS and cmd.exe on Windows.\n- task: CmdLine@2\n  inputs:\n    script: # string. Required. Script. \n  # Advanced\n    #workingDirectory: # string. Working Directory. \n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Minimal Build Application Image for Container App\nDESCRIPTION: Creates a new Container App using an automatically built image from the provided application source path, pushing to an Azure Container Registry\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Deployment using YAML\nDESCRIPTION: This snippet demonstrates how to delete a Kubernetes deployment using the Kubernetes Manifest task. It specifies the deployment name to be deleted.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Delete\n  inputs:\n    action: delete\n    arguments: deployment expressapp\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Disabling CI Triggers in Azure DevOps YAML Pipelines\nDESCRIPTION: Uses the 'none' keyword to disable continuous integration triggers completely, preventing any automatic builds when code is pushed to the repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/trigger.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger: none # will disable CI builds entirely\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Security Initialize CodeQL Task in YAML\nDESCRIPTION: YAML syntax for configuring the AdvancedSecurity-Codeql-Init@1 task in Azure Pipelines. This task initializes the CodeQL database for code analysis, with options for language selection, query suite, build mode, and advanced settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-codeql-init-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Advanced Security Initialize CodeQL v1\n# Initializes the CodeQL database in preparation for building.\n- task: AdvancedSecurity-Codeql-Init@1\n  inputs:\n    #enableAutomaticCodeQLInstall: false # boolean. Enable automatic CodeQL detection and installation. Default: false.\n    #languages: # 'csharp' | 'cpp' | 'go' | 'java' | 'javascript' | 'python' | 'ruby' | 'swift'. Languages to analyze. \n    #querysuite: 'Select a query suite...' # 'Select a query suite...' | 'code-scanning' | 'security-extended' | 'security-experimental' | 'security-and-quality'. CodeQL Query Suite to use for analysis. Default: Select a query suite....\n    #buildtype: 'Manual' # 'Manual' | 'None'. Select build mode (manual vs none). Default: Manual.\n  # Advanced\n    #ram: # string. Options to control RAM usage in MB. \n    #threads: # string. Use this many threads to evaluate queries. \n    #codeqlpathstoignore: # string. Set a list of paths to exclude in the CodeQL analysis. \n    #codeqlpathstoinclude: # string. Set a list of additional paths to include in the CodeQL analysis. \n    #sourcesfolder: # string. Sets the folder that contains the sources to be analyzed. \n    #loglevel: '_' # '0' | '1' | '2' | '_'. Set the log level for the CodeQL analysis. Default: _.\n    #configfilepath: # string. Use this to enable custom query analysis in codeql (path must be absolute). \n    #codeqltoolsdirectory: # string. Set a custom CodeQL tools directory (path must be absolute).\n```\n\n----------------------------------------\n\nTITLE: Complete Webhook Resource Configuration with Filters Example\nDESCRIPTION: Example of subscribing to a webhook event using a defined webhook resource with filters. The example shows how to set up the webhook connection, add multiple filters based on the JSON payload, and access the webhook data in pipeline steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook-filters-filter.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  webhooks:\n    - webhook: MyWebhookTrigger          ### Webhook alias\n      connection: MyWebhookConnection    ### Incoming webhook service connection\n      filters:\n        - path: repositoryName      ### JSON path in the payload\n          value: maven-releases     ### Expected value in the path provided\n        - path: action\n          value: CREATED\nsteps:\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    ### JSON payload data is available in the form of ${{ parameters.<WebhookAlias>.<JSONPath>}}\n    script: |\n      Write-Host ${{ parameters.MyWebhookTrigger.repositoryName}}\n      Write-Host ${{ parameters.MyWebhookTrigger.component.group}}\n```\n\n----------------------------------------\n\nTITLE: Building Multiple .NET Core Projects/Solutions\nDESCRIPTION: This YAML snippet demonstrates building multiple .NET Core projects or solutions using the `DotNetCoreCLI@2` task in Azure Pipelines. The `projects` input specifies a list of project paths or solution files to build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n# Build multiple projects\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'build'\n    projects: |\n      src/proj1/proj1.csproj \n      src/proj2/proj2.csproj \n      src/other/other.sln    # Pass a solution instead of a csproj.\n\n```\n\n----------------------------------------\n\nTITLE: Service Fabric Compose Deploy Task YAML Configuration\nDESCRIPTION: YAML configuration schema for the ServiceFabricComposeDeploy@0 task. This task deploys Docker Compose applications to Azure Service Fabric clusters. It supports various registry authentication methods and deployment configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-compose-deploy-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Service Fabric Compose deploy v0\n# Deploy a Docker Compose application to an Azure Service Fabric cluster.\n- task: ServiceFabricComposeDeploy@0\n  inputs:\n    clusterConnection: # string. Alias: serviceConnectionName. Required. Cluster Service Connection. \n    composeFilePath: '**/docker-compose.yml' # string. Required. Compose File Path. Default: **/docker-compose.yml.\n    applicationName: 'fabric:/Application1' # string. Required. Application Name. Default: fabric:/Application1.\n  # Registry Settings\n    registryCredentials: 'AzureResourceManagerEndpoint' # 'AzureResourceManagerEndpoint' | 'ContainerRegistryEndpoint' | 'UsernamePassword' | 'None'. Required. Registry Credentials Source. Default: AzureResourceManagerEndpoint.\n    #dockerRegistryConnection: # string. Alias: dockerRegistryEndpointName. Optional. Use when registryCredentials = ContainerRegistryEndpoint. Docker Registry Service Connection. \n    azureSubscription: # string. Alias: azureSubscriptionEndpoint. Required when registryCredentials = AzureResourceManagerEndpoint. Azure subscription. \n    #registryUserName: # string. Optional. Use when registryCredentials = UsernamePassword. Registry User Name. \n    #registryPassword: # string. Optional. Use when registryCredentials = UsernamePassword. Registry Password. \n    #passwordEncrypted: true # boolean. Optional. Use when registryCredentials = UsernamePassword. Password Encrypted. Default: true.\n  # Advanced Settings\n    #upgrade: false # boolean. Upgrade. Default: false.\n    #deployTimeoutSec: # string. Deploy Timeout (s). \n    #removeTimeoutSec: # string. Remove Timeout (s). \n    #getStatusTimeoutSec: # string. Get Status Timeout (s).\n```\n\n----------------------------------------\n\nTITLE: Defining CodeQL Analysis Task Order in Azure Pipelines YAML\nDESCRIPTION: Specifies the required order of tasks for running CodeQL analysis in an Azure DevOps pipeline. The pipeline must initialize CodeQL, perform the build (using AutoBuild or custom tasks), and then run the CodeQL analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-codeql-init-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n1. Initialize CodeQL\n2. AutoBuild (or your custom build tasks)\n3. Perform CodeQL analysis\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure File Copy Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines the syntax for the AzureFileCopy@6 task, including all possible input parameters. It allows copying files to Azure Blob Storage or virtual machines, with options for authentication, destination selection, and various copy settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v6.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure file copy v6\n# Copy files to Azure Blob Storage or virtual machines.\n- task: AzureFileCopy@6\n  inputs:\n    SourcePath: # string. Required. Source. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. \n    storage: # string. Alias: StorageAccountRM. Required. RM Storage Account. \n    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. \n    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. \n    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when Destination = AzureVMs. Resource Group. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. \n    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. \n    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. \n    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. \n    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). \n    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). \n    #enableCopyPrerequisites: false # boolean. Optional. Use when Destination = AzureVMs. Enable Copy Prerequisites. Default: false.\n    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.\n    #CleanTargetBeforeCopy: false # boolean. Clean Target. Default: false.\n    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Function App Using YAML in Azure Pipelines\nDESCRIPTION: This YAML snippet illustrates deploying an Azure Function App on Windows using Azure Pipelines. It showcases setting variables for Azure subscription and the function app, and deploying a package. To deploy on Linux, the 'appType' should be set to 'functionAppLinux'. The deployment method can be specified with 'deploymentMethod'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  azureSubscription: Contoso\n  # To ignore SSL error, uncomment the below variable\n  # VSTS_ARM_REST_IGNORE_SSL_ERRORS: true\n\nsteps:\n- task: AzureFunctionApp@2\n  displayName: Azure Function App Deploy\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: samplefunctionapp\n    appType: functionApp\n    package: $(System.DefaultWorkingDirectory)/**/*.zip\n```\n\n----------------------------------------\n\nTITLE: Executing Inline Azure PowerShell Script in YAML Pipeline\nDESCRIPTION: This example shows how to run an inline PowerShell script using the AzurePowerShell@5 task in an Azure DevOps YAML pipeline. It specifies the Azure subscription, PowerShell version, script type as inline, and includes a simple script that writes messages to the console.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v5.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- task: AzurePowerShell@5\n  inputs:\n    azureSubscription: 'Azure subscription connection placeholder'\n    azurePowerShellVersion: LatestVersion\n    ScriptType: 'InlineScript'\n    Inline: |\n      # You can write your azure powershell scripts inline here. \n      # You can also pass predefined and custom variables to this script using arguments\n      Write-Host 'Hello'\n      Write-Host 'World!'\n```\n\n----------------------------------------\n\nTITLE: Download Pipeline Artifact Task YAML Definition\nDESCRIPTION: This YAML snippet defines the DownloadPipelineArtifact@1 task, illustrating how to configure it to download artifacts from a pipeline.  It includes various input parameters such as buildType, project, pipeline, and targetPath, demonstrating the task's flexibility in specifying the source and destination of the artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Download Pipeline Artifacts v1\n# Download a named artifact from a pipeline to a local path.\n- task: DownloadPipelineArtifact@1\n  inputs:\n    buildType: 'current' # 'current' | 'specific'. Required. Download artifacts produced by. Default: current.\n    #project: # string. Required when buildType == specific. Project. \n    #pipeline: # string. Alias: definition. Required when buildType == specific. Build pipeline. \n    #specificBuildWithTriggering: false # boolean. Optional. Use when buildType == specific. When appropriate, download artifacts from the triggering build. Default: false.\n    #buildVersionToDownload: 'latest' # 'latest' | 'latestFromBranch' | 'specific'. Required when buildType == specific. Build version to download. Default: latest.\n    #branchName: 'refs/heads/master' # string. Required when buildType == specific && buildVersionToDownload == latestFromBranch. Branch name. Default: refs/heads/master.\n    #pipelineId: # string. Alias: buildId. Required when buildType == specific && buildVersionToDownload == specific. Build. \n    #tags: # string. Optional. Use when buildType == specific && buildVersionToDownload != specific. Build Tags. \n    #artifactName: # string. Artifact name. \n    #itemPattern: '**' # string. Matching pattern. Default: **.\n    targetPath: '$(System.ArtifactsDirectory)' # string. Alias: downloadPath. Required. Destination directory. Default: $(System.ArtifactsDirectory).\n```\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Security Dependency Scanning Task in YAML\nDESCRIPTION: YAML configuration for the Advanced Security Dependency Scanning v1 task. This snippet shows the basic syntax and available inputs for the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-dependency-scanning-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Advanced Security Dependency Scanning v1\n# Scan for open source dependency vulnerabilities in your source code.\n- task: AdvancedSecurity-Dependency-Scanning@1\n  inputs:\n  # Advanced\n    #directoryExclusionList: # string. Directory exclusion list.\n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQube Analysis Preparation in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the SonarQubePrepare@6 task in an Azure Pipelines workflow. It sets up SonarQube analysis configuration with various options for different scanning modes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-prepare-v6.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Prepare Analysis Configuration v6\n# Prepare SonarQube analysis configuration.\n- task: SonarQubePrepare@6\n  inputs:\n    SonarQube: # string. Required. SonarQube Server Endpoint. \n    scannerMode: 'MSBuild' # 'MSBuild' | 'Other' | 'CLI'. Required. Choose the way to run the analysis. Default: MSBuild.\n    #msBuildVersion: # string. Optional. Use when scannerMode = MSBuild. Scanner MSBuild Version. \n    #cliVersion: # string. Optional. Use when scannerMode = CLI. Scanner CLI Version. \n    #configMode: 'file' # 'file' | 'manual'. Required when scannerMode = CLI. Mode. Default: file.\n    #configFile: 'sonar-project.properties' # string. Optional. Use when scannerMode = CLI && configMode = file. Settings File. Default: sonar-project.properties.\n    #cliProjectKey: # string. Required when scannerMode = CLI && configMode = manual. Project Key. \n    projectKey: # string. Required when scannerMode = MSBuild. Project Key. \n    #cliProjectName: # string. Optional. Use when scannerMode = CLI && configMode = manual. Project Name. \n    #projectName: # string. Optional. Use when scannerMode = MSBuild. Project Name. \n    #cliProjectVersion: '1.0' # string. Optional. Use when scannerMode = CLI && configMode = manual. Project Version. Default: 1.0.\n    #projectVersion: '1.0' # string. Optional. Use when scannerMode = MSBuild. Project Version. Default: 1.0.\n    #cliSources: '.' # string. Required when scannerMode = CLI && configMode = manual. Sources directory root. Default: ..\n  # Advanced\n    #extraProperties: # string. Additional Properties.\n```\n\n----------------------------------------\n\nTITLE: Referencing Stage Template in Main Pipeline YAML\nDESCRIPTION: Syntax for referencing a stage template in the main pipeline YAML file. It includes the template name and provided parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-template.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- template: string # name of template to include\n  parameters: { string: any } # provided parameters\n```\n\n----------------------------------------\n\nTITLE: Configuring HelmDeploy Task for Kubernetes Deployment in YAML Pipeline\nDESCRIPTION: This YAML snippet defines the configuration options for the HelmDeploy task that can deploy, configure, and update a Kubernetes cluster in Azure Container Service by running Helm commands. It includes sections for Kubernetes cluster connection, Azure Container Registry, Helm commands, TLS settings, and advanced options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Deploy, configure, update a Kubernetes cluster in Azure Container Service by running helm commands.\n- task: HelmDeploy@0\n  inputs:\n  # Kubernetes Cluster\n    #connectionType: 'Azure Resource Manager' # 'Azure Resource Manager' | 'Kubernetes Service Connection' | 'None'. Required when command != logout && command != package && command != save. Connection Type. Default: Azure Resource Manager.\n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Required when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Azure subscription. \n    #azureResourceGroup: # string. Required when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Resource group. \n    #kubernetesCluster: # string. Required when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Kubernetes cluster. \n    #useClusterAdmin: false # boolean. Optional. Use when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Use cluster admin credentials. Default: false.\n    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection && command != logout && command != package && command != save. Kubernetes Service Connection. \n    #namespace: # string. Optional. Use when command != logout && command != package && command != save. Namespace. \n  # Azure Container Registry\n    #azureSubscriptionForACR: # string. Alias: azureSubscriptionEndpointForACR. Required when command == save. Azure subscription for Container Registry. \n    #azureResourceGroupForACR: # string. Required when command == save. Resource group. \n    #azureContainerRegistry: # string. Required when command == save. Azure Container Registry. \n  # Commands\n    command: 'ls' # 'create' | 'delete' | 'expose' | 'get' | 'init' | 'install' | 'login' | 'logout' | 'ls' | 'package' | 'rollback' | 'save' | 'upgrade'. Required. Command. Default: ls.\n    #chartType: 'Name' # 'Name' | 'FilePath'. Required when command == install || command == upgrade. Chart Type. Default: Name.\n    chartName: # string. Required when chartType == Name. Chart Name. \n    #chartPath: # string. Required when chartType == FilePath || command == package. Chart Path. \n    #chartVersion: # string. Alias: version. Optional. Use when command == package || command == install || command == upgrade. Version. \n    #releaseName: # string. Optional. Use when command == install || command == upgrade. Release Name. \n    #overrideValues: # string. Optional. Use when command == install || command == upgrade. Set Values. \n    #valueFile: # string. Optional. Use when command == install || command == upgrade. Value File. \n    #destination: '$(Build.ArtifactStagingDirectory)' # string. Optional. Use when command == package. Destination. Default: $(Build.ArtifactStagingDirectory).\n    #canaryimage: false # boolean. Optional. Use when command == init. Use canary image version. Default: false.\n    #upgradetiller: true # boolean. Optional. Use when command == init. Upgrade Tiller. Default: true.\n    #updatedependency: false # boolean. Optional. Use when command == install || command == package. Update Dependency. Default: false.\n    #save: true # boolean. Optional. Use when command == package. Save. Default: true.\n    #install: true # boolean. Optional. Use when command == upgrade. Install if release not present. Default: true.\n    #recreate: false # boolean. Optional. Use when command == upgrade. Recreate Pods. Default: false.\n    #resetValues: false # boolean. Optional. Use when command == upgrade. Reset Values. Default: false.\n    #force: false # boolean. Optional. Use when command == upgrade. Force. Default: false.\n    #waitForExecution: true # boolean. Optional. Use when command == init || command == install || command == upgrade. Wait. Default: true.\n    #arguments: # string. Optional. Use when command != login && command != logout. Arguments. \n    #chartNameForACR: # string. Required when command == save. Chart Name For Azure Container Registry. \n    #chartPathForACR: # string. Required when command == save. Chart Path for Azure Container Registry. \n  # TLS\n    #enableTls: false # boolean. Optional. Use when command != login && command != logout && command != package && command != save. Enable TLS. Default: false.\n    #caCert: # string. Required when enableTls == true && command != login && command != logout && command != package && command != save. CA certificate. \n    #certificate: # string. Required when enableTls == true && command != login && command != logout && command != package && command != save. Certificate. \n    #privatekey: # string. Required when enableTls == true && command != login && command != logout && command != package && command != save. Key. \n  # Advanced\n    #tillernamespace: # string. Optional. Use when command != login && command != logout && command != package && command != save. Tiller namespace. \n    #failOnStderr: false # boolean. Optional. Use when command != login && command != logout && command != package && command != save. Fail on Standard Error. Default: false.\n    #publishPipelineMetadata: true # boolean. Optional. Use when command != login && command != logout && command != package && command != save. Publish pipeline metadata. Default: true.\n```\n\n----------------------------------------\n\nTITLE: GitHub Comment v0 Task Definition\nDESCRIPTION: This YAML snippet defines the structure of the GitHubComment@0 task, including the required inputs such as the GitHub connection and repository name. It also shows optional inputs like the ID of the GitHub issue/PR and the comment to be posted. The task is designed to be used within an Azure Pipeline to automate commenting on GitHub.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-comment-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# GitHub Comment v0\n# Write a comment to your GitHub entity i.e. issue or a pull request (PR).\n- task: GitHubComment@0\n  inputs:\n    gitHubConnection: # string. Required. GitHub connection (OAuth or PAT). \n    repositoryName: '$(Build.Repository.Name)' # string. Required. Repository. Default: $(Build.Repository.Name).\n    #id: # string. ID of the github pr/issue. \n    #comment: # string. Comment.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Azure Functions Deploy YAML Configuration (Azure Pipelines 2022.1-2022.2)\nDESCRIPTION: YAML configuration for deploying applications to Azure Functions in Azure Pipelines versions 2022.1-2022.2. Shows supported runtime stacks and deployment options for that version range.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Functions Deploy v2\n# Update a function app with .NET, Python, JavaScript, PowerShell, Java based web applications.\n- task: AzureFunctionApp@2\n  inputs:\n    connectedServiceNameARM: # string. Alias: azureSubscription. Required. Azure Resource Manager connection. \n    appType: # 'functionApp' | 'functionAppLinux'. Required. App type. \n    appName: # string. Required. Azure Functions App name. \n    #deployToSlotOrASE: false # boolean. Optional. Use when appType != \"\". Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #runtimeStack: # 'DOTNET|2.2' | 'DOTNET|3.1' | 'DOTNET|6.0' | 'DOTNET-ISOLATED|7.0' | 'JAVA|8' | 'JAVA|11' | 'NODE|8' | 'NODE|10' | 'NODE|12' | 'NODE|14' | 'NODE|16' | 'NODE|18' | 'PYTHON|3.6' | 'PYTHON|3.7' | 'PYTHON|3.8' | 'PYTHON|3.9' | 'PYTHON|3.10'. Optional. Use when appType = functionAppLinux. Runtime stack. \n  # Application and Configuration Settings\n    #appSettings: # string. App settings. \n  # Additional Deployment Options\n    #deploymentMethod: 'auto' # 'auto' | 'zipDeploy' | 'runFromPackage'. Required when appType != \"\" && package NotEndsWith .war && Package NotEndsWith .jar. Deployment method. Default: auto.\n```\n\n----------------------------------------\n\nTITLE: Authenticate with Azure Artifacts Feeds\nDESCRIPTION: Example showing how to authenticate pip with private Azure Artifacts feeds without consulting the official Python registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PipAuthenticate@1\n  displayName: 'Pip Authenticate'\n  inputs:\n    # Provide list of feed names which you want to authenticate.\n    # Project scoped feeds must include the project name in addition to the feed name.\n    artifactFeeds: 'project1/myTestFeed1, myTestFeed2'\n\n# Use command line tool to 'pip install'.\n- script: |\n    pip install HelloTestPackage\n```\n\n----------------------------------------\n\nTITLE: Matrix Strategy Basic Syntax\nDESCRIPTION: Basic YAML structure for defining a matrix strategy with maxParallel option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-strategy.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix: { string1: { string2: string3 } }\n  maxParallel: number\n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQubeAnalyze Task in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to configure the SonarQubeAnalyze@6 task in an Azure Pipeline. It specifies the task name, version, and input for JDK version selection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-analyze-v6.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Run Code Analysis v6\n# Run scanner and upload the results to the SonarQube server.\n- task: SonarQubeAnalyze@6\n  inputs:\n    jdkversion: 'JAVA_HOME_17_X64' # 'JAVA_HOME' | 'JAVA_HOME_17_X64' | 'JAVA_HOME_21_X64'. Required. JDK version source for analysis. Default: JAVA_HOME_17_X64.\n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQube Analysis in Azure Pipelines YAML\nDESCRIPTION: YAML snippet for configuring the SonarQubePrepare@7 task to prepare SonarQube analysis. It specifies required inputs like SonarQube server endpoint and analysis mode, as well as optional configuration parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-prepare-v7.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Prepare Analysis Configuration v7\n# Prepare SonarQube Server analysis configuration.\n- task: SonarQubePrepare@7\n  inputs:\n    SonarQube: # string. Required. SonarQube Server Endpoint. \n    scannerMode: 'dotnet' # 'dotnet' | 'cli' | 'other'. Required. Choose the way to run the analysis. Default: dotnet.\n    #msBuildVersion: # string. Alias: dotnetScannerVersion. Optional. Use when scannerMode = dotnet. .NET Scanner Version. \n    #cliVersion: # string. Alias: cliScannerVersion. Optional. Use when scannerMode = cli. Scanner CLI Version. \n    #configMode: 'file' # 'file' | 'manual'. Required when scannerMode = cli. Mode. Default: file.\n    #configFile: 'sonar-project.properties' # string. Optional. Use when scannerMode = cli && configMode = file. Settings File. Default: sonar-project.properties.\n    #cliProjectKey: # string. Required when scannerMode = cli && configMode = manual. Project Key. \n    projectKey: # string. Required when scannerMode = dotnet. Project Key. \n    #cliProjectName: # string. Optional. Use when scannerMode = cli && configMode = manual. Project Name. \n    #projectName: # string. Optional. Use when scannerMode = dotnet. Project Name. \n    #cliProjectVersion: '1.0' # string. Optional. Use when scannerMode = cli && configMode = manual. Project Version. Default: 1.0.\n    #projectVersion: '1.0' # string. Optional. Use when scannerMode = dotnet. Project Version. Default: 1.0.\n    #cliSources: '.' # string. Required when scannerMode = cli && configMode = manual. Sources directory root. Default: ..\n  # Advanced\n    #extraProperties: # string. Additional Properties.\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Requirements Table\nDESCRIPTION: Markdown table defining key requirements for Azure Pipelines, including supported pipeline types, runs, demands, capabilities, and agent specifications\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-prepare-v7.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  3.218.0 or greater |\n| Task category | Build |\n```\n\n----------------------------------------\n\nTITLE: Configuring DockerCompose@0 Task in Azure Pipelines YAML\nDESCRIPTION: YAML schema for configuring the DockerCompose@0 task. This task allows building, pushing, or running multi-container Docker applications using Docker Compose. It supports various actions like building services, pushing images, running services, and executing Docker Compose commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Docker Compose v0\n# Build, push or run multi-container Docker applications. Task can be used with Docker or Azure Container registry.\n- task: DockerCompose@0\n  inputs:\n    containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Container Registry'. Required. Container Registry Type. Default: Azure Container Registry.\n    #dockerRegistryEndpoint: # string. Optional. Use when containerregistrytype = Container Registry. Docker Registry Service Connection. \n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Optional. Use when containerregistrytype = Azure Container Registry. Azure subscription. \n    #azureContainerRegistry: # string. Optional. Use when containerregistrytype = Azure Container Registry. Azure Container Registry. \n    dockerComposeFile: '**/docker-compose.yml' # string. Required. Docker Compose File. Default: **/docker-compose.yml.\n    #additionalDockerComposeFiles: # string. Additional Docker Compose Files. \n    #dockerComposeFileArgs: # string. Environment Variables. \n    #projectName: '$(Build.Repository.Name)' # string. Project Name. Default: $(Build.Repository.Name).\n    #qualifyImageNames: true # boolean. Qualify Image Names. Default: true.\n    action: 'Run a Docker Compose command' # 'Build services' | 'Push services' | 'Run services' | 'Run a specific service' | 'Lock services' | 'Write service image digests' | 'Combine configuration' | 'Run a Docker Compose command'. Required. Action. Default: Run a Docker Compose command.\n    #additionalImageTags: # string. Optional. Use when action = Build services || action = Push services. Additional Image Tags. \n    #includeSourceTags: false # boolean. Optional. Use when action = Build services || action = Push services. Include Source Tags. Default: false.\n    #includeLatestTag: false # boolean. Optional. Use when action = Build services || action = Push services. Include Latest Tag. Default: false.\n    #buildImages: true # boolean. Optional. Use when action = Run services. Build Images. Default: true.\n    #serviceName: # string. Required when action = Run a specific service. Service Name. \n    #containerName: # string. Optional. Use when action = Run a specific service. Container Name. \n    #ports: # string. Optional. Use when action = Run a specific service. Ports. \n    #workingDirectory: # string. Alias: workDir. Optional. Use when action = Run a specific service. Working Directory. \n    #entrypoint: # string. Optional. Use when action = Run a specific service. Entry Point Override. \n    #containerCommand: # string. Optional. Use when action = Run a specific service. Command. \n    #detached: true # boolean. Optional. Use when action = Run services || action = Run a specific service. Run in Background. Default: true.\n    #abortOnContainerExit: true # boolean. Optional. Use when action = Run services && detached == false. Abort on Container Exit. Default: true.\n    #imageDigestComposeFile: '$(Build.StagingDirectory)/docker-compose.images.yml' # string. Required when action = Write service image digests. Image Digest Compose File. Default: $(Build.StagingDirectory)/docker-compose.images.yml.\n    #removeBuildOptions: false # boolean. Optional. Use when action = Lock services || action = Combine configuration. Remove Build Options. Default: false.\n    #baseResolveDirectory: # string. Optional. Use when action = Lock services || action = Combine configuration. Base Resolve Directory. \n    #outputDockerComposeFile: '$(Build.StagingDirectory)/docker-compose.yml' # string. Required when action = Lock services || action = Combine configuration. Output Docker Compose File. Default: $(Build.StagingDirectory)/docker-compose.yml.\n    #dockerComposeCommand: # string. Required when action = Run a Docker Compose command. Command. \n    #arguments: # string. Optional. Use when action != Lock services && action != Combine configuration && action != Write service image digests. Arguments. \n  # Advanced Options\n    #dockerHostEndpoint: # string. Docker Host Service Connection. \n    #nopIfNoDockerComposeFile: false # boolean. No-op if no Docker Compose File. Default: false.\n    #requireAdditionalDockerComposeFiles: false # boolean. Require Additional Docker Compose Files. Default: false.\n    #currentWorkingDirectory: '$(System.DefaultWorkingDirectory)' # string. Alias: cwd. Working Directory. Default: $(System.DefaultWorkingDirectory).\n    #dockerComposePath: # string. Docker Compose executable Path.\n```\n\n----------------------------------------\n\nTITLE: Setting Up Kubernetes Service Connection in Azure Pipelines\nDESCRIPTION: Defines the input parameter for specifying a Kubernetes service connection in Azure Pipelines. This connection allows Azure Pipelines to interact with a Kubernetes cluster.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"kubernetesServiceConnection\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`kubernetesServiceConnection`** - **Kubernetes service connection**<br>\n[Input alias](index.md#what-are-task-input-aliases): `kubernetesServiceEndpoint`. `string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSelect a Kubernetes service connection.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: FileTransform@2 Task YAML Syntax (Full)\nDESCRIPTION: This YAML snippet shows the full syntax for the FileTransform@2 task in Azure Pipelines. It includes inputs for folder path, XML transformation, XML transformation rules, error handling, and variable substitution for JSON and XML files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# File transform v2\n# Replace tokens with variable values in XML or JSON configuration files.\n- task: FileTransform@2\n  inputs:\n    folderPath: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #enableXmlTransform: true # boolean. XML transformation. Default: true.\n    #xmlTransformationRules: '-transform **\\*.Release.config -xml **\\*.config' # string. Optional. Use when enableXmlTransform == true. XML Transformation rules. Default: -transform **\\*.Release.config -xml **\\*.config.\n    #errorOnInvalidSubstitution: false # boolean. Error on empty files and invalid substitution. Default: false.\n  # Variable Substitution\n    #jsonTargetFiles: # string. JSON target files. \n    #xmlTargetFiles: # string. XML target files.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Defining Build Resources in Azure DevOps Pipelines (YAML)\nDESCRIPTION: The YAML syntax for specifying a list of build resources that can be referenced by the pipeline. Build resources are used to reference artifacts from a pipeline run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-builds.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbuilds: [ build ] # List of build resources referenced by the pipeline.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Load Testing Task in YAML Pipeline\nDESCRIPTION: This snippet shows the YAML syntax for using the AzureLoadTest@1 task in an Azure Pipeline. It includes all available input parameters and their descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-load-test-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Load Testing v1\n# Automate performance regression testing with Azure Load Testing.\n- task: AzureLoadTest@1\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure subscription. \n    loadTestConfigFile: # string. Required. Load Test File. \n    resourceGroup: # string. Required. Load Test Resource Group. \n    loadTestResource: # string. Required. Load Test Resource Name. \n    #loadTestRunName: # string. Load Test Run Name. \n    #loadTestRunDescription: # string. Load Test Run Description. \n    #secrets: # string. Secrets. \n    #env: # string. env. \n    #overrideParameters: # string. Override parameters. \n    #outputVariableName: 'ALTOutputVar' # string. Output Variable Name. Default: ALTOutputVar.\n```\n\n----------------------------------------\n\nTITLE: Docker Login in Azure DevOps Pipeline\nDESCRIPTION: Demonstrates how to configure a Docker login task in an Azure DevOps pipeline using YAML. Requires a Docker registry service connection. The `command` parameter is set to `login` to authenticate with the container registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- task: Docker@2\n  displayName: Login to ACR\n  inputs:\n    command: login\n    containerRegistry: dockerRegistryServiceConnection1\n```\n\n----------------------------------------\n\nTITLE: Defining Container Resources in Azure DevOps Pipelines YAML\nDESCRIPTION: A YAML syntax example showing how to define container resources in Azure DevOps pipelines. Container resources are used to reference container images that can be used in pipeline jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers: [ container ] # List of container images.\n```\n\n----------------------------------------\n\nTITLE: Defining Conda Environment Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to use the CondaEnvironment@0 task to create and activate a Conda environment in an Azure Pipelines workflow. It includes all available input parameters and their default values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/conda-environment-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Conda environment v0\n# Create and activate a Conda environment.\n- task: CondaEnvironment@0\n  inputs:\n    environmentName: # string. Required. Environment name. \n    #packageSpecs: 'python=3' # string. Package specs. Default: python=3.\n    #updateConda: true # boolean. Update to the latest Conda. Default: true.\n  # Advanced\n    #createOptions: # string. Environment creation options. \n    #cleanEnvironment: false # boolean. Clean the environment. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Package Management Task in Azure DevOps YAML\nDESCRIPTION: YAML configuration for NuGet package operations including restore, pack, and push commands. Supports package management with NuGet.org and authenticated feeds like Azure Artifacts and MyGet. Primarily used for .NET Framework applications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore' # 'restore' | 'pack' | 'push' | 'custom'. Required. Command. Default: restore.\n    restoreSolution: '**/*.sln' # string. Alias: solution. Required when command = restore. Path to solution, packages.config, or project.json. Default: **/*.sln.\n    #packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg.\n    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.\n    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. \n    #allowPackageConflicts: false # boolean. Optional. Use when command = push && nuGetFeedType = internal. Allow duplicates to be skipped. Default: false.\n    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. \n    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.\n    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to package. Default: $(BuildConfiguration).\n    #packDestination: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package folder. Default: $(Build.ArtifactStagingDirectory).\n    #arguments: # string. Required when command = custom. Command and arguments. \n  # Feeds and authentication\n    feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.\n    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts/TFS feed. \n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. \n    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. \n  # Advanced\n    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.\n    #disableParallelProcessing: false # boolean. Optional. Use when command = restore. Disable parallel processing. Default: false.\n    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. \n    #verbosityRestore: 'Detailed' # 'Quiet' | 'Normal' | 'Detailed'. Optional. Use when command = restore. Verbosity. Default: Detailed.\n  # Advanced\n    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.\n    #verbosityPush: 'Detailed' # 'Quiet' | 'Normal' | 'Detailed'. Optional. Use when command = push. Verbosity. Default: Detailed.\n  # Pack options\n    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.\n    #includeReferencedProjects: false # boolean. Optional. Use when versioningScheme = off && command = pack. Include referenced projects. Default: false.\n    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. \n    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.\n    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.\n    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.\n    #packTimezone: 'utc' # 'utc' | 'local'. Optional. Use when versioningScheme = byPrereleaseNumber && command = pack. Time zone. Default: utc.\n    #includeSymbols: false # boolean. Optional. Use when command = pack. Create symbols package. Default: false.\n    #toolPackage: false # boolean. Optional. Use when command = pack. Tool Package. Default: false.\n  # Advanced\n    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. \n    #basePath: # string. Optional. Use when command = pack. Base path. \n    #verbosityPack: 'Detailed' # 'Quiet' | 'Normal' | 'Detailed'. Optional. Use when command = pack. Verbosity. Default: Detailed.\n```\n\n----------------------------------------\n\nTITLE: Azure IoT Edge v2 Task Configuration for Azure Pipelines 2022+\nDESCRIPTION: YAML configuration for Azure IoT Edge v2 task in Azure Pipelines 2022 and later versions. Supports building, pushing, and deploying IoT Edge module images with options for multiple platforms including amd64, windows-amd64, arm32v7, and arm64v8.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure IoT Edge v2\n# Build and deploy an Azure IoT Edge image.\n- task: AzureIoTEdge@2\n  inputs:\n    action: 'Build module images' # 'Build module images' | 'Push module images' | 'Generate deployment manifest' | 'Deploy to IoT Edge devices'. Required. Action. Default: Build module images.\n    #deploymentFilePath: '$(System.DefaultWorkingDirectory)/config/deployment.json' # string. Required when action == Deploy to IoT Edge devices. Deployment file. Default: $(System.DefaultWorkingDirectory)/config/deployment.json.\n    #azureSubscription: # string. Alias: connectedServiceNameARM. Required when action == Deploy to IoT Edge devices. Azure subscription contains IoT Hub. \n    #iothubname: # string. Required when action == Deploy to IoT Edge devices. IoT Hub name. \n    #deviceOption: # 'Single Device' | 'Multiple Devices'. Required when action == Deploy to IoT Edge devices. Choose single/multiple device. \n    #deviceId: # string. Required when deviceOption == Single Device. IoT Edge device ID. \n    #targetcondition: # string. Required when deviceOption == Multiple Devices. IoT Edge device target condition. \n    #containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Generic Container Registry'. Required when action = Push module images. Container registry type. Default: Azure Container Registry.\n    #dockerRegistryConnection: # string. Alias: dockerRegistryEndpoint. Required when containerregistrytype = Generic Container Registry. Docker Registry Connection. \n    #azureSubscriptionEndpoint: # string. Optional. Use when containerregistrytype = Azure Container Registry. Azure subscription. \n    #azureContainerRegistry: # string. Required when containerregistrytype = Azure Container Registry. Azure Container Registry. \n    #templateFilePath: 'deployment.template.json' # string. Required when action = Build module images || action = Push module images || action = Generate deployment manifest. .template.json file. Default: deployment.template.json.\n    #defaultPlatform: 'amd64' # 'amd64' | 'windows-amd64' | 'arm32v7' | 'arm64v8'. Required when action = Build module images || action = Push module images || action = Generate deployment manifest. Default platform. Default: amd64.\n    #fillRegistryCredential: 'true' # 'true' | 'false'. Required when action = Push module images. Add registry credential to deployment manifest. Default: true.\n    #deploymentManifestOutputPath: '$(System.DefaultWorkingDirectory)/config/deployment.json' # string. Required when action == Generate deployment manifest. Output path. Default: $(System.DefaultWorkingDirectory)/config/deployment.json.\n    #validateGeneratedDeploymentManifest: 'false' # 'true' | 'false'. Required when action = Generate deployment manifest. Validate the schema of generated deployment manifest. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Combining Docker Compose Configurations in Azure DevOps\nDESCRIPTION: YAML configuration for combining multiple Docker Compose files using the DockerCompose@0 task. This merges a base compose file with an override file and outputs the combined configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Combine configuration\n  inputs:\n    action: Combine configuration\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml\n    additionalDockerComposeFiles: docker-compose.override.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    outputDockerComposeFile: $(Build.StagingDirectory)/docker-compose.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Version in Azure Pipelines\nDESCRIPTION: This YAML snippet demonstrates the use of the UseRubyVersion@0 task to specify a Ruby version in Azure Pipelines. The task requires a version spec parameter, which defines the Ruby version range, with an optional addToPath parameter to include it in the PATH. Dependencies include a Microsoft-hosted agent with Ruby pre-installed or a configured self-hosted agent. Input is Ruby version specification, and output includes a resolved Ruby folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/use-ruby-version-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: UseRubyVersion@0\n  inputs:\n    versionSpec: '>= 2.4' # string. Required. Version spec. Default: >= 2.4.\n    #addToPath: true # boolean. Add to PATH. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Prepare Analysis Configuration v4 in YAML\nDESCRIPTION: This YAML snippet shows how to use the SonarQubePrepare@4 task to prepare SonarQube analysis configuration. It includes various input parameters for configuring the task, such as SonarQube server endpoint, scanner mode, project keys and names, and additional properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-prepare-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Prepare Analysis Configuration v4\n# Prepare SonarQube analysis configuration.\n- task: SonarQubePrepare@4\n  inputs:\n    SonarQube: # string. Required. SonarQube Server Endpoint. \n    scannerMode: 'MSBuild' # 'MSBuild' | 'Other' | 'CLI'. Required. Choose the way to run the analysis. Default: MSBuild.\n    #configMode: 'file' # 'file' | 'manual'. Required when scannerMode = CLI. Mode. Default: file.\n    #configFile: 'sonar-project.properties' # string. Optional. Use when scannerMode = CLI && configMode = file. Settings File. Default: sonar-project.properties.\n    #cliProjectKey: # string. Required when scannerMode = CLI && configMode = manual. Project Key. \n    projectKey: # string. Required when scannerMode = MSBuild. Project Key. \n    #cliProjectName: # string. Optional. Use when scannerMode = CLI && configMode = manual. Project Name. \n    #projectName: # string. Optional. Use when scannerMode = MSBuild. Project Name. \n    #cliProjectVersion: '1.0' # string. Optional. Use when scannerMode = CLI && configMode = manual. Project Version. Default: 1.0.\n    #projectVersion: '1.0' # string. Optional. Use when scannerMode = MSBuild. Project Version. Default: 1.0.\n    #cliSources: '.' # string. Required when scannerMode = CLI && configMode = manual. Sources directory root. Default: ..\n  # Advanced\n    #extraProperties: # string. Additional Properties.\n```\n```\n\n----------------------------------------\n\nTITLE: Using Pre-installed Java Version\nDESCRIPTION: Example showing how to use a pre-installed Java version on Microsoft-hosted agents. This simplified configuration uses Java 8 that comes with the build environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: JavaToolInstaller@0\n  inputs:\n    versionSpec: '8'\n    jdkArchitectureOption: 'x64'\n    jdkSourceOption: 'PreInstalled'\n```\n\n----------------------------------------\n\nTITLE: Defining Single-Job Pipeline with Direct Steps in YAML\nDESCRIPTION: Shows how to define a simple pipeline with a single job by directly specifying steps, omitting the stages and jobs keywords. This is useful for straightforward build processes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# ... other pipeline-level keywords\nsteps: [ script | bash | pwsh | powershell | checkout | task | template | ... ]\n```\n\n----------------------------------------\n\nTITLE: Defining preDeployHook Structure in Azure Pipelines YAML\nDESCRIPTION: YAML schema showing the structure of a preDeployHook definition, which includes steps to run and pool configuration for pre-deployment initialization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pre-deploy-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npreDeployHook:\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  pool: string | pool # Pool where pre deploy steps will run.\n```\n\n----------------------------------------\n\nTITLE: Downloading Secure File in Azure DevOps YAML Pipeline\nDESCRIPTION: A YAML task to download a secure file to the agent machine with optional retry configuration. Used for tasks like certificate installation or sensitive file retrieval.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-secure-file-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadSecureFile@1\n  inputs:\n    secureFile: # string. Required. Secure File. \n    #retryCount: '8' # string. Retry Count. Default: 8.\n    #socketTimeout: # string. Socket Timeout.\n```\n\n----------------------------------------\n\nTITLE: Configuring DockerCompose Task in Azure DevOps\nDESCRIPTION: A detailed YAML configuration for the DockerCompose@0 task, enabling operations on Docker containers using Azure Container Registry or external container registries\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DockerCompose@0\n  inputs:\n    containerregistrytype: 'Azure Container Registry'\n    dockerComposeFile: '**/docker-compose.yml'\n    action: 'Run a Docker Compose command'\n```\n\n----------------------------------------\n\nTITLE: Creating a GitHub Release with Inline Release Notes\nDESCRIPTION: YAML configuration to create a GitHub release with custom inline release notes instead of auto-generated ones. This allows for more control over the content displayed in the release.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GitHubRelease@1\n  inputs:\n    gitHubConnection: <GITHUB_SERVICE_CONNECTION>\n    repositoryName: '$(Build.Repository.Name)'\n    action: 'create'\n    target: '$(Build.SourceVersion)'\n    tagSource: 'userSpecifiedTag'\n    tag: <YOUR_TAG>\n    title: <YOUR_TITLE>\n    releaseNotesSource: 'inline'\n    releaseNotesInline: <YOUR_RELEASE_NOTES>\n```\n\n----------------------------------------\n\nTITLE: Using Repository Resource Variables in Pipeline Tasks\nDESCRIPTION: Example of defining a repository resource with an alias and accessing its metadata variables in pipeline steps. The example shows how to reference the repository's name, ref, id, type, and URL in a bash script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-repositories-repository.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n    - repository: common\n      type: git\n      ref: main\n      name: Repo\n\nvariables:\n  ref: $[ resources.repositories.common.ref ]\n  name: $[ resources.repositories.common.name ]\n  id: $[ resources.repositories.common.id ]\n  type: $[ resources.repositories.common.type ]\n  url: $[ resources.repositories.common.url ]\n\nsteps:\n- bash: |\n    echo \"name = $(name)\"\n    echo \"ref = $(ref)\"\n    echo \"id = $(id)\"\n    echo \"type = $(type)\"\n    echo \"url = $(url)\"\n```\n\n----------------------------------------\n\nTITLE: Azure App Configuration Snapshot YAML Task Definition\nDESCRIPTION: YAML configuration for creating a snapshot in an Azure App Configuration instance. The task requires an Azure subscription, App Configuration endpoint, snapshot name, composition type and filters. Optional parameters include retention period and tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-configuration-snapshot-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Configuration Snapshot v1\n# Create a snapshot in an Azure App Configuration instance.\n- task: AzureAppConfigurationSnapshot@1\n  inputs:\n  # AppConfiguration\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    AppConfigurationEndpoint: # string. Required. App Configuration Endpoint. \n  # Options\n    SnapshotName: # string. Required. Snapshot Name. \n    CompositionType: 'key' # 'key' | 'key_label'. Required. Composition Type. Default: key.\n    Filters: # string. Required. Filters for key-values. \n    #RetentionPeriod: '30' # string. Days to retain archived snapshot. Default: 30.\n    #Tags: # string. Tags.\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Filters for Pipeline Resource Trigger in Azure DevOps YAML\nDESCRIPTION: Illustrates how to set up branch filters for a pipeline resource trigger. This example includes specific branches and uses wildcards, while also excluding certain branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger:\n      branches:\n        include:\n        - main\n        - develop\n        - features/*\n        exclude:\n        - features/experimental/*\n```\n\n----------------------------------------\n\nTITLE: Defining Repository Resource in Azure Pipelines YAML\nDESCRIPTION: YAML schema for defining a repository resource in Azure Pipelines. Includes properties for alias, endpoint, trigger, name, ref, and type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-repositories-repository.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrepositories:\n- repository: string # Required as first property. Alias for the repository.\n  endpoint: string # ID of the service endpoint connecting to this repository.\n  trigger: none | trigger | [ string ] # CI trigger for this repository, no CI trigger if skipped (only works for Azure Repos).\n  name: string # repository name (format depends on 'type'; does not accept variables).\n  ref: string # ref name to checkout; defaults to 'refs/heads/main'. The branch checked out by default whenever the resource trigger fires.\n  type: string # Type of repository: git, github, githubenterprise, and bitbucket.\n```\n\n----------------------------------------\n\nTITLE: Azure Container Registry Authentication Example in YAML\nDESCRIPTION: YAML configuration for authenticating with Azure Container Registry using Docker Compose task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  azureContainerRegistry: Contoso.azurecr.io\n  azureSubscriptionEndpoint: Contoso\nsteps:\n- task: DockerCompose@0\n  displayName: Container registry login\n  inputs:\n    containerregistrytype: Azure Container Registry\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n```\n\n----------------------------------------\n\nTITLE: Creating Generic Secret in Kubernetes using YAML\nDESCRIPTION: This snippet demonstrates how to create a generic secret in Kubernetes using the Kubernetes Manifest task. It specifies the secret name and arguments for creating the secret.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Create secret\n  inputs: \n    action: createSecret\n    secretType: generic\n    secretName: some-secret\n    secretArguments: --from-literal=key1=value1\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Installing Multiple SSH Keys with Config Settings\nDESCRIPTION: An example of installing multiple SSH keys in the same pipeline job with custom config settings. This allows working with multiple repositories requiring different SSH keys.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool: <Some Agent Pool>\n\nsteps:\n- task: InstallSSHKey@0\n  inputs:\n    knownHostsEntry: $(known_host)\n    sshPublicKey: $(first_public_key)\n    sshKeySecureFile: $(first_private_key)\n    addEntryToConfig: true\n    configHostAlias: <first-host-alias>\n    configHostname: github.com\n    configUser: git\n  displayName: Install First Repo SSH Key\n\n- task: InstallSSHKey@0\n  inputs:\n    knownHostsEntry: $(known_host)\n    sshPublicKey: $(second_public_key)\n    sshKeySecureFile: $(second_private_key)\n    addEntryToConfig: true\n    configHostAlias: <second-host-alias>\n    configHostname: github.com\n    configUser: git\n  displayName: Install Second Repo SSH Key\n\n- bash: git clone git@<first-host-alias>:<owner>/<first-repo>.git\n  displayName: Clone First Repo\n\n- bash: git clone git@<second-host-alias>:<owner>/<second-repo>.git\n  displayName: Clone Second Repo\n```\n\n----------------------------------------\n\nTITLE: Cache Task Basic YAML Configuration\nDESCRIPTION: Basic YAML configuration for the Cache@2 task showing required and optional parameters. Used to cache files between pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cache-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Cache v2\n# Cache files between runs.\n- task: Cache@2\n  inputs:\n    key: # string. Required. Key. \n    path: # string. Required. Path. \n    #cacheHitVar: # string. Cache hit variable. \n    #restoreKeys: # string. Additional restore key prefixes.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CLI Task for Azure Pipelines 2020.1-2022.2\nDESCRIPTION: YAML configuration for Azure CLI v2 task in Azure Pipelines versions 2020.1 through 2022.2, with core functionality for running CLI commands via various script types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure CLI v2\n# Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/PowerShell Core/Batch script when running on Windows agent.\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure Resource Manager connection. \n    scriptType: # 'ps' | 'pscore' | 'batch' | 'bash'. Required. Script Type. \n    scriptLocation: 'scriptPath' # 'inlineScript' | 'scriptPath'. Required. Script Location. Default: scriptPath.\n    scriptPath: # string. Required when scriptLocation = scriptPath. Script Path. \n    #inlineScript: # string. Required when scriptLocation = inlineScript. Inline Script. \n    #arguments: # string. Alias: scriptArguments. Script Arguments. \n    #powerShellErrorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. Optional. Use when scriptType = ps || scriptType = pscore. ErrorActionPreference. Default: stop.\n  # Advanced\n    #addSpnToEnvironment: false # boolean. Access service principal details in script. Default: false.\n    #useGlobalConfig: false # boolean. Use global Azure CLI configuration. Default: false.\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n    #powerShellIgnoreLASTEXITCODE: false # boolean. Optional. Use when scriptType = ps || scriptType = pscore. Ignore $LASTEXITCODE. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Invoking PowerShell Script in Azure DevOps YAML Pipeline\nDESCRIPTION: YAML configuration to invoke a PowerShell script file in an Azure DevOps pipeline task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: PowerShell@2\n  inputs:\n    targetType: 'filePath'\n    filePath: 'test.ps1'\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Authenticate Task in YAML Pipeline\nDESCRIPTION: Basic YAML configuration for the Maven Authenticate task that can be used to authenticate with Azure Artifacts feeds and external Maven repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Maven Authenticate v0\n# Provides credentials for Azure Artifacts feeds and external maven repositories.\n- task: MavenAuthenticate@0\n  inputs:\n    #artifactsFeeds: # string. Feeds. \n    #mavenServiceConnections: # string. Credentials for repositories outside this organization/collection.\n```\n\n----------------------------------------\n\nTITLE: Complete Azure Web App Deployment Example\nDESCRIPTION: Full YAML example showing Azure Web App deployment with app settings configuration, including variables, web app deployment, and detailed settings configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-settings-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  azureSubscription: Contoso\n  WebApp_Name: sampleWebApp\n  # To ignore SSL error uncomment the below variable\n  # VSTS_ARM_REST_IGNORE_SSL_ERRORS: true\n\nsteps:\n\n- task: AzureWebApp@1\n  displayName: Azure Web App Deploy\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: $(WebApp_Name)\n    package: $(System.DefaultWorkingDirectory)/**/*.zip\n\n- task: AzureAppServiceSettings@1\n  displayName: Azure App Service Settings\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: $(WebApp_Name)\n   # To deploy the settings on a slot, provide slot name as below. By default, the settings would be applied to the actual Web App (Production slot)\n   # slotName: staging\n    appSettings: |\n      [\n        {\n          \"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\",\n          \"value\": \"$(Key)\",\n          \"slotSetting\": false\n        },\n        {\n          \"name\": \"MYSQL_DATABASE_NAME\",\n          \"value\": \"$(DB_Name)\", \n          \"slotSetting\": false\n        }\n      ]\n    generalSettings: |\n      [\n        {\n          \"alwaysOn\": true,\n          \"webSocketsEnabled\": false\n        }\n      ]\n    connectionStrings: |\n      [\n        {\n          \"name\": \"MysqlCredentials\",\n          \"value\": \"$(MySQl_ConnectionString)\",\n          \"type\": \"MySql\",\n          \"slotSetting\": false\n        }\n      ]\n```\n\n----------------------------------------\n\nTITLE: Deploying to Azure Web App Linux Container with YAML Pipeline\nDESCRIPTION: A YAML pipeline configuration that deploys to an Azure Web App container on Linux, specifying subscription endpoint, Docker namespace, repository, and image tag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  azureSubscriptionEndpoint: Contoso\n  DockerNamespace: contoso.azurecr.io\n  DockerRepository: aspnetcore\n  WebAppName: containersdemoapp\n\nsteps:\n\n- task: AzureRMWebAppDeployment@4\n  displayName: Azure App Service Deploy\n  inputs:\n    appType: webAppContainer\n    ConnectedServiceName: $(azureSubscriptionEndpoint)\n    WebAppName: $(WebAppName)\n    DockerNamespace: $(DockerNamespace)\n    DockerRepository: $(DockerRepository)\n    DockerImageTag: $(Build.BuildId)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Configuration Import Task in YAML Pipeline\nDESCRIPTION: YAML configuration for Azure App Configuration Import task v10 showing all available input parameters including authentication, source configuration, and import options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-configuration-import-v10.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Configuration Import v10\n# Import key-values to an Azure App Configuration instance.\n- task: AzureAppConfigurationImport@10\n  inputs:\n  # AppConfiguration\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    AppConfigurationEndpoint: # string. Required. App Configuration Endpoint. \n  # Source\n    ConfigurationFile: # string. Required. Configuration File Path. \n    #UseFilePathExtension: true # boolean. Use the file path extension to determine the file format. Default: true.\n    #FileFormat: # 'json' | 'yaml' | 'properties'. Optional. Use when UseFilePathExtension = false. File Format. \n  # Options\n    #FileContentProfile: 'appconfig/default' # 'appconfig/default' | 'appconfig/kvset'. File Content Profile. Default: appconfig/default.\n    #Separator: # '.' | '/' | ':' | ';' | ' |' | '-' | '_' | '__'. Optional. Use when FileContentProfile = appconfig/default. Separator. \n    #Depth: # string. Optional. Use when FileContentProfile = appconfig/default. Depth. \n    #Prefix: # string. Optional. Use when FileContentProfile = appconfig/default. Prefix. \n    #Label: # string. Optional. Use when FileContentProfile = appconfig/default. Label. \n    #ContentType: # string. Optional. Use when FileContentProfile = appconfig/default. Content Type. \n    #Tags: # string. Optional. Use when FileContentProfile = appconfig/default. Tags. \n    #ExcludeFeatureFlags: false # boolean. Optional. Use when FileContentProfile = appconfig/default. Exclude feature flags. Default: false.\n    #Strict: false # boolean. Delete key-values that are not included in the configuration file. Default: false.\n    #DryRun: false # boolean. Dry run. Default: false.\n    #ImportMode: 'Ignore-Match' # 'All' | 'Ignore-Match'. Import Mode. Default: Ignore-Match.\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Manager Deployment Task Inputs in YAML\nDESCRIPTION: Specifies the input parameters for an Azure Resource Manager template deployment task, including deployment scope, Azure connection, subscription, resource group details, template location, and parameter overrides.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-manager-template-deployment-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureResourceManagerTemplateDeployment@3\n  inputs:\n    deploymentScope: 'Resource Group' # Options: Management Group, Subscription, Resource Group\n    azureResourceManagerConnection: # Required\n    subscriptionId: # Required when deploymentScope != Management Group\n    action: 'Create Or Update Resource Group' # Required when deploymentScope = Resource Group. Options: Create Or Update Resource Group, DeleteRG\n    resourceGroupName: # Required when deploymentScope = Resource Group\n    location: # Required when action = Create Or Update Resource Group || deploymentScope != Resource Group\n    templateLocation: 'Linked artifact' # Options: Linked artifact, URL of the file\n    csmFileLink: # Required when templateLocation = URL of the file\n    csmParametersFileLink: # Optional when templateLocation = URL of the file\n    csmFile: # Required when templateLocation = Linked artifact\n    csmParametersFile: # Optional when templateLocation = Linked artifact\n    overrideParameters: # Optional\n```\n\n----------------------------------------\n\nTITLE: Simple Variable Group Example in Azure Pipelines\nDESCRIPTION: A simple example showing how to reference a variable group named 'my-variable-group' in an Azure DevOps pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-group.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: my-variable-group\n```\n\n----------------------------------------\n\nTITLE: Use Python Version in Azure Pipelines (<=azure-pipelines-2022)\nDESCRIPTION: This snippet shows how to use the UsePythonVersion@0 task in Azure Pipelines to specify a Python version. The inputs include versionSpec, addToPath, and architecture, offering control over the Python environment used in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/use-python-version-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Use Python version v0\n# Use the specified version of Python from the tool cache, optionally adding it to the PATH.\n- task: UsePythonVersion@0\n  inputs:\n    versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.\n    #addToPath: true # boolean. Add to PATH. Default: true.\n  # Advanced\n    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Certificate in YAML Pipeline\nDESCRIPTION: YAML configuration for the InstallAppleCertificate@1 task showing all available input parameters including certificate configuration, keychain settings, and various options for certificate and keychain management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-certificate-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Install Apple Certificate v1\n# Install an Apple certificate required to build on a macOS agent.\n- task: InstallAppleCertificate@1\n  inputs:\n    certSecureFile: # string. Required. Certificate (P12). \n    #certPwd: # string. Certificate (P12) password. \n  # Advanced\n    keychain: 'temp' # 'default' | 'temp' | 'custom'. Required. Keychain. Default: temp.\n    #keychainPassword: # string. Keychain password. \n    #customKeychainPath: # string. Required when keychain = custom. Custom keychain path. \n    #deleteCert: # boolean. Optional. Use when keychain = custom || keychain = default. Delete certificate from keychain. \n    #deleteCustomKeychain: # boolean. Optional. Use when keychain = custom. Delete custom keychain. \n    #signingIdentity: # string. Certificate signing identity.\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Push Command in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the 'push' command of the NuGet task, including options for specifying packages to push, target feed, and push settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetCommand@2\n  inputs:\n    command: 'push'\n    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'\n    nuGetFeedType: 'internal'\n    publishVstsFeed: 'project/feed'\n    allowPackageConflicts: false\n    verbosityPush: 'Detailed'\n```\n\n----------------------------------------\n\nTITLE: Deploy Using YAML Configuration File\nDESCRIPTION: Creates a new Container App using a YAML configuration file specifying deployment details and an existing container image\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    yamlConfigPath: simple-image-container-app.yaml\n```\n\nLANGUAGE: yml\nCODE:\n```\nproperties:\n  managedEnvironmentId: /subscriptions/SUBSCRIPTION_ID/resourceGroups/RESOURCE_GROUP/providers/Microsoft.App/managedEnvironments/CONTAINER_APP_ENVIRONMENT\n  configuration:\n    ingress:\n      external: true\n      allowInsecure: false\n      targetPort: 80\n  template:\n    containers:\n      - image: mcr.microsoft.com/<existing-image>:latest\n        name: mysampleimagecontainer\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Configuration Export in YAML\nDESCRIPTION: This YAML snippet shows how to configure the Azure App Configuration Export task in an Azure Pipeline. It includes all available input parameters with their descriptions and default values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-configuration-export-v10.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Configuration Export v10\n# Export key-values to task variables from Azure App Configuration.\n- task: AzureAppConfigurationExport@10\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    AppConfigurationEndpoint: # string. Required. App Configuration Endpoint. \n    #SelectionMode: 'Default' # 'Default' | 'Snapshot'. Selection Mode. Default: Default.\n    KeyFilter: '*' # string. Required when SelectionMode = Default. Key Filter. Default: *.\n    #Label: # string. Optional. Use when SelectionMode = Default. Label. \n    #SnapshotName: # string. Required when SelectionMode = Snapshot. Snapshot name. \n    #TrimKeyPrefix: # string. Trim Key Prefix. \n    #SuppressWarningForOverriddenKeys: false # boolean. Suppress warning for overridden keys. Default: false.\n    #TreatKeyVaultErrorsAsWarning: false # boolean. Treat key vault resolution errors as warnings. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Certificate in Azure Pipelines (v2022.1+)\nDESCRIPTION: YAML configuration for the InstallAppleCertificate@2 task in Azure Pipelines 2022.1 and later. This task installs an Apple certificate from a secure file to a specified keychain on a macOS agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-certificate-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Apple certificate v2\n# Install an Apple certificate required to build on a macOS agent machine.\n- task: InstallAppleCertificate@2\n  inputs:\n    certSecureFile: # string. Required. Certificate (P12). \n    #certPwd: # string. Certificate (P12) password. \n  # Advanced\n    keychain: 'temp' # 'default' | 'temp' | 'custom'. Required. Keychain. Default: temp.\n    #keychainPassword: # string. Required when keychain = custom || keychain = default. Keychain password. \n    #customKeychainPath: # string. Required when keychain = custom. Custom keychain path. \n    #deleteCert: # boolean. Optional. Use when keychain = custom || keychain = default. Delete certificate from keychain. \n    #deleteCustomKeychain: # boolean. Optional. Use when keychain = custom. Delete custom keychain. \n    #signingIdentity: # string. Certificate signing identity. \n    #setUpPartitionIdACLForPrivateKey: # boolean. Set up partition_id ACL for the imported private key. \n    #opensslPkcsArgs: # string. OpenSSL arguments for PKCS12.\n```\n\n----------------------------------------\n\nTITLE: Configuring UniversalPackages@0 task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows the syntax and available input parameters for the UniversalPackages@0 task. It includes options for downloading and publishing packages, specifying feed locations, and setting various package details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/universal-packages-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Universal packages v0\n# Download or publish Universal Packages.\n- task: UniversalPackages@0\n  inputs:\n    command: 'download' # 'download' | 'publish'. Required. Command. Default: download.\n    downloadDirectory: '$(System.DefaultWorkingDirectory)' # string. Required when command = download. Destination directory. Default: $(System.DefaultWorkingDirectory).\n    #publishDirectory: '$(Build.ArtifactStagingDirectory)' # string. Required when command = publish. Path to file(s) to publish. Default: $(Build.ArtifactStagingDirectory).\n  # Feed & package details\n    feedsToUse: 'internal' # 'internal' | 'external'. Alias: internalOrExternalDownload. Required when command = download. Feed location. Default: internal.\n    #externalFeedCredentials: # string. Alias: externalEndpoint. Optional. Use when internalOrExternalDownload = external && command = download. organization/collection connection. \n    #vstsFeed: # string. Alias: feedListDownload. Required when internalOrExternalDownload = internal && command = download. Feed. \n    #vstsFeedPackage: # string. Alias: packageListDownload. Required when internalOrExternalDownload = internal && command = download. Package name. \n    #vstsPackageVersion: # string. Alias: versionListDownload. Required when internalOrExternalDownload = internal && command = download. Version. \n    #feedDownloadExternal: # string. Required when internalOrExternalDownload = external && command = download. Feed (or Project/Feed if the feed was created in a project). \n    #packageDownloadExternal: # string. Required when internalOrExternalDownload = external && command = download. Package name. \n    #versionDownloadExternal: # string. Required when internalOrExternalDownload = external && command = download. Version. \n  # Feed & package details\n    #feedsToUsePublish: 'internal' # 'internal' | 'external'. Alias: internalOrExternalPublish. Required when command = publish. Feed location. Default: internal.\n    #publishFeedCredentials: # string. Alias: externalEndpoints. Required when internalOrExternalPublish = external && command = publish. organization/collection connection. \n    #vstsFeedPublish: # string. Alias: feedListPublish. Required when internalOrExternalPublish = internal && command = publish. Destination Feed. \n    #vstsFeedPackagePublish: # string. Alias: packageListPublish. Required when internalOrExternalPublish = internal && command = publish. Package name. \n    #feedPublishExternal: # string. Required when internalOrExternalPublish = external && command = publish. Feed (or Project/Feed if the feed was created in a project). \n    #packagePublishExternal: # string. Required when internalOrExternalPublish = external && command = publish. Package name. \n    #versionOption: 'patch' # 'major' | 'minor' | 'patch' | 'custom'. Alias: versionPublishSelector. Required when command = publish. Version. Default: patch.\n    #versionPublish: # string. Required when versionPublishSelector = custom && command = publish. Custom version. \n    #packagePublishDescription: # string. Optional. Use when command = publish. Description. \n  # Advanced\n    #publishPackageMetadata: true # boolean. Optional. Use when command = publish && internalOrExternalPublish = internal. Publish pipeline metadata. Default: true.\n    #verbosity: 'None' # 'None' | 'Trace' | 'Debug' | 'Information' | 'Warning' | 'Error' | 'Critical'. Verbosity. Default: None.\n  # Output\n    #publishedPackageVar: # string. Optional. Use when command = publish. Package Output Variable.\n```\n\n----------------------------------------\n\nTITLE: Uploading Files to Azure Blob Storage in YAML Pipeline\nDESCRIPTION: Example YAML configuration for using the AzureFileCopy task to upload files from the pipeline staging directory to Azure Blob storage. It demonstrates setting source path, storage account details, and additional arguments for AzCopy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Example: Upload files from Pipeline staging directory to blob storage.\n- task: AzureFileCopy@3\n  displayName: 'Example Step Name'\n  inputs:\n    sourcePath: '$(Build.ArtifactStagingDirectory)/BlobsToUpload'\n    additionalArgumentsForBlobCopy: |\n      '/Y' # Supresses all AZCopy Confirmations. Used here to allow overwrites\n      '/Pattern:*' # Pattern of files to copy.\n      '/S' # Recursive Copy\n    azureSubscription: 'Subscription Name'\n    destination: AzureBlob\n    storage: storageaccountname\n    containerName: storagecontainername\n    blobPrefix: targetdirectoryincontainer\n```\n\n----------------------------------------\n\nTITLE: Defining Manual Validation Task in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates the ManualValidation@1 task, used to pause a pipeline for manual validation. It requires the 'notifyUsers' parameter to send notification emails. Optional parameters include 'approvers', 'allowApproversToApproveTheirOwnRuns', 'instructions', and 'onTimeout'. Designed for Azure YAML pipelines, it can only be implemented in agentless jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/manual-validation-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Manual validation v1\\n# Pause a pipeline run to wait for manual interaction. Works only with YAML pipelines.\\n- task: ManualValidation@1\\n  inputs:\\n    notifyUsers: # string. Required. Notify users. \\n    #approvers: # string. Approvers. \\n    #allowApproversToApproveTheirOwnRuns: true # boolean. Allow approvers to approve their own run. Default: true.\\n    #instructions: # string. Instructions. \\n    #onTimeout: 'reject' # 'reject' | 'resume'. On timeout. Default: reject.\n```\n\n----------------------------------------\n\nTITLE: Publishing Python Distribution to Azure Artifacts Feed\nDESCRIPTION: This example demonstrates how to use the TwineAuthenticate task to publish a Python distribution to a private Azure Artifacts feed. It includes steps for installing dependencies, building the distribution, authenticating, and uploading using twine.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/twine-authenticate-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Install python distributions like wheel, twine etc\n- script: |\n     pip install wheel\n     pip install twine\n  \n# Build the python distribution from source\n- script: |\n     python setup.py bdist_wheel\n   \n- task: TwineAuthenticate@1\n  displayName: Twine Authenticate\n  inputs:\n    # In this case, name of the feed is 'myTestFeed' in the project 'myTestProject'. Project is needed because the feed is project scoped.\n    artifactFeed: myTestProject/myTestFeed\n  \n# Use command line script to 'twine upload', use -r to pass the repository name and --config-file to pass the environment variable set by the authenticate task.\n- script: |\n     python -m twine upload -r myTestFeed --config-file $(PYPIRC_PATH) dist/*.whl\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Provisioning Profile using YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to install an Apple provisioning profile on a macOS agent. The task requires specifying a provisioning profile stored as a secure file and offers an option to remove the profile after the build is complete.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-provisioning-profile-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Apple Provisioning Profile v0\n# Install an Apple provisioning profile required to build on a macOS agent.\n- task: InstallAppleProvisioningProfile@0\n  inputs:\n    provProfileSecureFile: # string. Required. Provisioning Profile. \n    #removeProfile: true # boolean. Remove Profile After Build. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Enabling XML Variable Substitution for Azure App Service Deployment\nDESCRIPTION: Allows substitution of variables in XML configuration files and parameters.xml during Azure App Service deployment, running after configuration transformations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nenableXmlVariableSubstitution: true\n```\n\n----------------------------------------\n\nTITLE: Using Command Line Task Shortcut in YAML\nDESCRIPTION: Demonstrates the shortcut syntax for using the command line task in YAML pipelines, including options for working directory, display name, and environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cmd-line-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- script: # inline script\n  workingDirectory: #\n  displayName: #\n  failOnStderr: #\n  env: { string: string } # mapping of environment variables to add\n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQube Analysis Preparation in YAML\nDESCRIPTION: YAML snippet for configuring the SonarQubePrepare@5 task in an Azure Pipelines workflow. It demonstrates setting up SonarQube analysis for an MSBuild project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-prepare-v5.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Prepare Analysis Configuration v5\n# Prepare SonarQube analysis configuration.\n- task: SonarQubePrepare@5\n  inputs:\n    SonarQube: # string. Required. SonarQube Server Endpoint. \n    scannerMode: 'MSBuild' # 'MSBuild' | 'Other' | 'CLI'. Required. Choose the way to run the analysis. Default: MSBuild.\n    #configMode: 'file' # 'file' | 'manual'. Required when scannerMode = CLI. Mode. Default: file.\n    #configFile: 'sonar-project.properties' # string. Optional. Use when scannerMode = CLI && configMode = file. Settings File. Default: sonar-project.properties.\n    #cliProjectKey: # string. Required when scannerMode = CLI && configMode = manual. Project Key. \n    projectKey: # string. Required when scannerMode = MSBuild. Project Key. \n    #cliProjectName: # string. Optional. Use when scannerMode = CLI && configMode = manual. Project Name. \n    #projectName: # string. Optional. Use when scannerMode = MSBuild. Project Name. \n    #cliProjectVersion: '1.0' # string. Optional. Use when scannerMode = CLI && configMode = manual. Project Version. Default: 1.0.\n    #projectVersion: '1.0' # string. Optional. Use when scannerMode = MSBuild. Project Version. Default: 1.0.\n    #cliSources: '.' # string. Required when scannerMode = CLI && configMode = manual. Sources directory root. Default: ..\n  # Advanced\n    #extraProperties: # string. Additional Properties.\n```\n\n----------------------------------------\n\nTITLE: Defining Qualify Image Name Input for Azure Pipelines\nDESCRIPTION: This snippet describes the `qualifyImageName` input, determining whether to qualify the image name with Docker registry service connection's hostname. This optional boolean parameter defaults to true and is used across multiple Docker actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"qualifyImageName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`qualifyImageName`** - **Qualify Image Name**<br>\n`boolean`. Optional. Use when `action = Build an image || action = Tag images || action = Push an image || action = Push images || action = Run an image`. Default value: `true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies a qualify image name with the Docker registry service connection's hostname.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Download a specific artifact in YAML\nDESCRIPTION: This YAML snippet demonstrates how to download a specific artifact named 'WebApp' and place it into the 'bin' directory within the $(Build.SourcesDirectory). It utilizes the DownloadPipelineArtifact task and configures the artifactName and targetPath inputs accordingly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n\"# Download an artifact named 'WebApp' to 'bin' in $(Build.SourcesDirectory)\\n- task: DownloadPipelineArtifact@2\\n  inputs:\\n    artifactName: 'WebApp'\\n    targetPath: $(Build.SourcesDirectory)/bin\"\n```\n\n----------------------------------------\n\nTITLE: Azure Functions Container Deployment Example\nDESCRIPTION: Example YAML configuration showing how to deploy Azure Functions on Linux using containers with build variables and Azure subscription.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-container-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  imageName: contoso.azurecr.io/azurefunctions-containers:$(build.buildId)\n  azureSubscription: Contoso\n  # To ignore SSL error uncomment the following variable\n  # VSTS_ARM_REST_IGNORE_SSL_ERRORS: true\n\nsteps:\n- task: AzureFunctionAppContainer@1\n  displayName: Azure Function App on Container deploy\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: functionappcontainers\n    imageName: $(imageName)\n```\n\n----------------------------------------\n\nTITLE: Publishing Code Coverage Results Task Configuration in YAML\nDESCRIPTION: YAML configuration for the PublishCodeCoverageResults@2 task to publish code coverage results from a build. The task supports multiple coverage formats and requires specifying the path to summary files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-code-coverage-results-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish code coverage results v2\n# Publish any of the code coverage results from a build.\n- task: PublishCodeCoverageResults@2\n  inputs:\n    summaryFileLocation: # string. Required. Path to summary files. \n    #pathToSources: # string. Path to Source files. \n    #failIfCoverageEmpty: false # boolean. Fail if code coverage results are missing. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Node.js Version - Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the NodeTaskRunnerInstaller@0 task to install a specific version of Node.js, allowing tasks to be executed in environments standardized to that version. The snippet utilizes a required input parameter, `nodeVersion`, to specify the desired Node.js version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/node-task-runner-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NodeTaskRunnerInstaller@0\n  inputs:\n    nodeVersion: '6' # '6' | '10' | '16'. Alias: runnerVersion | installVersion. Required. Version of runner to install. Default: 6.\n```\n\n----------------------------------------\n\nTITLE: Starting and Stopping Docker Containers in YAML\nDESCRIPTION: This example shows how to control job and service containers by starting and stopping them during pipeline execution, which is useful in unique circumstances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nresources:\n  containers:\n  - container: builder\n    image: ubuntu:18.04\nsteps:\n- script: echo \"I can run inside the container (it starts by default)\"\n  target:\n    container: builder\n- task: Docker@2\n  inputs:\n    command: stop\n    container: builder\n# any task beyond this point would not be able to target the builder container\n# because it's been stopped\n```\n\n----------------------------------------\n\nTITLE: Using jobs.template in Main Pipeline YAML\nDESCRIPTION: Shows how to reference a job template in the main pipeline YAML file, including specifying the template name and providing parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-template.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- template: string # name of template to include\n  parameters: { string: any } # provided parameters\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Security Publish Results Task in YAML\nDESCRIPTION: This YAML snippet shows how to configure the AdvancedSecurity-Publish@1 task in an Azure Pipelines configuration. It includes all available input parameters with their default values and descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-publish-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Advanced Security Publish Results v1\n# Combines SARIF file(s) produced by code scanning tool(s), enhances the combined SARIF file, and publishes the enhanced SARIF file to the Advanced Security service.\n- task: AdvancedSecurity-Publish@1\n  inputs:\n    #SarifsInputDirectory: # string. SARIF(s) Input Directory. \n    #Category: # string. Category. \n    #WaitForProcessing: false # boolean. Enable Wait for Processing. Default: false.\n    #WaitForProcessingInterval: '5' # string. Optional. Use when WaitForProcessing = true. Wait for Processing Time Interval. Default: 5.\n    #WaitForProcessingTimeout: '120' # string. Optional. Use when WaitForProcessing = true. Wait for Processing Timeout. Default: 120.\n```\n\n----------------------------------------\n\nTITLE: NuGet Restore Task Configuration (Azure Pipelines <= 2022.1)\nDESCRIPTION: Defines the YAML syntax for configuring the NuGetRestore@1 task in Azure Pipelines for versions up to 2022.1. This task restores NuGet packages needed before a Visual Studio Build step. It describes input parameters such as the solution file path, feed selection options, and verbosity settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-restore-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# NuGet Restore v1\n# Restores NuGet packages in preparation for a Visual Studio Build step.\n- task: NuGetRestore@1\n  inputs:\n    solution: '**/*.sln' # string. Required. Path to solution, packages.config, or project.json. Default: **/*.sln.\n    selectOrConfig: 'select' # 'select' | 'config'. Required. Feeds to use. Default: select.\n    #feed: # string. Optional. Use when selectOrConfig = select. Use packages from this VSTS feed. \n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config. Path to NuGet.config. \n  # Advanced\n    #noCache: false # boolean. Disable local cache. Default: false.\n    #packagesDirectory: # string. Destination directory. \n    #verbosity: 'Detailed' # '-' | 'Quiet' | 'Normal' | 'Detailed'. Verbosity. Default: Detailed.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Managing GitHub Releases in Azure Pipelines with YAML\nDESCRIPTION: This YAML snippet provides the syntax for the GitHubRelease@0 task, which is used to manage GitHub releases in Azure Pipelines. The task supports actions such as creation, editing, and deletion of releases. Key parameters include the GitHub connection, repository name, action type, and various options for tagging, release notes, and draft settings. Dependencies include OAuth or PAT for GitHub connection. The expected input is a properly configured YAML script, and the output is the execution of the selected action on a GitHub release.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# GitHub Release v0\n# Create, edit, or delete a GitHub release.\n- task: GitHubRelease@0\n  inputs:\n    gitHubConnection: # string. Required. GitHub connection (OAuth or PAT). \n    repositoryName: '$(Build.Repository.Name)' # string. Required. Repository. Default: $(Build.Repository.Name).\n    action: 'create' # 'create' | 'edit' | 'delete'. Required. Action. Default: create.\n    #target: '$(Build.SourceVersion)' # string. Required when action = create || action = edit. Target. Default: $(Build.SourceVersion).\n    tagSource: 'auto' # 'auto' | 'manual'. Required when action = create. Tag source. Default: auto.\n    #tagPattern: # string. Optional. Use when tagSource = auto. Tag Pattern. \n    #tag: # string. Required when action = edit || action = delete || tagSource = manual. Tag. \n    #title: # string. Optional. Use when action = create || action = edit. Release title. \n    #releaseNotesSource: 'file' # 'file' | 'input'. Optional. Use when action = create || action = edit. Release notes source. Default: file.\n    #releaseNotesFile: # string. Optional. Use when releaseNotesSource = file. Release notes file path. \n    #releaseNotes: # string. Optional. Use when releaseNotesSource = input. Release notes. \n    #assets: '$(Build.ArtifactStagingDirectory)/*' # string. Optional. Use when action = create || action = edit. Assets. Default: $(Build.ArtifactStagingDirectory)/*.\n    #assetUploadMode: 'delete' # 'delete' | 'replace'. Optional. Use when action = edit. Asset upload mode. Default: delete.\n    #isDraft: false # boolean. Optional. Use when action = create || action = edit. Draft release. Default: false.\n    #isPreRelease: false # boolean. Optional. Use when action = create || action = edit. Pre-release. Default: false.\n    #addChangeLog: true # boolean. Optional. Use when action = create || action = edit. Add changelog. Default: true.\n  # Changelog configuration\n    changeLogCompareToRelease: 'lastFullRelease' # 'lastFullRelease' | 'lastNonDraftRelease' | 'lastNonDraftReleaseByTag'. Required when addChangeLog = true. Compare to. Default: lastFullRelease.\n    #changeLogCompareToReleaseTag: # string. Required when changeLogCompareToRelease = lastNonDraftReleaseByTag && addChangeLog = true. Release Tag. \n    changeLogType: 'commitBased' # 'commitBased' | 'issueBased'. Required when addChangeLog = true. Changelog type. Default: commitBased.\n    #changeLogLabels: '[{ \"label\" : \"bug\", \"displayName\" : \"Bugs\", \"state\" : \"closed\" }]' # string. Optional. Use when changeLogType = issueBased && addChangeLog = true. Categories. Default: [{ \"label\" : \"bug\", \"displayName\" : \"Bugs\", \"state\" : \"closed\" }].\n```\n\n----------------------------------------\n\nTITLE: Configuring FTP Upload Task with Service Endpoint Authentication\nDESCRIPTION: Demonstrates configuring the FtpUpload task using a pre-configured service endpoint for authentication, with options to specify root directory, file patterns, and remote directory\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: FtpUpload@1\n  inputs:\n    credentialsOption: 'serviceEndpoint'\n    serverEndpoint: # FTP service connection\n    rootDirectory: # Source folder\n    filePatterns: '**'\n    remoteDirectory: '/upload/$(Build.BuildId)/'\n```\n\n----------------------------------------\n\nTITLE: Retrieving GitHub Known Hosts Entry\nDESCRIPTION: Command to retrieve the known hosts entry for GitHub, which is required for SSH key configuration in Azure DevOps pipelines. Provides the necessary host key for secure connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nssh-keyscan github.com\n```\n\n----------------------------------------\n\nTITLE: Basic Script Step Example\nDESCRIPTION: A simple example of using the script step to echo a message with a display name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-script.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo Hello world!\n  displayName: Say hello\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Stack for Linux Web Apps in Azure Pipelines\nDESCRIPTION: Specifies the framework and version for Linux web apps deployed to Azure App Service. Includes options for .NET, Node.js, Python, PHP, Java, JBoss EAP, and Tomcat runtimes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nRuntimeStack: 'DOTNETCORE:9.0'\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Work Items Task in Azure Pipelines\nDESCRIPTION: YAML configuration for queryWorkItems@0 task that executes a work item query and validates the number of returned items against specified thresholds. The task requires queryId and allows setting minimum and maximum thresholds for matching items.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/query-work-items-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Query work items v0\n# Execute a work item query and check the number of items returned.\n- task: queryWorkItems@0\n  inputs:\n    queryId: # string. Required. Query. \n    maxThreshold: '0' # string. Required. Upper threshold. Default: 0.\n  # Advanced\n    minThreshold: '0' # string. Required. Lower threshold. Default: 0.\n```\n\n----------------------------------------\n\nTITLE: Go Task Syntax in YAML\nDESCRIPTION: This YAML snippet defines the syntax for using the Go@0 task in Azure Pipelines. It showcases the available inputs, including the command to execute (get, build, test, or custom), a custom command (if applicable), arguments for the command, and the working directory. The default command is 'get'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/go-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n```yaml\n# Go v0\n# Get, build, or test a Go application, or run a custom Go command.\n- task: Go@0\n  inputs:\n    command: 'get' # 'get' | 'build' | 'test' | 'custom'. Required. Command. Default: get.\n    #customCommand: # string. Required when command == custom. Custom command. \n    #arguments: # string. Arguments. \n  # Advanced\n    #workingDirectory: # string. Working directory.\n```\n```\n\n----------------------------------------\n\nTITLE: Azure Functions Container Task Basic Syntax\nDESCRIPTION: YAML syntax for the AzureFunctionAppContainer@1 task showing all available input parameters and their configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-container-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Functions for container v1\n# Update a function app with a Docker container.\n- task: AzureFunctionAppContainer@1\n  inputs:\n    azureSubscription: # string. Required. Azure subscription. \n    appName: # string. Required. App name. \n    #deployToSlotOrASE: false # boolean. Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    imageName: # string. Required. Image name. \n    #containerCommand: # string. Startup command. \n  # Application and Configuration Settings\n    #appSettings: # string. App settings. \n    #configurationStrings: # string. Configuration settings.\n```\n\n----------------------------------------\n\nTITLE: Defining JavaToolInstaller Task in YAML for Azure Pipelines 2022\nDESCRIPTION: This YAML snippet illustrates how to configure the JavaToolInstaller@0 task in Azure Pipelines 2022. It installs a specified version of Java and sets JAVA_HOME, with mandatory parameters including JDK version and architecture, and source-specific options for Azure storage or local directories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Java tool installer v0\\n# Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME.\\n- task: JavaToolInstaller@0\\n  inputs:\\n    versionSpec: '8' # string. Required. JDK version. Default: 8.\\n    jdkArchitectureOption: # 'x64' | 'x86'. Required. JDK architecture. \\n    jdkSourceOption: # 'AzureStorage' | 'LocalDirectory' | 'PreInstalled'. Required. JDK source. \\n    #jdkFile: # string. Required when jdkSourceOption == LocalDirectory. JDK file. \\n    #azureResourceManagerEndpoint: # string. Required when jdkSourceOption == AzureStorage. Azure subscription. \\n    #azureStorageAccountName: # string. Required when jdkSourceOption == AzureStorage. Storage account name. \\n    #azureContainerName: # string. Required when jdkSourceOption == AzureStorage. Container name. \\n    #azureCommonVirtualFile: # string. Required when jdkSourceOption == AzureStorage. Common virtual path. \\n    #jdkDestinationDirectory: # string. Required when jdkSourceOption != PreInstalled. Destination directory. \\n    #cleanDestinationDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Clean destination directory. Default: true.\\n    #createExtractDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Create directory for extracting. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Calling PowerShell Script with Multiple Arguments in YAML Pipeline\nDESCRIPTION: YAML configuration to call a PowerShell script with multiple arguments in an Azure DevOps pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  inputs:\n    targetType: 'filePath'\n    filePath: $(System.DefaultWorkingDirectory)\\test2.ps1\n    arguments: > # Use this to avoid newline characters in multiline string\n      -input1 \"Hello\"\n      -input2 \"World\"\n  displayName: 'Print Hello World'\n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Manifests with Artifact Substitution in YAML\nDESCRIPTION: This snippet demonstrates how to use the Kubernetes Manifest task to deploy manifests to a Kubernetes cluster. It includes artifact substitution for container images and specifies image pull secrets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Deploy\n  inputs:\n    kubernetesServiceConnection: someK8sSC1\n    namespace: default\n    manifests: |\n      manifests/deployment.yml\n      manifests/service.yml\n    containers: |\n      foo/demo:$(tagVariable1)\n      bar/demo:$(tagVariable2)\n    imagePullSecrets: |\n      some-secret\n      some-other-secret\n```\n\n----------------------------------------\n\nTITLE: Patching Kubernetes Pod using YAML\nDESCRIPTION: This example shows how to patch a Kubernetes pod using the Kubernetes Manifest task. It specifies the pod name, merge strategy, and the patch to be applied.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Patch\n  inputs: \n    action: patch\n    kind: pod\n    name: demo-5fbc4d6cd9-pgxn4\n    mergeStrategy: strategic\n    patch: '{\"spec\":{\"containers\":[{\"name\":\"demo\",\"image\":\"foobar/demo:2239\"}]}}'\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Configuring Submodules and Credential Persistence in Azure Pipelines YAML\nDESCRIPTION: Shows how to check out submodules and persist credentials when checking out a repository in an Azure DevOps pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: self\n  submodules: true\n  persistCredentials: true\n```\n\n----------------------------------------\n\nTITLE: Setting App and Configuration Settings for Azure App Service\nDESCRIPTION: Defines application settings and configuration settings for Azure App Service deployments. Uses key-value pair syntax for specifying settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nAppSettings: '-Port 5000 -RequestTimeout 5000'\nConfigurationSettings: '-phpVersion 5.6 -linuxFxVersion node|6.11'\n```\n\n----------------------------------------\n\nTITLE: Executing File-Based Azure PowerShell Script in YAML Pipeline\nDESCRIPTION: This example demonstrates how to invoke a PowerShell script from a file and pass arguments to it using the AzurePowerShell@5 task in an Azure DevOps YAML pipeline. It specifies the Azure subscription, script type, script path, arguments, PowerShell version, and uses PowerShell Core.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v5.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- task: AzurePowerShell@5\n  inputs:\n    azureSubscription: my-arm-service-connection\n    scriptType: filePath\n    scriptPath: $(Build.SourcesDirectory)\\myscript.ps1\n    scriptArguments:\n      -Arg1 val1 `\n      -Arg2 val2 `\n      -Arg3 val3\n    azurePowerShellVersion: LatestVersion\n    pwsh: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Download Artifacts Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the JenkinsDownloadArtifacts@1 task which downloads artifacts produced by a Jenkins job. The configuration includes required parameters like jenkinsServerConnection and jobName, as well as optional parameters for build selection, artifact filtering, and Azure Storage integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Jenkins download artifacts v1\n# Download artifacts produced by a Jenkins job.\n- task: JenkinsDownloadArtifacts@1\n  inputs:\n    jenkinsServerConnection: # string. Alias: serverEndpoint. Required. Jenkins service connection. \n    jobName: # string. Required. Job name. \n    #jenkinsJobType: # string. Optional. Use when jobName = invalidjobName. Jenkins job type. \n    saveTo: 'jenkinsArtifacts' # string. Required. Save to. Default: jenkinsArtifacts.\n  # Advanced\n    jenkinsBuild: 'LastSuccessfulBuild' # 'LastSuccessfulBuild' | 'BuildNumber'. Required. Download artifacts produced by. Default: LastSuccessfulBuild.\n    #jenkinsBuildNumber: '1' # string. Required when jenkinsBuild == BuildNumber. Jenkins build number. Default: 1.\n    #itemPattern: '**' # string. Item Pattern. Default: **.\n    #downloadCommitsAndWorkItems: false # boolean. Download Commits and WorkItems. Default: false.\n    #startJenkinsBuildNumber: # string. Optional. Use when downloadCommitsAndWorkItems == true && jenkinsBuild == BuildNumber. Download commits and work items from. \n    #artifactDetailsFileNameSuffix: # string. Optional. Use when downloadCommitsAndWorkItems == invalid. Commit and WorkItem FileName. \n  # Propagated Artifacts\n    #propagatedArtifacts: false # boolean. Artifacts are propagated to Azure. Default: false.\n    #artifactProvider: 'azureStorage' # 'azureStorage'. Required when propagatedArtifacts == notValid. Artifact Provider. Default: azureStorage.\n    #ConnectedServiceNameARM: # string. Required when propagatedArtifacts == true. Azure Subscription. \n    #storageAccountName: # string. Required when propagatedArtifacts == true. Storage Account Name. \n    #containerName: # string. Required when propagatedArtifacts == true. Container Name. \n    #commonVirtualPath: # string. Optional. Use when propagatedArtifacts == true. Common Virtual Path.\n```\n\n----------------------------------------\n\nTITLE: Generating Deployment Manifest in Azure IoT Edge\nDESCRIPTION: This YAML example shows how to generate a deployment manifest for Azure IoT Edge modules. It specifies the necessary inputs including the template file and the output path for the generated manifest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n\"steps:\\n- task: AzureIoTEdge@2\\n  displayName: AzureIoTEdge - Generate deployment manifest\\n  inputs:\\n    action: Generate deployment manifest\\n    templateFilePath: deployment.template.json\\n    defaultPlatform: amd64\\n    deploymentManifestOutputPath: $(System.DefaultWorkingDirectory)/config/deployment.json\\n    validateGeneratedDeploymentManifest: false\"\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Template Basic Structure\nDESCRIPTION: Basic YAML structure for extending a pipeline using a template with parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/extends.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nextends:\n  template: string # The template referenced by the pipeline to extend.\n  parameters: # Parameters used in the extend.\n```\n\n----------------------------------------\n\nTITLE: JSON Variable Substitution Example - Azure DevOps\nDESCRIPTION: This JSON example demonstrates a nested configuration where the `ConnectionString` value needs to be replaced using variable substitution in Azure DevOps. To substitute the value, you must define a variable named `Data.DefaultConnection.ConnectionString` in the build or release pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"Data\": {\n    \"DefaultConnection\": {\n      \"ConnectionString\": \"Server=(localdb)\\SQLEXPRESS;Database=MyDB;Trusted_Connection=True\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App Using Custom Dockerfile\nDESCRIPTION: This example shows how to deploy a Container App using a custom Dockerfile. It creates a new Container App with a default name in a new resource group, building the application image from the specified Dockerfile.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    dockerfilePath: 'test.Dockerfile'\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifacts in YAML (Azure Pipelines 2022+)\nDESCRIPTION: This YAML snippet demonstrates how to use the PublishPipelineArtifact@0 task to publish a local directory or file as a named artifact for the current pipeline in Azure Pipelines 2022 and later versions. It includes options for specifying the artifact name, target path, and custom properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-pipeline-artifact-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Pipeline Artifacts v0\n# Publish a local directory or file as a named artifact for the current pipeline.\n- task: PublishPipelineArtifact@0\n  inputs:\n    artifactName: 'drop' # string. Required. The name of this artifact. Default: drop.\n    targetPath: # string. Required. Path to publish. \n    #properties: # string. Custom properties.\n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQubeAnalyze Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the SonarQubeAnalyze@7 task in an Azure Pipelines configuration. It specifies the task version and the JDK version to use for analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-analyze-v7.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Run Code Analysis v7\n# Run scanner and upload the results to the SonarQube Server.\n- task: SonarQubeAnalyze@7\n  inputs:\n    jdkversion: 'JAVA_HOME_17_X64' # 'JAVA_HOME' | 'JAVA_HOME_17_X64' | 'JAVA_HOME_21_X64'. Required. JDK version source for analysis. Default: JAVA_HOME_17_X64.\n```\n\n----------------------------------------\n\nTITLE: Configuring DeleteFiles@1 Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the DeleteFiles@1 task in Azure Pipelines. It includes all available inputs for the task, such as SourceFolder, Contents, RemoveSourceFolder, and RemoveDotFiles.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/delete-files-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Delete files v1\n# Delete folders, or files matching a pattern.\n- task: DeleteFiles@1\n  inputs:\n    #SourceFolder: # string. Source Folder. \n    Contents: 'myFileShare' # string. Required. Contents. Default: myFileShare.\n    #RemoveSourceFolder: false # boolean. Remove SourceFolder. Default: false.\n  # Advanced\n    #RemoveDotFiles: false # boolean. Remove files starting with a dot. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Variables Using Mapping Syntax in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to define simple hard-coded variables using mapping syntax in Azure Pipelines YAML. This approach is suitable for a straightforward set of name/value pairs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables: { string: string }\n```\n\n----------------------------------------\n\nTITLE: Configuring Sparse Checkout Patterns in Azure Pipelines YAML\nDESCRIPTION: Example of using the sparseCheckoutPatterns property to enable sparse checkout in non-cone mode with pattern matching.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: repo\n  sparseCheckoutPatterns: /* !/img\n```\n\n----------------------------------------\n\nTITLE: Microsoft-Hosted Pool with VM Image\nDESCRIPTION: Configuration for using a Microsoft-hosted pool by specifying the VM image name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: ubuntu-latest\n```\n\n----------------------------------------\n\nTITLE: Defining Stages in Template YAML\nDESCRIPTION: Structure for defining stages within a template YAML file. It includes expected parameters and stage definitions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-template.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nparameters: { string: any } # expected parameters\nstages: [ stage ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Group Deployment Task (v2022.1+)\nDESCRIPTION: YAML configuration for Azure Resource Group Deployment task version 2022.1 and later. Defines settings for deploying ARM templates, managing resource groups, and configuring virtual machines in Azure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure resource group deployment v2\n# Deploy an Azure Resource Manager (ARM) template to a resource group and manage virtual machines.\n- task: AzureResourceGroupDeployment@2\n  inputs:\n  # Azure Details\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    action: 'Create Or Update Resource Group' # 'Create Or Update Resource Group' | 'Select Resource Group' | 'Start' | 'Stop' | 'StopWithDeallocate' | 'Restart' | 'Delete' | 'DeleteRG'. Required. Action. Default: Create Or Update Resource Group.\n    resourceGroupName: # string. Required. Resource group. \n    #location: # string. Required when action = Create Or Update Resource Group. Location. \n  # Template\n    #templateLocation: 'Linked artifact' # 'Linked artifact' | 'URL of the file'. Required when action = Create Or Update Resource Group. Template location. Default: Linked artifact.\n    #csmFileLink: # string. Required when templateLocation = URL of the file && action = Create Or Update Resource Group. Template link. \n    #csmParametersFileLink: # string. Optional. Use when templateLocation = URL of the file && action = Create Or Update Resource Group. Template parameters link. \n    #csmFile: # string. Required when templateLocation = Linked artifact && action = Create Or Update Resource Group. Template. \n    #csmParametersFile: # string. Optional. Use when templateLocation = Linked artifact && action = Create Or Update Resource Group. Template parameters. \n    #overrideParameters: # string. Optional. Use when action = Create Or Update Resource Group. Override template parameters. \n    #deploymentMode: 'Incremental' # 'Incremental' | 'Complete' | 'Validation'. Required when action = Create Or Update Resource Group. Deployment mode. Default: Incremental.\n  # Advanced deployment options for virtual machines\n    #enableDeploymentPrerequisites: 'None' # 'None' | 'ConfigureVMwithWinRM' | 'ConfigureVMWithDGAgent'. Optional. Use when action = Create Or Update Resource Group || action = Select Resource Group. Enable prerequisites. Default: None.\n    #teamServicesConnection: # string. Alias: deploymentGroupEndpoint. Required when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Azure Pipelines service connection. \n    #teamProject: # string. Alias: project. Required when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Team project. \n    #deploymentGroupName: # string. Required when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Deployment Group. \n    #copyAzureVMTags: true # boolean. Optional. Use when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Copy Azure VM tags to agents. Default: true.\n    #runAgentServiceAsUser: false # boolean. Optional. Use when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Run agent service as a user. Default: false.\n    #userName: # string. Required when enableDeploymentPrerequisites = ConfigureVMWithDGAgent && runAgentServiceAsUser = true. User name. \n    #password: # string. Optional. Use when enableDeploymentPrerequisites = ConfigureVMWithDGAgent && runAgentServiceAsUser = true. Password. \n    #outputVariable: # string. Optional. Use when (action = Create Or Update Resource Group || action = Select Resource Group) && (enableDeploymentPrerequisites = ConfigureVMwithWinRM || enableDeploymentPrerequisites = None). VM details for WinRM. \n  # Advanced\n    #deploymentName: # string. Optional. Use when action = Create Or Update Resource Group. Deployment name. \n    #deploymentOutputs: # string. Optional. Use when action = Create Or Update Resource Group. Deployment outputs. \n    #addSpnToEnvironment: false # boolean. Optional. Use when action = Create Or Update Resource Group. Access service principal details in override parameters. Default: false.\n    #useWithoutJSON: false # boolean. Optional. Use when action = Create Or Update Resource Group. Use individual output values without JSON.Stringify applied. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Multi-Platform Pipeline with Template Reference\nDESCRIPTION: Complete pipeline example showing how to use the same template across different operating systems with job-specific customizations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-template.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: azure-pipelines.yml\n\njobs:\n- job: macOS\n  pool:\n    vmImage: macOS-latest\n  steps:\n  - template: steps/build.yml # Template reference\n\n- job: Linux\n  pool:\n    vmImage: ubuntu-latest\n  steps:\n  - template: steps/build.yml # Template reference\n\n- job: Windows\n  pool:\n    vmImage: windows-latest\n  steps:\n  - template: steps/build.yml # Template reference\n  - script: sign              # Extra step on Windows only\n```\n\n----------------------------------------\n\nTITLE: Targeting Environment Resource in YAML Pipeline\nDESCRIPTION: Example showing how to reference an environment with a specific resource in a deployment job, along with a Kubernetes deployment task that receives connection details automatically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-environment.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment: 'smarthotel-dev.bookings'\nstrategy:\n  runOnce:\n    deploy:\n      steps:\n      - task: KubernetesManifest@0\n        displayName: Deploy to Kubernetes cluster\n        inputs:\n          action: deploy\n          namespace: $(k8sNamespace)\n          manifests: $(System.ArtifactsDirectory)/manifests/*\n          imagePullSecrets: $(imagePullSecret)\n          containers: $(containerRegistry)/$(imageRepository):$(tag)\n          # value for kubernetesServiceConnection input automatically passed down to task by environment.resource input\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Task for Azure Pipelines 2020\nDESCRIPTION: YAML configuration for the CMake@1 task in Azure Pipelines version 2020. It includes options for working directory and arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cmake-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# CMake v1\n# Build with the CMake cross-platform build system.\n- task: CMake@1\n  inputs:\n    #workingDirectory: 'build' # string. Alias: cwd. Working Directory. Default: build.\n    #cmakeArgs: # string. Arguments.\n```\n\n----------------------------------------\n\nTITLE: Deploying Pre-built Azure Static Web App\nDESCRIPTION: This YAML snippet shows how to deploy a pre-built Azure Static Web App by skipping the build steps. It installs Node.js, runs custom build commands, and then uses the AzureStaticWebApp@0 task to deploy the built files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-static-web-app-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n- main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n  - task: NodeTool@0\n    inputs:\n      versionSpec: '20.x'\n    displayName: 'Install Node.js'\n\n  - script: |\n      npm ci\n      npm run build\n    displayName: 'dependencies install and distribution build'\n\n- task: AzureStaticWebApp@0\n  inputs:\n    app_location : '/dist'\n    output_location: '' # Leave this empty\n    skip_app_build: true\n    skip_api_build: true\n    azure_static_web_apps_api_token: $(deployment_token)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Function Task in YAML\nDESCRIPTION: YAML configuration for invoking an Azure Function with custom parameters including method, headers, query parameters and completion handling options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Invoke Azure Function v1\n# Invoke an Azure Function.\n- task: AzureFunction@1\n  inputs:\n    function: # string. Required. Azure function URL. \n    key: # string. Required. Function key. \n    method: 'POST' # 'OPTIONS' | 'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'TRACE' | 'PATCH'. Required. Method. Default: POST.\n    #headers: # string. Headers. \n    #queryParameters: # string. Query parameters. \n    #body: # string. Optional. Use when method != GET && method != HEAD. Body. \n  # Advanced\n    waitForCompletion: 'false' # 'true' | 'false'. Required. Completion event. Default: false.\n    #successCriteria: # string. Optional. Use when waitForCompletion = false. Success criteria.\n```\n\n----------------------------------------\n\nTITLE: FTP Upload Task Syntax (Azure Pipelines >= 2022.2)\nDESCRIPTION: This YAML snippet defines the syntax for the FtpUpload@2 task in Azure Pipelines for versions 2022.2 and later. It allows configuring FTP uploads with options for authentication, server details, file patterns, and remote directory. It includes parameters for advanced settings such as UTF8 support, directory cleaning, SSL trust, and custom FTP commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# FTP upload v2\n# Upload files using FTP.\n- task: FtpUpload@2\n  inputs:\n    credentialsOption: 'serviceEndpoint' # 'serviceEndpoint' | 'inputs'. Alias: credsType. Required. Authentication Method. Default: serviceEndpoint.\n    serverEndpoint: # string. Required when credsType = serviceEndpoint. FTP Service Connection. \n    #serverUrl: # string. Required when credsType = inputs. Server URL. \n    #username: # string. Required when credsType = inputs. Username. \n    #password: # string. Required when credsType = inputs. Password. \n    #implicitFTPS: false # boolean. Use implicit FTPS. Default: false.\n    rootDirectory: # string. Alias: rootFolder. Required. Root folder. \n    filePatterns: '**' # string. Required. File patterns. Default: **.\n    remoteDirectory: '/upload/$(Build.BuildId)/' # string. Alias: remotePath. Required. Remote directory. Default: /upload/$(Build.BuildId)/.\n  # Advanced\n    #enableUtf8: false # boolean. Enable UTF8 support. Default: false.\n    #clean: false # boolean. Delete remote directory. Default: false.\n    #cleanContents: false # boolean. Optional. Use when clean = false. Clear remote directory contents. Default: false.\n    #preservePaths: false # boolean. Preserve file paths. Default: false.\n    #trustSSL: false # boolean. Trust server certificate. Default: false.\n    #customCmds: # string. FTP Commands.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Defining Command Line v1 Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the Command Line v1 task in an Azure Pipelines yaml file. It includes all available input parameters for the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cmd-line-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Command Line v1\n# Run a command line with arguments.\n- task: CmdLine@1\n  inputs:\n    filename: # string. Required. Tool. \n    #arguments: # string. Arguments. \n  # Advanced\n    #workingFolder: # string. Working folder. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Container Resources in Azure Pipelines YAML (2020.1+)\nDESCRIPTION: YAML schema for defining container resources in Azure Pipelines for version 2020.1 and later, including all available properties such as image reference, triggers, environment variables, port mappings, and volume configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers-container.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n- container: string # Required as first property. Alias of the container.\n  image: string # Required. Container image tag.\n  type: string # Type of the registry like ACR or GCR.\n  trigger: trigger | none | true # Specify none to disable, true to trigger on all image tags, or use the full syntax as described in the following examples.\n  endpoint: string # ID of the service endpoint connecting to a private container registry.\n  env: # Variables to map into the container's environment.\n    string: string # Name/value pairs\n  mapDockerSocket: boolean # Set this flag to false to force the agent not to setup the /var/run/docker.sock volume on container jobs.\n  options: string # Options to pass into container host.\n  ports: [ string ] # Ports to expose on the container.\n  volumes: [ string ] # Volumes to mount on the container.\n  mountReadOnly: # Volumes to mount read-only, the default is all false.\n    work: boolean # Mount the work directory as readonly.\n    externals: boolean # Mount the externals directory as readonly.\n    tools: boolean # Mount the tools directory as readonly.\n    tasks: boolean # Mount the tasks directory as readonly.\n  azureSubscription: string # Azure subscription (ARM service connection) for container registry.\n  resourceGroup: string # Resource group for your ACR.\n  registry: string # Registry for container images.\n  repository: string # Name of the container image repository in ACR.\n  localImage: boolean # When true, uses a locally tagged image instead of using docker pull to get the image. The default is false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtual Application Name in Azure Web App Deployment\nDESCRIPTION: This snippet describes the `VirtualApplication` parameter for Azure Web App deployments, used to specify the name of a virtual application configured in the Azure portal. It is optional and used when the `WebAppKind` parameter is not set to `linux`, `applinux` or empty.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n**`VirtualApplication`** - **Virtual application**<br>\n`string`. Optional. Use when `WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\"`.\n```\n\n----------------------------------------\n\nTITLE: Basic CodeQL Analysis Task Configuration in YAML\nDESCRIPTION: Basic YAML configuration for the AdvancedSecurity-Codeql-Analyze task showing available input parameters\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-codeql-analyze-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Advanced Security Perform CodeQL analysis v1\n# Finalizes the CodeQL database and runs the analysis queries.\n- task: AdvancedSecurity-Codeql-Analyze@1\n  inputs:\n    #WaitForProcessing: false # boolean. Enable Wait for Processing. Default: false.\n    #WaitForProcessingInterval: '5' # string. Optional. Use when WaitForProcessing = true. Wait for Processing Time Interval. Default: 5.\n    #WaitForProcessingTimeout: '120' # string. Optional. Use when WaitForProcessing = true. Wait for Processing Timeout. Default: 120.\n```\n\n----------------------------------------\n\nTITLE: Example Gulp Task Usage\nDESCRIPTION: This example demonstrates how to run a gulp.js file within an Azure Pipeline. It first installs the necessary npm packages and then executes the gulp task using the specified gulpfile and gulp.js location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gulp-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\n```yml\n- task: Npm@1\n  inputs:\n    command: 'install'\n\n- task: gulp@0\n  inputs:\n    gulpFile: 'gulpfile.js'\n    gulpjs: 'node_modules/gulp/bin/gulp.js'\n```\n```\n\n----------------------------------------\n\nTITLE: Generating Gradle Wrapper Configuration\nDESCRIPTION: Demonstrates how to generate a Gradle wrapper for consistent build environment across different machines and agents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ngradle wrapper\n```\n\n----------------------------------------\n\nTITLE: Configuring cURL Upload Files Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the cURLUploader@1 task in an Azure Pipelines workflow. It specifies required inputs like files to upload and the destination URL, as well as optional parameters for authentication and additional cURL arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/curl-uploader-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# cURL Upload Files v1\n# Use cURL to upload files with FTP, FTPS, SFTP, HTTP, and more.\n- task: cURLUploader@1\n  inputs:\n    files: # string. Required. Files. \n    #username: # string. Username. \n    #password: # string. Password. \n    url: # string. Required. URL. \n    #options: # string. Optional Arguments. \n  # Advanced\n    #redirectStderr: true # boolean. Redirect Standard Error to Standard Out. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Ant Build Task in Azure Pipelines\nDESCRIPTION: YAML configuration for the Ant@1 task that enables building with Apache Ant. Includes options for build file specification, JUnit test results publishing, code coverage configuration, and Java/JDK settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Ant v1\n# Build with Apache Ant.\n- task: Ant@1\n  inputs:\n    buildFile: 'build.xml' # string. Alias: antBuildFile. Required. Ant build file. Default: build.xml.\n    #options: # string. Options. \n    #targets: # string. Target(s). \n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n  # Code Coverage\n    #codeCoverageToolOptions: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\n    codeCoverageClassFilesDirectories: '.' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: ..\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool != None. Source files directories. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n  # Advanced\n    #antHomeDirectory: # string. Alias: antHomeUserInputPath. Set ANT_HOME path. \n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkUserInputDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n```\n\n----------------------------------------\n\nTITLE: PowerShell Core Step with Environment Variables Example\nDESCRIPTION: An example of implementing the 'pwsh' step with environment variables, working directory settings, and error handling. This shows how to display a greeting using an environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-pwsh.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- pwsh: Write-Host Hello $($env:name)\n  displayName: Say hello\n  name: firstStep\n  workingDirectory: $(build.sourcesDirectory)\n  failOnStderr: true\n  env:\n    name: Microsoft\n```\n\n----------------------------------------\n\nTITLE: Configuring Visual Studio Build Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the VSBuild@1 task in an Azure Pipelines file. It includes all available input options for building with MSBuild and setting Visual Studio version properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/vsbuild-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Visual Studio build v1\n# Build with MSBuild and set the Visual Studio version property.\n- task: VSBuild@1\n  inputs:\n    solution: '**\\*.sln' # string. Required. Solution. Default: **\\*.sln.\n    #vsVersion: 'latest' # 'latest' | '17.0' | '16.0' | '15.0' | '14.0' | '12.0' | '11.0'. Visual Studio Version. Default: latest.\n    #msbuildArgs: # string. MSBuild Arguments. \n    #platform: # string. Platform. \n    #configuration: # string. Configuration. \n    #clean: false # boolean. Clean. Default: false.\n  # Advanced\n    #maximumCpuCount: false # boolean. Build in Parallel. Default: false.\n    #restoreNugetPackages: false # boolean. Restore NuGet Packages. Default: false.\n    #msbuildArchitecture: 'x86' # 'x86' | 'x64'. MSBuild Architecture. Default: x86.\n    #logProjectEvents: true # boolean. Record Project Details. Default: true.\n    #createLogFile: false # boolean. Create Log File. Default: false.\n    #logFileVerbosity: 'normal' # 'quiet' | 'minimal' | 'normal' | 'detailed' | 'diagnostic'. Optional. Use when createLogFile = true. Log File Verbosity. Default: normal.\n    #enableDefaultLogger: true # boolean. Enable Default Logger. Default: true.\n    #customVersion: # string. Custom Version.\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to copy build output files to the artifact staging directory and then publish them as build artifacts. It uses the CopyFiles and PublishBuildArtifacts tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-build-artifacts-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CopyFiles@2\n  inputs:\n    contents: '_buildOutput/**'\n    targetFolder: $(Build.ArtifactStagingDirectory)\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathToPublish: $(Build.ArtifactStagingDirectory)\n    artifactName: MyBuildOutputs\n```\n\n----------------------------------------\n\nTITLE: Creating Tool Cache Directory for Python\nDESCRIPTION: This code snippet provides the directory structure required to store the desired Python version in the tool cache for a self-hosted agent. It details how to organize the files and ensures the agent can locate the appropriate Python installation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/use-python-version-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$AGENT_TOOLSDIRECTORY/\n    Python/\n        {version number}/\n            {platform}/\n                {tool files}\n            {platform}.complete\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App with Custom Name\nDESCRIPTION: This example demonstrates deploying a Container App with a custom name. It creates a new Container App with the specified name in a new resource group based on that name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    containerAppName: 'my-test-container-app'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Web App Deployment for Azure Pipelines 2022.2 and Earlier\nDESCRIPTION: YAML configuration for deploying Azure Web Apps in Azure Pipelines 2022.2 or earlier versions. Shows basic deployment settings and configuration options with simplified runtime stack options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Web App v1\n# Deploy an Azure Web App for Linux or Windows.\n- task: AzureWebApp@1\n  inputs:\n    azureSubscription: # string. Required. Azure subscription. \n    appType: # 'webApp' | 'webAppLinux'. Required. App type. \n    appName: # string. Required. App name. \n    #deployToSlotOrASE: false # boolean. Optional. Use when appType != \"\". Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #customDeployFolder: # string. Optional. Use when package EndsWith .war. Custom Deploy Folder. \n    #runtimeStack: # string. Optional. Use when appType = webAppLinux. Runtime stack. \n    #startUpCommand: # string. Optional. Use when appType = webAppLinux. Startup command. \n  # Application and Configuration Settings\n    #customWebConfig: # string. Optional. Use when appType != webAppLinux && package NotEndsWith .war. Generate web.config parameters for Python, Node.js, Go and Java apps. \n    #appSettings: # string. App settings. \n    #configurationStrings: # string. Configuration settings. \n  # Additional Deployment Options\n    #deploymentMethod: 'auto' # 'auto' | 'zipDeploy' | 'runFromPackage'. Required when appType != webAppLinux && appType != \"\" && package NotEndsWith .war && package NotEndsWith .jar. Deployment method. Default: auto.\n```\n\n----------------------------------------\n\nTITLE: Defining Resources in Azure Pipelines 2020\nDESCRIPTION: YAML syntax for defining resources in Azure DevOps pipelines version 2020. This includes builds, containers, pipelines, repositories, and packages, but notably excludes webhooks which were introduced in a later version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  packages: [ package ] # List of package resources.\n```\n\n----------------------------------------\n\nTITLE: Defining JavaToolInstaller Task in YAML for Azure Pipelines 2020.1\nDESCRIPTION: This YAML configuration snippet shows the JavaToolInstaller@0 task setup for Azure Pipelines version 2020.1 and below. It involves specifying a Java version to install with configurable options for the JDK's architecture and the source, including Azure-related settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Java tool installer v0\\n# Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME.\\n- task: JavaToolInstaller@0\\n  inputs:\\n    versionSpec: '8' # string. Required. JDK version. Default: 8.\\n    jdkArchitectureOption: # 'x64' | 'x86'. Required. JDK architecture. \\n    jdkSourceOption: # 'AzureStorage' | 'LocalDirectory' | 'PreInstalled'. Required. JDK source. \\n    #jdkFile: # string. Required when jdkSourceOption == LocalDirectory. JDK file. \\n    #azureResourceManagerEndpoint: # string. Required when jdkSourceOption == AzureStorage. Azure subscription. \\n    #azureStorageAccountName: # string. Required when jdkSourceOption == AzureStorage. Storage account name. \\n    #azureContainerName: # string. Required when jdkSourceOption == AzureStorage. Container name. \\n    #azureCommonVirtualFile: # string. Required when jdkSourceOption == AzureStorage. Common virtual path. \\n    #jdkDestinationDirectory: # string. Required when jdkSourceOption != PreInstalled. Destination directory. \\n    #cleanDestinationDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Clean destination directory. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Basic Steps Template Syntax in Azure Pipelines\nDESCRIPTION: Basic YAML structure for defining a steps template with required properties and parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-template.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- template: string # Required as first property. Reference to a template for this step.\n  parameters: # Parameters used in a step template.\n```\n\n----------------------------------------\n\nTITLE: Downloading a Package with Universal Package Task in YAML Pipeline\nDESCRIPTION: YAML configuration for downloading a package from a feed using the Universal Package task. This example specifies the download directory, feed, package name, and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/universal-packages-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Download Universal Package\nsteps:\n- task: UniversalPackages@0\n  displayName: 'Universal download'\n  inputs:\n    downloadDirectory: Application\n    vstsFeed: '00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000001'\n    vstsFeedPackage: imagemagick\n    vstsPackageVersion: 1.0.0\n```\n\n----------------------------------------\n\nTITLE: Baking Kubernetes Manifests with Kustomize\nDESCRIPTION: Example of baking manifest files using Kustomize from a directory containing kustomization.yaml.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from kustomization path\n  inputs:\n    action: bake\n    renderType: kustomize\n    kustomizationPath: folderContainingKustomizationFile\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n```\n\n----------------------------------------\n\nTITLE: Building Service Images with Docker Compose in YAML\nDESCRIPTION: YAML configuration for building service images using Docker Compose with Azure Container Registry integration, image tagging, and Docker Compose file arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Build services\n  inputs:\n    action: Build services\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    additionalImageTags: $(Build.BuildId)\n    dockerComposeFileArgs: |\n      firstArg=$(firstArg)\n      secondArg=$(secondArg)\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App with Specific Runtime Stack\nDESCRIPTION: This example demonstrates deploying a Container App with a specific runtime stack. It creates a new Container App with a default name in a new resource group, using the .NET 7 runtime stack for the application image.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    runtimeStack: 'dotnetcore:7.0'\n```\n\n----------------------------------------\n\nTITLE: Minimal Deploy Container App from Existing Image\nDESCRIPTION: This example shows how to deploy a Container App using a previously published image. It creates a new Container App with a default name in a new resource group, using an existing image from a specified registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    imageToDeploy: mcr.microsoft.com/<existing-image>:latest\n```\n\n----------------------------------------\n\nTITLE: Downloading Package from Azure Artifacts YAML Task\nDESCRIPTION: Configures a task to download a specific NuGet package version from an Azure Artifacts feed, with a default download destination of system artifacts directory\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-package-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadPackage@0\n  inputs:\n    feed: # string. Required. Feed. \n    definition: # string. Required. Package. \n    version: # string. Required. Version. \n    downloadPath: '$(System.ArtifactsDirectory)' # string. Required. Destination directory. Default: $(System.ArtifactsDirectory).\n```\n\n----------------------------------------\n\nTITLE: Defining Slot Name Parameter\nDESCRIPTION: Defines the `slotName` input parameter that requires specifying an existing slot name while deploying to a slot or App Service Environment. The default is set to production.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"slotName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`slotName`** - **Slot**<br>\n`string`. Required when `deployToSlotOrASE = true`. Default value: `production`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies an existing slot, excluding the production slot.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Function on Kubernetes Task\nDESCRIPTION: YAML configuration for deploying Azure functions to Kubernetes clusters. Includes required and optional parameters for service connections, Docker registry configuration, and deployment settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-on-kubernetes-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure Function on Kubernetes v1\n# Deploy Azure function to Kubernetes cluster.\n- task: AzureFunctionOnKubernetes@1\n  inputs:\n  # Service Connections\n    connectionType: 'Kubernetes Service Connection' # 'Azure Resource Manager' | 'Kubernetes Service Connection'. Required. Service connection type. Default: Kubernetes Service Connection.\n    dockerRegistryServiceConnection: # string. Required. Docker registry service connection. \n    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection. Kubernetes service connection. \n    #azureSubscriptionConnection: # string. Alias: azureSubscriptionEndpoint. Required when connectionType = Azure Resource Manager. Azure subscription. \n    #azureResourceGroup: # string. Required when connectionType = Azure Resource Manager. Resource group. \n    #kubernetesCluster: # string. Required when connectionType = Azure Resource Manager. Kubernetes cluster. \n  # Commands\n    #namespace: # string. Kubernetes namespace. \n    #secretName: # string. Secret Name. \n    #dockerHubNamespace: # string. Docker Hub namespace. \n    appName: # string. Required. Application Name. \n    #functionRootDirectory: # string. Function root directory. \n    #waitForStability: true # boolean. Wait for stability. Default: true.\n    #arguments: # string. Arguments.\n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQubeAnalyze@4 task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the SonarQubeAnalyze@4 task in an Azure Pipelines workflow. The task runs the scanner and uploads results to the SonarQube server. No inputs are required for this task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-analyze-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Run Code Analysis v4\n# Run scanner and upload the results to the SonarQube server.\n- task: SonarQubeAnalyze@4\n  inputs: # none\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell on Target Machines Task in YAML\nDESCRIPTION: YAML configuration example for the PowerShellOnTargetMachines@2 task showing all available inputs including machine targeting, authentication, script configuration, and execution options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-on-target-machines-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell on Target Machines v2\n# Execute PowerShell scripts on remote machine(s).\n- task: PowerShellOnTargetMachines@2\n  inputs:\n    EnvironmentName: # string. Required. Machines. \n    #AdminUserName: # string. Admin Login. \n    #AdminPassword: # string. Password. \n    #Protocol: # 'Http' | 'Https'. Protocol. \n    #TestCertificate: true # boolean. Optional. Use when Protocol = Https. Test Certificate. Default: true.\n  # Deployment\n    ScriptPath: # string. Required. PowerShell Script. \n    #ScriptArguments: # string. Script Arguments. \n    #InitializationScriptPath: # string. Initialization Script. \n    #SessionVariables: # string. Session Variables. \n  # Advanced Options\n    #RunPowershellInParallel: true # boolean. Run PowerShell in Parallel. Default: true.\n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Filter Criteria.\n```\n\n----------------------------------------\n\nTITLE: Build Platform and Configuration Settings\nDESCRIPTION: Example demonstrating how to set Platform and Configuration arguments using build variables in MSBuild task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nPlatform: $(BuildPlatform)\nConfiguration: $(BuildConfiguration)\n```\n\n----------------------------------------\n\nTITLE: Configuring ARM Template Deployment Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines the configuration options for the AzureResourceManagerTemplateDeployment@3 task. It includes parameters for specifying the deployment scope, Azure connection details, template location, and various deployment options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-manager-template-deployment-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# ARM template deployment v3\n# Deploy an Azure Resource Manager (ARM) template to all the deployment scopes.\n- task: AzureResourceManagerTemplateDeployment@3\n  inputs:\n  # Azure Details\n    deploymentScope: 'Resource Group' # 'Management Group' | 'Subscription' | 'Resource Group'. Required. Deployment scope. Default: Resource Group.\n    azureResourceManagerConnection: # string. Alias: ConnectedServiceName. Required. Azure Resource Manager connection. \n    #subscriptionId: # string. Alias: subscriptionName. Required when deploymentScope != Management Group. Subscription. \n    #action: 'Create Or Update Resource Group' # 'Create Or Update Resource Group' | 'DeleteRG'. Required when deploymentScope = Resource Group. Action. Default: Create Or Update Resource Group.\n    #resourceGroupName: # string. Required when deploymentScope = Resource Group. Resource group. \n    #location: # string. Required when action = Create Or Update Resource Group || deploymentScope != Resource Group. Location. \n  # Template\n    #templateLocation: 'Linked artifact' # 'Linked artifact' | 'URL of the file'. Required when action = Create Or Update Resource Group || deploymentScope != Resource Group. Template location. Default: Linked artifact.\n    #csmFileLink: # string. Required when (action = Create Or Update Resource Group || deploymentScope != Resource Group) && templateLocation = URL of the file. Template link. \n    #csmParametersFileLink: # string. Optional. Use when (action = Create Or Update Resource Group || deploymentScope != Resource Group) && templateLocation = URL of the file. Template parameters link. \n    #csmFile: # string. Required when (action = Create Or Update Resource Group || deploymentScope != Resource Group) && templateLocation = Linked artifact. Template. \n    #csmParametersFile: # string. Optional. Use when (action = Create Or Update Resource Group || deploymentScope != Resource Group) && templateLocation = Linked artifact. Template parameters. \n    #overrideParameters: # string. Optional. Use when action = Create Or Update Resource Group || deploymentScope != Resource Group. Override template parameters. \n    #deploymentMode: 'Incremental' # 'Incremental' | 'Complete' | 'Validation'. Required when action = Create Or Update Resource Group || deploymentScope != Resource Group. Deployment mode. Default: Incremental.\n  # Advanced\n    #deploymentName: # string. Optional. Use when action = Create Or Update Resource Group || deploymentScope != Resource Group. Deployment name. \n    #deploymentOutputs: # string. Optional. Use when action = Create Or Update Resource Group || deploymentScope != Resource Group. Deployment outputs. \n    #addSpnToEnvironment: false # boolean. Optional. Use when action = Create Or Update Resource Group || deploymentScope != Resource Group. Access service principal details in override parameters. Default: false.\n    #useWithoutJSON: false # boolean. Optional. Use when action = Create Or Update Resource Group || deploymentScope != Resource Group. Use individual output values without JSON.Stringify applied. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Publishing Python Distribution to Official Python Registry\nDESCRIPTION: This example shows how to use the TwineAuthenticate task to publish a Python distribution to the official Python registry (PyPI). It includes steps for creating a service connection, authenticating, and uploading the distribution using twine.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/twine-authenticate-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Install python distributions like wheel, twine etc\n- script: |\n     pip install wheel\n     pip install twine\n  \n# Build the python distribution from source\n- script: |\n     python setup.py bdist_wheel\n   \n- task: TwineAuthenticate@1\n  displayName: Twine Authenticate\n  inputs:\n    # In this case, name of the service connection is \"pypitest\".\n    pythonUploadServiceConnection: pypitest\n  \n# Use command line script to 'twine upload', use -r to pass the repository name and --config-file to pass the environment variable set by the authenticate task.\n- script: |\n     python -m twine upload -r \"pypitest\" --config-file $(PYPIRC_PATH) dist/*.whl\n```\n\n----------------------------------------\n\nTITLE: Implementing Exists Demand Check in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to check for the existence of a capability on an agent using the exists operation in the pool demands section. This is a simple check that verifies if a capability with the specified name exists, with case-insensitive comparison.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool-demands.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\npool:\n  name: MyPool\n  demands: myCustomCapability # exists check for myCustomCapability\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Function Task in YAML\nDESCRIPTION: YAML configuration example for invoking an Azure Function with various input parameters including function URL, key, HTTP method, headers, query parameters and completion options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Invoke Azure Function v0\n# Invoke Azure function as a part of your process.\n- task: AzureFunction@0\n  inputs:\n    function: # string. Required. Azure function url. \n    key: # string. Required. Function key. \n    method: 'POST' # 'OPTIONS' | 'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'TRACE' | 'PATCH'. Required. Method. Default: POST.\n    #headers: # string. Headers. \n    #queryParameters: # string. Query parameters. \n    #body: '{\"JobId\": \"$(system.jobId)\", \"PlanId\": \"$(system.planId)\", \"TimelineId\": \"$(system.timelineId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"VstsUrl\": \"$(system.CollectionUri)\",\"AuthToken\": \"$(system.AccessToken)\"}' # string. Optional. Use when method != GET && method != HEAD. Body. Default: {\"JobId\": \"$(system.jobId)\", \"PlanId\": \"$(system.planId)\", \"TimelineId\": \"$(system.timelineId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"VstsUrl\": \"$(system.CollectionUri)\",\"AuthToken\": \"$(system.AccessToken)\"}.\n  # Completion Options\n    waitForCompletion: 'false' # 'true' | 'false'. Required. Complete based on. Default: false.\n    #successCriteria: # string. Optional. Use when waitForCompletion = false. Success criteria.\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Func Core Tools with YAML\nDESCRIPTION: This snippet provides the YAML syntax to install the Azure Functions Core Tools using the FuncToolsInstaller@0 task. The primary parameter is the 'version', which defaults to 'latest' but can be specified to target a particular version. Dependencies include Azure Pipelines environment support. Expected input is the YAML pipeline definition, with no direct output variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/func-tools-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Install Azure Func Core Tools v0\\n# Install Azure Func Core Tools.\\n- task: FuncToolsInstaller@0\\n  inputs:\\n    #version: 'latest' # string. Version. Default: latest.\\n\n```\n\n----------------------------------------\n\nTITLE: Authenticate with PyPI and Azure Artifacts Feeds\nDESCRIPTION: Example showing pip authentication configuration that first checks PyPI then falls back to private Azure Artifacts feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PipAuthenticate@1\n  displayName: 'Pip Authenticate'\n  inputs:\n    # Provide list of feed names which you want to authenticate.\n    # Project scoped feeds must include the project name in addition to the feed name.\n    artifactFeeds: 'project1/myTestFeed1, myTestFeed2'\n    # Setting this variable to \"true\" will force pip to get distributions from official python registry first and fallback to feeds mentioned above if distributions are not found there.\n    onlyAddExtraIndex: true\n\n# Use command line tool to 'pip install'.\n- script: |\n    pip install HelloTestPackage\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Resources Syntax in Azure DevOps YAML\nDESCRIPTION: Basic syntax for defining pipeline resources in an Azure DevOps YAML pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npipelines: [ pipeline ] # List of pipeline resources.\n```\n\n----------------------------------------\n\nTITLE: Publishing JUnit Test Results to Azure Pipelines\nDESCRIPTION: Configuration option to publish JUnit test results from Gradle build to Azure Pipelines. When enabled, test result files matching the specified pattern will be published as test runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npublishJUnitResults: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven v1 Task in Azure Pipelines YAML\nDESCRIPTION: Example YAML configuration for the Maven@1 task. The task allows building with Apache Maven and provides various configuration options including POM file specification, JUnit test publishing, code coverage tools, JDK configuration, Maven version selection, and code analysis tools like SonarQube, Checkstyle, PMD, and FindBugs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Maven v1\n# Build with Apache Maven.\n- task: Maven@1\n  inputs:\n    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.\n    #goals: 'package' # string. Goal(s). Default: package.\n    #options: # string. Options. \n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to TFS/Team Services. Default: true.\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test Results Files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test Run Title. \n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code Coverage Tool. Default: None.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class Inclusion/Exclusion Filters. \n    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class Files Directories. \n    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source Files Directories. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail When Code Coverage Results Are Missing. Default: false.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK Version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK Path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK Architecture. Default: x64.\n    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven Version. Default: Default.\n    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven Path. \n    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.\n    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.\n    #mavenAuthenticateFeed: true # boolean. Alias: mavenFeedAuthenticate. Authenticate built-in Maven feeds. Default: true.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube Analysis. Default: false.\n    #sonarQubeServiceEndpoint: # string. Alias: sqConnectedServiceName. Required when sqAnalysisEnabled = true. SonarQube Endpoint. \n    #sonarQubeProjectName: # string. Alias: sqProjectName. Optional. Use when sqAnalysisEnabled = true. SonarQube Project Name. \n    #sonarQubeProjectKey: # string. Alias: sqProjectKey. Optional. Use when sqAnalysisEnabled = true. SonarQube Project Key. \n    #sonarQubeProjectVersion: # string. Alias: sqProjectVersion. Optional. Use when sqAnalysisEnabled = true. SonarQube Project Version. \n    #sonarQubeSpecifyDB: false # boolean. Alias: sqDbDetailsRequired. Optional. Use when sqAnalysisEnabled = true. The SonarQube server version is lower than 5.2. Default: false.\n    #sonarQubeDBUrl: # string. Alias: sqDbUrl. Optional. Use when sqDbDetailsRequired = true. Db Connection String. \n    #sonarQubeDBUsername: # string. Alias: sqDbUsername. Optional. Use when sqDbDetailsRequired = true. Db Username. \n    #sonarQubeDBPassword: # string. Alias: sqDbPassword. Optional. Use when sqDbDetailsRequired = true. Db User Password. \n    #sonarQubeIncludeFullReport: true # boolean. Alias: sqAnalysisIncludeFullReport. Optional. Use when sqAnalysisEnabled = true. Include full analysis report in the build summary (SQ 5.3+). Default: true.\n    #sonarQubeFailWhenQualityGateFails: # boolean. Alias: sqAnalysisBreakBuildIfQualityGateFailed. Optional. Use when sqAnalysisEnabled = true. Fail the build on quality gate failure (SQ 5.3+). \n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Manifest Canary Deployment Configuration\nDESCRIPTION: Shows how canary deployments are configured using Azure DevOps Kubernetes manifest task with specific action and strategy inputs for deployment, baseline, and canary variants\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n# Canary Deployment Configuration\naction: deploy\nstrategy: canary\npercentage: 25\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Signing Task in Azure Pipelines\nDESCRIPTION: YAML configuration for AndroidSigning@2 task showing all available parameters for signing and aligning Android APK files. Includes options for keystore configuration, jarsigner arguments, and zipalign settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/android-signing-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Android Signing v2\n# Sign and align Android APK files.\n- task: AndroidSigning@2\n  inputs:\n    apkFiles: '**/*.apk' # string. Alias: files. Required. APK files. Default: **/*.apk.\n  # Signing Options\n    #jarsign: true # boolean. Sign the APK. Default: true.\n    jarsignerKeystoreFile: # string. Alias: keystoreFile. Required when jarsign = true. Keystore file. \n    #jarsignerKeystorePassword: # string. Alias: keystorePass. Optional. Use when jarsign = true. Keystore password. \n    #jarsignerKeystoreAlias: # string. Alias: keystoreAlias. Optional. Use when jarsign = true. Alias. \n    #jarsignerKeyPassword: # string. Alias: keyPass. Optional. Use when jarsign = true. Key password. \n    #jarsignerArguments: '-verbose -sigalg MD5withRSA -digestalg SHA1' # string. Optional. Use when jarsign = true. Jarsigner arguments. Default: -verbose -sigalg MD5withRSA -digestalg SHA1.\n  # Zipalign Options\n    #zipalign: true # boolean. Zipalign. Default: true.\n    #zipalignFile: # string. Alias: zipalignLocation. Optional. Use when zipalign = true. Zipalign location.\n```\n\n----------------------------------------\n\nTITLE: Download artifacts from a specific pipeline in YAML\nDESCRIPTION: This YAML snippet shows how to download artifacts from a specific pipeline within a project.  It specifies the buildType as 'specific', the project name, definition ID, and requests the 'latest' build version.  This configuration ensures the artifact is retrieved from the most recent successful run of the specified pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\"# Download artifacts from a specific pipeline.\\n- task: DownloadPipelineArtifact@2\\n  inputs:\\n    buildType: 'specific'\\n    project: 'FabrikamFiber'\\n    definition: 12\\n    buildVersionToDownload: 'latest'\"\n```\n\n----------------------------------------\n\nTITLE: Defining App Type Parameter\nDESCRIPTION: Defines the `appType` input parameter which specifies the type of Azure Web App to be deployed. It accepts values for either a Windows Web App or a Linux Web App.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"appType\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`appType`** - **App type**<br>\n`string`. Required. Allowed values: `webApp` (Web App on Windows), `webAppLinux` (Web App on Linux).<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the Azure Web App type.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Manual Intervention Task YAML Definition\nDESCRIPTION: This YAML snippet defines the ManualIntervention@8 task, specifying its inputs such as instructions for the user, email recipients to notify, and the action to take on timeout (reject or resume). It allows for pausing a deployment pipeline and waiting for manual confirmation or intervention.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/manual-intervention-v8.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Manual intervention v8\n# Pause deployment and wait for manual intervention.\n- task: ManualIntervention@8\n  inputs:\n    #instructions: # string. Instructions. \n    #emailRecipients: # string. Notify users. \n    #onTimeout: 'reject' # 'reject' | 'resume'. On timeout. Default: reject.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Defining SlotName Input for Slot Deployment\nDESCRIPTION: This snippet defines the `SlotName` input, which is a required string when deploying to a slot (`DeployToSlotOrASEFlag = true`). It specifies the name of the existing slot, defaulting to `production`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`SlotName`** - **Slot**<br>\n`string`. Required when `DeployToSlotOrASEFlag = true`. Default value: `production`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify an existing slot other than the Production slot.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Publish Step Syntax for Azure DevOps Pipelines 2022+\nDESCRIPTION: This YAML snippet shows the complete syntax for the 'publish' step in Azure DevOps Pipelines 2022 and newer versions. It includes all available properties such as artifact name, condition, error handling, and timeout settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-publish.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- publish: string # Required as first property. The publish step is a shortcut for the PublishPipelineArtifact@1 task. The task publishes (uploads) a file or folder as a pipeline artifact that other jobs and pipelines can consume.\n  artifact: string # Artifact name.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Docker Images to Multiple Registries in YAML\nDESCRIPTION: This example demonstrates how to authenticate with multiple container registries and then build and push Docker images with multiple tags to those registries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: Docker@2\n  displayName: Login to ACR\n  inputs:\n    command: login\n    containerRegistry: dockerRegistryServiceConnection1\n- task: Docker@2\n  displayName: Login to Docker Hub\n  inputs:\n    command: login\n    containerRegistry: dockerRegistryServiceConnection2\n- task: Docker@2\n  displayName: Build and Push\n  inputs:\n    command: buildAndPush\n    repository: contosoRepository # username/contosoRepository for DockerHub\n    tags: |\n      tag1\n      tag2\n```\n\n----------------------------------------\n\nTITLE: Defining JavaToolInstaller Task in YAML for Azure Pipelines 2022.1\nDESCRIPTION: This YAML snippet defines a JavaToolInstaller@0 task which acquires a specified Java version either from a user-supplied Azure blob or tool cache and sets JAVA_HOME. The task requires parameters such as the JDK version, architecture, and source, with optional parameters for file paths and storage specifics.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Java tool installer v0\\n# Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME.\\n- task: JavaToolInstaller@0\\n  inputs:\\n    versionSpec: '8' # string. Required. JDK version. Default: 8.\\n    jdkArchitectureOption: # 'x64' | 'x86'. Required. JDK architecture. \\n    jdkSourceOption: # 'AzureStorage' | 'LocalDirectory' | 'PreInstalled'. Required. JDK source. \\n    #jdkFile: # string. Required when jdkSourceOption == LocalDirectory. JDK file. \\n    #azureResourceManagerEndpoint: # string. Required when jdkSourceOption == AzureStorage. Azure subscription. \\n    #azureStorageAccountName: # string. Required when jdkSourceOption == AzureStorage. Storage account name. \\n    #azureContainerName: # string. Required when jdkSourceOption == AzureStorage. Container name. \\n    #azureCommonVirtualFile: # string. Required when jdkSourceOption == AzureStorage. Common virtual path. \\n    #jdkDestinationDirectory: # string. Required when jdkSourceOption != PreInstalled. Destination directory. \\n    #azureResourceGroupName: # string. Optional. Use when jdkSourceOption == AzureStorage. Resource Group name. \\n    #cleanDestinationDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Clean destination directory. Default: true.\\n    #createExtractDirectory: true # boolean. Optional. Use when jdkSourceOption != PreInstalled. Create directory for extracting. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Static Web App with Default Settings\nDESCRIPTION: This YAML snippet demonstrates a basic Azure Static Web App deployment using the AzureStaticWebApp@0 task. It specifies app location, API location, output location, and uses a deployment token.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-static-web-app-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\ntrigger:\n  - main\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n  - checkout: self\n    submodules: true\n  - task: AzureStaticWebApp@0\n    inputs:\n      app_location: '/build'\n      api_location: 'api'\n      output_location: '/output'\n      azure_static_web_apps_api_token: $(deployment_token)\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CLI Preview Task in YAML\nDESCRIPTION: This YAML snippet shows how to configure the AzureCLI@0 task to run Azure CLI commands. It includes options for selecting the Azure connection type, specifying the script location, and setting various parameters like working directory and error handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure CLI Preview v0\n# Run a Shell or Batch script with Azure CLI commands against an azure subscription.\n- task: AzureCLI@0\n  inputs:\n    connectedServiceNameSelector: 'connectedServiceNameARM' # 'connectedServiceName' | 'connectedServiceNameARM'. Required. Azure Connection Type. Default: connectedServiceNameARM.\n    connectedServiceNameARM: # string. Required when connectedServiceNameSelector = connectedServiceNameARM. AzureRM Subscription. \n    #connectedServiceName: # string. Required when connectedServiceNameSelector = connectedServiceName. Azure Classic Subscription. \n    scriptLocation: 'scriptPath' # 'inlineScript' | 'scriptPath'. Required. Script Location. Default: scriptPath.\n    scriptPath: # string. Required when scriptLocation = scriptPath. Script Path. \n    #inlineScript: # string. Required when scriptLocation = inlineScript. Inline Script. \n    #args: # string. Arguments. \n  # Advanced\n    #cwd: # string. Working Directory. \n    #failOnStandardError: true # boolean. Fail on Standard Error. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Commands in Azure Pipelines\nDESCRIPTION: YAML schema for Helm command configuration in Azure Pipelines 2022 and newer. Defines available commands and their parameters for Helm chart deployment and management.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncommand: # (Required)\n  type: string\n  allowed:\n    - create\n    - delete \n    - expose\n    - get\n    - init\n    - install\n    - login\n    - logout\n    - ls\n    - package\n    - rollback\n    - save\n    - upgrade\n    - uninstall\n  default: ls\n```\n\n----------------------------------------\n\nTITLE: PowerShell Task Configuration for Azure Pipelines 2020.1\nDESCRIPTION: YAML configuration for PowerShell@2 task with basic parameter set. Supports essential features for script execution and error handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell v2\n# Run a PowerShell script on Linux, macOS, or Windows.\n- task: PowerShell@2\n  inputs:\n    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.\n    filePath: # string. Required when targetType = filePath. Script Path. \n    #arguments: # string. Optional. Use when targetType = filePath. Arguments. \n    #script: # string. Required when targetType = inline. Script. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n  # Advanced\n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.\n    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.\n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Configuring VSTest@1 Task in Azure Pipelines YAML\nDESCRIPTION: YAML syntax for configuring the VSTest@1 task to run Visual Studio tests. Specifies test assemblies, execution options, and reporting settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/vstest-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Visual Studio Test v1\n# Run tests with Visual Studio test runner.\n- task: VSTest@1\n  inputs:\n  # Execution Options\n    testAssembly: '**\\*test*.dll;-:**\\obj\\**' # string. Required. Test Assembly. Default: **\\*test*.dll;-:**\\obj\\**.\n    #testFiltercriteria: # string. Test Filter criteria. \n    #runSettingsFile: # string. Run Settings File. \n    #overrideTestrunParameters: # string. Override TestRun Parameters. \n    #codeCoverageEnabled: False # boolean. Code Coverage Enabled. Default: False.\n    #runInParallel: false # boolean. Run In Parallel. Default: false.\n  # Advanced Execution Options\n    #vstestLocationMethod: 'version' # 'version' | 'location'. VSTest. Default: version.\n    #vsTestVersion: '14.0' # 'latest' | '14.0' | '12.0'. Optional. Use when vstestLocationMethod = version. VSTest version. Default: 14.0.\n    #vstestLocation: # string. Optional. Use when vstestLocationMethod = location. Path to vstest.console.exe. \n    #pathtoCustomTestAdapters: # string. Path to Custom Test Adapters. \n    #otherConsoleOptions: # string. Other console options. \n  # Reporting Options\n    #testRunTitle: # string. Test Run Title. \n    #platform: # string. Platform. \n    #configuration: # string. Configuration. \n    #publishRunAttachments: true # boolean. Upload Test Attachments. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Copy Files Excluding .git Folder in YAML\nDESCRIPTION: This YAML snippet copies all files from the source directory except those within the .git folder using the CopyFiles@2 task. It copies all files and directories except for those within the `.git` directory to the artifact staging directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CopyFiles@2\n  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'\n  inputs:\n    SourceFolder: '$(Build.SourcesDirectory)'\n    Contents: |\n      **/*\n      !.git/**/*\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Setting Deployment Options for Azure Cloud Service\nDESCRIPTION: Configures various deployment options including environment slot, label, upgrade settings, and instance status verification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nslotName: 'Production' # Required, default is Production\nDeploymentLabel: '$(Build.BuildNumber)'\nAppendDateTimeToLabel: false\nAllowUpgrade: true\nSimultaneousUpgrade: false\nForceUpgrade: false\nVerifyRoleInstanceStatus: false\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Secret Arguments Example\nDESCRIPTION: Example showing how to specify key-value pairs for creating generic secrets in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n--from-literal=key1=value1 --from-literal=key2=\"top secret\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure File Copy v1 Task in YAML\nDESCRIPTION: YAML schema for the AzureFileCopy@1 task, which copies files to Azure Blob Storage or virtual machines. Includes all available input parameters and their descriptions, as well as output variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure file copy v1\n# Copy files to Azure Blob Storage or virtual machines.\n- task: AzureFileCopy@1\n  inputs:\n    SourcePath: # string. Required. Source. \n    #azureConnectionType: 'ConnectedServiceNameARM' # 'ConnectedServiceName' | 'ConnectedServiceNameARM'. Alias: ConnectedServiceNameSelector. Azure Connection Type. Default: ConnectedServiceNameARM.\n    #azureClassicSubscription: # string. Alias: ConnectedServiceName. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Classic Subscription. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. Azure Subscription. \n    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. \n    #classicStorage: # string. Alias: StorageAccount. Required when ConnectedServiceNameSelector = ConnectedServiceName. Classic Storage Account. \n    storage: # string. Alias: StorageAccountRM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. RM Storage Account. \n    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. \n    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. \n    #cloudService: # string. Alias: EnvironmentName. Required when ConnectedServiceNameSelector = ConnectedServiceName && Destination = AzureVMs. Cloud Service. \n    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM && Destination = AzureVMs. Resource Group. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. \n    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. \n    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. \n    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. \n    #AdditionalArguments: # string. Additional Arguments. \n    #enableCopyPrerequisites: false # boolean. Optional. Use when ConnectedServiceNameSelector = ConnectedServiceNameARM && Destination = AzureVMs. Enable Copy Prerequisites. Default: false.\n    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.\n    #CleanTargetBeforeCopy: false # boolean. Optional. Use when Destination = AzureVMs. Clean Target. Default: false.\n    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.\n  # Output\n    #outputStorageUri: # string. Storage Container URI. \n    #outputStorageContainerSasToken: # string. Storage Container SAS Token.\n```\n\n----------------------------------------\n\nTITLE: Basic Pip Authentication Task Syntax\nDESCRIPTION: Basic YAML configuration for PipAuthenticate@1 task showing available input parameters including artifactFeeds, pythonDownloadServiceConnections, and onlyAddExtraIndex options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Python pip authenticate v1\n# Authentication task for the pip client used for installing Python distributions.\n- task: PipAuthenticate@1\n  inputs:\n  # Feeds and Authentication\n    #artifactFeeds: # string. My feeds (select below). \n    #pythonDownloadServiceConnections: # string. Feeds from external organizations. \n    #onlyAddExtraIndex: false # boolean. Don't set primary index URL. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining SourcePath Input for Azure File Copy Task in YAML\nDESCRIPTION: Defines the SourcePath input parameter for specifying the location of source files to copy. Supports predefined system variables and wildcard paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v6.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nSourcePath:\n  type: string\n  required: true\n  helpMarkDown: |\n    The location of source files. Supported values include YAML Pipelines and Classic Release support predefined system variables like *Build.Repository.LocalPath*.\n    \n    Release variables are supported only in classic releases. The wild card symbol (*) is supported anywhere in the file path or file name.\n    \n    Expression should return a single folder or a file.\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Key Installation Task in Azure DevOps YAML Pipeline\nDESCRIPTION: YAML task configuration for installing SSH keys in Azure DevOps pipeline. Requires known hosts entry, public key, and secure file containing the private key for GitHub repository access.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: InstallSSHKey@0\n  inputs:\n    knownHostsEntry: #{Enter your Known Hosts Entry Here}\n    sshPublicKey: #{Enter your Public key Here}\n    sshKeySecureFile: #{Enter the name of your key in \"Secure Files\" Here}\n```\n\n----------------------------------------\n\nTITLE: Advanced Build Artifact Download Configuration\nDESCRIPTION: Demonstrates advanced configuration options for downloading build artifacts, including specifying build version, branch, and additional download parameters. Useful for complex build and artifact retrieval scenarios.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadBuildArtifacts@0\n  inputs:\n    buildType: 'specific'\n    project: 'MyProject'\n    pipeline: 'MyBuildPipeline'\n    buildVersionToDownload: 'latestFromBranch'\n    branchName: 'refs/heads/main'\n    downloadType: 'specific'\n    itemPattern: '**/*.zip'\n    downloadPath: '$(System.ArtifactsDirectory)'\n    cleanDestinationFolder: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag-Based Triggers for Container Resources in Azure Pipelines\nDESCRIPTION: This YAML snippet demonstrates how to configure a container resource with a trigger that activates on tags matching a specific pattern. It includes setting up the container resource and specifying the trigger conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers-container-trigger.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:         \n  containers:\n  - container: petStore      \n    type: ACR  \n    azureSubscription: ContosoARMConnection\n    resourceGroup: ContosoGroup\n    registry: petStoreRegistry\n    repository: myPets\n    trigger: \n      tags:\n        include: \n        - production*\n```\n\n----------------------------------------\n\nTITLE: App Source Input Definition\nDESCRIPTION: Specifies the absolute path of source code to build. Required when pushing new images to ACR along with acrName parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nappSourcePath:\n  type: string\n  description: Absolute path on the runner of the source application code\n```\n\n----------------------------------------\n\nTITLE: Defining a GitHub Repository Resource in Azure DevOps Pipelines\nDESCRIPTION: Example of referencing a GitHub repository as a resource in an Azure DevOps pipeline. The example shows how to specify the repository type, name, and service connection endpoint.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-repositories-repository.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  repositories:\n  - repository: common\n    type: github\n    name: Contoso/CommonTools\n    endpoint: MyContosoServiceConnection\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Implementation Using Template\nDESCRIPTION: Pipeline implementation (azure-pipelines.yml) that extends the template and demonstrates both valid and invalid build steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/extends.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n\nextends:\n  template: start.yml\n  parameters:\n    buildSteps:  \n      - bash: echo Test #Passes\n        displayName: succeed\n      - bash: echo \"Test\"\n        displayName: succeed\n      # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'\n      - task: CmdLine@2\n        inputs:\n          script: echo \"Script Test\"\n      # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'\n      - script: echo \"Script Test\"\n```\n\n----------------------------------------\n\nTITLE: Configuring PyPI Publisher Task in Azure Pipelines\nDESCRIPTION: YAML configuration for PyPIPublisher@0 task that specifies required parameters for publishing Python packages to PyPI. The task requires a PyPI service connection and package directory path, with optional wheel publishing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/py-pi-publisher-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# PyPI publisher v0\n# Create and upload an sdist or wheel to a PyPI-compatible index using Twine.\n- task: PyPIPublisher@0\n  inputs:\n    pypiConnection: # string. Alias: serviceEndpoint. Required. PyPI service connection. \n    packageDirectory: # string. Alias: wd. Required. Python package directory. \n    #alsoPublishWheel: false # boolean. Alias: wheel. Also publish a wheel. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Publishing SonarQube Quality Gate Result in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to use the SonarQubePublish@6 task to publish SonarQube's Quality Gate result. It sets a timeout for polling SonarQube until the analysis is completed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-publish-v6.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Quality Gate Result v6\n# Publish SonarQube's Quality Gate result on the Azure DevOps build result, to be used after the actual analysis.\n- task: SonarQubePublish@6\n  inputs:\n    pollingTimeoutSec: '300' # string. Required. Timeout (s). Default: 300.\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts in Azure Pipelines 2022\nDESCRIPTION: YAML configuration for publishing build artifacts in Azure Pipelines 2022, with support for file copy options and tar archives.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-build-artifacts-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish build artifacts v1\n# Publish build artifacts to Azure Pipelines or a Windows file share.\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)' # string. Required. Path to publish. Default: $(Build.ArtifactStagingDirectory).\n    ArtifactName: 'drop' # string. Required. Artifact name. Default: drop.\n    publishLocation: 'Container' # 'Container' | 'FilePath'. Alias: ArtifactType. Required. Artifact publish location. Default: Container.\n    #TargetPath: # string. Required when ArtifactType = FilePath. File share path. \n    #Parallel: false # boolean. Optional. Use when ArtifactType = FilePath. Parallel copy. Default: false.\n    #ParallelCount: '8' # string. Optional. Use when ArtifactType = FilePath && Parallel = true. Parallel count. Default: 8.\n  # Advanced\n    #FileCopyOptions: # string. Optional. Use when ArtifactType = FilePath. File copy options. \n    #StoreAsTar: false # boolean. Tar the artifact before uploading. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Workspace Cleaning for Deployment Jobs in Azure Pipelines\nDESCRIPTION: Example of how to configure workspace cleaning options when using self-hosted agents for deployment jobs. This code sets up a deployment job with the 'clean: all' option to clean the deployment workspace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  jobs:\n  - deployment: deploy\n    pool:\n      vmImage: ubuntu-latest\n      workspace:\n        clean: all\n    environment: staging\n```\n\n----------------------------------------\n\nTITLE: Azure App Service Task Inputs YAML Configuration\nDESCRIPTION: YAML configuration options for Azure App Service task inputs including subscription, actions, app service details, slot configurations, and monitoring settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-manage-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: string      # Required. Azure subscription connection\nAction: 'Swap Slots'          # Required. Action to perform\nWebAppName: string            # Required. Name of the App Service\nSpecifySlotOrASE: false       # Optional. Specify slot or ASE\nResourceGroupName: string      # Required for certain actions\nSourceSlot: string            # Required for swap operations\nSwapWithProduction: true      # Optional for swap operations\nTargetSlot: string            # Required when SwapWithProduction is false\nPreserveVnet: false           # Optional for swap operations\nSlot: 'production'            # Required for certain actions\nExtensionsList: string        # Required for installing extensions\nOutputVariable: string        # Optional for extension installation\nAppInsightsResourceGroupName: string    # Required for monitoring\nApplicationInsightsResourceName: string  # Required for monitoring\nApplicationInsightsWebTestName: string   # Optional for monitoring\n```\n\n----------------------------------------\n\nTITLE: Complete CodeQL Analysis Pipeline Example\nDESCRIPTION: Example showing the complete pipeline configuration including initialization, build, and analysis steps in the required order\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-codeql-analyze-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Initialize CodeQL database \n- task: AdvancedSecurity-Codeql-Init@1\n  inputs: \n    languages: 'csharp' \n  displayName: 'Advanced Security Initialize CodeQL' \n\n# Build project using Autobuild or your own custom build steps \n- task: AdvancedSecurity-Codeql-Autobuild@1\n  displayName: 'Advanced Security Autobuild' \n\n# Run analysis \n- task: AdvancedSecurity-Codeql-Analyze@1 \n  displayName: 'Advanced Security Code Scanning'\n```\n\n----------------------------------------\n\nTITLE: Azure PowerShell v5 Task Configuration (2022 and earlier)\nDESCRIPTION: YAML configuration schema for Azure PowerShell v5 task in Azure Pipelines version 2022 and earlier. Includes core parameters for configuring PowerShell script execution in an Azure environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v5.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure PowerShell v5\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@5\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n  # Azure PowerShell version options\n    #azurePowerShellVersion: 'OtherVersion' # 'latestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. \n  # Advanced\n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Multi-Python Version Build Configuration\nDESCRIPTION: Example showing how to use matrix strategy to build with different Python versions with parallel execution limit.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-strategy.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: Build\n  strategy:\n    matrix:\n      Python35:\n        PYTHON_VERSION: '3.5'\n      Python36:\n        PYTHON_VERSION: '3.6'\n      Python37:\n        PYTHON_VERSION: '3.7'\n    maxParallel: 2\n```\n\n----------------------------------------\n\nTITLE: Installing .NET Core SDK with YAML Configuration\nDESCRIPTION: Configure .NET Core SDK installation with specific version, package type, and optional preview versions in Azure Pipelines\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-installer-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DotNetCoreInstaller@1\n  inputs:\n    packageType: 'sdk'\n    version: '2.2.x'\n    #includePreviewVersions: false\n    #installationPath: '$(Agent.ToolsDirectory)/dotnet'\n    #performMultiLevelLookup: false\n```\n\n----------------------------------------\n\nTITLE: Basic PowerShell Step Syntax for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML syntax for PowerShell steps in Azure Pipelines 2020.1 and earlier versions, showing available configuration options without retryCountOnTaskFailure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-powershell.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: string # Required as first property. Inline PowerShell script.\n  errorActionPreference: string # Unless otherwise specified, the error action preference defaults to the value stop. See the following section for more information.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  ignoreLASTEXITCODE: string # Check the final exit code of the script to determine whether the step succeeded?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Archive Files Task Configuration for Azure Pipelines 2022+\nDESCRIPTION: YAML configuration for the ArchiveFiles@2 task in Azure Pipelines 2022 and newer versions. Supports compression into .7z, .tar.gz, or .zip formats with various compression options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/archive-files-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Archive files v2\n# Compress files into .7z, .tar.gz, or .zip.\n- task: ArchiveFiles@2\n  inputs:\n    rootFolderOrFile: '$(Build.BinariesDirectory)' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).\n    #includeRootFolder: true # boolean. Prepend root folder name to archive paths. Default: true.\n  # Archive\n    archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.\n    #sevenZipCompression: 'normal' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: normal.\n    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.\n    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.\n    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.\n    #verbose: false # boolean. Force verbose output. Default: false.\n    #quiet: false # boolean. Force quiet output. Default: false.\n```\n\n----------------------------------------\n\nTITLE: NuGet Authenticate External Feeds Task with nuget.exe in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the NuGetAuthenticate task with nuget.exe to restore and push NuGet packages to feeds in other organizations or third-party repositories. It relies on service connections configured in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: OtherOrganizationFeedConnection, ThirdPartyRepositoryConnection\n- task: NuGetToolInstaller@1 # Optional if nuget.exe >= 4.8.5385 is already on the path\n  inputs:\n    versionSpec: '*'\n    checkLatest: true\n- script: nuget restore\n# ...\n- script: nuget push -ApiKey AzureArtifacts -Source \\\"MyProjectFeed1\\\" MyProject.*.nupkg\"\n```\n\n----------------------------------------\n\nTITLE: Publishing to Azure Service Bus - Basic YAML Configuration (2022.1+)\nDESCRIPTION: YAML configuration for sending messages to Azure Service Bus using the PublishToAzureServiceBus@1 task with support for data contract serialization. This version is for Azure Pipelines 2022.1 and later.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish To Azure Service Bus v1\n# Sends a message to Azure Service Bus using a service connection (no agent is required).\n- task: PublishToAzureServiceBus@1\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceName. Required. Azure Service Bus service connection. \n    #messageBody: # string. Message body. \n    #waitForCompletion: false # boolean. Wait for task completion. Default: false.\n    #useDataContractSerializer: true # boolean. Use .NET data contract serializer. Default: true.\n  # Advanced\n    #sessionId: # string. Session Id. \n    #signPayload: false # boolean. Sign the Message. Default: false.\n    #certificateString: # string. Required when signPayload = true. Certificate Variable. \n    #signatureKey: 'signature' # string. Optional. Use when signPayload = true. Signature Property Key. Default: signature.\n```\n\n----------------------------------------\n\nTITLE: Invoke REST API with YAML\nDESCRIPTION: This YAML snippet defines the InvokeRESTAPI@0 task. It demonstrates how to specify the service connection, HTTP method, headers, body, URL suffix, and completion options for invoking a REST API within an Azure Pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/invoke-rest-api-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Invoke REST API v0\n# Invoke REST API as a part of your process.\n- task: InvokeRESTAPI@0\n  inputs:\n    serviceConnection: # string. Alias: connectedServiceName. Required. Generic endpoint. \n    method: 'POST' # 'OPTIONS' | 'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'TRACE' | 'PATCH'. Required. Method. Default: POST.\n    #headers: # string. Headers. \n    #body: '{\"JobId\": \"$(system.jobId)\", \"PlanId\": \"$(system.planId)\", \"TimelineId\": \"$(system.timelineId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"VstsUrl\": \"$(system.CollectionUri)\",\"AuthToken\": \"$(system.AccessToken)\"}' # string. Optional. Use when method != GET && method != HEAD. Body. Default: {\"JobId\": \"$(system.jobId)\", \"PlanId\": \"$(system.planId)\", \"TimelineId\": \"$(system.timelineId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"VstsUrl\": \"$(system.CollectionUri)\",\"AuthToken\": \"$(system.AccessToken)\"}.\n    #urlSuffix: # string. Url suffix string. \n  # Completion Options\n    waitForCompletion: 'false' # 'true' | 'false'. Required. Complete based on. Default: false.\n    #successCriteria: # string. Optional. Use when waitForCompletion = false. Success criteria.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Custom NuGet Commands in Azure DevOps Pipeline YAML\nDESCRIPTION: Details using the NuGetCommand@2 task to run custom NuGet commands not covered by the usual pack, push, and restore operations. The example shows how to list local NuGet resources using a custom command. Users must provide valid command line arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_25\n\nLANGUAGE: YAML\nCODE:\n```\n# list local NuGet resources.\n- task: NuGetCommand@2\n  displayName: 'list locals'\n  inputs:\n    command: custom\n    arguments: 'locals all -list'\n```\n\n----------------------------------------\n\nTITLE: Deploy Helm with Azure Resource Manager - YAML\nDESCRIPTION: This YAML snippet demonstrates how to deploy Helm using Azure Resource Manager to reference a Kubernetes cluster. It requires Azure subscription endpoints, resource groups, and cluster inputs specified as pipeline variables, aiming to streamline Helm deployments in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  azureSubscriptionEndpoint: Contoso\n  azureContainerRegistry: contoso.azurecr.io\n  azureResourceGroup: Contoso\n  kubernetesCluster: Contoso\n\n- task: HelmDeploy@0\n  displayName: Helm deploy\n  inputs:\n    connectionType: Azure Resource Manager\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureResourceGroup: $(azureResourceGroup)\n    kubernetesCluster: $(kubernetesCluster)\n```\n\n----------------------------------------\n\nTITLE: Npm@0 Task Syntax - YAML\nDESCRIPTION: Defines the YAML syntax for using the Npm@0 task in Azure Pipelines. It shows the basic structure and available input parameters such as `cwd`, `command`, and `arguments`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n\n```yaml\n# npm v0\n# Run an npm command. Use NpmAuthenticate@0 task for latest capabilities.\n- task: Npm@0\n  inputs:\n    #cwd: # string. working folder. \n    command: 'install' # string. Required. npm command. Default: install.\n    #arguments: # string. arguments.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Configuring AzureMonitor@1 Task in YAML Pipeline\nDESCRIPTION: This YAML snippet shows how to configure the AzureMonitor@1 task in an Azure Pipelines YAML file. It includes all available input parameters and their default values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-monitor-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Query Azure Monitor alerts v1\n# Observe the configured Azure Monitor rules for active alerts.\n- task: AzureMonitor@1\n  inputs:\n    connectedServiceNameARM: # string. Required. Azure subscription. \n    ResourceGroupName: # string. Required. Resource group. \n  # Advanced\n    filterType: 'none' # 'resource' | 'alertrule' | 'none'. Required. Filter type. Default: none.\n    #resource: # string. Required when filterType = resource. Resource. \n    #alertRule: # string. Required when filterType = alertrule. Alert rule. \n    #severity: 'Sev0,Sev1,Sev2,Sev3,Sev4' # 'Sev0' | 'Sev1' | 'Sev2' | 'Sev3' | 'Sev4'. Severity. Default: Sev0,Sev1,Sev2,Sev3,Sev4.\n    #timeRange: '1h' # '1h' | '1d' | '7d' | '30d'. Time range. Default: 1h.\n    #alertState: 'Acknowledged,New' # 'New' | 'Acknowledged' | 'Closed'. Alert state. Default: Acknowledged,New.\n    #monitorCondition: 'Fired' # 'Fired ' | 'Resolved'. Monitor condition. Default: Fired.\n```\n\n----------------------------------------\n\nTITLE: Defining Scheduled Triggers in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure scheduled triggers for an Azure Pipeline. It includes properties for cron schedule, display name, branch filtering, and execution behavior.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/schedules-cron.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: string # Required as first property. Cron syntax defining a schedule in UTC time.\n  displayName: string # Optional friendly name given to a specific schedule.\n  branches: # Branch names to include or exclude for triggering a run.\n    include: [ string ] # List of items to include.\n    exclude: [ string ] # List of items to exclude.\n  batch: boolean # Whether to run the pipeline if the previously scheduled run is in-progress; the default is false.\n  always: boolean # Whether to always run the pipeline or only if there have been source code or pipeline settings changes since the last successful scheduled run. The default is false.\n```\n\n----------------------------------------\n\nTITLE: Defining Build Arguments Input for Azure Pipelines\nDESCRIPTION: This snippet introduces `buildArguments`, which specifies build-time variables for the Docker file. This optional string parameter is utilized when the action is 'Build an image'. Each name-value pair should be on a new line.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"buildArguments\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`buildArguments`** - **Build Arguments**<br>\n`string`. Optional. Use when `action = Build an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies build-time variables for the Docker file. Format each `name=value` pair on a new line.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Functions Deployment Task in YAML\nDESCRIPTION: YAML configuration for the Azure Functions deployment task, specifying parameters like Azure subscription, app type, app name, deployment slot, package location, and runtime stack.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureFunctionApp@1\n  inputs:\n    azureSubscription: 'Resource Manager Connection'\n    appType: 'functionApp'\n    appName: 'myFunctionApp'\n    deployToSlotOrASE: true\n    resourceGroupName: 'myResourceGroup'\n    slotName: 'production'\n    package: '$(System.DefaultWorkingDirectory)/**/*.zip'\n    runtimeStack: 'DOTNET|6.0'\n    startUpCommand: 'dotnet run'\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle v2 Task in Azure Pipelines - YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the deprecated Gradle@2 task in Azure Pipelines for building projects with a Gradle wrapper script. It requires specifying the gradleWrapperFile and tasks inputs, and optionally allows configuration of test results, code coverage, Java home settings, and code analysis tools. This setup supports customization for JUnit results publication and code coverage with Cobertura or JaCoCo. The usage of this task is deprecated, and migrating to Gradle@3 is recommended.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Gradle v2\\n# Build using a Gradle wrapper script.\\n- task: Gradle@2\\n  inputs:\\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\\n    #workingDirectory: # string. Alias: cwd. Working directory. \\n    #options: # string. Options. \\n    tasks: 'build' # string. Required. Tasks. Default: build.\\n  # JUnit Test Results\\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \\n  # Code Coverage\\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\\n    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.\\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \\n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\\n    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.\\n  # Advanced\\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\\n    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \\n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\\n  # Code Analysis\\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\\n    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.\\n    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.\\n    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# Gradle v2\\n# Build using a Gradle wrapper script.\\n- task: Gradle@2\\n  inputs:\\n    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.\\n    #workingDirectory: # string. Alias: cwd. Working directory. \\n    #options: # string. Options. \\n    tasks: 'build' # string. Required. Tasks. Default: build.\\n  # JUnit Test Results\\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\\n    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.\\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \\n  # Code Coverage\\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\\n    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.\\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \\n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\\n    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.\\n  # Advanced\\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\\n    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \\n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\\n    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.\\n  # Code Analysis\\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.\\n    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.\\n    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.\\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\\n    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.\\n    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.\\n    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.\n```\n\n----------------------------------------\n\nTITLE: FileTransform@2 Task YAML Syntax (Limited)\nDESCRIPTION: This YAML snippet showcases a limited syntax for the FileTransform@2 task in Azure Pipelines, applicable for versions up to 2022.2. It includes inputs for the folder path and XML transformation rules, along with variable substitution for JSON and XML files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# File transform v2\n# Replace tokens with variable values in XML or JSON configuration files.\n- task: FileTransform@2\n  inputs:\n    folderPath: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #xmlTransformationRules: '-transform **\\*.Release.config -xml **\\*.config' # string. XML Transformation rules. Default: -transform **\\*.Release.config -xml **\\*.config.\n  # Variable Substitution\n    #jsonTargetFiles: # string. JSON target files. \n    #xmlTargetFiles: # string. XML target files.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Download Step Syntax for Azure Pipelines 2022 and Later\nDESCRIPTION: YAML syntax for the 'download' step in Azure Pipelines 2022 and later versions. This syntax includes all available properties including retryCountOnTaskFailure which is specific to newer versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-download.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: string # Required as first property. Specify current, pipeline resource identifier, or none to disable automatic download.\n  artifact: string # Artifact name.\n  patterns: string # Pattern to download files from artifact.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Generate GPG Key Pair - CMD\nDESCRIPTION: This command line example demonstrates how to generate a private-public GPG key pair needed to sign Helm charts. Requires GPG installed on the system. Outputs keys for further usage in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_17\n\nLANGUAGE: cmd\nCODE:\n```\ngpg --full-generate-key\n```\n\n----------------------------------------\n\nTITLE: Setting Java Home by JDK Version\nDESCRIPTION: Configuration option to set JAVA_HOME environment variable by specifying a JDK version. The task will attempt to discover the path to the selected JDK version automatically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\njavaHomeOption: \"JDKVersion\"\njdkVersionOption: \"1.11\"\n```\n\n----------------------------------------\n\nTITLE: Android Pipeline Configuration in YAML\nDESCRIPTION: Example YAML pipeline configuration for building an Android app and publishing via App Center Distribute task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Android\n```\n\n----------------------------------------\n\nTITLE: Specific Build Artifact Download Configuration in Azure Pipelines\nDESCRIPTION: Defines the `specificBuildWithTriggering` input parameter, an optional boolean that indicates whether to download artifacts from the triggering build when `buildType` is `specific`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"specificBuildWithTriggering\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`specificBuildWithTriggering`** - **When appropriate, download artifacts from the triggering build.**<br>\n`boolean`. Optional. Use when `buildType == specific`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf `true`, this build task tries to download artifacts from the triggering build. If there is no triggering build from the specified pipeline, it downloads artifacts from the build specified in the options below.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL Database Deployment in Azure Pipelines - YAML\nDESCRIPTION: This YAML code snippet demonstrates the use of the MysqlDeploymentOnMachineGroup@1 task in Azure Pipelines to create a sample database in MySQL. It utilizes the InlineSqlTask to execute SQL commands directly within the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/mysql-deployment-on-machine-group-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: MysqlDeploymentOnMachineGroup@1\n  displayName: 'Deploy Using : InlineSqlTask'\n  inputs:\n    TaskNameSelector: InlineSqlTask\n    SqlInline: |\n      CREATE DATABASE IF NOT EXISTS alm;\n      use alm;\n    ServerName: localhost\n    SqlUsername: root\n    SqlPassword: P2ssw0rd\n```\n\n----------------------------------------\n\nTITLE: Docker Settings Configuration in Azure Pipelines\nDESCRIPTION: This snippet specifies how credentials for the Docker registry are provided in Azure YAML pipelines. It determines when each type of service connection or credentials is required based on other boolean settings. It includes conditions for encrypting secrets based on installed certificates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n**`registryCredentials`** - **Registry Credentials Source**  \n`string`. Required when `configureDockerSettings = true`. Allowed values: `AzureResourceManagerEndpoint` (Azure Resource Manager Service Connection), `ContainerRegistryEndpoint` (Container Registry Service Connection), `UsernamePassword` (Username and Password). Default value: `AzureResourceManagerEndpoint`.\n```\n\n----------------------------------------\n\nTITLE: Setting Java Home by Path\nDESCRIPTION: Configuration option to set JAVA_HOME environment variable by explicitly providing the JDK path. This allows using a specific JDK installation for the Gradle build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\njavaHomeOption: \"Path\"\njdkDirectory: \"/path/to/jdk\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TwineAuthenticate task in YAML\nDESCRIPTION: YAML configuration for the TwineAuthenticate@0 task. It specifies inputs for authenticating with artifact feeds and external sources, and controls publishing of pipeline metadata.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/twine-authenticate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Python twine upload authenticate v0\n# Authenticate for uploading Python distributions using twine. Add '-r FeedName/EndpointName --config-file $(PYPIRC_PATH)' to your twine upload command. For feeds present in this organization, use the feed name as the repository (-r). Otherwise, use the endpoint name defined in the service connection.\n- task: TwineAuthenticate@0\n  inputs:\n  # Feeds and Authentication\n    #artifactFeeds: # string. Alias: feedList. My feeds (select below). \n    #externalFeeds: # string. Alias: externalSources. Feeds from external organizations. \n  # Advanced\n    #publishPackageMetadata: true # boolean. Publish pipeline metadata. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Download Artifacts Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the JenkinsDownloadArtifacts@2 task which downloads artifacts produced by a Jenkins job. This includes required parameters for Jenkins service connection, job name, and save location, along with optional advanced settings for build selection, item patterns, and propagated artifacts in Azure Storage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Jenkins download artifacts v2\n# Download artifacts produced by a Jenkins job.\n- task: JenkinsDownloadArtifacts@2\n  inputs:\n    jenkinsServerConnection: # string. Alias: serverEndpoint. Required. Jenkins service connection. \n    jobName: # string. Required. Job name. \n    #jenkinsJobType: # string. Optional. Use when jobName = invalidjobName. Jenkins job type. \n    saveTo: 'jenkinsArtifacts' # string. Required. Save to. Default: jenkinsArtifacts.\n  # Advanced\n    jenkinsBuild: 'LastSuccessfulBuild' # 'LastSuccessfulBuild' | 'BuildNumber'. Required. Download artifacts produced by. Default: LastSuccessfulBuild.\n    #jenkinsBuildNumber: '1' # string. Required when jenkinsBuild == BuildNumber. Jenkins build number. Default: 1.\n    #itemPattern: '**' # string. Item Pattern. Default: **.\n    #downloadCommitsAndWorkItems: false # boolean. Download Commits and WorkItems. Default: false.\n    #startJenkinsBuildNumber: # string. Optional. Use when downloadCommitsAndWorkItems == true && jenkinsBuild == BuildNumber. Download commits and work items from. \n    #artifactDetailsFileNameSuffix: # string. Optional. Use when downloadCommitsAndWorkItems == invalid. Commit and WorkItem FileName. \n  # Propagated Artifacts\n    #propagatedArtifacts: false # boolean. Artifacts are propagated to Azure. Default: false.\n    #artifactProvider: 'azureStorage' # 'azureStorage'. Required when propagatedArtifacts == notValid. Artifact Provider. Default: azureStorage.\n    #ConnectedServiceNameARM: # string. Required when propagatedArtifacts == true. Azure Subscription. \n    #storageAccountName: # string. Required when propagatedArtifacts == true. Storage Account Name. \n    #containerName: # string. Required when propagatedArtifacts == true. Container Name. \n    #commonVirtualPath: # string. Optional. Use when propagatedArtifacts == true. Common Virtual Path.\n```\n\n----------------------------------------\n\nTITLE: Configuring DownloadFileshareArtifacts Task in Azure Pipelines\nDESCRIPTION: YAML configuration for downloading artifacts from a file share, with options to specify file share path, artifact name, download path, and file matching patterns\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-fileshare-artifacts-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadFileshareArtifacts@1\n  inputs:\n    filesharePath: # string. Required. File share path. \n    artifactName: # string. Required. Artifact name. \n    #itemPattern: '**' # string. Matching pattern. Default: **.\n    downloadPath: '$(System.ArtifactsDirectory)' # string. Required. Download path. Default: $(System.ArtifactsDirectory).\n  # Advanced\n    #parallelizationLimit: '8' # string. Parallelization limit. Default: 8.\n```\n\n----------------------------------------\n\nTITLE: Upgrade Helm Release with Command `upgrade` - YAML\nDESCRIPTION: Demonstrates the Helm `upgrade` command in a YAML pipeline to upgrade an existing Helm release. Includes parameters for chart path, release name, and install flag. Requires Azure resource details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm upgrade\n  inputs:\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureResourceGroup: $(azureResourceGroup)\n    kubernetesCluster: $(kubernetesCluster)\n    command: upgrade\n    chartType: filepath\n    chartPath: $(Build.ArtifactStagingDirectory)/sampleapp-v0.2.0.tgz\n    releaseName: azuredevopsdemo\n    install: true\n    waitForExecution: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Functions Deployment in YAML\nDESCRIPTION: YAML configuration for the AzureFunctionApp@1 task to deploy web applications to Azure Function Apps. It includes options for specifying Azure connection, app type, deployment targets, package location, runtime stack, and various deployment settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure Functions Deploy v1\n# Update a function app with .NET, Python, JavaScript, PowerShell, Java based web applications.\n- task: AzureFunctionApp@1\n  inputs:\n    azureSubscription: # string. Required. Azure Resource Manager connection. \n    appType: # 'functionApp' | 'functionAppLinux'. Required. App type. \n    appName: # string. Required. Azure Functions App name. \n    #deployToSlotOrASE: false # boolean. Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n    #runtimeStack: # 'DOTNET|6.0' | 'DOTNET-ISOLATED|6.0' | 'DOTNET-ISOLATED|7.0' | 'DOTNET-ISOLATED|8.0' | 'JAVA|8' | 'JAVA|11' | 'JAVA|17' | 'JAVA|21' | 'NODE|14' | 'NODE|16' | 'NODE|18' | 'NODE|20' | 'PYTHON|3.8' | 'PYTHON|3.9' | 'PYTHON|3.10' | 'PYTHON|3.11'. Optional. Use when appType = functionAppLinux. Runtime stack. \n    #startUpCommand: # string. Optional. Use when appType = functionAppLinux. Startup command. \n  # Application and Configuration Settings\n    #customWebConfig: # string. Optional. Use when appType != functionAppLinux && package NotEndsWith .war. Generate web.config parameters for Python, Node.js, Go and Java apps. \n    #appSettings: # string. App settings. \n    #configurationStrings: # string. Configuration settings. \n  # Additional Deployment Options\n    #deploymentMethod: 'auto' # 'auto' | 'zipDeploy' | 'runFromPackage'. Required when appType != functionAppLinux && appType != \"\" && package NotEndsWith .war && Package NotEndsWith .jar. Deployment method. Default: auto.\n```\n\n----------------------------------------\n\nTITLE: Configuring DockerCompose@1 Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows the complete syntax for configuring the DockerCompose@1 task in an Azure Pipelines workflow. It includes all possible input parameters with their default values and usage conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker Compose v1\n# Build, push or run multi-container Docker applications. Task can be used with Docker or Azure Container registry.\n- task: DockerCompose@1\n  inputs:\n    containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Container Registry'. Required. Container Registry Type. Default: Azure Container Registry.\n    #dockerRegistryEndpoint: # string. Optional. Use when containerregistrytype = Container Registry. Docker Registry Service Connection. \n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Optional. Use when containerregistrytype = Azure Container Registry. Azure subscription. \n    #azureContainerRegistry: # string. Optional. Use when containerregistrytype = Azure Container Registry. Azure Container Registry. \n    dockerComposeFile: '**/docker-compose.yml' # string. Required. Docker Compose File. Default: **/docker-compose.yml.\n    #additionalDockerComposeFiles: # string. Additional Docker Compose Files. \n    #dockerComposeFileArgs: # string. Environment Variables. \n    #projectName: '$(Build.Repository.Name)' # string. Project Name. Default: $(Build.Repository.Name).\n    #qualifyImageNames: true # boolean. Qualify Image Names. Default: true.\n    action: 'Run a Docker Compose command' # 'Build services' | 'Push services' | 'Run services' | 'Run a specific service' | 'Lock services' | 'Write service image digests' | 'Combine configuration' | 'Run a Docker Compose command'. Required. Action. Default: Run a Docker Compose command.\n    #additionalImageTags: # string. Optional. Use when action = Build services || action = Push services. Additional Image Tags. \n    #includeSourceTags: false # boolean. Optional. Use when action = Build services || action = Push services. Include Source Tags. Default: false.\n    #includeLatestTag: false # boolean. Optional. Use when action = Build services || action = Push services. Include Latest Tag. Default: false.\n    #buildImages: true # boolean. Optional. Use when action = Run services. Build Images. Default: true.\n    #serviceName: # string. Required when action = Run a specific service. Service Name. \n    #containerName: # string. Optional. Use when action = Run a specific service. Container Name. \n    #ports: # string. Optional. Use when action = Run a specific service. Ports. \n    #workingDirectory: # string. Alias: workDir. Optional. Use when action = Run a specific service. Working Directory. \n    #entrypoint: # string. Optional. Use when action = Run a specific service. Entry Point Override. \n    #containerCommand: # string. Optional. Use when action = Run a specific service. Command. \n    #detached: true # boolean. Optional. Use when action = Run services || action = Run a specific service. Run in Background. Default: true.\n    #abortOnContainerExit: true # boolean. Optional. Use when action = Run services && detached == false. Abort on Container Exit. Default: true.\n    #imageDigestComposeFile: '$(Build.StagingDirectory)/docker-compose.images.yml' # string. Required when action = Write service image digests. Image Digest Compose File. Default: $(Build.StagingDirectory)/docker-compose.images.yml.\n    #removeBuildOptions: false # boolean. Optional. Use when action = Lock services || action = Combine configuration. Remove Build Options. Default: false.\n    #baseResolveDirectory: # string. Optional. Use when action = Lock services || action = Combine configuration. Base Resolve Directory. \n    #outputDockerComposeFile: '$(Build.StagingDirectory)/docker-compose.yml' # string. Required when action = Lock services || action = Combine configuration. Output Docker Compose File. Default: $(Build.StagingDirectory)/docker-compose.yml.\n    #dockerComposeCommand: # string. Required when action = Run a Docker Compose command. Command. \n    #arguments: # string. Optional. Use when action != Lock services && action != Combine configuration && action != Write service image digests. Arguments. \n  # Advanced Options\n    #dockerHostEndpoint: # string. Docker Host Service Connection. \n    #nopIfNoDockerComposeFile: false # boolean. No-op if no Docker Compose File. Default: false.\n    #requireAdditionalDockerComposeFiles: false # boolean. Require Additional Docker Compose Files. Default: false.\n    #currentWorkingDirectory: '$(System.DefaultWorkingDirectory)' # string. Alias: cwd. Working Directory. Default: $(System.DefaultWorkingDirectory).\n    #dockerComposePath: # string. Docker Compose executable Path.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Group Deployment in YAML\nDESCRIPTION: This YAML snippet shows the configuration options for the AzureResourceGroupDeployment@1 task. It includes inputs for specifying the Azure connection, action to perform, resource group details, and deployment options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Resource Group Deployment v1\n# Deploy, start, stop, delete Azure Resource Groups.\n- task: AzureResourceGroupDeployment@1\n  inputs:\n    #ConnectedServiceNameSelector: 'ConnectedServiceName' # 'ConnectedServiceName' | 'ConnectedServiceNameClassic'. Azure Connection Type. Default: ConnectedServiceName.\n    ConnectedServiceName: # string. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Subscription. \n    #ConnectedServiceNameClassic: # string. Required when ConnectedServiceNameSelector = ConnectedServiceNameClassic. Azure Classic Subscription. \n    action: 'Create Or Update Resource Group' # 'Create Or Update Resource Group' | 'Select Resource Group' | 'Start' | 'Stop' | 'Restart' | 'Delete' | 'DeleteRG'. Required when ConnectedServiceNameSelector = ConnectedServiceName. Action. Default: Create Or Update Resource Group.\n    #actionClassic: 'Select Resource Group' # 'Select Resource Group'. Required when ConnectedServiceNameSelector = ConnectedServiceNameClassic. Action. Default: Select Resource Group.\n    resourceGroupName: # string. Required when ConnectedServiceNameSelector = ConnectedServiceName. Resource Group. \n    #cloudService: # string. Required when ConnectedServiceNameSelector = ConnectedServiceNameClassic. Cloud Service. \n    #location: 'East US' # 'Australia East' | 'Australia Southeast' | 'Brazil South' | 'Canada Central' | 'Canada East' | 'Central India' | 'Central US' | 'East Asia' | 'East US' | 'East US 2 ' | 'Japan East' | 'Japan West' | 'North Central US' | 'North Europe' | 'South Central US' | 'South India' | 'Southeast Asia' | 'UK South' | 'UK West' | 'West Central US' | 'West Europe' | 'West India' | 'West US' | 'West US 2'. Required when action = Create Or Update Resource Group. Location. Default: East US.\n    #csmFile: # string. Required when action = Create Or Update Resource Group. Template. \n    #csmParametersFile: # string. Optional. Use when action = Create Or Update Resource Group. Template Parameters. \n    #overrideParameters: # string. Optional. Use when action = Create Or Update Resource Group. Override Template Parameters. \n    #deploymentMode: 'Incremental' # 'Validation' | 'Incremental' | 'Complete'. Required when action = Create Or Update Resource Group. Deployment Mode. Default: Incremental.\n    #enableDeploymentPrerequisitesForCreate: false # boolean. Optional. Use when action = Create Or Update Resource Group. Enable Deployment Prerequisites. Default: false.\n    #enableDeploymentPrerequisitesForSelect: false # boolean. Optional. Use when action = Select Resource Group. Enable Deployment Prerequisites. Default: false.\n  # Output\n    #outputVariable: # string. Resource Group.\n```\n\n----------------------------------------\n\nTITLE: Simplified Target Specification for Script Step\nDESCRIPTION: Example of specifying a target for the script step using a simplified structure when command mode is not specified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-script.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- script:\n  target: string  # container name or the word 'host'\n```\n\n----------------------------------------\n\nTITLE: Go Tool Installer task configuration in YAML\nDESCRIPTION: This YAML snippet configures the GoTool@0 task to install a specific version of Go. It demonstrates the usage of the `version` input and optional `goPath` and `goBin` inputs for customizing the Go environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/go-tool-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Go tool installer v0\n# Find in cache or download a specific version of Go and add it to the PATH.\n- task: GoTool@0\n  inputs:\n    version: '1.10' # string. Required. Version. Default: 1.10.\n  # Advanced\n    #goPath: # string. GOPATH. \n    #goBin: # string. GOBIN.\n```\n```\n\n----------------------------------------\n\nTITLE: Azure Function Callback Implementation\nDESCRIPTION: C# Azure Function implementation that demonstrates the callback completion mode with async processing and status updates back to Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\n#r \"Newtonsoft.Json\"\n\nusing System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text;\nusing System.Threading;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Primitives;\nusing Newtonsoft.Json;\n\npublic static async Task<IActionResult> Run(HttpRequest req, ILogger log)\n{\n    var url = req.Headers[\"PlanUrl\"];\n    var projectId = req.Headers[\"ProjectId\"];\n    var hubName = req.Headers[\"HubName\"];\n    var planId = req.Headers[\"PlanId\"];\n    var jobId = req.Headers[\"JobId\"];\n    var timelineId = req.Headers[\"TimelineId\"];\n    var taskInstanceId = req.Headers[\"TaskinstanceId\"];\n    var authToken = req.Headers[\"AuthToken\"];\n\n    var callbackUrl = $\"{url}/{projectId}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/events?api-version=2.0-preview.1\";\n  \n    var successBody = JsonConvert.SerializeObject(new {\n        name = \"TaskCompleted\",\n        taskId = taskInstanceId.ToString(),\n        jobId = jobId.ToString(),\n        result = \"succeeded\"\n    });\n\n    // the following call does not block\n    Task.Run(() =>\n    {\n        Thread.Sleep(70000); // simulate long running work\n        PostEvent(callbackUrl, successBody, authToken, log);\n    });\n   \n    return new OkObjectResult(\"Long-running job successfully scheduled!\");\n}\n    \npublic static void PostEvent(String callbackUrl, String body, String authToken, ILogger log)\n{\n    try\n    {\n        var client = new HttpClient();\n        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", authToken);\n        var requestContent = new StringContent(body, Encoding.UTF8, \"application/json\");\n        var response = client.PostAsync(new Uri(callbackUrl), requestContent).Result;\n        var responseContent = response.Content.ReadAsStringAsync().Result;\n        log.LogInformation(response.StatusCode.ToString());\n        log.LogInformation(responseContent);\n    }\n    catch (Exception ex)\n    {\n        log.LogError(ex.Message);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BatchScript@1 Task in YAML\nDESCRIPTION: YAML syntax for the BatchScript@1 task, specifying required and optional inputs for running a Windows batch script in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/batch-script-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Batch script v1\n# Run a Windows command or batch script and optionally allow it to change the environment.\n- task: BatchScript@1\n  inputs:\n    filename: # string. Required. Path. \n    #arguments: # string. Arguments. \n    #modifyEnvironment: False # boolean. Modify Environment. Default: False.\n  # Advanced\n    #workingFolder: # string. Working folder. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring CopyFiles@1 task in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the CopyFiles@1 task in an Azure Pipelines workflow. It shows the basic structure and available input parameters for copying files from a source folder to a target folder using minimatch patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Copy Files v1\n# Copy files from source folder to target folder using minimatch patterns (The minimatch patterns will only match file paths, not folder paths).\n- task: CopyFiles@1\n  inputs:\n    #SourceFolder: # string. Source Folder. \n    Contents: '**' # string. Required. Contents. Default: **.\n    TargetFolder: # string. Required. Target Folder. \n  # Advanced\n    #CleanTargetFolder: false # boolean. Clean Target Folder. Default: false.\n    #OverWrite: false # boolean. Overwrite. Default: false.\n    #flattenFolders: false # boolean. Flatten Folders. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Network Load Balancer Task in YAML\nDESCRIPTION: YAML configuration for connecting or disconnecting an Azure VM's network interface to a load balancer's backend address pool. Requires Azure subscription, resource group name, load balancer name, and desired action (Connect/Disconnect).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-nlb-management-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Network Load Balancer v1\n# Connect or disconnect an Azure virtual machine's network interface to a Load Balancer's back end address pool.\n- task: AzureNLBManagement@1\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure Subscription. \n    ResourceGroupName: # string. Required. Resource Group. \n    LoadBalancer: # string. Required. Load Balancer Name. \n    Action: # 'Disconnect' | 'Connect'. Required. Action.\n```\n\n----------------------------------------\n\nTITLE: Defining Arguments for kubectl Commands\nDESCRIPTION: Allows specifying additional arguments for the selected kubectl command in Azure Pipelines. This enables granular control over the command execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"arguments\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`arguments`** - **Arguments**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the arguments to the specified `kubectl` command.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Notation CLI Task in Azure Pipelines - YAML\nDESCRIPTION: This snippet provides the YAML configuration for the Notation v0 task in Azure Pipelines, allowing users to execute commands to install, sign, or verify using the Notation CLI. Key parameters include command, version, and various configuration elements tailored for sign and verify actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/notation-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Notation@0\n  inputs:\n    command: 'install' # 'install' | 'sign' | 'verify'. Required. Command to run. Default: install.\n  # Command Configuration\n    #isCustomVersion: false # boolean. Optional. Use when command = install. Custom Version. Default: false.\n    #version: '1.3.0' # string. Required when command = install && isCustomVersion = false. Version. Default: 1.3.0.\n    #url: # string. Required when command = install && isCustomVersion = true. Download URL. \n    #checksum: # string. Required when command = install && isCustomVersion = true. Checksum. \n    #artifactRefs: # string. Optional. Use when command = verify || command = sign. Artifact references. \n    #trustPolicy: # string. Required when command = verify. Trust Policy File Path. \n    #trustStore: # string. Required when command = verify. Trust Store Folder Path. \n  # Advanced Configuration\n    #signatureFormat: 'cose' # 'cose' | 'jws'. Optional. Use when (command = sign || command = verify) && command = sign. Signature Format. Default: cose.\n    #allowReferrersAPI: false # boolean. Optional. Use when command = sign || command = verify. [Experimental] Allow Referrers API. Default: false.\n  # Plugin Configuration\n    #plugin: 'azureKeyVault' # 'azureKeyVault'. Required when command = sign. Plugin. Default: azureKeyVault.\n    #akvPluginVersion: '1.2.1' # string. Required when plugin = azureKeyVault && command = sign. Plugin Version. Default: 1.2.1.\n    #azurekvServiceConection: # string. Optional. Use when plugin = azureKeyVault && command = sign. Azure Key Vault service connection. \n    #keyid: # string. Required when plugin = azureKeyVault && command = sign. Key ID. \n    #caCertBundle: # string. Optional. Use when plugin = azureKeyVault && command = sign. Certificate Bundle File Path. \n    #selfSigned: false # boolean. Optional. Use when plugin = azureKeyVault && command = sign. Self-signed Certificate. Default: false.\n  # Timestamp\n    #timestampURL: # string. Optional. Use when command = sign. Timestamp URL. \n    #timestampRootCert: # string. Optional. Use when command = sign. Timestamp Root Certificate.\n```\n\n----------------------------------------\n\nTITLE: File Matching Pattern for Downloads in Azure Pipelines\nDESCRIPTION: Defines the input parameter `itemPattern` which specifies the files to download as a multi-line minimatch pattern. The default pattern downloads all files across artifacts if `Specific files` option is chosen.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"itemPattern\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`itemPattern`** - **Matching pattern**<br>\n`string`. Default value: `**`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the files to download as a multi-line minimatch pattern. For more information, see [File matching patterns reference](https://aka.ms/minimatchexamples).\n\nThe default pattern `\\*\\*` downloads all files across all artifacts in the build if you choose the **Specific files** option. To download all files within the artifact drop, use `drop/**`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Repository Resources in Azure DevOps YAML\nDESCRIPTION: Syntax for defining a list of repository resources in an Azure DevOps pipeline YAML file. This allows referencing additional repositories in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-repositories.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrepositories: [ repository ] # List of repository resources.\n```\n\n----------------------------------------\n\nTITLE: Specifying kubectl Command in Azure Pipelines\nDESCRIPTION: Defines the command to execute using kubectl in Azure Pipelines. The allowed values include various operations like apply, create, delete, etc.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"command\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`command`** - **Command**<br>\n`string`. Allowed values: `apply`, `create`, `delete`, `exec`, `expose`, `get`, `logs`, `run`, `set`, `top`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies a `kubectl` command to run.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Locking Service Images with Docker Compose in Azure DevOps\nDESCRIPTION: YAML configuration for locking Docker container services using the DockerCompose@0 task. This generates a new Docker Compose file with locked image versions to ensure deployment consistency.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Lock services\n  inputs:\n    action: Lock services\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    outputDockerComposeFile: $(Build.StagingDirectory)/docker-compose.yml\n```\n\n----------------------------------------\n\nTITLE: Rolling Deployment Strategy Schema in YAML\nDESCRIPTION: The YAML schema definition for a rolling deployment strategy, showing all available configuration options including maxParallel, preDeploy, deploy, routeTraffic, postRouteTraffic, and on failure/success hooks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-rolling.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrolling:\n  maxParallel: string # Maximum number of jobs running in parallel.\n  preDeploy: # Pre deploy hook for rolling deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where pre deploy steps will run.\n  deploy: # Deploy hook for rolling deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where deploy steps will run.\n  routeTraffic: # Route traffic hook for rolling deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where route traffic steps will run.\n  postRouteTraffic: # Post route traffic hook for rolling deployment strategy.\n    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n    pool: string | pool # Pool where post route traffic steps will run.\n  on: # On success or failure hook for rolling deployment strategy.\n    failure: # Runs on failure of any step.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where post on failure steps will run.\n    success: # Runs on success of all of the steps.\n      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n      pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Task Inputs in Azure Pipelines\nDESCRIPTION: Comprehensive list of input parameters for configuring a Gradle build task in Azure Pipelines including path settings, build options, test reporting, code coverage tools, and JDK configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ninputs:\n  gradleWrapperFile: 'gradlew'  # Required, location of Gradle wrapper script\n  workingDirectory: ''  # Optional, working directory for build\n  options: ''  # Optional, additional command line options\n  tasks: 'build'  # Required, Gradle tasks to execute\n  publishJUnitResults: true  # Optional, publish test results\n  testResultsFiles: '**/TEST-*.xml'  # Required when publishing results\n  codeCoverageToolOption: 'None'  # Optional, code coverage tool choice\n  javaHomeOption: 'JDKVersion'  # Required, how to set JAVA_HOME\n  gradleOptions: '-Xmx1024m'  # Optional, GRADLE_OPTS settings\n```\n\n----------------------------------------\n\nTITLE: Configuring App Settings for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `AppSettings` parameter used to edit web app application settings. The syntax involves key-value pairs, with values containing spaces enclosed in double quotes. Examples demonstrate setting port, request timeout, and time zone configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_13\n\nLANGUAGE: none\nCODE:\n```\n**`AppSettings`** - **App settings**<br>\n`string`.\n```\n\n----------------------------------------\n\nTITLE: Deploy with ACR Authentication\nDESCRIPTION: Creates a new Container App using application source code and authenticating to Azure Container Registry with provided credentials\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    acrUsername: $(ACR_USERNAME_SECRET)\n    acrPassword: $(ACR_PASSWORD_SECRET)\n```\n\n----------------------------------------\n\nTITLE: Configuring AzurePolicyCheckGate Task in Azure Pipelines (YAML)\nDESCRIPTION: This YAML snippet shows how to configure the AzurePolicyCheckGate@0 task in an Azure Pipelines file. It includes required and optional parameters for checking Azure Policy compliance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-policy-check-gate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Check Azure Policy compliance v0\n# Security and compliance assessment for Azure Policy.\n- task: AzurePolicyCheckGate@0\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    #ResourceGroupName: # string. Resource group. \n    #Resources: # string. Resource name. \n  # Advanced\n    #RetryDuration: '00:02:00' # string. Retry duration. Default: 00:02:00.\n```\n\n----------------------------------------\n\nTITLE: Configuring InvokeRESTAPI Task in Azure Pipelines\nDESCRIPTION: YAML configuration for the InvokeRESTAPI@1 task showing all available input parameters including connection types, HTTP methods, headers, and completion options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/invoke-rest-api-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Invoke REST API v1\n# Invoke a REST API as a part of your pipeline.\n- task: InvokeRESTAPI@1\n  inputs:\n    connectionType: 'connectedServiceName' # 'connectedServiceName' | 'connectedServiceNameARM'. Alias: connectedServiceNameSelector. Required. Connection type. Default: connectedServiceName.\n    serviceConnection: # string. Alias: connectedServiceName | genericService. Required when connectedServiceNameSelector = connectedServiceName. Generic service connection. \n    #azureServiceConnection: # string. Alias: connectedServiceNameARM | azureSubscription. Required when connectedServiceNameSelector = connectedServiceNameARM. Azure subscription. \n    method: 'POST' # 'OPTIONS' | 'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'TRACE' | 'PATCH'. Required. Method. Default: POST.\n    #headers: # string. Headers. \n    #body: # string. Optional. Use when method != GET && method != HEAD. Body. \n    #urlSuffix: # string. URL suffix and parameters. \n  # Advanced\n    waitForCompletion: 'false' # 'true' | 'false'. Required. Completion event. Default: false.\n    #successCriteria: # string. Optional. Use when waitForCompletion = false. Success criteria.\n```\n\n----------------------------------------\n\nTITLE: Enabling UTF8 Support for FTP Connection\nDESCRIPTION: A boolean to enable UTF-8 support for the FTP connection. This is useful for ensuring proper character encoding and handling special characters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"enableUtf8\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`enableUtf8`** - **Enable UTF8 support**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nEnables UTF-8 support for the FTP connection (`OPTS UTF8 ON`).\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Pushing NuGet Packages to Internal Feed\nDESCRIPTION: This YAML snippet demonstrates pushing NuGet packages to an internal feed using the `DotNetCoreCLI@2` task in Azure Pipelines. It filters packages based on a search pattern and publishes them to the specified feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n# Push non test NuGet packages from a build to internal organization Feed\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'push'\n    searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.Tests.nupkg'\n    feedPublish: 'FabrikamFeed'\n\n```\n\n----------------------------------------\n\nTITLE: Copy Files with Variables in Content Section (YAML)\nDESCRIPTION: This YAML snippet shows how to copy files using variables in the content section of the CopyFiles@2 task. It copies all files from the repository's local path to the artifact staging directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: CopyFiles@2\n  inputs:\n    Contents: '$(Build.Repository.LocalPath)/**' \n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Extracting All Zip Files Recursively in Azure DevOps Pipeline\nDESCRIPTION: Configures the ExtractFiles task to extract all .zip files in the repository, clean the destination folder, and prevent overwriting existing files\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/extract-files-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: ExtractFiles@1\n  inputs:\n    archiveFilePatterns: '**/*.zip'\n    cleanDestinationFolder: true\n    overwriteExistingFiles: false\n```\n\n----------------------------------------\n\nTITLE: Configuring ContainerStructureTest@0 task in YAML pipeline\nDESCRIPTION: YAML configuration for the ContainerStructureTest@0 task, specifying required inputs like Docker registry connection, repository, and config file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/container-structure-test-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Container Structure Test v0\n# Uses container-structure-test (https://github.com/GoogleContainerTools/container-structure-test) to validate the structure of an image based on four categories of tests - command tests, file existence tests, file content tests and metadata tests.\n- task: ContainerStructureTest@0\n  inputs:\n  # Container Repository\n    dockerRegistryServiceConnection: # string. Required. Docker registry service connection. \n    repository: # string. Required. Container repository. \n    #tag: '$(Build.BuildId)' # string. Tag. Default: $(Build.BuildId).\n    configFile: # string. Required. Config file path. \n    #testRunTitle: # string. Test run title. \n    #failTaskOnFailedTests: false # boolean. Fail task if there are test failures. Default: false.\n```\n\n----------------------------------------\n\nTITLE: NuGet Authenticate Task with nuget.exe in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the NuGetAuthenticate task with nuget.exe to restore and push NuGet packages. It includes configuring service connections for feeds in other organizations or third-party repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: OtherOrganizationFeedConnection, ThirdPartyRepositoryConnection\n- task: NuGetToolInstaller@1 # Optional if nuget.exe >= 4.8.5385 is already on the path\n  inputs:\n    versionSpec: '*'\n    checkLatest: true\n- script: nuget restore\n# ...\n- script: nuget push -ApiKey AzureArtifacts -Source \\\"MyProjectFeed1\\\" MyProject.*.nupkg\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Batch Triggers in Azure DevOps YAML Pipelines\nDESCRIPTION: Configures batched triggers for the main branch. When batch is set to true, if a pipeline run is in progress, any new changes are queued and will trigger a single consolidated run after the current run completes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/trigger.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# specific branch build with batching\ntrigger:\n  batch: true\n  branches:\n    include:\n    - main\n```\n\n----------------------------------------\n\nTITLE: Defining Reusable Variables in Azure Pipelines YAML Template\nDESCRIPTION: Example of defining a set of reusable variables in a separate YAML file. This template defines common build configuration variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-template.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# File: variables/build.yml\nvariables:\n- name: vmImage\n  value: vs2017-win2016\n- name: arch\n  value: x64\n- name: config\n  value: debug\n```\n\n----------------------------------------\n\nTITLE: Defining getPackage Step in Azure Pipelines YAML (2020.1 and earlier)\nDESCRIPTION: YAML schema for defining a getPackage step in Azure Pipelines 2020.1 and earlier versions. This step downloads a package from a package management feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-get-package.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- getPackage: string # Required as first property. Alias of the package resource.\n  path: string # Path to download the package into.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Configuring ShellScript@2 Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the ShellScript@2 task in Azure Pipelines. Specifies inputs for script path, arguments, working directory, and error handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/shell-script-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Shell script v2\n# Run a shell script using Bash.\n- task: ShellScript@2\n  inputs:\n    scriptPath: # string. Required. Script Path. \n    #args: # string. Arguments. \n  # Advanced\n    #disableAutoCwd: false # boolean. Specify Working Directory. Default: false.\n    #cwd: # string. Optional. Use when disableAutoCwd = true. Working Directory. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Specifying Branch Triggers for CI in Azure DevOps YAML Pipelines\nDESCRIPTION: Defines a list of branches that will trigger continuous integration builds when code is pushed to them. In this example, pushes to the main and develop branches will trigger pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/trigger.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrigger:\n- main\n- develop\n```\n\n----------------------------------------\n\nTITLE: Defining App Center Distribute v2 Task in Azure Pipelines YAML\nDESCRIPTION: YAML definition for the App Center distribute v2 task. This task distributes app builds to testers and users via Visual Studio App Center. It includes options for specifying the app file, release notes, symbols, and distribution groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# App Center distribute v2\n# Distribute app builds to testers and users via Visual Studio App Center.\n- task: AppCenterDistribute@2\n  inputs:\n    serverEndpoint: # string. Required. App Center service connection. \n    appSlug: # string. Required. App slug. \n    appFile: # string. Alias: app. Required. Binary file path. \n    releaseNotesOption: 'input' # 'input' | 'file'. Alias: releaseNotesSelection. Required. Create release notes. Default: input.\n    releaseNotesInput: # string. Required when releaseNotesSelection = input. Release notes. \n    #releaseNotesFile: # string. Required when releaseNotesSelection = file. Release notes file. \n    #isMandatory: false # boolean. Require users to update to this release. Default: false.\n    #distributionGroupId: # string. Alias: destinationIds | destinationId. Destination IDs. \n  # Symbols\n    #symbolsOption: 'Apple' # 'Apple'. Alias: symbolsType. Symbols type. Default: Apple.\n    #symbolsPath: # string. Optional. Use when symbolsType == AndroidNative || symbolsType = Windows. Symbols path. \n    #symbolsPdbFiles: '**/*.pdb' # string. Alias: pdbPath. Optional. Use when symbolsType = UWP. Symbols path (*.pdb). Default: **/*.pdb.\n    #symbolsDsymFiles: # string. Alias: dsymPath. Optional. Use when symbolsType = Apple. dSYM path. \n    #symbolsMappingTxtFile: # string. Alias: mappingTxtPath. Optional. Use when symbolsType = AndroidJava. Mapping file. \n    #symbolsIncludeParentDirectory: # boolean. Alias: packParentFolder. Include all items in parent folder.\n```\n\n----------------------------------------\n\nTITLE: Copy Files with Multiple Match Patterns in YAML\nDESCRIPTION: This YAML snippet demonstrates how to copy files using multiple match patterns using the CopyFiles@2 task. It specifies the files to be copied based on file extensions (.exe, .dll) and a specific file (readme.txt) from the source location to the artifact staging directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CopyFiles@2\n  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'\n  inputs:\n    Contents: |\n      ConsoleApplication1\\ConsoleApplication1\\bin\\**\\*.exe\n      ConsoleApplication1\\ConsoleApplication1\\bin\\**\\*.dll\n      ConsoleApplication1\\readme.txt\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Basic SSH Key Installation Example\nDESCRIPTION: A simple example of installing an SSH key in Azure Pipelines. This shows how to properly configure the task with required parameters and secure variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: InstallSSHKey@0\n  displayName: 'Install an SSH key'\n  inputs:\n    knownHostsEntry: 'SHA256:1Hyr55tsxGifESBMc0s+2NtutnR/4+LOkVwrOGrIp8U johndoe@contoso'\n    sshPublicKey: '$(myPubKey)'\n    sshKeySecureFile: 'id_rsa'\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Remote Execution Task in Azure Pipelines\nDESCRIPTION: YAML configuration for PowerShellOnTargetMachines@1 task that defines how to execute PowerShell scripts on remote machines. Includes settings for machine targeting, authentication, script paths, and execution options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-on-target-machines-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell on Target Machines v1\n# Execute PowerShell scripts on remote machine(s).\n- task: PowerShellOnTargetMachines@1\n  inputs:\n    EnvironmentName: # string. Required. Machines. \n    #AdminUserName: # string. Admin Login. \n    #AdminPassword: # string. Password. \n    #Protocol: # 'Http' | 'Https'. Protocol. \n    #TestCertificate: true # boolean. Optional. Use when Protocol = Https. Test Certificate. Default: true.\n  # Deployment\n    ScriptPath: # string. Required. PowerShell Script. \n    #ScriptArguments: # string. Script Arguments. \n    #InitializationScriptPath: # string. Initialization Script. \n    #SessionVariables: # string. Session Variables. \n  # Advanced Options\n    #RunPowershellInParallel: true # boolean. Run PowerShell in Parallel. Default: true.\n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Filter Criteria.\n```\n\n----------------------------------------\n\nTITLE: Defining Build Resource Syntax in Azure Pipelines YAML\nDESCRIPTION: Basic syntax for defining a build resource in Azure Pipelines YAML. This defines the structure with required properties like build, type, connection, and source for referencing artifacts from a run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-builds-build.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbuilds:\n- build: string # Required as first property. Alias or name of build artifact.\n  type: string # Required. Name of the artifact type.\n  connection: string # Required. Name of the connection. This connection will be used for all the communication related to this artifact.\n  source: string # Required. Name of the source definition/build/job.\n  version: string\n  branch: string\n  trigger: none | true # When the artifact mentioned in this build resource completes a build, it is allowed to trigger this pipeline.\n```\n\n----------------------------------------\n\nTITLE: Authenticating External Maven Repositories\nDESCRIPTION: YAML task configuration for authenticating with multiple external Maven repositories using service connections. Requires pre-configured Maven service connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- task: MavenAuthenticate@0\n  displayName: 'Maven Authenticate'\n  inputs:\n    MavenServiceConnections: central,MavenOrg\n```\n\n----------------------------------------\n\nTITLE: Basic Webhook Pipeline Example in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to define a pipeline with a webhook resource and access webhook data in a script step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  webhooks:\n    - webhook: WebHook\n      connection: IncomingWH\n\nsteps:  \n- script: echo ${{ parameters.WebHook.resource.message.title }}\n```\n\n----------------------------------------\n\nTITLE: PowerShell Task YAML Configuration\nDESCRIPTION: YAML syntax for configuring the PowerShell@1 task in Azure Pipelines. Defines required and optional inputs for running PowerShell scripts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell v1\n# Run a PowerShell script.\n- task: PowerShell@1\n  inputs:\n    scriptType: 'filePath' # 'inlineScript' | 'filePath'. Required. Type. Default: filePath.\n    scriptName: # string. Required when scriptType = filePath. Script Path. \n    #arguments: # string. Arguments. \n    #inlineScript: # string. Required when scriptType = inlineScript. Inline Script. \n  # Advanced\n    #workingFolder: # string. Working folder. \n    #failOnStandardError: true # boolean. Fail on Standard Error. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Script for Azure App Service in Pipelines\nDESCRIPTION: Specifies the type and content of a custom deployment script to run after successful deployment to Azure App Service. Can be an inline script or a file path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nScriptType: 'Inline Script'\nInlineScript: ':: You can provide your deployment commands here. One command per line.'\n```\n\n----------------------------------------\n\nTITLE: Restoring Packages with Azure DevOps Pipeline YAML\nDESCRIPTION: Demonstrates the NuGetCommand@2 task for restoring NuGet packages. It covers different scenarios including restoring from project scoped feeds, organization scoped feeds, feeds in different organizations, and feed settings from nuget.config. The snippet requires YAML syntax and proper authentication settings in place.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_22\n\nLANGUAGE: YAML\nCODE:\n```\n# Restore from a project scoped feed in the same organization\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    feedsToUse: 'select'\n    vstsFeed: 'my-project/my-project-scoped-feed'\n    includeNuGetOrg: false\n    restoreSolution: '**/*.sln'\n```\n\nLANGUAGE: YAML\nCODE:\n```\n# Restore from an organization scoped feed in the same organization\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    feedsToUse: 'select'\n    vstsFeed: 'my-organization-scoped-feed'\n    restoreSolution: '**/*.sln'\n```\n\nLANGUAGE: YAML\nCODE:\n```\n# Restore from a feed in a different organization\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    feedsToUse: config\n    nugetConfigPath: ./nuget.config\n    restoreSolution: '**/*.sln'\n    externalFeedCredentials: 'MyServiceConnectionName'\n    noCache: true\n  continueOnError: true\n```\n\nLANGUAGE: YAML\nCODE:\n```\n# Restore from feed(s) set in nuget.config\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    feedsToUse: 'config'\n    nugetConfigPath: 'nuget.config'\n```\n\n----------------------------------------\n\nTITLE: npmAuthenticate Task Configuration\nDESCRIPTION: This YAML snippet demonstrates the syntax for configuring the npmAuthenticate@0 task. It shows how to specify the .npmrc file to authenticate and optionally, custom endpoints for external registries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-authenticate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n```yaml\n# npm authenticate (for task runners) v0\n# Don't use this task if you're also using the npm task. Provides npm credentials to an .npmrc file in your repository for the scope of the build. This enables npm task runners like gulp and Grunt to authenticate with private registries.\n- task: npmAuthenticate@0\n  inputs:\n    workingFile: # string. Required. .npmrc file to authenticate. \n    #customEndpoint: # string. Credentials for registries outside this organization/collection.\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Docker Registry Connection Input for Azure Pipelines\nDESCRIPTION: This snippet describes the `dockerRegistryConnection` input, which specifies the service connection for Docker registry. This optional string parameter is necessary when the `containerregistrytype` is set to 'Container Registry'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"dockerRegistryConnection\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`dockerRegistryConnection`** - **Docker Registry Service Connection**<br>\n[Input alias](index.md#what-are-task-input-aliases): `dockerRegistryEndpoint`. `string`. Optional. Use when `containerregistrytype = Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies a Docker registry service connection. Required for commands that need to authenticate with a registry.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Patching Kubernetes Objects\nDESCRIPTION: Demonstrates how to patch a Kubernetes pod specification using strategic merge patch strategy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Patch\n  inputs: \n    action: patch\n    kind: pod\n    name: demo-5fbc4d6cd9-pgxn4\n    mergeStrategy: strategic\n    patch: '{\"spec\":{\"containers\":[{\"name\":\"demo\",\"image\":\"foobar/demo:2239\"}]}}'\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Installing Pre-installed Java Version\nDESCRIPTION: Configures Java Tool Installer to use a pre-installed Java version 8 on Microsoft-hosted agents\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: JavaToolInstaller@1\n  inputs:\n    versionSpec: '8'\n    jdkArchitectureOption: 'x64'\n    jdkSourceOption: 'PreInstalled'\n```\n\n----------------------------------------\n\nTITLE: Specifying Startup Command for Linux Apps in Azure Pipelines\nDESCRIPTION: Sets the startup command for Linux web apps, container apps, and function apps deployed to Azure App Service. Used to customize the application startup process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nStartupCommand: 'dotnet exec filename.dll'\n```\n\n----------------------------------------\n\nTITLE: Configuring Xcode Build Task in Azure Pipelines\nDESCRIPTION: This YAML code snippet defines the 'Xcode@4' task for Azure Pipelines allowing users to build, test, and optionally package an app using Xcode on macOS. It includes parameters for actions, workspace paths, SDK, configurations, and sign-up options among others. Users must ensure proper configuration of required parameters such as 'actions', which defaults to 'build'. Optional parameters include export settings, signing identity, and destination platforms.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Xcode v4\n# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.\n- task: Xcode@4\n  inputs:\n    actions: 'build' # string. Required. Actions. Default: build.\n    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).\n    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).\n    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.\n    #scheme: # string. Scheme. \n    #xcodeVersion: 'default' # '8' | '9' | 'default' | 'specifyPath'. Xcode version. Default: default.\n    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. \n  # Package options\n    #packageApp: false # boolean. Create app package. Default: false.\n    #archivePath: # string. Optional. Use when packageApp == true. Archive path. \n    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).\n    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.\n    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.\n    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. \n    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. \n    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. \n  # Signing & provisioning\n    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.\n    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. \n    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. \n    #teamId: # string. Optional. Use when signingOption = auto. Team ID. \n  # Devices & simulators\n    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.\n    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. \n    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.\n    #destinationSimulators: 'iPhone 7' # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. Default: iPhone 7.\n    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. \n  # Advanced\n    #args: # string. Arguments. \n    #workingDirectory: # string. Alias: cwd. Working directory. \n    #outputPattern: # string. Output directory. \n    #useXcpretty: false # boolean. Use xcpretty. Default: false.\n    #publishJUnitResults: false # boolean. Publish test results to VSTS/TFS. Default: false.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring App Center Distribute Task in YAML\nDESCRIPTION: YAML syntax for configuring the AppCenterDistribute@0 task to distribute an app build via App Center. Specifies required and optional parameters like connection, app details, and release notes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# App Center distribute v0\n# Distribute app builds to testers and users via App Center.\n- task: AppCenterDistribute@0\n  inputs:\n    serverEndpoint: # string. Required. App Center connection. \n    appSlug: # string. Required. App slug. \n    appFile: # string. Alias: app. Required. Binary file path. \n    releaseNotesOption: 'input' # 'input' | 'file'. Alias: releaseNotesSelection. Required. Create release notes. Default: input.\n    releaseNotesInput: # string. Required when releaseNotesSelection = input. Release notes. \n    #releaseNotesFile: # string. Required when releaseNotesSelection = file. Release notes file. \n    #distributionGroupId: # string. Distribution group ID. \n  # Symbols\n    #symbolsOption: 'Apple' # 'Apple'. Alias: symbolsType. Symbols type. Default: Apple.\n    #symbolsPath: # string. Optional. Use when symbolsType == AndroidNative || symbolsType = Windows. Symbols path. \n    #symbolsPdbFiles: '**/*.pdb' # string. Alias: pdbPath. Optional. Use when symbolsType = UWP. Symbols path (*.pdb). Default: **/*.pdb.\n    #symbolsDsymFiles: # string. Alias: dsymPath. Optional. Use when symbolsType = Apple. dSYM path. \n    #symbolsMappingTxtFile: # string. Alias: mappingTxtPath. Optional. Use when symbolsType = AndroidJava. Mapping file. \n    #symbolsIncludeParentDirectory: # boolean. Alias: packParentFolder. Include all items in parent folder.\n```\n\n----------------------------------------\n\nTITLE: Configuring DecryptFile task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the DecryptFile@1 task in an Azure Pipelines workflow. It specifies required inputs like cipher, input file, and passphrase, as well as optional parameters for output file and working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/decrypt-file-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Decrypt file (OpenSSL) v1\n# Decrypt a file using OpenSSL.\n- task: DecryptFile@1\n  inputs:\n    cipher: 'des3' # string. Required. Cypher. Default: des3.\n    inFile: # string. Required. Encrypted file. \n    passphrase: # string. Required. Passphrase. \n    #outFile: # string. Decrypted file path. \n  # Advanced\n    #workingDirectory: # string. Alias: cwd. Working directory.\n```\n\n----------------------------------------\n\nTITLE: Storing Retrieved Certificate Locally with Password Protection\nDESCRIPTION: PowerShell code to store a retrieved certificate locally on the machine with password protection. This is a good practice for securing the certificate file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-key-vault-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n#Get the file created\n$password = 'your password'\n$protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12, $password)\n$pfxPath = [Environment]::GetFolderPath(\"Desktop\") + \"\\MyCert.pfx\"\n[System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Beta Task in Azure Pipelines\nDESCRIPTION: YAML configuration for the Cache Beta task showing required and optional parameters for implementing file caching between pipeline runs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cache-beta-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Cache (Beta) v0\n# Cache files between runs.\n- task: CacheBeta@0\n  inputs:\n    key: # string. Required. Key. \n    path: # string. Required. Path. \n    #cacheHitVar: # string. Cache hit variable.\n```\n\n----------------------------------------\n\nTITLE: Example YAML configuration for ContainerStructureTest@0 task\nDESCRIPTION: A specific example of how to configure the ContainerStructureTest@0 task in a YAML pipeline, including values for required inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/container-structure-test-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: ContainerStructureTest@0\n  displayName: 'Container Structure Test '\n  inputs:\n    dockerRegistryServiceConnection: 'Container_dockerHub'\n    repository: adma/hellodocker\n    tag: v1\n    configFile: /home/user/cstfiles/fileexisttest.yaml\n```\n\n----------------------------------------\n\nTITLE: Example: SMI Traffic Split Configuration\nDESCRIPTION: This example demonstrates how to configure canary deployment strategy with SMI for traffic splitting, controlling the number of replicas independently of the traffic split. It shows the use of `strategy`, `trafficSplitMethod`, `percentage`, and `baselineAndCanaryReplicas` parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n\"strategy: canary\ntrafficSplitMethod: smi\npercentage: 20\nbaselineAndCanaryReplicas: 1\"\n```\n\n----------------------------------------\n\nTITLE: Configuring DotNetCoreCLI Task in Azure DevOps YAML Pipeline\nDESCRIPTION: Complete YAML configuration for the DotNetCoreCLI@2 task that can handle building, testing, packaging, and publishing .NET applications. Includes comprehensive input parameters for different commands, feed configurations, versioning schemes, and advanced options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DotNetCoreCLI@2\n  inputs:\n    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.\n    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.\n    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s). \n    #custom: # string. Required when command = custom. Custom command. \n    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. \n    #restoreArguments: # string. Optional. Use when command = restore. Arguments. \n    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.\n    #testRunTitle: # string. Optional. Use when command = test. Test run title. \n    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.\n    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.\n    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.\n    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.\n    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. \n    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. \n    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.\n    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).\n    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).\n    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.\n    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.\n    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.\n    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.\n    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. \n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. \n    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. \n    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.\n    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. \n    #verbosityRestore: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Detailed.\n    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.\n    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.\n    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. \n    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.\n    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.\n    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.\n    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. \n    #verbosityPack: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Detailed.\n    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.\n```\n\n----------------------------------------\n\nTITLE: Parallel Stages Pipeline Configuration\nDESCRIPTION: Example demonstrating how to configure two stages to run in parallel by using empty dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: BuildWin\n  displayName: Build for Windows\n- stage: BuildMac\n  displayName: Build for Mac\n  dependsOn: [] # by specifying an empty array, this stage doesn't depend on the stage before it\n```\n\n----------------------------------------\n\nTITLE: Setting Production Deployment in Azure Spring Cloud\nDESCRIPTION: A YAML configuration for setting the current staging deployment as the production deployment, effectively swapping which deployment receives production traffic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\\n  azureSubscription: Contoso\\n\\nsteps:\\n- task: AzureSpringCloud@0\\n    inputs:\\n    azureSubscription: $(azureSubscription)\\n    Action: 'Set Production'\\n    AzureSpringCloud: contoso-dev-az-spr-cld\\n    AppName: customer-api\\n    UseStagingDeployment: true\n```\n\n----------------------------------------\n\nTITLE: Downloading GitHub Release with Azure Pipelines YAML\nDESCRIPTION: This YAML snippet represents a task in an Azure Pipeline that downloads a specific release from a GitHub repository. It requires a GitHub connection, repository name, and potentially a specific release version or tag. The 'downloadPath' specifies where the download is stored on the agent machine. All tasks also offer additional control options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-github-release-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadGitHubRelease@0\n  inputs:\n    connection: # string. Required. GitHub Connection. \n    userRepository: # string. Required. Repository. \n    defaultVersionType: 'latest' # 'latest' | 'specificVersion' | 'specificTag'. Required. Default version. Default: latest.\n    version: # string. Required when defaultVersionType != latest. Release. \n    #itemPattern: '**' # string. Item Pattern. Default: **.\n    downloadPath: '$(System.ArtifactsDirectory)' # string. Required. Destination directory. Default: $(System.ArtifactsDirectory).\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Azure Service Connection in YAML Pipeline\nDESCRIPTION: Demonstrates creating a service connection name dynamically using format expressions based on environment variables in an Azure DevOps pipeline configuration\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/includes/azure-subscription-variables.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  # Format string for the service connection\n  azureSubscriptionFormat: 'connectionString-{0}-001'\n\nstages:\n- stage: Prepare\n  variables:\n    environmentName: 'test'\n    # Stage level variable with the service connection name\n    # Evaluates to conenctionString-test-001\n    azureSubscription: ${{ format(variables.azureSubscriptionFormat, variables.environmentName) }}\n\n  jobs:\n  - job: RunStuff\n    steps:\n    - task: AzureCLI@2\n      inputs:\n        # Set this input to the computed value\n        azureSubscription: ${{ variables.azureSubscription }}\n        scriptType: bash\n        scriptLocation: inlineScript\n        inlineScript: 'echo Hello ${{ variables.azureSubscription }}'\n\n    - task: AzurePowerShell@5\n      inputs:\n        # Set this input to the computed value\n        azureSubscription: ${{ variables.azureSubscription }}\n        azurePowerShellVersion: 'LatestVersion'\n        scriptType: 'InlineScript'\n        inline: Write-Host \"Hello ${{ variables.azureSubscription }}\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure PowerShell v2 task in YAML\nDESCRIPTION: YAML syntax for the AzurePowerShell@2 task. This snippet shows the structure and available input parameters for configuring the task to run a PowerShell script within an Azure environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure PowerShell v2\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@2\n  inputs:\n    #azureConnectionType: 'ConnectedServiceNameARM' # 'ConnectedServiceName' | 'ConnectedServiceNameARM'. Alias: ConnectedServiceNameSelector. Azure Connection Type. Default: ConnectedServiceNameARM.\n    #azureClassicSubscription: # string. Alias: ConnectedServiceName. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Classic Subscription. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. Azure Subscription. \n    ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Required. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Script Arguments. \n    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Service Deploy Task\nDESCRIPTION: YAML configuration for the Azure App Service Deploy v2 task, showing all available input parameters including subscription settings, deployment options, and Web Deploy configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Service deploy v2\n# Update Azure App Service using Web Deploy / Kudu REST APIs.\n- task: AzureRmWebAppDeployment@2\n  inputs:\n    ConnectedServiceName: # string. Required. Azure Subscription. \n    WebAppName: # string. Required. App Service name. \n    #DeployToSlotFlag: false # boolean. Deploy to slot. Default: false.\n    #ResourceGroupName: # string. Required when DeployToSlotFlag = true. Resource group. \n    #SlotName: # string. Required when DeployToSlotFlag = true. Slot. \n    #VirtualApplication: # string. Virtual Application. \n    Package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required. Package or Folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.\n  # Output\n    #WebAppUri: # string. App Service URL. \n  # Additional Deployment Options\n    #UseWebDeploy: true # boolean. Publish using Web Deploy. Default: true.\n    #SetParametersFile: # string. Optional. Use when UseWebDeploy == true. SetParameters File. \n    #RemoveAdditionalFilesFlag: false # boolean. Optional. Use when UseWebDeploy == true. Remove Additional Files at Destination. Default: false.\n    #ExcludeFilesFromAppDataFlag: false # boolean. Optional. Use when UseWebDeploy == true. Exclude Files from the App_Data Folder. Default: false.\n    #AdditionalArguments: # string. Optional. Use when UseWebDeploy == true. Additional Arguments. \n    #TakeAppOfflineFlag: false # boolean. Take App Offline. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Validating Deployment Manifest in Azure Pipelines YAML\nDESCRIPTION: This snippet validates the schema of generated deployment manifests for Azure IoT Edge. It checks if the generated manifest passes the specified JSON schema validation, allowing for controlled deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n\"validateGeneratedDeploymentManifest: string. Required when action = Generate deployment manifest. Allowed values: true, false. Default value: false.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Tool Installer in Azure Pipelines YAML\nDESCRIPTION: Configures the NuGet tool installer task to specify a NuGet.exe version and download behavior. Allows specifying version range and optional latest version checking.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-tool-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetToolInstaller@0\n  inputs:\n    #versionSpec: # string. Version of NuGet.exe to install. \n    #checkLatest: false # boolean. Always download the latest matching version. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Command for DotNetCoreCLI Task\nDESCRIPTION: Specifies a custom command to pass to dotnet.exe for execution when using the custom command option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncustom: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Mode\nDESCRIPTION: Specifies the deployment strategy for resource group templates, with options for incremental updates, complete replacements, or validation-only deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndeploymentMode: string\nAllowed values: [\n  \"Incremental\",\n  \"Complete\",\n  \"Validation\"\n]\n```\n\n----------------------------------------\n\nTITLE: Defining onSuccessHook Structure in Azure Pipelines YAML\nDESCRIPTION: YAML schema for defining onSuccessHook configuration in Azure Pipelines. Specifies the steps to run and optional pool configuration for success-based cleanup actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/on-success-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nonSuccessHook:\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  pool: string | pool # Pool where on success steps will run.\n```\n\n----------------------------------------\n\nTITLE: NuGet Restore Task Configuration (Azure Pipelines 2022.2+)\nDESCRIPTION: Defines the YAML syntax for configuring the NuGetRestore@1 task in Azure Pipelines for versions 2022.2 and later. This task restores NuGet packages required for a Visual Studio Build step. It specifies input parameters such as the solution path, feed selection method, and verbosity level.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-restore-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# NuGet Restore v1\n# Restores NuGet packages in preparation for a Visual Studio Build step.\n- task: NuGetRestore@1\n  inputs:\n    solution: '**/*.sln' # string. Required. Path to solution, packages.config, or project.json. Default: **/*.sln.\n    selectOrConfig: 'select' # 'select' | 'config'. Required. Feeds to use. Default: select.\n    #feed: # string. Optional. Use when selectOrConfig = select. Use packages from this Azure Artifacts feed. \n    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select. Use packages from NuGet.org. Default: true.\n    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config. Path to NuGet.config. \n  # Advanced\n    #noCache: false # boolean. Disable local cache. Default: false.\n    #packagesDirectory: # string. Destination directory. \n    #verbosity: 'Detailed' # '-' | 'Quiet' | 'Normal' | 'Detailed'. Verbosity. Default: Detailed.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Setting Runtime Stack for Linux Function Apps in Azure Pipelines\nDESCRIPTION: Defines the runtime stack and version for Linux function apps deployed to Azure Functions. Includes options for .NET, Java, Node.js, and Python runtimes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nRuntimeStackFunction: 'DOTNET|3.1'\n```\n\n----------------------------------------\n\nTITLE: Restoring npm packages from organization registry\nDESCRIPTION: This YAML shows how to restore npm packages from an Azure Artifacts registry within your organization. The `npmAuthenticate` task is used to authenticate with the registry, and the `npm ci` and `npm publish` commands are used to install dependencies and publish the package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-authenticate-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n```YAML\n- task: npmAuthenticate@0\n  inputs:\n    workingFile: .npmrc\n- script: npm ci\n# ...\n- script: npm publish\n```\n```\n\n----------------------------------------\n\nTITLE: MSBuild Solution Path Configuration\nDESCRIPTION: This snippet describes the `solution` input parameter for the MSBuild task, which specifies the path to the solution or project file to build. It uses wildcards to specify search criteria for multiple projects and gives recommendations for TFVC and Git repositories. It also recommends using the Visual Studio build task instead of MSBuild task when building solutions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`solution`** - **Project**<br>\n`string`. Required. Default value: `**/*.sln`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf you want to build multiple projects, specify search criteria. You can use a single-folder wildcard (*) and recursive wildcards (**). For example, `**.*proj` searches for all MSBuild project (`.*proj`) files in all subdirectories.\n\nMake sure the projects you specify are downloaded by this build pipeline. On the Repository tab:\n\n- If you use TFVC, make sure that the project is a child of one of the mappings on the Repository tab.\n- If you use Git, make sure that the project or project is in your Git repo, in a branch that you're building.\n\n> [!TIP]\n> If you are building a solution, we recommend you use the [Visual Studio build task](/azure/devops/pipelines/tasks/build/visual-studio-build) instead of the MSBuild task.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Specifying Linux Package Path for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `packageForLinux` parameter, used to specify the file path to a package or folder containing Linux app service contents. It is required when deploying built-in Linux images. The default value is a ZIP file located in the default working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n**`packageForLinux`** - **Package or folder**<br>\n[Input alias](index.md#what-are-task-input-aliases): `BuiltinLinuxPackage`. `string`. Required when `WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin`. Default value: `$(System.DefaultWorkingDirectory)/**/*.zip`.\n```\n\n----------------------------------------\n\nTITLE: Defining Schedules in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet shows the basic structure for defining schedules in an Azure DevOps pipeline. The schedules list specifies the scheduled triggers for the pipeline using cron syntax.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/schedules.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschedules: [ cron ] # The schedules list specifies the scheduled triggers for the pipeline.\n```\n\n----------------------------------------\n\nTITLE: Conditional Stage and Job Execution Based on Scheduled Trigger\nDESCRIPTION: This example shows how to conditionally run stages and jobs based on which scheduled trigger initiated the pipeline run. It uses the Build.CronSchedule.DisplayName variable in conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/schedules-cron.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: stage1\n  # Run this stage only when the pipeline is triggered by the \n  # \"Daily midnight build\" cron schedule\n  condition: eq(variables['Build.CronSchedule.DisplayName'], 'Daily midnight build')\n  jobs:\n  - job: job1\n    steps:\n    - script: echo Hello from Stage 1 Job 1\n\n- stage: stage2\n  dependsOn: [] # Indicate this stage does not depend on the previous stage\n  jobs:\n  - job: job2\n    steps:\n    - script: echo Hello from Stage 2 Job 2\n  - job: job3 \n    # Run this job only when the pipeline is triggered by the \n    # \"Weekly Sunday build\" cron schedule\n    condition: eq(variables['Build.CronSchedule.DisplayName'], 'Weekly Sunday build')\n    steps:\n    - script: echo Hello from Stage 2 Job 3\n```\n\n----------------------------------------\n\nTITLE: Specify Runtime Stack\nDESCRIPTION: Creates a new Container App using a specific runtime stack for the application image\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    runtimeStack: 'dotnetcore:7.0'\n```\n\n----------------------------------------\n\nTITLE: Minimal Build and Deploy Container App from Source\nDESCRIPTION: This example demonstrates the minimal configuration to build an application image for a Container App from source code. It creates a new Container App with a default name in a new resource group, using an image built from the provided source path and pushed to the specified ACR instance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n```\n\n----------------------------------------\n\nTITLE: Publishing a Package with Universal Package Task in YAML Pipeline\nDESCRIPTION: YAML configuration for publishing a package to a feed using the Universal Package task. This example specifies the publish directory, destination feed, package name, and a description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/universal-packages-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Universal Package\nsteps:\n- task: UniversalPackages@0\n  displayName: 'Universal publish'\n  inputs:\n    command: publish\n    publishDirectory: Application\n    vstsFeedPublish: '00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000002' # You can also use '<projectName>/<feedName>' instead of the GUIDs\n    vstsFeedPackagePublish: mygatsbysite\n    packagePublishDescription: 'A test package'\n```\n\n----------------------------------------\n\nTITLE: JSON Variable Substitution Example\nDESCRIPTION: Illustrates how to use nested JSONPath expressions for variable substitution in a complex JSON configuration file, demonstrating the task's capability to replace deeply nested variable values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Data\": {\n    \"DefaultConnection\": {\n      \"ConnectionString\": \"Server=(localdb)\\SQLEXPRESS;Database=MyDB;Trusted_Connection=True\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Examples of Command Line Task Usage\nDESCRIPTION: Provides examples of using the Command Line task in various scenarios, such as getting the date, listing directory contents, and setting environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cmd-line-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: date /t\n  displayName: Get the date\n- script: dir\n  workingDirectory: $(Agent.BuildDirectory)\n  displayName: List contents of a folder\n- script: |\n    set MYVAR=foo\n    set\n  displayName: Set a variable and then display all\n  env:\n    aVarFromYaml: someValue\n```\n\n----------------------------------------\n\nTITLE: Azure File Copy Task YAML Configuration\nDESCRIPTION: YAML configuration for the AzureFileCopy@2 task. This task allows copying files to either Azure Blob Storage or Azure VMs. Key parameters include source path, Azure connection details, destination type, and various optional configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure file copy v2\n# Copy files to Azure Blob Storage or virtual machines.\n- task: AzureFileCopy@2\n  inputs:\n    SourcePath: # string. Required. Source. \n    #azureConnectionType: 'ConnectedServiceNameARM' # 'ConnectedServiceName' | 'ConnectedServiceNameARM'. Alias: ConnectedServiceNameSelector. Azure Connection Type. Default: ConnectedServiceNameARM.\n    #azureClassicSubscription: # string. Alias: ConnectedServiceName. Required when ConnectedServiceNameSelector = ConnectedServiceName. Azure Classic Subscription. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. Azure Subscription. \n    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. \n    #classicStorage: # string. Alias: StorageAccount. Required when ConnectedServiceNameSelector = ConnectedServiceName. Classic Storage Account. \n    storage: # string. Alias: StorageAccountRM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM. RM Storage Account. \n    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. \n    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. \n    #cloudService: # string. Alias: EnvironmentName. Required when ConnectedServiceNameSelector = ConnectedServiceName && Destination = AzureVMs. Cloud Service. \n    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when ConnectedServiceNameSelector = ConnectedServiceNameARM && Destination = AzureVMs. Resource Group. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. \n    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. \n    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. \n    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. \n    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). \n    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). \n    #enableCopyPrerequisites: false # boolean. Optional. Use when ConnectedServiceNameSelector = ConnectedServiceNameARM && Destination = AzureVMs. Enable Copy Prerequisites. Default: false.\n    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.\n    #CleanTargetBeforeCopy: false # boolean. Optional. Use when Destination = AzureVMs. Clean Target. Default: false.\n    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.\n  # Output\n    #outputStorageUri: # string. Storage Container URI. \n    #outputStorageContainerSasToken: # string. Storage Container SAS Token.\n```\n\n----------------------------------------\n\nTITLE: Post-Deployment Script for Python Dependencies on Azure App Service\nDESCRIPTION: A PowerShell script that runs after deployment to install Python dependencies on Azure App Service. It checks for requirements.txt, verifies the Python extension is available, and installs dependencies using pip.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_38\n\nLANGUAGE: powershell\nCODE:\n```\n@echo off\nif NOT exist requirements.txt (\n echo No Requirements.txt found.\n EXIT /b 0\n)\nif NOT exist \"$(PYTHON_EXT)/python.exe\" (\n echo Python extension not available >&2\n EXIT /b 1\n)\necho Installing dependencies\ncall \"$(PYTHON_EXT)/python.exe\" -m pip install -U setuptools\nif %errorlevel% NEQ 0 (\n echo Failed to install setuptools >&2\n EXIT /b 1\n)\ncall \"$(PYTHON_EXT)/python.exe\" -m pip install -r requirements.txt\nif %errorlevel% NEQ 0 (\n echo Failed to install dependencies>&2\n EXIT /b 1\n)\n```\n\n----------------------------------------\n\nTITLE: Job Definition Schema for Azure Pipelines 2020.1\nDESCRIPTION: YAML schema for defining a job in Azure Pipelines 2020.1. Similar to 2022+ version but without templateContext property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string # Required as first property. ID of the job.\n  displayName: string # Human-readable name for the job.\n  dependsOn: string | [ string ] # Any jobs which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this job.\n  continueOnError: string # Continue running even on failure?\n  timeoutInMinutes: string # Time to wait for this job to complete before the server kills it.\n  cancelTimeoutInMinutes: string # Time to wait for the job to cancel before forcibly terminating it.\n  variables: variables | [ variable ] # Job-specific variables.\n  strategy: strategy # Execution strategy for this job.\n  pool: string | pool # Pool where this job will run.\n  container: string | container # Container resource name.\n  services: # Container resources to run as a service container.\n    string: string # Name/value pairs\n  workspace: # Workspace options on the agent.\n    clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n  uses: # Any resources required by this job that are not already referenced.\n    repositories: [ string ] # Repository references.\n    pools: [ string ] # Pool references.\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts in Azure Pipelines 2022.1+\nDESCRIPTION: YAML configuration for publishing build artifacts to Azure Pipelines or Windows file share in version 2022.1 and later. Includes support for tar archives and maximum artifact size limits.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-build-artifacts-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish build artifacts v1\n# Publish build artifacts to Azure Pipelines or a Windows file share.\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)' # string. Required. Path to publish. Default: $(Build.ArtifactStagingDirectory).\n    ArtifactName: 'drop' # string. Required. Artifact name. Default: drop.\n    publishLocation: 'Container' # 'Container' | 'FilePath'. Alias: ArtifactType. Required. Artifact publish location. Default: Container.\n    #MaxArtifactSize: '0' # string. Max Artifact Size. Default: 0.\n    #TargetPath: # string. Required when ArtifactType = FilePath. File share path. \n    #Parallel: false # boolean. Optional. Use when ArtifactType = FilePath. Parallel copy. Default: false.\n    #ParallelCount: '8' # string. Optional. Use when ArtifactType = FilePath && Parallel = true. Parallel count. Default: 8.\n  # Advanced\n    #StoreAsTar: false # boolean. Tar the artifact before uploading. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring FileTransform Task in YAML Pipeline\nDESCRIPTION: Demonstrates how to use the FileTransform task to replace tokens with variable values in configuration files. Supports XML and JSON file transformations with optional XML transformation rules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# File transform v1\n# Replace tokens with variable values in XML or JSON configuration files.\n- task: FileTransform@1\n  inputs:\n    folderPath: '$(System.DefaultWorkingDirectory)/**/*.zip'\n    #enableXmlTransform: false\n    #xmlTransformationRules: '-transform **\\*.Release.config -xml **\\*.config'\n    #fileType: # 'xml' | 'json'\n    #targetFiles: # Optional configuration file paths\n```\n\n----------------------------------------\n\nTITLE: Configuring Espresso Tests for Android App in App Center\nDESCRIPTION: This YAML snippet demonstrates how to configure the App Center Test task to run Espresso tests on an Android app. It specifies the app file, artifacts directory, test framework, build directory, service connection, app slug, and target devices.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-test-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AppCenterTest@1\n  displayName: 'Espresso Test - Synchronous'\n  inputs:\n    appFile: 'Espresso/espresso-app.apk'\n    artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'\n    frameworkOption: espresso\n    espressoBuildDirectory: Espresso\n    serverEndpoint: 'myAppCenterServiceConnection'\n    appSlug: 'xplatbg1/EspressoTests'\n    devices: a84c93af\n```\n\n----------------------------------------\n\nTITLE: Configuring SpotBugs Static Code Analysis in Gradle Task\nDESCRIPTION: Runs SpotBugs static code analysis plugin for Gradle v5.6 or later. Allows specifying plugin version and analysis configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nspotBugsAnalysis: true\nspotBugsGradlePluginVersionChoice: specify\nspotbugsGradlePluginVersion: 4.7.0\n```\n\n----------------------------------------\n\nTITLE: Deploying to Production in Azure Spring Cloud\nDESCRIPTION: A YAML configuration for deploying an application to the default production deployment in Azure Spring Apps. This example is suitable for Basic SKU environments and demonstrates how to specify package location and deployment parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\\n  azureSubscription: Contoso\\n\\nsteps:\\n- task: AzureSpringCloud@0\\n    inputs:\\n    azureSubscription: $(azureSubscription)\\n    Action: 'Deploy'\\n    AzureSpringCloud: contoso-dev-az-spr-cld\\n    AppName: customer-api\\n    UseStagingDeployment: false\\n    DeploymentName: default\\n    Package: '$(System.DefaultWorkingDirectory)/**/*customer-api*.jar'\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Remote Execution Task in Azure Pipelines\nDESCRIPTION: YAML configuration for PowerShellOnTargetMachines@3 task that defines various parameters for executing PowerShell scripts on remote machines. Includes options for authentication, script execution, session management and error handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-on-target-machines-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell on target machines v3\n# Execute PowerShell scripts on remote machines using PSSession and Invoke-Command for remoting.\n- task: PowerShellOnTargetMachines@3\n  inputs:\n    Machines: # string. Required. Machines. \n    #UserName: # string. Username. \n    #UserPassword: # string. Password. \n  # Script options\n    #ScriptType: 'Inline' # 'FilePath' | 'Inline'. Script Type. Default: Inline.\n    #ScriptPath: # string. Required when ScriptType = FilePath. Script File Path. \n    InlineScript: # string. Required when ScriptType = Inline. Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #InitializationScript: # string. Optional. Use when ScriptType = FilePath. Initialization script. \n    #SessionVariables: # string. Optional. Use when ScriptType = FilePath. Session Variables. \n  # PSSession options\n    #CommunicationProtocol: 'Https' # 'Http' | 'Https'. Protocol. Default: Https.\n    #AuthenticationMechanism: 'Default' # 'Default' | 'Credssp'. Authentication. Default: Default.\n    #NewPsSessionOptionArguments: '-SkipCACheck -IdleTimeout 7200000 -OperationTimeout 0 -OutputBufferingMode Block' # string. Session Option parameters. Default: -SkipCACheck -IdleTimeout 7200000 -OperationTimeout 0 -OutputBufferingMode Block.\n  # Error handling options\n    #ErrorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.\n  # Advanced\n    #WorkingDirectory: # string. Working Directory. \n    #RunPowershellInParallel: true # boolean. Run PowerShell in Parallel. Default: true.\n```\n\n----------------------------------------\n\nTITLE: NuGet Tool Installer Task in YAML\nDESCRIPTION: This YAML snippet defines the NuGetToolInstaller@1 task, which acquires a specific version of NuGet and adds it to the PATH. It allows specifying the NuGet version using `versionSpec` and provides an option `checkLatest` to always check for new versions. The task aims to manage NuGet versions used within Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-tool-installer-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"# NuGet tool installer v1\n# Acquires a specific version of NuGet from the internet or the tools cache and adds it to the PATH. Use this task to change the version of NuGet used in the NuGet tasks.\n- task: NuGetToolInstaller@1\n  inputs:\n  # Advanced\n    #versionSpec: # string. Version of NuGet.exe to install. \n    #checkLatest: false # boolean. Always check for new versions. Default: false.\"\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMap File Path\nDESCRIPTION: Requires a filepath or directory for creating the ConfigMap when the useConfigMapFile is set to true, allowing Kubernetes to locate the ConfigMap data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"configMapFile\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`configMapFile`** - **ConfigMap file**<br>\n`string`. Required when `useConfigMapFile = true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify a file or directory that contains the configMaps.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Azure App Configuration Task Properties\nDESCRIPTION: Complete set of input parameters and control options for configuring Azure App Configuration pipeline task. Parameters cover subscription connection, endpoint configuration, file handling, and import behavior.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-configuration-import-v10.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: string (required) # Azure subscription for App Configuration instance\nAppConfigurationEndpoint: string (required) # App Configuration endpoint URL\nConfigurationFile: string (required) # Path to config file (yaml/json/properties)\nUseFilePathExtension: boolean (default: true) # Use file extension for format\nFileFormat: string (optional) # Format: json/yaml/properties\nFileContentProfile: string (default: 'appconfig/default') # Content profile type\nSeparator: string (optional) # Separator for flattening configs\nDepth: string (optional) # Flattening depth for json/yaml\nPrefix: string (optional) # Key prefix\nLabel: string (optional) # Key-value label\nContentType: string (optional) # Content type for keys\nTags: string (optional) # JSON format tags\nExcludeFeatureFlags: boolean (default: false) # Exclude feature flags\nStrict: boolean (default: false) # Delete unmatched keys\nDryRun: boolean (default: false) # Preview mode\nImportMode: string (default: 'Ignore-Match') # Import behavior\n```\n\n----------------------------------------\n\nTITLE: Defining postRouteTrafficHook in Azure Pipelines YAML\nDESCRIPTION: YAML schema for defining postRouteTrafficHook in Azure Pipelines. It includes steps to run and an optional pool specification for where the steps will run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/post-route-traffic-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npostRouteTrafficHook:\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  pool: string | pool # Pool where post route traffic steps will run.\n```\n\n----------------------------------------\n\nTITLE: Installing GitHub Npm Package in Azure Pipelines\nDESCRIPTION: A YAML configuration for downloading and installing an npm package from a GitHub repository using specified credentials and version control\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-github-npm-package-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadGithubNpmPackage@1\n  inputs:\n    packageName: # string. Required. Package Name. \n    version: # string. Required. Package Version. \n    externalRegistryCredentials: # string. Alias: externalEndpoints. Required. Credentials for registry from GitHub. \n    #installDirectory: # string. Alias: packagesDirectory. Destination directory.\n```\n\n----------------------------------------\n\nTITLE: Canary Deployment Lifecycle Management Actions\nDESCRIPTION: Demonstrates the key actions for managing canary deployments, including promoting or rejecting canary changes in the pipeline\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n# Promote Canary Changes\naction: promote\nstrategy: canary\n\n# Reject Canary Changes\naction: reject\nstrategy: canary\n```\n\n----------------------------------------\n\nTITLE: Installing Java from Local Directory\nDESCRIPTION: Example showing how to install Java 11 from a local directory archive file on Linux. The task configures Java installation with specific architecture and destination settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  - task: JavaToolInstaller@0\n    inputs:\n      versionSpec: \"11\"\n      jdkArchitectureOption: x64\n      jdkSourceOption: LocalDirectory\n      jdkFile: \"/builds/openjdk-11.0.2_linux-x64_bin.tar.gz\"\n      jdkDestinationDirectory: \"/builds/binaries/externals\"\n      cleanDestinationDirectory: true\n```\n\n----------------------------------------\n\nTITLE: Notation Task Input Parameters\nDESCRIPTION: YAML schema defining configuration parameters for the Notation task in Azure DevOps pipelines. Parameters include command modes (install, sign, verify), version control, artifact reference handling, and plugin configuration for Azure Key Vault integration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/notation-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ninputs:\n  command: string # Required. Values: install, sign, verify. Default: install\n  isCustomVersion: boolean # Optional. Default: false\n  version: string # Required when command=install & isCustomVersion=false. Default: 1.3.0\n  url: string # Required when command=install & isCustomVersion=true\n  checksum: string # Required when command=install & isCustomVersion=true\n  artifactRefs: string # Optional for verify/sign commands\n  signatureFormat: string # Optional. Values: cose, jws. Default: cose\n  allowReferrersAPI: boolean # Optional. Default: false\n  plugin: string # Required for sign command. Values: azureKeyVault\n  akvPluginVersion: string # Required for azureKeyVault plugin. Default: 1.2.1\n  azurekvServiceConection: string # Optional for azureKeyVault plugin\n  keyid: string # Required for azureKeyVault plugin\n  caCertBundle: string # Optional for azureKeyVault plugin\n  selfSigned: boolean # Optional. Default: false\n  timestampURL: string # Optional for sign command\n  timestampRootCert: string # Optional for sign command\n  trustPolicy: string # Required for verify command\n  trustStore: string # Required for verify command\n```\n\n----------------------------------------\n\nTITLE: Using Additional Commands and Arguments with Docker in YAML\nDESCRIPTION: This example demonstrates how to pass additional arguments for Docker build commands using the arguments input, such as passing secrets during the build process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: Docker@2\n  displayName: Login to ACR\n  inputs:\n    command: login\n    containerRegistry: dockerRegistryServiceConnection1\n- task: Docker@2\n  displayName: Build\n  inputs:\n    command: build\n    repository: contosoRepository # username/contosoRepository for DockerHub\n    tags: tag1\n    arguments: --secret id=mysecret,src=mysecret.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Connection Types\nDESCRIPTION: Defines the connection type for Kubernetes tasks, supporting Azure Resource Manager, Kubernetes Service Connection, and local configuration options\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nconnectionType: Azure Resource Manager\n```\n\n----------------------------------------\n\nTITLE: Passing Multi-word Parameter Values in Azure ARM Template Deployment\nDESCRIPTION: Demonstrates how to pass parameter values with multiple words and variables in Azure Resource Manager template deployments. Values with spaces should be enclosed in quotes, even when using variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-manager-template-deployment-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n-name \"parameter value\" -name2 \"$(var)\"\n```\n\n----------------------------------------\n\nTITLE: Example of Step Targeting in Azure Pipelines YAML\nDESCRIPTION: Provides a comprehensive example of running steps on the host, in a job container, and in another container with restricted commands mode.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/target.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: python\n    image: python:3.8\n  - container: node\n    image: node:13.2\n\njobs:\n- job: example\n  container: python\n\n  steps:\n  - script: echo Running in the job container\n\n  - script: echo Running on the host\n    target: host\n\n  - script: echo Running in another container, in restricted commands mode\n    target:\n      container: node\n      commands: restricted\n```\n\n----------------------------------------\n\nTITLE: Configuring Staging Deployment for Azure Spring Apps\nDESCRIPTION: Determines whether to use the deployment set as staging at execution time. This is an optional boolean input used when Action is Deploy or Set Production.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nUseStagingDeployment: true # Optional. Use when Action = Deploy or Set Production\n```\n\n----------------------------------------\n\nTITLE: Deleting a Staging Deployment in Azure Spring Cloud\nDESCRIPTION: A YAML snippet demonstrating how to delete an existing staging deployment in an Azure Spring Cloud pipeline. This action helps free up resources and prepare for new deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\\n  azureSubscription: Contoso\\n\\nsteps:\\n- task: AzureSpringCloud@0\\n  continueOnError: true\\n  inputs:\\n    continueOnError: true\\n    inputs:\\n    azureSubscription: $(azureSubscription)\\n    Action: 'Delete Staging Deployment'\\n    AppName: customer-api\\n    AzureSpringCloud: contoso-dev-az-spr-cld\n```\n\n----------------------------------------\n\nTITLE: Configuring JSON Variable Substitution for Azure App Service Deployment\nDESCRIPTION: Specifies JSON files for variable substitution during deployment, supporting nested variables using JSONPath expressions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\nJSONFiles: \"config.json\\nSettings.json\"\n```\n\n----------------------------------------\n\nTITLE: Publish Quality Gate Result v4 using SonarQubePublish@4 task in YAML\nDESCRIPTION: This YAML snippet defines the SonarQubePublish@4 task, which publishes SonarQube's Quality Gate result on the Azure DevOps build result. It specifies the required `pollingTimeoutSec` input, which determines how long the task will poll SonarQube for the analysis results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-publish-v4.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Publish Quality Gate Result v4\n# Publish SonarQube's Quality Gate result on the Azure DevOps build result, to be used after the actual analysis.\n- task: SonarQubePublish@4\n  inputs:\n    pollingTimeoutSec: '300' # string. Required. Timeout (s). Default: 300.\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring VSTest@3 Task in Azure Pipelines YAML\nDESCRIPTION: Example YAML configuration for the VSTest@3 task, showing key inputs and options for running Visual Studio tests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/vstest-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Visual Studio Test v3\n- task: VSTest@3\n  inputs:\n    testSelector: 'testAssemblies' # Required. Select tests using. Options: testAssemblies, testPlan, testRun\n    testAssemblyVer2: '**\\bin\\**\\*test.dll\n**\\bin\\**\\*tests.dll' # Required when testSelector = testAssemblies\n    searchFolder: '$(System.DefaultWorkingDirectory)' # Required. Search folder\n    vsTestVersion: 'latest' # Optional. Test platform version\n    runSettingsFile: # Settings file\n    codeCoverageEnabled: false # Code coverage enabled\n    runInParallel: false # Run tests in parallel\n    failTaskOnFailedTests: false # Fail if tests fail\n    diagnosticsEnabled: false # Collect diagnostics\n    rerunFailedTests: false # Rerun failed tests\n```\n\n----------------------------------------\n\nTITLE: Gulp Task YAML Definition\nDESCRIPTION: This YAML snippet defines the gulp@1 task in Azure Pipelines. It allows configuring various inputs such as the gulp file path, target tasks, arguments, and advanced options like working directory and gulp.js location. It also supports publishing JUnit test results and enabling code coverage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gulp-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# gulp v1\n# Run the gulp Node.js streaming task-based build system.\n- task: gulp@1\n  inputs:\n    #gulpFile: 'gulpfile.js' # string. gulp File Path. Default: gulpfile.js.\n    #targets: # string. gulp Task(s). \n    #arguments: # string. Arguments. \n  # Advanced\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #gulpjs: # string. gulp.js location. \n  # JUnit Test Results\n    #publishJUnitResults: false # boolean. Publish to Azure Pipelines. Default: false.\n    #testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test Results Files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test Run Title. \n  # Code Coverage\n    #enableCodeCoverage: false # boolean. Enable code Coverage. Default: false.\n    #testFramework: 'Mocha' # 'Mocha' | 'Jasmine'. Optional. Use when enableCodeCoverage = true. Test Framework. Default: Mocha.\n    #srcFiles: # string. Optional. Use when enableCodeCoverage = true. Source Files. \n    #testFiles: 'test/*.js' # string. Required when enableCodeCoverage = true. Test Script Files. Default: test/*.js.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Multiline Bash Script Example\nDESCRIPTION: Example of a multiline bash script in Azure Pipelines with environment variables. This shows how to write multi-command scripts and pass variables to the script execution environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-bash.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- bash: |\n    which bash\n    echo Hello $name\n  displayName: Multiline Bash script\n  env:\n    name: Microsoft\n```\n\n----------------------------------------\n\nTITLE: Running Service Images with Docker Compose in Azure DevOps\nDESCRIPTION: YAML configuration for running Docker container services using the DockerCompose@0 task. It builds and runs the services defined in the compose file with options to abort on container exit and run in detached mode.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Run services\n  inputs:\n    action: Run services\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.ci.build.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    buildImages: true\n    abortOnContainerExit: true\n    detached: true\n```\n\n----------------------------------------\n\nTITLE: Pushing Packages with Azure DevOps Pipeline YAML\nDESCRIPTION: Provides examples of using the NuGetCommand@2 task for pushing NuGet packages to different feeds including project scoped feeds, organization scoped feeds, and NuGet.org. Highlights the need for using feed configurations and environment-specific credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_24\n\nLANGUAGE: YAML\nCODE:\n```\n# Push a project\n- task: NuGetCommand@2\n  inputs:\n    command: 'push'\n    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'\n    feedsToUse: 'config'\n    nugetConfigPath: '$(Build.WorkingDirectory)/NuGet.config'\n```\n\nLANGUAGE: YAML\nCODE:\n```\n# Push a project\n- task: NuGetCommand@2\n  inputs:\n    command: 'push'\n    nuGetFeedType: 'internal'\n    publishVstsFeed: 'my-organization-scoped-feed'\n```\n\nLANGUAGE: YAML\nCODE:\n```\n# Push a project\n- task: NuGetCommand@2\n  inputs:\n    command: 'push'\n    nuGetFeedType: 'internal'\n    publishVstsFeed: 'my-project/my-project-scoped-feed'\n```\n\nLANGUAGE: YAML\nCODE:\n```\n# Push a project\n- task: NuGetCommand@2\n  inputs:\n    command: 'push'\n    feedsToUse: 'config'\n    includeNugetOrg: 'true'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure File Copy Task in YAML\nDESCRIPTION: YAML configuration for the AzureFileCopy@5 task, specifying required and optional inputs for copying files to Azure Blob Storage or virtual machines. Includes options for source path, destination type, storage account, and various Azure-specific settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure file copy v5\n# Copy files to Azure Blob Storage or virtual machines.\n- task: AzureFileCopy@5\n  inputs:\n    SourcePath: # string. Required. Source. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. \n    storage: # string. Alias: StorageAccountRM. Required. RM Storage Account. \n    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. \n    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. \n    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when Destination = AzureVMs. Resource Group. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. \n    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. \n    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. \n    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. \n    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). \n    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). \n    #sasTokenTimeOutInMinutes: '240' # string. Optional. Use when Destination = AzureBlob. SAS Token Expiration Period In Minutes. Default: 240.\n    #enableCopyPrerequisites: false # boolean. Optional. Use when Destination = AzureVMs. Enable Copy Prerequisites. Default: false.\n    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.\n    #CleanTargetBeforeCopy: false # boolean. Clean Target. Default: false.\n    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkout Step in Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML schema for configuring repository checkout in Azure Pipelines 2020.1 and earlier versions. Contains basic checkout functionality without newer features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: string # Required as first property. Configures checkout for the specified repository.\n  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.\n  fetchDepth: string # Depth of Git graph to fetch.\n  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.\n  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.\n  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.\n  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Build ID Specification for Specific Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `buildId`, which is required when the `buildType` is `specific` and the `buildVersionToDownload` is set to `specific`, to specify the exact build to download artifacts from.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"buildId\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`buildId`** - **Build**<br>\n`string`. Required when `buildType == specific && buildVersionToDownload == specific`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe build you want to download the artifacts from.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Setting Xcode Project Configuration\nDESCRIPTION: Parameter to specify the configuration (like Debug or Release) to use when building the Xcode project or workspace. Can use pipeline variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nconfiguration: $(Configuration)\n```\n\n----------------------------------------\n\nTITLE: Defining azureSubscription Input for AzureRM Connection\nDESCRIPTION: This snippet defines the `azureSubscription` input, which is required when `ConnectionType` is set to `AzureRM`. It specifies the Azure Resource Manager subscription for the deployment and uses the alias `ConnectedServiceName`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`azureSubscription`** - **Azure subscription**<br>\n[Input alias](index.md#what-are-task-input-aliases): `ConnectedServiceName`. `string`. Required when `ConnectionType = AzureRM`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the Azure Resource Manager subscription for the deployment.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Template Reference and Parameter Usage\nDESCRIPTION: Example showing how to reference a template and provide parameters in the main pipeline, along with the template structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-template.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- template: string  # reference to template\n  parameters: { string: any } # provided parameters\n```\n\nLANGUAGE: yaml\nCODE:\n```\nparameters: { string: any } # expected parameters\nsteps: [ script | bash | pwsh | powershell | checkout | task | templateReference ]\n```\n\n----------------------------------------\n\nTITLE: Defining XamariniOS@2 Task - YAML\nDESCRIPTION: This YAML snippet defines the XamariniOS@2 task, which is used to build an iOS app with Xamarin on macOS. It includes inputs such as solutionFile, configuration, and options for cleaning and packaging the app.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xamarin-ios-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: XamariniOS@2\n  inputs:\n    solutionFile: '**/*.sln' # string. Alias: solution. Required. Solution. Default: **/*.sln.\n    configuration: 'Release' # string. Required. Configuration. Default: Release.\n    #clean: false # boolean. Clean. Default: false.\n    #packageApp: true # boolean. Create app package. Default: true.\n    #buildForSimulator: false # boolean. Alias: forSimulator. Build for iOS Simulator. Default: false.\n  # Advanced\n    #runNugetRestore: false # boolean. Run NuGet restore. Default: false.\n    #args: # string. Arguments.\n    #workingDirectory: # string. Alias: cwd. Working directory.\n    #mdtoolFile: # string. Alias: buildToolLocation | mdtoolLocation. Build tool path.\n  # Signing & Provisioning\n    #signingIdentity: # string. Alias: iosSigningIdentity. Signing identity.\n    #signingProvisioningProfileID: # string. Alias: provProfileUuid. Provisioning profile UUID.\n```\n\n----------------------------------------\n\nTITLE: Setting Working Directory for Gradle Build\nDESCRIPTION: Configuration option to specify the working directory where the Gradle build will run. If not specified, the repository root directory is used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nworkingDirectory: \"path/to/directory\"\n```\n\n----------------------------------------\n\nTITLE: Download GitHub NuGet Package task in YAML\nDESCRIPTION: Defines a task to download NuGet packages from GitHub. This task allows specifying the package name, version, and credentials for the GitHub feed. It also supports specifying a destination directory for the restored packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-github-nuget-package-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Download GitHub Nuget Packages v1\n# Restore your nuget packages using dotnet CLI.\n- task: DownloadGitHubNugetPackage@1\n  inputs:\n    packageName: # string. Required. Package Name. \n    version: # string. Required. Package Version. \n  # Feeds and authentication\n    #externalFeedCredentials: # string. Alias: externalEndpoints. Required when selectOrConfig = config && command = restore. Credentials for feed from GitHub. \n  # Advanced\n    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory.\n```\n```\n\n----------------------------------------\n\nTITLE: YAML Example - Pipeline Schedules Configuration\nDESCRIPTION: Example of auto-generated YAML syntax for defining pipeline schedules with various configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nschedules:\n- cron: string # Required as first property. Cron syntax defining a schedule in UTC time.\n  displayName: string # Optional friendly name given to a specific schedule.\n  branches: # Branch names to include or exclude for triggering a run.\n    include: [ string ] # List of items to include.\n    exclude: [ string ] # List of items to exclude.\n  batch: boolean # Whether to run the pipeline if the previously scheduled run is in-progress; the default is false.\n  always: boolean # Whether to always run the pipeline or only if there have been source code changes since the last successful scheduled run; the default is false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Build Task in Azure Pipelines\nDESCRIPTION: Configure a Gradle build task with basic build settings, Java version selection, and test result publishing using Azure DevOps YAML pipeline syntax\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Gradle@1\n  inputs:\n    gradleWrapperFile: 'gradlew'\n    tasks: 'build'\n    javaHomeOption: 'JDKVersion'\n    testResultsFiles: '**/build/test-results/TEST-*.xml'\n```\n\n----------------------------------------\n\nTITLE: Passing Arguments to Inline Scripts in Azure CLI Task (YAML)\nDESCRIPTION: This example shows how to pass arguments to an inline script using the AzureCLI@2 task. It demonstrates the use of pipeline variables as arguments for a PowerShell script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: <Azure_Resource_Manager_Service_Connection>\n    scriptType: 'ps'\n    scriptLocation: 'inlineScript'\n    arguments: '$(AZURE_STORAGE_ACCOUNT) $(AZURE_STORAGE_KEY)'\n    inlineScript: './scripts/publish.ps1 $1 $2'\n```\n\n----------------------------------------\n\nTITLE: Setting Up npm Authentication Task in Azure Pipelines YAML\nDESCRIPTION: This snippet demonstrates how to configure npm authentication tasks in Azure Pipelines using YAML. It requires an `.npmrc` configuration file and service connections, such as `OtherOrganizationNpmConnection` and `ThirdPartyRepositoryNpmConnection`, to authenticate and publish npm packages. Key inputs include specifying the working file and custom endpoints. You must ensure that the npm service connections are properly configured and authorized for your pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-authenticate-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n- task: npmAuthenticate@0\n  inputs:\n    workingFile: .npmrc\n    customEndpoint: OtherOrganizationNpmConnection, ThirdPartyRepositoryNpmConnection\n- script: npm ci\n# ...\n- script: npm publish -registry https://pkgs.dev.azure.com/{otherorganization}/_packaging/{feed}/npm/registry/\n```\n\n----------------------------------------\n\nTITLE: Complete PowerShell Step Example\nDESCRIPTION: A comprehensive example showing various PowerShell step configurations including working directory, environment variables, and error handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-powershell.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: Write-Host Hello $Env:name\n  displayName: Say hello\n  name: firstStep\n  workingDirectory: $(build.sourcesDirectory)\n  failOnStderr: true\n  env:\n    name: Microsoft\n```\n\n----------------------------------------\n\nTITLE: Setting Deployment Method for Linux Azure App Service\nDESCRIPTION: Chooses between One Deploy and Zip Deploy methods for deploying to a Linux Azure App Service. One Deploy supports both clean and incremental deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\nDeploymentTypeLinux: \"oneDeploy\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Signing Task for Azure Pipelines 2020.1+\nDESCRIPTION: YAML configuration for Android Signing v3 task in Azure Pipelines version 2020.1 and later. Includes all available options for signing and aligning APK files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/android-signing-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Android Signing v3\n# Sign and align Android APK files.\n- task: AndroidSigning@3\n  inputs:\n    apkFiles: '**/*.apk' # string. Alias: files. Required. APK files. Default: **/*.apk.\n  # Signing Options\n    #apksign: true # boolean. Sign the APK. Default: true.\n    apksignerKeystoreFile: # string. Alias: keystoreFile. Required when apksign = true. Keystore file. \n    #apksignerKeystorePassword: # string. Alias: keystorePass. Optional. Use when apksign = true. Keystore password. \n    #apksignerKeystoreAlias: # string. Alias: keystoreAlias. Optional. Use when apksign = true. Alias. \n    #apksignerKeyPassword: # string. Alias: keyPass. Optional. Use when apksign = true. Key password. \n    #apksignerVersion: 'latest' # string. Optional. Use when apksign = true. apksigner version. Default: latest.\n    #apksignerArguments: '--verbose' # string. Optional. Use when apksign = true. apksigner arguments. Default: --verbose.\n    #apksignerFile: # string. Alias: apksignerLocation. Optional. Use when apksign = true. apksigner location. \n  # Zipalign Options\n    #zipalign: true # boolean. Zipalign. Default: true.\n    #zipalignVersion: 'latest' # string. Optional. Use when zipalign = true. Zipalign version. Default: latest.\n    #zipalignFile: # string. Alias: zipalignLocation. Optional. Use when zipalign = true. Zipalign location.\n```\n\n----------------------------------------\n\nTITLE: Deploy Using Custom Dockerfile\nDESCRIPTION: Creates a new Container App using a specific Dockerfile for image creation\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    dockerfilePath: 'test.Dockerfile'\n```\n\n----------------------------------------\n\nTITLE: Passing Command Line Options to Gradle\nDESCRIPTION: Configuration option to pass command line options to the Gradle wrapper, allowing customization of Gradle execution parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\noptions: \"--build-cache --parallel\"\n```\n\n----------------------------------------\n\nTITLE: Defining Package Resources in Azure Pipelines YAML\nDESCRIPTION: YAML syntax for defining package resources in an Azure Pipeline. Package resources can be used to reference NuGet or npm GitHub packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-packages.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npackages: [ package ] # List of package resources.\n```\n\n----------------------------------------\n\nTITLE: Specifying Branch List for Pull Request Triggers in Azure Pipelines YAML\nDESCRIPTION: Defines a list of branches that will trigger a build when a pull request is created or updated.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pr.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n- main\n- develop\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols Configuration for Azure Pipelines Latest\nDESCRIPTION: YAML configuration for PublishSymbols@2 task with full parameter set including symbol file format options and advanced settings for the latest Azure Pipelines version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-symbols-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Index sources and publish symbols v2\n# Index your source code and publish symbols to a file share or Azure Artifacts symbol server.\n- task: PublishSymbols@2\n  inputs:\n    #SymbolsFolder: '$(Build.SourcesDirectory)' # string. Path to symbols folder. Default: $(Build.SourcesDirectory).\n    SearchPattern: '**/bin/**/*.pdb' # string. Required. Search pattern. Default: **/bin/**/*.pdb.\n    #Manifest: # string. Manifest. \n    #IndexSources: true # boolean. Index sources. Default: true.\n    #PublishSymbols: true # boolean. Publish symbols. Default: true.\n    SymbolServerType: # 'TeamServices' | 'FileShare'. Required when PublishSymbols = true. Symbol server type. \n    #SymbolsPath: # string. Optional. Use when PublishSymbols = true && SymbolServerType = FileShare. Path to publish symbols. \n    #CompressSymbols: false # boolean. Optional. Use when SymbolServerType = FileShare. Compress symbols. Default: false.\n    #SymbolExpirationInDays: '36530' # string. Optional. Use when PublishSymbols = true && SymbolServerType = TeamServices. Symbol Expiration (in days). Default: 36530.\n    #IndexableFileFormats: 'Default' # 'Default' | 'Pdb' | 'SourceMap' | 'All'. Optional. Use when PublishSymbols = true && SymbolServerType = TeamServices. Symbol file formats to publish. Default: Default.\n    #DetailedLog: true # boolean. Verbose logging. Default: true.\n    #TreatNotIndexedAsWarning: false # boolean. Warn if not indexed. Default: false.\n    #UseNetCoreClientTool: false # boolean. Use NetCore client tool. Default: false.\n    #SymbolsMaximumWaitTime: # string. Max wait time (min). \n    #SymbolsProduct: # string. Product. \n    #SymbolsVersion: # string. Version. \n    #SymbolsArtifactName: 'Symbols_$(BuildConfiguration)' # string. Artifact name. Default: Symbols_$(BuildConfiguration).\n```\n\n----------------------------------------\n\nTITLE: Running Grunt Tasks in Azure Pipelines - YAML\nDESCRIPTION: This snippet demonstrates how to run Grunt tasks in Azure Pipelines using the Grunt@0 task. It specifies the required inputs, including the path to the Grunt file and the location of the grunt-cli executable. The snippet provides placeholders for optional parameters like targets and arguments that can be used in the Grunt run command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/grunt-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: Grunt@0\n  inputs:\n    gruntFile: 'gruntfile.js' # string. Required. Grunt File Path. Default: gruntfile.js.\n    #targets: # string. Grunt Task(s). \n    #arguments: # string. Arguments. \n  # Advanced\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    gruntCli: 'node_modules/grunt-cli/bin/grunt' # string. Required. grunt-cli location. Default: node_modules/grunt-cli/bin/grunt.\n  # JUnit Test Results\n    #publishJUnitResults: false # boolean. Publish to Azure Pipelines. Default: false.\n    #testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test Results Files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test Run Title. \n  # Code Coverage\n    #enableCodeCoverage: false # boolean. Enable Code Coverage. Default: false.\n    #testFramework: 'Mocha' # 'Mocha' | 'Jasmine'. Optional. Use when enableCodeCoverage = true. Test Framework. Default: Mocha.\n    #srcFiles: # string. Optional. Use when enableCodeCoverage = true. Source Files. \n    #testFiles: 'test/*.js' # string. Required when enableCodeCoverage = true. Test Script Files. Default: test/*.js.\n```\n\n----------------------------------------\n\nTITLE: Implementing ShellScript@2 Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration to run the sample Bash script using the ShellScript@2 task in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/shell-script-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: ShellScript@2\n  inputs:\n    scriptPath: 'test.sh'\n```\n\n----------------------------------------\n\nTITLE: Running a Docker Compose Command in Azure DevOps\nDESCRIPTION: YAML configuration for running a custom Docker Compose command using the DockerCompose@0 task. This example runs the 'rm' command to remove containers defined in the compose file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Run a Docker Compose command\n  inputs:\n    action: Run a Docker Compose command\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml \n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    dockerComposeCommand: rm\n```\n\n----------------------------------------\n\nTITLE: Defining CopyFiles@2 task in Azure Pipelines YAML\nDESCRIPTION: YAML syntax for the CopyFiles@2 task, including all available inputs and their descriptions. Covers syntax for Azure Pipelines 2022 and later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Copy files v2\n# Copy files from a source folder to a target folder using patterns matching file paths (not folder paths).\n- task: CopyFiles@2\n  inputs:\n    #SourceFolder: # string. Source Folder. \n    Contents: '**' # string. Required. Contents. Default: **.\n    TargetFolder: # string. Required. Target Folder. \n  # Advanced\n    #CleanTargetFolder: false # boolean. Clean Target Folder. Default: false.\n    #OverWrite: false # boolean. Overwrite. Default: false.\n    #flattenFolders: false # boolean. Flatten Folders. Default: false.\n    #preserveTimestamp: false # boolean. Preserve Target Timestamp. Default: false.\n    #retryCount: '0' # string. Retry count to copy the file. Default: 0.\n    #delayBetweenRetries: '1000' # string. Delay between two retries. Default: 1000.\n    #ignoreMakeDirErrors: false # boolean. Ignore errors during creation of target folder. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Downloading Build Artifacts with YAML Task\nDESCRIPTION: Download build artifacts from current or specific builds with configurable options like download type, artifact name, and destination path. Supports downloading from current build, specific builds, and customizing download behavior.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadBuildArtifacts@0\n  inputs:\n    buildType: 'current'\n    downloadType: 'single'\n    artifactName: 'example-artifact'\n    downloadPath: '$(System.ArtifactsDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Azure Static Web App Deployment YAML for v2022\nDESCRIPTION: YAML configuration for deploying Azure Static Web Apps using pipeline version 2022. Contains base functionality without data_api_location support.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-static-web-app-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Deploy Azure Static Web App v0\n# Build and deploy an Azure Static Web App.\n- task: AzureStaticWebApp@0\n  inputs:\n    #workingDirectory: '$(System.DefaultWorkingDirectory)' # string. Alias: cwd | rootDirectory. Working directory. Default: $(System.DefaultWorkingDirectory).\n    #app_location: # string. App location. \n    #app_build_command: # string. App build command. \n    #output_location: # string. Output location. \n    #api_location: # string. Api location. \n    #api_build_command: # string. Api build command. \n    #routes_location: # string. Routes location. \n    #config_file_location: # string. Config file location. \n    #skip_app_build: # boolean. Skip app build. \n    #skip_api_build: # boolean. Skip api build. \n    #is_static_export: # boolean. Set static export. \n    #verbose: # boolean. Verbose. \n    #build_timeout_in_minutes: # string. Build timeout in minutes. \n    #azure_static_web_apps_api_token: # string. Azure Static Web Apps api token. \n    #deployment_environment: # string. Deployment Environment. \n    #production_branch: # string. Production Branch.\n```\n\n----------------------------------------\n\nTITLE: Branch Name Specification for Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `branchName`, required when the `buildType` is `specific` and `buildVersionToDownload` is `latestFromBranch`, allowing users to specify from which branch to download artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"branchName\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`branchName`** - **Branch name**<br>\n`string`. Required when `buildType == specific && buildVersionToDownload == latestFromBranch`. Default value: `refs/heads/master`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies whether to filter on branch/ref name, for example: `refs/heads/develop`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Specifying Xcode Workspace Path\nDESCRIPTION: Parameter to set the relative path from repository root to the Xcode workspace or project file. Supports glob patterns to find workspaces.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nxcWorkspacePath: **/*.xcodeproj/project.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Defining PublishProfilePath Input for PublishProfile Connection\nDESCRIPTION: This snippet defines the `PublishProfilePath` input, required when `ConnectionType` is `PublishProfile`. It specifies the path to the publish profile created from Visual Studio, with a default value of `$(System.DefaultWorkingDirectory)/**/*.pubxml`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`PublishProfilePath`** - **Publish profile path**<br>\n`string`. Required when `ConnectionType = PublishProfile`. Default value: `$(System.DefaultWorkingDirectory)/**/*.pubxml`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe path of the [publish profile](https://aka.ms/vsPublishProfile) created from Visual Studio.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Docker v2 Task Configuration for Azure Pipelines 2020.1\nDESCRIPTION: YAML configuration for the Docker@2 task in Azure Pipelines 2020.1. Includes options for building, pushing, logging in/out, and managing containers, with slight differences from newer versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker v2\n# Build or push Docker images, login or logout, start or stop containers, or run a Docker command.\n- task: Docker@2\n  inputs:\n  # Container Repository\n    #containerRegistry: # string. Container registry. \n    #repository: # string. Optional. Use when command != login && command != logout && command != start && command != stop. Container repository. \n  # Commands\n    command: 'buildAndPush' # 'buildAndPush' | 'build' | 'push' | 'login' | 'logout' | 'start' | 'stop'. Required. Command. Default: buildAndPush.\n    Dockerfile: '**/Dockerfile' # string. Required when command = build || command = buildAndPush. Dockerfile. Default: **/Dockerfile.\n    #buildContext: '**' # string. Optional. Use when command = build || command = buildAndPush. Build context. Default: **.\n    #tags: '$(Build.BuildId)' # string. Optional. Use when command = build || command = push || command = buildAndPush. Tags. Default: $(Build.BuildId).\n    #arguments: # string. Optional. Use when command != login && command != logout && command != buildAndPush. Arguments. \n    #addPipelineData: true # boolean. Add Pipeline metadata to image(s). Default: true.\n    #container: # string. Optional. Use when command = start || command = stop. Container.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Version Environment Variable Configuration\nDESCRIPTION: This snippet describes the `versionEnvVar` parameter that is required when `versioningScheme` is set to `byEnvVar` and `command` is `pack`. It specifies the name of the environment variable that contains the version number to use.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Required when `versioningScheme = byEnvVar && command = pack`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Package Helm Chart with Command `package` - YAML\nDESCRIPTION: Showcases the usage of the Helm `package` command in a YAML pipeline to package a Helm chart. The destination directory for the packaged chart is specified, and no external dependencies are needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm package\n  inputs:\n    command: package\n    chartPath: Application/charts/sampleapp\n    destination: $(Build.ArtifactStagingDirectory)\n```\n\n----------------------------------------\n\nTITLE: Download Maven Package from Project-Scoped Feed with YAML\nDESCRIPTION: This example YAML configuration shows how to download a Maven package from a project-scoped feed using the DownloadPackage@1 task. It focuses on downloading only POM files, indicated by the files parameter. The snippet requires specifying the project and feed ID, package definition, and version, and setting the download path for where the files will be stored.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-package-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Download an artifact with name 'com.test:testpackage' to $(System.ArtifactsDirectory)\n- task: DownloadPackage@1\n  inputs:\n    packageType: 'maven'\n    feed: '132f5c2c-2aa0-475a-8b47-02c79617954b/c85e5de9-7b12-4cfd-9293-1b33cdff540e' # <projectId>/<feedId>\n    definition: 'com.test:testpackage' \n    version: '1.0.0-snapshot' # Should be normalized version\n    files: '*.pom'\n    downloadPath: '$(System.ArtifactsDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Jobs in Azure Pipelines 2020\nDESCRIPTION: YAML schema for defining deployment jobs in Azure Pipelines 2020. This version lacks both the uses and templateContext properties available in later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment: string # Required as first property. Name of the deployment job, A-Z, a-z, 0-9, and underscore. The word deploy is a keyword and is unsupported as the deployment name.\n  displayName: string # Human-readable name for the deployment.\n  dependsOn: string | [ string ] # Any jobs which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this deployment.\n  continueOnError: string # Continue running even on failure?\n  timeoutInMinutes: string # Time to wait for this job to complete before the server kills it.\n  cancelTimeoutInMinutes: string # Time to wait for the job to cancel before forcibly terminating it.\n  variables: variables | [ variable ] # Deployment-specific variables.\n  pool: string | pool # Pool where this job will run.\n  environment: string | environment # Target environment name and optionally a resource name to record the deployment history; format: environment-name.resource-name.\n  strategy: strategy # Execution strategy for this deployment.\n  workspace: # Workspace options on the agent.\n    clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n  container: string | container # Container resource name.\n  services: # Container resources to run as a service container.\n    string: string # Name/value pairs\n```\n\n----------------------------------------\n\nTITLE: Executing PowerShell Script with Pipeline Secret\nDESCRIPTION: Demonstrates how to execute a PowerShell script with a pipeline secret as an argument. Warns about potential secret exposure in error messages due to PowerShell's error message truncation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n./script.ps1 --arg1 value1 --arg2 <some_secret_which_will_be_masked_here>\n```\n\n----------------------------------------\n\nTITLE: Configuring Bash Task v3 in Azure Pipelines (2020.1 and earlier)\nDESCRIPTION: YAML configuration for Bash@3 task showing all available parameters for Azure Pipelines 2020.1 and earlier versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/bash-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Bash v3\n# Run a Bash script on macOS, Linux, or Windows.\n- task: Bash@3\n  inputs:\n    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.\n    filePath: # string. Required when targetType = filePath. Script Path. \n    #arguments: # string. Optional. Use when targetType = filePath. Arguments. \n    #script: # string. Required when targetType = inline. Script. \n  # Advanced\n    #workingDirectory: # string. Working Directory. \n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #noProfile: true # boolean. Don't load the profile startup/initialization files. Default: true.\n    #noRc: true # boolean. Don't read the `~/.bashrc' initialization file. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Running a Specific Service with Docker Compose in Azure DevOps\nDESCRIPTION: YAML configuration for running a specific Docker container service using the DockerCompose@0 task. It targets only the 'myhealth.web' service from the compose file and exposes it on port 80.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Run a specific service\n  inputs:\n    action: Run a specific service\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    serviceName: myhealth.web\n    ports: 80:80\n    detached: true\n```\n\n----------------------------------------\n\nTITLE: Example of DockerInstaller@0 Task Usage\nDESCRIPTION: This YAML example shows how to use the DockerInstaller@0 task in a pipeline. It sets a display name for the task and specifies both the Docker version and release type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-installer-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DockerInstaller@0\n  displayName: Docker Installer\n  inputs:\n    dockerVersion: 17.09.0-ce\n    releaseType: stable\n```\n\n----------------------------------------\n\nTITLE: Configuring CargoAuthenticate task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the CargoAuthenticate@0 task in an Azure Pipelines configuration. It specifies the required 'configFile' input and an optional 'cargoServiceConnections' input for external registry credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cargo-authenticate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Cargo authenticate (for task runners) v0\n# Authentication task for the cargo client used for installing Cargo crates distribution.\n- task: CargoAuthenticate@0\n  inputs:\n    configFile: # string. Required. config.toml file to authenticate. \n    #cargoServiceConnections: # string. Credentials for registries outside this organization/collection.\n```\n\n----------------------------------------\n\nTITLE: Container App Configuration Parameters\nDESCRIPTION: Defines Container App deployment parameters including app name, resource group, environment settings, and runtime configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncontainerAppName:\n  type: string\n  helpText: The name of the Azure Container App that will be created or updated.\n\nresourceGroup:\n  type: string\n  helpText: The existing resource group that the Azure Container App will be created in.\n\ncontainerAppEnvironment:\n  type: string\n  helpText: The name of the Azure Container App environment to use with the application.\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Signing Task for Azure Pipelines 2020\nDESCRIPTION: YAML configuration for Android Signing v3 task in Azure Pipelines version 2020, showing the supported options for that specific version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/android-signing-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Android Signing v3\n# Sign and align Android APK files.\n- task: AndroidSigning@3\n  inputs:\n    apkFiles: '**/*.apk' # string. Alias: files. Required. APK files. Default: **/*.apk.\n  # Signing Options\n    #apksign: true # boolean. Sign the APK. Default: true.\n    apksignerKeystoreFile: # string. Alias: keystoreFile. Required when apksign = true. Keystore file. \n    #apksignerKeystorePassword: # string. Alias: keystorePass. Optional. Use when apksign = true. Keystore password. \n    #apksignerKeystoreAlias: # string. Alias: keystoreAlias. Optional. Use when apksign = true. Alias. \n    #apksignerKeyPassword: # string. Alias: keyPass. Optional. Use when apksign = true. Key password. \n    #apksignerArguments: '--verbose' # string. Optional. Use when apksign = true. apksigner arguments. Default: --verbose.\n    #apksignerFile: # string. Alias: apksignerLocation. Optional. Use when apksign = true. apksigner location. \n  # Zipalign Options\n    #zipalign: true # boolean. Zipalign. Default: true.\n    #zipalignFile: # string. Alias: zipalignLocation. Optional. Use when zipalign = true. Zipalign location.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure VM Scale Set Deployment in YAML\nDESCRIPTION: This YAML snippet shows the syntax for using the AzureVmssDeployment@0 task to deploy or update a Virtual Machine scale set image. It includes all available input parameters and their descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure VM scale set deployment v0\n# Deploy a virtual machine scale set image.\n- task: AzureVmssDeployment@0\n  inputs:\n  # Azure Details\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    action: 'Update image' # 'Update image' | 'Configure application startup'. Required. Action. Default: Update image.\n    vmssName: # string. Required. Virtual Machine scale set name. \n    vmssOsType: # 'Windows' | 'Linux'. Required. OS type. \n  # Image Details\n    #imageUrl: # string. Required when action = Update image || action = UpdateImage. Image URL. \n  # Configure start-up\n    #customScriptsDirectory: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Custom script directory. \n    #customScript: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Command. \n    #customScriptArguments: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Arguments. \n    #customScriptsStorageAccount: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Azure storage account where custom scripts will be uploaded. \n  # Advanced\n    #skipArchivingCustomScripts: false # boolean. Skip Archiving custom scripts. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Enabling Web Deploy for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `UseWebDeploy` parameter, a boolean value that, when set to true, enables deployment using Web Deploy for Azure Web App deployments, which is only applicable for Windows agents. On other platforms, Kudu REST APIs are used for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_16\n\nLANGUAGE: none\nCODE:\n```\n**`UseWebDeploy`** - **Publish using Web Deploy**<br>\n`boolean`. Optional. Use when `WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\"`. Default value: `false`.\n```\n\n----------------------------------------\n\nTITLE: Generated settings.xml with External Repository Authentication\nDESCRIPTION: XML content showing how the settings.xml file looks after the Maven Authenticate task adds authentication servers for external Maven repositories using service connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<servers>\n  <server>\n    <id>central</id>\n    <username>centralUsername</username>\n    <password>****</password>\n  </server>\n  <server>\n    <id>MavenOrg</id>\n    <username>mavenOrgUsername</username>\n    <password>****</password>\n  </server>\n</servers>\n```\n\n----------------------------------------\n\nTITLE: Logging Out from Docker Registry in YAML\nDESCRIPTION: This snippet demonstrates how to log out from a container registry using a Docker registry service connection in a YAML pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n- task: Docker@2\n  displayName: Logout of ACR\n  inputs:\n    command: login\n    containerRegistry: dockerRegistryServiceConnection1\n```\n\n----------------------------------------\n\nTITLE: Defining Inline Script for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `InlineScript` parameter, used to provide an inline script for customizing the deployment. It is required when `ScriptType` is set to `Inline Script` and `WebAppKind` is not empty. The default value is a comment indicating where deployment commands can be placed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_9\n\nLANGUAGE: none\nCODE:\n```\n**`InlineScript`** - **Inline Script**<br>\n`string`. Required when `ScriptType == Inline Script && WebAppKind != \"\"`. Default value: `:: You can provide your deployment commands here. One command per line.`.\n```\n\n----------------------------------------\n\nTITLE: Using KubeloginInstaller Task in YAML Pipeline\nDESCRIPTION: YAML syntax for the KubeloginInstaller@0 task showing all available inputs. This task installs the kubelogin tool with configurable version and GitHub connection parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubelogin-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Kubelogin tool installer v0\n# Helps to install kubelogin.\n- task: KubeloginInstaller@0\n  inputs:\n    #kubeloginVersion: 'latest' # string. kubelogin version. Default: latest.\n    #gitHubConnection: # string. GitHub Connection.\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Options in Azure DevOps Pipelines\nDESCRIPTION: This example shows how to configure a container with startup options in Azure DevOps pipelines. It uses the ubuntu:18.04 image and applies custom hostname and IP address settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-container.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncontainer:\n  image: ubuntu:18.04\n  options: --hostname container-test --ip 192.168.0.1\n\nsteps:\n- script: echo hello\n```\n\n----------------------------------------\n\nTITLE: Configuring TwineAuthenticate Task in YAML\nDESCRIPTION: YAML configuration for the TwineAuthenticate@1 task in Azure Pipelines. This snippet shows the basic structure and available input parameters for authenticating with Azure Artifacts feeds or external Python package repositories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/twine-authenticate-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Python twine upload authenticate v1\n# Authenticate for uploading Python distributions using twine. Add '-r FeedName/EndpointName --config-file $(PYPIRC_PATH)' to your twine upload command. For feeds present in this organization, use the feed name as the repository (-r). Otherwise, use the endpoint name defined in the service connection.\n- task: TwineAuthenticate@1\n  inputs:\n  # Feeds and Authentication\n    #artifactFeed: # string. My feed name (select below). \n    #pythonUploadServiceConnection: # string. Feed from external organizations.\n```\n\n----------------------------------------\n\nTITLE: Defining Container Resources in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to define container resources in an Azure DevOps pipeline. It includes examples of Linux and Windows containers, as well as a service container with port mappings and volume mounts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers-container.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  containers:\n  - container: linux\n    image: ubuntu:16.04\n  - container: windows\n    image: myprivate.azurecr.io/windowsservercore:1803\n    endpoint: my_acr_connection\n  - container: my_service\n    image: my_service:tag\n    ports:\n    - 8080:80 # bind container port 80 to 8080 on the host machine\n    - 6379 # bind container port 6379 to a random available port on the host machine\n    volumes:\n    - /src/dir:/dst/dir # mount /src/dir on the host into /dst/dir in the container\n```\n\n----------------------------------------\n\nTITLE: Azure PowerShell Task Configuration (2020.1-2022)\nDESCRIPTION: YAML configuration for Azure PowerShell task version 4 without script signature validation. Supports running PowerShell scripts in Azure context with specified version and configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v4.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure PowerShell v4\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@4\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n    #RestrictContextToCurrentTask: false # boolean. Restrict scope of context to current task. Default: false.\n    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. \n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Configuring Trigger Exclusions in Azure DevOps YAML Pipelines\nDESCRIPTION: Uses the object syntax to trigger builds on all branches except the main branch. The wildcard (*) character includes all branches, while the exclusion list prevents builds from running on specified branches.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/trigger.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Build every branch except for main\ntrigger:\n  branches:\n    include:\n    - '*' # Must enclose in '' since * is a reserved YAML character\n    exclude:\n    - main\n```\n\n----------------------------------------\n\nTITLE: Creating a GitHub Release with Automatic Tag Detection\nDESCRIPTION: YAML configuration that creates a GitHub release when the commit has a Git tag. The release uses the same tag version as the associated Git tag and uploads executable files as assets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GithubRelease@1 \n  displayName: 'Create GitHub Release'      \n  inputs:\n    gitHubConnection: zenithworks\n    repositoryName: zenithworks/javaAppWithMaven           \n    assets: $(Build.ArtifactStagingDirectory)/*.exe\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Cluster and Namespace Selection\nDESCRIPTION: Configures Kubernetes cluster selection, namespace, and authentication options for pipeline tasks\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetesCluster: MyAKSCluster\nnamespace: default\nuseClusterAdmin: false\n```\n\n----------------------------------------\n\nTITLE: Defining Output Variables for Azure Pipelines (>=2020.1)\nDESCRIPTION: This snippet outlines the definition of the 'BuildNumber' output variable for Azure Pipelines version 2020.1 and later. It details how the variable can be utilized in downstream tasks and emphasizes backward compatibility with 'BuildId'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n:::moniker range=\\\">=azure-pipelines-2020.1\\\"\n\nThis task defines the following [output variables](/azure/devops/pipelines/process/variables#use-output-variables-from-tasks), which you can consume in downstream steps, jobs, and stages.\n\n<!-- :::item name=\\\"BuildNumber\\\"::: -->\n**`BuildNumber`**<br><!-- :::editable-content name=\\\"Value\\\"::: -->\nStores the build artifact source's build number.\n\nPlease note that this input returns **BuildId** due to backward compatibility. For more information, see [Variables](/azure/devops/pipelines/build/variables#build-variables-devops-services).\n<!-- :::editable-content-end::: -->\n<!-- :::item-end::: -->\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Variable definition for SSL validation in app service\nDESCRIPTION: Defines variables to skip SSL validation in the app service configuration settings.  This is used when deploying to a slot configured to auto-swap.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_35\n\nLANGUAGE: text\nCODE:\n```\n\"`SCM_SKIP_SSL_VALIDATION` or `SCM_SKIP_ASE_SSL_VALIDATION` to `1`\"\n```\n\n----------------------------------------\n\nTITLE: Defining Package Parameter\nDESCRIPTION: Defines the `package` input parameter, which indicates the file path to the package or folder containing App Service content. It supports variables and wildcards.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"package\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`package`** - **Package or folder**<br>\n`string`. Required. Default value: `$(System.DefaultWorkingDirectory)/**/*.zip`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe file path to the package or folder that contains App Service content generated by MSBuild, a compressed zip file, or a war file. Variables ( [Build](/azure/devops/pipelines/build/variables) | [Release](/azure/devops/pipelines/release/variables#default-variables)) and wildcards are supported. For example, `$(System.DefaultWorkingDirectory)/**/*.zip` or `$(System.DefaultWorkingDirectory)/**/*.war`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Gulp Task Definition in YAML\nDESCRIPTION: Defines the structure and inputs for the gulp@0 task in Azure Pipelines. It shows how to specify the gulp file path, target tasks, arguments, working directory, and other advanced options. It also demonstrates JUnit test results publishing and code coverage configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gulp-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# gulp v0\n# Run the gulp Node.js streaming task-based build system.\n- task: gulp@0\n  inputs:\n    gulpFile: 'gulpfile.js' # string. Required. gulp File Path. Default: gulpfile.js.\n    #targets: # string. gulp Task(s). \n    #arguments: # string. Arguments. \n  # Advanced\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    gulpjs: 'node_modules/gulp/bin/gulp.js' # string. Required. gulp.js location. Default: node_modules/gulp/bin/gulp.js.\n  # JUnit Test Results\n    #publishJUnitResults: false # boolean. Publish to Azure Pipelines. Default: false.\n    #testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test Results Files. Default: **/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test Run Title. \n  # Code Coverage\n    #enableCodeCoverage: false # boolean. Enable code Coverage. Default: false.\n    #testFramework: 'Mocha' # 'Mocha' | 'Jasmine'. Optional. Use when enableCodeCoverage = true. Test Framework. Default: Mocha.\n    #srcFiles: # string. Optional. Use when enableCodeCoverage = true. Source Files. \n    #testFiles: 'test/*.js' # string. Required when enableCodeCoverage = true. Test Script Files. Default: test/*.js.\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Stages in Azure Pipelines 2022-2022.2\nDESCRIPTION: YAML schema for defining stages in Azure Pipelines versions 2022-2022.2. This version doesn't include the trigger and isSkippable properties available in the latest version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: string # Required as first property. ID of the stage.\n  displayName: string # Human-readable name for the stage.\n  pool: string | pool # Pool where jobs in this stage will run unless otherwise specified.\n  dependsOn: string | [ string ] # Any stages which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this stage.\n  variables: variables | [ variable ] # Stage-specific variables.\n  jobs: [ job | deployment | template ] # Jobs which make up the stage.\n  lockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n  templateContext: # Stage related information passed from a pipeline when extending a template.\n```\n\n----------------------------------------\n\nTITLE: Build Steps Template Implementation\nDESCRIPTION: Example template file containing common build steps for a Node.js project.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-template.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# File: steps/build.yml\n\nsteps:\n- script: npm install\n- script: npm test\n```\n\n----------------------------------------\n\nTITLE: Azure Function on Kubernetes Task Configuration\nDESCRIPTION: YAML configuration for deploying Azure Functions to Kubernetes clusters. Defines required service connections, namespace settings, and deployment parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-on-kubernetes-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Function on Kubernetes v0\n# Deploy Azure function to Kubernetes cluster.\n- task: AzureFunctionOnKubernetes@0\n  inputs:\n  # Service Connections\n    dockerRegistryServiceConnection: # string. Required. Docker registry service connection. \n    kubernetesServiceConnection: # string. Required. Kubernetes service connection. \n  # Commands\n    #namespace: # string. Kubernetes namespace. \n    #secretName: # string. Secret Name. \n    #dockerHubNamespace: # string. Docker Hub namespace. \n    appName: # string. Required. Application Name. \n    #functionRootDirectory: # string. Function root directory. \n    #waitForStability: true # boolean. Wait for stability. Default: true.\n    #arguments: # string. Arguments.\n```\n\n----------------------------------------\n\nTITLE: Destination Type Configuration\nDESCRIPTION: Defines the destination type parameter with allowed values of AzureBlob or AzureVMs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nDestination:\n  type: string\n  required: true\n  allowed:\n    - AzureBlob\n    - AzureVMs\n```\n\n----------------------------------------\n\nTITLE: Working Directory Input Definition\nDESCRIPTION: Defines working directory parameter for script execution, defaulting to repo root or artifacts directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nworkingDirectory:\n  type: string\n  alias: cwd\n  helpText: Current working directory where the script is run. Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory).\n```\n\n----------------------------------------\n\nTITLE: Publish Step Syntax for Azure DevOps Pipelines 2020.1 and Earlier\nDESCRIPTION: This YAML snippet shows the complete syntax for the 'publish' step in Azure DevOps Pipelines 2020.1 and earlier versions. It includes available properties but lacks the retryCountOnTaskFailure option available in newer versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-publish.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- publish: string # Required as first property. The publish step is a shortcut for the PublishPipelineArtifact@1 task. The task publishes (uploads) a file or folder as a pipeline artifact that other jobs and pipelines can consume.\n  artifact: string # Artifact name.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables Input for Azure Pipelines\nDESCRIPTION: This snippet introduces the `envVars` input parameter, which specifies environment variables for the Docker container being run. This optional string parameter is to be used when the action is 'Run an image', with each variable formatted as 'name=value'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"envVars\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`envVars`** - **Environment Variables**<br>\n`string`. Optional. Use when `action = Run an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies environment variables for the Docker container. List each `name=value` pair on a new line.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining ConnectionType Input for Azure Web App Deployment\nDESCRIPTION: This snippet defines the `ConnectionType` input, which specifies the type of service connection to use for deploying the Web App. It is a required string with allowed values of `AzureRM` (Azure Resource Manager) or `PublishProfile` (Publish Profile), defaulting to `AzureRM`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`ConnectionType`** - **Connection type**<br>\n`string`. Required. Allowed values: `AzureRM` (Azure Resource Manager), `PublishProfile` (Publish Profile). Default value: `AzureRM`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the service connection type to use to deploy the Web App.\n\nSpecify `Publish Profile` for using Visual Studio created [Publish profiles](https://aka.ms/vsPublishProfile).\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Packages Path Configuration\nDESCRIPTION: This snippet defines the `packagesToPack` parameter used when the command is `pack`. It specifies the file paths (csproj or nuspec) that the NuGet task will use to create packages, allowing for multiple patterns separated by semicolons and negative patterns using `!`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n\"**`packagesToPack`** - **Path to csproj or nuspec file(s) to pack**<br>\n[Input alias](index.md#what-are-task-input-aliases): `searchPatternPack`. `string`. Required when `command = pack`. Default value: `**/*.csproj`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Workspace Clean Options in Azure Pipelines YAML\nDESCRIPTION: Defines the workspace cleaning configuration options for Azure DevOps pipelines. The clean property specifies which parts of the workspace should be cleared before fetching, with options for outputs, resources, or all.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/workspace.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nworkspace:\n  clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n```\n\n----------------------------------------\n\nTITLE: Azure Container Registry Configuration\nDESCRIPTION: Defines ACR-related parameters including registry name, authentication credentials, and image configurations for container deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nacrName:\n  type: string\n  helpText: The name of the Azure Container Registry that the runnable application image will be pushed to.\n\nacrUsername:\n  type: string\n  helpText: The username used to authenticate push requests to the provided Azure Container Registry.\n\nacrPassword:\n  type: string\n  helpText: The password used to authenticate push requests to the provided Azure Container Registry.\n```\n\n----------------------------------------\n\nTITLE: Trusting SSL Certificates\nDESCRIPTION: Allows the job to trust the FTP server's SSL certificate when using FTPS, even if it is self-signed or unverifiable. This option is essential for connecting to servers with restrictive certificate validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"trustSSL\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`trustSSL`** - **Trust server certificate**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nTrusts the FTP server's SSL certificate with `ftps://`, even if it is self-signed or cannot be validated by a certificate authority (CA).\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows machine file copy task in YAML\nDESCRIPTION: YAML syntax for the WindowsMachineFileCopy@2 task. Specifies source path, target machines, credentials, and destination folder for copying files to remote Windows machines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/windows-machine-file-copy-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Windows machine file copy v2\n# Copy files to remote Windows machines.\n- task: WindowsMachineFileCopy@2\n  inputs:\n    SourcePath: # string. Required. Source. \n    MachineNames: # string. Required. Machines. \n    AdminUserName: # string. Required. Admin Login. \n    AdminPassword: # string. Required. Password. \n    TargetPath: # string. Required. Destination Folder. \n  # Advanced Options\n    #CleanTargetBeforeCopy: false # boolean. Clean Target. Default: false.\n    #CopyFilesInParallel: true # boolean. Copy Files in Parallel. Default: true.\n    #AdditionalArguments: # string. Additional Arguments.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Connection Type for File Copy Task\nDESCRIPTION: Defines the azureConnectionType input to select between Azure Classic and Azure Resource Manager connection types.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n\"azureConnectionType\": - **Azure Connection Type**\n[Input alias](index.md#what-are-task-input-aliases): `ConnectedServiceNameSelector`. `string`. Allowed values: `ConnectedServiceName` (Azure Classic), `ConnectedServiceNameARM` (Azure Resource Manager). Default value: `ConnectedServiceNameARM`.\n```\n\n----------------------------------------\n\nTITLE: Xcode Package iOS v0 task YAML definition\nDESCRIPTION: Defines the YAML syntax for the XcodePackageiOS@0 task, including inputs for app name, IPA name, provisioning profile, SDK, and paths for the .app and .ipa files. This task is used to generate an .ipa file from Xcode build output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-package-ios-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Xcode Package iOS v0\n# Generate an .ipa file from Xcode build output using xcrun (Xcode 7 or below).\n- task: XcodePackageiOS@0\n  inputs:\n    appName: 'name.app' # string. Required. Name of .app. Default: name.app.\n    ipaName: 'name.ipa' # string. Required. Name of .ipa. Default: name.ipa.\n    provisioningProfile: # string. Required. Provisioning Profile Name. \n    sdk: 'iphoneos' # string. Required. SDK. Default: iphoneos.\n  # Advanced\n    appPath: '$(SDK)/$(Configuration)/build.sym/$(Configuration)-$(SDK)' # string. Required. Path to .app. Default: $(SDK)/$(Configuration)/build.sym/$(Configuration)-$(SDK).\n    ipaPath: '$(SDK)/$(Configuration)/build.sym/$(Configuration)-$(SDK)/output' # string. Required. Path to place .ipa. Default: $(SDK)/$(Configuration)/build.sym/$(Configuration)-$(SDK)/output.\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing includeExcludeStringFilters with Include/Exclude Properties in YAML\nDESCRIPTION: Implementation using an object with separate include and exclude properties. This approach provides more control by allowing both inclusion and exclusion patterns to be specified.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-string-filters.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nincludeExcludeStringFilters:\n  include: [ string ]\n  exclude: [ string ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription for Azure Spring Apps Deployment\nDESCRIPTION: Specifies the Azure Resource Manager subscription for the deployment. This is a required string input that can use an alias.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: \"<Azure subscription>\"\n# Alias: ConnectedServiceName\n```\n\n----------------------------------------\n\nTITLE: Azure VMSS Deployment Task YAML Configuration\nDESCRIPTION: Main YAML configuration for Azure VM scale set deployment task showing all available inputs and settings for deploying and configuring VMSS images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure VM scale set deployment v1\n# Deploy a virtual machine scale set image.\n- task: AzureVmssDeployment@1\n  inputs:\n  # Azure Details\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    action: 'Update image' # 'Update image' | 'Configure application startup'. Required. Action. Default: Update image.\n    vmssName: # string. Required. Virtual Machine scale set name. \n    vmssOsType: # 'Windows' | 'Linux'. Required. OS type. \n  # Image Details\n    #imageUrl: # string. Required when action = Update image || action = UpdateImage. Image URL. \n  # Configure start-up\n    #customScriptsDirectory: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Custom script directory. \n    #customScript: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Command. \n    #customScriptArguments: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Arguments. \n    #customScriptsStorageAccount: # string. Optional. Use when action = Configure application startup || action = Update image || action = UpdateImage. Azure storage account where custom scripts will be uploaded. \n  # Advanced\n    #skipArchivingCustomScripts: false # boolean. Skip Archiving custom scripts. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Values in Azure DevOps Pipelines YAML\nDESCRIPTION: Shows the YAML syntax for representing boolean values in Azure DevOps pipelines. Boolean values can be expressed using various string formats including true/false, y/n, yes/no, and on/off.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/boolean.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nboolean: string # true | y | yes | on | false | n | no | off.\n```\n\n----------------------------------------\n\nTITLE: Defining job resources with 'uses' in Azure Pipelines YAML\nDESCRIPTION: YAML snippet showing the syntax for specifying additional repositories and pools required by a job using the 'uses' property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-uses.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nuses:\n  repositories: [ string ] # Repository references.\n  pools: [ string ] # Pool references.\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Configuration\nDESCRIPTION: Specifies the Azure subscription and resource group for Kubernetes cluster and container registry interactions\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: MyAzureSubscription\nazureResourceGroup: MyResourceGroup\n```\n\n----------------------------------------\n\nTITLE: Configuring JDK Version for Maven Task\nDESCRIPTION: This property allows specifying the JDK version to be used by the Maven task. If running on a self-hosted agent, ensure the corresponding `JAVA_HOME_{version}_{arch}` variable is set to locate the JDK. It attempts to discover the path to the selected JDK version and sets `JAVA_HOME` accordingly.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n\n**`jdkVersionOption`** - **JDK version**<br>\n[Input alias](index.md#what-are-task-input-aliases): `jdkVersion`. `string`. Optional. Use when `javaHomeSelection = JDKVersion`. Allowed values: `default`, `1.17` (JDK 17), `1.11` (JDK 11), `1.10` (JDK 10 (out of support)), `1.9` (JDK 9 (out of support)), `1.8` (JDK 8), `1.7` (JDK 7), `1.6` (JDK 6 (out of support)). Default value: `default`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nAttempts to discover the path to the selected JDK version and sets `JAVA_HOME` accordingly.  \n*Note:* If running on an agent that is not hosted by Microsoft, and the requested Java version is not the one indicated by the `JAVA_HOME` variable set on the agent machine, the task will rely on the variable `JAVA_HOME_{version}_{arch}` (for example: `JAVA_HOME_8_X64`) to locate the necessary JDK. Ensure this variable is set on self-hosted agents for any version and architecture of the JDK that may be requested by this parameter and/or by `jdkArchitecture`.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Variable definition for SSL error handling\nDESCRIPTION: Defines a variable to ignore SSL errors during deployment.  This is used when deploying to a slot configured to auto-swap and SSL validation needs to be skipped.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_34\n\nLANGUAGE: text\nCODE:\n```\n\"VSTS_ARM_REST_IGNORE_SSL_ERRORS` with value `true`\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating Maven Feeds Inside Organization\nDESCRIPTION: YAML task configuration for authenticating with multiple Azure Artifacts feeds within the same organization. Specifies feed names to be added to settings.xml.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: MavenAuthenticate@0\n  displayName: 'Maven Authenticate'\n  inputs:\n    artifactsFeeds: MyFeedInOrg1,MyFeedInOrg2\n```\n\n----------------------------------------\n\nTITLE: Specifying Gradle Tasks to Execute\nDESCRIPTION: Configuration option to define which Gradle tasks should be executed. Multiple task names can be separated by spaces and are typically identified using 'gradlew tasks' command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntasks: \"build test\"\n```\n\n----------------------------------------\n\nTITLE: Job Definition Schema for Azure Pipelines 2020\nDESCRIPTION: YAML schema for defining a job in Azure Pipelines 2020. Similar to 2020.1 version but without the uses property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: string # Required as first property. ID of the job.\n  displayName: string # Human-readable name for the job.\n  dependsOn: string | [ string ] # Any jobs which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this job.\n  continueOnError: string # Continue running even on failure?\n  timeoutInMinutes: string # Time to wait for this job to complete before the server kills it.\n  cancelTimeoutInMinutes: string # Time to wait for the job to cancel before forcibly terminating it.\n  variables: variables | [ variable ] # Job-specific variables.\n  strategy: strategy # Execution strategy for this job.\n  pool: string | pool # Pool where this job will run.\n  container: string | container # Container resource name.\n  services: # Container resources to run as a service container.\n    string: string # Name/value pairs\n  workspace: # Workspace options on the agent.\n    clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n```\n\n----------------------------------------\n\nTITLE: Specifying Type of Secret for Kubernetes\nDESCRIPTION: Defines the type of secret to create or update in Kubernetes. Users can choose between dockerRegistry and generic types, with dockerRegistry as the default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"secretType\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`secretType`** - **Type of secret**<br>\n`string`. Required. Allowed values: `dockerRegistry`, `generic`. Default value: `dockerRegistry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nCreates or updates a generic or docker `imagepullsecret`. Specify `dockerRegistry` to create or update the `imagepullsecret` of the selected registry. An `imagePullSecret` is a way to pass a secret that contains a container registry password to the Kubelet, so it can pull a private image on behalf of your Pod.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Running SonarQube or SonarCloud Analysis\nDESCRIPTION: This boolean property enables running SonarQube or SonarCloud analysis after executing goals in the **Goals** field. It requires adding a **Prepare Analysis Configuration** task from the SonarQube or SonarCloud marketplace extensions before the Maven task.  The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_11\n\nLANGUAGE: none\nCODE:\n```\n\n**`sonarQubeRunAnalysis`** - **Run SonarQube or SonarCloud analysis**<br>\n[Input alias](index.md#what-are-task-input-aliases): `sqAnalysisEnabled`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThis option has changed from using version 1 of the **Maven** task to using the [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) and [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) marketplace extensions.  \nEnable this option to run [SonarQube or SonarCloud analysis](http://redirect.sonarsource.com/doc/install-configure-scanner-tfs-ts.html) after executing goals in the **Goals** field. The **install** or **package** goal should run first. Before this Maven task, you must also add a **Prepare Analysis Configuration** task from one of the extensions to the build pipeline.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Enabling SonarQube Analysis\nDESCRIPTION: Configuration option to run SonarQube or SonarCloud analysis after executing Gradle tasks. Requires a Prepare Analysis Configuration task from one of the SonarQube or SonarCloud extensions in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsonarQubeRunAnalysis: true\nsqGradlePluginVersionChoice: \"specify\"\nsonarQubeGradlePluginVersion: \"2.6.1\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Variable for Storage Container URI\nDESCRIPTION: Defines the name of the variable to store the URI of the Azure Blob storage container where files were copied. This is only valid when the destination is an Azure Blob.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\noutputStorageUri: \"variableName\"\n```\n\n----------------------------------------\n\nTITLE: Basic Private Pool Definition in YAML\nDESCRIPTION: Simple syntax for specifying a private pool by name. If the pool name contains spaces, it must be enclosed in single quotes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npool: MyPool\n```\n\n----------------------------------------\n\nTITLE: Defining Namespace for Kubernetes Commands\nDESCRIPTION: Specifies the namespace for executing kubectl commands in Azure Pipelines using the --namespace flag. If not provided, commands will default to the Kubernetes default namespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"namespace\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`namespace`** - **Namespace**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the namespace for the `kubectl` command by using the `–namespace` flag. If the namespace is not provided, the commands will run in the default namespace.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Restore Command in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the 'restore' command of the NuGet task, including options for specifying solution files, feed sources, and restore settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    restoreSolution: '**/*.sln'\n    feedsToUse: 'select'\n    vstsFeed: 'project/feed'\n    includeNuGetOrg: true\n    noCache: false\n    disableParallelProcessing: false\n    restoreDirectory: 'packages/'\n    verbosityRestore: 'Detailed'\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Metadata using YAML in Azure DevOps\nDESCRIPTION: YAML configuration for the PublishPipelineMetadata@0 task. This task publishes pipeline metadata to the Evidence store and requires no input parameters. Supported in all Azure DevOps pipeline versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-pipeline-metadata-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Pipeline Metadata v0\n# Publish Pipeline Metadata to Evidence store.\n- task: PublishPipelineMetadata@0\n  inputs: # none\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Subscription Input for Azure File Copy Task in YAML\nDESCRIPTION: Defines the azureSubscription input parameter for specifying the Azure Resource Manager service connection to use for the file copy operation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v6.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription:\n  type: string\n  required: true\n  alias: ConnectedServiceNameARM\n  helpMarkDown: |\n    Specify the name of an [Azure Resource Manager service connection](/azure/devops/pipelines/library/connect-to-azure) configured for the subscription where the target Azure service, virtual machine, or storage account is located. See [Azure Resource Manager overview](/azure/azure-resource-manager/management/overview) for more details.\n```\n\n----------------------------------------\n\nTITLE: Helm Tool Installer Task Example - Latest Version\nDESCRIPTION: Example showcasing the installation of the latest version of the helm binary on the agent. It defines a HelmInstaller@1 task, setting the displayName and specifying that the latest version of Helm should be installed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-installer-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: HelmInstaller@1\n  displayName: Helm installer\n  inputs: \n    helmVersionToInstall: latest\n```\n\n----------------------------------------\n\nTITLE: Adding Chmod Command to Make Script Executable in Azure Pipelines YAML\nDESCRIPTION: Shows how to add a command line task to make a custom script executable before running the Azure VMSS Deployment task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\n    - task: CmdLine@2\n      inputs:\n        script: 'chmod 777 $(System.DefaultWorkingDirectory)/test.sh'\n```\n\n----------------------------------------\n\nTITLE: Publishing Test Results - Azure Pipelines 2022.1 and Earlier\nDESCRIPTION: YAML configuration for publishing test results in Azure Pipelines version 2022.1 and earlier. Contains core functionality without some of the newer failure handling options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Test Results v2\n# Publish test results to Azure Pipelines.\n- task: PublishTestResults@2\n  inputs:\n    testResultsFormat: 'JUnit' # 'JUnit' | 'NUnit' | 'VSTest' | 'XUnit' | 'CTest'. Alias: testRunner. Required. Test result format. Default: JUnit.\n    testResultsFiles: '**/TEST-*.xml' # string. Required. Test results files. Default: **/TEST-*.xml.\n    #searchFolder: '$(System.DefaultWorkingDirectory)' # string. Search folder. Default: $(System.DefaultWorkingDirectory).\n    #mergeTestResults: false # boolean. Merge test results. Default: false.\n    #failTaskOnFailedTests: false # boolean. Fail if there are test failures. Default: false.\n    #testRunTitle: # string. Test run title. \n  # Advanced\n    #buildPlatform: # string. Alias: platform. Build Platform. \n    #buildConfiguration: # string. Alias: configuration. Build Configuration. \n    #publishRunAttachments: true # boolean. Upload test results files. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Setting npm configuration file\nDESCRIPTION: This YAML configures npm to use a specific .npmrc file located in the agent's temporary directory. It sets an environment variable to instruct npm to use this file for its per-user configuration, ensuring that the authentication details are applied to both project1 and project2.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-authenticate-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n```YAML\n- task: npmAuthenticate@0\n  inputs:\n    workingFile: $(agent.tempdirectory)/.npmrc\n- script: echo ##vso[task.setvariable variable=NPM_CONFIG_USERCONFIG]$(agent.tempdirectory)/.npmrc\n- script: npm ci\n  workingDirectory: project1\n- script: npm ci\n  workingDirectory: project2\n```\n```\n\n----------------------------------------\n\nTITLE: Bypassing Modules in Azure IoT Edge Task\nDESCRIPTION: This snippet allows users to specify certain modules to bypass during the build or push actions. This is useful when some modules are not required to be rebuilt but others need to be processed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n\"bypassModules: string. Optional. Use when action = Push module images.\"\n```\n\n----------------------------------------\n\nTITLE: Detailed Container Configuration (Azure Pipelines 2020)\nDESCRIPTION: Syntax for specifying a container job with detailed configuration options for Azure Pipelines 2020, including image tag, endpoint, environment variables, Docker socket mapping, container options, ports, and volumes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-container.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncontainer:\n  image: string # Required. Container image tag.\n  endpoint: string # ID of the service endpoint connecting to a private container registry.\n  env: # Variables to map into the container's environment.\n    string: string # Name/value pairs\n  mapDockerSocket: boolean # Set this flag to false to force the agent not to setup the /var/run/docker.sock volume on container jobs.\n  options: string # Options to pass into container host.\n  ports: [ string ] # Ports to expose on the container.\n  volumes: [ string ] # Volumes to mount on the container.\n```\n\n----------------------------------------\n\nTITLE: Configuring AzureMonitor@0 Task in YAML\nDESCRIPTION: YAML configuration for the AzureMonitor@0 task to query classic Azure Monitor alerts. It specifies required inputs such as Azure subscription, resource group, resource type, resource name, and alert rules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-monitor-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Query Classic Azure Monitor alerts v0\n# Observe the configured classic Azure Monitor rules for active alerts.\n- task: AzureMonitor@0\n  inputs:\n    connectedServiceNameARM: # string. Required. Azure subscription. \n    ResourceGroupName: # string. Required. Resource group. \n    ResourceType: 'Microsoft.Insights/components' # 'Microsoft.Insights/components' | 'Microsoft.Web/sites' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Compute/virtualMachines'. Required. Resource type. Default: Microsoft.Insights/components.\n    resourceName: # string. Required. Resource name. \n    alertRules: # string. Required. Alert rules.\n```\n\n----------------------------------------\n\nTITLE: Defining VirtualApplication Input for Windows Web Apps\nDESCRIPTION: This snippet defines the `VirtualApplication` input, which is optional and applies to Windows Web Apps (excluding Linux and Container based Web Apps). It specifies the name of the Virtual Application configured in the Azure portal.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`VirtualApplication`** - **Virtual application**<br>\n`string`. Optional. Use when `WebAppKind != webAppLinux && WebAppKind != webAppContainer && WebAppKind != webAppHyperVContainer && WebAppkind != functionAppContainer && WebAppKind != functionApp && webAppKind != functionAppLinux && WebAppKind != \"\"`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the name of the Virtual Application that has been configured in the Azure portal. This option is not required for deployments to the website root. The Virtual Application must have been configured before deployment of the web project.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Required Input Parameters for App Center Test Task\nDESCRIPTION: Core input parameters required for configuring the App Center Test task including app file path and artifacts directory settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-test-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nappFile: string     # Required - Binary application file path\nartifactsDirectory: $(Build.ArtifactStagingDirectory)/AppCenterTest  # Required\nprepareTests: true    # Optional - Default true\n```\n\n----------------------------------------\n\nTITLE: Basic Azure Service Bus Task Syntax\nDESCRIPTION: YAML syntax for the PublishToAzureServiceBus@2 task showing all available configuration options and inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish To Azure Service Bus v2\n# Sends a message to Azure Service Bus using an Azure Resource Manager service connection (no agent is required).\n- task: PublishToAzureServiceBus@2\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceName. Required. Azure Resource Manager service connection. \n    serviceBusQueueName: # string. Required. Azure Service Bus Queue name. \n    serviceBusNamespace: # string. Required. Azure Service Bus Namespace. \n    #messageBody: # string. Message body. \n    #waitForCompletion: false # boolean. Wait for task completion. Default: false.\n    #useDataContractSerializer: true # boolean. Use .NET data contract serializer. Default: true.\n  # Advanced\n    #sessionId: # string. Session Id. \n    #signPayload: false # boolean. Sign the Message. Default: false.\n    #certificateString: # string. Required when signPayload = true. Certificate Variable. \n    #signatureKey: 'signature' # string. Optional. Use when signPayload = true. Signature Property Key. Default: signature.\n```\n\n----------------------------------------\n\nTITLE: Configuring Languages for CodeQL Analysis in YAML\nDESCRIPTION: Example of specifying multiple programming languages for CodeQL analysis using the 'languages' input parameter in a YAML pipeline configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-codeql-init-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AdvancedSecurity-Codeql-Init@1\n  inputs:\n    languages: 'cpp, java, python'\n    # This languages value is valid, the Pipelines editor \n    # doesn't recognize all combinations and only validates\n    # correctly when a single language is specified\n```\n\n----------------------------------------\n\nTITLE: Working Directory Input Definition\nDESCRIPTION: Defines the working directory parameter for script execution. Defaults to repo root (build) or artifacts (release) at $(System.DefaultWorkingDirectory).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nworkingDirectory:\n  type: string\n  alias: cwd\n  description: Current working directory where the script is run\n```\n\n----------------------------------------\n\nTITLE: Creating Generic Secret in Kubernetes\nDESCRIPTION: Creates a generic secret in Kubernetes using literal key-value pairs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Create secret\n  inputs: \n    action: createSecret\n    secretType: generic\n    secretName: some-secret\n    secretArguments: --from-literal=key1=value1\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Configuring Target as String in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to specify a step target by name using a string value. Available options include 'host' for the agent host and any containers defined in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/target.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntarget: string # Environment in which to run this step or task.\n```\n\n----------------------------------------\n\nTITLE: Using Validate Deployment Mode in Azure Resource Manager Templates\nDESCRIPTION: The validate mode allows finding problems with ARM templates before creating actual resources. Note that this mode still creates a resource group even if no resources are deployed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nValidate\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Pipeline Task Requirements for Version 2022 and Earlier\nDESCRIPTION: Markdown table showing task requirements for Azure Pipelines version 2022 and earlier, including pipeline types, execution environments, demands, capabilities, restrictions, and agent version requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.120.0 or greater |\n| Task category | Package |\n```\n\n----------------------------------------\n\nTITLE: Configuring Boolean Parameters in Azure File Copy Task\nDESCRIPTION: Defines boolean parameters for the Azure File Copy task, including options for parallel file copying, cleaning target directories, and certificate validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v6.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nCleanTargetBeforeCopy: false\nskipCACheck: true\n```\n\n----------------------------------------\n\nTITLE: Azure Cloud Service Deployment Task YAML Configuration\nDESCRIPTION: YAML configuration for deploying an Azure Cloud Service using the AzureCloudPowerShellDeployment@1 task. Includes required and optional parameters for configuring the deployment, storage options, and service settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Cloud Service deployment v1\n# Deploy an Azure Cloud Service.\n- task: AzureCloudPowerShellDeployment@1\n  inputs:\n    azureClassicSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription (Classic). \n    #EnableAdvancedStorageOptions: false # boolean. Enable ARM storage support. Default: false.\n    StorageAccount: # string. Required when EnableAdvancedStorageOptions = false. Storage account (Classic). \n    #ARMConnectedServiceName: # string. Required when EnableAdvancedStorageOptions = true. Azure subscription (ARM). \n    #ARMStorageAccount: # string. Required when EnableAdvancedStorageOptions = true. Storage account (ARM). \n    ServiceName: # string. Required. Service name. \n    ServiceLocation: # string. Required. Service location. \n    CsPkg: # string. Required. CsPkg. \n    CsCfg: # string. Required. CsCfg. \n    slotName: 'Production' # string. Alias: Slot. Required. Environment (Slot). Default: Production.\n    #DeploymentLabel: '$(Build.BuildNumber)' # string. Deployment label. Default: $(Build.BuildNumber).\n    #AppendDateTimeToLabel: false # boolean. Append current date and time. Default: false.\n    #AllowUpgrade: true # boolean. Allow upgrade. Default: true.\n    #SimultaneousUpgrade: false # boolean. Optional. Use when AllowUpgrade == true. Simultaneous upgrade. Default: false.\n    #ForceUpgrade: false # boolean. Optional. Use when AllowUpgrade == true. Force upgrade. Default: false.\n    #VerifyRoleInstanceStatus: false # boolean. Verify role instance status. Default: false.\n  # Advanced Options For Creating New Service\n    #DiagnosticStorageAccountKeys: # string. Diagnostic storage account keys. \n    #NewServiceCustomCertificates: # string. Custom certificates to import. \n    #NewServiceAdditionalArguments: # string. Additional arguments. \n    #NewServiceAffinityGroup: # string. Affinity group.\n```\n\n----------------------------------------\n\nTITLE: Defining Read-Only Variables in Azure Pipelines YAML\nDESCRIPTION: Shows how to set variables as read-only to enhance security in Azure Pipelines YAML. This is useful for variables that should not be modified during pipeline execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: myReadOnlyVar\n  value: myValue\n  readonly: true\n```\n\n----------------------------------------\n\nTITLE: Default PowerShell Session Options\nDESCRIPTION: Default configuration parameters for new PowerShell sessions including timeout and buffer settings\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-on-target-machines-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n-SkipCACheck -IdleTimeout 7200000 -OperationTimeout 0 -OutputBufferingMode Block\n```\n\n----------------------------------------\n\nTITLE: Configuring Target as Object in Azure Pipelines YAML (2022+)\nDESCRIPTION: Shows how to configure a step target using an object with properties for container, commands, and settable variables. This implementation is available in Azure Pipelines 2022 and later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/target.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntarget:\n  container: string # Container to target (or 'host' for host machine).\n  commands: any | restricted # Set of allowed logging commands ('any' or 'restricted').\n  settableVariables: none | [ string ] # Restrictions on which variables that can be set.\n```\n\n----------------------------------------\n\nTITLE: Configuring IIS Application Pool Parameters in Azure DevOps YAML\nDESCRIPTION: Optional YAML parameters for configuring an IIS application pool in Azure DevOps pipelines. Includes AppPoolPassword parameter for use with SpecificUser identity type and AppCmdCommands for executing additional IIS commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n#AppPoolPassword: # string. Optional. Use when AppPoolIdentity = SpecificUser && ActionIISApplicationPool = CreateOrUpdateAppPool. Password. \n  # Advanced\n    #AppCmdCommands: # string. Additional appcmd.exe commands.\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App to Existing Resource Group\nDESCRIPTION: This example shows how to deploy a Container App to an existing or new resource group. It creates a new Container App with a default name in the specified resource group, creating the group if it doesn't exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    resourceGroup: 'my-test-rg'\n```\n\n----------------------------------------\n\nTITLE: Defining NuGetAuthenticate@0 Task - YAML (Alternate Syntax)\nDESCRIPTION: An alternate definition for the NuGetAuthenticate@0 task in YAML that retains the same functionality of authenticating with Azure Artifacts. This reflects the same input configurations and requirements as the previous snippet, highlighting backwards compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetAuthenticate@0\n  inputs:\n    #nuGetServiceConnections: # string. Service connection credentials for feeds outside this organization. \n    #forceReinstallCredentialProvider: false # boolean. Reinstall the credential provider even if already installed. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Monitor Alerts in YAML Pipeline\nDESCRIPTION: This YAML snippet demonstrates how to use the AzureMonitorAlerts@0 task to configure alerts for an Azure resource. It specifies required inputs such as Azure subscription, resource group, resource type, resource name, and alert rules. Optional inputs for email notifications are also shown.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-monitor-alerts-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Monitor alerts (Deprecated) v0\n# Configure alerts on available metrics for an Azure resource (Deprecated).\n- task: AzureMonitorAlerts@0\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure Subscription. \n    ResourceGroupName: # string. Required. Resource Group. \n    ResourceType: 'Microsoft.Insights/components' # 'Microsoft.Insights/components' | 'Microsoft.Web/sites' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Compute/virtualMachines'. Required. Resource Type. Default: Microsoft.Insights/components.\n    ResourceName: # string. Required. Resource name. \n    AlertRules: # string. Required. Alert rules. \n  # Notify via email\n    #NotifyServiceOwners: # boolean. Subscription owners, contributors and readers. \n    #NotifyEmails: # string. Additional administrator emails.\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Results File Pattern\nDESCRIPTION: Configuration option to specify the file path pattern for test results. Supports wildcards for matching multiple files, such as all XML files with names starting with 'TEST-'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ntestResultsFiles: \"**/TEST-*.xml\"\n```\n\n----------------------------------------\n\nTITLE: Defining DockerImageTag Input for Containerized Web Apps\nDESCRIPTION: This snippet defines the `DockerImageTag` input, which is optional and used when `WebAppKind` is one of the containerized web app types. It represents the tag applied to the Docker image, providing version information.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`DockerImageTag`** - **Tag**<br>\n`string`. Optional. Use when `WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = webAppHyperVContainer`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nTags are the mechanism that registries use to apply version information to Docker images. Note: The fully qualified image name will be of the format: `{registry or namespace}/{repository}:{tag}`. For example, `myregistry.azurecr.io/nginx:latest`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for App Center Test Task\nDESCRIPTION: Complete YAML configuration schema for AppCenterTest@1 task showing all available input parameters including test preparation, test execution, authentication, and advanced options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-test-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# App Center test v1\n# Test app packages with Visual Studio App Center.\n- task: AppCenterTest@1\n  inputs:\n    appFile: # string. Alias: app. Required. Binary application file path. \n    artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest' # string. Alias: artifactsDir. Required. Artifacts directory. Default: $(Build.ArtifactStagingDirectory)/AppCenterTest.\n  # Prepare Tests\n    #prepareTests: true # boolean. Alias: enablePrepare. Prepare tests. Default: true.\n    frameworkOption: 'appium' # 'appium' | 'espresso' | 'calabash' | 'uitest' | 'xcuitest'. Alias: framework. Required when enablePrepare = true. Test framework. Default: appium.\n    #appiumBuildDirectory: # string. Alias: appiumBuildDir. Required when enablePrepare = true && framework = appium. Build directory. \n    #espressoBuildDirectory: # string. Alias: espressoBuildDir. Optional. Use when enablePrepare = true && framework = espresso. Build directory. \n    #espressoTestApkFile: # string. Alias: espressoTestApkPath. Optional. Use when enablePrepare = true && framework = espresso. Test APK path. \n    #calabashProjectDirectory: # string. Alias: calabashProjectDir. Required when enablePrepare = true && framework = calabash. Project directory. \n    #calabashConfigFile: # string. Optional. Use when enablePrepare = true && framework = calabash. Cucumber config file. \n    #calabashProfile: # string. Optional. Use when enablePrepare = true && framework = calabash. Profile to run. \n    #calabashSkipConfigCheck: false # boolean. Optional. Use when enablePrepare = true && framework = calabash. Skip Configuration Check. Default: false.\n    #uiTestBuildDirectory: # string. Alias: uitestBuildDir. Required when enablePrepare = true && framework = uitest. Build directory. \n    #uitestStorePath: # string. Optional. Use when enablePrepare = true && framework = uitest. Store file. \n    #uiTestStorePassword: # string. Alias: uitestStorePass. Optional. Use when enablePrepare = true && framework = uitest. Store password. \n    #uitestKeyAlias: # string. Optional. Use when enablePrepare = true && framework = uitest. Key alias. \n    #uiTestKeyPassword: # string. Alias: uitestKeyPass. Optional. Use when enablePrepare = true && framework = uitest. Key password. \n    #uiTestToolsDirectory: # string. Alias: uitestToolsDir. Optional. Use when enablePrepare = true && framework = uitest. Test tools directory. \n    #signInfo: # string. Optional. Use when framework = calabash || framework = uitest. Signing information. \n    #xcUITestBuildDirectory: # string. Alias: xcuitestBuildDir. Optional. Use when enablePrepare = true && framework = xcuitest. Build directory. \n    #xcUITestIpaFile: # string. Alias: xcuitestTestIpaPath. Optional. Use when enablePrepare = true && framework = xcuitest. Test IPA path. \n    #prepareOptions: # string. Alias: prepareOpts. Optional. Use when enablePrepare = true. Additional options. \n  # Run Tests\n    #runTests: true # boolean. Alias: enableRun. Run tests. Default: true.\n    credentialsOption: 'serviceEndpoint' # 'serviceEndpoint' | 'inputs'. Alias: credsType. Required when enableRun = true. Authentication method. Default: serviceEndpoint.\n    #serverEndpoint: # string. Required when enableRun = true && credsType = serviceEndpoint. App Center service connection. \n    #username: # string. Required when enableRun = true && credsType = inputs. App Center username. \n    #password: # string. Required when enableRun = true && credsType = inputs. App Center password. \n    appSlug: # string. Required when enableRun = true. App slug. \n    devices: # string. Required when enableRun = true. Devices. \n    #series: 'master' # string. Optional. Use when enableRun = true. Test series. Default: master.\n    #dsymDirectory: # string. Alias: dsymDir. Optional. Use when enableRun = true. dSYM directory. \n    localeOption: 'en_US' # 'da_DK' | 'nl_NL' | 'en_GB' | 'en_US' | 'fr_FR' | 'de_DE' | 'ja_JP' | 'ru_RU' | 'es_MX' | 'es_ES' | 'user'. Alias: locale. Required when enableRun = true. System language. Default: en_US.\n    #userDefinedLocale: # string. Optional. Use when enableRun = true && locale = user. Other locale. \n    #loginOptions: # string. Alias: loginOpts. Optional. Use when enableRun = true && credsType = inputs. Additional options for login. \n    #runOptions: # string. Alias: runOpts. Optional. Use when enableRun = true. Additional options for run. \n    #skipWaitingForResults: false # boolean. Alias: async. Optional. Use when enableRun = true. Do not wait for test result. Default: false.\n  # Advanced\n    #cliFile: # string. Alias: cliLocationOverride. App Center CLI location. \n    #showDebugOutput: false # boolean. Alias: debug. Enable debug output. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining routeTrafficHook Syntax in Azure DevOps YAML\nDESCRIPTION: The YAML syntax for routeTrafficHook definition that specifies how to route traffic in deployment strategies. It contains two main properties: steps to execute and the pool where these steps will run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/route-traffic-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrouteTrafficHook:\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  pool: string | pool # Pool where route traffic steps will run.\n```\n\n----------------------------------------\n\nTITLE: NuGet Custom Command and Arguments Configuration\nDESCRIPTION: This snippet defines the `arguments` parameter when the `command` is set to `custom`. It allows specifying the command and arguments to be passed directly to `NuGet.exe` for execution, and it handles authentication automatically.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_21\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Required when `command = custom`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Enabling Deployment Prerequisites in YAML\nDESCRIPTION: Enables deployment prerequisites for virtual machines in the resource group, such as configuring Deployment Group agents or WinRM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nenableDeploymentPrerequisitesForCreate: true\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines 2020.1 Task Step Definition\nDESCRIPTION: YAML schema for task steps in Azure Pipelines 2020.1 and earlier versions. Defines the basic structure for configuring task execution without retry functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-task.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: string # Required as first property. Name of the task to run.\n  inputs: # Inputs for the task.\n    string: string # Name/value pairs\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Provisioning Profile using YAML Pipeline Syntax\nDESCRIPTION: YAML configuration for the InstallAppleProvisioningProfile@1 task, which installs an Apple provisioning profile required for building on a macOS agent. The task supports retrieving profiles from secure files or source repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-provisioning-profile-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Install Apple provisioning profile v1\n# Install an Apple provisioning profile required to build on a macOS agent machine.\n- task: InstallAppleProvisioningProfile@1\n  inputs:\n    provisioningProfileLocation: 'secureFiles' # 'secureFiles' | 'sourceRepository'. Required. Provisioning profile location. Default: secureFiles.\n    provProfileSecureFile: # string. Required when provisioningProfileLocation == secureFiles. Provisioning profile. \n    #provProfileSourceRepository: # string. Required when provisioningProfileLocation == sourceRepository. Provisioning profile. \n    #removeProfile: true # boolean. Remove profile after build. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Publishing Messages to Azure Service Bus using YAML Pipeline\nDESCRIPTION: YAML configuration for sending a message to Azure Service Bus using a service connection. This task requires no agent and runs on the server. It includes message body configuration and optional wait for completion parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish To Azure Service Bus v0\n# Sends a message to azure service bus using a service connection (no agent required).\n- task: PublishToAzureServiceBus@0\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceName. Required. Azure service bus connection. \n    messageBody: '{\"JobId\": \"$(system.jobId)\", \"PlanId\": \"$(system.planId)\", \"TimelineId\": \"$(system.timelineId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"VstsUrl\": \"$(system.CollectionUri)\",\"AuthToken\": \"$(system.AccessToken)\"}' # string. Required. Message body. Default: {\"JobId\": \"$(system.jobId)\", \"PlanId\": \"$(system.planId)\", \"TimelineId\": \"$(system.timelineId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"VstsUrl\": \"$(system.CollectionUri)\",\"AuthToken\": \"$(system.AccessToken)\"}.\n    #waitForCompletion: false # boolean. Wait for task completion. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Configuring ServiceFabricUpdateManifests Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows the configuration options for the ServiceFabricUpdateManifests@2 task. It includes parameters for specifying the update type, application package path, version settings, and Docker image settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-update-manifests-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Update Service Fabric manifests v2\n# Automatically update portions of application and service manifests in a packaged Azure Service Fabric application.\n- task: ServiceFabricUpdateManifests@2\n  inputs:\n    updateType: 'Manifest versions' # 'Manifest versions' | 'Docker image settings'. Required. Update Type. Default: Manifest versions.\n    applicationPackagePath: # string. Required. Application Package. \n    #versionSuffix: '.$(Build.BuildNumber)' # string. Required when updateType = Manifest versions. Version Value. Default: .$(Build.BuildNumber).\n    #versionBehavior: 'Append' # 'Append' | 'Replace'. Optional. Use when updateType = Manifest versions. Version Behavior. Default: Append.\n    #updateOnlyChanged: false # boolean. Optional. Use when updateType = Manifest versions. Update only if changed. Default: false.\n    #pkgArtifactName: # string. Optional. Use when updateType = Manifest versions && updateOnlyChanged = true. Package Artifact Name. \n    #logAllChanges: true # boolean. Optional. Use when updateType = Manifest versions && updateOnlyChanged = true. Log all changes. Default: true.\n    #compareType: 'LastSuccessful' # 'LastSuccessful' | 'Specific'. Optional. Use when updateType = Manifest versions && updateOnlyChanged = true. Compare against. Default: LastSuccessful.\n    #buildNumber: # string. Optional. Use when updateType = Manifest versions && compareType = Specific. Build Number. \n    #overwriteExistingPkgArtifact: true # boolean. Optional. Use when updateType = Manifest versions && updateOnlyChanged = true. Overwrite Existing Package Artifact. Default: true.\n    #imageNamesPath: # string. Optional. Use when updateType = Docker image settings. Image Names Path. \n    #imageDigestsPath: # string. Required when updateType = Docker image settings. Image Digests Path.\n```\n\n----------------------------------------\n\nTITLE: Installing SSH Key in Azure Pipelines (2020)\nDESCRIPTION: YAML syntax for the InstallSSHKey@0 task for Azure Pipelines version 2020. This configuration includes only the basic options without SSH config additions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Install SSH key v0\n# Install an SSH key prior to a build or deployment.\n- task: InstallSSHKey@0\n  inputs:\n    knownHostsEntry: # string. Alias: hostName. Required. Known Hosts Entry. \n    #sshPublicKey: # string. SSH Public Key. \n    #sshPassphrase: # string. SSH Passphrase. \n    sshKeySecureFile: # string. Required. SSH Key.\n```\n\n----------------------------------------\n\nTITLE: Organization-Scoped Feed Repository Configuration in pom.xml\nDESCRIPTION: XML fragment for pom.xml showing how to configure a reference to an organization-scoped Azure Artifacts feed. Note the URL difference from project-scoped feeds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<repository>\n  <id>MyFeedInOrg1</id>\n  <url>https://pkgs.dev.azure.com/OrganizationName/_packaging/MyOrgScopedFeed1/Maven/v1</url>\n  <releases>\n    <enabled>true</enabled>\n  </releases>\n  <snapshots>\n    <enabled>true</enabled>\n  </snapshots>\n</repository>\n```\n\n----------------------------------------\n\nTITLE: Writing Service Image Digests with Docker Compose in Azure DevOps\nDESCRIPTION: YAML configuration for writing Docker container service image digests using the DockerCompose@0 task. This outputs a compose file with image digests instead of tags for immutable deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Write service image digests\n  inputs:\n    action: Write service image digests\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureContainerRegistry: $(azureContainerRegistry)\n    dockerComposeFile: docker-compose.yml\n    projectName: $(Build.Repository.Name)\n    qualifyImageNames: true\n    imageDigestComposeFile: $(Build.StagingDirectory)/docker-compose.images.yml \n```\n\n----------------------------------------\n\nTITLE: Configuring SonarQubeAnalyze@5 Task in YAML\nDESCRIPTION: This YAML snippet shows how to configure the SonarQubeAnalyze@5 task in an Azure Pipelines workflow. It specifies the task version and allows selection of the JDK version for analysis.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-analyze-v5.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Run Code Analysis v5\n# Run scanner and upload the results to the SonarQube server.\n- task: SonarQubeAnalyze@5\n  inputs:\n    jdkversion: 'JAVA_HOME_11_X64' # 'JAVA_HOME' | 'JAVA_HOME_11_X64' | 'JAVA_HOME_17_X64' | 'JAVA_HOME_21_X64'. Required. JDK version source for analysis. Default: JAVA_HOME_11_X64.\n```\n\n----------------------------------------\n\nTITLE: Configuring Chef Knife Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the Chef Knife v1 task in an Azure Pipelines configuration. It specifies the required inputs for the task, including the Chef subscription and script path.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/chef-knife-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Chef Knife v1\n# Run scripts with Knife commands on your Chef workstation.\n- task: ChefKnife@1\n  inputs:\n    ConnectedServiceName: # string. Required. Chef Subscription. \n    ScriptPath: # string. Required. Script Path. \n    #ScriptArguments: # string. Script Arguments.\n```\n\n----------------------------------------\n\nTITLE: Sample PowerShell Script for Azure DevOps Pipeline\nDESCRIPTION: A PowerShell script that demonstrates accessing and displaying various Azure DevOps pipeline environment variables and directory contents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nWrite-Host \"Hello World from $Env:AGENT_NAME.\"\nWrite-Host \"My ID is $Env:AGENT_ID.\"\nWrite-Host \"AGENT_WORKFOLDER contents:\"\ngci $Env:AGENT_WORKFOLDER\nWrite-Host \"AGENT_BUILDDIRECTORY contents:\"\ngci $Env:AGENT_BUILDDIRECTORY\nWrite-Host \"BUILD_SOURCESDIRECTORY contents:\"\ngci $Env:BUILD_SOURCESDIRECTORY\nWrite-Host \"Over and out.\"\n```\n\n----------------------------------------\n\nTITLE: Azure Destination Type Configuration\nDESCRIPTION: Configures the type of Azure destination - either Blob Storage or Virtual Machines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v4.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nDestination:\n  string. Required.\n  Allowed values: AzureBlob, AzureVMs\n```\n\n----------------------------------------\n\nTITLE: Configuring CocoaPods Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the CocoaPods@0 task in an Azure Pipelines workflow. It includes optional inputs for specifying the working directory, forcing a repo update, and setting the project directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cocoa-pods-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# CocoaPods v0\n# Install CocoaPods dependencies for Swift and Objective-C Cocoa projects.\n- task: CocoaPods@0\n  inputs:\n    #workingDirectory: # string. Alias: cwd. Working directory. \n  # Advanced\n    #forceRepoUpdate: false # boolean. Force repo update. Default: false.\n    #projectDirectory: # string. Project directory.\n```\n\n----------------------------------------\n\nTITLE: XML Transformation Rule Example - Azure DevOps YAML\nDESCRIPTION: This example demonstrates how to specify an XML transformation rule to run on all configuration files named with the pattern `.Production.config` in an Azure DevOps YAML pipeline. The `-transform` parameter specifies the target files to transform, and the `-xml` parameter specifies the base XML configuration files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\"-transform **\\*.Production.config  -xml **\\*.config\"\n```\n\n----------------------------------------\n\nTITLE: Defining NuGetAuthenticate@0 Task - YAML\nDESCRIPTION: This snippet demonstrates how to define the deprecated NuGetAuthenticate@0 task in YAML for Azure Pipelines. It includes optional inputs for NuGet service connections and credential provider settings, requiring specific versions of NuGet, dotnet, or MSBuild.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetAuthenticate@0\n  inputs:\n    #nuGetServiceConnections: # string. Service connection credentials for feeds outside this organization. \n    #forceReinstallCredentialProvider: false # boolean. Reinstall the credential provider even if already installed. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Providing Secret Name for Kubernetes Operations\nDESCRIPTION: Defines the name of the secret that can be referenced in Kubernetes YAML configuration files, which helps in managing access to sensitive data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"secretName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`secretName`** - **Secret name**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nName of the secret. You can use this secret name in the Kubernetes YAML configuration file.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Selection in Azure Pipelines YAML\nDESCRIPTION: Specifies how tests are run, either using test assemblies or a Test Plan.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntestSelection: 'testAssembly'\n```\n\n----------------------------------------\n\nTITLE: Enabling Triggers for All Tags in Container Resources\nDESCRIPTION: This YAML snippet demonstrates how to enable triggers for all tags in a container resource. It configures the container resource and sets the trigger to activate on all tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers-container-trigger.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:         \n  containers:\n  - container: petStore      \n    type: ACR  \n    azureSubscription: ContosoARMConnection\n    resourceGroup: ContosoGroup\n    registry: petStoreRegistry\n    repository: myPets\n    trigger: \n      tags: true # Triggers enabled for all tags\n```\n\n----------------------------------------\n\nTITLE: Running SpotBugs Analysis\nDESCRIPTION: This boolean property enables running the SpotBugs code analysis plugin. More information about the SpotBugs Maven plugin is available online. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_17\n\nLANGUAGE: none\nCODE:\n```\n\n**`spotBugsRunAnalysis`** - **Run SpotBugs analysis**<br>\n[Input alias](index.md#what-are-task-input-aliases): `spotBugsAnalysisEnabled`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nEnable this option to run the SpotBugs code analysis plugin. More information about the [SpotBugs Maven plugin](https://spotbugs.github.io/spotbugs-maven-plugin).\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Defining App Settings Parameter\nDESCRIPTION: Defines the `appSettings` input parameter used for specifying application settings in a web app, following a specific syntax to accommodate key-value pairs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"appSettings\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`appSettings`** - **App settings**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the web app application settings using the syntax `-key value` (for example: `-Port 5000` `-RequestTimeout 5000` `-WEBSITE_TIME_ZONE`). Enclose values that contain spaces in double quotes (for example: `\"Eastern Standard Time\").\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols Task Configuration in Azure Pipelines\nDESCRIPTION: YAML configuration for the PublishSymbols@1 task that indexes source code and publishes symbols. Includes all available input parameters with their default values and descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-symbols-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Index sources and publish symbols v1\n# Index your source code and publish symbols to a file share.\n- task: PublishSymbols@1\n  inputs:\n    #SymbolsPath: # string. Path to publish symbols. \n    SearchPattern: '**/bin/**/*.pdb' # string. Required. Search pattern. Default: **/bin/**/*.pdb.\n    #SymbolsFolder: # string. Path to symbols folder. \n  # Advanced\n    #SkipIndexing: false # boolean. Skip indexing. Default: false.\n    #TreatNotIndexedAsWarning: false # boolean. Warn if not indexed. Default: false.\n    #SymbolsMaximumWaitTime: # string. Max wait time (min). \n    #SymbolsProduct: # string. Product. \n    #SymbolsVersion: # string. Version. \n    #SymbolsArtifactName: 'Symbols_$(BuildConfiguration)' # string. Artifact name. Default: Symbols_$(BuildConfiguration).\n```\n\n----------------------------------------\n\nTITLE: Defining reviewApp Step in Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML syntax for the reviewApp step in Azure Pipelines 2020.1 and earlier versions. It includes properties available in these versions for configuring the step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-review-app.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- reviewApp: string # Required as first property. Use this task under deploy phase provider to create a resource dynamically.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Installing Docker CLI in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the DockerInstaller@0 task to install a specific version of the Docker CLI on an agent machine. It specifies the Docker version and release type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Docker CLI installer v0\n# Install Docker CLI on agent machine.\n- task: DockerInstaller@0\n  inputs:\n    dockerVersion: '17.09.0-ce' # string. Required. Docker Version. Default: 17.09.0-ce.\n    #releaseType: 'stable' # 'stable' | 'edge' | 'test' | 'nightly'. Release type. Default: stable.\n```\n\n----------------------------------------\n\nTITLE: Setting Run Latest Lock Behavior on Pipeline Level\nDESCRIPTION: Example of configuring runLatest lock behavior at the pipeline level, ensuring only the latest run acquires the lock to protected resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nlockBehavior: runLatest\nstages:\n- stage: A\n  jobs:\n  - job: Job\n    steps:\n    - script: Hey!\n```\n\n----------------------------------------\n\nTITLE: Defining SQL Deployment Type\nDESCRIPTION: Configures the deployment method for SQL database tasks, supporting DACPAC file deployment, SQL script files, and inline SQL scripts\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-azure-dacpac-deployment-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndeployType: DacpacTask\nDeploymentAction: Publish\n```\n\n----------------------------------------\n\nTITLE: Implementing Equals Demand Check in Azure Pipelines YAML\nDESCRIPTION: Shows how to check for a specific value of a capability using the equals operation in the pool demands section. This operation verifies if a capability exists and matches the specified value, with case-insensitive comparison.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool-demands.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\npool:\n  name: MyPool\n  demands: Agent.Version -equals 2.144.0 # equals check for Agent.Version 2.144.0\n```\n\n----------------------------------------\n\nTITLE: Overriding Template Parameters in YAML\nDESCRIPTION: Allows overriding template parameters for ARM deployments. Supports complex parameter types and variable substitution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\noverrideParameters: '-storageName fabrikam -adminUsername $(vmusername) -adminPassword (ConvertTo-SecureString -String \"$(password)\" -AsPlainText -Force)'\n```\n\n----------------------------------------\n\nTITLE: Basic Variable Group Reference in Azure Pipelines YAML\nDESCRIPTION: Basic syntax for referencing a variable group in Azure Pipelines. The 'group' property is required as the first property and specifies the variable group name to reference.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-group.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- group: string # Required as first property. Variable group name.\n```\n\n----------------------------------------\n\nTITLE: Configuring Invoke REST API Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for an Invoke REST API task that performs a GET request and validates the response using success criteria. The task uses a service connection named 'generic_demo' and checks if the response count equals 1425.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/invoke-rest-api-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: InvokeRESTAPI@1\n  displayName: 'Invoke REST API: GET'\n  inputs:\n    serviceConnection: 'generic_demo'\n    method: GET\n    successCriteria: 'eq(root[''count''], ''1425'')'\n```\n\n----------------------------------------\n\nTITLE: Setting Test Drop Location in Azure Pipelines YAML\nDESCRIPTION: Specifies the location on test machines where test binaries are copied. Can use system stage variables from test agent machines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndropLocation: 'c:\\tests'\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App with Custom Environment\nDESCRIPTION: This example shows how to deploy a Container App with a custom Container App environment. It creates a new Container App with a default name in a new resource group, using the specified Container App environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    containerAppEnvironment: 'my-test-container-app-env'\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Fabric App Version Update in YAML\nDESCRIPTION: This YAML snippet shows how to configure the ServiceFabricUpdateAppVersions@1 task in an Azure Pipelines build. It specifies the application package path, version suffix, and various options for version behavior and change detection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-update-app-versions-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Update Service Fabric App Versions v1\n# Automatically updates the versions of a packaged Service Fabric application.\n- task: ServiceFabricUpdateAppVersions@1\n  inputs:\n    applicationPackagePath: # string. Required. Application Package. \n    versionSuffix: '.$(Build.BuildNumber)' # string. Required. Version Value. Default: .$(Build.BuildNumber).\n    #versionBehavior: 'Append' # 'Append' | 'Replace'. Version Behavior. Default: Append.\n    #updateOnlyChanged: false # boolean. Update only if changed. Default: false.\n    #pkgArtifactName: # string. Optional. Use when updateOnlyChanged = true. Package Artifact Name. \n    #logAllChanges: true # boolean. Optional. Use when updateOnlyChanged = true. Log all changes. Default: true.\n    #compareType: 'LastSuccessful' # 'LastSuccessful' | 'Specific'. Optional. Use when updateOnlyChanged = true. Compare against. Default: LastSuccessful.\n    #buildNumber: # string. Optional. Use when compareType = Specific. Build Number.\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying to Azure Container Apps with Pre-defined Image\nDESCRIPTION: This snippet demonstrates how to configure the AzureContainerApps@0 task to build and deploy a container app using a pre-defined image to build. It specifies the Azure service connection, app source path, Azure Container Registry name, and the image to build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    imageToBuild: 'mytestacr.azurecr.io/app:latest'\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Server Database Deployment Task in YAML\nDESCRIPTION: YAML configuration for the SqlServerDacpacDeployment@1 task to deploy a SQL Server database using a DACPAC file. Includes required and optional parameters for specifying the target environment, authentication, deployment options, and advanced settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-server-dacpac-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# SQL Server database deploy (Deprecated) v1\n# Deploy a SQL Server database using DACPAC.\n- task: SqlServerDacpacDeployment@1\n  inputs:\n    EnvironmentName: # string. Required. Machines. \n    #AdminUserName: # string. Admin Login. \n    #AdminPassword: # string. Password. \n    #Protocol: # 'Http' | 'Https'. Protocol. \n    #TestCertificate: true # boolean. Optional. Use when Protocol = Https. Test Certificate. Default: true.\n  # Deployment\n    DacpacFile: # string. Required. DACPAC File. \n  # Target\n    TargetMethod: 'server' # 'server' | 'connectionString' | 'publishProfile'. Required. Specify SQL Using. Default: server.\n    ServerName: 'localhost' # string. Required when TargetMethod = server. Server Name. Default: localhost.\n    DatabaseName: # string. Required when TargetMethod = server. Database Name. \n    #SqlUsername: # string. Optional. Use when TargetMethod = server. SQL Username. \n    #SqlPassword: # string. Optional. Use when TargetMethod = server. SQL Password. \n    #ConnectionString: # string. Required when TargetMethod = connectionString. Connection String. \n    #PublishProfile: # string. Publish Profile. \n    #AdditionalArguments: # string. Additional Arguments. \n  # Advanced\n    #DeployInParallel: true # boolean. Deploy in Parallel. Default: true.\n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Select Machines By. Default: machineNames.\n    #MachineFilter: # string. Deploy to Machines.\n```\n\n----------------------------------------\n\nTITLE: PowerShell Default Inline Script Example\nDESCRIPTION: Default inline PowerShell script template that demonstrates how to write Azure PowerShell scripts and pass variables using arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\n# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments\n```\n\n----------------------------------------\n\nTITLE: NuGet Authenticate External Feeds Task with dotnet CLI in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the NuGetAuthenticate task with dotnet CLI to restore and push NuGet packages to feeds in other organizations or third-party repositories. It relies on service connections configured in Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: NuGetAuthenticate@1\n  inputs:\n    nuGetServiceConnections: OtherOrganizationFeedConnection, ThirdPartyRepositoryConnection\n- task: UseDotNet@2 # Optional if the .NET Core SDK is already installed\n- script: dotnet restore\n# ...\n- script: dotnet nuget push --api-key AzureArtifacts --source \\\"MyProjectFeed1\\\"  MyProject.*.nupkg\"\n```\n\n----------------------------------------\n\nTITLE: Publishing SonarQube Quality Gate Result in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the SonarQubePublish@7 task in an Azure Pipelines configuration. It specifies the task name, version, and the required input for the polling timeout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-publish-v7.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Quality Gate Result v7\n# Publish SonarQube Server's Quality Gate result on the Azure DevOps build result, to be used after the actual analysis.\n- task: SonarQubePublish@7\n  inputs:\n    pollingTimeoutSec: '300' # string. Required. Timeout (s). Default: 300.\n```\n\n----------------------------------------\n\nTITLE: Configuring Chef v1 Task in Azure Pipelines YAML\nDESCRIPTION: YAML configuration for the Chef@1 task to deploy to Chef environments by editing environment attributes. Specifies required inputs including Chef service connection, environment, attributes, and wait time.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/chef-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Chef v1\n# Deploy to Chef environments by editing environment attributes.\n- task: Chef@1\n  inputs:\n    connectedServiceName: # string. Required. Chef Service Connection. \n    Environment: # string. Required. Environment. \n    Attributes: # string. Required. Environment Attributes. \n    chefWaitTime: '30' # string. Required. Wait Time. Default: 30.\n```\n\n----------------------------------------\n\nTITLE: Basic Environment String Syntax in YAML Pipeline\nDESCRIPTION: Simple example showing how to specify an environment with a resource name using string syntax and implement a basic runOnce deployment strategy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-environment.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment: environmentName.resourceName\nstrategy:                 # deployment strategy\n  runOnce:              # default strategy\n    deploy:\n      steps:\n      - script: echo Hello world\n```\n\n----------------------------------------\n\nTITLE: Specifying Additional Web Deploy Arguments for Azure App Service\nDESCRIPTION: Allows adding extra Web Deploy arguments for Azure App Service deployment, following the -key:value syntax. Default values include retry settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nAdditionalArguments: \"-retryAttempts:6 -retryInterval:10000\"\n```\n\n----------------------------------------\n\nTITLE: Defining Variables Template Syntax in Azure Pipelines YAML\nDESCRIPTION: The basic syntax for defining a variables template in Azure Pipelines YAML. It includes the required 'template' property and optional 'parameters' property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-template.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- template: string # Required as first property. Template file with variables.\n  parameters: # Parameters to map into the template.\n```\n\n----------------------------------------\n\nTITLE: Parallel Stages in Azure DevOps Pipeline\nDESCRIPTION: Example of two stages running in parallel in an Azure DevOps pipeline. Uses the 'dependsOn' property to specify stage dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: BuildWin\n  displayName: Build for Windows\n- stage: BuildMac\n  displayName: Build for Mac\n  dependsOn: [] # by specifying an empty array, this stage doesn't depend on the stage before it\n```\n\n----------------------------------------\n\nTITLE: Constructing authenticated proxy URI\nDESCRIPTION: This YAML snippet demonstrates how to construct an authenticated proxy URI and use it with npm. It uses Node.js to parse the proxy URL, add authentication details, and then set a secret variable with the authenticated proxy URI.  This URI is then used in the `npm publish` command.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-authenticate-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n```YAML\n- script: node -e \"let u = url.parse(`$(agent.proxyurl)`); u.auth = `$(agent.proxyusername):$(agent.proxypassword)`; console.log(`##vso[task.setvariable variable=proxyAuthUri;issecret=true]` + url.format(u))\"\n- script: npm publish --https-proxy $(proxyAuthUri)\n```\n```\n\n----------------------------------------\n\nTITLE: Mixed Agent Pool Configuration\nDESCRIPTION: Example demonstrating how to configure builds using both self-hosted and Microsoft-hosted agents in a matrix strategy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-strategy.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix:\n    microsofthosted:\n      poolName: Azure Pipelines\n      vmImage: ubuntu-latest\n\n    selfhosted:\n      poolName: FabrikamPool\n      vmImage:\n\npool:\n  name: $(poolName)\n  vmImage: $(vmImage)\n\nsteps:\n- checkout: none\n- script: echo test\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Account for IIS Application Pool in YAML\nDESCRIPTION: Sets the username and password for a custom account when SpecificUser is selected as the AppPoolIdentity. The password should be stored as a secret variable for security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nAppPoolUsername: 'customUser'\nAppPoolPassword: '$(userCredentials)'\n```\n\n----------------------------------------\n\nTITLE: Pipeline Trigger with Branch Filters\nDESCRIPTION: Configuration using branch filters to include and exclude specific branches from triggering the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger:\n      branches:\n        include:\n        - main\n        - develop\n        - features/*\n        exclude:\n        - features/experimental/*\n```\n\n----------------------------------------\n\nTITLE: Defining Stages in Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML schema for defining stages in Azure Pipelines 2020.1 and earlier versions. This schema provides the basic stage properties without newer features like lockBehavior and templateContext.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-stage.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- stage: string # Required as first property. ID of the stage.\n  displayName: string # Human-readable name for the stage.\n  pool: string | pool # Pool where jobs in this stage will run unless otherwise specified.\n  dependsOn: string | [ string ] # Any stages which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this stage.\n  variables: variables | [ variable ] # Stage-specific variables.\n  jobs: [ job | deployment | template ] # Jobs which make up the stage.\n```\n\n----------------------------------------\n\nTITLE: Specifying Xcode Build Actions\nDESCRIPTION: Configuration parameter that defines which actions the Xcode task will perform. Supports build, clean, test, analyze, and archive actions with space-delimited combinations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nactions: build\n```\n\n----------------------------------------\n\nTITLE: Webhook Trigger JSON Payload Example\nDESCRIPTION: Example JSON payload for triggering a pipeline using a webhook POST request.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"resource\": {\n        \"message\": {\n            \"title\": \"Hello, world!\",\n            \"subtitle\": \"I'm using WebHooks!\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Type Configuration\nDESCRIPTION: Schema for specifying chart type and source in Helm tasks. Allows defining whether to use chart name or file path for installation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nchartType: # (Required when command == install || command == upgrade)\n  type: string\n  allowed:\n    - Name\n    - FilePath\n  default: Name\n```\n\n----------------------------------------\n\nTITLE: Pipeline Requirements Configuration for Azure DevOps\nDESCRIPTION: YAML configuration showing the requirements for running code coverage tasks in Azure DevOps pipelines across different versions. Includes details about pipeline types, agent compatibility, and task categories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-code-coverage-results-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nPipeline types: YAML, Classic build\nRuns on: Agent, DeploymentGroup\nDemands: None\nCapabilities: No demands satisfied\nCommand restrictions: Any\nSettable variables: Disabled for >=2022, Any for <=2020.1\nAgent version: 2.182.1 or greater for >=2022, 2.102.0 or greater for <=2020.1\nTask category: Test\n```\n\n----------------------------------------\n\nTITLE: Configuring Startup Command for Linux Azure Web App Deployment\nDESCRIPTION: This snippet describes the `StartupCommand` parameter used to specify the startup command for Linux-based Azure Web App deployments. This parameter is optional and used when the `WebAppKind` parameter is set to `applinux` or `linux`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_6\n\nLANGUAGE: none\nCODE:\n```\n**`StartupCommand`** - **Startup command**<br>\n`string`. Optional. Use when `WebAppKind = applinux || WebAppKind = linux`.\n```\n\n----------------------------------------\n\nTITLE: Helm Tool Installer Task Example - Explicit Version\nDESCRIPTION: Example demonstrates the use of an explicit version string rather than installing the latest version. It defines a HelmInstaller@1 task and sets the helmVersionToInstall input to a specific version, such as 2.14.1.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-installer-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: HelmInstaller@1\n  displayName: Helm installer\n  inputs: \n    helmVersionToInstall: 2.14.1\n```\n\n----------------------------------------\n\nTITLE: Non-ACR Container Registry Authentication in YAML\nDESCRIPTION: YAML configuration for authenticating with a container registry other than Azure Container Registry using Docker Compose task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-compose-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DockerCompose@0\n  displayName: Container registry login\n  inputs:\n    containerregistrytype: Container Registry\n    dockerRegistryEndpoint: Contoso\n```\n\n----------------------------------------\n\nTITLE: Configuring Resource Group in YAML\nDESCRIPTION: Specifies the name of the resource group for Azure Resource Manager deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nresourceGroupName: 'myResourceGroup'\n```\n\n----------------------------------------\n\nTITLE: Specifying Resource Group Action\nDESCRIPTION: Selects the specific action to perform on Azure resources or resource groups. Supports multiple operations like create, update, start, stop, restart, and delete of resources and resource groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\naction: string (required)\nAllowed values: [\n  \"Create Or Update Resource Group\",\n  \"Select Resource Group\",\n  \"Start\",\n  \"Stop\",\n  \"StopWithDeallocate\",\n  \"Restart\",\n  \"Delete\",\n  \"DeleteRG\"\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Arguments to DotNetCoreCLI Task\nDESCRIPTION: Specifies additional arguments for the selected dotnet command, such as build configuration, output folder, and runtime.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\narguments: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven v4 Task for Azure Pipelines 2022.1-2022.2\nDESCRIPTION: YAML configuration for the Maven v4 task specifically for Azure Pipelines versions 2022.1 to 2022.2. This configuration shows the available options for that specific version range, with slightly different JDK version options compared to later versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Maven v4\n# Build, test, and deploy with Apache Maven.\n- task: Maven@4\n  inputs:\n    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.\n    #goals: 'package' # string. Goal(s). Default: package.\n    #options: # string. Options. \n  # JUnit Test Results\n    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.\n    testResultsFiles: '**/surefire-reports/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/surefire-reports/TEST-*.xml.\n    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. \n    #allowBrokenSymlinks: true # boolean. Alias: allowBrokenSymbolicLinks. Optional. Use when publishJUnitResults = true. Allow broken symbolic links. Default: true.\n  # Code Coverage\n    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.\n    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. \n    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class files directories. \n    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source files directories. \n    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.\n    #codeCoverageRestoreOriginalPomXml: false # boolean. Alias: restoreOriginalPomXml. Optional. Use when codeCoverageTool != None. Restore original pom.xml after task execution. Default: false.\n  # Advanced\n    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.\n    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.\n    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. \n    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.\n    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven version. Default: Default.\n    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven path. \n    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.\n    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.\n    #mavenAuthenticateFeed: false # boolean. Alias: mavenFeedAuthenticate. Authenticate with Artifacts feeds. Default: false.\n    #effectivePomSkip: false # boolean. Alias: skipEffectivePom. Skip generating effective POM while authenticating with Artifacts feeds. Default: false.\n  # Code Analysis\n    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud analysis. Default: false.\n    #isJacocoCoverageReportXML: false # boolean. Optional. Use when sqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Use XML Jacoco reports for SonarQube analysis. Default: false.\n    #sqMavenPluginVersionChoice: 'latest' # 'latest' | 'pom'. Required when sqAnalysisEnabled = true. SonarQube scanner for Maven version. Default: latest.\n    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.\n    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.\n    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.\n    #spotBugsRunAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs analysis. Default: false.\n    #spotBugsVersion: '4.5.3.0' # string. Alias: spotBugsMavenPluginVersion. Optional. Use when spotBugsAnalysisEnabled = true. Version number. Default: 4.5.3.0.\n    #spotBugsGoal: 'spotbugs' # 'spotbugs' | 'check'. Optional. Use when spotBugsAnalysisEnabled = true. The goal for the spotbugs plugin. Default: spotbugs.\n    #failWhenBugsFound: true # boolean. Alias: spotBugsFailWhenBugsFound | sbFailWhenBugsFound. Optional. Use when spotBugsAnalysisEnabled = true && spotBugsGoal = check. Fail when bugs are found with spotbugs:check. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols Configuration for Azure Pipelines 2022\nDESCRIPTION: YAML configuration for PublishSymbols@2 task with standard parameter set for Azure Pipelines 2022 version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-symbols-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Index sources and publish symbols v2\n# Index your source code and publish symbols to a file share or Azure Artifacts symbol server.\n- task: PublishSymbols@2\n  inputs:\n    #SymbolsFolder: '$(Build.SourcesDirectory)' # string. Path to symbols folder. Default: $(Build.SourcesDirectory).\n    SearchPattern: '**/bin/**/*.pdb' # string. Required. Search pattern. Default: **/bin/**/*.pdb.\n    #IndexSources: true # boolean. Index sources. Default: true.\n    #PublishSymbols: true # boolean. Publish symbols. Default: true.\n    SymbolServerType: # 'TeamServices' | 'FileShare'. Required when PublishSymbols = true. Symbol server type. \n    #SymbolsPath: # string. Optional. Use when PublishSymbols = true && SymbolServerType = FileShare. Path to publish symbols. \n    #CompressSymbols: false # boolean. Optional. Use when SymbolServerType = FileShare. Compress symbols. Default: false.\n    #SymbolExpirationInDays: '36530' # string. Optional. Use when PublishSymbols = true && SymbolServerType = TeamServices. Symbol Expiration (in days). Default: 36530.\n    #IndexableFileFormats: 'Default' # 'Default' | 'Pdb' | 'SourceMap' | 'All'. Optional. Use when PublishSymbols = true && SymbolServerType = TeamServices. Symbol file formats to publish. Default: Default.\n    #DetailedLog: true # boolean. Verbose logging. Default: true.\n    #TreatNotIndexedAsWarning: false # boolean. Warn if not indexed. Default: false.\n    #UseNetCoreClientTool: false # boolean. Use NetCore client tool. Default: false.\n    #SymbolsMaximumWaitTime: # string. Max wait time (min). \n    #SymbolsProduct: # string. Product. \n    #SymbolsVersion: # string. Version. \n    #SymbolsArtifactName: 'Symbols_$(BuildConfiguration)' # string. Artifact name. Default: Symbols_$(BuildConfiguration).\n```\n\n----------------------------------------\n\nTITLE: Using XML Jacoco Reports for SonarQube Analysis\nDESCRIPTION: This boolean property configures the use of XML Jacoco reports for SonarQube analysis. It is applicable when `sqAnalysisEnabled = true` and `codeCoverageTool = JaCoCo`. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_12\n\nLANGUAGE: none\nCODE:\n```\n\n**`isJacocoCoverageReportXML`** - **Use XML Jacoco reports for SonarQube analysis**<br>\n`boolean`. Optional. Use when `sqAnalysisEnabled = true && codeCoverageTool = JaCoCo`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nUses XML Jacoco reports for SonarQube analysis. Learn more about [test reports](https://docs.sonarqube.org/latest/analysis/coverage/).\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Azure Spring Apps Deployment\nDESCRIPTION: Sets environment variables for the deployment using key-value syntax. Values with spaces should be enclosed in double quotes. This is an optional string input used when Action is Deploy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nEnvironmentVariables: \"-CUSTOMER_NAME Contoso -WEBSITE_TIME_ZONE \\\"Eastern Standard Time\\\"\" # Optional. Use when Action = Deploy\n```\n\n----------------------------------------\n\nTITLE: Creating a Sample Bash Script for Azure Pipelines\nDESCRIPTION: A sample Bash script that can be used with the ShellScript@2 task. It demonstrates printing environment variables and listing directory contents.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/shell-script-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"Hello World\"\necho \"AGENT_WORKFOLDER is $AGENT_WORKFOLDER\"\necho \"AGENT_WORKFOLDER contents:\"\nls -1 $AGENT_WORKFOLDER\necho \"AGENT_BUILDDIRECTORY is $AGENT_BUILDDIRECTORY\"\necho \"AGENT_BUILDDIRECTORY contents:\"\nls -1 $AGENT_BUILDDIRECTORY\necho \"SYSTEM_HOSTTYPE is $SYSTEM_HOSTTYPE\"\necho \"Over and out.\"\n```\n\n----------------------------------------\n\nTITLE: MSBuild Version Selection\nDESCRIPTION: This snippet describes the `msbuildVersion` input parameter, which allows users to select a specific MSBuild version. It allows values like `latest`, `17.0`, `16.0`, `15.0`, `14.0`, `12.0`, and `4.0`. It also notes that `xbuild` (Mono) is used on macOS agents if the version is lower than `15.0`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`msbuildVersion`** - **MSBuild Version**<br>\n`string`. Optional. Use when `msbuildLocationMethod = version`. Allowed values: `latest`, `17.0` (MSBuild 17.0), `16.0` (MSBuild 16.0), `15.0` (MSBuild 15.0), `14.0` (MSBuild 14.0), `12.0` (MSBuild 12.0), `4.0` (MSBuild 4.0). Default value: `latest`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf the preferred version cannot be found, the latest version found is used instead. On an macOS agent, `xbuild` (Mono) is used if version is lower than `15.0`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`msbuildVersion`** - **MSBuild Version**<br>\n`string`. Optional. Use when `msbuildLocationMethod = version`. Allowed values: `latest`, `16.0` (MSBuild 16.0), `15.0` (MSBuild 15.0), `14.0` (MSBuild 14.0), `12.0` (MSBuild 12.0), `4.0` (MSBuild 4.0). Default value: `latest`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf the preferred version cannot be found, the latest version found is used instead. On an macOS agent, `xbuild` (Mono) is used if version is lower than `15.0`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Test Framework Configuration Options\nDESCRIPTION: Framework-specific configuration options for different testing frameworks supported by App Center Test including Appium, Espresso, Calabash, UITest, and XCUITest.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-test-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nframeworkOption: appium  # Required when enablePrepare = true\nappiumBuildDirectory: string  # Required for Appium\nespressoBuildDirectory: string  # Optional for Espresso\ncalabashProjectDirectory: string  # Required for Calabash\nuiTestBuildDirectory: string  # Required for Xamarin UI Test\nxcUITestBuildDirectory: string  # Optional for XCUITest\n```\n\n----------------------------------------\n\nTITLE: Configuring PMD Static Code Analysis in Gradle Task\nDESCRIPTION: Enables PMD Java static analysis tool to detect code bugs during build process. Results are uploaded as build artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\npmdRunAnalysis: true\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifacts in Azure DevOps 2020.1 and Earlier\nDESCRIPTION: YAML configuration for publishing pipeline artifacts in Azure DevOps 2020.1 and earlier versions. Similar structure but without custom properties support.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-pipeline-artifact-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Pipeline Artifacts v1\n# Publish (upload) a file or directory as a named artifact for the current run.\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Pipeline.Workspace)' # string. Alias: path. Required. File or directory path. Default: $(Pipeline.Workspace).\n    #artifact: # string. Alias: artifactName. Artifact name. \n    publishLocation: 'pipeline' # 'pipeline' | 'filepath'. Alias: artifactType. Required. Artifact publish location. Default: pipeline.\n    #fileSharePath: # string. Required when artifactType = filepath. File share path. \n    #parallel: false # boolean. Optional. Use when artifactType = filepath. Parallel copy. Default: false.\n    #parallelCount: '8' # string. Optional. Use when artifactType = filepath && parallel = true. Parallel count. Default: 8.\n```\n\n----------------------------------------\n\nTITLE: Specifying Xcode Version\nDESCRIPTION: Parameter to set which version of Xcode to use for building. Options include default, specific versions, or a custom path to the Xcode developer directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nxcodeVersion: default\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Base Path Configuration\nDESCRIPTION: This snippet describes the `basePath` parameter for the NuGet `pack` command. It specifies the base path for files defined in the `.nuspec` file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_19\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Optional. Use when `command = pack`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Disabling Pull Request Triggers in Azure Pipelines YAML\nDESCRIPTION: Disables pull request triggers for the pipeline using the 'none' keyword.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pr.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npr: none # will disable PR builds (but not CI builds)\n```\n\n----------------------------------------\n\nTITLE: Selecting SDK for Xcode Build\nDESCRIPTION: Defines which SDK to use when building the Xcode project, such as iphoneos or iphonesimulator. Can reference pipeline variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsdk: $(SDK)\n```\n\n----------------------------------------\n\nTITLE: Mobile Development Build Tasks\nDESCRIPTION: Support for building, signing, and packaging mobile applications including Android, iOS, and cross-platform frameworks like Xamarin\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n- task: AndroidSigning@3\n- task: XamarinAndroid@1\n- task: XamariniOS@2\n```\n\n----------------------------------------\n\nTITLE: Copy Files with OR Condition in YAML\nDESCRIPTION: This YAML snippet demonstrates copying files using an OR condition in the CopyFiles@2 task.  It copies files with either .exe or .dll extensions from a specified location to the artifact staging directory, along with the readme.txt file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CopyFiles@2\n  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'\n  inputs:\n    Contents: |\n      ConsoleApplication1\\ConsoleApplication1\\bin\\**\\?(*.exe|*.dll)\n      ConsoleApplication1\\readme.txt\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Specifying Build Type for Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `buildType` to specify whether to download artifacts from the current build or a specific build. The string input is required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"buildType\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`buildType`** - **Download artifacts produced by**<br>\n`string`. Required. Allowed values: `current` (Current build), `specific` (Specific build). Default value: `current`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nWhether to download artifacts produced by the current build or from a specific build.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Running FindBugs Analysis\nDESCRIPTION: This boolean property enables running the FindBugs static analysis tool to look for bugs in the code. The results are uploaded as build artifacts. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_16\n\nLANGUAGE: none\nCODE:\n```\n\n**`findBugsRunAnalysis`** - **Run FindBugs**<br>\n[Input alias](index.md#what-are-task-input-aliases): `findbugsAnalysisEnabled`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nUses the FindBugs static analysis tool to look for bugs in the code. Results are uploaded as build artifacts.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Selecting Deployment Method for Azure App Service in Pipelines\nDESCRIPTION: Enables custom deployment method selection and specifies the deployment type for Azure App Service. Options include Web Deploy, Zip Deploy, and Run From Package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nenableCustomDeployment: true\nDeploymentType: 'webDeploy'\n```\n\n----------------------------------------\n\nTITLE: Cleaning Existing Files Before Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the boolean input parameter `cleanDestinationFolder` to determine whether existing files in the destination folder should be deleted prior to the download of artifacts. Default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"cleanDestinationFolder\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`cleanDestinationFolder`** - **Clean destination folder**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDelete all existing files in destination folder before artifact download.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Connection Type for File Copy Task\nDESCRIPTION: Defines the Azure connection type input, allowing selection between Azure Classic and Azure Resource Manager. This input has an alias and default value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nazureConnectionType:\n  [Input alias](index.md#what-are-task-input-aliases): ConnectedServiceNameSelector. string. Allowed values: ConnectedServiceName (Azure Classic), ConnectedServiceNameARM (Azure Resource Manager). Default value: ConnectedServiceNameARM.\n```\n\n----------------------------------------\n\nTITLE: Add Bindings Configuration in YAML\nDESCRIPTION: This YAML snippet specifies the configuration for adding bindings to an IIS website. It includes key parameters such as protocol, IP address, hostname, port, and SSL thumbprint. The snippet demonstrates how to format these settings within a YAML pipeline file for Azure DevOps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nBindings: |\n  {\n      bindings:[\n          {\n              \"protocol\":\"https\",\n              \"ipAddress\":\"\",\n              \"hostname\":\"my.hostname.com\",\n              \"port\":\"443\",\n              \"sslThumbprint\":\"\",\n              \"sniFlag\":true\n          }\n      ]\n  }\n```\n\n----------------------------------------\n\nTITLE: Generated settings.xml with Organization Feed Authentication\nDESCRIPTION: XML content showing how the settings.xml file looks after the Maven Authenticate task adds authentication servers for organization feeds. Contains server elements with credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<servers>\n  <server>\n    <id>MyFeedInOrg1</id>\n    <username>AzureDevOps</username>\n    <password>****</password>\n  </server>\n  <server>\n    <id>MyFeedInOrg2</id>\n    <username>AzureDevOps</username>\n    <password>****</password>\n  </server>\n</servers>\n```\n\n----------------------------------------\n\nTITLE: Single-line PR Branch Configuration Example in YAML\nDESCRIPTION: Example showing how to use includeExcludeFilters to specify branch triggers in a PR configuration using single-line format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-filters.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include: [ main, features/* ]\n```\n\n----------------------------------------\n\nTITLE: Installing Visual Studio Test Platform in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to use the VisualStudioTestPlatformInstaller@1 task to install the Visual Studio test platform from nuget.org or a custom feed. It demonstrates the basic syntax and common input options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/visual-studio-test-platform-installer-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Visual Studio test platform installer v1\n# Acquire the test platform from nuget.org or the tool cache. Satisfies the 'vstest' demand and can be used for running tests and collecting diagnostic data using the Visual Studio Test task.\n- task: VisualStudioTestPlatformInstaller@1\n  inputs:\n  # Package settings\n    packageFeedSelector: 'nugetOrg' # 'nugetOrg' | 'customFeed' | 'netShare'. Required. Package Feed. Default: nugetOrg.\n    #versionSelector: 'latestPreRelease' # 'latestPreRelease' | 'latestStable' | 'specificVersion'. Required when packageFeedSelector = nugetOrg || packageFeedSelector = customFeed. Version. Default: latestPreRelease.\n    #testPlatformVersion: # string. Required when versionSelector = specificVersion. Test Platform Version. \n    #customFeed: # string. Required when packageFeedSelector = customFeed. Package Source. \n    #username: # string. Optional. Use when packageFeedSelector = customFeed. User Name. \n    #password: # string. Optional. Use when packageFeedSelector = customFeed. Password. \n    #netShare: # string. Required when packageFeedSelector = netShare. UNC Path.\n```\n\n----------------------------------------\n\nTITLE: Defining Container Registry Type Input for Azure Pipelines\nDESCRIPTION: This snippet defines the `containerregistrytype` input parameter, which specifies the type of container registry to be used. It allows the user to select either 'Azure Container Registry' or 'Container Registry'. This is a required string parameter with a default value of 'Azure Container Registry'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"containerregistrytype\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`containerregistrytype`** - **Container Registry Type**<br>\n`string`. Required. Allowed values: `Azure Container Registry`, `Container Registry`. Default value: `Azure Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSelect 'Azure Container Registry' to connect to it by using an Azure Service Connection. Select 'Container registry' to connect to Docker Hub or any other private container registry.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Encrypting Service Fabric Application Secrets with PowerShell\nDESCRIPTION: This PowerShell command encrypts application secrets for Service Fabric deployment. The command should be used to encrypt passwords before including them in configuration, or a certificate matching the Server Certificate Thumbprint will be used for encryption.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: PowerShell\nCODE:\n```\nInvoke-ServiceFabricEncryptText\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Script Input in Azure VMSS Deployment YAML\nDESCRIPTION: Demonstrates the correct way to specify a custom script input for the Azure VMSS Deployment task without including './' before the script name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\n    customScript: 'test.sh'\n```\n\n----------------------------------------\n\nTITLE: List Helm Releases with Command `ls` - YAML\nDESCRIPTION: Demonstrates the use of the Helm `ls` command to list all Helm releases in a Kubernetes cluster using Azure DevOps YAML pipeline. It needs information about Azure subscription, resource group, and cluster.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm list\n  inputs:\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureResourceGroup: $(azureResourceGroup)\n    kubernetesCluster: $(kubernetesCluster)\n    command: ls\n    arguments: --all\n```\n\n----------------------------------------\n\nTITLE: Overriding Parameters for Azure Load Testing Task\nDESCRIPTION: This snippet illustrates how to override parameters in the YAML config file for the Azure Load Testing task using JSON format. It includes examples of various configurable options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-load-test-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"testId\": \"testId\",\n  \"displayName\": \"displayName\",\n  \"description\": \"description\",\n  \"engineInstances\": 1,\n  \"autoStop\": {\n    \"errorPercentage\": 90,\n    \"timeWindow\": 10\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Save Helm Chart for ACR with Command `save` - YAML\nDESCRIPTION: Presents the command for saving Helm charts to Azure Container Registry via YAML. Necessary inputs include chart name, path, and relevant Azure subscription details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm save\n  inputs:\n    command: save\n    chartNameForACR: mycontainerregistry.azurecr.io/helm/hello-world:v1\n    chartPathForACR: Application/charts/sampleapp\n    azureSubscriptionEndpointForACR: $(azureSubscriptionEndpointForACR)\n    azureResourceGroupForACR: $(azureResourceGroupForACR)\n    azureContainerRegistry: $(azureContainerRegistry)\n```\n\n----------------------------------------\n\nTITLE: Package Resource Schema Definition in Azure Pipelines YAML\nDESCRIPTION: Basic YAML schema for defining a package resource in Azure Pipelines. Shows required and optional properties including package alias, type, connection details, and trigger settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-packages-package.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npackages:\n- package: string # Required as first property. Alias of package artifact.\n  type: string # Required. Type of the package. Ex - NuGet, NPM etc.\n  connection: string # Required. Name of the connection. This connection will be used for all the communication related to this artifact.\n  name: string # Required. Name of the package.\n  version: string\n  tag: string\n  trigger: none | true # Trigger a new pipeline run when a new version of this package is available.\n```\n\n----------------------------------------\n\nTITLE: Defining reviewApp Step in Azure Pipelines 2022 and Later\nDESCRIPTION: YAML syntax for the reviewApp step in Azure Pipelines 2022 and later versions. It includes all available properties for configuring the step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-review-app.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- reviewApp: string # Required as first property. Use this task under deploy phase provider to create a resource dynamically.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: MSBuild Platform Configuration\nDESCRIPTION: This snippet defines the `platform` input parameter for the MSBuild task. It recommends specifying `AnyCPU` when targeting an MSBuild project file. It also suggests using a build variable for the platform configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`platform`** - **Platform**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\n> [!TIP]\n> - If you are targeting an MSBuild project (.*proj) file instead of a solution, specify `AnyCPU` (no whitespace).\n> - Declare a build variable such as `BuildPlatform` on the Variables tab (selecting `Allow` at Queue Time) and reference it here as `$(BuildPlatform)`. This way you can modify the platform when you queue the build and enable building multiple configurations.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Run Functional Tests Task YAML Configuration\nDESCRIPTION: YAML configuration for the RunVisualStudioTestsusingTestAgent@1 task. This task is deprecated and should be replaced with Visual Studio Test task. The configuration includes setup options for test machines and drop location, execution options for test selection and filtering, and reporting options for test results.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Run functional tests v1\n# Deprecated: This task and it's companion task (Visual Studio Test Agent Deployment) are deprecated. Use the 'Visual Studio Test' task instead. The VSTest task can run unit as well as functional tests. Run tests on one or more agents using the multi-agent job setting. Use the 'Visual Studio Test Platform' task to run tests without needing Visual Studio on the agent. VSTest task also brings new capabilities such as automatically rerunning failed tests.\n- task: RunVisualStudioTestsusingTestAgent@1\n  inputs:\n  # Setup Options\n    testMachineGroup: # string. Required. Machines. \n    dropLocation: # string. Required. Test Drop Location. \n  # Execution Options\n    testSelection: 'testAssembly' # 'testAssembly' | 'testPlan'. Required. Test Selection. Default: testAssembly.\n    #testPlan: # string. Required when testSelection = testPlan. Test Plan. \n    #testSuite: # string. Required when testSelection = testPlan. Test Suite. \n    #testConfiguration: # string. Required when testSelection = testPlan. Test Configuration. \n    sourcefilters: '**\\*test*.dll' # string. Required when testSelection = testAssembly. Test Assembly. Default: **\\*test*.dll.\n    #testFilterCriteria: # string. Optional. Use when testSelection = testAssembly. Test Filter criteria. \n    #runSettingsFile: # string. Run Settings File. \n    #overrideRunParams: # string. Override Test Run Parameters. \n    #codeCoverageEnabled: false # boolean. Code Coverage Enabled. Default: false.\n    #customSlicingEnabled: false # boolean. Distribute tests by number of machines. Default: false.\n  # Reporting Options\n    #testRunTitle: # string. Test Run Title. \n    #platform: # string. Platform. \n    #configuration: # string. Configuration. \n    #testConfigurations: # string. Test Configurations. \n    #autMachineGroup: # string. Application Under Test Machines.\n```\n\n----------------------------------------\n\nTITLE: Selecting Maven Version for Maven Task\nDESCRIPTION: This property specifies the Maven version to be used by the task. It allows selecting either the default Maven version or specifying a custom path. When `Path` is selected a custom path must be provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_5\n\nLANGUAGE: none\nCODE:\n```\n\n**`mavenVersionOption`** - **Maven version**<br>\n[Input alias](index.md#what-are-task-input-aliases): `mavenVersionSelection`. `string`. Required. Allowed values: `Default`, `Path` (Custom Path). Default value: `Default`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies either the default Maven version or the version in the specified custom path.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Triggers with Include/Exclude Lists in Azure DevOps YAML\nDESCRIPTION: Defines branch trigger configuration using include and exclude lists to specify which branches should trigger pipeline runs. This allows for fine-grained control over which branches will cause the pipeline to execute.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger-branches.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbranches:\n  include: [ string ]\n  exclude: [ string ]\n```\n\n----------------------------------------\n\nTITLE: Configuring XML Transformation for Azure App Service Deployment\nDESCRIPTION: Enables XML configuration transformations for *.Release.config and *.<EnvironmentName>.config files before variable substitution during deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nenableXmlTransform: true\n```\n\n----------------------------------------\n\nTITLE: Skipping Effective POM Generation\nDESCRIPTION: This boolean property allows skipping the generation of the effective POM while authenticating with Artifacts feeds. It is used for authenticating with Artifacts feeds using only the POM file. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_10\n\nLANGUAGE: none\nCODE:\n```\n\n**`effectivePomSkip`** - **Skip generating effective POM while authenticating with Artifacts feeds**<br>\n[Input alias](index.md#what-are-task-input-aliases): `skipEffectivePom`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nAuthenticates with Artifacts feeds using the POM only.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Defining Docker File Input for Azure Pipelines\nDESCRIPTION: This snippet specifies the `dockerFile` input parameter, which is the path to the Docker file required when the action is 'Build an image'. It is a mandatory string parameter, with a default value of '**/Dockerfile'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"dockerFile\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`dockerFile`** - **Docker File**<br>\n`string`. Required when `action = Build an image`. Default value: `**/Dockerfile`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the path to the Docker file. The task uses the first Docker file it finds to build the image.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::monicker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Container Name Input for Azure Pipelines\nDESCRIPTION: This snippet covers the `containerName` input, specifying the name of the Docker container to be run. This optional string parameter is used exclusively when the action is 'Run an image'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"containerName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`containerName`** - **Container Name**<br>\n`string`. Optional. Use when `action = Run an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the name of the Docker container to run.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: PR Trigger Branch Configuration Example in YAML\nDESCRIPTION: Example showing how to use includeExcludeFilters to specify branch triggers in a PR configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-filters.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npr:\n  branches:\n    include:\n    - main\n    - features/*\n```\n\n----------------------------------------\n\nTITLE: Defining Additional Image Tags Input for Azure Pipelines\nDESCRIPTION: This snippet presents the `additionalImageTags` input, which allows specifying extra tags for the Docker image being built or pushed. This optional string parameter is used in conjunction with actions like building, tagging, or pushing images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"additionalImageTags\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`additionalImageTags`** - **Additional Image Tags**<br>\n`string`. Optional. Use when `action = Build an image || action = Tag images || action = Push an image || action = Push images`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies additional tags for the Docker image being built or pushed.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Setting Template Parameters in YAML\nDESCRIPTION: Specifies the path to the template parameters file for ARM deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ncsmParametersFile: 'path/to/azuredeploy.parameters.json'\n```\n\n----------------------------------------\n\nTITLE: Setting Deployment Type for Azure Spring Apps\nDESCRIPTION: Chooses between deploying with source code/Java package or with container image. This is an optional string input used when Action is set to Deploy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nDeploymentType: \"Artifacts\" # Optional. Use when Action = Deploy. Options: Artifacts, CustomContainer\n```\n\n----------------------------------------\n\nTITLE: GitHub NPM Package Resource Example in Azure Pipelines\nDESCRIPTION: Example showing how to reference a GitHub npm package in an Azure Pipeline using a service connection. Demonstrates package resource definition and usage with version specification and trigger configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-packages-package.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  packages:\n    - package: contoso\n      type: npm\n      connection: pat-contoso\n      name: yourname/contoso \n      version: 7.130.88 \n      trigger: true\n\npool:\n  vmImage: ubuntu-latest\n\nsteps:\n- getPackage: contoso\n```\n\n----------------------------------------\n\nTITLE: Implementing Manual Validation Task in Azure Pipelines YAML (2020.1-2022.2)\nDESCRIPTION: YAML configuration for the Manual validation task in Azure Pipelines versions 2020.1 through 2022.2. This preview task pauses pipeline execution until manual validation is provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/manual-validation-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Manual validation v0\n# [PREVIEW] Pause a pipeline run to wait for manual interaction. Works only with YAML pipelines.\n- task: ManualValidation@0\n  inputs:\n    notifyUsers: # string. Required. Notify users. \n    #instructions: # string. Instructions. \n    #onTimeout: 'reject' # 'reject' | 'resume'. On timeout. Default: reject.\n```\n\n----------------------------------------\n\nTITLE: Deleting All But One Subdirectory in Azure Pipelines\nDESCRIPTION: This example shows how to use the DeleteFiles@1 task to delete specific subdirectories while leaving one intact, using the negation pattern in the 'contents' input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/delete-files-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DeleteFiles@1\n  displayName: 'Remove unneeded files'\n  inputs:\n    contents: |\n      some/!(two)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Script Execution in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet shows the correct way to specify a custom script in an Azure DevOps pipeline. It demonstrates how to avoid common pitfalls like including './' before the script name.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    customScript: 'test.sh'\n```\n\n----------------------------------------\n\nTITLE: Build Pipeline Specification for Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `pipeline` to specify which build pipeline to use when downloading artifacts. This string input is required when the `buildType` is set to `specific`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"pipeline\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`pipeline`** - **Build pipeline**<br>\n[Input alias](index.md#what-are-task-input-aliases): `definition`. `string`. Required when `buildType == specific`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the build pipeline name.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: App Settings JSON Configuration Example\nDESCRIPTION: Example JSON structure for configuring application settings in Azure App Service, showing how to set key-value pairs with slot settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-settings-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n   {\n    \"name\": \"key1\",\n    \"value\": \"valueabcd\",\n    \"slotSetting\": false\n   },\n   {\n    \"name\": \"key2\",\n    \"value\": \"valueefgh\",\n    \"slotSetting\": true\n   }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Read-Only Mounts for Containers in Azure DevOps YAML\nDESCRIPTION: YAML schema for the mountReadOnly definition in Azure DevOps pipelines. This structure allows specifying which directories (work, externals, tools, tasks) should be mounted as read-only in a container.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/mount-read-only.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmountReadOnly:\n  work: boolean # Mount the work directory as readonly.\n  externals: boolean # Mount the externals directory as readonly.\n  tools: boolean # Mount the tools directory as readonly.\n  tasks: boolean # Mount the tasks directory as readonly.\n```\n\n----------------------------------------\n\nTITLE: Azure Container Registry Configuration\nDESCRIPTION: Specifies an Azure Container Registry in JSON format for use with the Azure IoT Edge task. This configuration is required when the `containerregistrytype` is set to `Azure Container Registry`. The `loginServer` parameter defines the registry's address.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\"azureContainerRegistry: '{\\\"loginServer\\\": \\\"contoso.azurecr.io\\\"}'\"\n```\n\n----------------------------------------\n\nTITLE: Universal Package Publish Command Configuration\nDESCRIPTION: Defines inputs required for publishing Universal Packages to internal or external feeds with options for metadata association and package naming conventions\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/universal-packages-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ninputs:\n  command: publish\n  publishDirectory: $(Build.ArtifactStagingDirectory)\n  feedsToUsePublish: internal\n  vstsFeedPublish: projectName/feedName\n  vstsFeedPackagePublish: package-name\n  publishPackageMetadata: true\n```\n\n----------------------------------------\n\nTITLE: Generic Secret Arguments\nDESCRIPTION: Example showing how to specify key-value pairs for creating generic Kubernetes secrets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n--from-literal=key1=value1 --from-literal=key2=\"top secret\"\n```\n\n----------------------------------------\n\nTITLE: NuGet Authenticate Task Syntax (Azure Pipelines)\nDESCRIPTION: Configures NuGet tools to authenticate with Azure Artifacts and other NuGet repositories, requiring NuGet >= 4.8.5385, dotnet >= 6, or MSBuild >= 15.8.166.59604. This snippet shows the basic YAML syntax for using the NuGetAuthenticate@1 task within an Azure Pipeline, focusing on available inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"# NuGet authenticate v1\n# Configure NuGet tools to authenticate with Azure Artifacts and other NuGet repositories. Requires NuGet >= 4.8.5385, dotnet >= 6, or MSBuild >= 15.8.166.59604.\n- task: NuGetAuthenticate@1\n  inputs:\n    #forceReinstallCredentialProvider: false # boolean. Reinstall the credential provider even if already installed. Default: false.\n    #nuGetServiceConnections: # string. Service connection credentials for feeds outside this organization.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring AndroidBuild@1 Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the AndroidBuild@1 task in an Azure Pipelines workflow. It includes options for Gradle build, Android Virtual Device creation, and emulator settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/android-build-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Android Build v1\n# AndroidBuild@1 is deprecated. Use Gradle.\n- task: AndroidBuild@1\n  inputs:\n    #gradleWrapper: # string. Location of Gradle Wrapper. \n    #gradleProj: # string. Project Directory. \n    #gradleArguments: 'build' # string. Gradle Arguments. Default: build.\n  # Android Virtual Device (AVD) Options\n    avdName: 'AndroidBuildEmulator' # string. Required. Name. Default: AndroidBuildEmulator.\n    #createAvd: AndroidBuildEmulator # boolean. Create AVD. Default: AndroidBuildEmulator.\n    #emulatorTarget: 'android-19' # string. Required when createAvd = true. AVD Target SDK. Default: android-19.\n    #emulatorDevice: 'Nexus 5' # string. Optional. Use when createAvd = true. AVD Device. Default: Nexus 5.\n    #avdAbi: 'default/armeabi-v7a' # string. Required when createAvd = true. AVD ABI. Default: default/armeabi-v7a.\n    #avdForce: false # boolean. Optional. Use when createAvd = true. Overwrite Existing AVD. Default: false.\n    #avdOptionalArgs: # string. Optional. Use when createAvd = true. Create AVD Optional Arguments. \n  # Emulator Options\n    #startEmulator: false # boolean. Start and Stop Android Emulator. Default: false.\n    #emulatorTimeout: '300' # string. Required when startEmulator = true. Timeout in Seconds. Default: 300.\n    #emulatorHeadless: false # boolean. Optional. Use when startEmulator = true. Headless Display. Default: false.\n    #emulatorOptionalArgs: '-no-snapshot-load -no-snapshot-save' # string. Optional. Use when startEmulator = true. Emulator Optional Arguments. Default: -no-snapshot-load -no-snapshot-save.\n    #deleteAvd: false # boolean. Optional. Use when startEmulator = true. Delete AVD. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Editing a GitHub Release\nDESCRIPTION: YAML configuration to update an existing GitHub release from 'draft' to 'published' state. The release to be edited is identified by the specified tag variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GithubRelease@1\n  displayName: 'Edit GitHub Release'\n  inputs:\n    gitHubConnection: zenithworks\n    repositoryName: zenithworks/javaAppWithMaven\n    action: edit\n    tag: $(myDraftReleaseVersion)\n    isDraft: false\n```\n\n----------------------------------------\n\nTITLE: PowerShell Inline Script Example\nDESCRIPTION: Example of an inline PowerShell script that can be used with the task. Shows basic Hello World output.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n./script.ps1 --arg1 value1 --arg2 <some_secret_which_will_be_masked_here>\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Mode in YAML\nDESCRIPTION: Sets the deployment mode for ARM deployments. Can be Incremental, Complete, or Validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndeploymentMode: 'Incremental'\n```\n\n----------------------------------------\n\nTITLE: Configuring Stage and Tag Filters for Pipeline Resource Trigger in Azure DevOps YAML\nDESCRIPTION: Shows how to set up stage and tag filters for a pipeline resource trigger. This configuration allows triggering based on specific tags and completion of certain stages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger:\n      branches: # Branches to include\n      tags: # List of tags that when matched will trigger the pipeline. \n      - release25\n      stages: # List of stages that when complete will trigger the pipeline. \n      - build\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Fabric PowerShell Task in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the ServiceFabricPowerShell@1 task in an Azure Pipelines workflow. It specifies required inputs like cluster connection and script type, with optional parameters for script path, inline script, and arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-powershell-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Service Fabric PowerShell v1\n# Run a PowerShell script in the context of an Azure Service Fabric cluster connection.\n- task: ServiceFabricPowerShell@1\n  inputs:\n    clusterConnection: # string. Alias: serviceConnectionName. Required. Cluster Service Connection. \n    ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Required. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Script Arguments.\n```\n\n----------------------------------------\n\nTITLE: Choosing kubectl Version or Location\nDESCRIPTION: Allows the user to specify whether to get the version of kubectl or its location, defaulting to getting the version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"versionOrLocation\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`versionOrLocation`** - **Kubectl**<br>\n`string`. Allowed values: `version`, `location` (Specify location). Default value: `version`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nkubectl is a command line interface for running commands against Kubernetes clusters.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Port Parameter\nDESCRIPTION: Specifies the port that HTTP.sys must monitor for requests to this website. This parameter is required when 'AddBinding' is set to true and defaults to port 80.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"Port\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`Port`** - **Port**<br>\n`string`. Required when `AddBinding = true`. Default value: `80`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the port on which Hypertext Transfer Protocol Stack (HTTP.sys) must monitor for requests made to this website.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Retrieving Source Files with tf.exe\nDESCRIPTION: This command retrieves specific source files from the server using their committed paths. It requires TFVC repository access and specifies server collection, team project, repository, commit ID, and file path parameters. The output path is local where the retrieved file will be saved.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-symbols-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: command\nCODE:\n```\ntf.exe git view /collection:http://SERVER:8080/tfs/DefaultCollection /teamproject:\"93fc2e4d-0f0f-4e40-9825-01326191395d\" /repository:\"647ed0e6-43d2-4e3d-b8bf-2885476e9c44\" /commitId:3a9910862e22f442cd56ff280b43dd544d1ee8c9 /path:\"/MyApp/Program.cs\" /output:\"C:\\Users\\username\\AppData\\Local\\SOURCE~1\\TFS_COMMIT\\3a991086\\MyApp\\Program.cs\" /applyfilters\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure CLI Task for Azure Pipelines 2020\nDESCRIPTION: YAML configuration for Azure CLI v2 task specifically for Azure Pipelines 2020 version, with basic configuration options for running CLI commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cli-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure CLI v2\n# Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/Powershell Core/Batch script when running on Windows agent.\n- task: AzureCLI@2\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceNameARM. Required. Azure Resource Manager connection. \n    scriptType: # 'ps' | 'pscore' | 'batch' | 'bash'. Required. Script Type. \n    scriptLocation: 'scriptPath' # 'inlineScript' | 'scriptPath'. Required. Script Location. Default: scriptPath.\n    scriptPath: # string. Required when scriptLocation = scriptPath. Script Path. \n    #inlineScript: # string. Required when scriptLocation = inlineScript. Inline Script. \n    #arguments: # string. Alias: scriptArguments. Script Arguments. \n    #powerShellErrorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. Optional. Use when scriptType = ps || scriptType = pscore. ErrorActionPreference. Default: stop.\n  # Advanced\n    #addSpnToEnvironment: false # boolean. Access service principal details in script. Default: false.\n    #useGlobalConfig: false # boolean. Use global Azure CLI configuration. Default: false.\n    #workingDirectory: # string. Alias: cwd. Working Directory. \n    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n    #powerShellIgnoreLASTEXITCODE: false # boolean. Optional. Use when scriptType = ps || scriptType = pscore. Ignore $LASTEXITCODE. Default: false.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Tool Package Configuration\nDESCRIPTION: This snippet describes the `toolPackage` parameter for the NuGet `pack` command. It specifies whether the output files of the project should be placed in the tool folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_17\n\nLANGUAGE: YAML\nCODE:\n```\n\"`boolean`. Optional. Use when `command = pack`. Default value: `false`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Template Definition with Parameter Validation\nDESCRIPTION: Template definition (start.yml) that implements parameter validation to restrict certain build steps and ensure type safety.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/extends.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- name: buildSteps # the name of the parameter is buildSteps\n  type: stepList # data type is StepList\n  default: [] # default value of buildSteps\nstages:\n- stage: secure_buildstage\n  pool:\n    vmImage: windows-latest\n  jobs:\n  - job: secure_buildjob\n    steps:\n    - script: echo This happens before code \n      displayName: 'Base: Pre-build'\n    - script: echo Building\n      displayName: 'Base: Build'\n\n    - ${{ each step in parameters.buildSteps }}:\n      - ${{ each pair in step }}:\n          ${{ if ne(pair.value, 'CmdLine@2') }}:\n            ${{ pair.key }}: ${{ pair.value }}       \n          ${{ if eq(pair.value, 'CmdLine@2') }}: \n            # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'\n            '${{ pair.value }}': error         \n\n    - script: echo This happens after code\n      displayName: 'Base: Signing'\n```\n\n----------------------------------------\n\nTITLE: Default PowerShell Inline Script Example\nDESCRIPTION: Default inline PowerShell script that outputs 'Hello World'\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-on-target-machines-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n# Write your powershell commands here.\n\nWrite-Output \"Hello World\"\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Subscription Parameter\nDESCRIPTION: Defines the `azureSubscription` input parameter required for establishing an Azure subscription connection during deployment. It is a mandatory string value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"azureSubscription\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`azureSubscription`** - **Azure subscription**<br>\n`string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the [Azure Resource Manager subscription](/azure/devops/pipelines/library/connect-to-azure) for the deployment.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Baking and Deploying Helm Charts\nDESCRIPTION: Demonstrates baking manifest files from Helm charts and deploying them to Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Helm chart\n  inputs:\n    action: bake\n    helmChart: charts/sample\n    overrides: 'image.repository:nginx'\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n    manifests: $(bake.manifestsBundle)\n    containers: |\n      nginx: 1.7.9\n```\n\n----------------------------------------\n\nTITLE: Setting Custom JDK Path for Maven Task\nDESCRIPTION: This property allows specifying a custom JDK path for the Maven task.  The `JAVA_HOME` environment variable will be set to the provided path. It is required when `javaHomeSelection = Path`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n\n**`jdkDirectory`** - **JDK path**<br>\n[Input alias](index.md#what-are-task-input-aliases): `jdkUserInputPath`. `string`. Required when `javaHomeSelection = Path`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSets `JAVA_HOME` to the given path.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Setting Destination Type for Azure File Copy\nDESCRIPTION: Specifies the destination type for file copying, either Azure Blob or Azure VMs. This is a required input with allowed values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nDestination:\n  string. Required. Allowed values: AzureBlob (Azure Blob), AzureVMs (Azure VMs).\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Filters in Azure Pipelines YAML\nDESCRIPTION: Basic syntax for defining webhook filters in Azure DevOps pipelines. The filters require a path to select data from the event payload and an expected value to match against.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook-filters-filter.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfilters:\n- path: string # Required as first property. json path to select data from event payload.\n  value: string # Required. Expected value for the filter to match.\n```\n\n----------------------------------------\n\nTITLE: Configuring Fetch Depth in Azure Pipelines YAML\nDESCRIPTION: Sets the fetch depth for a Git checkout in an Azure DevOps pipeline. Setting fetchDepth to 0 fetches all history and overrides the Shallow fetch setting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n  fetchDepth: 0\n```\n\n----------------------------------------\n\nTITLE: Defining Startup Command Parameter\nDESCRIPTION: Defines the `startUpCommand` optional parameter that specifies the startup command for applications deployed as Linux web apps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"startUpCommand\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`startUpCommand`** - **Startup command**<br>\n`string`. Optional. Use when `appType = webAppLinux`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the start up command.  \nFor example:  \n`dotnet run`  \n`dotnet filename.dll.`\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Selecting Deployment Script Type for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `ScriptType` parameter, which selects the type of deployment script to be used for customizing the deployment of an Azure App Service. It accepts values like `Inline Script` or `File Path`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_8\n\nLANGUAGE: none\nCODE:\n```\n**`ScriptType`** - **Deployment script type**<br>\n`string`. Optional. Use when `WebAppKind != \"\"`. Allowed values: `Inline Script`, `File Path` (Script File Path).\n```\n\n----------------------------------------\n\nTITLE: Xamarin Test Cloud v1 Task Definition in YAML\nDESCRIPTION: This YAML snippet defines the XamarinTestCloud@1 task for Azure Pipelines. It includes inputs for app file, API key, user email, devices, series, test assembly directory, parallelization option, locale, and other optional arguments. Note: This task is deprecated and users should switch to 'App Center test' task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xamarin-test-cloud-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# Xamarin Test Cloud v1\n# [Deprecated] Test mobile apps with Xamarin Test Cloud using Xamarin.UITest. Instead, use the 'App Center test' task.\n- task: XamarinTestCloud@1\n  inputs:\n    appFile: # string. Alias: app. Required. App file. \n    #dsymFile: # string. Alias: dsym. dSYM file (iOS only). \n    teamApiKey: # string. Required. Team API key. \n    email: # string. Alias: user. Required. User email. \n    devices: # string. Required. Devices. \n    series: 'master' # string. Required. Series. Default: master.\n    testAssemblyDirectory: # string. Alias: testDir. Required. Test assembly directory. \n  # Advanced\n    parallelizationOption: 'none' # 'none' | '--fixture-chunk' | '--test-chunk'. Alias: parallelization. Required. Parallelization. Default: none.\n    localeOption: 'en_US' # 'da_DK' | 'nl_NL' | 'en_GB' | 'en_US' | 'fr_FR' | 'de_DE' | 'ja_JP' | 'ru_RU' | 'es_MX' | 'es_ES' | 'user'. Alias: locale. Required. System language. Default: en_US.\n    #userDefinedLocale: # string. Optional. Use when locale = user. Other locale. \n    testCloudFile: '**/packages/**/tools/test-cloud.exe' # string. Alias: testCloudLocation. Required. test-cloud.exe location. Default: **/packages/**/tools/test-cloud.exe.\n    #optionalArgs: # string. Optional arguments. \n    #publishNUnitResults: true # boolean. Publish results to Azure Pipelines. Default: true.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Custom Container App Name and Resource Group\nDESCRIPTION: Creates a new Container App with a custom name in a specified or new resource group\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: yml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@1\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    containerAppName: 'my-test-container-app'\n    resourceGroup: 'my-test-rg'\n```\n\n----------------------------------------\n\nTITLE: Configuring App Name for Azure Spring Apps Deployment\nDESCRIPTION: Specifies the name of the Azure Spring Apps app to deploy. The app must exist prior to task execution. This is a required string input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nAppName: \"<Azure Spring Apps app name>\"\n```\n\n----------------------------------------\n\nTITLE: Publish SonarQube Quality Gate Result with YAML\nDESCRIPTION: This YAML snippet defines the SonarQubePublish@5 task, which publishes the Quality Gate result from SonarQube to Azure DevOps. It requires a timeout value to be specified, indicating how long the task should poll SonarQube for the analysis to complete. This task is deprecated and users should use SonarQubePublish@7.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-publish-v5.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n# Publish Quality Gate Result v5\n# Publish SonarQube's Quality Gate result on the Azure DevOps build result, to be used after the actual analysis.\n- task: SonarQubePublish@5\n  inputs:\n    pollingTimeoutSec: '300' # string. Required. Timeout (s). Default: 300.\n\n```\n\n----------------------------------------\n\nTITLE: MySQL Task Input Parameters\nDESCRIPTION: Configuration example showing the input parameters supported by the MySQL deployment task in Azure Pipelines yaml format\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-mysql-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nTaskNameSelector: 'SqlTaskFile' # or 'InlineSqlTask'\nSqlFile: '$(agent.releaseDirectory)/script.sql'\nazureSubscription: '<service-connection-name>'\nServerName: 'fabrikam.mysql.database.azure.com'\nDatabaseName: 'mydb'\nSqlUsername: 'admin@fabrikam'\nSqlPassword: '$(password)'\nIpDetectionMethod: 'AutoDetect' # or 'IPAddressRange'\nDeleteFirewallRule: true\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Packager Task in YAML\nDESCRIPTION: This snippet provides the YAML configuration for the NuGetPackager@0 task, which is deprecated. It includes various input options such as searchPattern for locating csproj or nuspec files, versioning options like versionByBuild, and additional configuration parameters. The task by default uses NuGet 4 and supports authenticated feeds outside the organization/collection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-packager-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# NuGet packager v0\\n# Deprecated: use the \\u201cNuGet\\u201d task instead. It works with the new Tool Installer framework so you can easily use new versions of NuGet without waiting for a task update, provides better support for authenticated feeds outside this organization/collection, and uses NuGet 4 by default.\\n- task: NuGetPackager@0\\n  inputs:\\n    searchPattern: '**\\\\*.csproj' # string. Required. Path to csproj or nuspec file(s) to pack. Default: **\\\\*.csproj.\\n    #outputdir: # string. Package Folder. \\n  # Pack options\\n    #includeReferencedProjects: false # boolean. Include referenced projects. Default: false.\\n    versionByBuild: 'false' # 'false' | 'byPrereleaseNumber' | 'byEnvVar' | 'true'. Required. Automatic package versioning. Default: false.\\n    #versionEnvVar: # string. Required when versionByBuild = byEnvVar. Environment variable. \\n    #requestedMajorVersion: '1' # string. Required when versionByBuild = byPrereleaseNumber. Major. Default: 1.\\n    #requestedMinorVersion: '0' # string. Required when versionByBuild = byPrereleaseNumber. Minor. Default: 0.\\n    #requestedPatchVersion: '0' # string. Required when versionByBuild = byPrereleaseNumber. Patch. Default: 0.\\n  # Advanced\\n    #configurationToPack: '$(BuildConfiguration)' # string. Configuration to Package. Default: $(BuildConfiguration).\\n    #buildProperties: # string. Additional build properties. \\n    #nuGetAdditionalArgs: # string. NuGet Arguments. \\n    #nuGetPath: # string. Path to NuGet.exe.\n```\n\n----------------------------------------\n\nTITLE: Scaling Kubernetes Deployments\nDESCRIPTION: Example of scaling a Kubernetes deployment to a specified number of replicas.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Scale\n  inputs: \n    action: scale\n    kind: deployment\n    name: bootcamp-demo\n    replicas: 5\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Authenticate with External Python Package Sources\nDESCRIPTION: Example demonstrating authentication setup for downloading Python packages from external private package servers using service connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PipAuthenticate@1\n  displayName: 'Pip Authenticate'\n  inputs:\n    # In this case, name of the service connection is \"pypitest\". \n    pythonDownloadServiceConnections: pypitest\n\n# Use command line tool to 'pip install'.\n- script: |\n    pip install HelloTestPackage\n```\n\n----------------------------------------\n\nTITLE: Disable Pipeline Resource Trigger\nDESCRIPTION: Configuration to disable the pipeline resource trigger completely.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger: none\n```\n\n----------------------------------------\n\nTITLE: Setting Ant Command Line Options in Azure Pipelines YAML\nDESCRIPTION: Provides options to pass to the Ant command line, including custom properties and built-in variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\noptions: '-DmyProperty=myPropertyValue -DcollectionId=$(system.collectionId)'\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Include Referenced Projects Configuration\nDESCRIPTION: This snippet explains the `includeReferencedProjects` parameter used with the NuGet `pack` command when `versioningScheme` is `off`. It controls whether referenced projects are included as dependencies or as part of the package, and cannot be used with automatic versioning.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n\"`boolean`. Optional. Use when `versioningScheme = off && command = pack`. Default value: `false`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Specifying a Single Demand in Azure Pipelines YAML\nDESCRIPTION: Example of adding a single demand to a YAML build pipeline by adding it to the pool section. This checks for the existence of the 'SpecialSoftware' capability on agents in the Default pool.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool-demands.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\npool:\n  name: Default\n  demands: SpecialSoftware # exists check for SpecialSoftware\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Certificate in Azure Pipelines (v2022)\nDESCRIPTION: YAML configuration for the InstallAppleCertificate@2 task in Azure Pipelines 2022. This version includes basic certificate installation options and partition_id ACL setup capability.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-certificate-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Apple certificate v2\n# Install an Apple certificate required to build on a macOS agent machine.\n- task: InstallAppleCertificate@2\n  inputs:\n    certSecureFile: # string. Required. Certificate (P12). \n    #certPwd: # string. Certificate (P12) password. \n  # Advanced\n    keychain: 'temp' # 'default' | 'temp' | 'custom'. Required. Keychain. Default: temp.\n    #keychainPassword: # string. Required when keychain = custom || keychain = default. Keychain password. \n    #customKeychainPath: # string. Required when keychain = custom. Custom keychain path. \n    #deleteCert: # boolean. Optional. Use when keychain = custom || keychain = default. Delete certificate from keychain. \n    #deleteCustomKeychain: # boolean. Optional. Use when keychain = custom. Delete custom keychain. \n    #signingIdentity: # string. Certificate signing identity. \n    #setUpPartitionIdACLForPrivateKey: # boolean. Set up partition_id ACL for the imported private key.\n```\n\n----------------------------------------\n\nTITLE: Enabling Clean Deployment for Linux Azure App Service\nDESCRIPTION: Controls whether to perform a clean (complete sync) deployment when using One Deploy method for Linux Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\nCleanDeploymentFlag: true\n```\n\n----------------------------------------\n\nTITLE: Changelog Labels Definition\nDESCRIPTION: Defines the `changeLogLabels` property, used to categorize changes based on labels associated with issues or pull requests. It is an optional string used when `changeLogType = issueBased && addChangeLog = true`. The default value is `[{ \\\"label\\\" : \\\"bug\\\", \\\"displayName\\\" : \\\"Bugs\\\", \\\"state\\\" : \\\"closed\\\" }]`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\"`changeLogLabels`** - **Categories**<br>\n`string`. Optional. Use when `changeLogType = issueBased && addChangeLog = true`. Default value: `[{ \\\"label\\\" : \\\"bug\\\", \\\"displayName\\\" : \\\"Bugs\\\", \\\"state\\\" : \\\"closed\\\" }]`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Universal Package Download Command Configuration\nDESCRIPTION: Defines inputs required for downloading Universal Packages from internal or external feeds with support for version selection and destination directory specification\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/universal-packages-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ninputs:\n  command: download\n  downloadDirectory: $(System.DefaultWorkingDirectory)\n  feedsToUse: internal\n  vstsFeed: projectName/feedName\n  vstsFeedPackage: package-name\n  vstsPackageVersion: 1.0.0\n```\n\n----------------------------------------\n\nTITLE: MSBuild Project Event Logging\nDESCRIPTION: This snippet describes the `logProjectEvents` parameter, which optionally records timeline details for each project (Windows only).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`logProjectEvents`** - **Record Project Details**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nOptionally records timeline details for each project (Windows only).\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Defining appType Input for AzureRM Connection\nDESCRIPTION: This snippet defines the `appType` input, also aliased as `WebAppKind`, required when `ConnectionType` is `AzureRM`. It represents the type of App Service being deployed, with a list of allowed values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`appType`** - **App Service type**<br>\n[Input alias](index.md#what-are-task-input-aliases): `WebAppKind`. `string`. Required when `ConnectionType = AzureRM`. Allowed values: `webApp` (Web App on Windows), `webAppLinux` (Web App on Linux), `webAppContainer` (Web App for Containers (Linux)), `webAppHyperVContainer` (Web App for Containers (Windows)), `functionApp` (Function App on Windows (Not Recommended, Use Azure Functions Task)), `functionAppLinux` (Function App on Linux (Not Recommended, Use Azure Functions Task)), `functionAppContainer` (Function App for Containers (Linux) (Not Recommended, Use Azure Functions for container Task)), `apiApp` (API App), `mobileApp` (Mobile App). Default value: `webApp`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nChoose from Web App On Windows, Web App On Linux, Web App for Containers, Function App, Function App on Linux, Function App for Containers and Mobile App.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Writing Warning in PowerShell Task\nDESCRIPTION: YAML configuration to write a warning message using a PowerShell task in an Azure DevOps pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    script: Write-Host \"##vso[task.LogIssue type=warning;]This is the warning\"\n```\n\n----------------------------------------\n\nTITLE: Building Module Images in Azure IoT Edge\nDESCRIPTION: This example demonstrates how to build module images using Azure IoT Edge. The YAML configuration specifies the action and the path to the template file required for the build.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: AzureIoTEdge@2\\n  displayName: AzureIoTEdge - Build module images\\n  inputs:\\n    action: Build module images\\n    templateFilePath: deployment.template.json\\n    defaultPlatform: amd64\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Configuration File for kubectl\nDESCRIPTION: Requires a configuration file when the useConfigurationFile parameter is set to true. Users must provide a path or URL to the Kubernetes configuration files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"configuration\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`configuration`** - **Configuration file**<br>\n`string`. Required when `useConfigurationFile = true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the filename, directory, or URL to kubernetes configuration files that is used with the commands.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Specifying SQL Server and Database Details\nDESCRIPTION: Provides configuration for specifying Azure SQL Server name and target database for deployment, required for most authentication methods\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-azure-dacpac-deployment-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nServerName: Fabrikam.database.windows.net\nDatabaseName: targetDatabase\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Input Definition\nDESCRIPTION: Specifies the Azure Resource Manager service connection for deployment. Requires Contributor role permissions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription:\n  type: string\n  alias: connectedServiceNameARM\n  required: true\n  description: Azure Resource Manager service connection for deployment\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Test Plan Task in YAML\nDESCRIPTION: YAML configuration for the AzureTestPlan@0 task to run manual and automated tests in Azure Test Plans. Includes all available input options and their descriptions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-test-plan-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Test Plan v0\n# Run manual and automated tests in test plan in Java and Python language.\n- task: AzureTestPlan@0\n  inputs:\n    testSelector: # 'manualTests' | 'automatedTests'. Required. Test cases to be executed. \n    testPlanOrRunSelector: 'testPlan' # 'testPlan' | 'testRun'. Required. Select tests using. Default: testPlan.\n    #testRunId: '$(test.RunId)' # string. Required when testPlanOrRunSelector = testRun. Test Run. Default: $(test.RunId).\n    testPlan: # string. Required when testPlanOrRunSelector = testPlan. Test plan. \n    testSuite: # string. Required when testPlanOrRunSelector = testPlan. Test suite. \n    testConfiguration: # string. Required. Test configuration. \n    #testLanguageInput: # 'JavaMaven' | 'JavaGradle' | 'Python' | 'JavaScriptJest'. Select Test framework language. \n    #pomFilePath: # string. Optional. Use when testLanguageInput = JavaMaven. Pom file path. \n    #gradleFilePath: # string. Optional. Use when testLanguageInput = JavaGradle. Gradle file path. \n    #failTaskOnFailedTests: true # boolean. Fail if there are test failures. Default: true.\n    #failTaskOnFailureToPublishResults: false # boolean. Fail if there is failure in publishing test results. Default: false.\n    #failTaskOnMissingResultsFile: false # boolean. Fail if no result files are found. Default: false.\n    #publishRunAttachments: true # boolean. Upload test results files. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Simple Branch Trigger List in Azure DevOps YAML\nDESCRIPTION: Defines a simple list of branches that should trigger pipeline runs. This provides a straightforward way to specify which branches will cause the pipeline to execute.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger-branches.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbranches: [ string ]\n```\n\n----------------------------------------\n\nTITLE: Entra ID Authentication Example\nDESCRIPTION: Example showing how to configure the task using Azure Resource Manager service connection with Entra ID authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PublishToAzureServiceBus@2\n  inputs:\n    azureSubscription: my-azure-service-connection\n    serviceBusQueueName: my-service-bus-queue\n    serviceBusNamespace: my-service-bus-namespace\n    useDataContractSerializer: false\n    messageBody: |\n      {\n        \"property\": \"value\"\n      }\n```\n\n----------------------------------------\n\nTITLE: Enabling Detailed Pipeline Logs via Variable\nDESCRIPTION: This snippet demonstrates how to enable detailed logs for an Azure DevOps pipeline by setting the `System.Debug` variable to `true`. This provides more verbose output for troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/includes/build-step-common-qa.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n1. Edit your pipeline and select **Variables**\n2. Add a new variable with the name `System.Debug` and value `true`\n3. **Save**\n```\n\n----------------------------------------\n\nTITLE: HelmDeploy@0 Task Syntax (Azure Pipelines 2022+)\nDESCRIPTION: This YAML snippet defines the syntax for the HelmDeploy@0 task in Azure Pipelines for versions 2022 and later. It includes various input parameters for configuring the Kubernetes cluster connection, Azure Container Registry, Helm commands, TLS settings, and other advanced options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Package and deploy Helm charts v0\n# Deploy, configure, update a Kubernetes cluster in Azure Container Service by running helm commands.\n- task: HelmDeploy@0\n  inputs:\n  # Kubernetes Cluster\n    #connectionType: 'Azure Resource Manager' # 'Azure Resource Manager' | 'Kubernetes Service Connection' | 'None'. Required when command != logout && command != package && command != save. Connection Type. Default: Azure Resource Manager.\n    #azureSubscription: # string. Alias: azureSubscriptionEndpoint. Required when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Azure subscription. \n    #azureResourceGroup: # string. Required when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Resource group. \n    #kubernetesCluster: # string. Required when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Kubernetes cluster. \n    #useClusterAdmin: false # boolean. Optional. Use when connectionType = Azure Resource Manager && command != logout && command != package && command != save. Use cluster admin credentials. Default: false.\n    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection && command != logout && command != package && command != save. Kubernetes Service Connection. \n    #namespace: # string. Optional. Use when command != logout && command != package && command != save. Namespace. \n  # Azure Container Registry\n    #azureSubscriptionForACR: # string. Alias: azureSubscriptionEndpointForACR. Required when command == save. Azure subscription for Container Registry. \n    #azureResourceGroupForACR: # string. Required when command == save. Resource group. \n    #azureContainerRegistry: # string. Required when command == save. Azure Container Registry. \n  # Commands\n    command: 'ls' # 'create' | 'delete' | 'expose' | 'get' | 'init' | 'install' | 'login' | 'logout' | 'ls' | 'package' | 'rollback' | 'save' | 'upgrade' | 'uninstall'. Required. Command. Default: ls.\n    #chartType: 'Name' # 'Name' | 'FilePath'. Required when command == install || command == upgrade. Chart Type. Default: Name.\n    chartName: # string. Required when chartType == Name. Chart Name. \n    #chartPath: # string. Required when chartType == FilePath || command == package. Chart Path. \n    #chartVersion: # string. Alias: version. Optional. Use when command == package || command == install || command == upgrade. Version. \n    #releaseName: # string. Optional. Use when command == install || command == upgrade. Release Name. \n    #overrideValues: # string. Optional. Use when command == install || command == upgrade. Set Values. \n    #valueFile: # string. Optional. Use when command == install || command == upgrade. Value File. \n    #destination: '$(Build.ArtifactStagingDirectory)' # string. Optional. Use when command == package. Destination. Default: $(Build.ArtifactStagingDirectory).\n    #canaryimage: false # boolean. Optional. Use when command == init. Use canary image version. Default: false.\n    #upgradetiller: true # boolean. Optional. Use when command == init. Upgrade Tiller. Default: true.\n    #updatedependency: false # boolean. Optional. Use when command == install || command == package. Update Dependency. Default: false.\n    #save: true # boolean. Optional. Use when command == package. Save. Default: true.\n    #install: true # boolean. Optional. Use when command == upgrade. Install if release not present. Default: true.\n    #recreate: false # boolean. Optional. Use when command == upgrade. Recreate Pods. Default: false.\n    #resetValues: false # boolean. Optional. Use when command == upgrade. Reset Values. Default: false.\n    #force: false # boolean. Optional. Use when command == upgrade. Force. Default: false.\n    #waitForExecution: true # boolean. Optional. Use when command == init || command == install || command == upgrade. Wait. Default: true.\n    #arguments: # string. Optional. Use when command != login && command != logout. Arguments. \n    #chartNameForACR: # string. Required when command == save. Chart Name For Azure Container Registry. \n    #chartPathForACR: # string. Required when command == save. Chart Path for Azure Container Registry. \n  # TLS\n    #enableTls: false # boolean. Optional. Use when command != login && command != logout && command != package && command != save. Enable TLS. Default: false.\n    #caCert: # string. Required when enableTls == true && command != login && command != logout && command != package && command != save. CA certificate. \n    #certificate: # string. Required when enableTls == true && command != login && command != logout && command != package && command != save. Certificate. \n    #privatekey: # string. Required when enableTls == true && command != login && command != logout && command != package && command != save. Key. \n  # Advanced\n    #tillernamespace: # string. Optional. Use when command != login && command != logout && command != package && command != save. Tiller namespace. \n    #failOnStderr: false # boolean. Optional. Use when command != login && command != logout && command != package && command != save. Fail on Standard Error. Default: false.\n    #publishPipelineMetadata: true # boolean. Optional. Use when command != login && command != logout && command != package && command != save. Publish pipeline metadata. Default: true.\n```\n```\n\n----------------------------------------\n\nTITLE: Setting DotNetCoreCLI Command\nDESCRIPTION: Specifies the dotnet command to run. Options include build, push, pack, publish, restore, run, test, and custom.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ncommand: \"build | push | pack | publish | restore | run | test | custom\"\n```\n\n----------------------------------------\n\nTITLE: Deploying to IoT Edge Devices\nDESCRIPTION: This snippet outlines the configuration to deploy to IoT Edge devices using Azure Pipelines. It defines the necessary inputs such as deployment file paths and subscription details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n\"steps:\\n- task: AzureIoTEdge@2\\n  displayName: 'Azure IoT Edge - Deploy to IoT Edge devices'\\n  inputs:\\n    action: 'Deploy to IoT Edge devices'\\n    deploymentFilePath: $(System.DefaultWorkingDirectory)/config/deployment.json\\n    azureSubscription: $(azureSubscriptionEndpoint)\\n    iothubname: iothubname\\n    deploymentid: '$(System.TeamProject)-devops-deployment'\\n    priority: '0'\\n    deviceOption: 'Single Device'\\n    deviceId: deviceId\"\n```\n\n----------------------------------------\n\nTITLE: Defining Password for FTP Inputs\nDESCRIPTION: Specifies the user password required to authenticate with the FTP server when the credential type is direct input. This is a required field for successful connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"password\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`password`** - **Password**<br>\n`string`. Required when `credsType = inputs`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the password for the FTP connection.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Major Version Configuration\nDESCRIPTION: This snippet defines the `majorVersion` parameter when using `versioningScheme = byPrereleaseNumber` and `command = pack`. It determines the 'X' value in the SemVer version X.Y.Z.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n\"**`majorVersion`** - **Major**<br>\n[Input alias](index.md#what-are-task-input-aliases): `requestedMajorVersion`. `string`. Required when `versioningScheme = byPrereleaseNumber && command = pack`. Default value: `1`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Publishing to Azure Service Bus - Legacy YAML Configuration (2022 and earlier)\nDESCRIPTION: YAML configuration for sending messages to Azure Service Bus using the PublishToAzureServiceBus@1 task. This version is for Azure Pipelines 2022 and earlier versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish To Azure Service Bus v1\n# Sends a message to Azure Service Bus using a service connection (no agent is required).\n- task: PublishToAzureServiceBus@1\n  inputs:\n    azureSubscription: # string. Alias: connectedServiceName. Required. Azure Service Bus service connection. \n    #messageBody: # string. Message body. \n    #waitForCompletion: false # boolean. Wait for task completion. Default: false.\n  # Advanced\n    #sessionId: # string. Session Id. \n    #signPayload: false # boolean. Sign the Message. Default: false.\n    #certificateString: # string. Required when signPayload = true. Certificate Variable. \n    #signatureKey: 'signature' # string. Optional. Use when signPayload = true. Signature Property Key. Default: signature.\n```\n\n----------------------------------------\n\nTITLE: Setting Action Type for Azure Spring Apps Deployment\nDESCRIPTION: Defines the action to be performed on Azure Spring Apps. It's a required string input with allowed values for deployment, production setting, and staging deletion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nAction: \"Deploy\" # Required. Options: Deploy, Set Production, Delete Staging Deployment\n```\n\n----------------------------------------\n\nTITLE: SMI Traffic Split Configuration Example\nDESCRIPTION: Example configuration for Service Mesh Interface (SMI) based traffic splitting with baseline and canary replica specifications\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy: canary\ntrafficSplitMethod: smi\npercentage: 20\nbaselineAndCanaryReplicas: 1\n```\n\n----------------------------------------\n\nTITLE: Single-line Include List Example in YAML\nDESCRIPTION: Example showing how to specify multiple items in an include list using single-line format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-filters.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ninclude: [ item1, item2 ]\n```\n\n----------------------------------------\n\nTITLE: Using NodeTool@0 to Install Node.js v0 in Azure Pipelines\nDESCRIPTION: This snippet shows how to configure the NodeTool@0 task in Azure Pipelines, allowing users to specify the version of Node.js to install. The task supports multiple input parameters to customize the installation, such as version source and other optional settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/node-tool-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NodeTool@0\n  inputs:\n    versionSource: 'spec' # 'spec' | 'fromFile'. Required. Source of version. Default: spec.\n    #versionSpec: '6.x' # string. Optional. Use when versionSource = spec. Version Spec. Default: 6.x.\n    #versionFilePath: # string. Optional. Use when versionSource = fromFile. Path to the .nvmrc file. \n    #checkLatest: false # boolean. Check for Latest Version. Default: false.\n    #force32bit: false # boolean. Use 32 bit version on x64 agents. Default: false.\n  # Advanced\n    #nodejsMirror: 'https://nodejs.org/dist' # string. Set source for Node.js binaries. Default: https://nodejs.org/dist.\n    #retryCountOnDownloadFails: '5' # string. Set retry count when nodes downloads failed. Default: 5.\n    #delayBetweenRetries: '1000' # string. Set delay between retries. Default: 1000.\n```\n\n----------------------------------------\n\nTITLE: Example of Build Resource Configuration in Azure Pipelines\nDESCRIPTION: Practical example showing how to configure a Jenkins build resource in Azure Pipelines YAML. It defines a build resource named 'Spaceworkz' that connects to a Jenkins server and enables triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-builds-build.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  builds:\n  - build: Spaceworkz\n    type: Jenkins\n    connection: MyJenkinsServer \n    source: SpaceworkzProj   # name of the jenkins source project\n    trigger: true\n```\n\n----------------------------------------\n\nTITLE: Defining Implicit FTPS Option\nDESCRIPTION: Indicates if implicit FTPS is to be used for the FTP connection. It defaults to false, but can be set based on security requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"implicitFTPS\"::: -->\n:::moniker range=\">=azure-pipelines-2022.2\"\n\n**`implicitFTPS`** - **Use implicit FTPS**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining getPackage Step in Azure Pipelines YAML (2022+)\nDESCRIPTION: YAML schema for defining a getPackage step in Azure Pipelines 2022 and later versions. This step downloads a package from a package management feed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-get-package.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- getPackage: string # Required as first property. Alias of the package resource.\n  path: string # Path to download the package into.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: Setting Code Coverage Tool in Azure Pipelines YAML\nDESCRIPTION: Selects the code coverage tool (None, Cobertura, or JaCoCo) and configures related options like class file directories and filters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ncodeCoverageToolOptions: 'JaCoCo'\ncodeCoverageClassFilesDirectories: 'target/classes,target/testClasses'\ncodeCoverageClassFilter: '+:com.*,-:my.app.*'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ant Build File in Azure Pipelines YAML\nDESCRIPTION: Specifies the relative path from the repository root to the Ant build file. Default is build.xml.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbuildFile: 'build.xml'\n```\n\n----------------------------------------\n\nTITLE: Enabling Pipeline Resource Trigger in Azure DevOps YAML\nDESCRIPTION: Demonstrates how to enable a pipeline resource trigger using 'trigger: true' syntax. This configuration will trigger a run when any run of the referenced pipeline completes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger: true\n```\n\n----------------------------------------\n\nTITLE: Defining SourcePath Input for Azure File Copy Task\nDESCRIPTION: Specifies the required SourcePath input for the Azure File Copy task, which defines the source folder or file to copy from.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\"SourcePath\": - **Source**\n`string`. Required.\nSpecify the absolute path to the source folder, file on the local machine, or a UNC share. The specified value or expression should return either a single folder name or a file name.\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Jobs in Azure Pipelines 2020.1\nDESCRIPTION: YAML schema for defining deployment jobs in Azure Pipelines 2020.1. This structure includes most of the same properties as later versions but lacks the templateContext property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment: string # Required as first property. Name of the deployment job, A-Z, a-z, 0-9, and underscore. The word deploy is a keyword and is unsupported as the deployment name.\n  displayName: string # Human-readable name for the deployment.\n  dependsOn: string | [ string ] # Any jobs which must complete before this one.\n  condition: string # Evaluate this condition expression to determine whether to run this deployment.\n  continueOnError: string # Continue running even on failure?\n  timeoutInMinutes: string # Time to wait for this job to complete before the server kills it.\n  cancelTimeoutInMinutes: string # Time to wait for the job to cancel before forcibly terminating it.\n  variables: variables | [ variable ] # Deployment-specific variables.\n  pool: string | pool # Pool where this job will run.\n  environment: string | environment # Target environment name and optionally a resource name to record the deployment history; format: environment-name.resource-name.\n  strategy: strategy # Execution strategy for this deployment.\n  workspace: # Workspace options on the agent.\n    clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\n  uses: # Any resources required by this job that are not already referenced.\n    repositories: [ string ] # Repository references.\n    pools: [ string ] # Pool references.\n  container: string | container # Container resource name.\n  services: # Container resources to run as a service container.\n    string: string # Name/value pairs\n```\n\n----------------------------------------\n\nTITLE: Output Variables Definition\nDESCRIPTION: Defines the output variable `AppServiceApplicationUrl` which represents the application URL of the selected App Service. This variable can be consumed in downstream steps, jobs, and stages within an Azure Pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_33\n\nLANGUAGE: text\nCODE:\n```\n\"**`AppServiceApplicationUrl`**<br><!-- :::editable-content name=\\\"Value\\\"::: -->\nApplication URL of the selected App Service.\n<!-- :::editable-content-end::: -->\"\n```\n\n----------------------------------------\n\nTITLE: Parallel Strategy Example\nDESCRIPTION: Example showing how to configure a job to run multiple parallel instances.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-job-strategy.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- job: SliceItFourWays\n  strategy:\n    parallel: 4\n```\n\n----------------------------------------\n\nTITLE: Shortened Target Syntax for Bash Step\nDESCRIPTION: Simplified syntax for specifying a target environment for bash script execution. This can be used to run the script in a container or on the host.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-bash.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- bash:\n  target: string  # container name or the word 'host'\n```\n\n----------------------------------------\n\nTITLE: Defining Stage Template Structure in Azure Pipelines YAML\nDESCRIPTION: Basic structure for defining a stage template in Azure Pipelines YAML. It includes the required 'template' property and optional 'parameters'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages-template.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstages:\n- template: string # Required as first property. Reference to a template for this stage.\n  parameters: # Parameters used in a stage template.\n```\n\n----------------------------------------\n\nTITLE: Installing Java from Azure Storage\nDESCRIPTION: Configures Java Tool Installer to download and install Java version 6 from an Azure Storage blob using an Azure Resource Manager service connection\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: JavaToolInstaller@1\n  inputs:\n    versionSpec: '6'\n    jdkArchitectureOption: 'x64'\n    jdkSourceOption: AzureStorage\n    azureResourceManagerEndpoint: myARMServiceConnection\n    azureStorageAccountName: myAzureStorageAccountName\n    azureContainerName: myAzureStorageContainerName\n    azureCommonVirtualFile: 'jdk1.6.0_45.zip'\n    jdkDestinationDirectory: '$(agent.toolsDirectory)/jdk6'\n    cleanDestinationDirectory: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription for DotNetCoreCLI Task\nDESCRIPTION: Specifies an Azure Resource Manager service connection with workload identity federation to use AzurePipelinesCredential in integration tests.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure MySQL Deployment Task in YAML\nDESCRIPTION: Defines the YAML structure for configuring the AzureMysqlDeployment@1 task. Includes required inputs for Azure subscription, server details, and SQL credentials, as well as optional settings for specifying the deployment package and firewall rules.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-mysql-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Database for MySQL deployment v1\n# Run your scripts and make changes to your Azure Database for MySQL.\n- task: AzureMysqlDeployment@1\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure Subscription. \n  # DB Details\n    ServerName: # string. Required. Host Name. \n    #DatabaseName: # string. Database Name. \n    SqlUsername: # string. Required. Server Admin Login. \n    SqlPassword: # string. Required. Password. \n  # Deployment Package\n    #TaskNameSelector: 'SqlTaskFile' # 'SqlTaskFile' | 'InlineSqlTask'. Type. Default: SqlTaskFile.\n    SqlFile: # string. Required when TaskNameSelector = SqlTaskFile. MySQL Script. \n    #SqlInline: # string. Required when TaskNameSelector = InlineSqlTask. Inline MySQL Script. \n    #SqlAdditionalArguments: # string. Additional MySQL Arguments. \n  # Firewall\n    IpDetectionMethod: 'AutoDetect' # 'AutoDetect' | 'IPAddressRange'. Required. Specify Firewall Rules Using. Default: AutoDetect.\n    #StartIpAddress: # string. Required when IpDetectionMethod = IPAddressRange. Start IP Address. \n    #EndIpAddress: # string. Required when IpDetectionMethod = IPAddressRange. End IP Address. \n    #DeleteFirewallRule: true # boolean. Delete Rule After Task Ends. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Configuring Project Paths for DotNetCoreCLI Task\nDESCRIPTION: Specifies the path to .csproj or .sln file(s) to use. Supports wildcards for multiple files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nprojects: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Setting Root Directory for FTP Uploads\nDESCRIPTION: Defines the source folder from which files will be uploaded to the FTP server. It is marked as required for the function.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"rootDirectory\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`rootDirectory`** - **Root folder**<br>\n[Input alias](index.md#what-are-task-input-aliases): `rootFolder`. `string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the source folder to upload files from.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Pipelines Task Requirements in Markdown\nDESCRIPTION: This snippet defines the requirements for an Azure Pipelines task using a markdown table. It includes information about supported pipeline types, agent requirements, and task-specific details.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  1.102.0 or greater |\n| Task category | Deploy |\n```\n\n----------------------------------------\n\nTITLE: MSBuild Location Method Selection\nDESCRIPTION: This snippet defines the `msbuildLocationMethod` input parameter for the MSBuild task, allowing users to choose between specifying an MSBuild version or providing a custom path. It defaults to using the version selection method.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`msbuildLocationMethod`** - **MSBuild**<br>\n`string`. Allowed values: `version`, `location` (Specify Location). Default value: `version`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Multi-line Include List Example in YAML\nDESCRIPTION: Example showing how to specify multiple items in an include list using multi-line format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-filters.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ninclude:\n- item1\n- item2\n```\n\n----------------------------------------\n\nTITLE: Setting Web.config Parameters for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `WebConfigParameters` parameter. This parameter allows the user to edit values like startup files in the generated `web.config` file. It is required when `GenerateWebConfig` is set to `true`, and the app kind is not Linux-based and the package is not a .war file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_12\n\nLANGUAGE: none\nCODE:\n```\n**`WebConfigParameters`** - **Web.config parameters**<br>\n`string`. Required when `GenerateWebConfig == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\" && Package NotEndsWith .war`.\n```\n\n----------------------------------------\n\nTITLE: Defining Output Variables in Azure Pipelines YAML\nDESCRIPTION: This snippet shows that there are no output variables for the current moniker range in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/packer-build-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n:::moniker range=\"<=azure-pipelines\"\n\nNone.\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Defining Jenkins Job Type Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `jenkinsJobType` allows automatic specification of the Jenkins job type when an invalid job name is provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"jenkinsJobType\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`jenkinsJobType`** - **Jenkins job type**<br>\n`string`. Optional. Use when `jobName = invalidjobName`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nAutomatically specifies the Jenkins job type.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Azure PowerShell Task Configuration (2020)\nDESCRIPTION: Basic YAML configuration for Azure PowerShell task version 4. Provides core functionality for running PowerShell scripts in Azure with version control and basic error handling.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-powershell-v4.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Azure PowerShell v4\n# Run a PowerShell script within an Azure environment.\n- task: AzurePowerShell@4\n  inputs:\n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.\n    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. \n    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. \n    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.\n    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.\n    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. \n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Defining ServerNameIndication Parameter\nDESCRIPTION: A boolean parameter that specifies if server name indication is required for HTTPS connections. Default is 'false'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"ServerNameIndication\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`ServerNameIndication`** - **Server Name Indication Required**<br>\n`boolean`. Optional. Use when `Protocol = https`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\n\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Defining Include Latest Tag Input for Azure Pipelines\nDESCRIPTION: This snippet describes the `includeLatestTag` input, determining whether to include the *latest* tag when building or pushing the Docker image. This optional boolean parameter defaults to false.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"includeLatestTag\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`includeLatestTag`** - **Include Latest Tag**<br>\n`boolean`. Optional. Use when `action = Build an image || action = Push an image || action = Push images`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies whether to include the *latest* tag when building or pushing the Docker image.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Specifying ARM Template in YAML\nDESCRIPTION: Defines the path to the Azure Resource Manager template file. Required when creating or updating a resource group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ncsmFile: 'path/to/azuredeploy.json'\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkout Step in Azure Pipelines 2022.1-2022.2\nDESCRIPTION: YAML schema for configuring repository checkout in Azure Pipelines versions 2022.1-2022.2. Includes support for fetch tags but lacks some newer features.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: string # Required as first property. Configures checkout for the specified repository.\n  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.\n  fetchDepth: string # Depth of Git graph to fetch.\n  fetchTags: string # Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.\n  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.\n  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.\n  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.\n  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n  retryCountOnTaskFailure: string # Number of retries if the task fails.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Minor Version Configuration\nDESCRIPTION: This snippet defines the `minorVersion` parameter when using `versioningScheme = byPrereleaseNumber` and `command = pack`. It determines the 'Y' value in the SemVer version X.Y.Z.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n\"**`minorVersion`** - **Minor**<br>\n[Input alias](index.md#what-are-task-input-aliases): `requestedMinorVersion`. `string`. Required when `versioningScheme = byPrereleaseNumber && command = pack`. Default value: `0`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring iOS App Packaging\nDESCRIPTION: Setting to determine whether an IPA app package file should be generated as part of the build process.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npackageApp: false\n```\n\n----------------------------------------\n\nTITLE: Defining DockerRepository Input for Containerized Web Apps\nDESCRIPTION: This snippet defines the `DockerRepository` input, which is required when `WebAppKind` is one of the containerized web app types. It specifies the name of the repository where the container images are stored.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`DockerRepository`** - **Image**<br>\n`string`. Required when `WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = webAppHyperVContainer`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe name of the repository where the container images are stored. Note: The fully qualified image name will be of the format: `{registry or namespace}/{repository}:{tag}`. For example, `myregistry.azurecr.io/nginx:latest`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Source Path Configuration\nDESCRIPTION: Defines the source location path parameter for the file copy task. Supports system variables and wildcard patterns.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nSourcePath:\n  type: string\n  required: true\n```\n\n----------------------------------------\n\nTITLE: Azure VM Admin Credentials Configuration\nDESCRIPTION: Sets up administrative access credentials for target Azure VMs including username and password.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v4.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvmsAdminUserName:\n  string. Required when Destination = AzureVMs\n  Formats: username, domain\\username, machine-name\\username, .\\username\n\nvmsAdminPassword:\n  string. Required when Destination = AzureVMs\n```\n\n----------------------------------------\n\nTITLE: Configuring Mobile Center Test Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows how to configure the VSMobileCenterTest@0 task in an Azure Pipelines build. It includes all available input parameters with their descriptions and default values where applicable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/vsmobile-center-test-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Mobile Center Test v0\n# Test mobile app packages with Visual Studio Mobile Center.\n- task: VSMobileCenterTest@0\n  inputs:\n    app: # string. Required. Binary Application File Path. \n    artifactsDir: '$(Build.ArtifactStagingDirectory)/MobileCenterTest' # string. Required. Artifacts Directory. Default: $(Build.ArtifactStagingDirectory)/MobileCenterTest.\n  # Prepare Tests\n    #enablePrepare: true # boolean. Prepare Tests. Default: true.\n    framework: 'appium' # 'appium' | 'espresso' | 'calabash' | 'uitest' | 'xcuitest'. Required when enablePrepare = true. Test Framework. Default: appium.\n    #appiumBuildDir: # string. Required when enablePrepare = true && framework = appium. Build Directory. \n    #espressoBuildDir: # string. Optional. Use when enablePrepare = true && framework = espresso. Build Directory. \n    #espressoTestApkPath: # string. Optional. Use when enablePrepare = true && framework = espresso. Test APK Path. \n    #calabashProjectDir: # string. Required when enablePrepare = true && framework = calabash. Project Directory. \n    #calabashConfigFile: # string. Optional. Use when enablePrepare = true && framework = calabash. Cucumber Config File. \n    #calabashProfile: # string. Optional. Use when enablePrepare = true && framework = calabash. Profile to run. \n    #calabashSkipConfigCheck: false # boolean. Optional. Use when enablePrepare = true && framework = calabash. Skip Configuration Check. Default: false.\n    #uitestBuildDir: # string. Required when enablePrepare = true && framework = uitest. Build Directory. \n    #uitestStoreFile: # string. Optional. Use when enablePrepare = true && framework = uitest. Store File. \n    #uitestStorePass: # string. Optional. Use when enablePrepare = true && framework = uitest. Store Password. \n    #uitestKeyAlias: # string. Optional. Use when enablePrepare = true && framework = uitest. Key Alias. \n    #uitestKeyPass: # string. Optional. Use when enablePrepare = true && framework = uitest. Key Password. \n    #uitestToolsDir: # string. Optional. Use when enablePrepare = true && framework = uitest. Test Tools Directory. \n    #signInfo: # string. Optional. Use when framework = calabash || framework = uitest. Signing Information. \n    #xcuitestBuildDir: # string. Optional. Use when enablePrepare = true && framework = xcuitest. Build Directory. \n    #xcuitestTestIpaPath: # string. Optional. Use when enablePrepare = true && framework = xcuitest. Test IPA Path. \n    #prepareOpts: # string. Optional. Use when enablePrepare = true. Additional Options. \n  # Run Tests\n    #enableRun: true # boolean. Run Tests. Default: true.\n    credsType: 'serviceEndpoint' # 'serviceEndpoint' | 'inputs'. Required when enableRun = true. Authentication Method. Default: serviceEndpoint.\n    #serverEndpoint: # string. Required when enableRun = true && credsType = serviceEndpoint. Mobile Center Connection. \n    #username: # string. Required when enableRun = true && credsType = inputs. Mobile Center Username. \n    #password: # string. Required when enableRun = true && credsType = inputs. Mobile Center Password. \n    appSlug: # string. Required when enableRun = true. App Slug. \n    devices: # string. Required when enableRun = true. Devices. \n    #series: 'master' # string. Optional. Use when enableRun = true. Test Series. Default: master.\n    #dsymDir: # string. Optional. Use when enableRun = true. dSYM Directory. \n    locale: 'en_US' # 'da_DK' | 'nl_NL' | 'en_GB' | 'en_US' | 'fr_FR' | 'de_DE' | 'ja_JP' | 'ru_RU' | 'es_MX' | 'es_ES' | 'user'. Required when enableRun = true. System Language. Default: en_US.\n    #userDefinedLocale: # string. Optional. Use when enableRun = true && locale = user. Other Locale. \n    #loginOpts: # string. Optional. Use when enableRun = true && credsType = inputs. Addtional Options for Login. \n    #runOpts: # string. Optional. Use when enableRun = true. Additional Options for Run. \n    #async: false # boolean. Optional. Use when enableRun = true. Do not wait for test result. Default: false.\n  # Advanced\n    #cliLocationOverride: # string. mobile-center CLI Location. \n    #debug: false # boolean. Enable Debug Output. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Simplified Environment Syntax with Resource in YAML Pipeline\nDESCRIPTION: Shortened syntax example for specifying an environment with a resource without additional properties, using the string format for environment reference.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-environment.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment: environmentName.resourceName\nstrategy:         # deployment strategy\n  runOnce:        # default strategy\n    deploy:\n      steps:\n      - script: echo Hello world\n```\n\n----------------------------------------\n\nTITLE: Deploying Azure Functions on Windows with YAML\nDESCRIPTION: Sample YAML snippet that deploys Azure functions on Windows using the AzureFunctionApp task. It specifies the Azure subscription, function app name, app type, and package location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-function-app-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nvariables:\n  azureSubscription: Contoso\n  # To ignore SSL error, uncomment the below variable\n  # VSTS_ARM_REST_IGNORE_SSL_ERRORS: true\n\nsteps:\n- task: AzureFunctionApp@1\n  displayName: Azure Function App Deploy\n  inputs:\n    azureSubscription: $(azureSubscription)\n    appName: samplefunctionapp\n    appType: functionApp\n    package: $(System.DefaultWorkingDirectory)/**/*.zip\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Cloud Service Deployment in YAML\nDESCRIPTION: YAML syntax for the AzureCloudPowerShellDeployment@2 task, which deploys an Azure Cloud Service. This snippet shows all available inputs for the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Cloud Service deployment v2\n# Deploy an Azure Cloud Service.\n- task: AzureCloudPowerShellDeployment@2\n  inputs:\n    ARMConnectedServiceName: # string. Required. Azure subscription (ARM). \n    ResourceGroupName: # string. Required. Resource group. \n    ARMStorageAccount: # string. Required. Storage account (ARM). \n    ServiceName: # string. Required. Service name. \n    ServiceLocation: # string. Required. Service location. \n    CsCfg: # string. Required. CsCfg. \n    CsDef: # string. Required. CsDef. \n    CsPkg: # string. Required. CsPkg. \n    #KeyVault: # string. Azure KeyVault. \n    #DeploymentLabel: '$(Build.BuildNumber)' # string. Deployment label. Default: $(Build.BuildNumber).\n    #AppendDateTimeToLabel: false # boolean. Append current date and time. Default: false.\n    #UpgradeMode: 'Auto' # string. Update mode for the cloud service. Default: Auto.\n    #AllowUpgrade: true # boolean. Allow upgrade. Default: true.\n    #VerifyRoleInstanceStatus: false # boolean. Verify role instance status. Default: false.\n  # Advanced Options For Creating New Service\n    #DiagnosticStorageAccountKeys: # string. Diagnostic storage account keys.\n```\n\n----------------------------------------\n\nTITLE: Defining Credentials Option for FTP\nDESCRIPTION: Specifies the authentication method for connecting to the FTP server. It allows for either a service endpoint (FTP service connection) or direct credential input, determining how the connection is authenticated.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"credentialsOption\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`credentialsOption`** - **Authentication Method**<br>\n[Input alias](index.md#what-are-task-input-aliases): `credsType`. `string`. Required. Allowed values: `serviceEndpoint` (FTP service connection), `inputs` (Enter credentials). Default value: `serviceEndpoint`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the authentication method. Use an FTP service connection or enter the connection credentials.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Pip Authenticate Task in YAML\nDESCRIPTION: This YAML snippet defines the `PipAuthenticate@0` task, specifying its purpose as authentication for the pip client used to install Python distributions. The task takes inputs for specifying artifact feeds and external feeds to authenticate against.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Python pip authenticate v0\n# Authentication task for the pip client used for installing Python distributions.\n- task: PipAuthenticate@0\n  inputs:\n  # Feeds and Authentication\n    #artifactFeeds: # string. Alias: feedList. My feeds (select below). \n    #externalFeeds: # string. Alias: externalSources. Feeds from external organizations.\n```\n```\n\n----------------------------------------\n\nTITLE: Helm Release Configuration Parameters\nDESCRIPTION: Schema for configuring release-specific parameters like version, name and value overrides for Helm chart deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nchartVersion: # (Optional)\n  type: string\nreleaseName: # (Optional)\n  type: string\noverrideValues: # (Optional)\n  type: string\nvalueFile: # (Optional)\n  type: string\n```\n\n----------------------------------------\n\nTITLE: Configuring Packer Build Task in Azure Pipelines YAML\nDESCRIPTION: Example YAML snippet showing configuration of the Packer Build task. It demonstrates setting the skipTempFileCleanupDuringVMDeprovision option and specifying Packer version for custom templates.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/packer-build-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PackerBuild@1\n  inputs:\n    templateType: 'builtin'\n    skipTempFileCleanupDuringVMDeprovision: true\n    packerVersion: '1.7.2'\n    imageUri: '$(imageUrl)'\n    imageId: '$(imageResourceId)'\n```\n\n----------------------------------------\n\nTITLE: Download Type Specification for Artifact Retrieval in Azure Pipelines\nDESCRIPTION: Defines the input parameter `downloadType` to specify whether a single specific artifact or specific files should be downloaded. This input parameter is required.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"downloadType\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`downloadType`** - **Download type**<br>\n`string`. Required. Allowed values: `single` (Specific artifact), `specific` (Specific files). Default value: `single`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDownloads a specific artifact or specific files from the build.\n\n* Choose `single` (Specific artifact) when you want only one specific artifact specified by `artifactName`\n* Choose `specific` (Specific files) when you want all artifacts of the selected build\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring enableCopyPrerequisites for Azure File Copy Task\nDESCRIPTION: Enables using a self-signed certificate for WinRM listener on port 5986 instead of HTTPS. Required for copy operations on Azure VMs with ARM. Configures inbound NAT rules if using a load balancer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nenableCopyPrerequisites: false\n```\n\n----------------------------------------\n\nTITLE: REST API Endpoint for Task Completion\nDESCRIPTION: HTTP endpoint specification for signaling task completion to Azure Pipelines. Used by external services to post completion data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n{planUri}/{projectId}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/events?api-version=2.0-preview.1\n```\n\n----------------------------------------\n\nTITLE: Configuring AzureFileCopy Task for Copying Files\nDESCRIPTION: This YAML snippet configures the AzureFileCopy task to copy a file from a specified source path to an Azure Blob storage container, utilizing an Azure subscription for authorization. It defines necessary inputs such as source path, destination, and associated Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v4.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureFileCopy@4\n  inputs:\n    SourcePath: 'Readme.md'\n    azureSubscription: 'Azure'\n    Destination: 'AzureBlob'\n    storage: 'storageAccount'\n    ContainerName: 'containerName'\n    BlobPrefix: ''\n  name: AzureFileCopy\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- script: | \n    echo $(AzureFileCopy.StorageContainerUri)\n    echo $(AzureFileCopy.StorageContainerSasToken)\n```\n\n----------------------------------------\n\nTITLE: Defining RuntimeStack Input for Azure Web App Deployment\nDESCRIPTION: This snippet defines the `RuntimeStack` input. The full description of this input is not provided in the context, but this title and description serve as a placeholder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`RuntimeStack`** - **Runtime Stack**<br>\n\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Spring Apps Instance for Deployment\nDESCRIPTION: Sets the name or resource ID of the Azure Spring Apps instance to deploy. This is a required string input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-spring-cloud-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nAzureSpringCloud: \"<Azure Spring Apps instance name or resource ID>\"\n```\n\n----------------------------------------\n\nTITLE: Simple RunOnce Deployment Strategy Example\nDESCRIPTION: Basic example showing a deployment job using the runOnce strategy that targets an environment. This example includes a checkout step and records deployment history against the specified environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/jobs-deployment-strategy-run-once.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  # Track deployments on the environment.\n- deployment: DeployWeb\n  displayName: deploy Web App\n  pool:\n    vmImage: ubuntu-latest\n  # Creates an environment if it doesn't exist.\n  environment: 'smarthotel-dev'\n  strategy:\n    runOnce:\n      deploy:\n        steps:\n        - checkout: self \n        - script: echo my first deployment\n```\n\n----------------------------------------\n\nTITLE: Configuring JDK Architecture for Maven Task\nDESCRIPTION: This property allows specifying the JDK architecture (`x86` or `x64`) for the Maven task. It's applicable when a specific `jdkVersion` (other than `default`) is selected. The default value is `x64`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n\n**`jdkArchitectureOption`** - **JDK architecture**<br>\n[Input alias](index.md#what-are-task-input-aliases): `jdkArchitecture`. `string`. Optional. Use when `jdkVersion != default`. Allowed values: `x86`, `x64`. Default value: `x64`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSupplies the architecture (`x86`, `x64`) of the JDK.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Setting Configuration Settings for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `ConfigurationSettings` parameter, used to edit web app configuration settings. Values containing spaces must be enclosed in double quotes. Examples show how to set the PHP version and LinuxFxVersion.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_14\n\nLANGUAGE: none\nCODE:\n```\n**`ConfigurationSettings`** - **Configuration settings**<br>\n`string`.\n```\n\n----------------------------------------\n\nTITLE: Specifying Gradle Wrapper File Location\nDESCRIPTION: Configuration option to specify the location of the Gradle wrapper script within the repository. Windows agents require gradlew.bat while Linux/macOS agents use the gradlew shell script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ngradleWrapperFile: \"gradlew\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache (Beta) v1 Task in YAML\nDESCRIPTION: YAML configuration for the Cache (Beta) v1 task. This task caches files between runs to improve build performance. Required inputs include 'key' and 'path', with optional inputs for 'cacheHitVar' and 'restoreKeys'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/cache-beta-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Cache (Beta) v1\n# Cache files between runs.\n- task: CacheBeta@1\n  inputs:\n    key: # string. Required. Key. \n    path: # string. Required. Path. \n    #cacheHitVar: # string. Cache hit variable. \n    #restoreKeys: # string. Additional restore key prefixes.\n```\n\n----------------------------------------\n\nTITLE: Choosing Docker Registry Service Connection\nDESCRIPTION: Allows users to select a Docker registry service connection necessary for commands that require authentication with a registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"dockerRegistryConnection\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`dockerRegistryConnection`** - **Docker Registry service connection**<br>\n[Input alias](index.md#what-are-task-input-aliases): `dockerRegistryEndpoint`. `string`. Optional. Use when `secretType = dockerRegistry && containerRegistryType = Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSelect a Docker registry service connection. Required for commands that need to authenticate with a registry.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Installing Duffle Tool\nDESCRIPTION: The code snippet represents the syntax required to install a specific version of Duffle through Azure Pipelines. It details the mandatory inputs for specifying the version of Duffle and an optional parameter for checking the latest version available.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/duffle-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DuffleInstaller@0\n  inputs:\n    version: '0.1.0-ralpha.4+dramallamabuie' # string. Required. Version. Default: 0.1.0-ralpha.4+dramallamabuie.\n    #checkLatestVersion: false # boolean. Check for latest version. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Setting FailureAction in Azure Pipelines\nDESCRIPTION: This code outlines how to define the 'FailureAction' behavior during an upgrade in an Azure pipeline. It requires a string value when certain conditions are met, enforcing rollback or manual interventions as valid choices. This shows dependencies on upgrade modes and publish profiles.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n**`FailureAction`** - **FailureAction**  \n`string`. Required when `overridePublishProfileSettings = true && isUpgrade = true && upgradeMode = Monitored`. Allowed values: `Rollback`, `Manual`. Default value: `Rollback`.\n```\n\n----------------------------------------\n\nTITLE: Defining Destination Type Input for Azure File Copy Task in YAML\nDESCRIPTION: Defines the Destination input parameter for specifying whether to copy files to Azure Blob storage or Azure VMs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v6.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nDestination:\n  type: string\n  required: true\n  allowed:\n    - AzureBlob\n    - AzureVMs\n  helpMarkDown: Specify the destination type.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription Input\nDESCRIPTION: Defines the Azure subscription service connection for resource deployment and management operations. This input is required and provides the context for all subsequent actions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription: string (required)\n```\n\n----------------------------------------\n\nTITLE: Example of Installing Latest Version of Kubectl\nDESCRIPTION: This YAML example illustrates the usage of the KubectlInstaller@0 task to install the latest version of Kubectl on the agent. It sets the input parameter kubectlVersion to 'latest'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubectl-installer-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: KubectlInstaller@0\n  displayName: Kubectl installer\n  inputs: \n    kubectlVersion: latest\n```\n\n----------------------------------------\n\nTITLE: Kubectl Delete Command Arguments\nDESCRIPTION: Example showing how to specify arguments for the kubectl delete command to remove Kubernetes resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\narguments: deployment hello-world foo-bar\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure File Copy Task v3 in YAML Pipeline\nDESCRIPTION: Complete YAML configuration schema for Azure File Copy task version 3, showing all possible parameters for copying files to Azure Blob Storage or virtual machines. Includes required fields like source path, subscription, destination type, and storage account, as well as optional parameters for container names, blob prefixes, VM credentials, and copy settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure file copy v3\n# Copy files to Azure Blob Storage or virtual machines.\n- task: AzureFileCopy@3\n  inputs:\n    SourcePath: # string. Required. Source. \n    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. \n    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. \n    storage: # string. Alias: StorageAccountRM. Required. RM Storage Account. \n    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. \n    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. \n    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when Destination = AzureVMs. Resource Group. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. \n    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. \n    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. \n    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. \n    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). \n    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). \n    #enableCopyPrerequisites: false # boolean. Optional. Use when Destination = AzureVMs. Enable Copy Prerequisites. Default: false.\n    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.\n    #CleanTargetBeforeCopy: false # boolean. Optional. Use when Destination = AzureVMs. Clean Target. Default: false.\n    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.\n  # Output\n    #outputStorageUri: # string. Storage Container URI. \n    #outputStorageContainerSasToken: # string. Storage Container SAS Token. \n    #sasTokenTimeOutInMinutes: # string. SAS Token Expiration Period In Minutes.\n```\n\n----------------------------------------\n\nTITLE: Defining downloadBuild Step in Azure Pipelines 2020.1 and earlier\nDESCRIPTION: YAML syntax for the downloadBuild step in Azure Pipelines 2020.1 and earlier versions. Similar to the newer versions but without the retryCountOnTaskFailure parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-download-build.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- downloadBuild: string # Required as first property. Alias of the build resource.\n  artifact: string # Artifact name.\n  path: string # Path to download the artifact into.\n  patterns: string # Downloads the files which matches the patterns.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Objects\nDESCRIPTION: Shows how to delete a Kubernetes deployment object.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Delete\n  inputs:\n    action: delete\n    arguments: deployment expressapp\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Scaling Kubernetes Deployment using YAML\nDESCRIPTION: This snippet demonstrates how to scale a Kubernetes deployment using the Kubernetes Manifest task. It specifies the deployment name and the desired number of replicas.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Scale\n  inputs: \n    action: scale\n    kind: deployment\n    name: bootcamp-demo\n    replicas: 5\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Clearing Remote Directory before Upload\nDESCRIPTION: Specifies whether to delete the remote directory and its contents before uploading files. Setting this option enables a clean upload environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"clean\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`clean`** - **Delete remote directory**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDeletes the remote directory, including its contents, before uploading.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Extracting Files from Tar Archives in Azure Pipelines\nDESCRIPTION: Defines the boolean input parameter `extractTars` to determine whether to extract files from downloaded tar archives. Set to true to enable extraction.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"extractTars\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`extractTars`** - **Extract all files that are stored inside tar archives**<br>\n`boolean`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSet to `true` to extract all downloaded files that have the **.tar** extension. This is helpful because you need to pack your artifact files into tar if you want to preserve Unix file permissions. Enabling the `StoreAsTar` option in the [Publish build artifacts](publish-build-artifacts-v1.md) task will store artifacts as **.tar** files automatically.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Example Directory Structure for Python 3.11.4\nDESCRIPTION: This snippet illustrates a concrete example of how the directory structure should appear after downloading Python version 3.11.4 for the x64 platform. It serves as a guide for proper organization in the tool cache.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/use-python-version-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$AGENT_TOOLSDIRECTORY/\n    Python/\n        3.11.4/\n            x64/\n                {tool files}\n            x64.complete\n```\n\n----------------------------------------\n\nTITLE: Complete Example of Manual Validation Task with Timeout Configuration\nDESCRIPTION: This example demonstrates a complete implementation of the ManualValidation task within a server job, including timeouts at both the job and task level, email notifications, and instructions for validators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/manual-validation-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  jobs:\n  - job: waitForValidation\n    displayName: Wait for external validation\n    pool: server\n    timeoutInMinutes: 4320 # job times out in 3 days\n    steps:\n    - task: ManualValidation@0\n      timeoutInMinutes: 1440 # task times out in 1 day\n      inputs:\n        notifyUsers: |\n          test@test.com\n          example@example.com\n        instructions: 'Please validate the build configuration and resume'\n        onTimeout: 'resume'\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Requirements Table in Markdown\nDESCRIPTION: Markdown table defining requirements for Azure Pipelines, including pipeline types, execution environment, demands, capabilities, and agent specifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.144.0 or greater |\n| Task category | Utility |\n```\n\n----------------------------------------\n\nTITLE: KubeloginInstaller with Explicit Version Specification\nDESCRIPTION: Example showing how to use the KubeloginInstaller task with an explicitly specified kubelogin version, either using 'latest' or a specific version number.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubelogin-installer-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: KubeloginInstaller@0\n  inputs:\n    kubeloginVersion: 'latest' # or a specific version like '0.0.30'\n```\n\n----------------------------------------\n\nTITLE: Force Updating ConfigMap in Kubernetes\nDESCRIPTION: Determines whether to delete an existing ConfigMap and create a new one with updated values, defaulting to false indicating no automatic update.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"forceUpdateConfigMap\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`forceUpdateConfigMap`** - **Force update configmap**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDelete the configmap if it exists and create a new one with updated values.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: MSBuild Custom Path Specification\nDESCRIPTION: This snippet describes the `msbuildLocation` parameter, which allows specifying a custom path to the MSBuild executable. It is used when `msbuildLocationMethod` is set to `location`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`msbuildLocation`** - **Path to MSBuild**<br>\n`string`. Optional. Use when `msbuildLocationMethod = location`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSupplies the path to MSBuild.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Accessing Repository Resource Variables in Azure DevOps YAML Pipelines\nDESCRIPTION: Available variables for accessing repository resource metadata. These variables include name, ref, type, id, and url of the repository resource, accessed using the repository alias.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-repositories-repository.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources.repositories.<Alias>.name\nresources.repositories.<Alias>.ref\nresources.repositories.<Alias>.type\nresources.repositories.<Alias>.id\nresources.repositories.<Alias>.url\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Destination Folder Configuration\nDESCRIPTION: This snippet describes the `packDestination` parameter for specifying the output folder where the NuGet packages are created during the `pack` command. It defaults to the `$(Build.ArtifactStagingDirectory)` if no value is provided.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n\"**`packDestination`** - **Package folder**<br>\n[Input alias](index.md#what-are-task-input-aliases): `outputDir`. `string`. Optional. Use when `command = pack`. Default value: `$(Build.ArtifactStagingDirectory)`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Basic Gradle Repository Structure\nDESCRIPTION: Shows the expected repository structure when using Gradle wrapper in a project, including required wrapper files and standard project layout.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n|-- gradle/\n    `-- wrapper/\n        `-- gradle-wrapper.jar\n        `-- gradle-wrapper.properties\n|-- src/\n|-- .gitignore\n|-- build.gradle\n|-- gradlew\n|-- gradlew.bat\n```\n\n----------------------------------------\n\nTITLE: Configuring FTP Upload Task with Credential Inputs\nDESCRIPTION: Shows how to configure the FtpUpload task by directly providing server URL, username, and password, with additional advanced options for file handling\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: FtpUpload@1\n  inputs:\n    credentialsOption: 'inputs'\n    serverUrl: 'ftp://example.com'\n    username: 'ftpuser'\n    password: 'password'\n    rootDirectory: './dist'\n    filePatterns: '**/*.js'\n    remoteDirectory: '/upload/'\n    overwrite: true\n    preservePaths: false\n```\n\n----------------------------------------\n\nTITLE: Project Specification for Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `project`, required when the `buildType` is set to `specific`, allowing the user to specify which project to download artifacts from.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"project\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`project`** - **Project**<br>\n`string`. Required when `buildType == specific`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe project from which to download the build artifacts.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Initialize Helm with Command `init` - YAML\nDESCRIPTION: Illustrates the initialization process of Helm using the `init` command in a YAML pipeline, with upgrade controller and waiting execution options specified. It should be noted that this command is deprecated in Helm 3.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n- task: HelmDeploy@0\n  displayName: Helm init\n  inputs:\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureResourceGroup: $(azureResourceGroup)\n    kubernetesCluster: $(kubernetesCluster)\n    command: init\n    upgradetiller: true\n    waitForExecution: true\n    arguments: --client-only\n```\n\n----------------------------------------\n\nTITLE: Naming the ConfigMap in Kubernetes\nDESCRIPTION: Specifies the name of the ConfigMap, which helps in managing configuration data for containerized applications in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"configMapName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`configMapName`** - **ConfigMap name**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nConfigMaps allow you to decouple configuration artifacts from image content to keep containerized applications portable.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Example of Installing Specific Version of Kubectl\nDESCRIPTION: This YAML example demonstrates using the KubectlInstaller@0 task to install a specific version of Kubectl, in this case '1.15.0'. It uses the displayName input for clarity.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubectl-installer-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: KubectlInstaller@0\n  displayName: Kubectl installer\n  inputs: \n    kubectlVersion: 1.15.0\n```\n\n----------------------------------------\n\nTITLE: Defining Action Input for Azure Pipelines\nDESCRIPTION: This snippet defines the `action` input, which specifies the Docker action to be performed. It is a required string parameter with potential values including 'Build an image', 'Tag images', 'Push an image', and more, defaulting to 'Build an image'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"action\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`action`** - **Action**<br>\n`string`. Required. Allowed values: `Build an image`, `Tag images`, `Push an image`, `Push images`, `Run an image`, `Run a Docker command`. Default value: `Build an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies a Docker action.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Disabling Pipeline Resource Trigger in Azure DevOps YAML\nDESCRIPTION: Shows how to disable a pipeline resource trigger by setting 'trigger: none'. This prevents the pipeline from being triggered by the referenced pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger: none\n```\n\n----------------------------------------\n\nTITLE: Writing Error and Failing Build in PowerShell Task\nDESCRIPTION: YAML configuration to write an error message and fail the build using a PowerShell task in an Azure DevOps pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    script: |\n      Write-Host \"##vso[task.LogIssue type=error;]This is the error\"\n      exit 1\n```\n\n----------------------------------------\n\nTITLE: Defining Arguments for Creating a Secret\nDESCRIPTION: Specifies the arguments to be included when creating or updating a Kubernetes secret, applicable when the secretType is set to generic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"secretArguments\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`secretArguments`** - **Arguments**<br>\n`string`. Optional. Use when `secretType = generic`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies keys and literal values to insert in secret. For example, `--from-literal=key1=value1` or `--from-literal=key2=\"top secret\"`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Canary Deployment Configuration Example\nDESCRIPTION: Example configuration showing replicas setup for canary deployment with pod-based traffic splitting\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nreplicas: 4\nstrategy: canary\npercentage: 25\n```\n\n----------------------------------------\n\nTITLE: Simplified Branch Inclusion for Pipeline Resource Trigger in Azure DevOps YAML\nDESCRIPTION: Demonstrates a simplified syntax for including specific branches in a pipeline resource trigger, without any exclusions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger:\n      branches:\n      - main\n      - develop\n```\n\n----------------------------------------\n\nTITLE: Allowing Partially Succeeded Builds for Artifact Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `allowPartiallySucceededBuilds`, an optional boolean input to allow downloading artifacts even from builds that have partially succeeded, applicable when specific build criteria are met.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"allowPartiallySucceededBuilds\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`allowPartiallySucceededBuilds`** - **Download artifacts even from partially succeeded builds.**<br>\n`boolean`. Optional. Use when `buildType == specific && buildVersionToDownload != specific`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf `true`, this build task tries to download artifacts whether the build succeeds or partially succeeds.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Docker Registry Connection Details in Azure Pipelines\nDESCRIPTION: The snippet highlights the conditions under which a Docker registry service connection is specified in Azure pipelines. It notes the required conditions and points to the necessity of encrypting the registry secret if the server certificate is installed on the agent machine, focusing on security prerequisites.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n**`dockerRegistryConnection`** - **Docker Registry Service Connection**  \n[Input alias](index.md#what-are-task-input-aliases): `dockerRegistryEndpoint`. `string`. Required when `configureDockerSettings = true && registryCredentials = ContainerRegistryEndpoint`.\n```\n\n----------------------------------------\n\nTITLE: Defining Deployment Method Parameter\nDESCRIPTION: Defines the `deploymentMethod` input parameter, which is required for app types other than webAppLinux, specifying the method for deploying the package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"deploymentMethod\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`deploymentMethod`** - **Deployment method**<br>\n`string`. Required when `appType != webAppLinux && appType != \"\" && package NotEndsWith .war && package NotEndsWith .jar`. Allowed values: `auto` (Auto-detect), `zipDeploy` (Zip Deploy), `runFromPackage` (Run From Package). Default value: `auto`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nChoose the [deployment method](/azure/devops/pipelines/tasks/deploy/azure-rm-web-app#deployment-methods) for the app. Acceptable values are **auto**, **zipDeploy**, and **runFromPackage**.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Xamarin Component Restore Task in YAML - Azure Pipelines - YAML\nDESCRIPTION: Defines the Xamarin Component Restore v0 task in YAML for Azure Pipelines. This task is responsible for restoring Xamarin components by specifying the solution file, email, and password. Note that it's deprecated and replaced by 'NuGet'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xamarin-component-restore-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: XamarinComponentRestore@0\n  inputs:\n    solutionFile: '**/*.sln' # string. Alias: solution. Required. Path to solution. Default: **/*.sln.\n    email: # string. Required. Email.\n    password: # string. Required. Password.\n```\n\n----------------------------------------\n\nTITLE: Configuring DotNetCoreCLI@1 Task in YAML\nDESCRIPTION: This YAML snippet shows how to configure the DotNetCoreCLI@1 task in an Azure Pipelines workflow. It includes the basic syntax and all available input parameters for the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# .NET Core v1\n# Build, test and publish using dotnet core command-line.\n- task: DotNetCoreCLI@1\n  inputs:\n    command: 'build' # 'build' | 'publish' | 'restore' | 'test' | 'run'. Required. Command. Default: build.\n    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish Web Projects. Default: true.\n    #projects: # string. Optional. Use when command != publish || publishWebProjects = false. Project(s). \n    #arguments: # string. Arguments. \n    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip Published Projects. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Defining Common Virtual Path Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `commonVirtualPath` specifies the path inside the Azure storage container where artifacts are stored. It is optional, used when artifacts are propagated.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"commonVirtualPath\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`commonVirtualPath`** - **Common Virtual Path**<br>\n`string`. Optional. Use when `propagatedArtifacts == true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the path to the artifacts inside the Azure storage container.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Deploy Folder Parameter\nDESCRIPTION: Defines the `customDeployFolder` optional parameter for specifying a custom folder name for deployment. It applies when the package ends with '.war'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"customDeployFolder\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`customDeployFolder`** - **Custom Deploy Folder**<br>\n`string`. Optional. Use when `package EndsWith .war`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the custom folder name you want to deploy to.  \nIf the field is empty, the package is deployed to `<appname>.azurewebsites.net/<warpackagename>`.  \nIf ROOT is entered, the package is deployed to `<appname>.azurewebsited.net`.  \nIn all other instances, it is deployed to `<appname>.azurewebsited.net/<customWarName>`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Deploy Container App with Custom Name and Resource Group\nDESCRIPTION: This example demonstrates deploying a Container App with both a custom name and a specific resource group. It creates a new Container App with the given name in the specified resource group, creating the group if necessary.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: AzureContainerApps@0\n  displayName: Build and deploy Container App\n  inputs:\n    connectedServiceNameARM: 'azure-subscription-service-connection'\n    appSourcePath: '$(System.DefaultWorkingDirectory)'\n    acrName: 'mytestacr'\n    containerAppName: 'my-test-container-app'\n    resourceGroup: 'my-test-rg'\n```\n\n----------------------------------------\n\nTITLE: Defining ResourceGroupName Input for Slot or ASE Deployment\nDESCRIPTION: This snippet defines the `ResourceGroupName` input, which is a required string when deploying to a slot or App Service Environment (`DeployToSlotOrASEFlag = true`). It specifies the Azure Resource Group that contains the Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`ResourceGroupName`** - **Resource group**<br>\n`string`. Required when `DeployToSlotOrASEFlag = true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe Resource group name is required when the deployment target is either a deployment slot or an App Service Environment.\n\nSpecify the Azure Resource group that contains the Azure App Service specified above.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Custom FTP Commands\nDESCRIPTION: An optional input to specify custom FTP commands that should be executed upon connecting to the FTP server. This allows for enhanced configuration beyond standard uploads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"customCmds\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`customCmds`** - **FTP Commands**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe optional FTP commands that will be sent to the remote FTP server upon connection.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Versioning Scheme Configuration\nDESCRIPTION: This snippet outlines the `versioningScheme` parameter for the NuGet `pack` command. It allows automatic package versioning based on different schemes such as prerelease number, environment variable, or build number, with `off` as the default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Required when `command = pack`. Allowed values: `off`, `byPrereleaseNumber` (Use the date and time), `byEnvVar` (Use an environment variable), `byBuildNumber` (Use the build number). Default value: `off`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle JVM Options\nDESCRIPTION: Configuration option to set the GRADLE_OPTS environment variable, which passes command-line arguments to the JVM running Gradle. Commonly used to set memory limits with -Xmx flag.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v4.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ngradleOptions: \"-Xmx1024m\"\n```\n\n----------------------------------------\n\nTITLE: Specifying proxy using command line flag\nDESCRIPTION: This YAML snippet shows how to specify a proxy for npm by using command line flags. The `npm ci` command includes the `--https-proxy` flag to configure npm to use the specified proxy URL when downloading dependencies.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/npm-authenticate-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n```YAML\n- script: npm ci --https-proxy $(agent.proxyurl)\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Resources in Azure DevOps 2020\nDESCRIPTION: YAML schema for defining pipeline resources in Azure DevOps 2020. This schema supports basic pipeline triggers with branches configuration but without stages and tags.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npipelines:\n- pipeline: string # Required as first property. ID of the pipeline resource.\n  project: string # Project for the source; defaults to current project.\n  source: string # Name of the pipeline that produces the artifact.\n  version: string # The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.\n  branch: string # Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.\n  tags: [ string ] # List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.\n  trigger:  # Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.\n    enabled: boolean # Whether the trigger is enabled; defaults to true.\n    branches: branches # Branches to include or exclude for triggering a run.\n```\n\n----------------------------------------\n\nTITLE: Specifying Test Assemblies in Azure Pipelines YAML\nDESCRIPTION: Defines the test binaries to run tests on. Supports wildcards for file matching.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsourcefilters: '**\\*test*.dll'\n```\n\n----------------------------------------\n\nTITLE: Enabling XML Variable Substitution with enableXmlVariableSubstitution\nDESCRIPTION: The `enableXmlVariableSubstitution` option enables the substitution of variables defined in the build or release pipeline into XML configuration files. This boolean parameter is optional and targets similar conditions as the XML Transform option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\nenableXmlVariableSubstitution: boolean  # Optional, default: false\n# Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\" && Package NotEndsWith .war.\n```\n\n----------------------------------------\n\nTITLE: Azure App Service Requirements Table in Markdown\nDESCRIPTION: Markdown table defining the requirements for Azure App Service deployment including pipeline types, agent specifications, demands, capabilities, and task categorization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-manage-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  1.102.0 or greater |\n| Task category | Deploy |\n```\n\n----------------------------------------\n\nTITLE: Connection Strings JSON Configuration Example\nDESCRIPTION: Example JSON structure for configuring connection strings in Azure App Service, showing how to set MySQL and Custom connection types with slot settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-settings-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n   {\n    \"name\": \"key1\",\n    \"value\": \"valueabcd\",\n    \"type\": \"MySql\",\n    \"slotSetting\": false\n   },\n   {\n    \"name\": \"key2\",\n    \"value\": \"valueefgh\",\n    \"type\": \"Custom\",\n    \"slotSetting\": true\n   }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating a GitHub Release with Conditional Execution\nDESCRIPTION: YAML configuration that creates a GitHub release only when triggered by a Git tag matching a specific pattern. This provides finer control over when releases are created in the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GithubRelease@1 \n  displayName: 'Create GitHub Release'   \n  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release-v')   \n  inputs:\n    gitHubConnection: zenithworks\n    repositoryName: zenithworks/javaAppWithMaven           \n    assets: $(Build.ArtifactStagingDirectory)/*.exe\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Registry Secret Names\nDESCRIPTION: Example showing how to specify Docker registry secret names for workload manifests under imagePullSecrets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsecrets: |\n  name-of-docker-registry-secret\n```\n\n----------------------------------------\n\nTITLE: Defining Packer Build Task Inputs in YAML\nDESCRIPTION: YAML snippet showing the structure and allowed values for inputs to a Packer build task. Includes options for template type, Azure subscription, image details, deployment package, and build parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/packer-build-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PackerBuild@1\n  inputs:\n    templateType: 'builtin' # Required. Allowed values: builtin, custom\n    customTemplateLocation: # Required when templateType = custom\n    customTemplateParameters: '{}' # Optional when templateType = custom\n    ConnectedServiceName: # Required when templateType = builtin\n    isManagedImage: true # Optional when templateType = builtin\n    managedImageName: # Required when isManagedImage = true && templateType = builtin\n    location: # Required when templateType = builtin\n    storageAccountName: # Required when templateType = builtin\n    azureResourceGroup: # Required when templateType = builtin\n    baseImageSource: 'default' # Required when templateType = builtin. Allowed values: default, customVhd\n    baseImage: 'MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:windows' # Required when baseImageSource = default && templateType = builtin\n    customImageUrl: # Required when baseImageSource = customVhd && templateType = builtin\n    customImageOSType: 'windows' # Required when baseImageSource = customVhd && templateType = builtin. Allowed values: windows, linux\n    packagePath: # Required when templateType = builtin\n    deployScriptPath: # Required when templateType = builtin\n    deployScriptArguments: # Optional when templateType = builtin\n    additionalBuilderParameters: '{\"vm_size\":\"Standard_D3_v2\"}' # Optional when templateType = builtin\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Container Registry\nDESCRIPTION: Contains the optional parameter for specifying an Azure Container Registry used for pulling images and deploying to a Kubernetes cluster when secretType is dockerRegistry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"azureContainerRegistry\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`azureContainerRegistry`** - **Azure Container Registry**<br>\n`string`. Optional. Use when `secretType = dockerRegistry && containerRegistryType = Azure Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies an Azure Container Registry which is used for pulling container images and deploying applications to the Kubernetes cluster. Required for commands that need to authenticate with a registry.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Installing Apple Certificate in Azure Pipelines (≤2020.1)\nDESCRIPTION: YAML configuration for the InstallAppleCertificate@2 task in Azure Pipelines 2020.1 and earlier. This version provides basic certificate installation options without the partition_id ACL functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-certificate-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Install Apple certificate v2\n# Install an Apple certificate required to build on a macOS agent machine.\n- task: InstallAppleCertificate@2\n  inputs:\n    certSecureFile: # string. Required. Certificate (P12). \n    #certPwd: # string. Certificate (P12) password. \n  # Advanced\n    keychain: 'temp' # 'default' | 'temp' | 'custom'. Required. Keychain. Default: temp.\n    #keychainPassword: # string. Required when keychain = custom || keychain = default. Keychain password. \n    #customKeychainPath: # string. Required when keychain = custom. Custom keychain path. \n    #deleteCert: # boolean. Optional. Use when keychain = custom || keychain = default. Delete certificate from keychain. \n    #deleteCustomKeychain: # boolean. Optional. Use when keychain = custom. Delete custom keychain. \n    #signingIdentity: # string. Certificate signing identity.\n```\n\n----------------------------------------\n\nTITLE: MSBuild NuGet Package Restore\nDESCRIPTION: This snippet marks the `restoreNugetPackages` parameter as deprecated, recommending the use of a dedicated NuGet task before the build task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`restoreNugetPackages`** - **Restore NuGet Packages**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThis option is deprecated. To restore NuGet packages, add a [NuGet](/azure/devops/pipelines/tasks/package/nuget) task before the build.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Secrets for Azure Load Testing Task\nDESCRIPTION: This snippet demonstrates how to configure secrets for the Azure Load Testing task using JSON syntax. It shows the format for specifying secret names and values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-load-test-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n   {\n    \"name\": \"key1\",\n    \"value\": $(secret1)\n   },\n   {\n    \"name\": \"key2\",\n    \"value\": $(secret2)\n   }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Runtime Stack for Azure Web App Deployment\nDESCRIPTION: This snippet details the `RuntimeStack` parameter, mandatory for specifying the framework and version used for web app deployments. This parameter is only required when `WebAppKind` is not one of `app`, `functionapp`, `api`, or `mobileapp` and `ImageSource` is set to `Builtin`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_5\n\nLANGUAGE: none\nCODE:\n```\n**`RuntimeStack`** - **Runtime Stack**<br>\n`string`. Required when `WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin`.\n```\n\n----------------------------------------\n\nTITLE: Defining WebSiteAuthUserPassword Parameter\nDESCRIPTION: Specifies the password for accessing the website's physical path. This is optional when 'WebSitePhysicalPathAuth' is set to 'WebSiteWindowsAuth'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebSiteAuthUserPassword\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebSiteAuthUserPassword`** - **Password**<br>\n`string`. Optional. Use when `WebSitePhysicalPathAuth = WebSiteWindowsAuth`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the password for accessing the website's physical path. If you are using a gMSA, this is not required.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Ignore Last Exit Code Example\nDESCRIPTION: Example demonstrating how to ignore the last exit code from a PowerShell script execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-powershell.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- powershell: git nosuchcommand\n  displayName: Ignore last exit code\n  ignoreLASTEXITCODE: true\n```\n\n----------------------------------------\n\nTITLE: Defining DockerNamespace Input for Containerized Web Apps\nDESCRIPTION: This snippet defines the `DockerNamespace` input, which is required when `WebAppKind` is one of the containerized web app types. It specifies the globally unique top-level domain name for the registry or namespace.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`DockerNamespace`** - **Registry or Namespace**<br>\n`string`. Required when `WebAppKind = webAppContainer || WebAppkind = functionAppContainer || WebAppKind = webAppHyperVContainer`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nA globally unique top-level domain name for your specific registry or namespace. Note: The fully qualified image name will be of the format: `{registry or namespace}/{repository}:{tag}`. For example, `myregistry.azurecr.io/nginx:latest`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Storage Account Name Input - Azure Pipelines - Markdown\nDESCRIPTION: The `storageAccountName` input specifies the name of the Azure storage account where artifacts are propagated. It is required when `propagatedArtifacts` is set to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"storageAccountName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`storageAccountName`** - **Storage Account Name**<br>\n`string`. Required when `propagatedArtifacts == true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies Azure Classic or Resource Manager storage accounts. Select the storage account name where the artifacts are propagated.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Specifying Container Registry Type for Secrets\nDESCRIPTION: Identifies the container registry type necessary when the secretType is set to dockerRegistry. This includes both Azure Container Registry and general Container Registries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"containerRegistryType\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`containerRegistryType`** - **Container Registry type**<br>\n`string`. Required when `secretType = dockerRegistry`. Allowed values: `Azure Container Registry`, `Container Registry`. Default value: `Azure Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSelect a Container registry type. The task can use Azure Subscription details to work with an Azure Container registry. Other standard Container registries are also supported.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Pool Definition with Multiple Demands\nDESCRIPTION: Advanced pool configuration showing how to specify multiple demands including both exists and equals checks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npool:\n  name: MyPool\n  demands:\n  - myCustomCapability\n  - Agent.Version -equals 2.144.0\n```\n\n----------------------------------------\n\nTITLE: Defining Requirements Table for Azure DevOps Pipeline Task in Markdown\nDESCRIPTION: This snippet creates a markdown table listing the requirements for an Azure DevOps pipeline task. It includes details such as supported pipeline types, execution environments, demands, capabilities, command restrictions, settable variables, agent version, and task category.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sonar-qube-prepare-v6.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  3.218.0 or greater |\n| Task category | Build |\n```\n\n----------------------------------------\n\nTITLE: Configuring Visual Studio Test Agent Deployment in YAML\nDESCRIPTION: This YAML snippet shows how to configure the DeployVisualStudioTestAgent@1 task in an Azure Pipelines workflow. It includes all available input parameters for deploying and configuring the Test Agent on specified machines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/deploy-visual-studio-test-agent-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Visual Studio Test Agent Deployment v1\n# Deploy and configure Test Agent to run tests on a set of machines.\n- task: DeployVisualStudioTestAgent@1\n  inputs:\n  # Test Machine Group\n    testMachineGroup: # string. Required. Machines. \n    #adminUserName: # string. Admin Login. \n    #adminPassword: # string. Admin Password. \n    #winRmProtocol: # 'Http' | 'Https'. Protocol. \n    #testCertificate: true # boolean. Optional. Use when winRmProtocol = Https. Test Certificate. Default: true.\n    #resourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Select Machines By. Default: machineNames.\n    #testMachines: # string. Filter Criteria. \n  # Agent Configuration\n    machineUserName: # string. Required. Username. \n    machinePassword: # string. Required. Password. \n    #runAsProcess: false # boolean. Interactive Process. Default: false.\n  # Advanced\n    #agentLocation: # string. Test Agent Location. \n    #updateTestAgent: true # boolean. Update Test Agent. Default: true.\n    #isDataCollectionOnly: false # boolean. Enable Data Collection Only. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Specifying SetParameters File for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `SetParametersFile` parameter, which provides the location of the `SetParameters.xml` file when using Web Deploy. It is optional and only used when `UseWebDeploy` is set to `true` for non-Linux deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_17\n\nLANGUAGE: none\nCODE:\n```\n**`SetParametersFile`** - **SetParameters file**<br>\n`string`. Optional. Use when `UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\"`.\n```\n\n----------------------------------------\n\nTITLE: Defining EnvironmentName Parameter\nDESCRIPTION: Specifies a comma-separated list of machine IP addresses or FQDNs with ports. This is a required string parameter used for identifying target machines in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"EnvironmentName\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`EnvironmentName`** - **Machines**<br>\n`string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies a comma-separated list of machine IP addresses or FQDNs, along with ports. The default port is based on the selected protocol, for example `dbserver.fabrikam.com` or `dbserver_int.fabrikam.com:5986,192.168.12.34:5986`. You can also provide the output variable of other tasks, for example `$(variableName)`.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Resource Group Deployment Task (v2022 and earlier)\nDESCRIPTION: YAML configuration for Azure Resource Group Deployment task version 2022 and earlier. Includes core functionality for ARM template deployment and VM management, but lacks the useWithoutJSON parameter.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure resource group deployment v2\n# Deploy an Azure Resource Manager (ARM) template to a resource group and manage virtual machines.\n- task: AzureResourceGroupDeployment@2\n  inputs:\n  # Azure Details\n    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. \n    action: 'Create Or Update Resource Group' # 'Create Or Update Resource Group' | 'Select Resource Group' | 'Start' | 'Stop' | 'StopWithDeallocate' | 'Restart' | 'Delete' | 'DeleteRG'. Required. Action. Default: Create Or Update Resource Group.\n    resourceGroupName: # string. Required. Resource group. \n    #location: # string. Required when action = Create Or Update Resource Group. Location. \n  # Template\n    #templateLocation: 'Linked artifact' # 'Linked artifact' | 'URL of the file'. Required when action = Create Or Update Resource Group. Template location. Default: Linked artifact.\n    #csmFileLink: # string. Required when templateLocation = URL of the file && action = Create Or Update Resource Group. Template link. \n    #csmParametersFileLink: # string. Optional. Use when templateLocation = URL of the file && action = Create Or Update Resource Group. Template parameters link. \n    #csmFile: # string. Required when templateLocation = Linked artifact && action = Create Or Update Resource Group. Template. \n    #csmParametersFile: # string. Optional. Use when templateLocation = Linked artifact && action = Create Or Update Resource Group. Template parameters. \n    #overrideParameters: # string. Optional. Use when action = Create Or Update Resource Group. Override template parameters. \n    #deploymentMode: 'Incremental' # 'Incremental' | 'Complete' | 'Validation'. Required when action = Create Or Update Resource Group. Deployment mode. Default: Incremental.\n  # Advanced deployment options for virtual machines\n    #enableDeploymentPrerequisites: 'None' # 'None' | 'ConfigureVMwithWinRM' | 'ConfigureVMWithDGAgent'. Optional. Use when action = Create Or Update Resource Group || action = Select Resource Group. Enable prerequisites. Default: None.\n    #teamServicesConnection: # string. Alias: deploymentGroupEndpoint. Required when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Azure Pipelines service connection. \n    #teamProject: # string. Alias: project. Required when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Team project. \n    #deploymentGroupName: # string. Required when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Deployment Group. \n    #copyAzureVMTags: true # boolean. Optional. Use when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Copy Azure VM tags to agents. Default: true.\n    #runAgentServiceAsUser: false # boolean. Optional. Use when (action = Create Or Update Resource Group || action = Select Resource Group) && enableDeploymentPrerequisites = ConfigureVMWithDGAgent. Run agent service as a user. Default: false.\n    #userName: # string. Required when enableDeploymentPrerequisites = ConfigureVMWithDGAgent && runAgentServiceAsUser = true. User name. \n    #password: # string. Optional. Use when enableDeploymentPrerequisites = ConfigureVMWithDGAgent && runAgentServiceAsUser = true. Password. \n    #outputVariable: # string. Optional. Use when (action = Create Or Update Resource Group || action = Select Resource Group) && (enableDeploymentPrerequisites = ConfigureVMwithWinRM || enableDeploymentPrerequisites = None). VM details for WinRM. \n  # Advanced\n    #deploymentName: # string. Optional. Use when action = Create Or Update Resource Group. Deployment name. \n    #deploymentOutputs: # string. Optional. Use when action = Create Or Update Resource Group. Deployment outputs. \n    #addSpnToEnvironment: false # boolean. Optional. Use when action = Create Or Update Resource Group. Access service principal details in override parameters. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Basic IncludeExcludeFilters Structure in YAML\nDESCRIPTION: Basic structure showing the include and exclude list properties for the includeExcludeFilters definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-filters.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nincludeExcludeFilters:\n  include: [ string ] # List of items to include.\n  exclude: [ string ] # List of items to exclude.\n```\n\n----------------------------------------\n\nTITLE: Specifying Multiple Demands in Azure Pipelines YAML\nDESCRIPTION: Example of specifying multiple demands in a YAML build pipeline using the list syntax. This allows checking for multiple capabilities, including both existence and equality checks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pool-demands.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\npool:\n  name: MyPool\n  demands:\n  - myCustomCapability   # exists check for myCustomCapability\n  - Agent.Version -equals 2.144.0 # equals check for Agent.Version 2.144.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Azure Load Testing Task\nDESCRIPTION: This snippet shows how to configure environment variables for the Azure Load Testing task using JSON syntax. It demonstrates the format for specifying variable names and values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-load-test-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n   {\n    \"name\": \"env1\",\n    \"value\": \"value1\"\n   },\n   {\n    \"name\": \"env2\",\n    \"value\": \"value2\"\n   }\n]\n```\n\n----------------------------------------\n\nTITLE: Running Checkstyle Analysis\nDESCRIPTION: This boolean property enables running the Checkstyle tool with the default Sun checks. If no Checkstyle configuration is specified in the `pom.xml` file, default Sun checks are used. The results are uploaded as build artifacts. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_14\n\nLANGUAGE: none\nCODE:\n```\n\n**`checkStyleRunAnalysis`** - **Run Checkstyle**<br>\n[Input alias](index.md#what-are-task-input-aliases): `checkstyleAnalysisEnabled`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nRuns the Checkstyle tool with the default Sun checks. If no Checkstyle configuration is specified in the `pom.xml` file, default Sun checks are used. Results are uploaded as build artifacts.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Finding Pipeline Definition ID\nDESCRIPTION: Method to retrieve the definitionId of a specific pipeline from the Azure DevOps portal URL or system variables\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/fabrikam-inc/FabrikamFiber/_build?definitionId=78&_a=summary\n```\n\n----------------------------------------\n\nTITLE: Using NodeTool@0 with Specified Version Spec in Azure Pipelines\nDESCRIPTION: This snippet configures the NodeTool@0 task with a required version specification for Node.js, ensuring that the specified major version is fetched and cached. Useful for integrating specific versions in the build pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/node-tool-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NodeTool@0\n  inputs:\n    versionSpec: '6.x' # string. Required. Version Spec. Default: 6.x.\n    #checkLatest: false # boolean. Check for Latest Version. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Publishing JUnit Test Results in Azure Pipelines YAML\nDESCRIPTION: Configures publishing of JUnit test results to Azure Pipelines and specifies the test results file pattern.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npublishJUnitResults: true\ntestResultsFiles: '**/TEST-*.xml'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Service Connection Type\nDESCRIPTION: Specifies the Azure service connection type for SQL database deployment, with options for Azure Classic and Azure Resource Manager connections\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-azure-dacpac-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nazureConnectionType: ConnectedServiceNameARM\n```\n\n----------------------------------------\n\nTITLE: Displaying Moniker-Specific Content in Markdown\nDESCRIPTION: This snippet demonstrates how to use moniker ranges to display version-specific content in markdown documentation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n:::moniker range=\"<=azure-pipelines\"\n\nNone.\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Example Gulp Task with Npm Install\nDESCRIPTION: This YAML example demonstrates a common usage pattern: installing npm dependencies before running the gulp task.  It uses the Npm@1 task to install dependencies and then the gulp@1 task to execute the gulp build process, specifying the gulp file and gulp.js location.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gulp-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n```yml\n- task: Npm@1\n  inputs:\n    command: 'install'\n\n- task: gulp@1\n  inputs:\n    gulpFile: 'gulpfile.js'\n    gulpjs: 'node_modules/gulp/bin/gulp.js'\n```\n```\n\n----------------------------------------\n\nTITLE: PowerShell Task Configuration for Azure Pipelines 2020\nDESCRIPTION: YAML configuration for PowerShell@2 task with minimal parameter set. Provides basic functionality for script execution in pipeline environments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# PowerShell v2\n# Run a PowerShell script on Linux, macOS, or Windows.\n- task: PowerShell@2\n  inputs:\n    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.\n    filePath: # string. Required when targetType = filePath. Script Path. \n    #arguments: # string. Optional. Use when targetType = filePath. Arguments. \n    #script: # string. Required when targetType = inline. Script. \n    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.\n  # Advanced\n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.\n    #pwsh: false # boolean. Use PowerShell Core. Default: false.\n    #workingDirectory: # string. Working Directory.\n```\n\n----------------------------------------\n\nTITLE: Force Updating Secrets in Kubernetes\nDESCRIPTION: Specifies whether to delete an existing secret and create a new one with updated values, defaulting to true to ensure the update occurs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"forceUpdate\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`forceUpdate`** - **Force update secret**<br>\n`boolean`. Default value: `true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDelete the secret if it exists and create a new one with updated values.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: MSBuild Log File Verbosity\nDESCRIPTION: This snippet describes the `logFileVerbosity` parameter, which specifies the verbosity level for the log file. It accepts values like `quiet`, `minimal`, `normal`, `detailed`, and `diagnostic` and is applicable when `createLogFile` is set to `true`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`logFileVerbosity`** - **Log File Verbosity**<br>\n`string`. Optional. Use when `createLogFile = true`. Allowed values: `quiet`, `minimal`, `normal`, `detailed`, `diagnostic`. Default value: `normal`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies log file verbosity.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Removing Additional Files at Destination during Azure Web App Deployment\nDESCRIPTION: This snippet describes the `RemoveAdditionalFilesFlag` parameter, a boolean value that, when set to true, removes additional files at the destination during deployments using Web Deploy. This is optional, only applicable when `UseWebDeploy` is set to `true` and for non-Linux deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_18\n\nLANGUAGE: none\nCODE:\n```\n**`RemoveAdditionalFilesFlag`** - **Remove additional files at destination**<br>\n`boolean`. Optional. Use when `UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\"`. Default value: `false`.\n```\n\n----------------------------------------\n\nTITLE: Selecting SonarQube Scanner for Maven Version\nDESCRIPTION: This string property specifies the version of the SonarQube scanner plugin to use. The allowed values are `latest` (Use latest release) and `pom` (Use version declared in your pom.xml). It is required when `sqAnalysisEnabled = true`. The default value is `latest`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_13\n\nLANGUAGE: none\nCODE:\n```\n\n**`sqMavenPluginVersionChoice`** - **SonarQube scanner for Maven version**<br>\n`string`. Required when `sqAnalysisEnabled = true`. Allowed values: `latest` (Use latest release), `pom` (Use version declared in your pom.xml). Default value: `latest`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the SonarQube Maven plugin version to use. You can use the latest version or rely on the version in your `pom.xml`.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Take App Offline Flag for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `TakeAppOfflineFlag` parameter, a boolean value that, when set to true, takes the Azure App Service offline during deployment by placing an `app_offline.htm` file in the root directory. The file is removed after a successful sync operation. This is only for non-linux deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_15\n\nLANGUAGE: none\nCODE:\n```\n**`TakeAppOfflineFlag`** - **Take App Offline**<br>\n`boolean`. Optional. Use when `WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\"`. Default value: `false`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Machine File Copy Task in YAML\nDESCRIPTION: YAML syntax for the WindowsMachineFileCopy@1 task. This task copies files to remote Windows machines. It includes required and optional inputs for specifying source and destination paths, machine details, and copy options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/windows-machine-file-copy-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Windows machine file copy v1\n# Copy files to remote Windows machines.\n- task: WindowsMachineFileCopy@1\n  inputs:\n    SourcePath: # string. Required. Source. \n    #EnvironmentName: # string. Machines. \n    #AdminUserName: # string. Admin Login. \n    #AdminPassword: # string. Password. \n    TargetPath: # string. Required. Destination Folder. \n  # Advanced Options\n    #CleanTargetBeforeCopy: false # boolean. Clean Target. Default: false.\n    #CopyFilesInParallel: true # boolean. Copy Files in Parallel. Default: true.\n    #AdditionalArguments: # string. Additional Arguments. \n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Select Machines By. Default: machineNames.\n    #MachineNames: # string. Filter Criteria.\n```\n\n----------------------------------------\n\nTITLE: Defining IPAddress Parameter\nDESCRIPTION: Specifies the IP address for accessing the website. Required when 'AddBinding' is true, and defaults to 'All Unassigned'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"IPAddress\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`IPAddress`** - **IP Address**<br>\n`string`. Required when `AddBinding = true`. Default value: `All Unassigned`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies an IP address that users can use to access the website. If **All Unassigned** is selected, the site will respond to requests for all IP addresses on the port and the optional host name that is specified for the site. The site will not respond to requests if another site on the server has a binding on the same port but with a specific IP address.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Setting Managed Pipeline Mode for IIS Application Pool in YAML\nDESCRIPTION: Configures the managed pipeline mode for IIS request processing. Options are Integrated (default) or Classic, with Classic mode recommended only for applications incompatible with Integrated mode.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nPipeLineMode: 'Integrated'\n```\n\n----------------------------------------\n\nTITLE: Defining Artifact Details File Name Suffix Input - Azure Pipelines - Markdown\nDESCRIPTION: The `artifactDetailsFileNameSuffix` input is used to specify a suffix for the filenames of commit and work item attachment files. If not provided, defaults are used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"artifactDetailsFileNameSuffix\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`artifactDetailsFileNameSuffix`** - **Commit and WorkItem FileName**<br>\n`string`. Optional. Use when `downloadCommitsAndWorkItems == invalid`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the file name suffix for commits and work item attachments. Attachments are created with `commits_{suffix}.json` and `workitem_{suffix}.json`. If this input is not provided, attachments are created with the names `commits.json` and `workitems.json`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Downloading Artifacts with DownloadPipelineArtifact@0\nDESCRIPTION: This YAML snippet demonstrates how to configure the DownloadPipelineArtifact task to download artifacts from a pipeline using version 0 of the task. The task requires parameters such as `pipelineId`, the `artifactName`, and the `targetPath`. It's important to note that this task is only supported on Azure DevOps Services and has been deprecated in favor of version 2.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Download Pipeline Artifacts v0\n# Downloads an artifact associated with a pipeline.\n- task: DownloadPipelineArtifact@0\n  inputs:\n    #pipelineId: # string. The specific pipeline to download from. \n    artifactName: 'drop' # string. Required. The name of artifact to download. Default: drop.\n    targetPath: # string. Required. Path to download to.\n```\n\n----------------------------------------\n\nTITLE: Defining deployHook Structure in Azure Pipelines YAML\nDESCRIPTION: Shows the YAML structure for defining a deployHook object, including its steps and pool properties. The steps property is a list of deployment steps, while the pool property specifies where the deploy steps will run.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/deploy-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndeployHook:\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  pool: string | pool # Pool where deploy steps will run.\n```\n\n----------------------------------------\n\nTITLE: Docker Image Build and Management Tasks\nDESCRIPTION: Tasks for building, pushing, and managing Docker images across multiple versions with support for container registries and compose configurations\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n- task: Docker@2\n- task: DockerCompose@0\n```\n\n----------------------------------------\n\nTITLE: Running PMD Analysis\nDESCRIPTION: This boolean property enables running the PMD static analysis tool to look for bugs in the code. The results are uploaded as build artifacts. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_15\n\nLANGUAGE: none\nCODE:\n```\n\n**`pmdRunAnalysis`** - **Run PMD**<br>\n[Input alias](index.md#what-are-task-input-aliases): `pmdAnalysisEnabled`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nUses the PMD static analysis tool to look for bugs in the code. Results are uploaded as build artifacts.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Archive Files Task in Azure Pipelines\nDESCRIPTION: YAML configuration for the ArchiveFiles@1 task showing all available input parameters and their default values. The task supports various archive formats including zip, 7z, tar, and wim with configurable compression options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/archive-files-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Archive Files v1\n# Archive files using compression formats such as .7z, .rar, .tar.gz, and .zip.\n- task: ArchiveFiles@1\n  inputs:\n    rootFolder: '$(Build.BinariesDirectory)' # string. Required. Root folder (or file) to archive. Default: $(Build.BinariesDirectory).\n    #includeRootFolder: true # boolean. Prefix root folder name to archive paths. Default: true.\n  # Archive\n    archiveType: 'default' # 'default' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: default.\n    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.\n    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.\n    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Node.js Version (Version Constraint) - Azure Pipelines YAML\nDESCRIPTION: This YAML snippet illustrates the installation of a specific Node.js version using the NodeTaskRunnerInstaller@0 task, with constraints on supported versions between Azure Pipeline releases 2022.1 and 2022.2. The input parameter `nodeVersion` indicates which Node.js version to install and is a required field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/node-task-runner-installer-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NodeTaskRunnerInstaller@0\n  inputs:\n    nodeVersion: '6' # '6' | '10'. Alias: runnerVersion | installVersion. Required. Version of runner to install. Default: 6.\n```\n\n----------------------------------------\n\nTITLE: Restricting Settable Variables in Azure Pipelines YAML\nDESCRIPTION: This example demonstrates how to restrict a step to only set specific variables by providing an allowed list. The step can only set the 'sauce' variable, while attempts to set 'secretSauce' will be blocked with warnings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/target-settable-variables.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - bash: |\n      echo \"##vso[task.setvariable variable=sauce;]crushed tomatoes\"\n      echo \"##vso[task.setvariable variable=secretSauce;]crushed tomatoes with garlic\"\n    target:\n     settableVariables:\n      - sauce\n    name: SetVars\n  - bash: \n      echo \"Sauce is $(sauce)\"\n      echo \"secretSauce is $(secretSauce)\"\n    name: OutputVars\n```\n\n----------------------------------------\n\nTITLE: Adding Secret to Azure Key Vault Using Azure CLI\nDESCRIPTION: Azure CLI command to add a secret to an Azure Key Vault. This example adds a secret named SQLPassword with the value PlaceholderPassword to a Key Vault named ContosoKeyVault.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-key-vault-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz keyvault secret set --vault-name 'ContosoKeyVault' --name 'SQLPassword' --value 'PlaceholderPassword'\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Subscription Input for Azure Pipelines\nDESCRIPTION: This snippet introduces the `azureSubscription` input parameter, which specifies an Azure subscription for connecting to the Azure Container Registry. This optional string parameter is used when the `containerregistrytype` is 'Azure Container Registry'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"azureSubscription\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`azureSubscription`** - **Azure subscription**<br>\n[Input alias](index.md#what-are-task-input-aliases): `azureSubscriptionEndpoint`. `string`. Optional. Use when `containerregistrytype = Azure Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies an Azure subscription.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring M2_HOME Variable for Maven Task\nDESCRIPTION: This boolean property determines whether the `M2_HOME` environment variable is set to the custom Maven installation path.  It's applicable only when `mavenVersionSelection = Path`. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_7\n\nLANGUAGE: none\nCODE:\n```\n\n**`mavenSetM2Home`** - **Set M2_HOME variable**<br>\n`boolean`. Optional. Use when `mavenVersionSelection = Path`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSets the `M2_HOME` variable to a custom Maven installation path.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Publishing Build Artifacts in Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML configuration for publishing build artifacts in Azure Pipelines 2020.1 and earlier versions, with basic file copy and parallel processing options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-build-artifacts-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish build artifacts v1\n# Publish build artifacts to Azure Pipelines or a Windows file share.\n- task: PublishBuildArtifacts@1\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)' # string. Required. Path to publish. Default: $(Build.ArtifactStagingDirectory).\n    ArtifactName: 'drop' # string. Required. Artifact name. Default: drop.\n    publishLocation: 'Container' # 'Container' | 'FilePath'. Alias: ArtifactType. Required. Artifact publish location. Default: Container.\n    #TargetPath: # string. Required when ArtifactType = FilePath. File share path. \n    #Parallel: false # boolean. Optional. Use when ArtifactType = FilePath. Parallel copy. Default: false.\n    #ParallelCount: '8' # string. Optional. Use when ArtifactType = FilePath && Parallel = true. Parallel count. Default: 8.\n  # Advanced\n    #FileCopyOptions: # string. Optional. Use when ArtifactType = FilePath. File copy options.\n```\n\n----------------------------------------\n\nTITLE: MSBuild Parallel Build Configuration\nDESCRIPTION: This snippet describes the `maximumCpuCount` parameter, enabling parallel builds using the `/m` switch in MSBuild (Windows only). It warns about potential issues if the target configuration is not compatible with parallel builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`maximumCpuCount`** - **Build in Parallel**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf your MSBuild target configuration is compatible with building in parallel, you can  check this input to pass the `/m` switch to MSBuild (Windows only). If your target configuration is not compatible with building in parallel, checking this option may cause your build to result in `file-in-use` errors, or intermittent or inconsistent build failures.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Generating SSH Key Pair in GitBash\nDESCRIPTION: Command to generate an RSA SSH key pair used for authenticating GitHub repository access. Creates public and private key files for secure communication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-ssh-key-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nssh-keygen -t rsa\n```\n\n----------------------------------------\n\nTITLE: Installing Java from Azure Storage\nDESCRIPTION: Example demonstrating Java 6 installation from an Azure Storage container. Includes configuration for Azure resource connections and storage settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- task: JavaToolInstaller@0\n  inputs:\n    versionSpec: '6'\n    jdkArchitectureOption: 'x64'\n    jdkSourceOption: AzureStorage\n    azureResourceManagerEndpoint: myARMServiceConnection\n    azureStorageAccountName: myAzureStorageAccountName\n    azureContainerName: myAzureStorageContainerName\n    azureCommonVirtualFile: 'jdk1.6.0_45.zip'\n    jdkDestinationDirectory: '$(agent.toolsDirectory)/jdk6'\n    cleanDestinationDirectory: false\n```\n\n----------------------------------------\n\nTITLE: Defining Include Source Tags Input for Azure Pipelines\nDESCRIPTION: This snippet introduces the `includeSourceTags` input, which specifies if Git tags should be included when building or pushing the Docker image. This optional boolean parameter defaults to false.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"includeSourceTags\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`includeSourceTags`** - **Include Source Tags**<br>\n`boolean`. Optional. Use when `action = Build an image || action = Tag image || action = Push an image || action = Push images`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies whether to include Git tags when building or pushing the Docker image.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Add Base Image Data Input for Azure Pipelines\nDESCRIPTION: This snippet details the `addBaseImageData` input which indicates whether to add base image metadata during Docker image creation. This optional boolean parameter defaults to true, allowing for traceability by including base image data.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"addBaseImageData\"::: -->\n:::moniker range=\">=azure-pipelines-2022\"\n\n**`addBaseImageData`** - **Add base image metadata to image(s)**<br>\n`boolean`. Default value: `true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe default value adds base image data such as, the base image name and digest to help with traceability. You can opt out by setting the value to `false`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Image Names Path Input for Azure Pipelines\nDESCRIPTION: This snippet introduces the `imageNamesPath` input, which indicates the path to a text file containing names of Docker images to tag or push. This required string parameter is specific to actions for tagging or pushing images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"imageNamesPath\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`imageNamesPath`** - **Image Names Path**<br>\n`string`. Required when `action == Tag images || action == Push images`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the path to a text file that contains the names of the Docker images to tag or push. List each image name on a separate line.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: ReviewApp Implementation Example in Environment Configuration\nDESCRIPTION: Example showing how to use reviewApp within an environment configuration, including deployment job setup and strategy definition.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/review-app-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment:\n  environment: \n     name: smarthotel-dev      \n     resourceName: $(System.PullRequest.PullRequestId) \n  pool:\n    name: 'ubuntu-latest'\n  strategy:                 \n    runOnce:            \n      pre-deploy: \n        steps:       \n        - reviewApp: MainNamespace\n```\n\n----------------------------------------\n\nTITLE: Setting Remove Additional Files Flag for Azure App Service Deployment\nDESCRIPTION: Controls whether to delete files on the Azure App Service that don't exist in the deployment package. Setting to true will remove all files, including those related to installed extensions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nRemoveAdditionalFilesFlag: true\n```\n\n----------------------------------------\n\nTITLE: Configuring PackerBuild Task for Azure Image Creation\nDESCRIPTION: Define a Packer build task with Azure-specific configuration for creating managed VM disk images. Supports built-in and custom template types with multiple base image options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/packer-build-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PackerBuild@1\n  inputs:\n    templateType: 'builtin'\n    ConnectedServiceName: # Azure subscription\n    location: # Storage location\n    storageAccountName: # Storage account\n    azureResourceGroup: # Resource group\n    baseImageSource: 'default'\n    packagePath: # Deployment Package\n    deployScriptPath: # Deployment script\n```\n\n----------------------------------------\n\nTITLE: Setting VM Configuration for Azure File Copy\nDESCRIPTION: Configures VM-specific inputs such as admin credentials and target path when the destination is set to Azure VMs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nvmsAdminUserName:\n  string. Required when Destination = AzureVMs.\n  Specify the user name of the Azure VM administrator account.\n\nvmsAdminPassword:\n  string. Required when Destination = AzureVMs.\n  Specify the password for the Azure VM administrator account.\n\nTargetPath:\n  string. Required when Destination = AzureVMs.\n  Specify the local path on the target VMs for copying files from the source.\n```\n\n----------------------------------------\n\nTITLE: Acquiring .NET Core SDK/runtime - YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the DotNetCoreInstaller@0 task to acquire a specific version of the .NET Core SDK. It specifies the package type and the version to be installed, allowing for flexibility between runtime and SDK installations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"# .NET Core SDK/runtime installer v0\\n# Acquire a specific version of the .NET Core SDK from the internet or local cache and add it to the PATH.\\n- task: DotNetCoreInstaller@0\\n  inputs:\\n    packageType: 'sdk' # 'runtime' | 'sdk'. Required. Package to install. Default: sdk.\\n    version: '1.0.4' # string. Required. Version. Default: 1.0.4.\"\n```\n\n----------------------------------------\n\nTITLE: General Settings JSON Configuration Example\nDESCRIPTION: Example JSON structure for configuring general settings in Azure App Service, showing how to configure always-on and WebSocket settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-app-service-settings-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n   {\n    \"alwaysOn\": true,\n    \"webSocketsEnabled\": false\n   }\n]\n```\n\n----------------------------------------\n\nTITLE: Using BASH_ENV with Pipeline Variables\nDESCRIPTION: Example showing how to set BASH_ENV as a pipeline variable for Bash task execution.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/bash-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n  BASH_ENV: \"~/.profile\"\n\nsteps:\n- task: Bash@3\n  inputs:\n    targetType: 'inline'\n    script: env\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Subscription Input - Azure Pipelines - Markdown\nDESCRIPTION: The `ConnectedServiceNameARM` input indicates which Azure Resource Manager subscription is used for artifact management. It is required if artifacts have been propagated to Azure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"ConnectedServiceNameARM\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`ConnectedServiceNameARM`** - **Azure Subscription**<br>\n`string`. Required when `propagatedArtifacts == true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the Azure Resource Manager subscription for the artifacts.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Download artifacts from a specific branch in YAML\nDESCRIPTION: This YAML snippet illustrates how to download artifacts from a specific branch, 'refs/heads/master', with a tag 'testTag'. It uses the 'latestFromBranch' buildVersionToDownload option. This ensures that the most recent successful build from the specified branch and tag is downloaded.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n\"# Download artifacts from a specific branch with a tag\\n- task: DownloadPipelineArtifact@2\\n  inputs:\\n    buildType: 'specific'\\n    project: 'FabrikamFiber'\\n    definition: 12\\n    buildVersionToDownload: 'latestFromBranch'\\n    branchName: 'refs/heads/master'\\n    tags: 'testTag'\"\n```\n\n----------------------------------------\n\nTITLE: Converting Docker Compose to Kubernetes Manifests with Kompose\nDESCRIPTION: Shows how to convert Docker Compose files to Kubernetes manifests using Kompose and deploy them.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  name: bake\n  displayName: Bake K8s manifests from Docker Compose\n  inputs:\n    action: bake\n    renderType: kompose\n    dockerComposeFile: docker-compose.yaml\n\n- task: KubernetesManifest@0\n  displayName: Deploy K8s manifests\n  inputs:\n    kubernetesServiceConnection: k8sSC1\n    manifests: $(bake.manifestsBundle)\n```\n\n----------------------------------------\n\nTITLE: Configuring Delay Task in Azure Pipelines YAML\nDESCRIPTION: Defines the syntax for using the Delay v1 task in an Azure Pipelines YAML file. It specifies the task name and the required input parameter for setting the delay time in minutes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/delay-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Delay v1\n# Delay further execution of a workflow by a fixed time.\n- task: Delay@1\n  inputs:\n    delayForMinutes: '0' # string. Required. Delay Time (minutes). Default: 0.\n```\n\n----------------------------------------\n\nTITLE: Extracting Specific Zip Files from Subfolder in Azure DevOps Pipeline\nDESCRIPTION: Configures the ExtractFiles task to extract .zip files from a specific subfolder, clean the destination folder, and prevent overwriting existing files\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/extract-files-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: ExtractFiles@1\n  inputs:\n    archiveFilePatterns: 'test/*.zip'\n    cleanDestinationFolder: true\n    overwriteExistingFiles: false\n```\n\n----------------------------------------\n\nTITLE: Adding Custom AppCmd Commands in IIS Management YAML\nDESCRIPTION: Allows specification of additional AppCmd.exe commands to be executed as part of the task. Multiple commands can be added using line separators.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nAppCmdCommands: |\n  list apppools\n  list sites\n  recycle apppool /apppool.name:ExampleAppPoolName\n```\n\n----------------------------------------\n\nTITLE: Configuring Moniker Range in YAML\nDESCRIPTION: Specifies the moniker range for which the content applies in Azure Pipelines YAML.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n:::moniker range=\"<=azure-pipelines\"\n\nNone.\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: YAML Example - Bash Task Configuration\nDESCRIPTION: Example of auto-generated YAML syntax for the Bash@3 task showing available inputs and configuration options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Bash v3\n# Run a Bash script on macOS, Linux, or Windows.\n- task: Bash@3\n  inputs:\n    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.\n    filePath: # string. Required when targetType = filePath. Script Path. \n    #arguments: # string. Optional. Use when targetType = filePath. Arguments. \n    #script: # string. Required when targetType = inline. Script. \n  # Advanced\n    #workingDirectory: # string. Working Directory. \n    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.\n    #bashEnvValue: # string. Set value for BASH_ENV environment variable.\n```\n\n----------------------------------------\n\nTITLE: Defining PublishProfilePassword Input for PublishProfile Connection\nDESCRIPTION: This snippet defines the `PublishProfilePassword` input, required when `ConnectionType` is `PublishProfile`. It specifies the password for the publish profile, and it is recommended to store the password in a secret variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`PublishProfilePassword`** - **Publish profile password**<br>\n`string`. Required when `ConnectionType = PublishProfile`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIt is recommended to store a password in a secret variable and use that variable here e.g. `$(Password)`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Artifact Provider Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `artifactProvider` specifies the external storage provider used in the Jenkins job for uploading artifacts. This is required when `propagatedArtifacts` is set to `notValid`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"artifactProvider\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`artifactProvider`** - **Artifact Provider**<br>\n`string`. Required when `propagatedArtifacts == notValid`. Allowed values: `azureStorage` (Azure Storage). Default value: `azureStorage`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the external storage provider used in Jenkins job to upload the artifacts.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring App Center Distribute Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet shows the syntax and available input parameters for the AppCenterDistribute@3 task. It allows configuring app distribution settings like service connection, app slug, binary file path, release notes, distribution groups, and symbol options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v3.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# App Center distribute v3\n# Distribute app builds to testers and users via Visual Studio App Center.\n- task: AppCenterDistribute@3\n  inputs:\n    serverEndpoint: # string. Required. App Center service connection. \n    appSlug: # string. Required. App slug. \n    appFile: # string. Alias: app. Required. Binary file path. \n    #buildVersion: # string. Build version. \n    releaseNotesOption: 'input' # 'input' | 'file'. Alias: releaseNotesSelection. Required. Create release notes. Default: input.\n    releaseNotesInput: # string. Required when releaseNotesSelection = input. Release notes. \n    #releaseNotesFile: # string. Required when releaseNotesSelection = file. Release notes file. \n    #isMandatory: false # boolean. Require users to update to this release. Default: false.\n    destinationType: 'groups' # 'groups' | 'store'. Required. Release destination. Default: groups.\n    #distributionGroupId: # string. Alias: destinationGroupIds. Optional. Use when destinationType = groups. Destination IDs. \n    #destinationStoreId: # string. Required when destinationType = store. Destination ID. \n    #isSilent: # boolean. Optional. Use when destinationType = groups. Do not notify testers. Release will still be available to install. \n  # Symbols\n    #symbolsOption: 'Apple' # 'Apple' | 'Android' | 'UWP'. Alias: symbolsType. Symbols type. Default: Apple.\n    #symbolsPath: # string. Optional. Use when symbolsType == AndroidNative || symbolsType = Windows. Symbols path. \n    #appxsymPath: # string. Optional. Use when symbolsType = UWP. Symbols path (*.appxsym). \n    #symbolsDsymFiles: # string. Alias: dsymPath. Optional. Use when symbolsType = Apple. dSYM path. \n    #symbolsMappingTxtFile: # string. Alias: mappingTxtPath. Optional. Use when symbolsType = Android. Mapping file. \n    #nativeLibrariesPath: # string. Optional. Use when symbolsType == Android. Native Library File Path. \n    #symbolsIncludeParentDirectory: # boolean. Alias: packParentFolder. Optional. Use when symbolsType = Apple. Include all items in parent folder.\n```\n\n----------------------------------------\n\nTITLE: Defining Ports Input for Azure Pipelines\nDESCRIPTION: This snippet introduces the `ports` input, which lists the ports in the Docker container that should be published to the host. This optional string parameter is used when the action is 'Run an image'. Each binding should be formatted as 'host-port:container-port'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"ports\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`ports`** - **Ports**<br>\n`string`. Optional. Use when `action = Run an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies ports in the Docker container to publish to the host. List each `host-port:container-port` binding on a new line.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining TestCertificate Parameter\nDESCRIPTION: A boolean parameter used when 'WinRMProtocol' is set to 'Https'. Default is 'true'. It allows skipping validation of the machine's certificate.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"TestCertificate\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`TestCertificate`** - **Test Certificate**<br>\n`boolean`. Optional. Use when `WinRMProtocol = Https`. Default value: `true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSelects the option to skip validating the authenticity of the machine's certificate by a trusted certification authority. The parameter is required for the WinRM `HTTPS` protocol.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Writing Error in PowerShell Task\nDESCRIPTION: YAML configuration to write an error message using a PowerShell task in an Azure DevOps pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- task: PowerShell@2\n  inputs:\n    targetType: 'inline'\n    script: Write-Host \"##vso[task.LogIssue type=error;]This is the error\"\n```\n\n----------------------------------------\n\nTITLE: Example Variable Definitions in Azure Pipelines\nDESCRIPTION: Practical example showing how to define multiple variables using the full syntax method. Demonstrates defining two variables 'one' and 'two' with their respective values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-name.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: one\n  value: initialValue\n- name: two\n  value: value2\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Queue Job Task for Azure Pipelines 2022+\nDESCRIPTION: YAML configuration for JenkinsQueueJob@2 task in Azure Pipelines 2022 and newer. This snippet shows all available parameters including advanced options like retryCount and delayBetweenRetries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-queue-job-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Jenkins queue job v2\n# Queue a job on a Jenkins server.\n- task: JenkinsQueueJob@2\n  inputs:\n    serverEndpoint: # string. Required. Jenkins service connection. \n    jobName: # string. Required. Job name. \n    #isMultibranchJob: false # boolean. Job is of multibranch pipeline type. Default: false.\n    #multibranchPipelineBranch: # string. Required when isMultibranchJob = true. Multibranch pipeline branch. \n    #captureConsole: true # boolean. Capture console output and wait for completion. Default: true.\n    #capturePipeline: true # boolean. Optional. Use when captureConsole = true. Capture pipeline output and wait for pipeline completion. Default: true.\n  # Advanced\n    #isParameterizedJob: false # boolean. Alias: parameterizedJob. Parameterized job. Default: false.\n    #jobParameters: # string. Optional. Use when parameterizedJob = true. Job parameters. \n    #failOnUnstableResult: false # boolean. Fail on unstable result. Default: false.\n    #retryCount: '3' # string. Number of retries for failed connection. Default: 3.\n    #delayBetweenRetries: '60' # string. Time between retries. Default: 60.\n```\n\n----------------------------------------\n\nTITLE: Setting Test Filter Criteria in Azure Pipelines YAML\nDESCRIPTION: Specifies which tests to execute within test assembly files. Works like the /TestCaseFilter option in vstest.console.exe.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntestFilterCriteria: 'Owner=james&Priority=1'\n```\n\n----------------------------------------\n\nTITLE: Linux: Downloading and Installing CA Certificate\nDESCRIPTION: Example of downloading a secure certificate file on a Linux agent and installing it to a trusted certificate authority (CA) directory using bash script.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-secure-file-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadSecureFile@1\n  name: caCertificate\n  displayName: 'Download CA certificate'\n  inputs:\n    secureFile: 'myCACertificate.pem'\n\n- script: |\n    echo Installing $(caCertificate.secureFilePath) to the trusted CA directory...\n    sudo chown root:root $(caCertificate.secureFilePath)\n    sudo chmod a+r $(caCertificate.secureFilePath)\n    sudo ln -s $(caCertificate.secureFilePath) /etc/ssl/certs/\n```\n\n----------------------------------------\n\nTITLE: Download NuGet Package from Azure Artifacts using YAML\nDESCRIPTION: The example demonstrates downloading a NuGet package from an organization-scoped feed using the DownloadPackage@1 YAML task in Azure Pipelines. The task downloads an artifact specified by its ID to the designated artifact directory. The package contents are extracted if extract is set to true. Required parameters include feed ID, package definition (ID or name), and version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-package-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Download an artifact with id 'cfe01b64-ded4-47b7-a569-2ac17cbcedbd' to $(System.ArtifactsDirectory)\n- task: DownloadPackage@1\n  inputs:\n    packageType: 'nuget'\n    feed: '6a60ef3b-e29f-41b6-9885-7874278baac7'\n    definition: 'cfe01b64-ded4-47b7-a569-2ac17cbcedbd' # Can also be package name\n    version: '1.0.0'\n    extract: true\n    downloadPath: '$(System.ArtifactsDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Defining Script Step in Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML syntax for defining a script step in Azure Pipelines 2020.1 and earlier versions. Includes properties available in these versions, excluding retryCountOnTaskFailure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-script.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: string # Required as first property. An inline script.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Package and Sign Helm Chart Example - YAML\nDESCRIPTION: A YAML pipeline example showcasing how to package and sign Helm charts. Includes steps for downloading secure files and using GPG keys within the pipeline. Requires configuration of secure file storage and Helm deployment tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_20\n\nLANGUAGE: YAML\nCODE:\n```\npool:\n  name: Hosted Ubuntu 1604\n\nvariables:\n  # The below variable should be secure\n  HelmKeyPassphrase: contoso@123\n  keyName: contoso contoso@microsoft.com\n  azureSubscriptionEndpoint: contoso\n  azureResourceGroup: contoso\n  kubernetesCluster: contoso\n\nsteps:\n- task: DownloadSecureFile@1\n  displayName: Download Secure file\n  inputs:\n    secureFile: privatekey.gpg\n  name: privateKeyRing\n\n- task: HelmInstaller@0\n  displayName: Install Helm 2.12.0\n  inputs:\n    helmVersion: 2.12.0\n\n- task: HelmDeploy@0\n  displayName: helm init\n  inputs:\n    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)\n    azureResourceGroup: $(azureResourceGroup)\n    kubernetesCluster: $(kubernetesCluster)\n    command: init\n    arguments: --client-only\n\n- task: HelmDeploy@0\n  displayName: helm package\n  inputs:\n    command: package\n    chartPath: Application/charts/sampleapp\n    arguments: --sign --key \"$(keyName)\" --keyring $(privateKeyRing.secureFilePath)\n  env:\n    HelmKeyPassphrase: $(HelmKeyPassphrase)\n```\n\n----------------------------------------\n\nTITLE: Compilation Tasks for .NET Core Applications\nDESCRIPTION: Build, test, package, and publish .NET Core applications using multiple task versions with comprehensive CLI support\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n- task: DotNetCoreCLI@2\n```\n\n----------------------------------------\n\nTITLE: Configuring App Export Path\nDESCRIPTION: Parameter to specify the destination directory for the exported app package. Uses variables to create dynamic paths based on SDK and configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nexportPath: output/$(SDK)/$(Configuration)\n```\n\n----------------------------------------\n\nTITLE: Defining BuildNumber Output Variable in Azure Pipelines YAML\nDESCRIPTION: This snippet defines the BuildNumber output variable for an Azure Pipelines task. It stores the build number of the build artifact source, but actually returns the BuildId for backward compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n**`BuildNumber`**<br>\nStores the build number of the build artifact source.\n\nPlease note that this input returns **BuildId** due to backward compatibility. For more information, see [Variables](/azure/devops/pipelines/build/variables#build-variables-devops-services).\n```\n\n----------------------------------------\n\nTITLE: Defining Download Commits and Work Items Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `downloadCommitsAndWorkItems` toggles whether to download associated commits and work item details linked to the Jenkins job. It defaults to `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"downloadCommitsAndWorkItems\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`downloadCommitsAndWorkItems`** - **Download Commits and WorkItems**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nEnables downloading the commits and work item details associated with the Jenkins Job.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Disabling Triggers for Container Resources in Azure Pipelines\nDESCRIPTION: This YAML snippet shows how to disable triggers for a container resource in Azure Pipelines. It sets up the container resource and explicitly disables the trigger.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers-container-trigger.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nresources:         \n  containers:\n  - container: petStore      \n    type: ACR  \n    azureSubscription: ContosoARMConnection\n    resourceGroup: ContosoGroup\n    registry: petStoreRegistry\n    repository: myPets\n    trigger: \n      tags: none # Triggers disabled\n```\n\n----------------------------------------\n\nTITLE: Use .NET 6 SDK Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the UseDotNet@2 task to install .NET 6 SDK in an Azure Pipeline. This is required when upgrading from NuGetAuthenticateV0 to NuGetAuthenticateV1 and encountering issues with dotnet commands due to .NET Core 2.1 deprecation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: UseDotNet@2\n  displayName: Use .NET 6 SDK\n  inputs:\n    packageType: sdk\n    version: 6.x\"\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Resource in Azure Pipelines YAML\nDESCRIPTION: YAML schema for defining a webhook resource in Azure Pipelines. It specifies required properties like name, connection, and optional properties like type and filters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nwebhooks:\n- webhook: string # Required as first property. Name of the webhook.\n  connection: string # Required. Name of the connection. In case of offline webhook this will be the type of Incoming Webhook otherwise it will be the type of the webhook extension.\n  type: string # Name of the webhook extension. Leave this empty if it is an offline webhook.\n  filters: [ filter ] # List of trigger filters.\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Machine Group in Azure Pipelines YAML\nDESCRIPTION: Specifies the test machine group for running tests. Can be a comma-separated list of machine names, an Azure Resource Group, or an output variable from a previous task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntestMachineGroup: 'dbserver.fabrikam.com,dbserver_int.fabrikam.com:5986,192.168.34:5986'\n```\n\n----------------------------------------\n\nTITLE: Defining Inputs for Jenkins Service Connection - Azure Pipelines - Markdown\nDESCRIPTION: The snippet defines the input `jenkinsServerConnection` which specifies the service connection for the Jenkins instance, allowing Azure Pipelines to interact with Jenkins jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"jenkinsServerConnection\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`jenkinsServerConnection`** - **Jenkins service connection**<br>\n[Input alias](index.md#what-are-task-input-aliases): `serverEndpoint`. `string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the service connection for your Jenkins instance. To create a new service connection, click the Manage link.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Server URL for FTP Inputs\nDESCRIPTION: Specifies the URL of the FTP server when the input credentials type is set to direct credentials. It is a required field for establishing the connection.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"serverUrl\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`serverUrl`** - **Server URL**<br>\n`string`. Required when `credsType = inputs`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the URL for the FTP server.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Preserving File Paths during Upload\nDESCRIPTION: Indicates whether to preserve the local file paths relative to the remote directory during the upload. Useful for maintaining directory structure on the remote server.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"preservePaths\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`preservePaths`** - **Preserve file paths**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf selected, the relative local directory structure is recreated under the remote directory where files are uploaded. Otherwise, files are uploaded directly to the remote directory without creating additional subdirectories.\n\nFor example, suppose your source folder is `/home/user/source/`, which contains the file `foo/bar/foobar.txt`, and your remote directory is: `/uploads/`. If this boolean is selected, the file is uploaded to `/uploads/foo/bar/foobar.txt`. If this boolean is not selected, the file is uploaded to `/uploads/foobar.txt`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: MSBuild Clean Option\nDESCRIPTION: This snippet explains the `clean` parameter. When set to `True`, it performs a clean build, equivalent to the `/target:clean` MSBuild argument. Setting it to `False` enables incremental builds.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`clean`** - **Clean**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSet to `False` if you want to make this an incremental build. This setting might reduce your build time, especially if your codebase is large. This option has no practical effect unless you also set the `Clean` repository to `False`.\nSet to `True` if you want to rebuild all the code in the code projects. This is equivalent to the MSBuild `/target:clean` argument.\nFor more information, see [repo options](/azure/devops/pipelines/repos/pipeline-options-for-git)\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Defining onFailureHook Structure in Azure DevOps YAML Pipeline\nDESCRIPTION: The YAML syntax for the onFailureHook definition, which specifies steps to run and the pool where those steps will execute. This is used for rollback actions or clean-up operations when a pipeline step fails.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/on-failure-hook.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nonFailureHook:\n  steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.\n  pool: string | pool # Pool where post on failure steps will run.\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Home in Azure Pipelines YAML\nDESCRIPTION: Sets JAVA_HOME by selecting a JDK version or specifying a custom path, and optionally sets the JDK architecture.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\njavaHomeOption: 'JDKVersion'\njdkVersionOption: '1.11'\njdkArchitectureOption: 'x64'\n```\n\n----------------------------------------\n\nTITLE: Using BatchScript@1 Task in YAML Pipeline\nDESCRIPTION: YAML configuration to run the sample batch script (test.bat) using the BatchScript@1 task in an Azure Pipelines workflow.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/batch-script-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: BatchScript@1\n  inputs:\n    filename: 'test.bat'\n```\n\n----------------------------------------\n\nTITLE: Publishing Symbols Configuration for Azure Pipelines 2020\nDESCRIPTION: YAML configuration for PublishSymbols@2 task with basic parameter set for Azure Pipelines 2020 version and earlier.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-symbols-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Index sources and publish symbols v2\n# Index your source code and publish symbols to a file share or Azure Artifacts symbol server.\n- task: PublishSymbols@2\n  inputs:\n    #SymbolsFolder: '$(Build.SourcesDirectory)' # string. Path to symbols folder. Default: $(Build.SourcesDirectory).\n    SearchPattern: '**/bin/**/*.pdb' # string. Required. Search pattern. Default: **/bin/**/*.pdb.\n    #IndexSources: true # boolean. Index sources. Default: true.\n    #PublishSymbols: true # boolean. Publish symbols. Default: true.\n    SymbolServerType: # 'TeamServices' | 'FileShare'. Required when PublishSymbols = true. Symbol server type. \n    #SymbolsPath: # string. Optional. Use when PublishSymbols = true && SymbolServerType = FileShare. Path to publish symbols. \n    #CompressSymbols: false # boolean. Optional. Use when SymbolServerType = FileShare. Compress symbols. Default: false.\n    #DetailedLog: true # boolean. Verbose logging. Default: true.\n    #TreatNotIndexedAsWarning: false # boolean. Warn if not indexed. Default: false.\n    #SymbolsMaximumWaitTime: # string. Max wait time (min). \n    #SymbolsProduct: # string. Product. \n    #SymbolsVersion: # string. Version. \n    #SymbolsArtifactName: 'Symbols_$(BuildConfiguration)' # string. Artifact name. Default: Symbols_$(BuildConfiguration).\n```\n\n----------------------------------------\n\nTITLE: Using reviewApp in an Azure Pipelines Deployment Job\nDESCRIPTION: Example of using the reviewApp step within a deployment job in Azure Pipelines. It demonstrates how to set up a review app for a pull request in a specific environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-review-app.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n- deployment:\n  environment: \n     name: smarthotel-dev      \n     resourceName: $(System.PullRequest.PullRequestId) \n  pool:\n    name: 'ubuntu-latest'\n  strategy:                 \n    runOnce:            \n      pre-deploy: \n        steps:       \n        - reviewApp: MainNamespace\n```\n\n----------------------------------------\n\nTITLE: Configuring .NET Version for IIS Application Pool in YAML\nDESCRIPTION: Specifies the .NET Framework version to be used by the IIS application pool. Options include v4.0, v2.0, or No Managed Code, with v4.0 as the default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nDotNetVersion: 'v4.0'\n```\n\n----------------------------------------\n\nTITLE: Classic Pipeline for Docker Build and Publish\nDESCRIPTION: This bash script is used in a Classic Azure DevOps pipeline to build Docker images, run tests, copy results, and publish images to a registry. It includes inline scripts for both Docker Hub and Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\ndocker build -f Dockerfile.build -t $(dockerId)/dotnetcore-build:$BUILD_BUILDID .\ndocker run --name dotnetcoreapp --rm -d $(dockerId)/dotnetcore-build:$BUILD_BUILDID\ndocker cp dotnetcoreapp:app/dotnetcore-tests/TestResults $(System.DefaultWorkingDirectory)\ndocker cp dotnetcoreapp:app/dotnetcore-sample/out $(System.DefaultWorkingDirectory)\ndocker stop dotnetcoreapp\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker build -f Dockerfile -t $(dockerId)/dotnetcore-sample:$BUILD_BUILDID .\ndocker login -u $(dockerId) -p $(dockerPassword)\ndocker push $(dockerId)/dotnetcore-sample:$BUILD_BUILDID\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker build -t $(dockerId).azurecr.io/dotnetcore-sample:$BUILD_BUILDID . \ndocker login -u $(dockerId) -p $(dockerPassword) $(dockerId).azurecr.io \ndocker push $(dockerId).azurecr.io/dotnetcore-sample:$BUILD_BUILDID\n```\n\n----------------------------------------\n\nTITLE: Azure IoT Edge v2 Task Configuration for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML configuration for Azure IoT Edge v2 task in Azure Pipelines 2020.1 and earlier versions. Supports building, pushing, and deploying IoT Edge module images with options for amd64, windows-amd64, and arm32v7 platforms.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-iot-edge-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure IoT Edge v2\n# Build and deploy an Azure IoT Edge image.\n- task: AzureIoTEdge@2\n  inputs:\n    action: 'Build module images' # 'Build module images' | 'Push module images' | 'Generate deployment manifest' | 'Deploy to IoT Edge devices'. Required. Action. Default: Build module images.\n    #deploymentFilePath: '$(System.DefaultWorkingDirectory)/config/deployment.json' # string. Required when action == Deploy to IoT Edge devices. Deployment file. Default: $(System.DefaultWorkingDirectory)/config/deployment.json.\n    #azureSubscription: # string. Alias: connectedServiceNameARM. Required when action == Deploy to IoT Edge devices. Azure subscription contains IoT Hub. \n    #iothubname: # string. Required when action == Deploy to IoT Edge devices. IoT Hub name. \n    #deviceOption: # 'Single Device' | 'Multiple Devices'. Required when action == Deploy to IoT Edge devices. Choose single/multiple device. \n    #deviceId: # string. Required when deviceOption == Single Device. IoT Edge device ID. \n    #targetcondition: # string. Required when deviceOption == Multiple Devices. IoT Edge device target condition. \n    #containerregistrytype: 'Azure Container Registry' # 'Azure Container Registry' | 'Generic Container Registry'. Required when action = Push module images. Container registry type. Default: Azure Container Registry.\n    #dockerRegistryConnection: # string. Alias: dockerRegistryEndpoint. Required when containerregistrytype = Generic Container Registry. Docker Registry Connection. \n    #azureSubscriptionEndpoint: # string. Optional. Use when containerregistrytype = Azure Container Registry. Azure subscription. \n    #azureContainerRegistry: # string. Required when containerregistrytype = Azure Container Registry. Azure Container Registry. \n    #templateFilePath: 'deployment.template.json' # string. Required when action = Build module images || action = Push module images || action = Generate deployment manifest. .template.json file. Default: deployment.template.json.\n    #defaultPlatform: 'amd64' # 'amd64' | 'windows-amd64' | 'arm32v7'. Required when action = Build module images || action = Push module images || action = Generate deployment manifest. Default platform. Default: amd64.\n    #fillRegistryCredential: 'true' # 'true' | 'false'. Required when action = Push module images. Add registry credential to deployment manifest. Default: true.\n    #deploymentManifestOutputPath: '$(System.DefaultWorkingDirectory)/config/deployment.json' # string. Required when action == Generate deployment manifest. Output path. Default: $(System.DefaultWorkingDirectory)/config/deployment.json.\n    #validateGeneratedDeploymentManifest: 'false' # 'true' | 'false'. Required when action = Generate deployment manifest. Validate the schema of generated deployment manifest. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Windows: Importing Certificate to CurrentUser Root Store\nDESCRIPTION: PowerShell script to download a secure certificate file and import it to the CurrentUser root certificate store on a Windows agent.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-secure-file-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- task: DownloadSecureFile@1\n  displayName: 'Download certificate'\n  inputs:\n    secureFile: 'myCACertificate.pem'\n\n- powershell: |\n    $certPath = '$(caCertificate.secureFilePath)'\n    $certStoreLocation = 'Cert:\\CurrentUser\\Root'\n\n    Write-Host \"Importing certificate $certPath to $certStoreLocation...\"\n    $params = @{\n        FilePath = $certPath\n        CertStoreLocation = $certStoreLocation\n    }\n    Import-Certificate @params\n  displayName: 'Import CA certificate to CurrentUser root store'\n```\n\n----------------------------------------\n\nTITLE: Machine Connection String Example\nDESCRIPTION: Example of how to specify target machines with optional port numbers\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-on-target-machines-v3.md#2025-04-18_snippet_3\n\nLANGUAGE: text\nCODE:\n```\ndbserver.fabrikam.com,dbserver_int.fabrikam.com:5986,192.168.34:5986\n```\n\n----------------------------------------\n\nTITLE: Defining Azure DevOps Packer Template Inputs\nDESCRIPTION: YAML configuration schema defining the various input parameters available for the Packer template task in Azure DevOps pipelines. Includes options for template type, location, storage, base images, deployment scripts and more.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/packer-build-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntemplateType: # Required, string\n  builtin: \"Auto generated\"\n  custom: \"User provided\"\n\ncustomTemplateLocation: # Required when templateType=custom, string\n  \ncustomTemplateParameters: # Optional when templateType=custom, string\n  default: \"{}\"\n\nConnectedServiceName: # Required when templateType=builtin, string\n\nlocation: # Required when templateType=builtin, string\n\nstorageAccountName: # Required when templateType=builtin, string\n\nazureResourceGroup: # Required when templateType=builtin, string\n\nbaseImageSource: # Required when templateType=builtin, string\n  default: \"Gallery\"\n  customVhd: \"Custom\"\n\npackagePath: # Required when templateType=builtin, string\n\ndeployScriptPath: # Required when templateType=builtin, string\n\ndeployScriptArguments: # Optional when templateType=builtin, string\n\nadditionalBuilderParameters: # Optional when templateType=builtin, string\n  default: \"{}\"\n\nskipTempFileCleanupDuringVMDeprovision: # Optional when templateType=builtin, boolean\n  default: true\n\nimageUri: # string\n```\n\n----------------------------------------\n\nTITLE: Defining Working Directory Input for Azure Pipelines\nDESCRIPTION: This snippet specifies the `workDir` input parameter, which indicates the working directory for the Docker container. This optional string parameter is used when the action is 'Run an image'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"workDir\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`workDir`** - **Working Directory**<br>\n`string`. Optional. Use when `action = Run an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\n\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Basic ReviewApp Task Configuration in YAML\nDESCRIPTION: Basic syntax example showing required and optional inputs for the ReviewApp@0 task in Azure DevOps pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/review-app-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Review App v0\n# Use this task under deploy phase provider to create a resource dynamically.\n- task: ReviewApp@0\n  inputs:\n    resourceName: # string. Required. Resource name. \n    #baseEnvironmentName: # string. Environment name. \n    #reviewResourceName: # string. Review Resource Name.\n```\n\n----------------------------------------\n\nTITLE: Setting Container Name for Azure Blob Destination\nDESCRIPTION: Specifies the ContainerName input used when copying files to Azure Blob storage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n\"ContainerName\": - **Container Name**\n`string`. Required when `Destination = AzureBlob`.\nSpecify the name of the container into which files are copied. If the specified container does not exist in the storage account, it will be created.\n```\n\n----------------------------------------\n\nTITLE: Generating Web.config for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `GenerateWebConfig` parameter, a boolean value that indicates whether a standard `Web.config` file should be generated and deployed to the Azure App Service if one does not already exist. It is optional and used when deploying non-Linux web apps, excluding .war packages.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_11\n\nLANGUAGE: none\nCODE:\n```\n**`GenerateWebConfig`** - **Generate Web.config**<br>\n`boolean`. Optional. Use when `WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\" && Package NotEndsWith .war`. Default value: `false`.\n```\n\n----------------------------------------\n\nTITLE: Specifying Ant Targets in Azure Pipelines YAML\nDESCRIPTION: Defines an optional space-separated list of targets to build. If not specified, the default target is used.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntargets: 'target1 target2'\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Resources in Azure Pipelines YAML\nDESCRIPTION: Syntax for defining a list of webhook resources in an Azure Pipelines YAML file. This structure allows referencing webhook resources within the pipeline configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nwebhooks: [ webhook ] # List of webhooks.\n```\n\n----------------------------------------\n\nTITLE: Defining Job Name Input - Azure Pipelines - Markdown\nDESCRIPTION: Specifies the input `jobName` which indicates the Jenkins job from which artifacts are to be downloaded. The job name must match exactly as it is defined in Jenkins.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"jobName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`jobName`** - **Job name**<br>\n`string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the name of the Jenkins job to download artifacts from. This must exactly match the job name on the Jenkins server.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Build Context Input for Azure Pipelines\nDESCRIPTION: This snippet describes the `context` input parameter, which allows for specifying a custom build context path when the `defaultContext` is set to false. This optional string parameter is used during the 'Build an image' action.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"context\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`context`** - **Build Context**<br>\n`string`. Optional. Use when `action = Build an image && defaultContext = false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the path to the build context.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::monicker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining App Service URL Output Variable for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `WebAppUri` parameter, used to specify a name for the output variable that stores the URL of the Azure App Service. It is optional, and can be used to access the URL of the deployed application in subsequent tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_7\n\nLANGUAGE: none\nCODE:\n```\n**`WebAppUri`** - **App Service URL**<br>\n`string`. Optional. Use when `WebAppKind != \"\"`.\n```\n\n----------------------------------------\n\nTITLE: Specifying Output Variable for Storage Container SAS Token\nDESCRIPTION: Sets the name of the variable to store the SAS token for accessing the Azure Blob storage container where files were copied. This is only applicable when the destination is an Azure Blob.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\noutputStorageContainerSasToken: \"variableName\"\n```\n\n----------------------------------------\n\nTITLE: Installing Kubectl with Azure Pipelines YAML\nDESCRIPTION: This YAML snippet demonstrates how to install the latest version of the Kubectl tool using the KubectlInstaller@0 task in Azure Pipelines. It specifies the task and the input parameter for the version of Kubectl to install.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubectl-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: KubectlInstaller@0\n  inputs:\n    #kubectlVersion: 'latest' # string. Kubectl Version Spec. Default: latest.\n```\n\n----------------------------------------\n\nTITLE: Defining Application Parameters in YAML\nDESCRIPTION: Example of how to define application parameters in the application manifest file. These parameters can be overridden using pipeline variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n<Parameters> \n<Parameter Name=\"SampleApp_PartitionCount\" Value=\"1\" /> \n<Parameter Name=\"SampleApp_InstanceCount\" DefaultValue=\"-1\" /> \n</Parameters>\n```\n\n----------------------------------------\n\nTITLE: Installing Java from Local Directory on Linux\nDESCRIPTION: Configures Java Tool Installer to install Java version 11 from a local tar.gz archive, specifying destination directory and cleanup options\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/java-tool-installer-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: JavaToolInstaller@1\n    inputs:\n      versionSpec: \"11\"\n      jdkArchitectureOption: x64\n      jdkSourceOption: LocalDirectory\n      jdkFile: \"/builds/openjdk-11.0.2_linux-x64_bin.tar.gz\"\n      jdkDestinationDirectory: \"/builds/binaries/externals\"\n      cleanDestinationDirectory: true\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription in YAML\nDESCRIPTION: Selects the Azure Resource Manager subscription for deployment. Required when using ConnectedServiceName.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nConnectedServiceName: 'myAzureSubscription'\n```\n\n----------------------------------------\n\nTITLE: Authenticating Azure Artifacts Feeds in Custom settings.xml\nDESCRIPTION: XML fragment showing how to authenticate Azure Artifacts feeds in a custom settings.xml file when using the mvn -s switch. Requires setting the SYSTEM_ACCESSTOKEN environment variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<server>\n  <id>feedName</id> <!-- Set this to the id of the <repository> element inside your pom.xml file. -->\n  <username>AzureDevOps</username>\n  <password>${env.SYSTEM_ACCESSTOKEN}</password>\n</server>\n```\n\n----------------------------------------\n\nTITLE: Setting Code Signing Style\nDESCRIPTION: Parameter to control how code signing is handled during the build. Options include no signing, project defaults, manual signing with specific identity, or automatic signing.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xcode-v4.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsigningOption: nosign\n```\n\n----------------------------------------\n\nTITLE: Configuring Clean Target Option for Azure File Copy Task\nDESCRIPTION: Sets whether to clean the destination folder before copying files to Azure VMs. The default value is false.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nCleanTargetBeforeCopy: false\n```\n\n----------------------------------------\n\nTITLE: Using Variables Template in Azure Pipelines YAML for Component Y\nDESCRIPTION: Example of referencing and using the same variables template in a pipeline for Component Y. This shows how the template can be reused across different pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-template.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# File: component-y-pipeline.yml\nvariables:\n- template: variables/build.yml  # Template reference\npool:\n  vmImage: ${{ variables.vmImage }}\nsteps:\n- script: build y ${{ variables.arch }} ${{ variables.config }}\n```\n\n----------------------------------------\n\nTITLE: Defining AddBinding Parameter\nDESCRIPTION: Specifies the option to add port binding for the website. This is a boolean parameter with a default value of 'true' when 'CreateWebSite' is true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"AddBinding\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`AddBinding`** - **Add Binding**<br>\n`boolean`. Optional. Use when `CreateWebSite = true`. Default value: `true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the option to add port binding for the website.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Setting Deployment Location in YAML\nDESCRIPTION: Specifies the location for deploying the resource group. Required when creating or updating a resource group.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nlocation: 'East US'\n```\n\n----------------------------------------\n\nTITLE: Configuring CleanTargetBeforeCopy for Azure File Copy Task\nDESCRIPTION: Determines whether the destination folder should be cleaned before performing the copy action. Set to true to clean the target before copying.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nCleanTargetBeforeCopy: false\n```\n\n----------------------------------------\n\nTITLE: MSBuild Custom Arguments\nDESCRIPTION: This snippet describes the `msbuildArguments` parameter, which allows specifying additional arguments to be passed to MSBuild or xbuild.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`msbuildArguments`** - **MSBuild Arguments**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies additional arguments passed to MSBuild (on Windows) and xbuild (on macOS).\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Basic Pipeline Trigger Configuration with True\nDESCRIPTION: Simple configuration to trigger a pipeline run when any run of the referenced pipeline completes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger: true\n```\n\n----------------------------------------\n\nTITLE: Checking Downloaded Files in Azure Pipelines\nDESCRIPTION: Defines the input parameter `checkDownloadedFiles`, a boolean that specifies whether to verify that all files have been fully downloaded. Default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"checkDownloadedFiles\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`checkDownloadedFiles`** - **Check downloaded files**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nIf `true`, this build task checks that all files are fully downloaded.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Patch Version Configuration\nDESCRIPTION: This snippet defines the `patchVersion` parameter when using `versioningScheme = byPrereleaseNumber` and `command = pack`. It determines the 'Z' value in the SemVer version X.Y.Z.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n\"**`patchVersion`** - **Patch**<br>\n[Input alias](index.md#what-are-task-input-aliases): `requestedPatchVersion`. `string`. Required when `versioningScheme = byPrereleaseNumber && command = pack`. Default value: `0`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Artifacts Feeds\nDESCRIPTION: This boolean property enables automatic authentication with Azure Artifacts feeds.  If not using Artifacts feeds, deselecting this option can result in faster builds. The default value is `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_9\n\nLANGUAGE: none\nCODE:\n```\n\n**`mavenAuthenticateFeed`** - **Authenticate with Artifacts feeds**<br>\n[Input alias](index.md#what-are-task-input-aliases): `mavenFeedAuthenticate`. `boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nAutomatically authenticates with Azure Artifacts feeds. If Artifacts feeds are not in use, deselect this option for faster builds.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Specifying Deployment Script Path for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `ScriptPath` parameter, used to specify the file path to a deployment script. It's required when `ScriptType` is set to `File Path` and the `WebAppKind` is not empty.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_10\n\nLANGUAGE: none\nCODE:\n```\n**`ScriptPath`** - **Deployment script path**<br>\n`string`. Required when `ScriptType == File Path && WebAppKind != \"\"`.\n```\n\n----------------------------------------\n\nTITLE: Defining Build Number Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `jenkinsBuildNumber` specifies which build number to download artifacts from when the `jenkinsBuild` is set to `BuildNumber`. It's required but has a default value of `1`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"jenkinsBuildNumber\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`jenkinsBuildNumber`** - **Jenkins build number**<br>\n`string`. Required when `jenkinsBuild == BuildNumber`. Default value: `1`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDownloads artifacts produced by this build.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Delete Command Arguments Example\nDESCRIPTION: Example showing how to specify arguments for the kubectl delete command in a Kubernetes task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\narguments: deployment hello-world foo-bar\n```\n\n----------------------------------------\n\nTITLE: Excluding App_Data Folder Files in Azure App Service Deployment\nDESCRIPTION: Prevents files in the App_Data folder from being deployed to or deleted from the Azure App Service during deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nExcludeFilesFromAppDataFlag: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure App Service Classic Deployment in YAML\nDESCRIPTION: This YAML snippet shows how to configure the AzureWebPowerShellDeployment@1 task to deploy an Azure App Service. It specifies required inputs like Azure subscription, web app location, name, and package, as well as optional parameters like slot and additional arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-powershell-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure App Service Classic (Deprecated) v1\n# Create or update Azure App Service using Azure PowerShell.\n- task: AzureWebPowerShellDeployment@1\n  inputs:\n    ConnectedServiceName: # string. Required. Azure Subscription (Classic). \n    WebSiteLocation: # string. Required. Web App Location. \n    WebSiteName: # string. Required. Web App Name. \n    #Slot: # string. Slot. \n    Package: # string. Required. Web Deploy Package. \n    #doNotDelete: false # boolean. Set DoNotDelete flag. Default: false.\n    #AdditionalArguments: # string. Additional Arguments.\n```\n\n----------------------------------------\n\nTITLE: Publishing Pipeline Artifacts in Azure DevOps 2022+\nDESCRIPTION: YAML configuration for publishing pipeline artifacts in Azure DevOps 2022 and newer versions. Includes all available parameters including custom properties support.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-pipeline-artifact-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Publish Pipeline Artifacts v1\n# Publish (upload) a file or directory as a named artifact for the current run.\n- task: PublishPipelineArtifact@1\n  inputs:\n    targetPath: '$(Pipeline.Workspace)' # string. Alias: path. Required. File or directory path. Default: $(Pipeline.Workspace).\n    #artifact: # string. Alias: artifactName. Artifact name. \n    publishLocation: 'pipeline' # 'pipeline' | 'filepath'. Alias: artifactType. Required. Artifact publish location. Default: pipeline.\n    #fileSharePath: # string. Required when artifactType = filepath. File share path. \n    #parallel: false # boolean. Optional. Use when artifactType = filepath. Parallel copy. Default: false.\n    #parallelCount: '8' # string. Optional. Use when artifactType = filepath && parallel = true. Parallel count. Default: 8.\n    #properties: # string. Custom properties.\n```\n\n----------------------------------------\n\nTITLE: External Repository Configuration in pom.xml\nDESCRIPTION: XML fragment for pom.xml showing how to configure a reference to an external Maven repository. The repository ID must match the service connection name used in the Maven Authenticate task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<repository>\n  <id>central</id>\n  <url>https://repo1.maven.org/maven2/</url>\n  <releases>\n    <enabled>true</enabled>\n  </releases>\n  <snapshots>\n    <enabled>true</enabled>\n  </snapshots>\n</repository>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Web Config Parameter\nDESCRIPTION: Defines the `customWebConfig` optional parameter which will generate a web.config for certain app types if one does not already exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"customWebConfig\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`customWebConfig`** - **Generate web.config parameters for Python, Node.js, Go and Java apps**<br>\n`string`. Optional. Use when `appType != webAppLinux && package NotEndsWith .war`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nA standard web.config will be generated and deployed to Azure App Service if the application does not have one. The values in web.config vary based on the application framework, and they can be edited. For example, for the node.js application, web.config will have a startup file and iis_node module values. This edit feature is only for the [generated web.config](https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureRmWebAppDeploymentV4/README.md#parameters-of-the-task).\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining SourcePath Input for Azure File Copy Task\nDESCRIPTION: Specifies the absolute path of the source folder, file, or UNC share for the Azure File Copy task. This is a required string input.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nSourcePath:\n  string. Required.\n  Specify the absolute path of the source folder, file on the local machine, or a UNC share. The specified value or expression should return either a single folder name or a file name.\n```\n\n----------------------------------------\n\nTITLE: Packing a NuGet package to a specific output directory with .NET Core CLI in YAML\nDESCRIPTION: This example demonstrates how to pack a NuGet package and specify a custom output directory for the generated package. The output directory is set to a subdirectory within the build's artifact staging directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n# Pack a NuGet package to a test directory\n- task: DotNetCoreCLI@2\n  inputs: \n    command: 'pack'\n    outputDir: '$(Build.ArtifactStagingDirectory)/TestDir'\n```\n\n----------------------------------------\n\nTITLE: Overriding Test Run Parameters in Azure Pipelines YAML\nDESCRIPTION: Overrides parameters defined in the TestRunParameters section of runsettings or Properties section of testsettings file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/run-visual-studio-testsusing-test-agent-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\noverrideRunParams: 'AppURL=$(DeployURL);Port=8080'\n```\n\n----------------------------------------\n\nTITLE: Using Variables Template in Azure Pipelines YAML for Component X\nDESCRIPTION: Example of referencing and using a variables template in a pipeline for Component X. It demonstrates how to use the template variables in pool configuration and build steps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-template.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# File: component-x-pipeline.yml\nvariables:\n- template: variables/build.yml  # Template reference\npool:\n  vmImage: ${{ variables.vmImage }}\nsteps:\n- script: build x ${{ variables.arch }} ${{ variables.config }}\n```\n\n----------------------------------------\n\nTITLE: Using JSONFiles for Variable Substitution in Azure Pipelines\nDESCRIPTION: The `JSONFiles` parameter specifies a list of JSON files for variable substitution, allowing for nested or hierarchical variable definitions. This string option is optional and applies under specific deployment conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nJSONFiles: string  # Optional\n# Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\" && Package NotEndsWith .war.\n```\n\n----------------------------------------\n\nTITLE: Clearing Remote Directory Contents\nDESCRIPTION: This option clears the contents of the remote directory without deleting the directory itself. It is useful when you want to keep the directory but ensure it's empty before an upload.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"cleanContents\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`cleanContents`** - **Clear remote directory contents**<br>\n`boolean`. Optional. Use when `clean = false`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nRecursively deletes all content in the remote directory before uploading. The existing directory will not be deleted. For better performance, use `clean` instead.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining App Name Parameter\nDESCRIPTION: Defines the `appName` input parameter which requires the name of an existing Azure App Service to be specified for deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"appName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`appName`** - **App name**<br>\n`string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the name of an existing Azure App Service. Only app services that are based on the selected app type will be listed.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Download Step Syntax for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML syntax for the 'download' step in Azure Pipelines 2020.1 and earlier versions. This syntax is similar to newer versions but lacks the retryCountOnTaskFailure property.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-download.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- download: string # Required as first property. Specify current, pipeline resource identifier, or none to disable automatic download.\n  artifact: string # Artifact name.\n  patterns: string # Pattern to download files from artifact.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Specifying Cloud Service in YAML\nDESCRIPTION: Provides the name of the cloud service for Azure Classic deployments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ncloudService: 'myCloudService'\n```\n\n----------------------------------------\n\nTITLE: Configuring Diagnostic Storage and Custom Certificates\nDESCRIPTION: Specifies diagnostic storage account keys and custom certificates for the cloud service deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nDiagnosticStorageAccountKeys: 'WebRole:$(WebRole_storage_account_key);WorkerRole:$(WorkerRole_storage_account_key)'\nNewServiceCustomCertificates: 'MyCertificate1:$(Certificate1_password);MyCertificate2:$(Certificate2_password)'\n```\n\n----------------------------------------\n\nTITLE: Artifact Name Specification for Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `artifactName`, required when `downloadType` is set to `single`, to specify the name of the artifact intended for download.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"artifactName\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`artifactName`** - **Artifact name**<br>\n`string`. Required when `downloadType == single`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe name of the artifact to download.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Retrying Failed Downloads in Azure Pipelines\nDESCRIPTION: Defines the input parameter `retryDownloadCount`, which specifies how many times to attempt downloading a build artifact if an initial download fails. Default value is `4`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"retryDownloadCount\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`retryDownloadCount`** - **Retry count**<br>\n`string`. Default value: `4`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe number of times to retry downloading a build artifact if the download fails.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Setting Storage Options for Azure Cloud Service Deployment\nDESCRIPTION: Configures storage account settings for the deployment. Enables ARM storage support and specifies either classic or ARM storage accounts depending on the configuration.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nEnableAdvancedStorageOptions: false\nStorageAccount: 'MyClassicStorageAccount' # Required when EnableAdvancedStorageOptions = false\n\n# OR\n\nEnableAdvancedStorageOptions: true\nARMConnectedServiceName: 'MyARMSubscription' # Required when EnableAdvancedStorageOptions = true\nARMStorageAccount: 'MyARMStorageAccount' # Required when EnableAdvancedStorageOptions = true\n```\n\n----------------------------------------\n\nTITLE: Retrieving PFX Certificate from Task Variable\nDESCRIPTION: PowerShell code to retrieve a PFX certificate from a task variable that contains the certificate contents as a string. This is useful when working with certificates stored in Azure Key Vault.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-key-vault-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$kvSecretBytes = [System.Convert]::FromBase64String(\"$(PfxSecret)\")\n$certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n$certCollection.Import($kvSecretBytes,$null,[System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)\n```\n\n----------------------------------------\n\nTITLE: Defining Azure File Copy Task Inputs in YAML\nDESCRIPTION: This YAML snippet defines the input parameters for the Azure File Copy task. It includes required fields like SourcePath, azureSubscription, and Destination, as well as optional parameters for specifying storage accounts, resource groups, and VM credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureFileCopy@4\n  inputs:\n    SourcePath: '$(Build.Repository.LocalPath)'\n    azureSubscription: 'Resource Manager Connection'\n    Destination: 'AzureBlob' # or 'AzureVMs'\n    storage: 'storageaccountname'\n    ContainerName: 'containername'\n    BlobPrefix: 'blobprefix'\n    # Additional parameters for AzureVMs destination\n    # resourceGroup: 'resourcegroupname'\n    # ResourceFilteringMethod: 'machineNames' # or 'tags'\n    # MachineNames: 'comma-separated-vm-names'\n    # vmsAdminUserName: 'admin-username'\n    # vmsAdminPassword: 'admin-password'\n    # TargetPath: 'c:\\destination-folder'\n    # AdditionalArgumentsForBlobCopy: '/NC:10'\n    # AdditionalArgumentsForVMCopy: '/NC:10'\n    # enableCopyPrerequisites: false\n    # CopyFilesInParallel: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Locked File Renaming for Azure App Service Deployment\nDESCRIPTION: Sets the MSDEPLOY_RENAME_LOCKED_FILES flag to allow renaming of locked files during Azure App Service deployment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nRenameFilesFlag: true\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Classic Subscription in YAML\nDESCRIPTION: Selects the Azure Classic subscription for deployment. Required when using ConnectedServiceNameClassic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nConnectedServiceNameClassic: 'myAzureClassicSubscription'\n```\n\n----------------------------------------\n\nTITLE: Defining Volumes Input for Azure Pipelines\nDESCRIPTION: This snippet describes the `volumes` input, specifying the volumes to be mounted from the host when the Docker container is run. This optional string parameter is used during the 'Run an image' action, requiring a formatting of 'host-dir:container-dir'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"volumes\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`volumes`** - **Volumes**<br>\n`string`. Optional. Use when `action = Run an image`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the volumes to mount from the host. List each `host-dir:container-dir` on a new line.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining WebSiteAuthUserName Parameter\nDESCRIPTION: Specifies the username for accessing the website’s physical path. This is required when 'WebSitePhysicalPathAuth' is set to 'WebSiteWindowsAuth'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebSiteAuthUserName\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebSiteAuthUserName`** - **User Name**<br>\n`string`. Required when `WebSitePhysicalPathAuth = WebSiteWindowsAuth`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the user name for accessing the website's physical path.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: HelmDeploy@0 Task Placeholder (Azure Pipelines 2020.1)\nDESCRIPTION: This is a placeholder YAML snippet indicating the start of the HelmDeploy@0 task definition for Azure Pipelines version 2020.1. It serves as the initial structure for configuring Helm deployments within the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Package and deploy Helm charts v0\n```\n```\n\n----------------------------------------\n\nTITLE: Specifying Build Version to Download in Azure Pipelines\nDESCRIPTION: Defines the input parameter `buildVersionToDownload` to determine which version of the build to download. This string parameter is required when `buildType` is `specific`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"buildVersionToDownload\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`buildVersionToDownload`** - **Build version to download**<br>\n`string`. Required when `buildType == specific`. Allowed values: `latest`, `latestFromBranch` (Latest from specific branch and specified Build Tags), `specific` (Specific version). Default value: `latest`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies which version of the build to download.\n\n- Choose `latest` to download the latest available build version.\n- Choose `latestFromBranch` to download the latest available build version of the branch specified by `branchName` and tags specified by `tags`.\n- Choose `specific` to download the build version specified by `buildId`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring outputStorageUri for Azure File Copy Task\nDESCRIPTION: Specifies the variable name for storing the URI of the Azure Blob storage container where files were copied. Only applicable when the destination is an Azure Blob.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\noutputStorageUri: \"$(storageUri)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring enableXmlTransform for XML Transformations\nDESCRIPTION: The `enableXmlTransform` flag is used to enable XML transformation during the deployment process. This boolean flag is optional and applies only to certain types of applications. It allows config transforms to execute on designated .config files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nenableXmlTransform: boolean  # Optional, default: false\n# Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\" && Package NotEndsWith .war.\n```\n\n----------------------------------------\n\nTITLE: Using InstallAppleCertificate@0 Task in Azure Pipelines YAML\nDESCRIPTION: This YAML configuration demonstrates how to use the InstallAppleCertificate@0 task to install an Apple certificate from a secure file into a keychain on a macOS agent. The task includes various parameters for certificate password, keychain selection, and cleanup options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/install-apple-certificate-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Install Apple Certificate v0\n# Install an Apple certificate required to build on a macOS agent.\n- task: InstallAppleCertificate@0\n  inputs:\n    certSecureFile: # string. Required. Certificate (P12). \n    #certPwd: # string. Certificate (P12) Password. \n  # Advanced\n    keychain: 'temp' # 'default' | 'temp' | 'custom'. Required. Keychain. Default: temp.\n    #keychainPassword: # string. Keychain Password. \n    #customKeychainPath: # string. Required when keychain = custom. Custom Keychain Path. \n    #deleteCert: # boolean. Optional. Use when keychain = custom || keychain = default. Delete Certificate from Keychain. \n    #deleteCustomKeychain: # boolean. Optional. Use when keychain = custom. Delete Custom Keychain. \n    #signingIdentity: # string. Certificate Signing Identity.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Additional Build Properties Configuration\nDESCRIPTION: This snippet defines the `buildProperties` parameter for the NuGet `pack` command. It allows specifying a list of token=value pairs to replace tokens in the `.nuspec` file.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_18\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Optional. Use when `command = pack`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Connection\nDESCRIPTION: Specifies the Azure Resource Manager service connection for accessing Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription:\n  type: string\n  required: true\n  alias: ConnectedServiceNameARM\n```\n\n----------------------------------------\n\nTITLE: Basic KubeloginInstaller Example\nDESCRIPTION: Example showing how to use the KubeloginInstaller task to install the latest version of kubelogin, followed by a dependent task that uses kubelogin.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubelogin-installer-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: KubeloginInstaller@0\n\n# Other tasks that depend on kubelogin\n- task: HelmDeploy@0\n  # task inputs...\n```\n\n----------------------------------------\n\nTITLE: Example Pipeline with Advanced Security Dependency Scanning\nDESCRIPTION: This YAML snippet demonstrates how to incorporate the Advanced Security Dependency Scanning task into a pipeline, showing its placement after build steps but before cleanup.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/advanced-security-dependency-scanning-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Authenticate Azure DevOps NuGet feed \n- task: NuGetAuthenticate@1 \n  displayName: 'Authenticate Azure DevOps NuGet feed' \n\n# Restore project \n- task: DotNetCoreCLI@2 \n  inputs: \n    command: 'custom' \n    custom: 'restore' \n\n# Build project \n- task: DotNetCoreCLI@2 \n  inputs: \n    command: 'custom' \n    custom: 'build' \n    arguments: '--no-restore' \n\n# Run dependency scanning \n- task: AdvancedSecurity-Dependency-Scanning@1 \n  displayName: 'Advanced Security Dependency Scanning' \n```\n\n----------------------------------------\n\nTITLE: Defining Requirements Table in Markdown\nDESCRIPTION: A markdown table that lists and describes various requirements for an Azure Pipelines task. It includes details such as pipeline types, execution environments, demands, capabilities, command restrictions, settable variables, agent version, and task category.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/bash-v3.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.115.0 or greater |\n| Task category | Utility |\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription in Azure Pipelines\nDESCRIPTION: This snippet provides the input alias and requirements for specifying an Azure subscription in the pipeline. It is necessary when using Azure Resource Manager for Docker settings, with a dependency on certain security conditions for encrypting registry secrets.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n**`azureSubscription`** - **Azure subscription**  \n[Input alias](index.md#what-are-task-input-aliases): `azureSubscriptionEndpoint`. `string`. Required when `configureDockerSettings = true && registryCredentials = AzureResourceManagerEndpoint`.\n```\n\n----------------------------------------\n\nTITLE: Setting CopyFilesInParallel for Azure File Copy Task\nDESCRIPTION: Configures whether files should be copied in parallel to target VMs. Default is true for parallel copying.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nCopyFilesInParallel: true\n```\n\n----------------------------------------\n\nTITLE: Build Tags Specification for Artifacts in Azure Pipelines\nDESCRIPTION: Defines the input parameter `tags`, an optional string input that specifies a comma-delimited list of tags for filtering builds when downloading artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"tags\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`tags`** - **Build Tags**<br>\n`string`. Optional. Use when `buildType == specific && buildVersionToDownload != specific`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nA comma-delimited list of tags. Only builds with these tags are returned.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining packageForLinux Input for Web App Deployment\nDESCRIPTION: This snippet defines the `packageForLinux` input, also aliased as `Package`.  It specifies the file path to the package or folder containing the app service contents, defaulting to `$(System.DefaultWorkingDirectory)/**/*.zip`. This input is required for deployments using either `PublishProfile` or various `WebAppKind` values.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`packageForLinux`** - **Package or folder**<br>\n[Input alias](index.md#what-are-task-input-aliases): `Package`. `string`. Required when `ConnectionType = PublishProfile || WebAppKind = webApp || WebAppKind = apiApp || WebAppKind = functionApp || WebAppKind = mobileApp || WebAppKind = webAppLinux || webAppKind = functionAppLinux`. Default value: `$(System.DefaultWorkingDirectory)/**/*.zip`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe file path to the package, or to a folder containing app service contents generated by MSBuild or a compressed zip or war file.\n\nVariables are [Build](/azure/devops/pipelines/build/variables) and [Release](/azure/devops/pipelines/release/variables#default-variables). [Wildcards](/azure/devops/pipelines/tasks/file-matching-patterns) are supported.\n\nFor example, `$(System.DefaultWorkingDirectory)/**/*.zip` or `$(System.DefaultWorkingDirectory)/**/*.war`.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Setting AdditionalArguments for Web Deploy\nDESCRIPTION: The `AdditionalArguments` allows users to specify extra parameters for Web Deploy in a string format. These arguments are optional and are applied during the deployment of Azure App Services under certain conditions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nAdditionalArguments: string  # Optional\n# Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\".\n```\n\n----------------------------------------\n\nTITLE: Defining WebDeployParamFile Parameter\nDESCRIPTION: Specifies the location of the parameter file on the target machines. This parameter is used for overriding application configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebDeployParamFile\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebDeployParamFile`** - **Web Deploy Parameter File**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the location of the parameter file on the target machines or on a UNC path. The parameter file is used to override Web application configuration settings, like the IIS Web application name or database connection string.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Archive Files Task Configuration for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML configuration for the ArchiveFiles@2 task in Azure Pipelines 2020.1 and earlier versions. Shows legacy compression settings with numeric compression levels.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/archive-files-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Archive files v2\n# Compress files into .7z, .tar.gz, or .zip.\n- task: ArchiveFiles@2\n  inputs:\n    rootFolderOrFile: '$(Build.BinariesDirectory)' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).\n    #includeRootFolder: true # boolean. Prepend root folder name to archive paths. Default: true.\n  # Archive\n    archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.\n    #sevenZipCompression: '5' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: 5.\n    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.\n    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.\n    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.\n    #verbose: false # boolean. Force verbose output. Default: false.\n    #quiet: false # boolean. Force quiet output. Default: false.\n```\n\n----------------------------------------\n\nTITLE: Defining WinRMProtocol Parameter\nDESCRIPTION: Specifies the protocol for the WinRM connection with machines. Acceptable values are 'Http' and 'Https', with 'Https' as the default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WinRMProtocol\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WinRMProtocol`** - **Protocol**<br>\n`string`. Allowed values: `Http`, `Https`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the protocol used for the WinRM connection with the machine(s). The default is `HTTPS`.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Setting skipCACheck for Azure File Copy Task\nDESCRIPTION: Controls whether to validate if the server certificate was signed by a trusted CA before connecting over HTTPS. Default is true, which skips the validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nskipCACheck: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate Validation for Azure File Copy Task\nDESCRIPTION: Determines whether to validate the server certificate before connecting over HTTPS. The default value of true skips CA certificate validation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nskipCACheck: true\n```\n\n----------------------------------------\n\nTITLE: IIS Web App Management Task\nDESCRIPTION: This snippet demonstrates the usage of the IISWebAppManagementOnMachineGroup task to manage IIS websites, web apps, virtual directories, or application pools. It defines various input parameters to configure the task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n\"- task: IISWebAppManagementOnMachineGroup@0\n  inputs:\n    #EnableIIS: false # boolean. Enable IIS. Default: false.\n    IISDeploymentType: 'IISWebsite' # 'IISWebsite' | 'IISWebApplication' | 'IISVirtualDirectory' | 'IISApplicationPool'. Required. Configuration type. Default: IISWebsite.\n    ActionIISWebsite: 'CreateOrUpdateWebsite' # 'CreateOrUpdateWebsite' | 'StartWebsite' | 'StopWebsite'. Required when IISDeploymentType = IISWebsite. Action. Default: CreateOrUpdateWebsite.\n    #ActionIISApplicationPool: 'CreateOrUpdateAppPool' # 'CreateOrUpdateAppPool' | 'StartAppPool' | 'StopAppPool' | 'RecycleAppPool'. Required when IISDeploymentType = IISApplicationPool. Action. Default: CreateOrUpdateAppPool.\n    #StartStopWebsiteName: # string. Required when ActionIISWebsite = StartWebsite || ActionIISWebsite = StopWebsite. Website name. \n    #Protocol: 'http' # 'https' | 'http'. Required when IISDeploymentType = randomDeployment. Protocol. Default: http.\n    #IPAddress: 'All Unassigned' # string. Required when IISDeploymentType = randomDeployment. IP address. Default: All Unassigned.\n    #Port: '80' # string. Required when IISDeploymentType = randomDeployment. Port. Default: 80.\n    #ServerNameIndication: false # boolean. Optional. Use when IISDeploymentType = randomDeployment. Server Name Indication required. Default: false.\n    #HostNameWithOutSNI: # string. Optional. Use when IISDeploymentType = randomDeployment. Host name. \n    #HostNameWithHttp: # string. Optional. Use when IISDeploymentType = randomDeployment. Host name. \n    #HostNameWithSNI: # string. Required when IISDeploymentType = randomDeployment. Host name. \n    #SSLCertThumbPrint: # string. Required when IISDeploymentType = randomDeployment. SSL certificate thumbprint. \n    #StartStopRecycleAppPoolName: # string. Required when ActionIISApplicationPool = StartAppPool || ActionIISApplicationPool = StopAppPool || ActionIISApplicationPool = RecycleAppPool. Application pool name. \n  # IIS Website\n    WebsiteName: # string. Required when ActionIISWebsite = CreateOrUpdateWebsite. Website name. \n    WebsitePhysicalPath: '%SystemDrive%\\inetpub\\wwwroot' # string. Required when ActionIISWebsite = CreateOrUpdateWebsite. Physical path. Default: %SystemDrive%\\inetpub\\wwwroot.\n    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough' # 'WebsiteUserPassThrough' | 'WebsiteWindowsAuth'. Required when ActionIISWebsite = CreateOrUpdateWebsite. Physical path authentication. Default: WebsiteUserPassThrough.\n    #WebsiteAuthUserName: # string. Required when WebsitePhysicalPathAuth = WebsiteWindowsAuth && ActionIISWebsite = CreateOrUpdateWebsite. Username. \n    #WebsiteAuthUserPassword: # string. Optional. Use when WebsitePhysicalPathAuth = WebsiteWindowsAuth && ActionIISWebsite = CreateOrUpdateWebsite. Password. \n    #AddBinding: false # boolean. Optional. Use when ActionIISWebsite = CreateOrUpdateWebsite. Add binding. Default: false.\n    #CreateOrUpdateAppPoolForWebsite: false # boolean. Optional. Use when ActionIISWebsite = CreateOrUpdateWebsite. Create or update app pool. Default: false.\n    #ConfigureAuthenticationForWebsite: false # boolean. Optional. Use when ActionIISWebsite = CreateOrUpdateWebsite. Configure authentication. Default: false.\n  # IIS Bindings\n    #Bindings: # string. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && AddBinding = true. Add bindings. \n  # IIS Application pool\n    #AppPoolNameForWebsite: # string. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Name. \n    #DotNetVersionForWebsite: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. .NET version. Default: v4.0.\n    #PipeLineModeForWebsite: 'Integrated' # 'Integrated' | 'Classic'. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Managed pipeline mode. Default: Integrated.\n    #AppPoolIdentityForWebsite: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Identity. Default: ApplicationPoolIdentity.\n    #AppPoolUsernameForWebsite: # string. Required when AppPoolIdentityForWebsite = SpecificUser && IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Username. \n    #AppPoolPasswordForWebsite: # string. Optional. Use when AppPoolIdentityForWebsite = SpecificUser && IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Password. \n  # IIS Authentication\n    #AnonymousAuthenticationForWebsite: false # boolean. Optional. Use when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && ConfigureAuthenticationForWebsite = true. Anonymous authentication. Default: false.\n    #BasicAuthenticationForWebsite: false # boolean. Optional. Use when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && ConfigureAuthenticationForWebsite = true. Basic authentication. Default: false.\n    #WindowsAuthenticationForWebsite: true # boolean. Optional. Use when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && ConfigureAuthenticationForWebsite = true. Windows authentication. Default: true.\n  # IIS Virtual directory\n    #ParentWebsiteNameForVD: # string. Required when IISDeploymentType = IISVirtualDirectory. Parent website name. \n    #VirtualPathForVD: # string. Required when IISDeploymentType = IISVirtualDirectory. Virtual path. \n    #PhysicalPathForVD: '%SystemDrive%\\inetpub\\wwwroot' # string. Required when IISDeploymentType = IISVirtualDirectory. Physical path. Default: %SystemDrive%\\inetpub\\wwwroot.\n    #VDPhysicalPathAuth: 'VDUserPassThrough' # 'VDUserPassThrough' | 'VDWindowsAuth'. Optional. Use when IISDeploymentType = IISVirtualDirectory. Physical path authentication. Default: VDUserPassThrough.\n    #VDAuthUserName: # string. Required when VDPhysicalPathAuth = VDWindowsAuth && IISDeploymentType = IISVirtualDirectory. Username. \n    #VDAuthUserPassword: # string. Optional. Use when VDPhysicalPathAuth = VDWindowsAuth && IISDeploymentType = IISVirtualDirectory. Password. \n  # IIS Application\n    #ParentWebsiteNameForApplication: # string. Required when IISDeploymentType = IISWebApplication. Parent website name. \n    #VirtualPathForApplication: # string. Required when IISDeploymentType = IISWebApplication. Virtual path. \n    #PhysicalPathForApplication: '%SystemDrive%\\inetpub\\wwwroot' # string. Required when IISDeploymentType = IISWebApplication. Physical path. Default: %SystemDrive%\\inetpub\\wwwroot.\n    #ApplicationPhysicalPathAuth: 'ApplicationUserPassThrough' # 'ApplicationUserPassThrough' | 'ApplicationWindowsAuth'. Optional. Use when IISDeploymentType = IISWebApplication. Physical path authentication. Default: ApplicationUserPassThrough.\n    #ApplicationAuthUserName: # string. Required when ApplicationPhysicalPathAuth = ApplicationWindowsAuth && IISDeploymentType = IISWebApplication. Username. \n    #ApplicationAuthUserPassword: # string. Optional. Use when ApplicationPhysicalPathAuth = ApplicationWindowsAuth && IISDeploymentType = IISWebApplication. Password. \n    #CreateOrUpdateAppPoolForApplication: false # boolean. Optional. Use when IISDeploymentType = IISWebApplication. Create or update app pool. Default: false.\n  # IIS Application pool\n    #AppPoolNameForApplication: # string. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Name. \n    #DotNetVersionForApplication: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. .NET version. Default: v4.0.\n    #PipeLineModeForApplication: 'Integrated' # 'Integrated' | 'Classic'. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Managed pipeline mode. Default: Integrated.\n    #AppPoolIdentityForApplication: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Identity. Default: ApplicationPoolIdentity.\n    #AppPoolUsernameForApplication: # string. Required when AppPoolIdentityForApplication = SpecificUser && IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Username. \n    #AppPoolPasswordForApplication: # string. Optional. Use when AppPoolIdentityForApplication = SpecificUser && IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Password. \n  # IIS Application pool\n    AppPoolName: # string. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. Name. \n    DotNetVersion: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. .NET version. Default: v4.0.\n    PipeLineMode: 'Integrated' # 'Integrated' | 'Classic'. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. Managed pipeline mode. Default: Integrated.\n    AppPoolIdentity: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. Identity. Default: ApplicationPoolIdentity.\n    #AppPoolUsername: # string. Required when AppPoolIdentity = SpecificUser && ActionIISApplicationPool = CreateOrUpdateAppPool. Username. \"\n```\n\n----------------------------------------\n\nTITLE: Defining Output Variables for Azure Pipelines (=2020)\nDESCRIPTION: This snippet describes the definition of the 'BuildNumber' output variable specifically for Azure Pipelines version 2020. This version also allows the variable to be utilized in downstream tasks without additional context.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v0.md#2025-04-18_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n:::moniker range=\\\"=azure-pipelines-2020\\\"\n\nThis task defines the following [output variables](/azure/devops/pipelines/process/variables#use-output-variables-from-tasks), which you can consume in downstream steps, jobs, and stages.\n\n<!-- :::item name=\\\"BuildNumber\\\"::: -->\n**`BuildNumber`**<br><!-- :::editable-content name=\\\"Value\\\"::: -->\nStores the build artifact source's build number.\n<!-- :::editable-content-end::: -->\n<!-- :::item-end::: -->\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Defining WebAppName Input for AzureRM Connection\nDESCRIPTION: This snippet defines the `WebAppName` input, which is required when using the `AzureRM` connection type. It represents the name of the existing Azure App Service where the deployment will occur.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`WebAppName`** - **App Service name**<br>\n`string`. Required when `ConnectionType = AzureRM`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the name of an existing Azure App Service. App services based on the selected app type will only be listed when using the task assistant.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Using ExcludeFilesFromAppDataFlag in Azure Pipelines\nDESCRIPTION: The `ExcludeFilesFromAppDataFlag` parameter is used to prevent files in the `App_Data` folder from being deployed or deleted in Azure App Services. This boolean flag is optional and is applicable when specific conditions regarding Web Deploy and the App Service type are met.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nExcludeFilesFromAppDataFlag: boolean  # Optional, default: false\n# Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\".\n```\n\n----------------------------------------\n\nTITLE: Defining Input for Downloading Artifacts - Azure Pipelines - Markdown\nDESCRIPTION: The `jenkinsBuild` input determines whether to download artifacts from the last successful build or from a specified build number. It is required with a default value of `LastSuccessfulBuild`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"jenkinsBuild\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`jenkinsBuild`** - **Download artifacts produced by**<br>\n`string`. Required. Allowed values: `LastSuccessfulBuild` (Last Successful Build), `BuildNumber` (Build Number). Default value: `LastSuccessfulBuild`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nDownloads artifacts produced by the last successful build or from a specific build instance.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: InstallSSHKey Task Usage in YAML Pipelines\nDESCRIPTION: Two equivalent YAML snippets demonstrating how both an alias (knownHostsEntry) and the original name (hostName) can be used interchangeably in YAML pipelines for the same functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_5\n\nLANGUAGE: yml\nCODE:\n```\n# Using the alias 'knownHostsEntry'\nsteps:\n- task: InstallSSHKey@0\n  inputs:\n    knownHostsEntry: example.com ssh-rsa THISISMYKEYDATA...\n    sshPublicKey: ssh-rsa THISISMYKEYDATA...\n    sshKeySecureFile: id_rsa\n\n# Using the original name 'hostName'\nsteps:\n- task: InstallSSHKey@0\n  inputs:\n    hostName: example.com ssh-rsa THISISMYKEYDATA...\n    sshPublicKey: ssh-rsa THISISMYKEYDATA...\n    sshKeySecureFile: id_rsa\n```\n\n----------------------------------------\n\nTITLE: FTP Upload Task Syntax (Azure Pipelines <= 2022.1)\nDESCRIPTION: This YAML snippet defines the syntax for the FtpUpload@2 task in Azure Pipelines for versions 2022.1 and earlier. It provides configuration options for FTP uploads, including authentication, server details, file patterns, and remote directory. It includes parameters for advanced settings such as UTF8 support, directory cleaning, SSL trust, and custom FTP commands.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# FTP upload v2\n# Upload files using FTP.\n- task: FtpUpload@2\n  inputs:\n    credentialsOption: 'serviceEndpoint' # 'serviceEndpoint' | 'inputs'. Alias: credsType. Required. Authentication Method. Default: serviceEndpoint.\n    serverEndpoint: # string. Required when credsType = serviceEndpoint. FTP Service Connection. \n    #serverUrl: # string. Required when credsType = inputs. Server URL. \n    #username: # string. Required when credsType = inputs. Username. \n    #password: # string. Required when credsType = inputs. Password. \n    rootDirectory: # string. Alias: rootFolder. Required. Root folder. \n    filePatterns: '**' # string. Required. File patterns. Default: **.\n    remoteDirectory: '/upload/$(Build.BuildId)/' # string. Alias: remotePath. Required. Remote directory. Default: /upload/$(Build.BuildId)/.\n  # Advanced\n    #enableUtf8: false # boolean. Enable UTF8 support. Default: false.\n    #clean: false # boolean. Delete remote directory. Default: false.\n    #cleanContents: false # boolean. Optional. Use when clean = false. Clear remote directory contents. Default: false.\n    #preservePaths: false # boolean. Preserve file paths. Default: false.\n    #trustSSL: false # boolean. Trust server certificate. Default: false.\n    #customCmds: # string. FTP Commands.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Deleting a GitHub Release\nDESCRIPTION: YAML configuration to delete an existing GitHub release. The release to be deleted is identified by the specified tag variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: GithubRelease@1\n  displayName: 'Delete GitHub Release'\n  inputs:\n    gitHubConnection: zenithworks\n    repositoryName: zenithworks/javaAppWithMaven\n    action: delete\n    tag: $(myDraftReleaseVersion)\n```\n\n----------------------------------------\n\nTITLE: PowerShell Script with Multiple Arguments\nDESCRIPTION: A PowerShell script that accepts and uses multiple input parameters.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/powershell-v2.md#2025-04-18_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nparam ($input1, $input2)\nWrite-Host \"$input1 $input2\"\n```\n\n----------------------------------------\n\nTITLE: NuGet@0 Task Syntax in YAML\nDESCRIPTION: Defines the syntax for using the NuGet@0 task in a YAML pipeline. It shows the task definition with its 'command' input, which is required, and an optional 'arguments' input. Note that this task is deprecated and the 'NuGet' task should be used instead.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"# NuGet command v0\n# Deprecated: use the “NuGet” task instead. It works with the new Tool Installer framework so you can easily use new versions of NuGet without waiting for a task update, provides better support for authenticated feeds outside this organization/collection, and uses NuGet 4 by default.\n- task: NuGet@0\n  inputs:\n    command: # string. Required. Command. \n    #arguments: # string. Arguments.\"\n```\n\n----------------------------------------\n\nTITLE: YAML Schema for Known Hosts Entry in JSON\nDESCRIPTION: JSON representation of the Known Hosts Entry task input from the YAML schema showing how aliases are promoted in the schema, with the original name moved to the aliases collection for intellisense purposes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"knownHostsEntry\",\n  \"type\": \"string\",\n  \"required\": true,\n  \"displayName\": \"Known Hosts Entry\",\n  \"aliases\": [\n    \"hostName\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting outputStorageContainerSasToken for Azure File Copy Task\nDESCRIPTION: Specifies the variable name for storing the SAS token of the Azure Blob storage container for accessing copied files. Only applicable when the destination is an Azure Blob.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\noutputStorageContainerSasToken: \"$(sasToken)\"\n```\n\n----------------------------------------\n\nTITLE: Defining Directory to Save Artifacts - Azure Pipelines - Markdown\nDESCRIPTION: The input `saveTo` specifies the directory where downloaded Jenkins artifacts will be saved. The default directory is set to `jenkinsArtifacts`. The directory will be created if it does not exist.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"saveTo\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`saveTo`** - **Save to**<br>\n`string`. Required. Default value: `jenkinsArtifacts`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the directory where Jenkins artifacts are downloaded and saved.\n This directory is created if it does not exist.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Azure Storage Copy Source Path Configuration\nDESCRIPTION: Defines the source path input for file copying. Supports system variables and wildcard paths.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v4.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nSourcePath:\n  string. Required.\n  Supports predefined system variables and wildcards\n```\n\n----------------------------------------\n\nTITLE: Defining Runtime Stack Parameter\nDESCRIPTION: Defines the `runtimeStack` optional parameter used when deploying a Linux Web App, specifying the desired runtime environment among different supported versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"runtimeStack\"::: -->\n:::moniker range=\"=azure-pipelines\"\n\n**`runtimeStack`** - **Runtime stack**<br>\n`string`. Optional. Use when `appType = webAppLinux`. Allowed values: `DOTNETCORE:9.0` (.NET 9.0), `DOTNETCORE:8.0` (.NET 8.0), `DOTNETCORE:7.0` (.NET 7.0), `DOTNETCORE:6.0` (.NET 6.0), `NODE:20-lts` (Node 20 LTS), `NODE:18-lts` (Node 18 LTS), `NODE:16-lts` (Node 16 LTS), `PYTHON:3.12` (Python 3.12), `PYTHON:3.11` (Python 3.11), `PYTHON:3.10` (Python 3.10), `PYTHON:3.9` (Python 3.9), `PYTHON:3.8` (Python 3.8), `PHP:8.3` (PHP 8.3), `PHP:8.2` (PHP 8.2), `PHP:8.1` (PHP 8.1), `PHP:8.0` (PHP 8.0), `JAVA:21-java21` (Java 21), `JAVA:17-java17` (Java 17), `JAVA:11-java11` (Java 11), `JAVA:8-jre8` (Java 8), `JBOSSEAP:8-java17` (JBoss EAP 8 (Java 17)), `JBOSSEAP:8-java11` (JBoss EAP 8 (Java 11)), `JBOSSEAP:7-java17` (JBoss EAP 7 (Java 17)), `JBOSSEAP:7-java11` (JBoss EAP 7 (Java 11)), `JBOSSEAP:7-java8` (JBoss EAP 7 (Java 8)), `TOMCAT:10.1-java21` (Tomcat 10.1 (Java 21)), `TOMCAT:10.1-java17` (Tomcat 10.1 (Java 17)), `TOMCAT:10.1-java11` (Tomcat 10.1 (Java 11)), `TOMCAT:10.0-java17` (Tomcat 10.0 (Java 17)), `TOMCAT:10.0-java11` (Tomcat 10.0 (Java 11)), `TOMCAT:10.0-jre8` (Tomcat 10.0 (Java 8)), `TOMCAT:9.0-java21` (Tomcat 9.0 (Java 21)), `TOMCAT:9.0-java17` (Tomcat 9.0 (Java 17)), `TOMCAT:9.0-java11` (Tomcat 9.0 (Java 11)), `TOMCAT:9.0-jre8` (Tomcat 9.0 (Java 8)), `TOMCAT:8.5-java11` (Tomcat 8.5 (Java 11)), `TOMCAT:8.5-jre8` (Tomcat 8.5 (Java 8)).<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nWeb App on Linux offers two different options to publish your application: custom image deployment (Web App for Containers) and app deployment with a built-in platform image (Web App on Linux). This parameter is only available when **Linux Web App** is selected as an app type in the task.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n\n:::moniker range=\"<=azure-pipelines-2022.2\"\n\n**`runtimeStack`** - **Runtime stack**<br>\n`string`. Optional. Use when `appType = webAppLinux`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nWeb App on Linux offers two different options to publish your application: custom image deployment (Web App for Containers) and app deployment with a built-in platform image (Web App on Linux). This parameter is only available when **Linux Web App** is selected as an app type in the task.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Authentication Type\nDESCRIPTION: Defines the authentication method for connecting to Azure SQL databases, supporting various authentication types like SQL Server, Active Directory, and service principal\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-azure-dacpac-deployment-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nAuthenticationType: server\n```\n\n----------------------------------------\n\nTITLE: Changelog Type Definition\nDESCRIPTION: Defines the `changeLogType` property, specifying the type of changelog to generate. It is a required string when `addChangeLog` is true, with allowed values of `commitBased` or `issueBased`. The default value is `commitBased`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/github-release-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n\"`changeLogType`** - **Changelog type**<br>\n`string`. Required when `addChangeLog = true`. Allowed values: `commitBased` (Commit based), `issueBased` (Issue based). Default value: `commitBased`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Defining Requirements Table in Markdown for Azure DevOps YAML Schema\nDESCRIPTION: This snippet creates a markdown table specifying various requirements for using Azure DevOps YAML schema in pipelines. It includes details on pipeline types, execution environment, demands, capabilities, command restrictions, settable variables, agent versions, and task category.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-to-azure-service-bus-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Server |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version | All supported agent versions. |\n| Task category | Utility |\n```\n\n----------------------------------------\n\nTITLE: Configuring SetParameters File for Azure App Service Deployment\nDESCRIPTION: Specifies the location of the SetParameters.xml file to use when deploying to an Azure App Service using Web Deploy.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\nSetParametersFile: \"path/to/SetParameters.xml\"\n```\n\n----------------------------------------\n\nTITLE: Using Brace Expansion for File Deletion in Azure Pipelines\nDESCRIPTION: This example demonstrates how to use brace expansion in the DeleteFiles@1 task to delete specific subdirectories while leaving others intact.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/delete-files-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DeleteFiles@1\n  displayName: 'Remove unneeded files'\n  inputs:\n    contents: |\n      some/{one,four}\n```\n\n----------------------------------------\n\nTITLE: Defining Task Requirements in Markdown Table\nDESCRIPTION: This snippet shows how to format a markdown table to display task requirements for Azure DevOps Pipelines, including pipeline types, agent requirements, and task categories.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ant-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | Self-hosted agents must have [capabilities](/azure/devops/pipelines/agents/agents#capabilities) that match the following [demands](/azure/devops/pipelines/process/demands) to run jobs that use this task: ant |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  1.89.0 or greater |\n| Task category | Build |\n```\n\n----------------------------------------\n\nTITLE: Simplified Branch Include Filter Configuration\nDESCRIPTION: Simplified syntax for specifying only branch includes without excludes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger:\n      branches:\n      - main\n      - develop\n```\n\n----------------------------------------\n\nTITLE: Defining Start Jenkins Build Number Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `startJenkinsBuildNumber` specifies the starting build number for the download of commits and work items when this functionality is enabled. It is optional.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"startJenkinsBuildNumber\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`startJenkinsBuildNumber`** - **Download commits and work items from**<br>\n`string`. Optional. Use when `downloadCommitsAndWorkItems == true && jenkinsBuild == BuildNumber`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nStarts the build number for downloading commits and work items. If provided, all commits and work items between the start build number and the build number given as input to download artifacts are downloaded.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: NuGet v2 YAML Snippet\nDESCRIPTION: This YAML snippet represents a simplified version of the NuGet v2 task configuration, intended for Azure Pipelines. It serves as a placeholder or starting point for defining NuGet-related operations within a pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# NuGet v2\n```\n```\n\n----------------------------------------\n\nTITLE: Finding Pipeline Build ID\nDESCRIPTION: Method to retrieve the buildId of a specific pipeline run from the Azure DevOps portal URL or system variables\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-pipeline-artifact-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://dev.azure.com/fabrikam-inc/FabrikamFiber/_build/results?buildId=1088&view=results\n```\n\n----------------------------------------\n\nTITLE: Defining AdminPassword Parameter\nDESCRIPTION: Specifies the administrator password for the target machines. It can include variables defined in build or release definitions, and can be marked as a secret for security.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"AdminPassword\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`AdminPassword`** - **Password**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the administrator password for the target machines. It can accept variables defined in build/release definitions, such as `$(passwordVariable)`. You may mark the variable type as `secret` to secure it.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Steps and Defaults in YAML\nDESCRIPTION: This YAML snippet outlines the structure for defining steps and other properties in an Azure DevOps pipeline. It includes required fields for execution strategies, error handling, resource allocations, and triggering mechanisms. Dependencies include Azure DevOps environment and properly structured YAML files. Key parameters include 'steps' for defining tasks, 'strategy' for job execution plans, and 'container' for specifying container resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/pipeline.md#2025-04-18_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\nsteps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # Required. A list of steps to run in this job.\nstrategy: strategy # Execution strategy for this job.\ncontinueOnError: string # Continue running even on failure?\npool: string | pool # Pool where jobs in this pipeline will run unless otherwise specified.\ncontainer: string | container # Container resource name.\nservices: # Container resources to run as a service container.\n  string: string # Name/value pairs\nworkspace: # Workspace options on the agent.\n  clean: outputs | resources | all # Which parts of the workspace should be scorched before fetching.\nname: string # Pipeline run number.\ntrigger: none | trigger | [ string ] # Continuous integration triggers.\nparameters: [ parameter ] # Pipeline template parameters.\npr: none | pr | [ string ] # Pull request triggers.\nschedules: [ cron ] # Scheduled triggers.\nresources: # Containers and repositories used in the build.\n  builds: [ build ] # List of build resources referenced by the pipeline.\n  containers: [ container ] # List of container images.\n  pipelines: [ pipeline ] # List of pipeline resources.\n  repositories: [ repository ] # List of repository resources.\n  webhooks: [ webhook ] # List of webhooks.\n  packages: [ package ] # List of package resources.\nvariables: variables | [ variable ] # Variables for this pipeline.\nlockBehavior: sequential | runLatest # Behavior lock requests from this stage should exhibit in relation to other exclusive lock requests.\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Registry Credentials\nDESCRIPTION: This code describes how to specify username and password for Docker registry credentials when configuring Docker settings in Azure pipelines. It expresses conditions when the credentials are needed and highlights security practices for handling passwords.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/service-fabric-deploy-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n**`registryUserName`** - **Registry User Name**  \n`string`. Optional. Use when `configureDockerSettings = true && registryCredentials = UsernamePassword`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Name for Azure Blob Destination\nDESCRIPTION: Defines the container name input for Azure Blob storage destination. This input is required when the destination is set to AzureBlob.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nContainerName:\n  string. Required when Destination = AzureBlob.\n  Specify the name of the container into which files are copied. If the specified container does not exist in the storage account, it will be created.\n\nTo create a virtual directory inside the container use the Blob prefix input. \n\nExample: For target location https://myaccount.blob.core.windows.net/mycontainer/vd1/vd2/, specify container name mycontainer and Blob prefix: vd1/vd2.\n```\n\n----------------------------------------\n\nTITLE: MSBuild Architecture Selection\nDESCRIPTION: This snippet explains the `msbuildArchitecture` parameter, used to specify the MSBuild architecture (x86 or x64). This parameter is only applicable when `msbuildLocationMethod` is set to `version`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`msbuildArchitecture`** - **MSBuild Architecture**<br>\n`string`. Optional. Use when `msbuildLocationMethod = version`. Allowed values: `x86` (MSBuild x86), `x64` (MSBuild x64). Default value: `x86`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSupplies the MSBuild architecture (x86, x64) to run.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Using File for Creating ConfigMap\nDESCRIPTION: Specifies whether to create a ConfigMap directly from a file or from multiple files within a specified directory for Kubernetes operations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"useConfigMapFile\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`useConfigMapFile`** - **Use file**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nCreate a ConfigMap from an individual file, or from multiple files by specifying a directory.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Item Pattern Input - Azure Pipelines - Markdown\nDESCRIPTION: The `itemPattern` input specifies which files to download using a minimatch pattern, defaulting to `**` which downloads all files across all artifacts from Jenkins. More specific patterns can be used to target certain files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"itemPattern\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`itemPattern`** - **Item Pattern**<br>\n`string`. Default value: `**`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the files to be downloaded as a multi-line minimatch pattern. More Information about [file matching patterns](/azure/devops/pipelines/tasks/file-matching-patterns).\n\nThe default pattern `**` downloads all files across all artifacts produced by the Jenkins job. To download all files within the artifact drop, use `drop/**`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Target as Object in Azure Pipelines YAML (2020.1 and earlier)\nDESCRIPTION: Demonstrates how to configure a step target using an object with properties for container and commands. This implementation is for Azure Pipelines 2020.1 and earlier versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/target.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntarget:\n  container: string # Container to target (or 'host' for host machine).\n  commands: any | restricted # Set of allowed logging commands ('any' or 'restricted').\n```\n\n----------------------------------------\n\nTITLE: Basic Variable Definition Syntax in Azure Pipelines YAML\nDESCRIPTION: Shows the basic structure for defining variables in Azure Pipelines YAML. Properties include name (required), value, and readonly flag. This syntax is used when variables need to be defined alongside variable groups.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/variables-name.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvariables:\n- name: string # Required as first property. Variable name.\n  value: string # Variable value.\n  readonly: boolean # Whether a YAML variable is read-only; default is false.\n```\n\n----------------------------------------\n\nTITLE: Export GPG Public Keys - CMD\nDESCRIPTION: CMD command to export GPG public keys into a file, necessary for sharing the key with trusted sources or verification processes. Helpful for managing Helm chart signatures in DevOps pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_19\n\nLANGUAGE: cmd\nCODE:\n```\ngpg --export-key AA11BB22CC33DD44EE55FF66AA77BB88CC99DD00 contoso@microsoft.com > C:/somepath/publickey.gpg\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure VM Destination Settings\nDESCRIPTION: Defines inputs for copying files to Azure VMs, including resource group, machine selection, and admin credentials.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n\"resourceGroup\": - **Resource Group**\n[Input alias](index.md#what-are-task-input-aliases): `EnvironmentNameRM`. `string`. Required when `ConnectedServiceNameSelector = ConnectedServiceNameARM && Destination = AzureVMs`.\n\n\"ResourceFilteringMethod\": - **Select Machines By**\n`string`. Optional. Use when `Destination = AzureVMs`. Allowed values: `machineNames` (Machine Names), `tags`. Default value: `machineNames`.\n\n\"vmsAdminUserName\": - **Admin Login**\n`string`. Required when `Destination = AzureVMs`.\n\n\"vmsAdminPassword\": - **Password**\n`string`. Required when `Destination = AzureVMs`.\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Registry Secret in Kubernetes\nDESCRIPTION: Creates a Docker registry secret using Docker Registry service connection in Kubernetes.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-manifest-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nsteps:\n- task: KubernetesManifest@0\n  displayName: Create secret\n  inputs: \n    action: createSecret\n    secretType: dockerRegistry\n    secretName: foobar\n    dockerRegistryEndpoint: demoACR\n    kubernetesServiceConnection: someK8sSC\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Defining Application Pool Identity in IIS Configuration YAML\nDESCRIPTION: Specifies the security account under which the application pool's worker process runs. Options include predefined accounts or a custom account.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nAppPoolIdentity: 'ApplicationPoolIdentity'\n```\n\n----------------------------------------\n\nTITLE: Defining deployToSlotOrASE Input for AzureRM Connection\nDESCRIPTION: This snippet defines the `deployToSlotOrASE` input, aliased as `DeployToSlotOrASEFlag`, which is an optional boolean to specify if the deployment should target a slot or an App Service Environment. It is used when `ConnectionType = AzureRM` and `WebAppKind != \"\"`, defaulting to `false`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v5.md#2025-04-18_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`deployToSlotOrASE`** - **Deploy to Slot or App Service Environment**<br>\n[Input alias](index.md#what-are-task-input-aliases): `DeployToSlotOrASEFlag`. `boolean`. Optional. Use when `ConnectionType = AzureRM && WebAppKind != \"\"`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the option to deploy to an existing deployment slot or Azure App Service environment. For both targets, the task requires a Resource Group name.\nIf the deployment target is a slot, by default the deployment is to the **Production** slot. Any other existing slot name can be provided.\nIf the deployment target is an Azure App Service environment, leave the slot name as `Production` and specify just the Resource Group name.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline Requirements Table in Markdown\nDESCRIPTION: Markdown table defining the core requirements for Azure DevOps pipelines, including pipeline types, agent requirements, demands, capabilities, command restrictions, and version specifications.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/gradle-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | Self-hosted agents must have [capabilities](/azure/devops/pipelines/agents/agents#capabilities) that match the following [demands](/azure/devops/pipelines/process/demands) to run jobs that use this task: java |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  1.91.0 or greater |\n| Task category | Build |\n```\n\n----------------------------------------\n\nTITLE: Defining Propagated Artifacts Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `propagatedArtifacts` indicates whether Jenkins artifacts have been propagated to Azure. If true, additional configuration is needed to handle these artifacts.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"propagatedArtifacts\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`propagatedArtifacts`** - **Artifacts are propagated to Azure**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nUse this input if Jenkins artifacts were propagated to Azure. To upload Jenkins artifacts to Azure, refer to this [Jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Windows+Azure+Storage+Plugin).\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Configuration Strings Parameter\nDESCRIPTION: Defines the `configurationStrings` input parameter which specifies configuration settings for the web app using a key-value pair format.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"configurationStrings\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`configurationStrings`** - **Configuration settings**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecify the web app configuration settings using the syntax `-key value` (for example: `-phpVersion 5.6` `-linuxFxVersion: node|6.11`). Enclose values that contain spaces in double quotes.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Markdown Example - Task Input Documentation\nDESCRIPTION: Example of editable markdown content for documenting a task input parameter with moniker ranges and help text.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"targetType\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`targetType`** - **Type**<br>\n`string`. Allowed values: `filePath` (File Path), `inline`. Default value: `filePath`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nTargets script type: file path or inline.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline Requirements Table\nDESCRIPTION: Markdown table defining the requirements and specifications for Azure DevOps pipeline tasks, including pipeline types, execution environment, demands, capabilities, and other task-specific properties.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.144.0 or greater |\n| Task category | Deploy |\n```\n\n----------------------------------------\n\nTITLE: Enabling RenameFilesFlag in Azure App Service Deployment\nDESCRIPTION: The `RenameFilesFlag` option allows the use of the msdeploy flag `MSDEPLOY_RENAME_LOCKED_FILES=1`, facilitating the renaming of locked files during the app deployment process in Azure App Services. This boolean flag is optional.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nRenameFilesFlag: boolean  # Optional, default: false\n# Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\".\n```\n\n----------------------------------------\n\nTITLE: Displaying Azure Pipeline Task Requirements for Version 2022.1+\nDESCRIPTION: Markdown table showing task requirements for Azure Pipelines version 2022.1 and above, including pipeline types, execution environments, demands, capabilities, restrictions, and agent version requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/pip-authenticate-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.144.0 or greater |\n| Task category | Package |\n```\n\n----------------------------------------\n\nTITLE: Defining OverRideParams Parameter\nDESCRIPTION: Parameters specified here will override parameters in the MSDeploy zip file and parameter file. Multiple parameters can be specified using a line separator.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"OverRideParams\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`OverRideParams`** - **Override Parameters**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nParameters specified here will override the parameters in the MSDeploy zip file and the parameter file. To override more than one parameter, use a line separator.\nFor example, \"IIS Web Application Name\"=\"Fabrikam\" or \"ConnectionString\"=\"Server=localhost;Database=Fabrikam;\".\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Creating a Sample Batch Script\nDESCRIPTION: Example of a Windows batch script (test.bat) that can be used with the BatchScript@1 task to demonstrate its functionality in Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/batch-script-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\n@echo off\necho Hello World from %AGENT_NAME%.\necho My ID is %AGENT_ID%.\necho AGENT_WORKFOLDER contents:\n@dir %AGENT_WORKFOLDER%\necho AGENT_BUILDDIRECTORY contents:\n@dir %AGENT_BUILDDIRECTORY%\necho BUILD_SOURCESDIRECTORY contents:\n@dir %BUILD_SOURCESDIRECTORY%\necho Over and out.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Configuration Setting\nDESCRIPTION: This snippet shows the `configuration` parameter's usage when `command = pack`. It defines the configuration to be used when packaging a csproj file, defaulting to the `$(BuildConfiguration)` variable.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n\"**`configuration`** - **Configuration to package**<br>\n[Input alias](index.md#what-are-task-input-aliases): `configurationToPack`. `string`. Optional. Use when `command = pack`. Default value: `$(BuildConfiguration)`.<br>\"\n```\n\n----------------------------------------\n\nTITLE: Defining Container Name Input - Azure Pipelines - Markdown\nDESCRIPTION: The input `containerName` specifies the storage container's name within the Azure account used for uploading artifacts, which is required when artifacts are propagated.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-download-artifacts-v1.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"containerName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`containerName`** - **Container Name**<br>\n`string`. Required when `propagatedArtifacts == true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the name of the container in the storage account where artifacts are uploaded.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Requirements Table in Markdown\nDESCRIPTION: A markdown table defining the core requirements and specifications for Azure DevOps pipelines, including supported pipeline types, execution environments, demands, capabilities, command restrictions, variable settings, agent versions, and task categorization.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version | All supported agent versions. |\n| Task category | Deploy |\n```\n\n----------------------------------------\n\nTITLE: Defining CreateWebSite Parameter\nDESCRIPTION: Specifies whether to create a new website or update an existing one. This is a boolean parameter with a default value of 'false'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"CreateWebSite\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`CreateWebSite`** - **Create or Update Website**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the option to create a website or to update an existing website.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Bash Step Syntax for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML schema definition for the bash step in Azure Pipelines 2020.1 or earlier. This version doesn't include the retryCountOnTaskFailure property available in newer versions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-bash.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- bash: string # Required as first property. An inline script.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline Requirements Table for Version 2022\nDESCRIPTION: Markdown table defining pipeline requirements for Azure DevOps version 2022, including pipeline types, execution environment, demands, capabilities, restrictions, and agent version requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.120.0 or greater |\n| Task category | Package |\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Server Database Deploy Task in YAML\nDESCRIPTION: YAML configuration for the SqlDacpacDeploymentOnMachineGroup@0 task. This task is supported only in classic release pipelines and requires configuration through the classic designer.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-dacpac-deployment-on-machine-group-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# This task is supported on classic release pipelines only.\n# Use the classic designer to add and configure this task in a classic release pipeline.\n# See the following Inputs section for details on the inputs that this task supports.\n```\n\n----------------------------------------\n\nTITLE: Defining WebSiteName Parameter\nDESCRIPTION: Specifies the name of the IIS website to create or update. This parameter is required if 'CreateWebSite' is set to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebSiteName\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebSiteName`** - **Website Name**<br>\n`string`. Required when `CreateWebSite = true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the name of the IIS website that will be created if it does not exist, or it will be updated if it is already present on the IIS server. The name of the website should be the same as that specified in the web deploy zip package file. If a parameter file and override parameters setting is also specified, then the name of the website should be the same as that in the override parameters setting.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Markdown Example - Property Documentation\nDESCRIPTION: Example of editable markdown content for documenting a YAML property with description.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/README.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"cron\"::: -->\n**`cron`** string. Required as first property.<br>\n<!-- :::editable-content name=\"propDescription\"::: -->\nCron syntax defining a schedule in UTC time.\n<!-- :::editable-content-end::: -->\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Output Variables for Android Signing Task in Azure Pipelines YAML\nDESCRIPTION: This YAML snippet defines the output variables section for the Android Signing task. It specifies that there are no output variables for this task across all versions of Azure Pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/android-signing-v3.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n:::moniker range=\"<=azure-pipelines\"\n\nNone.\n\n:::moniker-end\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps YAML Document Metadata\nDESCRIPTION: YAML frontmatter defining the document's metadata including the topic type and last update date.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/includes/task-deprecation.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nms.topic: include\nms.date: 11/28/2023\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Server Database Deployment in Azure Pipelines YAML\nDESCRIPTION: Example YAML configuration for the SQL Server Database Deployment task, showing various input parameters and their usage.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/sql-server-dacpac-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- task: SqlDatabaseDeployment@1\n  inputs:\n    EnvironmentName: 'dbserver.fabrikam.com,dbserver_int.fabrikam.com:5986,192.168.12.34:5986'\n    AdminUserName: 'adminUser'\n    AdminPassword: '$(passwordVariable)'\n    Protocol: 'Https'\n    TestCertificate: true\n    DacpacFile: '\\\\BudgetIT\\Web\\Deploy\\FabrikamDB.dacpac'\n    TargetMethod: 'server'\n    ServerName: 'localhost'\n    DatabaseName: 'Fabrikam'\n    DeployInParallel: true\n    ResourceFilteringMethod: 'machineNames'\n    MachineFilter: 'dbserver.fabrikam.com, webserver.fabrikam.com'\n```\n\n----------------------------------------\n\nTITLE: Naming Application Pool for Start/Stop/Recycle Actions in YAML\nDESCRIPTION: Defines the name of the IIS application pool for start, stop, or recycle actions in the pipeline task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-management-on-machine-group-v0.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nStartStopRecycleAppPoolName: 'MyAppPool'\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Requirements Table in Markdown\nDESCRIPTION: A markdown table defining the core requirements and specifications for Azure Pipeline tasks, including supported pipeline types, execution environments, demands, capabilities, command restrictions, variable settings, agent versions, and task category.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/app-center-distribute-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version | All supported agent versions. |\n| Task category | Deploy |\n```\n\n----------------------------------------\n\nTITLE: Setting Archive Root Folder for Web App Deployment\nDESCRIPTION: Configuration for the Archive task to use the content directory created by the MSBuild task. This path points to the location where the web application content was published by the previous build step.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/includes/rm-webapp-functionapp-troubleshoot-shared.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n$(System.DefaultWorkingDirectory)\\\\WebAppContent\n```\n\n----------------------------------------\n\nTITLE: Destination Directory for Artifact Downloads in Azure Pipelines\nDESCRIPTION: Defines the input parameter `downloadPath`, which indicates where on the agent machine artifacts will be downloaded. This parameter is required and has a default value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"downloadPath\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`downloadPath`** - **Destination directory**<br>\n`string`. Required. Default value: `$(System.ArtifactsDirectory)`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe path on the agent machine where the artifacts are downloaded.\n\nFor more information on `System.ArtifactsDirectory`, see [Use variables in Classic release pipelines](/azure/devops/pipelines/release/variables).\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring XamarinLicense Task in YAML Pipeline\nDESCRIPTION: Demonstrates the configuration of the deprecated XamarinLicense task for activating or deactivating Xamarin product licenses. The task requires specifying an email, password, and Xamarin product type.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/xamarin-license-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: XamarinLicense@1\n  inputs:\n    action: 'Activate'\n    email: ''\n    password: ''\n    product: 'MA'\n```\n\n----------------------------------------\n\nTITLE: Defining Protocol Parameter\nDESCRIPTION: Specifies the protocol for the website binding. Allowed values are 'http' and 'https', with 'http' as the default. This parameter is required when 'AddBinding' is set to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"Protocol\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`Protocol`** - **Protocol**<br>\n`string`. Required when `AddBinding = true`. Allowed values: `https`, `http`. Default value: `http`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies either HTTP for the website to have an HTTP binding or HTTPS for the website to have a Secure Sockets Layer (SSL) binding.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Resource Group Parameters\nDESCRIPTION: Configures resource group details including name, location, and template deployment parameters. Supports both linked artifacts and URL-based template sources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresourceGroupName: string (required)\nlocation: string (conditional)\ntemplateLocation: string (conditional)\ncsmFile: string (conditional)\ncsmParametersFile: string (optional)\noverrideParameters: string (optional)\n```\n\n----------------------------------------\n\nTITLE: Setting a Limit on Parallel Downloads in Azure Pipelines\nDESCRIPTION: Defines the input parameter `parallelizationLimit` to set the number of files that can be downloaded simultaneously. This input parameter has a default value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/download-build-artifacts-v1.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"parallelizationLimit\"::: -->\n:::moniker range=\">=azure-pipelines-2022.1\"\n\n**`parallelizationLimit`** - **Parallelization limit**<br>\n`string`. Default value: `8`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe number of files to download simultaneously.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Specifying Azure Subscription for Container Registry\nDESCRIPTION: Provides a way to specify the Azure subscription that contains an Azure Container Registry, which is required for some dockerRegistry configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"azureSubscription\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`azureSubscription`** - **Azure subscription**<br>\n[Input alias](index.md#what-are-task-input-aliases): `azureSubscriptionEndpoint`. `string`. Optional. Use when `secretType = dockerRegistry && containerRegistryType = Azure Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the Azure Resource Manager subscription, which contains Azure Container Registry.\n>[!NOTE]\n>To configure a new service connection, select the Azure subscription from the list and click `Authorize`. If your subscription is not listed or if you want to use an existing Service Principal, you can setup an Azure service connection using the `Add` or `Manage` buttons.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Creating Deployment Dockerfile for .NET Application\nDESCRIPTION: This Dockerfile creates a minimal Docker image containing only the runtime and deployment artifacts for .NET applications, aimed at deployment to Docker or Azure Container Registry. It uses an ASP.NET runtime image to host the application.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: Dockerfile\nCODE:\n```\n# This Dockerfile creates the final image to be published to Docker or\n# Azure Container Registry\n# Create a container with the compiled asp.net core app\nFROM mcr.microsoft.com/dotnet/aspnet:2.1\n# Create app directory\nWORKDIR /app\n# Copy only the deployment artifacts\nCOPY /out .\nENTRYPOINT [\"dotnet\", \"dotnetcore-sample.dll\"]\n```\n\n----------------------------------------\n\nTITLE: Azure DevOps Pipeline Requirements Table for Version 2022.1+\nDESCRIPTION: Markdown table defining pipeline requirements for Azure DevOps version 2022.1 and later, including pipeline types, execution environment, demands, capabilities, restrictions, and agent version requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-authenticate-v1.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.144.0 or greater |\n| Task category | Package |\n```\n\n----------------------------------------\n\nTITLE: Docker Windows Configuration Command\nDESCRIPTION: Command to configure Docker CLI on Windows agents to enable pulling Linux-based images. This should be run on the DockerCli.exe file typically located in the Program Files\\Docker\\Docker folder.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-container-apps-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n& `.\\DockerCli.exe` -SwitchDaemon\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Cloud Service Details in YAML\nDESCRIPTION: Specifies the core details of the Azure Cloud Service to be deployed, including service name, location, and package files.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v1.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nServiceName: 'MyCloudService' # Required\nServiceLocation: 'East US' # Required\nCsPkg: '$(Build.ArtifactStagingDirectory)/MyApp.cspkg' # Required\nCsCfg: '$(Build.ArtifactStagingDirectory)/ServiceConfiguration.Cloud.cscfg' # Required\n```\n\n----------------------------------------\n\nTITLE: Minimized Webhook JSON Payload for Checksum Validation\nDESCRIPTION: Recommended minimized JSON format for webhook payloads to prevent validation failures due to whitespace differences.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook.md#2025-04-18_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\"resource\":{\"message\":{\"title\":\"Hello, world!\",\"subtitle\":\"I'm using WebHooks!\"}}}\n```\n\n----------------------------------------\n\nTITLE: Storage Account Configuration\nDESCRIPTION: Specifies the ARM storage account parameter used as intermediary for file copying.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nstorage:\n  type: string\n  required: true\n  alias: StorageAccountRM\n```\n\n----------------------------------------\n\nTITLE: Copy Files with NOT Condition in YAML\nDESCRIPTION: This YAML snippet demonstrates copying files while excluding certain file types using a NOT condition in the CopyFiles@2 task. It copies files except for .pdb and .config files from a specified location and excludes the 'ClassLibrary' directory, copying the readme.txt file as well.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-files-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: CopyFiles@2\n  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'\n  inputs:\n    Contents: |\n      ConsoleApplication1\\**\\bin\\**\\!(*.pdb|*.config)\n      !ConsoleApplication1\\**\\ClassLibrary*\\**\n      ConsoleApplication1\\readme.txt\n    TargetFolder: '$(Build.ArtifactStagingDirectory)'\n```\n\n----------------------------------------\n\nTITLE: Setting MSBuild Arguments for Web App Deployment\nDESCRIPTION: MSBuild arguments configuration needed to convert web package structure for proper deployment. These arguments change the default packaging structure to use FileSystem publishing method instead of the default nested structure.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/includes/rm-webapp-functionapp-troubleshoot-shared.md#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:publishUrl=\"$(System.DefaultWorkingDirectory)\\\\WebAppContent\"\n```\n\n----------------------------------------\n\nTITLE: Defining Fully Qualified Image Name for Azure Container Registry\nDESCRIPTION: This snippet illustrates the format of a fully qualified image name for an Azure Container Registry (ACR).  It specifies the registry or namespace, repository name, and tag, providing a clear example for container image identification.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n\"`<registry or namespace>`/`<repository>`:**`<tag>`**\". For example, `myregistry.azurecr.io`/`nginx`:**`latest`**.\n```\n\n----------------------------------------\n\nTITLE: Defining Docker Build and Publish Pipeline\nDESCRIPTION: This YAML script configures a pipeline to build Docker images, run tests, and publish the results to Azure DevOps. It includes steps for building the image, copying test results, and pushing to either Docker Hub or Azure Container Registry.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/publish-test-results-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# Build Docker image for this app to be published to Docker Registry\npool:\n  vmImage: 'ubuntu-latest'\nvariables:\n  buildConfiguration: 'Release'\nsteps:\n- script: |\n    docker build -f Dockerfile.build -t $(dockerId)/dotnetcore-build:$BUILD_BUILDID .\n    docker run --name dotnetcoreapp --rm -d $(dockerId)/dotnetcore-build:$BUILD_BUILDID\n    docker cp dotnetcoreapp:app/dotnetcore-tests/TestResults $(System.DefaultWorkingDirectory)\n    docker cp dotnetcoreapp:app/dotnetcore-sample/out $(System.DefaultWorkingDirectory)\n    docker stop dotnetcoreapp\n\n- task: PublishTestResults@2\n  inputs:\n    testRunner: VSTest\n    testResultsFiles: '**/*.trx'\n    failTaskOnFailedTests: true\n\n- script: |\n    docker build -f Dockerfile -t $(dockerId)/dotnetcore-sample:$BUILD_BUILDID .\n    docker login -u $(dockerId) -p $pswd\n    docker push $(dockerId)/dotnetcore-sample:$BUILD_BUILDID\n  env:\n    pswd: $(dockerPassword)\n```\n\n----------------------------------------\n\nTITLE: Defining Container Resources in Azure Pipelines YAML (2020)\nDESCRIPTION: YAML schema for defining container resources in Azure Pipelines for version 2020, with a more limited set of properties focusing on container registry connections and triggers.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-containers-container.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n- container: string # Required as first property. Alias of the container.\n  type: string # Type of the registry like ACR or GCR.\n  endpoint: string # ID of the service endpoint connecting to a private container registry.\n  trigger: trigger | none | true # Specify none to disable, true to trigger on all image tags, or use the full syntax as described in the following examples.\n  azureSubscription: string # Azure subscription (ARM service connection) for container registry.\n  resourceGroup: string # Resource group for your ACR.\n  registry: string # Registry for container images.\n  repository: string # Name of the container image repository in ACR.\n  localImage: boolean # When true, uses a locally tagged image instead of using docker pull to get the image. The default is false.\n```\n\n----------------------------------------\n\nTITLE: XML Transformation with Stage Name - Azure DevOps YAML\nDESCRIPTION: This example shows how to use the stage name in a pipeline to select a configuration file for XML transformation. The `$(Release.EnvironmentName)` variable represents the stage name, allowing for environment-specific configurations.  This example is for Azure DevOps YAML pipelines.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/file-transform-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n\"-transform **\\*.$(Release.EnvironmentName).config -xml **\\*.config\"\n```\n\n----------------------------------------\n\nTITLE: Task Input Structure in JSON with Aliases\nDESCRIPTION: Example of a task input definition from the InstallSSHKey@0 task showing the name, label, and aliases fields. This demonstrates how task authors define alternative names for inputs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"hostName\",\n    \"aliases\": [\n        \"knownHostsEntry\"\n    ],\n    \"label\": \"Known Hosts Entry\"\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Just-In-Time Installation of Node.js Runner - Azure Pipelines YAML\nDESCRIPTION: This YAML example provides a solution for installing the Node.js 6 runner just-in-time to facilitate running older tasks that have not been updated for later Node.js versions. The node runner can be specified with the `runnerVersion` input, which is critical for ensuring task compatibility.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/node-task-runner-installer-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  steps:\n  - task: NodeTaskRunnerInstaller@0\n    inputs:\n      runnerVersion: 6\n```\n\n----------------------------------------\n\nTITLE: Azure CLI VMSS Update Policy Command\nDESCRIPTION: Command to update the VMSS upgrade policy to Automatic mode using Azure CLI.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz vmss update --set upgradePolicy.mode=Automatic -g <resource group name> -n <vmss name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Connection Type in YAML\nDESCRIPTION: Specifies the type of Azure connection to use for deployment. Can be either Azure Resource Manager or Azure Classic.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nConnectedServiceNameSelector: 'ConnectedServiceName' # or 'ConnectedServiceNameClassic'\n```\n\n----------------------------------------\n\nTITLE: Configuring CondaEnvironment@1 task in YAML\nDESCRIPTION: YAML syntax for the CondaEnvironment@1 task. Specifies inputs for creating a custom Conda environment, including environment name, package specs, and other options.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/conda-environment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Conda environment v1\n# This task is deprecated. Use `conda` directly in script to work with Anaconda environments.\n- task: CondaEnvironment@1\n  inputs:\n    #createCustomEnvironment: false # boolean. Create a custom environment. Default: false.\n    #environmentName: # string. Required when createCustomEnvironment == true. Environment name. \n    #packageSpecs: 'python=3' # string. Package specs. Default: python=3.\n    #updateConda: true # boolean. Update to the latest Conda. Default: true.\n    #installOptions: # string. Optional. Use when createCustomEnvironment == false. Other options for `conda install`. \n    #createOptions: # string. Optional. Use when createCustomEnvironment == true. Other options for `conda create`. \n    #cleanEnvironment: false # boolean. Optional. Use when createCustomEnvironment == true. Clean the environment. Default: false.\n```\n\n----------------------------------------\n\nTITLE: NuGet Push Verbosity Configuration\nDESCRIPTION: This snippet describes the `verbosityPush` parameter for the NuGet push command. It specifies the level of detail displayed in the output during the push operation, with options for `Quiet`, `Normal`, or `Detailed`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Optional. Use when `command = push`. Allowed values: `Quiet`, `Normal`, `Detailed`. Default value: `Detailed`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Defining Default Build Context Input for Azure Pipelines\nDESCRIPTION: This snippet defines the `defaultContext` input parameter that specifies whether to use the default build context when building a Docker image. This optional boolean parameter defaults to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"defaultContext\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`defaultContext`** - **Use Default Build Context**<br>\n`boolean`. Optional. Use when `action = Build an image`. Default value: `true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the build context of the directory that contains the Docker file.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Setting Server Endpoint for FTP\nDESCRIPTION: Defines the FTP service connection that is required when using the `serviceEndpoint` authentication type. It includes guidance on creating this connection if not already configured.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"serverEndpoint\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`serverEndpoint`** - **FTP Service Connection**<br>\n`string`. Required when `credsType = serviceEndpoint`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the service connection for the FTP server. To create one, click the Manage link and create a new generic service connection, and then enter the FTP server URL for the server URL, e.g. `ftp://server.example.com`, and the required credentials.\n\nSecure connections will always be made regardless of the specified protocol (`ftp://` or `ftps://`) if the target server supports FTPS. To allow only secure connections, use the `ftps://` protocol, e.g. `ftps://server.example.com`. Connections to servers not supporting FTPS will fail if `ftps://` is specified.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Web App for Containers Deployment in YAML\nDESCRIPTION: This YAML snippet shows the syntax for using the AzureWebAppContainer@1 task to deploy containers to Azure App Service. It includes required and optional inputs for specifying the Azure subscription, app name, deployment slots, container images, and configuration settings.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-container-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Azure Web App for Containers v1\n# Deploy containers to Azure App Service.\n- task: AzureWebAppContainer@1\n  inputs:\n    azureSubscription: # string. Required. Azure subscription. \n    appName: # string. Required. App name. \n    #deployToSlotOrASE: false # boolean. Deploy to Slot or App Service Environment. Default: false.\n    #resourceGroupName: # string. Required when deployToSlotOrASE = true. Resource group. \n    #slotName: 'production' # string. Required when deployToSlotOrASE = true. Slot. Default: production.\n    #containers: # string. Alias: imageName. Image name. \n    #multicontainerConfigFile: # string. Configuration File. \n    #containerCommand: # string. Startup command. \n  # Application and Configuration Settings\n    #appSettings: # string. App settings. \n    #configurationStrings: # string. Configuration settings.\n```\n\n----------------------------------------\n\nTITLE: PowerShell Core Step Syntax for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML syntax for the 'pwsh' step in Azure Pipelines 2020.1 and earlier versions. This defines available properties for older pipeline versions without the retry functionality.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-pwsh.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- pwsh: string # Required as first property. Inline PowerShell script.\n  errorActionPreference: string # Unless otherwise specified, the error action preference defaults to the value stop. See the following section for more information.\n  failOnStderr: string # Fail the task if output is sent to Stderr?\n  ignoreLASTEXITCODE: string # Check the final exit code of the script to determine whether the step succeeded?\n  workingDirectory: string # Start the script with this working directory.\n  condition: string # Evaluate this condition expression to determine whether to run this task.\n  continueOnError: boolean # Continue running even on failure?\n  displayName: string # Human-readable name for the task.\n  target: string | target # Environment in which to run this task.\n  enabled: boolean # Run this task when the job runs?\n  env: # Variables to map into the process's environment.\n    string: string # Name/value pairs\n  name: string # ID of the step.\n  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.\n```\n\n----------------------------------------\n\nTITLE: Defining Image Digest File Input for Azure Pipelines\nDESCRIPTION: This snippet explains the `imageDigestFile` input, specifying the path to a file that is created and populated with the full image repository digest of the Docker image after it is pushed. This optional string parameter is applicable for pushing images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"imageDigestFile\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`imageDigestFile`** - **Image Digest File**<br>\n`string`. Optional. Use when `action = Push an image || action = Push images`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the path to a file that is created and populated with the full image repository digest of the Docker image that was pushed.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Username for FTP Inputs\nDESCRIPTION: Specifies the username needed to authenticate with the FTP server when the input credential type is set to direct input. This is a mandatory field.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"username\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`username`** - **Username**<br>\n`string`. Required when `credsType = inputs`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the user name for the FTP connection.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: MSBuild Log File Creation\nDESCRIPTION: This snippet describes the `createLogFile` parameter, which enables the optional creation of a log file (Windows only).\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`createLogFile`** - **Create Log File**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nOptionally creates a log file (Windows only).\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Deploy to Slot or ASE Parameter\nDESCRIPTION: Defines the `deployToSlotOrASE` input parameter that controls the deployment to either an existing deployment slot or an App Service Environment. Its default is false, and the resource group name must be provided when set to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"deployToSlotOrASE\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`deployToSlotOrASE`** - **Deploy to Slot or App Service Environment**<br>\n`boolean`. Optional. Use when `appType != \"\"`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSelects the option to deploy to an existing deployment slot or an Azure App Service Environment.  \nFor both targets, the task needs a resource group name.  \nIf the deployment target is a slot, the default is the production slot. Any other existing slot name can also be provided.  \nIf the deployment target is an Azure App Service Environment, leave the slot name as ‘production’, and specify the resource group name.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring File Usage for kubectl Commands\nDESCRIPTION: Indicates whether to use a Kubernetes configuration file for executing kubectl commands. Users can specify file names, directories, or URLs for the configurations.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"useConfigurationFile\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`useConfigurationFile`** - **Use Configuration files**<br>\n`boolean`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nUse Kubernetes configuration file with the kubectl command. Filename, directory, or URL to Kubernetes configuration files can also be provided.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Deploying IIS Web App using MSDeploy - YAML\nDESCRIPTION: This YAML snippet is for a deprecated Azure DevOps task that deploys an IIS Web App using MSDeploy. It can create or update websites and app pools with options for protocol, IP address, and ports. Users must provide required fields like EnvironmentName and WebDeployPackage. This task is intended for Azure Pipelines, but it's recommended to use IIS Web App Deployment Using WinRM from the Visual Studio Marketplace instead.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# IIS Web App deployment (Deprecated) v1\n# Deploy using MSDeploy, then create/update websites and app pools.\n- task: IISWebAppDeployment@1\n  inputs:\n    EnvironmentName: # string. Required. Machines. \n    #AdminUserName: # string. Admin Login. \n    #AdminPassword: # string. Password. \n    #WinRMProtocol: # 'Http' | 'Https'. Protocol. \n    #TestCertificate: true # boolean. Optional. Use when WinRMProtocol = Https. Test Certificate. Default: true.\n  # Deployment\n    WebDeployPackage: # string. Required. Web Deploy Package. \n    #WebDeployParamFile: # string. Web Deploy Parameter File. \n    #OverRideParams: # string. Override Parameters. \n  # Website\n    #CreateWebSite: false # boolean. Create or Update Website. Default: false.\n    #WebSiteName: # string. Required when CreateWebSite = true. Website Name. \n    #WebSitePhysicalPath: '%SystemDrive%\\inetpub\\wwwroot' # string. Required when CreateWebSite = true. Physical Path. Default: %SystemDrive%\\inetpub\\wwwroot.\n    #WebSitePhysicalPathAuth: 'Application User (Pass-through)' # 'WebSiteUserPassThrough' | 'WebSiteWindowsAuth'. Required when CreateWebSite = true. Physical Path Authentication. Default: Application User (Pass-through).\n    #WebSiteAuthUserName: # string. Required when WebSitePhysicalPathAuth = WebSiteWindowsAuth. User Name. \n    #WebSiteAuthUserPassword: # string. Optional. Use when WebSitePhysicalPathAuth = WebSiteWindowsAuth. Password. \n    #AddBinding: true # boolean. Optional. Use when CreateWebSite = true. Add Binding. Default: true.\n    #AssignDuplicateBinding: false # boolean. Optional. Use when AddBinding = true. Assign Duplicate Binding. Default: false.\n    Protocol: 'http' # 'https' | 'http'. Required when AddBinding = true. Protocol. Default: http.\n    IPAddress: 'All Unassigned' # string. Required when AddBinding = true. IP Address. Default: All Unassigned.\n    Port: '80' # string. Required when AddBinding = true. Port. Default: 80.\n    #ServerNameIndication: false # boolean. Optional. Use when Protocol = https. Server Name Indication Required. Default: false.\n    #HostNameWithOutSNI: # string. Optional. Use when ServerNameIndication = false. Host Name. \n    #HostNameWithHttp: # string. Optional. Use when Protocol = http. Host Name. \n    #HostNameWithSNI: # string. Required when ServerNameIndication = true. Host Name. \n    #SSLCertThumbPrint: # string. Required when Protocol = https. SSL Certificate Thumb Print. \n  # Application Pool\n    #CreateAppPool: false # boolean. Create or Update Application Pool. Default: false.\n    #AppPoolName: # string. Required when CreateAppPool = true. Name. \n    #DotNetVersion: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when CreateAppPool = true. .NET Version. Default: v4.0.\n    #PipeLineMode: 'Integrated' # 'Integrated' | 'Classic'. Required when CreateAppPool = true. Managed Pipeline Mode. Default: Integrated.\n    #AppPoolIdentity: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when CreateAppPool = true. Identity. Default: ApplicationPoolIdentity.\n    #AppPoolUsername: # string. Required when AppPoolIdentity = SpecificUser. Username. \n    #AppPoolPassword: # string. Optional. Use when AppPoolIdentity = SpecificUser. Password. \n  # Advanced\n    #AppCmdCommands: # string. Additional AppCmd.exe Commands. \n    #DeployInParallel: true # boolean. Deploy in Parallel. Default: true.\n    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Select Machines By. Default: machineNames.\n    #MachineFilter: # string. Deploy to Machines.\n```\n\n----------------------------------------\n\nTITLE: Installing Helm and Kubernetes with YAML in Azure Pipelines\nDESCRIPTION: This YAML configuration snippet demonstrates how to use the deprecated HelmInstaller@0 task within Azure Pipelines to install Helm and Kubernetes on an agent machine. The snippet specifies parameters such as the Helm version and optional Kubectl installation. It requires Azure Pipelines YAML support, an agent or deployment group, and an agent version of 2.115.0 or greater.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Helm tool installer v0\n# Install Helm and Kubernetes on an agent machine.\n- task: HelmInstaller@0\n  inputs:\n    helmVersion: '2.14.1' # string. Required. Helm Version Spec. Default: 2.14.1.\n    #checkLatestHelmVersion: true # boolean. Check for latest version of Helm. Default: true.\n  # Prerequisite\n    #installKubeCtl: true # boolean. Install Kubectl. Default: true.\n    #kubectlVersion: '1.8.9' # string. Optional. Use when installKubeCtl == true. Kubectl Version Spec. Default: 1.8.9.\n    #checkLatestKubeCtl: true # boolean. Optional. Use when installKubeCtl == true. Check for latest version of kubectl. Default: true.\n```\n\n----------------------------------------\n\nTITLE: Azure Pipeline Task Requirements Table in Markdown\nDESCRIPTION: Markdown table defining key requirements for Azure DevOps pipeline tasks, including pipeline types, execution environment, demands, capabilities, command restrictions, variable settings, and agent version requirements.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-packager-v0.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | Self-hosted agents must have [capabilities](/azure/devops/pipelines/agents/agents#capabilities) that match the following [demands](/azure/devops/pipelines/process/demands) to run jobs that use this task: Cmd |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  1.83.0 or greater |\n| Task category | Package |\n```\n\n----------------------------------------\n\nTITLE: Using bashEnvValue Input\nDESCRIPTION: Example demonstrating how to use the bashEnvValue input to set BASH_ENV for a specific task instance.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/bash-v3.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Bash@3\n  inputs:\n    targetType: 'inline'\n    script: env\n    bashEnvValue: '~/.profile'\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Group Name Parameter\nDESCRIPTION: Defines the `resourceGroupName` input parameter which must be provided when deploying to a slot or an App Service Environment, specifying the Azure resource group containing the Azure App Service.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-web-app-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"resourceGroupName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`resourceGroupName`** - **Resource group**<br>\n`string`. Required when `deployToSlotOrASE = true`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nThe resource group name is required when the deployment target is either a deployment slot or an Azure App Service Environment.  \nSpecifies the Azure resource group that contains the Azure App Service indicated above.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Configuring CopyPublishBuildArtifacts@1 Task in YAML\nDESCRIPTION: YAML configuration for the deprecated CopyPublishBuildArtifacts@1 task. This task copies build artifacts to a staging folder and publishes them to the server or a file share. It's recommended to use Pipeline Artifacts, Copy Files task, and Publish Build Artifacts task instead.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/copy-publish-build-artifacts-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Copy and Publish Build Artifacts v1\n# CopyPublishBuildArtifacts@1 is deprecated. Use the Copy Files task and the Publish Build Artifacts task instead.\n- task: CopyPublishBuildArtifacts@1\n  inputs:\n    #CopyRoot: # string. Copy Root. \n    Contents: # string. Required. Contents. \n    ArtifactName: # string. Required. Artifact Name. \n    ArtifactType: # 'Container' | 'FilePath'. Required. Artifact Type. \n    #TargetPath: '\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)' # string. Optional. Use when ArtifactType = FilePath. Path. Default: \\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber).\n```\n\n----------------------------------------\n\nTITLE: NuGet Installer v0 Task Configuration in YAML\nDESCRIPTION: This YAML snippet configures the NuGetInstaller@0 task to install or restore NuGet packages. It specifies the path to the solution file, the installation type (restore or install), and the NuGet version. Note that this task is deprecated, and migration to NuGetCommand@2 is recommended.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-installer-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n```yaml\n# NuGet Installer v0\n# Installs or restores missing NuGet packages. Use NuGetAuthenticate@0 task for latest capabilities.\n- task: NuGetInstaller@0\n  inputs:\n    solution: '**/*.sln' # string. Required. Path to solution or packages.config. Default: **/*.sln.\n    #nugetConfigPath: # string. Path to NuGet.config. \n    restoreMode: 'restore' # 'restore' | 'install'. Required. Installation type. Default: restore.\n    #noCache: false # boolean. Disable local cache. Default: false.\n    #nuGetRestoreArgs: # string. NuGet arguments. \n  # Advanced\n    #verbosity: '-' # '-' | 'Quiet' | 'Normal' | 'Detailed'. Verbosity. Default: -.\n    nuGetVersion: '3.3.0' # '3.3.0' | '3.5.0.1829' | '4.0.0.2283' | 'custom'. Required. NuGet Version. Default: 3.3.0.\n    #nuGetPath: # string. Path to NuGet.exe.\n```\n\n```\n\n----------------------------------------\n\nTITLE: Skipping Source Checkout in Azure Pipelines YAML\nDESCRIPTION: Demonstrates how to avoid syncing sources entirely in an Azure DevOps pipeline by using the 'none' option.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: none\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Synchronization in Azure Pipelines YAML\nDESCRIPTION: Controls whether to synchronize tags when checking out a Git repository in an Azure DevOps pipeline. This can impact the amount of data fetched from the repository.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- checkout: self\n  fetchTags: true\n```\n\n----------------------------------------\n\nTITLE: Configuring DotNetCoreCLI task with AzurePipelinesCredential\nDESCRIPTION: This snippet shows how to configure the DotNetCoreCLI@2 task to use an Azure service connection with workload identity federation. It sets the `connectedServiceName` to the desired Azure service connection and ensures the `SYSTEM_ACCESSTOKEN` environment variable is set for authentication. This allows the task to access Azure resources using the AzurePipelinesCredential.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/includes/azure-pipeline-credential-integration-tests.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"- task: DotNetCoreCLI@2\n  inputs:\n    command: 'run'\n    connectedServiceName: <Azure service connection configured with workload identity federation>\n  env:\n    SYSTEM_ACCESSTOKEN: $(System.AccessToken)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Build Variables\nDESCRIPTION: Example showing variable configuration for different build types (.NET and C++), where BuildConfiguration can have debug/release values and BuildPlatform can specify target architectures.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nBuildConfiguration: debug,release\nBuildPlatform: x86,x64\n```\n\n----------------------------------------\n\nTITLE: Project-Scoped Feed Repository Configuration in pom.xml\nDESCRIPTION: XML fragment for pom.xml showing how to configure a reference to a project-scoped Azure Artifacts feed. The repository ID must match the feed name in the Maven Authenticate task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-authenticate-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<repository>\n  <id>MyFeedInOrg1</id>\n  <url>https://pkgs.dev.azure.com/OrganizationName/ProjectName/_packaging/MyProjectScopedFeed1/Maven/v1</url>\n  <releases>\n    <enabled>true</enabled>\n  </releases>\n  <snapshots>\n    <enabled>true</enabled>\n  </snapshots>\n</repository>\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Filters in Azure DevOps YAML Pipelines\nDESCRIPTION: This snippet demonstrates the syntax for specifying filters for webhook resources in Azure DevOps pipelines. Filters allow you to control when the pipeline triggers based on webhook payloads.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-webhooks-webhook-filters.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfilters: [ filter ] # List of trigger filters.\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Container Registry Input for Azure Pipelines\nDESCRIPTION: This snippet details the `azureContainerRegistry` input, which represents the Azure Container Registry to be used within the selected Azure Subscription. This optional string parameter is applicable when the `containerregistrytype` is set to 'Azure Container Registry'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"azureContainerRegistry\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`azureContainerRegistry`** - **Azure Container Registry**<br>\n`string`. Optional. Use when `containerregistrytype = Azure Container Registry`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies an Azure Container Registry in the selected Azure Subscription. The container image is built and then pushed to this container registry.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining File Patterns for Upload\nDESCRIPTION: Specifies the file paths or patterns of files to upload. The string supports multiple patterns and has a default value, enabling flexible file selection based on specified minimatch criteria.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"filePatterns\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`filePatterns`** - **File patterns**<br>\n`string`. Required. Default value: `**`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the file paths or patterns of the files to upload. The string supports multiple lines of minimatch patterns. Learn more about [file matching patterns](/azure/devops/pipelines/tasks/file-matching-patterns).\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Setting Script Permissions in Azure DevOps YAML Pipeline\nDESCRIPTION: This YAML snippet adds a command line task to set the necessary permissions for the custom script. It uses the chmod command to make the script executable before it's run by the virtual machine scale set task.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-vmss-deployment-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n    - task: CmdLine@2\n      inputs:\n        script: 'chmod 777 $(System.DefaultWorkingDirectory)/test.sh'\n```\n\n----------------------------------------\n\nTITLE: Accessing Pipeline Resource Metadata in Azure DevOps YAML\nDESCRIPTION: Demonstrates how to access pipeline resource metadata as predefined variables in a YAML pipeline. This example shows two pipeline resources and how to use their metadata in bash tasks.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline.md#2025-04-18_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n pipelines:\n   - pipeline: source-pipeline\n     source: PipelineTriggerSource\n     project: FabrikamFiber\n     trigger: true\n   - pipeline: other-project-pipeline\n     source: PipelineTriggerFromOtherProject\n     project: FabrikamRepo\n     trigger: true\n\ntrigger: none # Only trigger with pipeline resource trigger\n\npool:\n  vmImage: ubuntu-latest\n\n- bash: echo $(resources.pipeline.source-pipeline.projectName)\n- bash: printenv | sort\n```\n\n----------------------------------------\n\nTITLE: Packing a Symbol Package with .NET Core CLI in YAML\nDESCRIPTION: This example shows how to generate a symbol package along with a NuGet package using the DotNetCoreCLI task. Symbol packages contain debugging symbols that help with troubleshooting.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/dotnet-core-cli-v2.md#2025-04-18_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n# Pack a symbol package along with NuGet package\n- task: DotNetCoreCLI@2\n  inputs: \n    command: 'pack'\n    includesymbols: true\n```\n\n----------------------------------------\n\nTITLE: Defining Remote Directory for Upload\nDESCRIPTION: Specifies the target directory on the FTP server where files will be uploaded. It has a default value but can be customized based on deployment needs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/ftp-upload-v2.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"remoteDirectory\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`remoteDirectory`** - **Remote directory**<br>\n[Input alias](index.md#what-are-task-input-aliases): `remotePath`. `string`. Required. Default value: `/upload/$(Build.BuildId)/`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the directory on the remote FTP server where the task uploads files.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining WebSitePhysicalPath Parameter\nDESCRIPTION: Specifies the physical path for the website content. Required when 'CreateWebSite' is set to true, defaults to '%SystemDrive%\\inetpub\\wwwroot'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebSitePhysicalPath\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebSitePhysicalPath`** - **Physical Path**<br>\n`string`. Required when `CreateWebSite = true`. Default value: `%SystemDrive%\\inetpub\\wwwroot`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the physical path where the website content is stored. The content can reside on the local computer or on a remote directory or share, like `C:\\Fabrikam` or `\\\\ContentShare\\Fabrikam`.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: MSBuild Configuration Specification\nDESCRIPTION: This snippet defines the `configuration` input parameter for the MSBuild task. It suggests using a build variable for the configuration, such as `BuildConfiguration`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/msbuild-v1.md#2025-04-18_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n\n**`configuration`** - **Configuration**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\n> [!TIP]\n> Declare a build variable such as `BuildConfiguration` on the Variables tab (selecting `Allow` at Queue Time) and reference it here as `$(BuildConfiguration)`. This way you can modify the platform when you queue the build and enable building multiple configurations.\n<!-- :::editable-content-end::: -->\n<br>\n\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Maven Path for Maven Task\nDESCRIPTION: This property specifies the custom path to the Maven installation directory. It is required when `mavenVersionSelection = Path`. It will be used by the Maven task to locate the Maven installation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_6\n\nLANGUAGE: none\nCODE:\n```\n\n**`mavenDirectory`** - **Maven path**<br>\n[Input alias](index.md#what-are-task-input-aliases): `mavenPath`. `string`. Required when `mavenVersionSelection = Path`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSupplies the custom path to the Maven installation (for example: `/usr/share/maven`).\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Deploy Tasks Table in Markdown\nDESCRIPTION: Markdown table listing all deployment tasks with their versions and descriptions. Includes links to detailed documentation for each task version.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/index.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Task | Description |\n|---|---|\n| **App Center distribute**<br>[AppCenterDistribute@3](app-center-distribute-v3.md)<br>[AppCenterDistribute@2](app-center-distribute-v2.md)<br>[AppCenterDistribute@1](app-center-distribute-v1.md)<br>[AppCenterDistribute@0](app-center-distribute-v0.md) | Distribute app builds to testers and users via Visual Studio App Center. |\n```\n\n----------------------------------------\n\nTITLE: Setting MAVEN_OPTS Environment Variable\nDESCRIPTION: This property sets the `MAVEN_OPTS` environment variable, allowing command-line arguments to be passed to the JVM when starting Maven. The default value is `-Xmx1024m`, which sets the maximum memory available to the JVM.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/maven-v4.md#2025-04-18_snippet_8\n\nLANGUAGE: none\nCODE:\n```\n\n**`mavenOptions`** - **Set MAVEN_OPTS to**<br>\n[Input alias](index.md#what-are-task-input-aliases): `mavenOpts`. `string`. Default value: `-Xmx1024m`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSets the `MAVEN_OPTS` environment variable, which is used to send command-line arguments to start the JVM. The `-Xmx` flag specifies the maximum memory available to the JVM.\n<!-- :::editable-content-end::: -->\n\n```\n\n----------------------------------------\n\nTITLE: Defining WebSitePhysicalPathAuth Parameter\nDESCRIPTION: Specifies the authentication mechanism for accessing the physical path of the website. This is a required string parameter when 'CreateWebSite' is set to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebSitePhysicalPathAuth\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebSitePhysicalPathAuth`** - **Physical Path Authentication**<br>\n`string`. Required when `CreateWebSite = true`. Allowed values: `WebSiteUserPassThrough` (Application User (Pass-through)), `WebSiteWindowsAuth` (Windows Authentication). Default value: `Application User (Pass-through)`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the authentication mechanism for accessing the physical path of the website.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Helm Tool Installer Task Syntax\nDESCRIPTION: Defines the YAML syntax for the HelmInstaller@1 task. This task is used to install Helm on an agent machine. The helmVersionToInstall input specifies the version of Helm to install, with 'latest' as the default value.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-installer-v1.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n# Helm tool installer v1\n# Install Helm on an agent machine.\n- task: HelmInstaller@1\n  inputs:\n    #helmVersionToInstall: 'latest' # string. Helm Version Spec. Default: latest.\n\n```\n\n----------------------------------------\n\nTITLE: Overriding Object Type Parameters in Azure ARM Template Deployment\nDESCRIPTION: Shows how to override object type parameters using stringified JSON objects in Azure Resource Manager template deployments. This is useful for complex parameter types like arrays and maps.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-manager-template-deployment-v3.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n-options [\"option1\"] -map {\"key1\": \"value1\" }\n```\n\n----------------------------------------\n\nTITLE: Defining Image Name Input for Azure Pipelines\nDESCRIPTION: This snippet defines the `imageName` input, which specifies the name of the Docker image to be built, pushed, or run. This required string parameter is applicable under multiple actions including building, pushing, and running images.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/docker-v0.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"imageName\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`imageName`** - **Image Name**<br>\n`string`. Required when `action == Build an image || action == Push an image || action == Run an image`. Default value: `$(Build.Repository.Name):$(Build.BuildId)`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the name of the Docker image to build, push, or run.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end::: -->\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Service Connection Configuration\nDESCRIPTION: Specifies the Azure Resource Manager service connection for accessing Azure resources.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v4.md#2025-04-18_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nazureSubscription:\n  string. Required.\n  Alias: ConnectedServiceNameARM\n```\n\n----------------------------------------\n\nTITLE: Disabling Variable Setting in Azure Pipelines YAML\nDESCRIPTION: This example shows how to disable a step from setting any variables using the 'none' setting. This configuration prevents the step from modifying any pipeline variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/target-settable-variables.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- script: echo This is a step\n  target:\n    settableVariables: none\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Queue Job Task for Azure Pipelines 2020.1 and Earlier\nDESCRIPTION: YAML configuration for JenkinsQueueJob@2 task in Azure Pipelines 2020.1 and earlier. This snippet shows the available parameters without the newer options like failOnUnstableResult, retryCount, and delayBetweenRetries.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/jenkins-queue-job-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Jenkins queue job v2\n# Queue a job on a Jenkins server.\n- task: JenkinsQueueJob@2\n  inputs:\n    serverEndpoint: # string. Required. Jenkins service connection. \n    jobName: # string. Required. Job name. \n    #isMultibranchJob: false # boolean. Job is of multibranch pipeline type. Default: false.\n    #multibranchPipelineBranch: # string. Required when isMultibranchJob = true. Multibranch pipeline branch. \n    #captureConsole: true # boolean. Capture console output and wait for completion. Default: true.\n    #capturePipeline: true # boolean. Optional. Use when captureConsole = true. Capture pipeline output and wait for pipeline completion. Default: true.\n  # Advanced\n    #isParameterizedJob: false # boolean. Alias: parameterizedJob. Parameterized job. Default: false.\n    #jobParameters: # string. Optional. Use when parameterizedJob = true. Job parameters.\n```\n\n----------------------------------------\n\nTITLE: Export GPG Secret Keys - CMD\nDESCRIPTION: CMD command to export GPG secret keys into a file for secure storage, useful in the pipeline for signing Helm charts. Requires knowledge of private key ID and access to the file system.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/helm-deploy-v0.md#2025-04-18_snippet_18\n\nLANGUAGE: cmd\nCODE:\n```\ngpg --export-secret-key AA11BB22CC33DD44EE55FF66AA77BB88CC99DD00 contoso@microsoft.com > C:/somepath/privatekeys.gpg\n```\n\n----------------------------------------\n\nTITLE: Deleting Files Starting with a Dot in Azure Pipelines\nDESCRIPTION: This example shows how to use the DeleteFiles@1 task to delete all .txt files, including those starting with a dot, by setting the 'removeDotFiles' input to true.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/delete-files-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: DeleteFiles@1\n  displayName: 'Remove unneeded files'\n  inputs:\n    contents: |\n      /some/*.txt\n    removeDotFiles: true\n```\n\n----------------------------------------\n\nTITLE: Pipeline Trigger with Stages and Tags\nDESCRIPTION: Advanced configuration using stages and tags filters to trigger the pipeline.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/resources-pipelines-pipeline-trigger.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  pipelines:\n  - pipeline: source-pipeline\n    source: TriggeringPipeline\n    trigger:\n      branches: # Branches to include\n      tags: # List of tags that when matched will trigger the pipeline. \n      - release25\n      stages: # List of stages that when complete will trigger the pipeline. \n      - build\n```\n\n----------------------------------------\n\nTITLE: Setting Action for Azure Classic in YAML\nDESCRIPTION: Specifies the action to perform on Azure resources or cloud service. Required for Azure Classic connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nactionClassic: 'Select Resource Group'\n```\n\n----------------------------------------\n\nTITLE: Configuring Sparse Checkout Directories in Azure Pipelines YAML\nDESCRIPTION: Example of using the sparseCheckoutDirectories property to enable sparse checkout in cone mode for a specific directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/steps-checkout.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- checkout: repo\n  sparseCheckoutDirectories: src\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription for Cloud Service Deployment in YAML\nDESCRIPTION: Specifies the Azure subscription to target for cloud service deployment. This is a required input that connects to the Azure environment.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-cloud-powershell-deployment-v1.md#2025-04-18_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nazureClassicSubscription: 'MyAzureSubscription' # Required\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines YAML Schema Syntax Conventions\nDESCRIPTION: Illustrates the syntax conventions used in Azure Pipelines YAML schema documentation, including keyword formatting, data types, array notation, and mapping notation.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/index.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkeyword: datatype\n[ string ]         # array of strings\n{ string: string }  # mapping of strings to strings\njob | template      # alternative types allowed\n```\n\n----------------------------------------\n\nTITLE: Defining Action for Azure Resource Manager in YAML\nDESCRIPTION: Specifies the action to perform on Azure resources or resource group. Required for Azure Resource Manager connections.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-resource-group-deployment-v1.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\naction: 'Create Or Update Resource Group' # or other allowed values\n```\n\n----------------------------------------\n\nTITLE: Defining Stages in Azure DevOps YAML Pipeline\nDESCRIPTION: Basic syntax for defining stages in an Azure DevOps YAML pipeline. Stages are a collection of related jobs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/stages.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstages: [ stage | template ] # Stages are a collection of related jobs.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Include Symbols Configuration\nDESCRIPTION: This snippet describes the `includeSymbols` parameter for the NuGet `pack` command. It specifies whether to create a symbols package along with the regular NuGet package.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\n\"`boolean`. Optional. Use when `command = pack`. Default value: `false`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Bash Task\nDESCRIPTION: Example showing how to pass secret variables to a Bash task using environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/bash-v3.md#2025-04-18_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n- task: Bash@3\n  inputs:\n    targetType: 'inline'\n    script: echo $MYSECRET\n  env:\n    MYSECRET: $(Foo)\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Verbosity Configuration\nDESCRIPTION: This snippet describes the `verbosityPack` parameter for the NuGet `pack` command. It allows specifying the verbosity level of the output, with options for `Quiet`, `Normal`, or `Detailed`.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_20\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Optional. Use when `command = pack`. Allowed values: `Quiet`, `Normal`, `Detailed`. Default value: `Detailed`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Task Configuration for NuGet Publisher\nDESCRIPTION: This YAML snippet demonstrates how to configure the deprecated NuGetPublisher@0 task in Azure Pipelines. It includes parameters such as 'searchPattern' for specifying the path to nupkg files, 'nuGetFeedType' for determining the feed type, and 'nuGetVersion' for selecting the NuGet version. Dependencies include a connection to either an external or internal NuGet feed. The task requires specifying paths for package discovery and may include optional advanced settings like verbosity and NuGet arguments.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-publisher-v0.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- task: NuGetPublisher@0\n  inputs:\n    searchPattern: '**/*.nupkg;-:**/packages/**/*.nupkg;-:**/*.symbols.nupkg' # string. Required. Path/Pattern to nupkg. Default: **/*.nupkg;-:**/packages/**/*.nupkg;-:**/*.symbols.nupkg.\n    nuGetFeedType: 'external' # 'external' | 'internal'. Required. Feed type. Default: external.\n    connectedServiceName: # string. Required when nuGetFeedType = external. NuGet Service Connection. \n    #feedName: # string. Required when nuGetFeedType = internal. Internal Feed URL. \n  # Advanced\n    #nuGetAdditionalArgs: # string. NuGet Arguments. \n    #verbosity: '-' # '-' | 'Quiet' | 'Normal' | 'Detailed'. Verbosity. Default: -.\n    nuGetVersion: '3.3.0' # '3.3.0' | '3.5.0.1829' | '4.0.0.2283' | 'custom'. Required. NuGet Version. Default: 3.3.0.\n    #nuGetPath: # string. Path to NuGet.exe. \n    #continueOnEmptyNupkgMatch: false # boolean. Continue if no packages match the \"Path/Pattern to nupkg\". Default: false.\n```\n\n----------------------------------------\n\nTITLE: NuGet Pack Timezone Configuration\nDESCRIPTION: This snippet describes the `packTimezone` parameter for the NuGet `pack` command when using `versioningScheme = byPrereleaseNumber`. It specifies the timezone to use when generating the version, with `utc` being the recommended default.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/nuget-command-v2.md#2025-04-18_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n\"`string`. Optional. Use when `versioningScheme = byPrereleaseNumber && command = pack`. Allowed values: `utc`, `local` (Agent local time). Default value: `utc`.<br>`\n```\n\n----------------------------------------\n\nTITLE: Defining AdminUserName Parameter\nDESCRIPTION: Specifies the administrator login for the target machines. This is a required string parameter for authentication.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"AdminUserName\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`AdminUserName`** - **Admin Login**<br>\n`string`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the administrator login for the target machines.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Specifying Version Spec for kubectl\nDESCRIPTION: Specifies the version specification for kubectl when the versionOrLocation parameter is set to version. Default value is set to 1.7.0.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/kubernetes-v0.md#2025-04-18_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"versionSpec\"::: -->\n:::moniker range=\"<=azure-pipelines\"\n\n**`versionSpec`** - **Version spec**<br>\n`string`. Optional. Use when `versionOrLocation = version`. Default value: `1.7.0`.<br>\n<!-- :::editable-content name=\"helpMarkDown\"::: -->\nSpecifies the Version Spec of the version to get. Examples: `1.7.0`, `1.x.0`, `4.x.0`, `6.10.0`, `>=6.10.0`.\n<!-- :::editable-content-end::: -->\n<br>\n\n:::moniker-end\n<!-- :::item-end ::: -->\n```\n\n----------------------------------------\n\nTITLE: Defining Package Path for Azure Web App Deployment\nDESCRIPTION: This snippet describes the `Package` parameter, which specifies the file path to the package or folder containing the app service contents.  It's required for non-Linux web app deployments and defaults to a ZIP file within the default working directory.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-rm-web-app-deployment-v3.md#2025-04-18_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n**`Package`** - **Package or folder**<br>\n`string`. Required when `WebAppKind != linux && WebAppKind != applinux &&  WebAppKind != \"\"`. Default value: `$(System.DefaultWorkingDirectory)/**/*.zip`.\n```\n\n----------------------------------------\n\nTITLE: Requirements Table Definition in Markdown\nDESCRIPTION: Markdown table defining the requirements and specifications for running Notation tasks in Azure Pipelines, including pipeline types, agent requirements, and restrictions.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/notation-v0.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Requirement | Description |\n|-------------|-------------|\n| Pipeline types | YAML, Classic build, Classic release |\n| Runs on | Agent, DeploymentGroup |\n| [Demands](/azure/devops/pipelines/process/demands) | None |\n| [Capabilities](/azure/devops/pipelines/agents/agents#capabilities) | This task does not satisfy any demands for subsequent tasks in the job. |\n| [Command restrictions](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| [Settable variables](/azure/devops/pipelines/security/templates#agent-logging-command-restrictions) | Any |\n| Agent version |  2.144.0 or greater |\n| Task category | Utility |\n```\n\n----------------------------------------\n\nTITLE: Specifying Destination Type for Azure File Copy\nDESCRIPTION: Defines the Destination input to choose between copying files to Azure Blob storage or Azure VMs.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n\"Destination\": - **Destination Type**\n`string`. Required. Allowed values: `AzureBlob` (Azure Blob), `AzureVMs` (Azure VMs).\n```\n\n----------------------------------------\n\nTITLE: Defining AssignDuplicateBinding Parameter\nDESCRIPTION: When 'AddBinding' is set to true, this boolean parameter allows adding duplicate bindings despite conflicts. The default value is 'false'.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"AssignDuplicateBinding\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`AssignDuplicateBinding`** - **Assign Duplicate Binding**<br>\n`boolean`. Optional. Use when `AddBinding = true`. Default value: `false`.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the option to add the bindings specified here (even if there is another website with the same bindings). If there are binding conflicts, only one of the websites will start.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Implementing includeExcludeStringFilters as a String List in YAML\nDESCRIPTION: Implementation using a simple array of strings to specify items to include. This pattern is used when only inclusion filtering is needed.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/content/include-exclude-string-filters.md#2025-04-18_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nincludeExcludeStringFilters: [ string ] # List of items to include.\n```\n\n----------------------------------------\n\nTITLE: Defining WebDeployPackage Parameter\nDESCRIPTION: Specifies the location of the Web Deploy (MSDeploy) zip file. This is a required string parameter and can include UNC paths and environment variables.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/iisweb-app-deployment-v1.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- :::item name=\"WebDeployPackage\":::\n:::moniker range=\"<=azure-pipelines\"\n\n**`WebDeployPackage`** - **Web Deploy Package**<br>\n`string`. Required.<br>\n<!-- :::editable-content name=\"helpMarkDown\":::\nSpecifies the location of the Web Deploy (MSDeploy) zip file on the target machines or on a UNC path like, `\\\\BudgetIT\\WebDeploy\\WebDeployPackage.zip`. The UNC path should be accessible to the machine's administrator account. Environment variables are also supported, like `$env:windir`, `$env:systemroot`, and `$env:windir\\FabrikamFibre\\Web`.\n<!-- :::editable-content-end:::\n<br>\n\n:::moniker-end\n<!-- :::item-end:::\n-->\n```\n\n----------------------------------------\n\nTITLE: Configuring WinRM HTTPS for Azure File Copy in YAML\nDESCRIPTION: YAML snippet showing configuration options for enabling WinRM HTTPS when copying files to Azure VMs. This sets up a self-signed certificate and configures the WinRM listener on port 5986.\nSOURCE: https://github.com/microsoftdocs/azure-devops-yaml-schema/blob/main/task-reference/azure-file-copy-v5.md#2025-04-18_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- task: AzureFileCopy@5\n  inputs:\n    SourcePath: '$(Build.SourcesDirectory)'\n    azureSubscription: 'Resource Manager Connection'\n    Destination: 'AzureVMs'\n    MachineNames: 'myvm1.westus.cloudapp.azure.com,myvm2.westus.cloudapp.azure.com'\n    vmsAdminUserName: 'azureuser'\n    vmsAdminPassword: '$(vmAdminPassword)'\n    TargetPath: 'C:\\DeployFolder'\n    AdditionalArguments: '/S'\n    enableCopyPrerequisites: true\n```"
  }
]
[
  {
    "owner": "greenpau",
    "repo": "caddy-security",
    "content": "TITLE: Generate RSA Private Key with OpenSSL\nDESCRIPTION: This command generates a 4096-bit RSA private key using OpenSSL and saves it to the specified file path. The file path suggests it's used for OAuth testing in the caddy-security project.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/testdata/oauth/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl genrsa -out testdata/oauth/87329db33bf_pri.pem 4096\n```\n\n----------------------------------------\n\nTITLE: Extract Public Key from Private Key with OpenSSL\nDESCRIPTION: This command extracts the public key from the previously generated private key file using OpenSSL. The public key is then saved to a separate file, also within the testdata/oauth directory, suggesting its use in OAuth-related tests for the caddy-security project.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/testdata/oauth/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rsa -in testdata/oauth/87329db33bf_pri.pem -pubout -out testdata/oauth/87329db33bf_pub.pem\n```\n\n----------------------------------------\n\nTITLE: Modifying go.mod with replace directive\nDESCRIPTION: This snippet shows how to modify the go.mod file to replace a dependency with a local path. This is crucial for using local source code during development, ensuring changes in go-authcrunch are reflected in caddy-security. It overrides the default Github version.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nmodule github.com/greenpau/caddy-security\n\ngo 1.21\n\nrequire (\n    github.com/greenpau/go-authcrunch v1.1.4\n)\n\nreplace github.com/greenpau/go-authcrunch v1.1.4 => /home/greenpau/dev/go/src/github.com/greenpau/go-authcrunch\n```\n\n----------------------------------------\n\nTITLE: Modifying go.mod with go mod edit\nDESCRIPTION: This snippet shows an alternative way to modify the go.mod file using `go mod edit`. It replaces a dependency with a local path. This method is used to tell go to use local directories, as opposed to follow Github versions.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo mod edit -replace github.com/greenpau/go-authcrunch@v1.1.4=/home/greenpau/dev/go/src/github.com/greenpau/go-authcrunch@v1.0.48\n```\n\n----------------------------------------\n\nTITLE: Running Make to Compile\nDESCRIPTION: This snippet runs the `make` command to compile the project. The Makefile contains instructions for compiling Caddy with the caddy-security plugin, using the local source code.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Running Caddy\nDESCRIPTION: This snippet executes the compiled `caddy` binary with a specified configuration file and pipes the output to `jq` for JSON formatting. It's used to test the built Caddy server with the caddy-security plugin.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbin/caddy run --config assets/config/Caddyfile | jq\n```\n\n----------------------------------------\n\nTITLE: Modifying Makefile for xcaddy builder\nDESCRIPTION: This snippet shows how to modify the Makefile to pass replacement directives to the xcaddy builder.  This ensures that xcaddy uses the local versions of the dependencies during the build process.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n        @mkdir -p ../xcaddy-$(PLUGIN_NAME) && cd ../xcaddy-$(PLUGIN_NAME) && \\\n                xcaddy build $(CADDY_VERSION) --output ../$(PLUGIN_NAME)/bin/caddy \\\n                --with github.com/greenpau/caddy-security@$(LATEST_GIT_COMMIT)=$(BUILD_DIR) \\\n                --with github.com/greenpau/go-authcrunch@v1.1.4=/home/greenpau/dev/go/src/github.com/greenpau/go-authcrunch\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: This snippet navigates to the caddy-security directory and executes the 'make dep' command to install project dependencies. It relies on a Makefile to define the dependency installation process.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd caddy-security\nmake dep\n```\n\n----------------------------------------\n\nTITLE: Running Ctests\nDESCRIPTION: This snippet executes the 'make ctest' command to run the project's tests. The test suite verifies the functionality of the caddy-security plugin.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmake ctest\n```\n\n----------------------------------------\n\nTITLE: Cloning Forked Repositories\nDESCRIPTION: This snippet clones the forked caddy-security and go-authcrunch repositories into the local development directory. It uses the git clone command.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:anonymous/caddy-security.git\ngit clone git@github.com:anonymous/go-authcrunch.git\n```\n\n----------------------------------------\n\nTITLE: Creating Development Directory\nDESCRIPTION: This snippet creates a temporary directory for development and navigates into it. It is used to isolate the build environment.\nSOURCE: https://github.com/greenpau/caddy-security/blob/main/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ~/tmpdev\ncd ~/tmpdev\n```"
  }
]
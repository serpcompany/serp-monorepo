[
  {
    "owner": "funaudiollm",
    "repo": "cosyvoice",
    "content": "TITLE: CosyVoice2 Implementation Example\nDESCRIPTION: Comprehensive example showing CosyVoice2 usage including zero-shot synthesis, fine-grained control, and streaming inference.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ncosyvoice = CosyVoice2('pretrained_models/CosyVoice2-0.5B', load_jit=False, load_trt=False, fp16=False, use_flow_cache=False)\n\nprompt_speech_16k = load_wav('./asset/zero_shot_prompt.wav', 16000)\nfor i, j in enumerate(cosyvoice.inference_zero_shot('收到好友从远方寄来的生日礼物，那份意外的惊喜与深深的祝福让我心中充满了甜蜜的快乐，笑容如花儿般绽放。', '希望你以后能够做的比我还好呦。', prompt_speech_16k, stream=False)):\n    torchaudio.save('zero_shot_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n```\n\n----------------------------------------\n\nTITLE: Inferencing with Instruct Mode in CosyVoice TTS (Python)\nDESCRIPTION: Demonstrates how to use CosyVoice's instruct mode for text-to-speech generation with formatting tags. This code iterates through generated speech segments and saves them as wav files, supporting special markup tags for speech effects.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfor i, j in enumerate(cosyvoice.inference_instruct('在面对挑战时，他展现了非凡的<strong>勇气</strong>与<strong>智慧</strong>。', '中文男', 'Theo \\'Crimson\\', is a fiery, passionate rebel leader. Fights with fervor for justice, but struggles with impulsiveness.', stream=False)):\n    torchaudio.save('instruct_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n```\n\n----------------------------------------\n\nTITLE: CosyVoice 1.0 Usage Examples\nDESCRIPTION: Implementation examples for CosyVoice 1.0 including SFT, zero-shot, cross-lingual and voice conversion functionalities.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ncosyvoice = CosyVoice('pretrained_models/CosyVoice-300M-SFT', load_jit=False, load_trt=False, fp16=False)\nprint(cosyvoice.list_available_spks())\nfor i, j in enumerate(cosyvoice.inference_sft('你好，我是通义生成式语音大模型，请问有什么可以帮您的吗？', '中文女', stream=False)):\n    torchaudio.save('sft_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying CosyVoice with Docker (Shell)\nDESCRIPTION: Shell commands for building a Docker container for CosyVoice deployment. Includes options for both gRPC and FastAPI service deployment with specific runtime configurations for GPU support and port mapping.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ncd runtime/python\ndocker build -t cosyvoice:v1.0 .\n# change iic/CosyVoice-300M to iic/CosyVoice-300M-Instruct if you want to use instruct inference\n# for grpc usage\ndocker run -d --runtime=nvidia -p 50000:50000 cosyvoice:v1.0 /bin/bash -c \"cd /opt/CosyVoice/CosyVoice/runtime/python/grpc && python3 server.py --port 50000 --max_conc 4 --model_dir iic/CosyVoice-300M && sleep infinity\"\ncd grpc && python3 client.py --port 50000 --mode <sft|zero_shot|cross_lingual|instruct>\n# for fastapi usage\ndocker run -d --runtime=nvidia -p 50000:50000 cosyvoice:v1.0 /bin/bash -c \"cd /opt/CosyVoice/CosyVoice/runtime/python/fastapi && python3 server.py --port 50000 --model_dir iic/CosyVoice-300M && sleep infinity\"\ncd fastapi && python3 client.py --port 50000 --mode <sft|zero_shot|cross_lingual|instruct>\n```\n\n----------------------------------------\n\nTITLE: CosyVoice Basic Setup\nDESCRIPTION: Initial imports and setup code required for using CosyVoice models.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport sys\nsys.path.append('third_party/Matcha-TTS')\nfrom cosyvoice.cli.cosyvoice import CosyVoice, CosyVoice2\nfrom cosyvoice.utils.file_utils import load_wav\nimport torchaudio\n```\n\n----------------------------------------\n\nTITLE: Downloading CosyVoice Models via ModelScope SDK\nDESCRIPTION: Python code to download pretrained CosyVoice models using the ModelScope framework.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom modelscope import snapshot_download\nsnapshot_download('iic/CosyVoice2-0.5B', local_dir='pretrained_models/CosyVoice2-0.5B')\nsnapshot_download('iic/CosyVoice-300M', local_dir='pretrained_models/CosyVoice-300M')\nsnapshot_download('iic/CosyVoice-300M-SFT', local_dir='pretrained_models/CosyVoice-300M-SFT')\nsnapshot_download('iic/CosyVoice-300M-Instruct', local_dir='pretrained_models/CosyVoice-300M-Instruct')\nsnapshot_download('iic/CosyVoice-ttsfrd', local_dir='pretrained_models/CosyVoice-ttsfrd')\n```\n\n----------------------------------------\n\nTITLE: Python Requirements Configuration\nDESCRIPTION: Dependency specifications for a machine learning audio project, including PyTorch, ONNX Runtime, audio processing libraries, and web frameworks. Contains platform-specific requirements for Linux, Windows, and macOS, with custom package indexes for CUDA 12.1 support.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/requirements.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--extra-index-url https://download.pytorch.org/whl/cu121\n--extra-index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/onnxruntime-cuda-12/pypi/simple/\nconformer==0.3.2\ndeepspeed==0.14.2; sys_platform == 'linux'\ndiffusers==0.29.0\ngdown==5.1.0\ngradio==5.4.0\ngrpcio==1.57.0\ngrpcio-tools==1.57.0\nhydra-core==1.3.2\nHyperPyYAML==1.2.2\ninflect==7.3.1\nlibrosa==0.10.2\nlightning==2.2.4\nmatplotlib==3.7.5\nmodelscope==1.20.0\nnetworkx==3.1\nomegaconf==2.3.0\nonnx==1.16.0\nonnxruntime-gpu==1.18.0; sys_platform == 'linux'\nonnxruntime==1.18.0; sys_platform == 'darwin' or sys_platform == 'win32'\nopenai-whisper==20231117\nprotobuf==4.25\npyarrow==18.1.0\npydantic==2.7.0\npyworld==0.3.4\nrich==13.7.1\nsoundfile==0.12.1\ntensorboard==2.14.0\ntensorrt-cu12==10.0.1; sys_platform == 'linux'\ntensorrt-cu12-bindings==10.0.1; sys_platform == 'linux'\ntensorrt-cu12-libs==10.0.1; sys_platform == 'linux'\ntorch==2.3.1\ntorchaudio==2.3.1\ntransformers==4.40.1\nuvicorn==0.30.0\nwget==3.2\nfastapi==0.115.6\nfastapi-cli==0.0.4\nWeTextProcessing==1.0.3\n```\n\n----------------------------------------\n\nTITLE: Starting CosyVoice Web Demo (Python)\nDESCRIPTION: Command to launch the CosyVoice web demo interface for quick experimentation. The command specifies port, model directory path and supports different model variants (SFT or Instruct).\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# change iic/CosyVoice-300M-SFT for sft inference, or iic/CosyVoice-300M-Instruct for instruct inference\npython3 webui.py --port 50000 --model_dir pretrained_models/CosyVoice-300M\n```\n\n----------------------------------------\n\nTITLE: Installing CosyVoice Resources with Git LFS\nDESCRIPTION: Commands to clone the CosyVoice model repository, extract resources, and install the required wheel file. Requires git-lfs to be installed on the system first.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/FAQ.md#2025-04-17_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://www.modelscope.cn/iic/CosyVoice-ttsfrd.git pretrained_models/CosyVoice-ttsfrd\ncd pretrained_models/CosyVoice-ttsfrd/\nunzip resource.zip -d .\npip install ttsfrd-0.3.6-cp38-cp38-linux_x86_64.whl\n```\n\n----------------------------------------\n\nTITLE: Setting up Conda Environment\nDESCRIPTION: Commands for creating and configuring a Conda environment with required dependencies for CosyVoice.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nconda create -n cosyvoice -y python=3.10\nconda activate cosyvoice\nconda install -y -c conda-forge pynini==2.1.5\npip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com\n```\n\n----------------------------------------\n\nTITLE: Installing CosyVoice Repository\nDESCRIPTION: Commands for cloning the CosyVoice repository and initializing submodules.\nSOURCE: https://github.com/FunAudioLLM/CosyVoice/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --recursive https://github.com/FunAudioLLM/CosyVoice.git\ncd CosyVoice\ngit submodule update --init --recursive\n```"
  }
]
[
  {
    "owner": "whatsapp",
    "repo": "whatsapp-flows-tools",
    "content": "TITLE: Generating WhatsApp Flow Key Pair using Node.js\nDESCRIPTION: Command to generate a public/private key pair for WhatsApp Flow authentication using the keyGenerator.js script. The command requires a passphrase parameter.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/basic/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode src/keyGenerator.js {passphrase}\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration for WhatsApp Webhook\nDESCRIPTION: Required environment variables that need to be configured in the .env file for the webhook server to function. Includes webhook verification token, Graph API token, and Flow ID.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/webhook/nodejs/flows-webhook/README.md#2025-04-21_snippet_0\n\nLANGUAGE: env\nCODE:\n```\nWEBHOOK_VERIFY_TOKEN=your_verification_token\nGRAPH_API_TOKEN=your_graph_api_token\nFLOW_ID=your_flow_id\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for WhatsApp Webhook\nDESCRIPTION: Configuration of essential environment variables required for webhook setup including the verification token and Graph API token. These variables are necessary for webhook authentication and API communication.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/webhook/nodejs/echo-webhook/README.md#2025-04-21_snippet_0\n\nLANGUAGE: env\nCODE:\n```\nWEBHOOK_VERIFY_TOKEN=your_verification_token_here\nGRAPH_API_TOKEN=your_temporary_access_token_here\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for WhatsApp Flow Server\nDESCRIPTION: Environment variable configuration example showing the format for storing the private key and passphrase. The private key must maintain proper line breaks and formatting.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/basic/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nPASSPHRASE=\"my-secret\"\n\nPRIVATE_KEY=\"-----[REPLACE THIS] BEGIN RSA PRIVATE KEY-----\nMIIE...\n...\n...xyz\n-----[REPLACE THIS] END RSA PRIVATE KEY-----\"\n```\n\n----------------------------------------\n\nTITLE: Generating Key Pair for WhatsApp Flow Endpoint (JavaScript)\nDESCRIPTION: This command runs a script to generate a private and public key pair for testing purposes. The script is located in src/keyGenerator.js and requires a passphrase as an argument.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/insurance-quote/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode src/keyGenerator.js {passphrase}\n```\n\n----------------------------------------\n\nTITLE: Generating Key Pair for WhatsApp Flow Endpoint (JavaScript)\nDESCRIPTION: This command runs a script to generate a public and private key pair for testing purposes. The generated keys are used to secure the communication between the WhatsApp server and the Flow endpoint.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/book-appointment/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode src/keyGenerator.js {passphrase}\n```\n\n----------------------------------------\n\nTITLE: Generating Key Pair for WhatsApp Flow Endpoint (JavaScript)\nDESCRIPTION: This command runs a script to generate a public and private key pair for testing purposes. The generated keys are used to set up the WhatsApp Flow Endpoint Server.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/personalised-offer/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnode src/keyGenerator.js {passphrase}\n```\n\n----------------------------------------\n\nTITLE: Generating Key Pair for WhatsApp Flow Endpoint in Node.js\nDESCRIPTION: This command runs a Node.js script to generate a private and public key pair for testing purposes. The script is located in src/keyGenerator.js and requires a passphrase as an argument.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/preapproved-loan/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode src/keyGenerator.js {passphrase}\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for WhatsApp Flow Endpoint\nDESCRIPTION: This snippet shows the format for setting up environment variables in the .env file. It includes the passphrase and the multi-line private key, which are crucial for the Flow Endpoint's security.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/insurance-quote/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nPASSPHRASE=\"my-secret\"\n\nPRIVATE_KEY=\"-----[REPLACE THIS] BEGIN RSA PRIVATE KEY-----\nMIIE...\n...\n...xyz\n-----[REPLACE THIS] END RSA PRIVATE KEY-----\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for WhatsApp Flow Endpoint\nDESCRIPTION: This snippet shows the format for setting up environment variables in the .env file. It includes the passphrase and the private key, which are crucial for the server's operation.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/personalised-offer/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nPASSPHRASE=\"my-secret\"\n\nPRIVATE_KEY=\"-----[REPLACE THIS] BEGIN RSA PRIVATE KEY-----\nMIIE...\n...\n...xyz\n-----[REPLACE THIS] END RSA PRIVATE KEY-----\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for WhatsApp Flow Endpoint\nDESCRIPTION: This snippet shows the format for setting up environment variables in the .env file. It includes the passphrase and the private key, which should be a testing key only, not a production key.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/preapproved-loan/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nPASSPHRASE=\"my-secret\"\n\nPRIVATE_KEY=\"-----[REPLACE THIS] BEGIN RSA PRIVATE KEY-----\nMIIE...\n...\n...xyz\n-----[REPLACE THIS] END RSA PRIVATE KEY-----\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for WhatsApp Flow Endpoint\nDESCRIPTION: This snippet shows how to set up the .env file with the necessary private key and passphrase. It's crucial for securing the endpoint and must be kept confidential.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/nodejs/book-appointment/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nPASSPHRASE=\"my-secret\"\n\nPRIVATE_KEY=\"-----[REPLACE THIS] BEGIN RSA PRIVATE KEY-----\nMIIE...\n...\n...xyz\n-----[REPLACE THIS] END RSA PRIVATE KEY-----\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhook URL Structure\nDESCRIPTION: Example structure of the webhook URL that needs to be configured in the Meta Developers Dashboard. The URL follows the pattern of the Glitch project URL with a /webhook endpoint.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/webhook/nodejs/echo-webhook/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://project-name.glitch.me/webhook\n```\n\n----------------------------------------\n\nTITLE: Building and Running WhatsApp Flows Tools with .NET CLI\nDESCRIPTION: This snippet shows the commands to restore project dependencies and run the application in watch mode. The 'dotnet restore' command fetches all required packages, while 'dotnet watch run' starts the application and automatically recompiles and restarts it when changes are detected.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/examples/endpoint/csharp/FlowsEndpoint/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndotnet restore\ndotnet watch run\n```\n\n----------------------------------------\n\nTITLE: Email Contact Link in Markdown\nDESCRIPTION: Markdown formatted email link for reporting code of conduct violations to the project team.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/CODE_OF_CONDUCT.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<opensource-conduct@meta.com>\n```\n\n----------------------------------------\n\nTITLE: Contributor Covenant Link in Markdown\nDESCRIPTION: Markdown formatted link reference for the Contributor Covenant source document.\nSOURCE: https://github.com/whatsapp/whatsapp-flows-tools/blob/main/CODE_OF_CONDUCT.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[homepage]: https://www.contributor-covenant.org\n```"
  }
]
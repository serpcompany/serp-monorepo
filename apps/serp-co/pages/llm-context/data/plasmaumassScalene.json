[
  {
    "owner": "plasma-umass",
    "repo": "scalene",
    "content": "TITLE: Defining Python Package Dependencies for Scalene Project\nDESCRIPTION: This code snippet lists the required Python packages and their versions for the Scalene project. It includes conditional dependencies and version constraints for various libraries used in the project.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nastunparse>=1.6.3; python_version < '3.9'\ncloudpickle==2.2.1\nCython>=0.29.28\ngit+https://github.com/plasma-umass/crdp.git#egg=crdp\nipython>=8.10\nJinja2==3.0.3\nlxml==5.1.0\npackaging>=24\npsutil>=5.9.2\npyperf==2.0.0\nrich>=10.7.0\nsetuptools>=65.5.1\nnvidia-ml-py>=12.555.43; platform_system !='Darwin'\nwheel>=0.43.0\n# Per https://github.com/pypa/setuptools/issues/4483#issuecomment-2236528158\nordered-set>=3.1.1\nmore_itertools>=8.8\njaraco.text>=3.7\nimportlib_resources>=5.10.2\nimportlib_metadata>=6\ntomli>=2.0.1\nplatformdirs >= 2.6.2\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Option Conversion Function in Python\nDESCRIPTION: This snippet shows how to create a custom option conversion function using the directives.choice utility. It implements a 'yesno' function that only accepts 'yes' or 'no' as valid arguments.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom docutils.parsers.rst import directives\n\ndef yesno(argument):\n    return directives.choice(argument, ('yes', 'no'))\n```\n\n----------------------------------------\n\nTITLE: Installing Scalene via pip\nDESCRIPTION: Command to install or update Scalene using pip package manager\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\npython3 -m pip install -U scalene\n```\n\n----------------------------------------\n\nTITLE: Defining a One-line Docstring in Python\nDESCRIPTION: This snippet demonstrates how to write a one-line docstring for a function. It uses triple quotes and describes the function's effect as a command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0257.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef kos_root():\n    \"\"\"Return the pathname of the KOS root directory.\"\"\"\n    global _kos_root\n    if _kos_root: return _kos_root\n    ...\n```\n\n----------------------------------------\n\nTITLE: Modifying Docutils Document Tree in Python\nDESCRIPTION: Explains how to modify the document tree before it is written using the publish_doctree and publish_from_doctree functions from docutils.core. This allows for custom modifications to the document structure.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/hacking.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndocument = docutils.core.publish_doctree(...)\n\n# Modify the document tree here\n\noutput = docutils.core.publish_from_doctree(document, ...)\n```\n\n----------------------------------------\n\nTITLE: Installing Scalene with Conda\nDESCRIPTION: Command to install Scalene using conda package manager\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_9\n\nLANGUAGE: console\nCODE:\n```\n% conda install -c conda-forge scalene\n```\n\n----------------------------------------\n\nTITLE: Running Scalene CLI Command\nDESCRIPTION: Basic command to run Scalene profiler on a test program\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nscalene test/testme.py\n```\n\n----------------------------------------\n\nTITLE: Generating Makefile Rule for Docutils Dependencies in Python\nDESCRIPTION: This snippet demonstrates how to create a Makefile rule that uses Docutils' dependency recording feature. It shows how to generate an HTML file from a reStructuredText source, while tracking dependencies.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_3\n\nLANGUAGE: makefile\nCODE:\n```\nham.html: ham.txt $(shell cat hamdeps.txt)\n  rst2html.py --record-dependencies=hamdeps.txt ham.txt ham.html\n```\n\n----------------------------------------\n\nTITLE: Scalene Command Line Usage Examples\nDESCRIPTION: Various command line options for running Scalene profiler with different configurations\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nscalene your_prog.py                             # full profile (outputs to web interface)\npython3 -m scalene your_prog.py                  # equivalent alternative\n\nscalene --cli your_prog.py                       # use the command-line only (no web interface)\n\nscalene --cpu your_prog.py                       # only profile CPU\nscalene --cpu --gpu your_prog.py                 # only profile CPU and GPU\nscalene --cpu --gpu --memory your_prog.py        # profile everything (same as no options)\n\nscalene --reduced-profile your_prog.py           # only profile lines with significant usage\nscalene --profile-interval 5.0 your_prog.py      # output a new profile every five seconds\n\nscalene (Scalene options) --- your_prog.py (...) # use --- to tell Scalene to ignore options after that point\nscalene --help                                   # lists all options\n```\n\n----------------------------------------\n\nTITLE: Docstring Extraction Example in Python\nDESCRIPTION: This snippet illustrates how docstrings can be assigned to variables, classes, methods, and functions, including examples of context and expected syntax. It shows how to define docstrings in various contexts to clarify usage in Python modules.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0258.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ng = 'module attribute (module-global variable)'\n\"\"\"This is g's docstring.\"\"\"\n\nclass AClass:\n\n    c = 'class attribute'\n    \"\"\"This is AClass.c's docstring.\"\"\"\n\n    def __init__(self):\n        \"\"\"Method __init__'s docstring.\"\"\"\n\n        self.i = 'instance attribute'\n        \"\"\"This is self.i's docstring.\"\"\"\n\n\ndef f(x):\n    \"\"\"Function f's docstring.\"\"\"\n    return x**2\n\nf.a = 1\n\"\"\"Function attribute f.a's docstring.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Scalene Background Profiling Control Examples\nDESCRIPTION: Commands for controlling Scalene profiling when running in the background, including how to suspend and resume profiling for a specific process ID.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/scalene/scalene-usage.txt#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n% python3 -m scalene  yourprogram.py &\n Scalene now profiling process 12345\n   to suspend profiling: python3 -m scalene.profile --off --pid 12345\n   to resume profiling:  python3 -m scalene.profile --on  --pid 12345\n```\n\n----------------------------------------\n\nTITLE: Importing Docutils Core Functions in Python\nDESCRIPTION: This line imports the necessary functions from the docutils.core module. publish_cmdline is the main function used to run the Docutils publisher, while default_description provides a standard description for the tool.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/cmdline-tool.txt#2025-04-19_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\nfrom docutils.core import publish_cmdline, default_description\n```\n\n----------------------------------------\n\nTITLE: Loading Scalene Extension\nDESCRIPTION: Jupyter notebook magic command to load the Scalene profiler extension.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/docs/scalene-demo.ipynb#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# Load Scalene\n%load_ext scalene\n```\n\n----------------------------------------\n\nTITLE: Installing Scalene with pip\nDESCRIPTION: Commands for installing Scalene using pip package manager\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_7\n\nLANGUAGE: console\nCODE:\n```\n% pip install -U scalene\n```\n\nLANGUAGE: console\nCODE:\n```\n% python3 -m pip install -U scalene\n```\n\n----------------------------------------\n\nTITLE: Handling Errors in Directive Implementation in Python\nDESCRIPTION: This code snippet demonstrates how to handle errors within a directive's run() method. It shows the use of self.error() to raise an exception and create an error-level system message.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nif error_condition:\n    raise self.error('Error message.')\n```\n\n----------------------------------------\n\nTITLE: Class Definition with Docstring Example in Python\nDESCRIPTION: This snippet demonstrates defining a Python class with proper docstring annotations, including attributes and methods, showcasing how to reference other classes and their methods within the documentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0258.txt#2025-04-19_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nclass Keeper(Storer):\n\n        \"\"\"\n        Extend `Storer`.  Class attribute `instances` keeps track\n        of the number of `Keeper` objects instantiated.\n        \"\"\"\n\n        instances = 0\n        \"\"\"How many `Keeper` objects are there?\"\"\"\n\n        def __init__(self):\n            \"\"\"\n            Extend `Storer.__init__()` to keep track of instances.\n\n            Keep count in `Keeper.instances`, data in `self.data`.\n            \"\"\"\n            Storer.__init__(self)\n            Keeper.instances += 1\n\n            self.data = []\n            \"\"\"Store data in a list, most recent last.\"\"\"\n\n        def store_data(self, data):\n            \"\"\"\n            Extend `Storer.store_data()`; append new `data` to a\n            list (in `self.data`).\n            \"\"\"\n            self.data = data\n```\n\n----------------------------------------\n\nTITLE: Registering Core Role in Python\nDESCRIPTION: Shows how to register a new role with the Docutils parser using the canonical name. This is used for roles that are intended to be part of the Docutils core functionality.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-roles.txt#2025-04-19_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\nfrom docutils.parsers.rst import roles\nroles.register_canonical_role(name, role_function)\n```\n\n----------------------------------------\n\nTITLE: Configuring gevent/Greenlets with Scalene in Python\nDESCRIPTION: Code snippet to configure gevent/Greenlets to work with Scalene by modifying the monkey patching.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom gevent import monkey\nmonkey.patch_all(thread=False)\n```\n\n----------------------------------------\n\nTITLE: Installing Scalene via conda\nDESCRIPTION: Command to install Scalene using conda package manager from conda-forge channel\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nconda install -c conda-forge scalene\n```\n\n----------------------------------------\n\nTITLE: Function Decoration with Scalene\nDESCRIPTION: Example of using the @profile decorator to profile specific functions with Scalene\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# do not import profile!\n\n@profile\ndef slow_function():\n    import time\n    time.sleep(3)\n```\n\n----------------------------------------\n\nTITLE: Programmatic Scalene Usage\nDESCRIPTION: Example of how to use Scalene programmatically within Python code using the scalene_profiler module\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom scalene import scalene_profiler\n\n# Turn profiling on\nscalene_profiler.start()\n\n# your code\n\n# Turn profiling off\nscalene_profiler.stop()\n```\n\n----------------------------------------\n\nTITLE: Basic Multi-line Docstring Definition\nDESCRIPTION: Demonstrates defining a function with a three-line docstring where first and last lines are blank.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0257.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef foo():\n    \"\"\"\n    This is the second line of the docstring.\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Reduced Profile Generation\nDESCRIPTION: Generate a simplified profile output showing only lines with non-zero counts.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/docs/scalene-demo.ipynb#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# Generate a reduced profile (only lines with non-zero counts)\n%scrun --reduced-profile test_me()\n```\n\n----------------------------------------\n\nTITLE: Defining Docutils Data Flow Model\nDESCRIPTION: This code block illustrates the data flow model within the Docutils system. It shows how data moves between components such as Reader, Transformer, and Writer, highlighting the paths (numbered) and the types of data expected (standard or extended doc trees).\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0258.txt#2025-04-19_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n                     +---------------------------+\n                     |        Docutils:          |\n                     | docutils.core.Publisher,  |\n                     | docutils.core.publish_*() |\n                     +---------------------------+\n                      /            |            \\\n                     /             |             \\\n            1,3,5   /        6     |              \\ 7\n           +--------+       +-------------+       +--------+\n           | READER | ----> | TRANSFORMER | ====> | WRITER |\n           +--------+       +-------------+       +--------+\n            /     \\\\                                  |\n           /       \\\\                                 |\n     2    /      4  \\\\                             8  |\n    +-------+   +--------+                        +--------+\n    | INPUT |   | PARSER |                        | OUTPUT |\n    +-------+   +--------+                        +--------+\n```\n\n----------------------------------------\n\nTITLE: Scalene Context Manager Usage\nDESCRIPTION: Example of using Scalene with a context manager for selective profiling\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom scalene.scalene_profiler import enable_profiling\n\nwith enable_profiling():\n    # do something\n```\n\n----------------------------------------\n\nTITLE: Multi-line Cell Profiling\nDESCRIPTION: Example of profiling multiple lines of code in a Jupyter cell using the cell magic syntax with reduced profile option.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/docs/scalene-demo.ipynb#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n%%scalene --reduced-profile\n# Profile more than one line of code in a cell\nx = 0\nfor i in range(1000):\n    for j in range(1000):\n        x += 1\n```\n\n----------------------------------------\n\nTITLE: Docstring Processing Examples\nDESCRIPTION: Shows various operations on docstrings including repr() display, splitlines() method, and trim() function usage.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0257.txt#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n>>> print repr(foo.__doc__)\n'\\n    This is the second line of the docstring.\\n    '\n>>> foo.__doc__.splitlines()\n['', '    This is the second line of the docstring.', '    ']\n>>> trim(foo.__doc__)\n'This is the second line of the docstring.'\n```\n\n----------------------------------------\n\nTITLE: Docstring and Comment Handling in Python Source Parser\nDESCRIPTION: Examples of how docstrings and comments could be handled in a Python source code parser for Docutils, including multi-line comments and module-level documentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"Module docstring.\"\"\"\n\n##\n# Constants\n# =========\n\na = 1\nb = 2\n\n##\n# Exception Classes\n# =================\n\nclass MyException(Exception): pass\n```\n\nLANGUAGE: python\nCODE:\n```\n#!/usr/bin/env python\n# :Author: Me\n# :Copyright: whatever\n\n\"\"\"This is the public module docstring (__doc__).\"\"\"\n\n# More docs, in comments.\n# All comments at the beginning of a module could be\n# accumulated as docstrings.\n# We can't have another docstring here, because of the\n# ``__future__`` statement.\n\nfrom __future__ import division\n```\n\n----------------------------------------\n\nTITLE: Sample Program for Profiling with NumPy Arrays\nDESCRIPTION: Example function that creates and manipulates large NumPy arrays in a loop, designed to demonstrate memory and CPU usage profiling.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/docs/scalene-demo.ipynb#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# An example program to profile\n\nimport numpy as np\n\ndef test_me():\n    for i in range(6):\n        x = np.array(range(10**7))\n        y = np.array(np.random.uniform(0, 100, size=(10**8)))\n\n```\n\n----------------------------------------\n\nTITLE: Single Line Profiling with Scalene\nDESCRIPTION: Profile a single function call using Scalene's line profiler.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/docs/scalene-demo.ipynb#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# Profile just one line of code\n%scrun test_me()\n```\n\n----------------------------------------\n\nTITLE: Additional Docstrings in Function Definitions\nDESCRIPTION: This code snippet demonstrates the use of additional docstrings in a function definition, showcasing how first docstrings are displayed as __doc__ attributes while subsequent docstrings provide more detailed documentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0258.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef function(arg):\n    \"\"\"This is __doc__, function's docstring.\"\"\"\n    \"\"\"\n    This is an additional docstring, ignored by the byte-code\n    compiler, but extracted by Docutils.\n    \"\"\"\n    pass\n```\n\n----------------------------------------\n\nTITLE: Hyperlink Targets Syntax in reStructuredText\nDESCRIPTION: This snippet covers the definition of hyperlink targets, including named and anonymous hyperlink targets, internal and external hyperlink targets. The syntax provides a way to create navigable links within a document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_22\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _Python DOC-SIG mailing list archive:\n.. _archive:\n.. _Doc-SIG: https://mail.python.org/pipermail/doc-sig/\n```\n\n----------------------------------------\n\nTITLE: Version Check Example in Python\nDESCRIPTION: Example code showing how to check for minimum required Docutils version using version_info tuple.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/policies.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndocutils.__version_info__ >= (0, 13)\n```\n\n----------------------------------------\n\nTITLE: Doctest Block Example\nDESCRIPTION: Shows a Python doctest block with interactive session printing examples\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n>>> print 'Python-specific usage examples; begun with \">>>\"'\nPython-specific usage examples; begun with \">>>\"\n>>> print '(cut and pasted from interactive sessions)'\n(cut and pasted from interactive sessions)\n```\n\n----------------------------------------\n\nTITLE: Defining a Figure Directive in reStructuredText\nDESCRIPTION: This snippet demonstrates how to use the figure directive in reStructuredText. It includes an image with scaling and alt text, a caption, and a legend with a table.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_5\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. figure:: picture.png\n   :scale: 50 %\n   :alt: map to buried treasure\n\n   This is the caption of the figure (a simple paragraph).\n\n   The legend consists of all elements after the caption.  In this\n   case, the legend consists of this paragraph and the following\n   table:\n\n   +-----------------------+-----------------------+\n   | Symbol                | Meaning               |\n   +=======================+=======================+\n   | .. image:: tent.png   | Campground            |\n   +-----------------------+-----------------------+\n   | .. image:: waves.png  | Lake                  |\n   +-----------------------+-----------------------+\n   | .. image:: peak.png   | Mountain              |\n   +-----------------------+-----------------------+\n```\n\n----------------------------------------\n\nTITLE: Testing Installation from Test PyPI\nDESCRIPTION: Series of commands to create a virtual environment and test the package installation from test PyPI\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/release.txt#2025-04-19_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npython3 -m venv du3 ; cd du3\nexport PYTHONPATH= ; . bin/activate\n\npython -m pip install --index-url https://test.pypi.org/simple/ --no-deps docutils\n\ncp -Lr ../docutils-code/docutils/test .\npython test/alltests.py\n\npython -m pip uninstall docutils\ndeactivate ; cd .. ; rm -r du3\n```\n\n----------------------------------------\n\nTITLE: Securing Docutils via Configuration File\nDESCRIPTION: Shows the configuration file settings required to disable potentially unsafe features like file insertion and raw HTML processing in Docutils.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/security.txt#2025-04-19_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\n[general]\nfile-insertion-enabled: off\nraw-enabled: no\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Literal Block Syntax in reStructuredText\nDESCRIPTION: This snippet shows how to create a literal block in reStructuredText using double colons (::). It demonstrates preserving indentation and code formatting within the block.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_7\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is a typical paragraph.  An indented literal block follows.\n\n::\n\n    for a in [5,4,3,2,1]:   # this is program code, shown as-is\n        print a\n    print \"it's...\"\n    # a literal block continues until the indentation ends\n\nThis text has returned to the indentation of the first paragraph,\nis outside of the literal block, and is therefore treated as an\nordinary paragraph.\n```\n\n----------------------------------------\n\nTITLE: Implementing Docstring Indentation Handling in Python\nDESCRIPTION: This function demonstrates how to process and trim docstrings, removing uniform indentation and blank lines from the beginning and end. It handles tabs, relative indentation, and special cases for the first line.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0257.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef trim(docstring):\n    if not docstring:\n        return ''\n    # Convert tabs to spaces (following the normal Python rules)\n    # and split into a list of lines:\n    lines = docstring.expandtabs().splitlines()\n    # Determine minimum indentation (first line doesn't count):\n    indent = sys.maxint\n    for line in lines[1:]:\n        stripped = line.lstrip()\n        if stripped:\n            indent = min(indent, len(line) - len(stripped))\n    # Remove indentation (first line is special):\n    trimmed = [lines[0].strip()]\n    if indent < sys.maxint:\n        for line in lines[1:]:\n            trimmed.append(line[indent:].rstrip())\n    # Strip off trailing and leading blank lines:\n    while trimmed and not trimmed[-1]:\n        trimmed.pop()\n    while trimmed and not trimmed[0]:\n        trimmed.pop(0)\n    # Return a single string:\n    return '\\n'.join(trimmed)\n```\n\n----------------------------------------\n\nTITLE: Generic Docutils Command Line Usage Pattern\nDESCRIPTION: Basic command-line pattern used by most Docutils front-end tools for processing documents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntoolname [options] [<source> [<destination>]]\n```\n\n----------------------------------------\n\nTITLE: Implementing RFC Reference Role in Python\nDESCRIPTION: Complete implementation of an RFC reference role that creates hyperlinks to RFC documents. Includes input validation, URL construction, and node creation logic.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-roles.txt#2025-04-19_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\ndef rfc_reference_role(role, rawtext, text, lineno, inliner,\n                       options=None, content=None):\n    if \"#\" in text:\n        rfcnum, section = utils.unescape(text).split(\"#\", 1)\n    else:\n        rfcnum, section  = utils.unescape(text), None\n    try:\n        rfcnum = int(rfcnum)\n        if rfcnum < 1:\n            raise ValueError\n    except ValueError:\n        msg = inliner.reporter.error(\n            'RFC number must be a number greater than or equal to 1; '\n            '\"%s\" is invalid.' % text, line=lineno)\n        prb = inliner.problematic(rawtext, rawtext, msg)\n        return [prb], [msg]\n    # Base URL mainly used by inliner.rfc_reference, so this is correct:\n    ref = inliner.document.settings.rfc_base_url + inliner.rfc_url % rfcnum\n    if section is not None:\n        ref += \"#\"+section\n    options = normalize_role_options(options)\n    node = nodes.reference(rawtext, 'RFC ' + str(rfcnum), refuri=ref,\n                           **options)\n    return [node], []\n\nregister_canonical_role('rfc-reference', rfc_reference_role)\n```\n\n----------------------------------------\n\nTITLE: Scalene CLI Usage Command Examples\nDESCRIPTION: Examples demonstrating how to use Scalene in different environments including command-line and Jupyter notebook (both line mode and cell mode).\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/scalene/scalene-usage.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n% scalene [options] yourprogram.py\n\nor\n\n% python3 -m scalene [options] yourprogram.py\n\nin Jupyter, line mode:\n  %scrun [options] statement\n\nin Jupyter, cell mode:\n  %%scalene [options]\n   your code here\n```\n\n----------------------------------------\n\nTITLE: Helper Modules Structure\nDESCRIPTION: Collection of helper modules that handle statistics, visualization, and function replacement. Includes adaptive sampling, running statistics calculation, sparkline generation, and syntax highlighting functionality.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/scalene/README.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nadaptive.py\nprofile.py\nreplacement_*.py\nrunningstats.py\nsparkline.py\nsyntaxline.py\n```\n\n----------------------------------------\n\nTITLE: Core Scalene Modules Structure\nDESCRIPTION: Core modules that implement the main profiler functionality. Includes argument handling, GPU integration, Jupyter notebook support, output generation, signal handling, and statistics management.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/scalene/README.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nscalene_arguments.py\nscalene_gpu.py\nscalene_magics.py\nscalene_output.py\nscalene_profiler.py\nscalene_signals.py\nscalene_statistics.py\nscalene_version.py\n```\n\n----------------------------------------\n\nTITLE: Configuring LaTeX Preamble in Docutils\nDESCRIPTION: Example of configuring the LaTeX preamble in Docutils to use specific fonts for monospaced text, Times, and Helvetica. This is done through the latex-preamble setting in a configuration file.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_6\n\nLANGUAGE: latex\nCODE:\n```\nlatex-preamble: \\renewcommand{\\ttdefault}{txtt}\n                 \\usepackage{mathptmx}          % Times\n                 \\usepackage[scaled=.92]{helvet}  % Helvetica\n```\n\n----------------------------------------\n\nTITLE: Writing HTML from reStructuredText in Python\nDESCRIPTION: Demonstrates the final HTML output generated from the reStructuredText example. The rst2html.py tool is used to convert the input file to HTML, showing how the Writer component produces the final document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/hacking.txt#2025-04-19_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n$ rst2html.py --link-stylesheet test.txt\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"https://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"generator\" content=\"Docutils 0.3.10: https://docutils.sourceforge.io/\" />\n<title></title>\n<link rel=\"stylesheet\" href=\"../docutils/writers/html4css1/html4css1.css\" type=\"text/css\" />\n</head>\n<body>\n<div class=\"document\">\n<p>My <em>favorite</em> language is <a class=\"reference\" href=\"https://www.python.org/\">Python</a>.</p>\n</div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Literal Block Example in Python\nDESCRIPTION: Demonstrates a literal block with preserved indentation, spaces, and linebreaks using double-colon notation\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nif literal_block:\n    text = 'is left as-is'\n    spaces_and_linebreaks = 'are preserved'\n    markup_processing = None\n```\n\n----------------------------------------\n\nTITLE: Using URI as Reference Text in Hyperlinks\nDESCRIPTION: Shows how to create hyperlinks where the URI itself serves as the reference text by omitting explicit reference text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_44\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee `<a_named_relative_link>`_ or `<an_anonymous_relative_link>`__\nfor details.\n```\n\n----------------------------------------\n\nTITLE: Customizing Field Lists in LaTeX\nDESCRIPTION: Example of customizing the appearance of field lists in LaTeX output from Docutils. Shows how to use a description list customized with the enumitem package.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_13\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{enumitem}\n\\newenvironment{DUfieldlist}%\n  {\\description[font=,style=sameline,leftmargin=8em]}\n  {\\enddescription}\n}\n```\n\n----------------------------------------\n\nTITLE: Jupyter Notebook Installation\nDESCRIPTION: Commands for installing and loading Scalene in Jupyter notebooks\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_10\n\nLANGUAGE: console\nCODE:\n```\n!pip install scalene\n%load_ext scalene\n```\n\n----------------------------------------\n\nTITLE: Creating Named Hyperlink References in reStructuredText\nDESCRIPTION: Demonstrates how to create named hyperlink references using trailing underscores with reference text followed by URI definition elsewhere in the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_36\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee the Python_ home page for info.\n```\n\n----------------------------------------\n\nTITLE: Inserting Basic Image in reStructuredText\nDESCRIPTION: This snippet demonstrates how to insert a basic image in reStructuredText using the image directive. It specifies the path to the image file.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/quickstart.txt#2025-04-19_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. image:: images/biohazard.png\n```\n\n----------------------------------------\n\nTITLE: Returning System Messages with Content in Python Directives\nDESCRIPTION: This snippet illustrates how to return both document content and a system message from a directive's run() method. It creates nodes, appends an error message if needed, and returns the node list.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef run(self):\n    # Create node(s).\n    node = nodes.paragraph(...)\n    # Node list to return.\n    node_list = [node]\n    if error_condition:\n         # Create system message.\n         error = self.reporter.error(\n             'Error in \"%s\" directive: Your error message.' % self.name,\n             nodes.literal_block(block_text, block_text), line=lineno)\n         node_list.append(error)\n    return node_list\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata with the reStructuredText Meta Directive\nDESCRIPTION: This snippet demonstrates how to define metadata using the 'meta' directive in reStructuredText. It specifies metadata fields such as descriptions and keywords, which are translated into HTML meta tags. The directive supports additional META attributes like 'lang' and 'http-equiv' by specifying field arguments in a specific syntax. The outputs are HTML meta elements with the attributes and content defined in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_31\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. meta::\n   :description: The reStructuredText plaintext markup language\n   :keywords: plaintext, markup language\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<meta name=\"description\"\n    content=\"The reStructuredText plaintext markup language\">\n<meta name=\"keywords\" content=\"plaintext, markup language\">\n```\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. meta::\n   :description lang=en: An amusing story\n   :description lang=fr: Une histoire amusante\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<meta name=\"description\" lang=\"en\" content=\"An amusing story\">\n<meta name=\"description\" lang=\"fr\" content=\"Une histoire amusante\">\n```\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. meta::\n   :http-equiv=Content-Type: text/html; charset=ISO-8859-1\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<meta http-equiv=\"Content-Type\"\n     content=\"text/html; charset=ISO-8859-1\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Secure Docutils Settings via Python\nDESCRIPTION: Demonstrates how to programmatically configure Docutils with secure default settings to prevent file insertion and raw HTML. Shows options for both basic security and configuration file disabling.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/security.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndefaults = {'file_insertion_enabled': False,\n                'raw_enabled': False}\noutput = docutils.core.publish_string(\n    ..., settings_overrides=defaults)\n```\n\nLANGUAGE: python\nCODE:\n```\ndefaults = {'file_insertion_enabled': False,\n                'raw_enabled': False,\n                '_disable_config': True}\noutput = docutils.core.publish_string(\n    ..., settings_overrides=defaults)\n```\n\n----------------------------------------\n\nTITLE: Running Scalene with PyTest in Python\nDESCRIPTION: Command to run Scalene profiler with PyTest for Python testing.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m scalene --- -m pytest your_test.py\n```\n\n----------------------------------------\n\nTITLE: Parsing Bullet List to Pseudo-XML\nDESCRIPTION: Shows the pseudo-XML structure resulting from parsing a reStructuredText bullet list, illustrating the bullet_list and list_item elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<bullet_list bullet=\"-\">\n    <list_item>\n        <paragraph>\n            Item 1, paragraph 1.\n        <paragraph>\n            Item 1, paragraph 2.\n    <list_item>\n        <paragraph>\n            Item 2.\n```\n\n----------------------------------------\n\nTITLE: Parsing reStructuredText Example in Python\nDESCRIPTION: Demonstrates the node tree representation of a simple reStructuredText document after parsing. The example uses the quicktest.py tool to display the parsed structure.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/hacking.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n$ quicktest.py test.txt\n<document source=\"test.txt\">\n    <paragraph>\n        My\n        <emphasis>\n            favorite\n         language is\n        <reference name=\"Python\" refname=\"python\">\n            Python\n        .\n    <target ids=\"python\" names=\"python\" refuri=\"https://www.python.org/\">\n```\n\n----------------------------------------\n\nTITLE: Creating a Grid Table in reStructuredText\nDESCRIPTION: This code snippet demonstrates how to create a grid table in reStructuredText using characters like '+', '-', '|', and '=' to define the table structure. It includes header rows, body rows, and column spans. It highlights potential issues with vertical bars in cell text and provides solutions to avoid unintended effects.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_11\n\nLANGUAGE: rst\nCODE:\n```\n\"+------------------------+------------+----------+----------+\\n| Header row, column 1   | Header 2   | Header 3 | Header 4 |\\n| (header rows optional) |            |          |          |\\n+========================+============+==========+==========+\\n| body row 1, column 1   | column 2   | column 3 | column 4 |\\n+------------------------+------------+----------+----------+\\n| body row 2             | Cells may span columns.          |\\n+------------------------+------------+---------------------+\\n| body row 3             | Cells may  | - Table cells       |\\n+------------------------+ span rows. | - contain           |\\n| body row 4             |            | - body elements.    |\\n+------------------------+------------+---------------------+\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Topic Directive in reStructuredText\nDESCRIPTION: This example shows how to use the topic directive in reStructuredText. It creates a self-contained section with a title and body content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_6\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. topic:: Topic Title\n\n    Subsequent indented lines comprise\n    the body of the topic, and are\n    interpreted as body elements.\n```\n\n----------------------------------------\n\nTITLE: Transforming reStructuredText Example in Python\nDESCRIPTION: Shows the node tree after applying transforms, particularly the ExternalTargets transform which resolves references. The example uses the rst2pseudoxml.py tool to display the transformed structure.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/hacking.txt#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n$ rst2pseudoxml.py test.txt\n<document source=\"test.txt\">\n    <paragraph>\n        My\n        <emphasis>\n            favorite\n         language is\n        <reference name=\"Python\" refuri=\"https://www.python.org/\">\n            Python\n        .\n    <target ids=\"python\" names=\"python\" refuri=\"https://www.python.org/\">\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Custom Role Example\nDESCRIPTION: Demonstrates the use of a custom interpreted text role in reStructuredText. The `.. role:: custom` directive defines a custom role, which can then be used to create inline elements with the specified class.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_38\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\".. role:: custom\\n\\nAn example of using :custom:`interpreted text`\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Multi-line Docstring for a Python Function\nDESCRIPTION: This example shows how to write a multi-line docstring for a function with keyword arguments. It includes a summary line, blank line, and detailed description of the arguments.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0257.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef complex(real=0.0, imag=0.0):\n    \"\"\"Form a complex number.\n\n    Keyword arguments:\n    real -- the real part (default 0.0)\n    imag -- the imaginary part (default 0.0)\n\n    \"\"\"\n    if imag == 0.0 and real == 0.0: return complex_zero\n    ...\n```\n\n----------------------------------------\n\nTITLE: Displaying Scalene Help Options\nDESCRIPTION: Command to show all available options for Scalene profiler.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/docs/scalene-demo.ipynb#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# A full list of options\n%scrun --help\n```\n\n----------------------------------------\n\nTITLE: Defining Strip Classes in Docutils Configuration\nDESCRIPTION: Example of how to specify strip_classes, strip_elements_with_classes, stylesheet, and stylesheet_path settings in a Docutils configuration file. These settings use commas as delimiters and strip whitespace around values.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nstrip-classes: ham,eggs,\nstrip-elements-with-classes: sugar, salt, flour\nstylesheet: html4css1.css,\n            math.css,\n            style with spaces.css\nstylesheet-path: ../styles/my.css, ../styles/funny.css\n```\n\n----------------------------------------\n\nTITLE: Defining SettingsSpec Attributes in Python\nDESCRIPTION: Example of how to define the six key attributes of the SettingsSpec base class, including settings_spec, settings_defaults, settings_default_overrides, relative_path_settings, config_section, and config_section_dependencies.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/api/runtime-settings.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass MyComponent(SettingsSpec):\n    settings_spec = (\n        \"Option Group Title\",\n        \"Description\",\n        (\n            (\"Help text\", [\"--option-string\"], {\"dest\": \"option_name\", \"validator\": validate_function}),\n            # More option tuples...\n        )\n    )\n    settings_defaults = {\"default_setting\": \"value\"}\n    settings_default_overrides = {\"override_setting\": \"new_value\"}\n    relative_path_settings = [\"path_setting1\", \"path_setting2\"]\n    config_section = \"my_component\"\n    config_section_dependencies = [\"dependent_section1\", \"dependent_section2\"]\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Line Block Example\nDESCRIPTION: Illustrates the use of line blocks in reStructuredText. Line blocks preserve line breaks and leading whitespace, making them suitable for verse and addresses.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_40\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\"Take it away, Eric the Orchestra Leader!\\n\\n| A one, two, a one two three four\\n|\\n| Half a bee, philosophically,\\n|     must, *ipso facto*, half not be.\\n| But half the bee has got to be,\\n|     *vis a vis* its entity.  D'you see?\\n|\\n| But can a bee be said to be\\n|     or not to be an entire bee,\\n|         when half the bee is not a bee,\\n|             due to some ancient injury?\\n|\\n| Singing...\"\n```\n\n----------------------------------------\n\nTITLE: Environment Setup for Development\nDESCRIPTION: Shell script to set up Python path and tools path for Docutils development\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/repository.txt#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# source this file\nexport PYTHONPATH=$PWD:$PWD\nexport PATH=$PWD/tools:$PATH\n```\n\n----------------------------------------\n\nTITLE: Substitution Definitions Usage\nDESCRIPTION: This snippet illustrates the use of substitution definitions within reStructuredText documents. It demonstrates how to reference a defined symbol (copyright) from a substitution definitions file.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. include:: <isonum.txt>\n\nCopyright |copy| 2003 by John Q. Public, all rights reserved.\n```\n\n----------------------------------------\n\nTITLE: Registering Application-Specific Directives in Docutils\nDESCRIPTION: This snippet shows how to register a new directive using the Docutils library. The 'register_directive' function from 'docutils.parsers.rst' is utilized to map a directive name to its corresponding class. This is necessary for enabling application-specific directives within the Docutils framework.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom docutils.parsers.rst import directives\ndirectives.register_directive(directive_name, directive_class)\n```\n\n----------------------------------------\n\nTITLE: Raw-Wrapped Role Definition in reStructuredText\nDESCRIPTION: This example defines a custom role `red` that wraps its content with raw text for formatting. It uses the `raw-formatting` base role and specifies prefixes and suffixes for HTML and LaTeX writers. This allows applying formatting to text through a custom role, with writer-specific variations.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_15\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. role:: red(raw-formatting)\n   :prefix:\n       :html: <font color=\"red\">\n       :latex: {\\color{red}\n   :suffix:\n       :html: </font>\n       :latex: }\n```\n\n----------------------------------------\n\nTITLE: Implementing the Image Directive in reStructuredText\nDESCRIPTION: The 'Image' class defines a directive to embed images in reStructuredText documents. It needs one argument specifying the image path and can include options like 'alt', 'height', 'width', 'scale', and 'align'. These options affect the attributes of the created 'nodes.image' element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom docutils import nodes\nfrom docutils.parsers.rst import directives\nfrom docutils.parsers.rst import Directive\n\ndef align(argument):\n    \"\"\"Conversion function for the \"align\" option.\"\"\"\n    return directives.choice(argument, ('left', 'center', 'right'))\n\nclass Image(Directive):\n\n    required_arguments = 1\n    optional_arguments = 0\n    final_argument_whitespace = True\n    option_spec = {'alt': directives.unchanged,\n                   'height': directives.nonnegative_int,\n                   'width': directives.nonnegative_int,\n                   'scale': directives.nonnegative_int,\n                   'align': align,\n                   }\n    has_content = False\n\n    def run(self):\n        reference = directives.uri(self.arguments[0])\n        self.options['uri'] = reference\n        image_node = nodes.image(rawsource=self.block_text,\n                                 **self.options)\n        return [image_node]\n```\n\n----------------------------------------\n\nTITLE: Definition List Example in reStructuredText\nDESCRIPTION: This snippet provides an example of a definition list in reStructuredText, including a simple term-definition pair and a term with a classifier. The classifier is indicated by a colon within the term.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_17\n\nLANGUAGE: restructuredtext\nCODE:\n```\nTerm\n  Definition.\n\nTerm : classifier\n    The ' : ' indicates a classifier in\n    definition list item terms only.\n```\n\n----------------------------------------\n\nTITLE: Custom Substitution Definitions with Unicode Directive\nDESCRIPTION: This snippet explains how to define custom substitution definitions using the 'unicode' directive in reStructuredText, which allows for special characters and symbols to be included.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_3\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. |copy|   unicode:: U+000A9 .. COPYRIGHT SIGN\n.. |BogusMegaCorp (TM)| unicode:: BogusMegaCorp U+2122\n   .. with trademark sign\n\nCopyright |copy| 2003, |BogusMegaCorp (TM)|.\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Directive Class in Python\nDESCRIPTION: This snippet shows how to create a custom directive class by inheriting from docutils.parsers.rst.Directive. It demonstrates the basic structure for implementing a new reStructuredText directive.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom docutils.parsers import rst\n\nclass MyDirective(rst.Directive):\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Using a Manifest Directive in reStructuredText\nDESCRIPTION: An alternative proposal for structuring large documents using a 'manifest' directive. It associates local reference names with external files and demonstrates how to reference them in the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. manifest::\n   intro: Introduction.txt\n   objects: Objects.txt\n   data: Data.txt\n   control: Control.txt\n\n.. include:: manifest.txt\n\nAs I said earlier in chapter :chapter:`objects`, the\nreference count gets increased every time a binding is made.\n```\n\n----------------------------------------\n\nTITLE: Python Doctest Block Example in reStructuredText\nDESCRIPTION: Demonstration of Python doctest blocks in reStructuredText, showing how Python interactive sessions can be represented. The example shows simple print statements with their expected outputs.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/demo.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n>>> print 'Python-specific usage examples; begun with \">>>\"'\nPython-specific usage examples; begun with \">>>\"\n>>> print '(cut and pasted from interactive Python sessions)'\n(cut and pasted from interactive Python sessions)\n```\n\n----------------------------------------\n\nTITLE: Running rst2odt.py with a custom footer\nDESCRIPTION: This example shows how to run the ``rst2odt.py`` script from the command line, including a custom footer. The `--custom-odt-footer` option is used to specify the footer content, which in this case includes the page number and total page count. The script takes an input reStructuredText file and generates an ODT output file.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_13\n\nLANGUAGE: Shell\nCODE:\n```\n$ rst2odt.py --custom-odt-footer=\"Page %p% of %P%\" f1.txt f1.odt\n```\n\n----------------------------------------\n\nTITLE: Citation Syntax in reStructuredText\nDESCRIPTION: The snippet shows the usage of citations, which are similar to footnotes but use non-numeric labels. It provides an example of how to define citation labels and mark text with them.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_21\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. [CIT2002] This is the citation. It\\'s just like a footnote, except the label is textual.\n```\n\n----------------------------------------\n\nTITLE: Cloning Docutils with Git\nDESCRIPTION: Command to clone the Docutils Git mirror repository\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/repository.txt#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git://repo.or.cz/docutils.git\n```\n\n----------------------------------------\n\nTITLE: Creating a Table of Contents in reStructuredText\nDESCRIPTION: This snippet shows how to insert a table of contents in a reStructuredText document using the 'contents' directive.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/index.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. contents::\n```\n\n----------------------------------------\n\nTITLE: Creating a List Table Directive\nDESCRIPTION: This snippet defines the 'list-table' directive, which facilitates the creation of tables from a uniform two-level bullet list. It includes an example usage and lists various options for customizing table appearance such as widths and header rows.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"Example::\\n\\n    .. list-table:: Frozen Delights!\\n       :widths: 15 10 30\\n       :header-rows: 1\\n\\n       * - Treat\\n         - Quantity\\n         - Description\\n       * - Albatross\\n         - 2.99\\n         - On a stick!\\n       * - Crunchy Frog\\n         - 1.49\\n         - If we took the bones out, it wouldn't be\\n           crunchy, now would it?\\n       * - Gannet Ripple\\n         - 1.99\\n         - On a stick!\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"The following options are recognized:\\n\\n``align`` : \"left\", \"center\", or \"right\"\\n    The horizontal alignment of the table.\\n    (New in Docutils 0.13)\\n\\n``header-rows`` : integer\\n    The number of rows of list data to use in the table header.\\n    Defaults to 0.\\n\\n``stub-columns`` : integer\\n    The number of table columns to use as stubs (row titles, on the\\n    left).  Defaults to 0.\\n\\n``width`` : `length`_ or `percentage`_\\n    Sets the width of the table to the specified length or percentage\\n    of the line width.  If omitted, the renderer determines the width\\n    of the table based on its contents or the column \"widths\".\\n\\n``widths`` : integer [integer...] or \"auto\"\\n    A list of relative column widths.\\n    The default is equal-width columns (100%/#columns).\\n    \"auto\" delegates the determination of column widths to the backend\\n    (LaTeX, the HTML browser, ...).\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Transform Class Definition Pattern\nDESCRIPTION: Shows the basic pattern for defining transforms in Docutils by inheriting from docutils.transforms.Transform. Transforms modify document trees in-place.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/api/transforms.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SomeTransform(docutils.transforms.Transform):\n    default_priority = 123\n```\n\n----------------------------------------\n\nTITLE: Defining Substitution Definitions\nDESCRIPTION: This snippet explains how to define substitution definitions in reStructuredText, which allow for reusable text throughout the document. It provides examples and rules to follow for creating substitutions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_26\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe |biohazard| symbol must be used on containers used to\ndispose of medical waste.\n\n.. |biohazard| image:: biohazard.png\n```\n\n----------------------------------------\n\nTITLE: Implementing a Parsed Literal Block in reStructuredText\nDESCRIPTION: This snippet demonstrates the use of the parsed-literal directive in reStructuredText. It allows inline markup within a literal block, useful for adding hyperlinks to code examples.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_9\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. parsed-literal::\n\n   ( (title_, subtitle_?)?,\n     decoration_?,\n     (docinfo_, transition_?)?,\n     `%structure.model;`_ )\n```\n\n----------------------------------------\n\nTITLE: Defining field_list Element in RestructuredText\nDESCRIPTION: The `field_list` element is used to present two-column table-like structures that contain label and data pairs. It is often utilized for processing bibliographic fields and directive options.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_27\n\nLANGUAGE: reStructuredText\nCODE:\n```\n``field_list``\n==============\n\nThe ``field_list`` element contains two-column table-like structures\nresembling database records (label & data pairs).  Field lists are\noften meant for further processing.  In reStructuredText_, field lists\nare used to represent bibliographic fields (contents of the docinfo_\nelement) and `directive options`_.\n\nDetails\n-------\n\n:Category:\n    `Compound Body Elements`_\n\n:Analogues:\n    ``field_list`` has no direct analogues in common DTDs.  It can be\n    emulated with primitives such as tables.\n\n:Processing:\n    A ``field_list`` is typically rendered as a two-column list, where\nthe first column contains \"labels\" (usually with a colon suffix).\nHowever, field lists are often used for extension syntax or\nspecial processing.  Such structures do not survive as field lists\nto be rendered.\n\n:Parents:\n    All elements employing the `%body.elements;`_ or\n    `%structure.model;`_ parameter entities in their content models\n    may contain ``field_list``.\n\n:Children:\n    ``field_list`` elements contain one or more field_ elements. ::\n\n        (field+)\n\n:Attributes:\n    The ``field_list`` element contains only the `common attributes`_.\n\n:Parameter Entities:\n    The `%body.elements;`_ parameter entity directly includes\n    ``field_list``.  The `%structure.model;`_ parameter entity\n    indirectly includes ``field_list``.\n\nExamples\n--------\n\nreStructuredText_ source::\n\n    :Author: Me\n    :Version: 1\n    :Date: 2001-08-11\n    :Parameter i: integer\n\nPseudo-XML_ fragment from simple parsing::\n\n    <field_list>\n        <field>\n            <field_name>\n                Author\n            <field_body>\n                <paragraph>\n                    Me\n        <field>\n            <field_name>\n                Version\n            <field_body>\n                <paragraph>\n                    1\n        <field>\n            <field_name>\n                Date\n            <field_body>\n                <paragraph>\n                    2001-08-11\n        <field>\n            <field_name>\n                Parameter i\n            <field_body>\n                <paragraph>\n                    integer\n\n.. _directive options: rst/restructuredtext.html#directive-options\n```\n\n----------------------------------------\n\nTITLE: Section Title Formatting Examples\nDESCRIPTION: Multiple examples of valid section title adornment styles using different punctuation characters and positioning\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\n===============\n Section Title\n===============\n\nSection Title\n=============\n\nSection Title\n`````````````\n\nSection Title\n~~~~~~~~~~~~~\n```\n\n----------------------------------------\n\nTITLE: CSV Table Directive Example\nDESCRIPTION: Demonstrates creating a table from CSV data with headers, widths, and custom formatting\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_14\n\nLANGUAGE: rst\nCODE:\n```\n.. csv-table:: Frozen Delights!\n   :header: \"Treat\", \"Quantity\", \"Description\"\n   :widths: 15, 10, 30\n\n   \"Albatross\", 2.99, \"On a stick!\"\n   \"Crunchy Frog\", 1.49, \"If we took the bones out, it wouldn't be\n   crunchy, now would it?\"\n   \"Gannet Ripple\", 1.99, \"On a stick!\"\n```\n\n----------------------------------------\n\nTITLE: Defining Base Admonition Directive in reStructuredText\nDESCRIPTION: The 'BaseAdmonition' class is a base class for creating custom admonition directives in Docutils. It defines the necessary structure, options, and content parsing methods used in subclass directives like 'note'. The 'run()' method processes directive content and raises an error if the content is missing.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom docutils import nodes\nfrom docutils.parsers.rst import Directive\n\nclass BaseAdmonition(Directive):\n\n    required_arguments = 0\n    optional_arguments = 0\n    final_argument_whitespace = True\n    option_spec = {}\n    has_content = True\n\n    node_class = None\n    \"\"\"Subclasses must set this to the appropriate admonition node class.\"\"\"\n\n    def run(self):\n        self.assert_has_content()\n        text = '\\n'.join(self.content)\n        admonition_node = self.node_class(rawsource=text)\n        self.state.nested_parse(self.content, self.content_offset,\n                                admonition_node)\n        return [admonition_node]\n```\n\n----------------------------------------\n\nTITLE: Using the Code Directive with Python in reStructuredText\nDESCRIPTION: This example shows how to use the code directive in reStructuredText to include syntax-highlighted Python code. It demonstrates a simple Python function definition.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_10\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. code:: python\n\n  def my_function():\n      \"just a test\"\n      print 8/2\n```\n\n----------------------------------------\n\nTITLE: Text Replacement Directive Proposal for reStructuredText\nDESCRIPTION: Proposes a directive for pattern-based text replacement with potential support for Unicode codes, regular expressions, and configuration flags.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_58\n\nLANGUAGE: rst\nCODE:\n```\n.. text-replace:: \"pattern\" \"replacement\"\n```\n\n----------------------------------------\n\nTITLE: Building Python Distribution Packages\nDESCRIPTION: Commands to generate source distribution and universal wheel packages for Docutils\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/release.txt#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npython3 setup.py sdist\npython3 setup.py bdist_wheel --universal\n```\n\n----------------------------------------\n\nTITLE: Defining footnote Element in RestructuredText\nDESCRIPTION: The `footnote` element provides a labeled note for additional context and is represented by the corresponding `footnote_reference` in the text. It may contain labels and various body elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_30\n\nLANGUAGE: reStructuredText\nCODE:\n```\n``footnote``\n============\n\nThe ``footnote`` element is used for labeled notes_ that provide\nadditional context to a passage of text (*footnotes* or *endnotes*).\nThe corresponding footnote mark in running text is set by the\n`footnote_reference`_ element.\n\n.. _notes: https://en.wikipedia.org/wiki/Note_(typography)\n\nDetails\n-------\n\n:Category:\n    `Compound Body Elements`_\n\n:Analogues:\n    ``footnote`` has no direct analogues in DocBook or HTML.\n\n    The `DocBook \"footnote\"`_ element combines features of ``footnote``\nand footnote_reference_.\n\n    The `ARIA role \"note\"`__ may be used to mark a (conforming__)\n    `HTML emulation`__ as \"a section whose content is parenthetic or\n    ancillary to the main content of the resource\".\n\n    Depending on the note's position, the `epub:type`__ *footnote* or\n    *endnote* and the DPub ARIA role \"doc-footnote\"__ or\n    \"doc-endnote\"__ may be applicable.\n\n    .. _DocBook \"footnote\": https://tdg.docbook.org/tdg/5.1/footnote.html\n    __ https://www.w3.org/TR/wai-aria-1.1/#note\n    __ https://www.w3.org/TR/html-aria/#docconformance\n    __ https://www.w3.org/TR/html51/\n       common-idioms-without-dedicated-elements.html#footnotes\n    __ https://idpf.github.io/epub-vocabs/structure/#notes\n    __ https://www.w3.org/TR/dpub-aria-1.0/#doc-footnote\n    __ https://www.w3.org/TR/dpub-aria-1.0/#doc-endnote\n\n:Processing:\n    A ``footnote`` element should be set off from the rest of the\ndocument, e.g. with a border or using a smaller font size.\n\n    Footnotes may \"float\" to the bottom or margin of a page or a\ndedicated section.\n\n:Parents:\n    All elements employing the `%body.elements;`_ or\n    `%structure.model;`_ parameter entities in their content models\n    may contain ``footnote``.\n\n:Children:\n    ``footnote`` elements begin with an optional label_\nand contain `body elements`_.\n\n    .. parsed-literal::\n\n        (label?, (`%body.elements;`_)+)\n\n:Attributes:\n    The ``footnote`` element contains the `common attributes`_\n    plus auto_ and backrefs_.\n\n:Parameter Entities:\n    The `%body.elements;`_ parameter entity directly includes\n    ``footnote``.  The `%structure.model;`_ parameter entity indirectly\n    includes ``footnote``.\n\nExamples\n--------\n\nreStructuredText_ uses `explicit markup blocks`_ for footnotes::\n\n    .. [1] This is a footnote.\n\nPseudo-XML_ fragment from simple parsing::\n\n    <footnote ids=\"id1\" names=\"1\">\n        <label>\n            1\n        <paragraph>\n            This is a footnote.\n```\n\n----------------------------------------\n\nTITLE: Inserting Raw LaTeX in Docutils\nDESCRIPTION: Examples of inserting raw LaTeX code in Docutils documents using the raw directive. Shows how to insert a math formula and redefine a Docutils-specific LaTeX macro.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_8\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. raw:: latex\n\n   \\[x^3 + 3x^2a + 3xa^2 + a^3,\\]\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. raw:: latex\n\n  \\renewcommand*{\\DUtransition}{\\pagebreak[4]}\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Role Function in Python\nDESCRIPTION: Defines the basic structure of a role function that processes interpreted text roles in reStructuredText. The function accepts name, rawtext, text, lineno, inliner, and optional parameters, returning nodes and system messages.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-roles.txt#2025-04-19_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\ndef role_fn(name, rawtext, text, lineno, inliner,\n                options=None, content=None):\n    code...\n\n# Optional function attributes for customization:\nrole_fn.options = ...\nrole_fn.content = ...\n```\n\n----------------------------------------\n\nTITLE: Implementing Option Specification for Directives in Python\nDESCRIPTION: This code snippet demonstrates how to define an option specification for a directive. It shows an example of specifying two options, 'name' and 'value', with their respective conversion functions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-directives.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\noption_spec = {'name': unchanged, 'value': int}\n```\n\n----------------------------------------\n\nTITLE: Multi-Entry Index Directives\nDESCRIPTION: Illustrates combining multiple index entries in a single directive using Docutils syntax. The main dependency is understanding indexing directives within reStructuredText frameworks. Inputs are directive lines with semicolon-separated entries. The output contains separate index entries for each listed term.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_45\n\nLANGUAGE: plaintext\nCODE:\n```\n.. index:: markup; syntax\n```\n\n----------------------------------------\n\nTITLE: Generating HTML Documentation using buildhtml.py\nDESCRIPTION: Commands to generate HTML documentation for Docutils by copying the CSS file and running the buildhtml.py script with proper stylesheet path configuration.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/distributing.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Place html4css1.css in base directory.\ncp ../docutils/writers/html4css1/html4css1.css ..\n./buildhtml.py --stylesheet-path=../html4css1.css ..\n```\n\n----------------------------------------\n\nTITLE: Defining footnote_reference Element in RestructuredText\nDESCRIPTION: The `footnote_reference` element is an inline representation of a cross-reference to a footnote, generating a mark within the text that matches the footnote label.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_31\n\nLANGUAGE: reStructuredText\nCODE:\n```\n``footnote_reference``\n======================\n\nThe ``footnote_reference`` element is an inline element representing a\ncross reference to a footnote_ (a footnote mark).\n\nDetails\n-------\n\n:Category:\n    `Inline Elements`_\n\n:Analogues:\n    The ``footnote_reference`` element resembles the `DocBook\n    \"footnoteref\"`_ element or the LaTeX ``\\footnotemark`` command.\n\n    There is no equivalent in HTML. The ``<a>`` element can be used\nto provide a link to the corresponding footnote.\n\n    .. _DocBook \"footnoteref\": https://tdg.docbook.org/tdg/5.1/footnoteref.html\n\n:Processing:\n    A ``footnote_reference`` should generate a mark matching the label_\nof the referenced footnote. The mark is typically formatted as\n    superscript or enclosed in square brackets.\n\n:Parents:\n    All elements employing the `%inline.elements;`_ parameter entities in\ntheir content models may contain ``footnote_reference``.\n\n:Children:\n    ``footnote_reference`` elements may contain text data. ::\n\n        (#PCDATA)\n\n:Attributes:\n    The ``footnote_reference`` element contains the `common attributes`_\n    plus auto_, refid_, and refname_.\n\nExamples\n--------\n\nreStructuredText source fragment::\n\n    [#]_ is an auto-numbered footnote reference.\n\n    .. [#] Auto-numbered footnote 1.\n\nPseudo-XML_ fragment from simple parsing::\n\n    <paragraph>\n        <footnote_reference auto=\"1\" ids=\"id1\">\n         is an auto-numbered footnote reference.\n    <footnote auto=\"1\" ids=\"id3\">\n        <paragraph>\n            Auto-numbered footnote 1.\n```\n\n----------------------------------------\n\nTITLE: Configuring Listings Environment for Literal Blocks\nDESCRIPTION: This code snippet configures the listings environment for literal blocks, enabling syntax highlighting for Python code. It sets various options for the listings environment, including language, style, and formatting.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_30\n\nLANGUAGE: latex\nCODE:\n```\n\"\\renewcommand{\\ttdefault}{txtt}\n\\lstset{language=Python, morekeywords=[1]{yield}}\n\\lstloadlanguages{Python}\n\\lstset{\n  basicstyle=\\ttfamily,\n  keywordstyle=\\bfseries,\n  commentstyle=\\rmfamily\\itshape,\n  stringstyle=\\slshape,\n}\n\\lstset{showstringspaces=false}\n\\lstset{columns=fullflexible,\n     basewidth={0.5em,0.4em}}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Fontset for Mac-Roman Charset in Emacs\nDESCRIPTION: This snippet creates a fontset specifically for displaying characters in the Mac-Roman charset, ensuring that all required character ranges are covered. It includes a configuration for various character sets while emphasizing the need for 'mule-unicode-0100-24ff' for certain special characters.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_16\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n(create-fontset-from-fontset-spec\n \"-apple-monaco-medium-r-normal--10-*-*-*-*-*-fontset-monaco,\n  ascii:-apple-monaco-medium-r-normal--10-100-75-75-m-100-mac-roman,\n  latin-iso8859-1:-apple-monaco-medium-r-normal--10-100-75-75-m-100-mac-roman,\n  mule-unicode-0100-24ff:-apple-monaco-medium-r-normal--10-100-75-75-m-100-mac-roman\")\n```\n\n----------------------------------------\n\nTITLE: Defining External Hyperlink Targets\nDESCRIPTION: This snippet illustrates how to create external hyperlink targets in reStructuredText. It includes multiple formats that are valid, along with explanations on escaping whitespace and underscores.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_23\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _one-liner: https://docutils.sourceforge.io/rst.html\n\n.. _starts-on-this-line: https://\ndocutils.sourceforge.net/rst.html\n\n.. _entirely-below:\n   https://docutils.\n   sourceforge.net/rst.html\n\n.. _reference: ../local\\ path\\ with\\ spaces.html\n\nThis link_ refers to a file called ``underscore_``.\n\n.. _link: underscore\\_\n\n.. _one: two_\n.. _two: three_\n.. _three:\n\n.. _`FAQTS: Computers: Programming: Languages: Python`:\n   http://python.faqts.com/\n\n.. _Chapter One\\: \"Tadpole Days\":\n\nIt's not easy being green...\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Important Example\nDESCRIPTION: Shows how to define an important admonition using reStructuredText. The `.. Important::` directive creates an important element, typically rendered as a distinct notice with the title \"Important\".\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_36\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\".. Important::\\n\\n   * Wash behind your ears.\\n   * Clean up your room.\\n   * Back up your data.\\n   * Call your mother.\"\n```\n\n----------------------------------------\n\nTITLE: Docutils Markdown to Pseudo-XML Conversion Command\nDESCRIPTION: Example command showing how to convert a Markdown file to Pseudo-XML using the Docutils generic front-end.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m docutils --parser=markdown --writer=pseudoxml\\\n  test.md test.txt\n```\n\n----------------------------------------\n\nTITLE: LaTeX Syntax Highlight for Code Blocks with Listings\nDESCRIPTION: This code snippet enables LaTeX syntax highlighting for code blocks using the listings package. It loads the [LaTeX]TeX language and defines a command to set the language for specific code blocks.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_31\n\nLANGUAGE: latex\nCODE:\n```\n\"\\lstloadlanguages{[LaTeX]TeX} %  comma separated list of languages\n\\newcommand{\\DUCLASSlatex}{\\lstset{language=[LaTeX]TeX}}\"\n```\n\n----------------------------------------\n\nTITLE: Examples of Absolute URI Hyperlinks\nDESCRIPTION: Demonstrates absolute URIs with different protocols that are automatically recognized as standalone hyperlinks in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_51\n\nLANGUAGE: restructuredtext\nCODE:\n```\nhttps://www.python.org\n\nftp://ftp.python.org/pub/python\n```\n\n----------------------------------------\n\nTITLE: Inserting Image with Additional Attributes in reStructuredText\nDESCRIPTION: This snippet shows how to insert an image with additional attributes such as height, width, scale, and alternate text using the image directive in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/quickstart.txt#2025-04-19_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. image:: images/biohazard.png\n   :height: 100\n   :width: 200\n   :scale: 50\n   :alt: alternate text\n```\n\n----------------------------------------\n\nTITLE: Creating Publisher Instance in publish_cmdline()\nDESCRIPTION: Creates a Publisher instance and calls the publish method with various parameters including settings and overrides.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/runtime-settings-processing.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\npublisher = core.Publisher(…, settings)\n\npublisher.publish(argv, …, settings_spec,\n                 settings_overrides, config_section, …)\n```\n\n----------------------------------------\n\nTITLE: Defining List Items in reStructuredText\nDESCRIPTION: This snippet illustrates the structure and attributes of the 'list_item' element, which parallels HTML 'li' and DocBook 'listitem'. It describes the processing of child elements and contains necessary references to associated items.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_42\n\nLANGUAGE: reStructuredText\nCODE:\n```\n:Analogues:\n    ``list_item`` is analogous to the HTML \"li\" element and to the\n    DocBook \"listitem\" element.\n\n:Processing:\n    See bullet_list_ or enumerated_list_.\n\n:Parents:\n    The bullet_list_ and enumerated_list_ elements contain\n    ``list_item``.\n\n:Children:\n    ``list_item`` elements may contain `body elements`_.\n\n    .. parsed-literal::\n\n        (`%body.elements;`_)*\n\n:Attributes:\n    The ``list_item`` element contains only the `common attributes`_.\n```\n\n----------------------------------------\n\nTITLE: Debugging with rst2pseudoxml.py\nDESCRIPTION: Debugging tool that produces a compact pseudo-XML representation of a reStructuredText document for analyzing parsing and transformation pipelines\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nrst2pseudoxml.py input.rst\n```\n\n----------------------------------------\n\nTITLE: Including Images in LaTeX\nDESCRIPTION: This snippet explains how images can be included in a LaTeX document using the graphicx package, detailing the formats supported based on the compiler being used.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_51\n\nLANGUAGE: LaTeX\nCODE:\n```\nIf PDF-image inclusion in PDF files fails, specifying\n``--graphicx-option=pdftex`` might help.\n```\n\n----------------------------------------\n\nTITLE: Executing Docutils Publisher for HTML Generation\nDESCRIPTION: This line calls the publish_cmdline function to run the Docutils publisher. It specifies the writer to be used (HTML) and passes the previously defined description. This function handles command-line argument parsing and execution of the document processing.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/cmdline-tool.txt#2025-04-19_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\npublish_cmdline(writer_name='html', description=description)\n```\n\n----------------------------------------\n\nTITLE: Setting Up OptionParser in Publisher\nDESCRIPTION: Creates an OptionParser instance with components and defaults, used for processing command-line options and configuration.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/runtime-settings-processing.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\noptpar = docutils.frontend.OptionParser(components, defaults)\n```\n\n----------------------------------------\n\nTITLE: Converting reStructuredText to XeLaTeX with rst2xetex.py\nDESCRIPTION: Command-line tool to convert a reStructuredText file into LaTeX output compatible with Unicode-aware TeX engines like XeTeX and LuaTeX\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nrst2xetex.py test.txt test.tex\n```\n\n----------------------------------------\n\nTITLE: Setting Up Interpreter Path in Python Script\nDESCRIPTION: This line specifies the interpreter to be used for executing the script on Unix-like systems. It uses the env command to locate the Python interpreter in the system's PATH.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/cmdline-tool.txt#2025-04-19_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n#!/usr/bin/env python\n```\n\n----------------------------------------\n\nTITLE: Setting Font Encoding in LaTeX\nDESCRIPTION: This code snippet demonstrates how to specify font encoding in LaTeX. It sets the font encoding to LGR,T1 and uses the lmodern stylesheet.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_18\n\nLANGUAGE: latex\nCODE:\n```\n\"--font-encoding=LGR,T1 --stylesheet=lmodern\"\n```\n\n----------------------------------------\n\nTITLE: Using Substitution for Images in Text\nDESCRIPTION: This snippet demonstrates how to use substitution references to embed images inline, allowing for enhanced visual content integration in the documentation. It specifies height and width for images.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_29\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |H| image:: /images/heart.png\n   :height: 11\n   :width: 11\n.. |S| image:: /images/spade.png\n   :height: 11\n   :width: 11\n```\n\n----------------------------------------\n\nTITLE: File Inclusion Example\nDESCRIPTION: Shows how to include external document fragments using the include directive with various parsing contexts\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_24\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis first example will be parsed at the document level, and can\nthus contain any construct, including section headers.\n\n.. include:: inclusion.txt\n\nBack in the main document.\n\n    This second example will be parsed in a block quote context.\n    Therefore it may only contain body elements.  It may not\n    contain section headers.\n\n    .. include:: inclusion.txt\n```\n\n----------------------------------------\n\nTITLE: Sample Docutils Configuration File\nDESCRIPTION: Example of a complete Docutils configuration file with general settings and HTML writer-specific settings. Demonstrates the section structure and various types of configuration options.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_2\n\nLANGUAGE: ini\nCODE:\n```\n# These entries affect all processing:\n[general]\nsource-link: yes\ndatestamp: %Y-%m-%d %H:%M UTC\ngenerator: on\n\n# These entries affect HTML output:\n[html writers]\nembed-stylesheet: no\n\n[html4css1 writer]\nstylesheet-path: docutils/writers/html4css1/html4css1.css\nfield-name-limit: 20\n\n[html5 writer]\nstylesheet-dirs: docutils/writers/html5_polyglot/\nstylesheet-path: minimal.css, responsive.css\n```\n\n----------------------------------------\n\nTITLE: Referencing Named Figures in ReStructuredText\nDESCRIPTION: Examples of how to give reference names to figures in ReStructuredText using internal hyperlink targets or the 'name' directive option.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_4\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. _figure name:\n\n.. figure:: image.png\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. figure:: image.png\n   :name: figure name\n```\n\n----------------------------------------\n\nTITLE: Docutils PEP to HTML Conversion Command\nDESCRIPTION: Example command for converting a PEP document from reStructuredText to HTML format.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd <path-to-docutils>/docs/peps\nrstpep2html.py pep-0287.txt pep-0287.html\n```\n\n----------------------------------------\n\nTITLE: Section Structure Markup Example\nDESCRIPTION: Illustrates section and subsection markup using adornment with underlines\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_4\n\nLANGUAGE: rst\nCODE:\n```\nThis is a Section Title\n=======================\n\nThis is a Subsection Title\n--------------------------\n\nThis paragraph is in the subsection.\n\nThis is Another Section Title\n=============================\n\nThis paragraph is in the second section.\n```\n\n----------------------------------------\n\nTITLE: Setting Output Encoding for LaTeX\nDESCRIPTION: This command sets the output encoding of the LaTeX source file, allowing users to specify the encoding they wish to use. The default encoding is 'utf-8'. This affects how characters are represented in the PDF output.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_48\n\nLANGUAGE: LaTeX\nCODE:\n```\n--output-encoding=latin-1\n```\n\n----------------------------------------\n\nTITLE: Embedding URIs in Hyperlink References\nDESCRIPTION: Shows how to directly embed URIs within angle brackets for inline hyperlink creation, eliminating the need for separate target definitions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_37\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee the `Python home page <https://www.python.org>`_ for info.\n```\n\n----------------------------------------\n\nTITLE: Implementing a Sidebar Directive in reStructuredText\nDESCRIPTION: This snippet demonstrates the usage of the sidebar directive in reStructuredText. It includes a title, optional subtitle, and body content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_7\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. sidebar:: Optional Sidebar Title\n   :subtitle: Optional Sidebar Subtitle\n\n   Subsequent indented lines comprise\n   the body of the sidebar, and are\n   interpreted as body elements.\n```\n\n----------------------------------------\n\nTITLE: Traits Definition Example\nDESCRIPTION: This Python code snippet illustrates how Traits are defined within a class. Each trait definition is prefaced by a plain comment. The example shows traits for selection, activation, closing, and a closed event.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/enthought-rfp.txt#2025-04-19_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n\"\"\"\n       __traits__ = {\n\n       # The current selection within the frame.\n       'selection' : Trait([], TraitInstance(list)),\n\n       # The frame has been activated or deactivated.\n       'activated' : TraitEvent(),\n\n       'closing' : TraitEvent(),\n\n       # The frame is closed.\n       'closed' : TraitEvent(),\n       }\n       \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Referencing Objects in ReStructuredText\nDESCRIPTION: Proposed syntax for referencing numbered objects like figures and equations in ReStructuredText using interpreted text roles.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_5\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee Figure :ref:`figure name` and Equation :ref:`eq:identity`.\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee :figure:`figure name` on :page:`figure name`.\n```\n\n----------------------------------------\n\nTITLE: Installing Required Ubuntu Packages\nDESCRIPTION: Command to install necessary dependencies on Ubuntu/Debian systems\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_8\n\nLANGUAGE: console\nCODE:\n```\n% sudo apt install git python3-all-dev\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Fragment of Definition List Item\nDESCRIPTION: This snippet displays the pseudo-XML structure generated from the reStructuredText definition list item. It shows the term, classifier, and definition elements and their hierarchical relationship within the definition_list_item and definition_list.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<definition_list>\n    <definition_list_item>\n        <term>\n            Tyrannosaurus Rex\n        <classifier>\n            carnivore\n        <definition>\n            <paragraph>\n                Big and scary; the \"Tyrant King\".\n    <definition_list_item>\n        <term>\n            Brontosaurus\n        <classifier>\n            herbivore\n        <definition>\n            <paragraph>\n                All brontosauruses are thin at one end,\n                much much thicker in the middle\n                and then thin again at the far end.\n            <paragraph>\n                -- Anne Elk (Miss)\n```\n\n----------------------------------------\n\nTITLE: Registering Local Role in Python\nDESCRIPTION: Demonstrates registration of an application-specific local role using the register_local_role function.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-roles.txt#2025-04-19_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\nfrom docutils.parsers.rst import roles\nroles.register_local_role(name, role_function)\n```\n\n----------------------------------------\n\nTITLE: Defining Custom LaTeX Command for Inline Elements in LaTeX\nDESCRIPTION: This snippet defines a new LaTeX command to style inline elements with a 'custom' class using small caps font.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_0\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\newcommand{\\DUrolecustom}[1]{\\textsc{#1}}\n```\n\n----------------------------------------\n\nTITLE: Macro Replacement with Substitution\nDESCRIPTION: This snippet showcases how to implement simple macro substitutions for repetitive text in documentation, allowing for easier updates and maintenance of textual references.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_32\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |RST| replace:: reStructuredText\n.. _RST: https://docutils.sourceforge.io/rst.html\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Literal Block in reStructuredText\nDESCRIPTION: Shows the syntax for creating a literal block in reStructuredText using the '::' notation. The example shows both indented code and quoted text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/cheatsheet.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n    Indented\n```\n\n----------------------------------------\n\nTITLE: Example of inline comments in function parameters in Python\nDESCRIPTION: This snippet illustrates the idea of extracting inline comments associated with function parameters for documentation purposes.  The comments, such as `# path of input file` and `# path of output file`, provide brief descriptions of the parameters `source` and `dest` respectively.  The goal is to reduce redundancy by automatically including these comments in the function's documentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/semantics.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef method(self,\n           source,        # path of input file\n           dest           # path of output file\n          ):\n```\n\n----------------------------------------\n\nTITLE: Creating Directives in reStructuredText\nDESCRIPTION: This snippet demonstrates how to use directives in reStructuredText to include elements such as images, figures, and admonitions. It outlines the syntax and structure necessary for directive implementation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_24\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. image:: mylogo.jpeg\n\n.. figure:: larch.png\n\n   The larch.\n\n.. note:: This is a paragraph\n\n   - Here is a bullet list.\n```\n\n----------------------------------------\n\nTITLE: Example RST Hyperlink References\nDESCRIPTION: Demonstrates RST syntax for defining hyperlink references with underscores that map URLs to reference names.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/introduction.txt#2025-04-19_snippet_0\n\nLANGUAGE: RST\nCODE:\n```\n.. _reStructuredText: https://docutils.sourceforge.io/rst.html\n.. _StructuredText: https://zopestructuredtext.readthedocs.org/\n.. _Setext: https://docutils.sourceforge.io/mirror/setext.html\n.. _Docutils: https://docutils.sourceforge.io/\n.. _A ReStructuredText Primer: ../../user/rst/quickstart.html\n.. _Quick reStructuredText: ../../user/rst/quickref.html\n.. _reStructuredText Markup Specification: restructuredtext.html\n.. _Problems with StructuredText: ../../dev/rst/problems.html\n```\n\n----------------------------------------\n\nTITLE: Updating Table of Contents in reStructuredText\nDESCRIPTION: This snippet details using the command `rst-toc-update` with the shortcut `C-c C-t C-u` to automatically refresh an existing table of contents that was initially inserted using the `.. contents::` directive, ensuring the TOC is always up to date.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\nrst-toc-update\n```\n\n----------------------------------------\n\nTITLE: Custom Admonition Example\nDESCRIPTION: Demonstrates creating a custom admonition with a user-defined title and content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_3\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. admonition:: And, by the way...\n\n   You can make up your own admonition too.\n```\n\n----------------------------------------\n\nTITLE: Defining field_name Element in RestructuredText\nDESCRIPTION: The `field_name` element holds the name of the field and is equivalent to a database field's name. It is contained only within the `field` element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_28\n\nLANGUAGE: reStructuredText\nCODE:\n```\n``field_name``\n==============\n\nThe ``field_name`` element contains text; it is analogous to a\ndatabase field's name.\n\nDetails\n-------\n\n:Category:\n    `Body Subelements`_ (simple)\n\n:Analogues:\n    ``field_name`` has no direct analogues in common DTDs.\n\n:Processing:\n    See field_list_.\n\n:Parents:\n    Only the field_ element contains ``field_name``.\n\n:Children:\n    ``field_name`` elements may contain text data plus `inline elements`_.\n\n    .. parsed-literal::\n\n        `%text.model;`_\n\n:Attributes:\n    The ``field_name`` element contains only the `common attributes`_.\n\nExamples\n--------\n\nSee the examples for the field_list_ and docinfo_ elements.\n```\n\n----------------------------------------\n\nTITLE: Alan Jaffray's Proposed Hyperlink Syntax #1\nDESCRIPTION: This proposal by Alan Jaffray simplifies anonymous hyperlinks by removing colons and adding leading undescores. The snippet shows refined syntax for external, internal, and indirect hyperlink targets. Its main dependency is on the understanding of basic link construction in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n__ _blah                      internal hyperlink target\n__ blah: http://somewhere     external hyperlink target\n__ blah: blahblah_            indirect hyperlink target\n__                            anonymous internal target\n__ http://somewhere           anonymous external target\n__ blahblah_                  anonymous indirect target\n__ [blah] http://somewhere    footnote\n.. blah:: http://somewhere    directive\n.. blah: http://somewhere     comment\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Headers and Footers with Fancyhdr\nDESCRIPTION: LaTeX configuration for customizing page headers and footers using the fancyhdr package, with support for custom header and footer content\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_40\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{fancyhdr}\n\\fancyhead[L]{\\DUheader}\n\\fancyfoot{} % reset\n\\fancyfoot[L]{\\DUfooter}\n\\pagestyle{fancy}\n```\n\n----------------------------------------\n\nTITLE: Documenting Parameters with reStructuredText Field Lists in Python\nDESCRIPTION: This snippet demonstrates how to document function parameters and return values using reStructuredText field lists within a Python docstring.  It leverages the field list syntax to create structured documentation for parameters like `lines`, `until_blank`, and `strip_indent`, as well as the return values of the function. This allows for clear and organized documentation that can be processed by tools like Docutils.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/semantics.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"\n:Parameters:\n    - `lines`: a list of one-line strings without newlines.\n    - `until_blank`: Stop collecting at the first blank line if\n      true (1).\n    - `strip_indent`: Strip common leading indent if true (1,\n      default).\n\n:Return:\n    - a list of indented lines with minimum indent removed;\n    - the amount of the indent;\n    - whether or not the block finished with a blank line or at\n      the end of `lines`.\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Class Directive Basic Usage\nDESCRIPTION: Shows how to apply CSS-style classes to paragraphs and sections\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_28\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. class:: special\n\nThis is a \"special\" paragraph.\n\n.. class:: exceptional remarkable\n\nAn Exceptional Section\n======================\n\nThis is an ordinary paragraph.\n```\n\n----------------------------------------\n\nTITLE: Illustrating Doctest Block Syntax in reStructuredText\nDESCRIPTION: This example demonstrates a doctest block in reStructuredText. Doctest blocks begin with '>>> ' and are used to show interactive Python sessions within documentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_10\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is an ordinary paragraph.\n\n>>> print 'this is a Doctest block'\nthis is a Doctest block\n\nThe following is a literal block::\n\n    >>> This is not recognized as a doctest block by\n    reStructuredText.  It *will* be recognized by the doctest\n    module, though!\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents\nDESCRIPTION: This snippet describes the 'contents' directive used to generate a table of contents (TOC) for a document. It includes examples and options for customizing the TOC depth and local scope of the references.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"Here's the directive in its simplest form::\\n\\n    .. contents::\\n\\nLanguage-dependent boilerplate text will be used for the title.  The\\nEnglish default title text is \"Contents\".\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"An explicit title may be specified::\\n\\n    .. contents:: Table of Contents\\n\\nThe title may span lines, although it is not recommended::\\n\\n    .. contents:: Here's a very long Table of\\n       Contents title\\n\\nOptions may be specified for the directive, using a field list::\\n\\n    .. contents:: Table of Contents\\n       :depth: 2\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"The following options are recognized:\\n\\n``depth`` : integer\\n    The number of section levels that are collected in the table of\\n    contents.  The default is unlimited depth.\\n\\n``local`` : flag (empty)\\n    Generate a local table of contents.  Entries will only include\\n    subsections of the section in which the directive is given.  If no\\n    explicit title is given, the table of contents will not be titled.\\n\\n``backlinks`` : \"entry\" or \"top\" or \"none\"\\n    Generate links from section headers back to the table of contents\\n    entries, the table of contents itself, or generate no back-links.\\n\\n``class`` : text\\n    Set a \"classes\"_ attribute value on the topic element.  See the\\n    class_ directive below.\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Document with Decoration Example in reStructuredText\nDESCRIPTION: This snippet illustrates a reStructuredText paragraph example that will be included in the document's body.  When a datestamp command-line option or configuration setting is supplied, a footer is created within the decoration element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_15\n\nLANGUAGE: restructuredtext\nCODE:\n```\nA paragraph.\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Index Targets\nDESCRIPTION: Demonstrates how to mark index entries inline using implicit directives in Docutils. Dependencies include having an understanding of reStructuredText syntax. The inputs are strings with inline directives, and the expected output is index markers within the text. No significant limitations are mentioned.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_43\n\nLANGUAGE: plaintext\nCODE:\n```\nIn this `paragraph`:index:, several words are being `marked`:index: inline as implicit `index`:index: entries.\n```\n\n----------------------------------------\n\nTITLE: Setting Paper Geometry with Geometry Package\nDESCRIPTION: LaTeX configuration for specifying document page size and orientation using the geometry package\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_42\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{geometry}\n\\geometry{a5paper,landscape}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Interpreted Text Usage in Python Docstrings\nDESCRIPTION: This snippet shows how to use interpreted text to classify identifiers explicitly in Python docstrings. It demonstrates both prefix and suffix forms of role specification for method and instance attribute references.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/pysource.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nUse :method:`Keeper.storedata` to store the object's data in\n`Keeper.data`:instance_attribute:.\n```\n\n----------------------------------------\n\nTITLE: Image Directive with Options\nDESCRIPTION: Shows how to use the image directive with various formatting options including height, width, scale, and alignment.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_4\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. image:: picture.jpeg\n   :height: 100px\n   :width: 200 px\n   :scale: 50 %\n   :alt: alternate text\n   :align: right\n```\n\n----------------------------------------\n\nTITLE: Original Function Docstring Example in Python\nDESCRIPTION: An example of a function docstring using traditional formatting with subsections for parameters, returns, and description.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/enthought-plan.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef max_gas(temperature, pressure, api, specific_gravity=.56):\n    \"\"\"\n    Computes the maximum dissolved gas in oil using Batzle and\n    Wang (1992).\n\n    Parameters\n    ----------\n    temperature : sequence\n        Temperature in degrees Celsius\n    pressure : sequence\n        Pressure in MPa\n    api : sequence\n        Stock tank oil API\n    specific_gravity : sequence\n        Specific gravity of gas at STP, default is .56\n\n    Returns\n    -------\n    max_gor : sequence\n        Maximum dissolved gas in liters/liter\n\n    Description\n    -----------\n    This estimate is based on equations given by Mavko, Mukerji,\n    and Dvorkin, (1998, pp. 218-219, or 2003, p. 236) obtained\n    originally from Batzle and Wang (1992).\n    \"\"\"\n    code...\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Inline Literals in reStructuredText\nDESCRIPTION: Shows how to use double-backquote syntax for inline literals in reStructuredText. Inline literals are useful for short code snippets and preserve the exact text without markup interpretation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_34\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis text is an example of ``inline literals``.\n```\n\n----------------------------------------\n\nTITLE: Docutils HTML Generation Command\nDESCRIPTION: Command to process a reStructuredText file into HTML using rst2html.py with source link and footer options.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nrst2html.py -stg test.txt test.html\n```\n\n----------------------------------------\n\nTITLE: Danger Directive Example in reStructuredText\nDESCRIPTION: This snippet demonstrates how to use the 'danger' directive in reStructuredText to highlight important or hazardous information. The '.. DANGER::' syntax is used to denote a danger block, and the text following it will be rendered as a warning or alert.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_11\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. DANGER:: Mad scientist at work!\n```\n\n----------------------------------------\n\nTITLE: Docutils S5 Slideshow Generation Command\nDESCRIPTION: Commands demonstrating how to create S5 slideshows from reStructuredText, including theme specification.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nrst2s5.py slides.txt slides.html\nrst2s5.py --theme medium-black slides.txt slides.html\n```\n\n----------------------------------------\n\nTITLE: Explicit Index Directives\nDESCRIPTION: Shows using index directives to manually specify index entries in a document with Docutils syntax. There are no special dependencies apart from some familiarity with reStructuredText. The input is lines with directive format, and the output includes index entries not depicted in the main text, allowing for control over indexing. Constraints might include proper format adherence.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_44\n\nLANGUAGE: plaintext\nCODE:\n```\n.. index:: markup\n.. index:: syntax\n```\n\n----------------------------------------\n\nTITLE: Geometry Package for Setting Margins\nDESCRIPTION: This LaTeX code snippet demonstrates how to set margins using the geometry package. It sets the horizontal margins and height of the page.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_39\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{geometry}\n\\geometry{hmargin={3cm,0.8in},height=8in}\n\\geometry{height=10in}.\"\n```\n\n----------------------------------------\n\nTITLE: Running rst2odt.py Command Line Example\nDESCRIPTION: Basic command line usage example for converting a reStructuredText file to ODT format. Demonstrates the simplest form of the command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ rst2odt.py myinput.txt myoutput.odt\n```\n\n----------------------------------------\n\nTITLE: Automatic Section Numbering\nDESCRIPTION: This snippet explains the 'sectnum' directive which automatically numbers sections and subsections in a document. It details how section numbers are generated and the options available for customization.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"The \"sectnum\" (or \"section-numbering\") directive automatically numbers\\nsections and subsections in a document (if not disabled by the\\n``--no-section-numbering`` command line option or the `sectnum_xform`_\\nconfiguration setting).\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"Section numbers are of the \"multiple enumeration\" form, where each\\nlevel has a number, separated by periods.  For example, the title of section\\n1, subsection 2, subsubsection 3 would have \"1.2.3\" prefixed.\\n\\nThe \"sectnum\" directive does its work in two passes: the initial parse\\nand a transform.  During the initial parse, a \"pending\" element is\\ngenerated which acts as a placeholder, storing any options internally.\\nAt a later stage in the processing, the \"pending\" element triggers a\\ntransform, which adds section numbers to titles.  Section numbers are\\nenclosed in a \"generated\" element, and titles have their \"auto\"\\nattribute set to \"1\".\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"The following options are recognized:\\n\\n``depth`` : integer\\n    The number of section levels that are numbered by this directive.\\n    The default is unlimited depth.\\n\\n``prefix`` : string\\n    An arbitrary string that is prefixed to the automatically\\n    generated section numbers.  It may be something like \"3.2.\", which\\n    will produce \"3.2.1\", \"3.2.2\", \"3.2.2.1\", and so on.  Note that\\n    any separating punctuation (in the example, a period, \".\") must be\\n    explicitly provided.  The default is no prefix.\\n\\n``suffix`` : string\\n    An arbitrary string that is appended to the automatically\\n    generated section numbers.  The default is no suffix.\\n\\n``start`` : integer\\n    The value that will be used for the first section number.\\n    Combined with ``prefix``, this may be used to force the right\\n    numbering for a document split over several source files.  The\\n    default is 1.\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Locale Settings in Python\nDESCRIPTION: This code block attempts to set up locale support for internationalization, specifically for text encoding. It's wrapped in a try-except block to handle cases where locale support is not available on the platform.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/cmdline-tool.txt#2025-04-19_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\ntry:\n    import locale\n    locale.setlocale(locale.LC_ALL, '')\nexcept:\n    pass\n```\n\n----------------------------------------\n\nTITLE: Examples of List Auto-Numbering Behavior in reST\nDESCRIPTION: Shows various list input patterns and how they would be transformed with auto-numbering, including warnings when list structure is ambiguous.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_27\n\nLANGUAGE: rst\nCODE:\n```\n1,1,1   -> 1,2,3\n1,2,2   -> 1,2,3\n3,3,3   -> 3,4,5\n1,2,2,3 -> 1,2,3 [WARNING] 3\n1,1,2   -> 1,2 [WARNING] 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Docutils Publisher Settings in Python\nDESCRIPTION: This snippet demonstrates how to pass application-specific setting defaults to the Publisher convenience functions using the settings_overrides parameter. It shows setting the input and output encodings.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/api/publisher.txt#2025-04-19_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\noverrides = {'input_encoding': 'ascii',\n             'output_encoding': 'latin-1'}\noutput = publish_string(..., settings_overrides=overrides)\n```\n\n----------------------------------------\n\nTITLE: Error Element Example\nDESCRIPTION: Illustrates the pseudo-XML structure of an error element, which is a type of admonition. The example shows a simple error message contained within a paragraph.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_25\n\nLANGUAGE: xml\nCODE:\n```\n\"<error>\\n    <paragraph>\\n        Does not compute.\\n\"\n```\n\n----------------------------------------\n\nTITLE: Raw Directive with Destination Option in reStructuredText\nDESCRIPTION: This snippet illustrates a proposed extension to the `raw` directive in reStructuredText, adding a `destination` option to specify where the raw content should be placed in the output document (e.g., in the HTML `<head>`). This enhancement aims to provide more control over raw content placement but requires careful consideration to ensure consistent behavior across different writers and destinations.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_10\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. raw:: html\n   :destination: head\n\n   <link ...>\n```\n\n----------------------------------------\n\nTITLE: Using the meta directive in reStructuredText\nDESCRIPTION: This snippet illustrates the use of the ``meta`` directive in reStructuredText to set metadata for the ODT document. Keywords and description are set in their respective ODT fields, and other meta fields are set as custom properties. This allows for enhanced document information and searchability.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_12\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. meta::\n   :keywords: reStructuredText, docutils, formatting\n   :description lang=en: A reST document, contains formatted\n       text in a formatted style.\n   :custom_var: Value\n\n```\n\n----------------------------------------\n\nTITLE: Referencing PEP and RFC Documents in reStructuredText\nDESCRIPTION: Demonstrates the usage of ':PEP:' and ':RFC:' roles to create hyperlinks to Python Enhancement Proposals and Internet Request for Comments documents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/roles.txt#2025-04-19_snippet_3\n\nLANGUAGE: reStructuredText\nCODE:\n```\nSee :PEP:`287` for more information about reStructuredText.\n\nSee :RFC:`2822` for information about email headers.\n```\n\n----------------------------------------\n\nTITLE: LaTeX Math Directive Example\nDESCRIPTION: Demonstrates the use of the math directive to insert mathematical content using LaTeX syntax with Unicode symbols\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_11\n\nLANGUAGE: rst\nCODE:\n```\n.. math::\n\n  α_t(i) = P(O_1, O_2, … O_t, q_t = S_i λ)\n```\n\n----------------------------------------\n\nTITLE: Defining Tool Description for Docutils HTML Generator\nDESCRIPTION: This code creates a description string for the command-line tool. It combines a specific description of the tool's function (generating HTML from reStructuredText) with the default description provided by Docutils.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/cmdline-tool.txt#2025-04-19_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\ndescription = ('Generates (X)HTML documents from standalone '\n               'reStructuredText sources.  ' + default_description)\n```\n\n----------------------------------------\n\nTITLE: Basic Footnote Example in reStructuredText\nDESCRIPTION: Demonstrates the traditional bracketed footnote syntax with references and definitions at the bottom of the page.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_36\n\nLANGUAGE: reStructuredText\nCODE:\n```\nFans of Terry Pratchett are perhaps more likely to use\nfootnotes [1]_ in their own writings than other people\n[2]_.  Of course, in *general*, one only sees footnotes\nin academic or technical writing - it's use in fiction\nand letter writing is not normally considered good\nstyle [4]_, particularly in emails (not a medium that\nlends itself to footnotes).\n\n.. [1] That is, little bits of referenced text at the\n   bottom of the page.\n.. [2] Because Terry himself does, of course [3]_.\n.. [3] Although he has the distinction of being\n   *funny* when he does it, and his fans don't always\n   achieve that aim.\n.. [4] Presumably because it detracts from linear\n   reading of the text - this is, of course, the point.\n```\n\n----------------------------------------\n\nTITLE: Template Processing with Substitution Markup\nDESCRIPTION: This snippet demonstrates the use of substitution references for template processing, showing how inline markup can later be replaced by dynamic content using a template engine.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_31\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |name| tal:: replace user/getUserName\n```\n\n----------------------------------------\n\nTITLE: Parsing Contact Information to Pseudo-XML\nDESCRIPTION: Shows the pseudo-XML structure resulting from parsing a reStructuredText document with contact information, illustrating the document, title, docinfo, and contact elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_8\n\nLANGUAGE: XML\nCODE:\n```\n<document ids=\"document-title\" names=\"document title\">\n    <title>\n        Document Title\n    <docinfo>\n        <contact>\n            <reference refuri=\"mailto:jrh@example.com\">\n                jrh@example.com\n```\n\n----------------------------------------\n\nTITLE: Defining body.elements Parameter Entity for Body Elements in XML DTD\nDESCRIPTION: Defines the body.elements parameter entity containing an OR-list of all body elements. Used in various content models and can be extended using additional.body.elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_65\n\nLANGUAGE: XML\nCODE:\n```\nadmonition_ | attention_ | block_quote_ | bullet_list_ | caution_\n| citation_ | compound_ | comment_ | container_ | danger_\n| definition_list_ | doctest_block_ | enumerated_list_ | error_\n| field_list_ | figure_ | footnote_ | hint_ | image_ | important_\n| line_block_ | literal_block_ | note_ | option_list_\n| paragraph_ | pending_ | raw_ reference_ | rubric_\n| substitution_definition_ | system_message_ | table_ | target_\n| tip_ | warning_ %additional.body.elements;\n```\n\n----------------------------------------\n\nTITLE: Removing Spacing from Lists with Class 'compact'\nDESCRIPTION: This code snippet uses the enumitem package to remove extra vertical whitespace from lists with the class argument \"compact\". It defines a new command to set the noitemsep option for lists with that class.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_34\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{enumitem}\n\\newcommand*{\\DUCLASScompact}{\\setlist{noitemsep}}\"\n```\n\n----------------------------------------\n\nTITLE: Defining Custom LaTeX Role for Code Highlighting in reStructuredText\nDESCRIPTION: Demonstrates how to create a custom 'latex' role for syntax highlighting LaTeX code using the 'role' directive with the 'code' base role and 'language' option.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/roles.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. role:: latex(code)\n   :language: latex\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Internal Targets\nDESCRIPTION: Demonstrates how to create inline internal targets within running text that can be referenced from elsewhere in the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_45\n\nLANGUAGE: restructuredtext\nCODE:\n```\nOh yes, the _`Norwegian Blue`.  What's, um, what's wrong with it?\n```\n\n----------------------------------------\n\nTITLE: Applying Multiple Stylesheets in Docutils HTML Generation (Command Line)\nDESCRIPTION: This command demonstrates how to apply both the default stylesheet and a custom stylesheet when generating HTML from reStructuredText using rst2html.py.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/html-stylesheets.txt#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nrst2html.py --stylesheet=html4css1.css,transition-stars.css\n```\n\n----------------------------------------\n\nTITLE: Uploading to Test PyPI\nDESCRIPTION: Command to upload distribution packages to the test PyPI repository\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/release.txt#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npython3 -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n```\n\n----------------------------------------\n\nTITLE: Compound Enumerated Lists in Docutils\nDESCRIPTION: Investigates the possibility of allowing compound enumerators for nested lists in Docutils, facilitating styles like \"1.1.\" or \"1.a.\". Dependencies include recognition of reStructuredText's parsing mechanics. Inputs would be nested enumerated lists. This method raises questions around indentation and default rules.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_51\n\nLANGUAGE: plaintext\nCODE:\n```\nAllow for compound enumerators, such as \"1.1.\" or \"1.a.\" or \"1(a)\", to allow for nested enumerated lists without indentation?\n```\n\n----------------------------------------\n\nTITLE: Selecting Fonts in LaTeX Stylesheet\nDESCRIPTION: Examples of selecting fonts using LaTeX stylesheets and preamble commands. Demonstrates using packages like lmodern and kerkis, as well as selecting Palatino fonts with old-style numbers and true small-caps.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_5\n\nLANGUAGE: latex\nCODE:\n```\n--stylesheet=lmodern\n```\n\nLANGUAGE: latex\nCODE:\n```\n--stylesheet=kerkis,preamble.tex\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage[osf,sc]{mathpazo}\n```\n\n----------------------------------------\n\nTITLE: Option List Example in reStructuredText\nDESCRIPTION: This code snippet presents an example of an option list in reStructuredText. It demonstrates various option formats, including short and long POSIX options, and illustrates how to include descriptions, arguments, and multiple variants.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_6\n\nLANGUAGE: rst\nCODE:\n```\n\"-a         Output all.\n-b         Output both (this description is\n           quite long).\n-c arg     Output just arg.\n--long     Output all day long.\n\n-p         This option has two paragraphs in the description.\n           This is the first.\n\n           This is the second.  Blank lines may be omitted between\n           options (as above) or left in (as here and below).\n\n--very-long-option  A VMS-style option.  Note the adjustment for\n                    the required two spaces.\n\n--an-even-longer-option\n           The description can also start on the next line.\n\n-2, --two  This option has two variants.\n\n-f FILE, --file=FILE  These two options are synonyms; both have\n                      arguments.\n\n/V         A VMS/DOS-style option.\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Data Dictionary to Pseudo-XML\nDESCRIPTION: Shows the pseudo-XML structure resulting from parsing a reStructuredText definition list with classifiers, illustrating the definition_list, definition_list_item, term, classifier, and definition elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<definition_list>\n    <definition_list_item>\n        <term>\n            name\n        <classifier>\n            string\n        <definition>\n            <paragraph>\n                Customer name.\n    <definition_list_item>\n        <term>\n            i\n        <classifier>\n            int\n        <definition>\n            <paragraph>\n                Temporary index variable.\n```\n\n----------------------------------------\n\nTITLE: Setting Electric Indent Inhibit for RST Mode\nDESCRIPTION: A workaround for Emacs V24.4 compatibility issue where electric-indent-mode breaks RST mode indentation. This fix should be added to the rst.el file.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_3\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n(setq electric-indent-inhibit t)\n```\n\n----------------------------------------\n\nTITLE: Defining align-hv.att Parameter Entity for Horizontal and Vertical Alignment in XML DTD\nDESCRIPTION: Defines the align-hv.att parameter entity containing the align attribute for both horizontal and vertical alignment. Used by elements like image for specifying top, middle, bottom, left, center, or right alignment.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_59\n\nLANGUAGE: XML\nCODE:\n```\nalign     (top | middle | bottom | left | center | right) #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: Defining a Fragile URL Command in LaTeX\nDESCRIPTION: This snippet shows how to define a custom URL command in LaTeX that can handle special characters in URLs.  This involves using \\urldef and \\nolinkurl to create a command that can be used safely within the \\href command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_18\n\nLANGUAGE: latex\nCODE:\n```\n    \\urldef{\\fragileURLi}\\nolinkurl{myself%node@gateway.net}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Expose Internals in Docutils Configuration\nDESCRIPTION: Example of how to specify expose_internals, ignore and prune settings in a Docutils configuration file. These settings use colons as delimiters and preserve whitespace.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\nexpose_internals: b:c:d\n```\n\n----------------------------------------\n\nTITLE: Creating Anonymous One-off Hyperlinks\nDESCRIPTION: Demonstrates anonymous hyperlink references with double underscores for one-time use links that cannot be referenced again elsewhere in the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_40\n\nLANGUAGE: restructuredtext\nCODE:\n```\n`RFC 2396 <https://www.rfc-editor.org/rfc/rfc2396.txt>`__ and `RFC\n2732 <https://www.rfc-editor.org/rfc/rfc2732.txt>`__ together\ndefine the syntax of URIs.\n```\n\n----------------------------------------\n\nTITLE: Custom CSS Stylesheet Template for Docutils\nDESCRIPTION: This CSS template shows how to create a custom stylesheet for Docutils that imports the default styles and allows for customizations. It includes metadata comments and an example of custom font settings.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/html-stylesheets.txt#2025-04-19_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n/*\n:Author: Your Name\n:Contact: Your Email Address\n:Copyright: This stylesheet has been placed in the public domain.\n\nStylesheet for use with Docutils.  [Optionally place a more\ndetailed description here.]\n*/\n\n@import url(html4css1.css);\n\n/* Your customizations go here.  For example: */\n\nh1, h2, h3, h4, h5, h6, p.topic-title {\n  font-family: sans-serif }\n```\n\n----------------------------------------\n\nTITLE: Registering Generic Role in Python\nDESCRIPTION: Shows how to register a simple generic role that wraps text in a specific node type using the register_generic_role helper function.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/rst-roles.txt#2025-04-19_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nregister_generic_role('emphasis', nodes.emphasis)\n```\n\n----------------------------------------\n\nTITLE: Table Format 5: Whitespace Continuation in reStructuredText Tables\nDESCRIPTION: Shows a variation where whitespace in the first column implies a multi-line row, with continuation text in other columns. This approach has limitations for first-column cells.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\n===== =====\ncol 1 col 2\n===== =====\n1     Second column of row 1.\n2     Second column of row 2.\n      Second line of paragraph.\n3     Second column of row 3.\n\n      Second paragraph of row 3,\n      column 2\n===== =====\n```\n\n----------------------------------------\n\nTITLE: Example of Man Page Structure in Roff Formatting\nDESCRIPTION: Demonstrates the actual roff formatting commands used to create a man page, showing the TH command for title header, SH for section headers, and various formatting commands for bold and italic text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/manpage.txt#2025-04-19_snippet_1\n\nLANGUAGE: roff\nCODE:\n```\n     .TH man 1 \"14 May 2001\" \"2.3.19\" \"Manual pager utils\"\n     .SH NAME\n     man \\- an interface to the on-line reference manuals\n     .SH SYNOPSIS\n     .\\\" The general command line\n     .B man\n     .RB [\\| \\-c \\||\\| \\-w \\||\\| \\-tZT\n     .IR device \\|]\n```\n\n----------------------------------------\n\nTITLE: Creating Footnote References\nDESCRIPTION: Shows how to create numbered footnote references with square brackets and a trailing underscore that link to footnote definitions elsewhere in the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_46\n\nLANGUAGE: restructuredtext\nCODE:\n```\nPlease RTFM [1]_.\n\n.. [1] Read The Fine Manual\n```\n\n----------------------------------------\n\nTITLE: Adding Contact Information in reStructuredText\nDESCRIPTION: Demonstrates how to add contact information to a document in reStructuredText, which gets parsed into a contact XML element within the docinfo.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_7\n\nLANGUAGE: reStructuredText\nCODE:\n```\nDocument Title\n==============\n\n:Contact: jrh@example.com\n```\n\n----------------------------------------\n\nTITLE: Date Field Example in reStructuredText\nDESCRIPTION: This snippet shows how to specify the document's date using the ':Date:' field in reStructuredText. The date is placed in the docinfo section of the document and is generally rendered in the document metadata.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_13\n\nLANGUAGE: restructuredtext\nCODE:\n```\nDocument Title\n==============\n\n:Date: 2002-08-20\n```\n\n----------------------------------------\n\nTITLE: Paragraph Indentation Configuration\nDESCRIPTION: LaTeX configuration for paragraph indentation using the parskip package, which removes paragraph indents and adds vertical spacing\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_43\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{parskip}\n```\n\n----------------------------------------\n\nTITLE: Auto-Numbered and Auto-Symbol Footnotes in reStructuredText\nDESCRIPTION: This snippet illustrates the use of syntax for auto-numbered and auto-symbol footnotes, including the assignment of numbers to footnotes and the presentation of symbols for references.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_20\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. [*] This is the footnote.\n```\n\n----------------------------------------\n\nTITLE: Danger Admonition Example in reStructuredText\nDESCRIPTION: Demonstrates the syntax and rendering of a DANGER admonition directive with a simple warning message.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. DANGER::\n   Beware killer rabbits!\n```\n\n----------------------------------------\n\nTITLE: Testing Language Modules with test_language.py in Python\nDESCRIPTION: Example command for testing a specific language module (English in this case) using the test_language.py script. The output shows a successful test run with 2 tests passing.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/howto/i18n.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ python test_language.py en\n..\n----------------------------------------\nRan 2 tests in 0.095s\n\nOK\n```\n\n----------------------------------------\n\nTITLE: StructuredText Absolute-Only URI Syntax\nDESCRIPTION: Demonstrates StructuredText syntax for absolute-only URIs. This syntax also requires explicit definition of both the link text and the URI.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_22\n\nLANGUAGE: text\nCODE:\n```\nA \"URI\", http://spam.org, see [eggs2000] (in Bacon\n       [Publisher]).  Also see \"http://eggs.org\", http://eggs.org.\n\n       .. [eggs2000] \"Spam, Spam, Spam, Eggs, Bacon, and Spam\"\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Equation Directive Example\nDESCRIPTION: This code demonstrates the use of an equation directive with troff pass-through and a GIF output. This showcases how a single directive could produce multiple outputs, allowing the writer to select the appropriate format. This example uses the `.EQ` and `.EN` troff macros to define an equation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_13\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. eqn::\n\n   .EQ\n   delim %%\n   .EN\n   %sum from i=o to inf c sup i~=~lim from {m -> inf}\n   sum from i=0 to m sup i%\n   .EQ\n   delim off\n   .EN\n```\n\n----------------------------------------\n\nTITLE: Adding Copyright Information in reStructuredText\nDESCRIPTION: Demonstrates how to add copyright information to a document in reStructuredText, which gets parsed into a copyright XML element within the docinfo.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_9\n\nLANGUAGE: reStructuredText\nCODE:\n```\nDocument Title\n==============\n\n:Copyright: This document has been placed in the public domain.\n```\n\n----------------------------------------\n\nTITLE: Parsing Copyright Information to Pseudo-XML\nDESCRIPTION: Shows the pseudo-XML structure resulting from parsing a reStructuredText document with copyright information, illustrating the document, title, docinfo, and copyright elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<document ids=\"document-title\" names=\"document title\">\n    <title>\n        Document Title\n    <docinfo>\n        <copyright>\n            This document has been placed in the public domain.\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Role for Text Styling\nDESCRIPTION: This example shows how to define a custom interpreted text role in a reStructuredText document, applying it to inline text to represent specific styles.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_7\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. role:: pretty\n\nWe have :pretty:`very nice` apples.\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Comment and Directive Example\nDESCRIPTION: Illustrates how to create comments and directives in reStructuredText. Comments are indicated by two dots and a space. Directives are explicit markup containing a single word followed by two colons and whitespace.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_15\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. This is a comment.\n\n.. The line below is an example of a directive.\n.. version:: 1\n```\n\n----------------------------------------\n\nTITLE: Loading rst.el Package in Emacs Configuration\nDESCRIPTION: Code to enable rst.el package in Emacs initialization file. This loads the reStructuredText mode.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_0\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n(require 'rst)\n```\n\n----------------------------------------\n\nTITLE: Basic Directive Syntax Structure in reStructuredText\nDESCRIPTION: Shows the basic syntax structure for reStructuredText directives with a two-column display showing directive marker and block format.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n+-------+-------------------------------+\n| \".. \" | directive type \"::\" directive |\n+-------+ block                         |\n        |                               |\n        +-------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Table Format 3 Feature Summary in reStructuredText\nDESCRIPTION: A compact example showing the features of the minimalist table approach, including column spans and header rows in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n========  ========  ========\n             Header 2 & 3 Span\n             ------------------\nHeader 1  Header 2  Header 3\n========  ========  ========\nEach      line is   a new row.\nEach row  consists  of one line only.\nRow       spans     are not possible.\nThe last  column    may spill over to the right.\nColumn spans are possible with an underline joining columns.\n----------------------------\nThe span  is        limited to the row above the underline.\n========  ========  ========\n```\n\n----------------------------------------\n\nTITLE: Length Unit Examples in reStructuredText\nDESCRIPTION: Demonstrates valid length value formats supported by reStructuredText parser, including units and spacing\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_53\n\nLANGUAGE: text\nCODE:\n```\n\"1.5em\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"20 mm\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\".5in\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Table in reStructuredText\nDESCRIPTION: This code presents an example of a simple table in reStructuredText, showcasing the use of '=' and '-' characters to define table borders and column spans. It demonstrates a truth table with header and body rows.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_16\n\nLANGUAGE: rst\nCODE:\n```\n=====  =====  =======\\n  A      B    A and B\\n=====  =====  =======\\nFalse  False  False\\nTrue   False  False\\nFalse  True   False\\nTrue   True   True\\n=====  =====  =======\n```\n\n----------------------------------------\n\nTITLE: Document Structure after Transformation\nDESCRIPTION: Shows the document structure in pseudo-XML after transforms have been applied, demonstrating how a section title can be promoted to become the document title. The example includes a title and a paragraph within the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_23\n\nLANGUAGE: xml\nCODE:\n```\n\"<document ids=\\\"a-title\\\" names=\\\"a title\\\">\\n    <title>\\n        A Title\\n    <paragraph>\\n        A paragraph.\\n\"\n```\n\n----------------------------------------\n\nTITLE: Using LaTeX Templates in Docutils\nDESCRIPTION: Example of using a custom LaTeX template in Docutils to print a title page including docinfo, dedication, and abstract. This is done using the --template command line option.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_7\n\nLANGUAGE: restructuredtext\nCODE:\n```\n--template=titlepage.tex\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Hint Example\nDESCRIPTION: Demonstrates how to create a hint admonition using reStructuredText. The `.. Hint::` directive generates a hint element, typically rendered as a distinct notice with the title \"Hint\".\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_34\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\".. Hint:: It's bigger than a bread box.\"\n```\n\n----------------------------------------\n\nTITLE: Running odtwriter with Custom Stylesheet and Configuration File\nDESCRIPTION: This command demonstrates how to run the odtwriter with a specified configuration file and a custom stylesheet to apply user-defined styles during ODF document generation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nrst2odt.py --odf-config-file=mymappingfile.ini --stylesheet=mystyles.odt mydoc.txt mydoc.odt\n```\n\n----------------------------------------\n\nTITLE: Using the raw directive in reStructuredText\nDESCRIPTION: This example demonstrates the usage of the ``raw`` directive with the 'odt' output format in reStructuredText.  It allows embedding raw ODT content directly into the document.  Care must be taken to ensure the raw content is properly formatted and valid ODT XML.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_11\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. raw:: odt\n\n    <text:p text:style-name=\"rststyle-textbody\">Determining\n    <text:span text:style-name=\"rststyle-emphasis\">which</text:span>\n    namespace a name is in is static.  It can be determined by a\n    lexical scan of the code.  If a variable is assigned a value\n    <text:span text:style-name=\"rststyle-emphasis\">anywhere</text:span>\n    in a scope (specifically within a function or method body),\n    then that variable is local to that scope.  If Python does\n    not find a variable in the local scope, then it looks next\n    in the global scope (also sometimes called the module scope)\n    and then in the built-ins scope.  But, the\n    <text:span text:style-name=\"rststyle-inlineliteral\">global</text:span>\n    statement can be used to force Python to find and use a global\n    variable (a variable defined at top level in a module) rather\n    than create a local one.</text:p>\n\n```\n\n----------------------------------------\n\nTITLE: Raw Directive LaTeX Example\nDESCRIPTION: Shows how to use raw directive to insert LaTeX-specific formatting commands\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_26\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. raw:: latex\n\n   \\setlength{\\parindent}{0pt}\n```\n\n----------------------------------------\n\nTITLE: Subversion Auto-Props Configuration\nDESCRIPTION: SVN client configuration settings for correct file properties and ignores when committing changes\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/repository.txt#2025-04-19_snippet_2\n\nLANGUAGE: ini\nCODE:\n```\n[miscellany]\n# For your convenience:\nglobal-ignores = ... *.pyc ...\n# For correct properties:\nenable-auto-props = yes\n\n[auto-props]\n*.py = svn:eol-style=native;svn:keywords=Author Date Id Revision\n*.txt = svn:eol-style=native;svn:keywords=Author Date Id Revision\n*.html = svn:eol-style=native;svn:keywords=Author Date Id Revision\n*.xml = svn:eol-style=native;svn:keywords=Author Date Id Revision\n*.tex = svn:eol-style=native;svn:keywords=Author Date Id Revision\n*.css = svn:eol-style=native;svn:keywords=Author Date Id Revision\n*.patch = svn:eol-style=native\n*.sh = svn:eol-style=native;svn:executable;svn:keywords=Author Date Id Revision\n*.png = svn:mime-type=image/png\n*.jpg = svn:mime-type=image/jpeg\n*.gif = svn:mime-type=image/gif\n```\n\n----------------------------------------\n\nTITLE: Raw Directive HTML Example\nDESCRIPTION: Demonstrates using the raw directive to insert raw HTML content directly into document output\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_25\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. raw:: html\n\n   <hr width=50 size=10>\n```\n\n----------------------------------------\n\nTITLE: Enumerated List Example\nDESCRIPTION: Demonstrates the pseudo-XML representation of an enumerated list with nested lists, showcasing the use of 'enumtype', 'prefix', and 'suffix' attributes. The example includes both arabic and upperalpha enumeration types.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_24\n\nLANGUAGE: xml\nCODE:\n```\n\"<enumerated_list enumtype=\\\"arabic\\\" prefix=\\\"\\\" suffix=\\\".\\\">\\n    <list_item>\\n        <paragraph>\\n            Item 1.\\n        <enumerated_list enumtype=\\\"upperalpha\\\" prefix=\\\"(\\\" suffix=\\\")\\\">\\n            <list_item>\\n                <paragraph>\\n                    Item A.\\n            <list_item>\\n                <paragraph>\\n                    Item B.\\n            <list_item>\\n                <paragraph>\\n                    Item C.\\n    <list_item>\\n        <paragraph>\\n            Item 2.\\n\"\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Title Command with Hand\nDESCRIPTION: This snippet defines a LaTeX command to create a title with a right-pointing hand symbol using the pifont package. It also demonstrates how to incorporate an argument into the command to allow for a title text alongside the symbol.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_47\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\usepackage{pifont}\n\\newcommand*{\\DUCLASSattention}{\n  \\renewcommand*{\\DUtitle}[1]{\\ding{43} #1}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Comments Using Explicit Markup\nDESCRIPTION: This snippet explains how to define comments in the text using explicit markup blocks. This allows for notes or explanations without them being included in output documents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_33\n\nLANGUAGE: plaintext\nCODE:\n```\n.. This is a comment\n..\n   _so: is this!\n..\n   [and] this!\n..\n   this:: too!\n..\n   |even| this:: !\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Literal Block in reStructuredText\nDESCRIPTION: This snippet shows how to include a literal block within a compound paragraph using the 'compound' directive. It demonstrates a simple network connection process.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/demo.txt#2025-04-19_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. compound::\n\n   This paragraph contains a literal block::\n\n       Connecting... OK\n       Transmitting data... OK\n       Disconnecting... OK\n\n   and thus consists of a simple paragraph, a literal block, and\n   another simple paragraph.  Nonetheless it is semantically *one*\n   paragraph.\n```\n\n----------------------------------------\n\nTITLE: Definitions for S5/HTML Slide Shows\nDESCRIPTION: This snippet describes the 's5defs.txt' standard definition file, which contains interpreted text roles and other definitions necessary for creating S5/HTML slide shows with reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_6\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe \"s5defs.txt_\" standard definition file contains interpreted text roles (classes) and other definitions for documents destined to become `S5/HTML slide shows`_.\n```\n\n----------------------------------------\n\nTITLE: Grid Table with extra line fix in reStructuredText\nDESCRIPTION: This snippet provides another method to resolve formatting conflicts arising from vertical bars in grid table cells. Adding an extra line to the row breaks the continuity of the cell outline, effectively isolating the text and preventing misinterpretation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_15\n\nLANGUAGE: rst\nCODE:\n```\n\"+--------------+----------+-----------+-----------+\\n| row 1, col 1 | column 2 | column 3  | column 4  |\\n+--------------+----------+-----------+-----------+\\n| row 2        | Use the command ``ls | more``.   |\\n|              |                                  |\\n+--------------+----------+-----------+-----------+\\n| row 3        |          |           |           |\\n+--------------+----------+-----------+-----------+\"\n```\n\n----------------------------------------\n\nTITLE: Documenting Notes in reStructuredText\nDESCRIPTION: This defines the 'note' element as a distinct admonition type that provides self-contained notices, detailing its structure, rendering, and processing requirements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_46\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``note`` element is an admonition, a distinctive and\nself-contained notice.  Also see the other admonition elements\nDocutils offers (in alphabetical order): attention_, caution_,\ndanger_, error_, hint_, important_, tip_, warning_, and the generic\nadmonition_.\n```\n\n----------------------------------------\n\nTITLE: Associating Text with External Styles\nDESCRIPTION: This snippet illustrates how to associate inline text with externally defined presentation styles using substitution references. It enables styling in various output formats.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_30\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |the text in Texas| style:: big\n```\n\n----------------------------------------\n\nTITLE: Raw Docstring Escaping in Python\nDESCRIPTION: Demonstrates using raw docstrings to handle backslash characters in Python, preventing unintended escape sequences\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nr\"\"\"This is a raw docstring.  Backslashes (\\) are not touched.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Standalone Hyperlinks\nDESCRIPTION: Shows how URIs are automatically converted to hyperlinks when they appear in the text without explicit markup. The URI becomes both the link text and target.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_50\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee https://www.python.org for info.\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Hint Parsing\nDESCRIPTION: Illustrates the pseudo-XML representation of the parsed hint admonition. The paragraph containing the hint's content is nested within the hint element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_35\n\nLANGUAGE: xml\nCODE:\n```\n\"<hint>\\n    <paragraph>\\n        It's bigger than a bread box.\"\n```\n\n----------------------------------------\n\nTITLE: Setting Figure Placement in LaTeX\nDESCRIPTION: This snippet illustrates how to specify figure placements within a LaTeX document using the float package. It allows you to customize where figures appear on the page—either at their definition point or at the top/bottom, improving layout flexibility. Required packages: `float`.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_15\n\nLANGUAGE: latex\nCODE:\n```\n\\floatplacement{figure}{H}\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\floatplacement{figure}{htbp} % here, top, bottom, extra-page\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\floatplacement{figure}{tb}\n```\n\n----------------------------------------\n\nTITLE: RCS Keyword Example in reStructuredText\nDESCRIPTION: This snippet illustrates how RCS keywords are used within bibliographic fields in reStructuredText. The RCS keyword is enclosed in dollar signs and is expanded by version control systems.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_5\n\nLANGUAGE: rst\nCODE:\n```\n\":Status: $keyword: expansion text $\"\n```\n\n----------------------------------------\n\nTITLE: Custom Hyperref Package Loading and URL Style\nDESCRIPTION: This code snippet demonstrates how to load the hyperref package with custom options and reset the URL style to use the text font. It loads hyperref with unicode support, color links, and a green link color, then sets the URL style to \"same\".\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_25\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage[unicode,colorlinks=true,linkcolor=green]{hyperref}\n\\urlstyle{same}\"\n```\n\n----------------------------------------\n\nTITLE: Setting the Frame Font in Emacs\nDESCRIPTION: This code sets the currently active frame's font to the previously created fontset for the Mac-Roman charset, enabling support for the special characters defined in the fontset.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_17\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n(set-frame-font \"fontset-monaco\")\n```\n\n----------------------------------------\n\nTITLE: Bullet List Indentation Example\nDESCRIPTION: Demonstrates indentation rules for bullet lists, showing how list items and nested content are formatted\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_3\n\nLANGUAGE: restructuredtext\nCODE:\n```\n- This is the first line of a bullet list\n  item's paragraph.  All lines must align\n  relative to the first line.\n\n      This indented paragraph is interpreted\n      as a block quote.\n\n  Another paragraph belonging to the first list item.\n```\n\n----------------------------------------\n\nTITLE: Parsing Option List XML Structure in reStructuredText\nDESCRIPTION: Example of how command-line options are parsed into XML structure with option groups, strings, and descriptions\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_48\n\nLANGUAGE: XML\nCODE:\n```\n<option_list>\n    <option_list_item>\n        <option_group>\n            <option>\n                <option_string>-a</option_string>\n            <description>\n                <paragraph>command-line option \"a\"</paragraph>\n        <option_list_item>\n            <option_group>\n                <option>\n                    <option_string>-1</option_string>\n                    <option_argument delimiter=\" \">file</option_argument>\n                <option>\n                    <option_string>--one</option_string>\n                    <option_argument delimiter=\"=\">file</option_argument>\n                <option>\n                    <option_string>--two</option_string>\n                    <option_argument delimiter=\" \">file</option_argument>\n            <description>\n                <paragraph>Multiple options with arguments.</paragraph>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Mathematical Elements in reStructuredText\nDESCRIPTION: This entry details the 'math' and 'math_block' elements used for typesetting mathematical notation in LaTeX format, explaining their syntax, processing, and parent/child relationships.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_44\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``math`` element contains text in `LaTeX math format` [#latex-math]_\nthat is typeset as mathematical notation (inline formula).\n\n:Analogues:\n    ``math`` is analogous to a MathML \"math\" element or\n    the LaTeX (``$ math $``) mode.\n\n:Processing:\n    Rendered as mathematical notation.\n```\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``math_block`` element contains a block of text in `LaTeX math\nformat` [#latex-math]_ that is typeset as mathematical notation\n(display formula). The ``math_block`` element is generated during\nthe initial parse from a \"math\" directive.\n\n:Analogues:\n    ``math_block`` is analogous to a LaTeX \"equation*\" environment or\na MathML \"math\" element displayed as block-level element.\n```\n\n----------------------------------------\n\nTITLE: Configuring File Extensions for rst-mode\nDESCRIPTION: Configuration to automatically enable rst-mode for specified file extensions (.txt, .rst, .rest).\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_1\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n(setq auto-mode-alist\n         (append '((\"\\\\.txt\\\\'\" . rst-mode)\n                   (\"\\\\.rst\\\\'\" . rst-mode)\n                   (\"\\\\.rest\\\\'\" . rst-mode)) auto-mode-alist))\n```\n\n----------------------------------------\n\nTITLE: Docinfo Example in reStructuredText\nDESCRIPTION: This snippet presents an example of using a field list in reStructuredText to represent document metadata (docinfo). The field list is transformed into a ``docinfo`` element containing the author and contact information.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_21\n\nLANGUAGE: restructuredtext\nCODE:\n```\nDocinfo Example\n===============\n\n:Author: J. Random Hacker\n:Contact: jrh@example.com\n```\n\n----------------------------------------\n\nTITLE: Creating Equivalent Hyperlink References and Targets\nDESCRIPTION: Shows an equivalent way to define hyperlinks by separating the reference and target definitions in reStructuredText documents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_39\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee the `Python home page`_ for info.\n\nThis link_ is an alias to the link above.\n\n.. _Python home page: https://www.python.org\n.. _link: `Python home page`_\n```\n\n----------------------------------------\n\nTITLE: Substitution Definition with Replace Directive\nDESCRIPTION: Example showing how to use the replace directive for text substitution and abbreviation expansion in reStructuredText\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_21\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. |reST| replace:: reStructuredText\n\nYes, |reST| is a long word, so I can't blame anyone for wanting to\nabbreviate it.\n```\n\n----------------------------------------\n\nTITLE: David Goodger's Adopted Syntax for reStructuredText\nDESCRIPTION: David Goodger's adopted syntax introduces the use of '__' as a synonym for '.. __: '. This simplifies the syntax even further and emphasizes flexibility by offering equivalent constructions for anonymous targets.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n.. __:                        anonymous internal target\n.. __: http://somewhere       anonymous external target\n.. __: blahblah_              anonymous indirect target\n\n__                            anonymous internal target\n__ http://somewhere           anonymous external target\n__ blahblah_                  anonymous indirect target\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Styles in Config File\nDESCRIPTION: This section provides an example configuration format for defining custom styles in a configuration file recognized by the Python ConfigParser module for usage in odtwriter.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_5\n\nLANGUAGE: ini\nCODE:\n```\n[Formats]\ntextbody: mytextbody\nbulletitem: mybulletitem\nheading1: myheading1\n```\n\n----------------------------------------\n\nTITLE: Configuring Indentation of Literal Blocks\nDESCRIPTION: This code configures the indentation of the listings environment using the xleftmargin parameter. It sets a negative indentation value.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_33\n\nLANGUAGE: latex\nCODE:\n```\n\"\\lstset{xleftmargin=-2em}\"\n```\n\n----------------------------------------\n\nTITLE: Parameterized Substitutions in reStructuredText\nDESCRIPTION: This code snippet illustrates a proposed syntax for parameterized substitutions in reStructuredText. It shows how figure and page references could be dynamically generated using custom directives.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_61\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee |figure (figure name)| on |page (figure name)|.\n\n.. |figure (name)| figure-ref:: (name)\n.. |page (name)| page-ref:: (name)\n```\n\n----------------------------------------\n\nTITLE: Grouping Options in reStructuredText\nDESCRIPTION: This entry describes the 'option' and 'option_argument' elements. It explains how options are structured, including their relationships and expected rendering.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_47\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``option`` element groups an option string together with zero or\nmore option argument placeholders.  Note that reStructuredText_\ncurrently supports only one argument per option.\n```\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``option_argument`` element contains placeholder text for option\narguments.\n```\n\n----------------------------------------\n\nTITLE: Python Reference with Styled Text Using Replace\nDESCRIPTION: Demonstrates creating a reference with styled text using substitutions and the replace directive\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_22\n\nLANGUAGE: restructuredtext\nCODE:\n```\nI recommend you try |Python|_.\n\n.. |Python| replace:: Python, *the* best language around\n.. _Python: https://www.python.org/\n```\n\n----------------------------------------\n\nTITLE: Updating HTML Files for Docutils Website (Bash)\nDESCRIPTION: This command runs a shell script to generate HTML files from text files listed in htmlfiles.lst. It should be executed from the Docutils root directory.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/website.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd <DOCUTILS-ROOT>/docutils/\nsandbox/infrastructure/update-htmlfiles \\\nsandbox/infrastructure/htmlfiles.lst\n```\n\n----------------------------------------\n\nTITLE: Processing Command Line in Publisher\nDESCRIPTION: Calls process_command_line method if settings are not provided, passing various parameters including settings specifications and defaults.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/runtime-settings-processing.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\npublisher.process_command_line(…,\n    settings_spec, config_section, **defaults)\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Result of Decoration with Footer\nDESCRIPTION: This snippet shows the pseudo-XML representation of a document with a 'decoration' element containing a footer, which includes a paragraph with the generation date. This is generated when a datestamp option is supplied.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<document>\n    <decoration>\n        <footer>\n            <paragraph>\n                Generated on: 2002-08-20.\n    <paragraph>\n        A paragraph.\n```\n\n----------------------------------------\n\nTITLE: Unicode Character Substitution Example\nDESCRIPTION: Example of using the unicode directive for character substitutions including copyright and trademark symbols\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_23\n\nLANGUAGE: restructuredtext\nCODE:\n```\nCopyright |copy| 2003, |BogusMegaCorp (TM)| |---|\nall rights reserved.\n\n.. |copy| unicode:: 0xA9 .. copyright sign\n.. |BogusMegaCorp (TM)| unicode:: BogusMegaCorp U+2122\n   .. with trademark sign\n.. |---| unicode:: U+02014 .. em dash\n   :trim:\n```\n\n----------------------------------------\n\nTITLE: Document Header and Footer Directives\nDESCRIPTION: This snippet outlines the usage of 'header' and 'footer' directives that add header and footer content to documents, detailing example usage and their implications for document navigation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"The \"header\" and \"footer\" directives create document decorations,\\nuseful for page navigation, notes, time/datestamp, etc.  For example::\\n\\n    .. header:: This space for rent.\\n\\nThis will add a paragraph to the document header, which will appear at\\nthe top of the generated web page or at the top of every printed page.\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"These directives may be used multiple times, cumulatively.  There is\\ncurrently support for only one header and footer.\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Multiple Roles in Interpreted Text Syntax for reStructuredText\nDESCRIPTION: Shows two syntax proposals for combining multiple roles for a single piece of interpreted text in reStructuredText, which currently doesn't support nested inline markup.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_55\n\nLANGUAGE: rst\nCODE:\n```\n`interpreted text`:role1,role2:\n```\n\nLANGUAGE: rst\nCODE:\n```\n`interpreted text`:role1:role2:\n```\n\n----------------------------------------\n\nTITLE: Specifying Document Title with the reStructuredText Title Directive\nDESCRIPTION: This directive specifies the document title as metadata in reStructuredText, which appears in output formats like HTML as the browser window title. The directive overrides both the document's internal title and any existing title configuration settings. It requires a single argument that provides the title text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_32\n\n\n\n----------------------------------------\n\nTITLE: Raw LaTeX for List of Figures\nDESCRIPTION: This code generates a list of figures in LaTeX.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_35\n\nLANGUAGE: latex\nCODE:\n```\n\".. raw:: latex\n\n   \\listoffigures\"\n```\n\n----------------------------------------\n\nTITLE: Defining Transition Command with Stars\nDESCRIPTION: This example shows how to redefine the transition command in LaTeX to use three stars for visual transitions in the document, creating a stylized separation between sections or paragraphs.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_50\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\newcommand*{\\DUtransition}{\\centering{}*\\quad*\\quad*}\n```\n\n----------------------------------------\n\nTITLE: Defining section.elements Parameter Entity for Section Elements in XML DTD\nDESCRIPTION: Defines the section.elements parameter entity containing an OR-list of all section-equivalent elements. Used in structure.model and can be extended using additional.section.elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_72\n\nLANGUAGE: XML\nCODE:\n```\nsection_\n%additional.section.elements;\n```\n\n----------------------------------------\n\nTITLE: Custom Role Definition\nDESCRIPTION: Demonstrates creating and using a custom interpreted text role\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_29\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. role:: custom\n\nAn example of using :custom:`interpreted text`\n```\n\n----------------------------------------\n\nTITLE: Defining basic.atts Parameter Entity for Common Attributes in XML DTD\nDESCRIPTION: Defines the basic.atts parameter entity listing common attributes like ids, names, dupnames, source, and classes. Can be extended using the additional.basic.atts entity.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_63\n\nLANGUAGE: XML\nCODE:\n```\nids_      NMTOKENS  #IMPLIED\nnames_    CDATA     #IMPLIED\ndupnames_ CDATA     #IMPLIED\nsource_   CDATA     #IMPLIED\nclasses_  NMTOKENS  #IMPLIED\n%additional.basic.atts;\n```\n\n----------------------------------------\n\nTITLE: Defining footer Element in RestructuredText\nDESCRIPTION: The `footer` element is used as a container for content that appears at the bottom of pages or sections, possibly including processing information or custom content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_29\n\nLANGUAGE: reStructuredText\nCODE:\n```\n``footer``\n==========\n\nThe ``footer`` element is a container element whose contents are meant\nto appear at the bottom of a web page, or repeated at the bottom of\nevery printed page.  The ``footer`` element may contain processing\ninformation (datestamp, a link to Docutils_, etc.) as well as custom\ncontent.\n\nDetails\n-------\n\n:Category:\n    `Decorative Elements`_\n\n:Analogues:\n    ``footer`` is analogous to the HTML5 \"footer\" element.\n    There are no direct analogies to ``footer`` in HTML4 or DocBook.\n    Equivalents are typically constructed from primitives and/or\ngenerated by the processing system.\n\n:Parents:\n    Only the decoration_ element contains ``footer``.\n\n:Children:\n    ``footer`` elements may contain `body elements`_.\n\n    .. parsed-literal::\n\n        (`%body.elements;`_)+\n\n:Attributes:\n    The ``footer`` element contains only the `common attributes`_.\n\nExamples\n--------\n\nreStructuredText_ source::\n\n    A paragraph.\n\nComplete pseudo-XML_ result after parsing and applying transforms,\nassuming that the datestamp command-line option or configuration\nsetting has been supplied::\n\n    <document>\n        <decoration>\n            <footer>\n                <paragraph>\n                    Generated on: 2002-08-20.\n        <paragraph>\n            A paragraph.\n```\n\n----------------------------------------\n\nTITLE: Numbered Footnote Syntax Example\nDESCRIPTION: Demonstrates a third proposed footnote syntax using plain numbers with underscores and dots.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_38\n\nLANGUAGE: reStructuredText\nCODE:\n```\nFans of Terry Pratchett are perhaps more likely to use\nfootnotes 1_ in their own writings than other people\n2_.  Of course, in *general*, one only sees footnotes\nin academic or technical writing - it's use in fiction\nand letter writing is not normally considered good\nstyle 4_, particularly in emails (not a medium that\nlends itself to footnotes).\n\n_1. That is, little bits of referenced text at the\n    bottom of the page.\n_2. Because Terry himself does, of course 3_.\n_3. Although he has the distinction of being\n    *funny* when he does it, and his fans don't always\n    achieve that aim.\n_4. Presumably because it detracts from linear\n    reading of the text - this is, of course, the point.\n```\n\n----------------------------------------\n\nTITLE: Importing in Python\nDESCRIPTION: This code snippet shows how to import the Zen of Python in Python. It's a way to access the guiding principles of the language.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n\"import this\"\n```\n\n----------------------------------------\n\nTITLE: Custom Directive Example in reStructuredText\nDESCRIPTION: This example showcases a proposed \"directive\" directive that enables defining custom directives similar to roles. It allows associating classes or other properties with a short directive name, effectively acting as macros. The directive's content will be evaluated when it is referenced, offering flexibility in document structure.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_11\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. directive:: incr\n\n   .. class:: incremental\n\n.. incr::\n\n\"``.. incr::``\" above is equivalent to \"``.. class:: incremental``\".\n\nAnother example::\n\n.. directive:: printed-links\n\n   .. topic:: Links\n      :class: print-block\n\n      .. target-notes::\n         :class: print-inline\n```\n\n----------------------------------------\n\nTITLE: Setting Appearance of Option List Labels\nDESCRIPTION: This snippet shows how to set command options with a bold monospace font.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_36\n\nLANGUAGE: latex\nCODE:\n```\n\"\\newcommand{\\DUoptionlistlabel}{\\texttt{\\textbf{#1}} \\hfill}\"\n```\n\n----------------------------------------\n\nTITLE: Conditional Directives in reStructuredText\nDESCRIPTION: This snippet presents an idea for conditional directives (`writer-is`, `writer-is-not`) in reStructuredText, allowing content to be included or excluded based on the target writer. This feature would enable writer-specific content variations without relying solely on the `raw` directive, offering a more straightforward approach to adapting content for different output formats.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_12\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. writer-is:: text-only\n\n   ::\n\n       +----------+\n       |   SNMP   |\n       +----------+\n       |   UDP    |\n       +----------+\n       |    IP    |\n       +----------+\n       | Ethernet |\n       +----------+\n\n.. writer-is:: pdf\n\n   .. figure:: protocol_stack.eps\n\n.. writer-is-not:: text-only pdf\n\n   .. figure:: protocol_stack.png\n```\n\n----------------------------------------\n\nTITLE: Sphinx-style Section Adornments Configuration\nDESCRIPTION: Custom configuration for section adornment characters following Sphinx documentation style.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_2\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n((35 over-and-under 0) ; ?#\n   (42 over-and-under 0) ; ?*\n   (61 simple 0) ; ?=\n   (45 simple 0) ; ?-\n   (94 simple 0) ; ?^\n   (34 simple 0)) ; ?\"\n```\n\n----------------------------------------\n\nTITLE: Creating Metadata Elements in reStructuredText\nDESCRIPTION: This snippet defines the 'meta' element used for document metadata, drawing parallels with HTML. It specifies the structure, processing, and potential visibility in different output formats.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_45\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``meta`` element is a container for \"hidden\" document\nbibliographic data, or meta-data (data about the document).\nIt corresponds to HTML META tags.\n```\n\n----------------------------------------\n\nTITLE: Text Model Parameter Entity Definition\nDESCRIPTION: Parameter entity %text.model; represents mixed text content allowing parsed character data and inline elements, used across multiple document element types\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_74\n\nLANGUAGE: DTD\nCODE:\n```\n(#PCDATA | %inline.elements;)*\n```\n\n----------------------------------------\n\nTITLE: Using Anonymous Hyperlink References\nDESCRIPTION: This snippet covers how to create anonymous hyperlink references and targets in reStructuredText. It highlights the significance of maintaining the order of anonymous references and targets for proper functionality.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_25\n\nLANGUAGE: reStructuredText\nCODE:\n```\nSee `the web site of my favorite programming language`__.\n\n.. __: https://www.python.org\n\n__ https://www.python.org\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Header Example\nDESCRIPTION: Illustrates how to define a header using reStructuredText syntax. The `.. header::` directive creates a header element in the document structure, with the specified text as its content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_32\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\".. header:: This space for rent.\"\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Phrase Link with Double Quotes\nDESCRIPTION: Demonstrates how to create a phrase link in reStructuredText using double quotes to enclose the link text. This is one method proposed for creating phrase-links in reStructuredText, though it can be considered obtrusive.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_11\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\"like this\"_\n```\n\n----------------------------------------\n\nTITLE: Simple Table with Column Span in reStructuredText\nDESCRIPTION: This code shows a simple table with a column span in the header row. The column span is indicated using hyphens ('-') to underline the joined columns. It demonstrates the basic structure of a simple table with both column spans and regular columns.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_17\n\nLANGUAGE: rst\nCODE:\n```\n=====  =====  ======\\n   Inputs     Output\\n------------  ------\\n  A      B    A or B\\n=====  =====  ======\\nFalse  False  False\\nTrue   False  True\\nFalse  True   True\\nTrue   True   True\\n=====  =====  ======\n```\n\n----------------------------------------\n\nTITLE: Demonstrating reStructuredText Emphasis Markup\nDESCRIPTION: Shows the basic syntax for marking up emphasized text in reStructuredText using asterisks\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n``*emphasis*``\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Roles in Docutils and LaTeX\nDESCRIPTION: Examples of defining and styling custom interpreted text roles in Docutils and corresponding LaTeX macros. Shows how to create roles for small caps, subscript text, and multiple classes.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_10\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. role:: smallcaps\n\n:smallcaps:`Fourier` transformation\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\newcommand{\\DUrolesmallcaps}{\\textsc}\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. role:: sub(subscript)\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\newcommand{\\DUrolesub}{\\normalsize\\itshape}\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. role:: custom4\n   :class: argI argII arg_3\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\newcommand{\\DUroleargi}[1]{\\textsc}\n\\newcommand{\\DUroleargii}[1]{{\\large #1}}\n\\makeatletter\n\\@namedef{DUrolearg-3}{\\textbf}\n\\makeatother\n```\n\n----------------------------------------\n\nTITLE: Typearea Package for Page Layout\nDESCRIPTION: Example usage of typearea package to let it determine the type area.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_38\n\nLANGUAGE: latex\nCODE:\n```\n\"--documentoptions='a4paper,DIV=calc'\"\n```\n\n----------------------------------------\n\nTITLE: Adding Space Between Title and Subtitle in LaTeX\nDESCRIPTION: This snippet demonstrates how to increase the vertical space between the title and subtitle in LaTeX output. It involves modifying the spacing command to insert a specific amount of space (0.5em) between the title and subtitle lines.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_17\n\nLANGUAGE: latex\nCODE:\n```\n\n     -  \\\\ % subtitle%\n     +  \\\\[0.5em] % subtitle%\n\n```\n\n----------------------------------------\n\nTITLE: Default Role Setting\nDESCRIPTION: Shows how to change the default interpreted text role for a document\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_30\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. default-role:: subscript\n\nAn example of a `default` role.\n```\n\n----------------------------------------\n\nTITLE: Footnotes Syntax in reStructuredText\nDESCRIPTION: This snippet demonstrates the syntax for creating footnotes in reStructuredText, including manually numbered footnotes with labels and autonumbered footnotes with support for hyperlink targets. It covers how footnotes are numbered and referenced within a document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_19\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. [1] Body elements go here.\n```\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. [#note] This is the footnote labeled \\\"note\\\".\n```\n\n----------------------------------------\n\nTITLE: XML Attribute Definition for Colwidth\nDESCRIPTION: Column width specification used in colspec element, supporting both proportional and fixed measures.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_57\n\nLANGUAGE: XML\nCODE:\n```\ncolwidth\nAttribute type: CDATA\nDefault value: \"1*\"\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Phrase Link with Backquotes\nDESCRIPTION: Shows how to create a phrase link in reStructuredText using backquotes. This approach is less obtrusive and consistent with interpreted text, indicating that the phrase is a hyperlink.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_13\n\nLANGUAGE: restructuredtext\nCODE:\n```\n`like this`_\n```\n\n----------------------------------------\n\nTITLE: Setting Document Title and Subtitle in reStructuredText\nDESCRIPTION: Example showing how to specify a document's title and subtitle using section headers. The first two section levels collapse to become the document title and subtitle.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_52\n\nLANGUAGE: restructuredtext\nCODE:\n```\n=======\n Title\n=======\n----------\n Subtitle\n----------\n\nA paragraph.\n```\n\n----------------------------------------\n\nTITLE: Grid Table with potential issue in reStructuredText\nDESCRIPTION: This code demonstrates a potential issue in a grid table where a vertical bar character within a cell might be misinterpreted if it aligns with column boundaries. The table shows how the command `ls | more` within a cell can cause formatting problems.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_13\n\nLANGUAGE: rst\nCODE:\n```\n\"+--------------+----------+-----------+-----------+\\n| row 1, col 1 | column 2 | column 3  | column 4  |\\n+--------------+----------+-----------+-----------+\\n| row 2        | Use the command ``ls | more``.   |\\n+--------------+----------+-----------+-----------+\\n| row 3        |          |           |           |\\n+--------------+----------+-----------+-----------+\"\n```\n\n----------------------------------------\n\nTITLE: Setting Parser Configuration in Python Comments\nDESCRIPTION: Example of how parser configuration values could be set in initial comment blocks of Python modules for Docutils.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n# Docutils:setting=value\n```\n\n----------------------------------------\n\nTITLE: Pixel Size Configuration in LaTeX\nDESCRIPTION: LaTeX configuration for setting pixel dimensions to match CSS definition of 1/96 inch\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_46\n\nLANGUAGE: latex\nCODE:\n```\n\\pdfpxdimen=1in\n\\divide\\pdfpxdimen by 96 % 1/96 inch\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Inline External Hyperlink Proposal (2)\nDESCRIPTION: This code snippet showcases the second proposed syntax for reStructuredText inline external hyperlinks. It uses double underscores after the reference text, followed by the URL enclosed in angle brackets. It also demonstrates named references using a single underscore.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_15\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\"This is an anonymous reference__\\n       __<https://www.example.org/reference/> of one word\\n       (\\\"reference\\\").  Here is a `phrase reference`__\\n       __<https://www.example.org/phrase_reference/>.  `Named\\n       references`_ _<https://www.example.org/anonymous/> use single\\n       underscores.\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Apostrophe Handling in reStructuredText\nDESCRIPTION: This snippet shows how the smartquotes module handles apostrophes at the start of words in English. It demonstrates the incorrect 'education' of apostrophes and the recommended way to use them in the source text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/smartquotes.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n   | 'Twas brillig, and the slithy toves\n   | Did gyre and gimble in the wabe;\n   | All mimsy were the borogoves,\n   | And the mome raths outgrabe.\n```\n\n----------------------------------------\n\nTITLE: Creating Substitution References with Hyperlinks\nDESCRIPTION: Demonstrates how to combine substitution references with hyperlink functionality by adding a trailing underscore after the closing vertical bar.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_49\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is a combination |substitution and hyperlink reference|_.  In\naddition to being replaced, the replacement text or element will\nrefer to the \"substitution and hyperlink reference\" target.\n```\n\n----------------------------------------\n\nTITLE: Defining LaTeX Command with Special Characters in LaTeX\nDESCRIPTION: This snippet demonstrates how to define a LaTeX command with numbers in its name using \\csname and \\endcsname.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_3\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\expandafter\\newcommand\\csname gg1\\endcsname{Definition of gg1.}\n```\n\n----------------------------------------\n\nTITLE: External Raw File Inclusion\nDESCRIPTION: Demonstrates loading raw content from an external file using the file option\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_27\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. raw:: html\n   :file: inclusion.html\n```\n\n----------------------------------------\n\nTITLE: Defining backrefs.att Parameter Entity for Backlinks in XML DTD\nDESCRIPTION: Defines the backrefs.att parameter entity containing the backrefs attribute, a space-separated list of id references for backlinks. Used by citation, footnote, and system_message elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_62\n\nLANGUAGE: XML\nCODE:\n```\nbackrefs_  %idrefs.type;    #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Footnote Example\nDESCRIPTION: Illustrates how to add footnotes in reStructuredText. The footnote is declared using \".. [number]\" and referenced in the text using \"[number]_\"\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_16\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is a footnote [1]_.\n\n    .. [1] Footnote text goes here.\n```\n\n----------------------------------------\n\nTITLE: Using Substitution References for User Directives\nDESCRIPTION: This snippet showcases the syntax for creating substitution references for user directives in the text. It demonstrates how to link names to user identifiers, enhancing document indexing and hyperlinking capabilities.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_27\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |Michael| user:: mjones\n.. |Jon|     user:: jhl\n```\n\n----------------------------------------\n\nTITLE: Using the wrap Class for Image Text Wrapping\nDESCRIPTION: This example shows how to use the 'wrap' class provided by odtwriter to wrap text around images when generating ODF documents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_6\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. class:: wrap\n.. image:: images/flower01.png\n    :alt: A bright yellow flower\n    :height: 55\n    :width: 60\n```\n\n----------------------------------------\n\nTITLE: Using Math Role for Inline Formulas in reStructuredText\nDESCRIPTION: Shows how to use the 'math' role to include inline mathematical formulas using LaTeX syntax without math delimiters.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/roles.txt#2025-04-19_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe area of a circle is :math:`A_\\text{c} = (\\pi/4) d^2`.\n```\n\n----------------------------------------\n\nTITLE: Checking out Docutils with SVN\nDESCRIPTION: Command to checkout the Docutils source tree and sandboxes using SVN from SourceForge\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/repository.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsvn checkout https://svn.code.sf.net/p/docutils/code/trunk docutils-code\n```\n\n----------------------------------------\n\nTITLE: Defining CSV Options\nDESCRIPTION: This snippet describes various options used for handling CSV data input in a Python application. It specifies the expected types for each option, such as string and integer, and outlines the functionality of each parameter for data parsing and table generation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"file\" : string (newlines removed)\\n    The local filesystem path to a CSV data file.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"header\" : CSV data\\n    Supplemental data for the table header, added independently of and\\n    before any \"header-rows\" from the main CSV data.  Must use the\\n    same CSV format as the main CSV data.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"header-rows\" : integer\\n    The number of rows of CSV data to use in the table header.\\n    Defaults to 0.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"keepspace\" : flag (empty)\\n    Treat whitespace immediately following the delimiter as\\n    significant.  The default is to ignore such whitespace.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"quote\" : char\\n    A one-character string[#ASCII-char]_ used to quote elements\\n    containing the delimiter or which start with the quote\\n    character.  Defaults to \"\" (quote).  May be specified as a\\n    Unicode code point; see the unicode_ directive for syntax\\n    details.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"stub-columns\" : integer\\n    The number of table columns to use as stubs (row titles, on the\\n    left).  Defaults to 0.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"url\" : string (whitespace removed)\\n    An Internet URL reference to a CSV data file.\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"widths\" : integer [integer...] or \"auto\"\\n    A list of relative column widths.\\n    The default is equal-width columns (100%/#columns).\\n\\n    \"auto\" delegates the determination of column widths to the backend\\n    (LaTeX, the HTML browser, ...).\\n\\n\"\"\"\n```\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"width\" : `length`_ or `percentage`_\\n    Sets the width of the table to the specified length or percentage\\n    of the line width.  If omitted, the renderer determines the width\\n    of the table based on its contents or the column \"widths\".\\n\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Document Header in reStructuredText\nDESCRIPTION: This snippet demonstrates how to create a header for a reStructuredText document, including author, contact, date, revision, and copyright information.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/index.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n:Author: David Goodger\n:Contact: docutils-develop@lists.sourceforge.net\n:Date: $Date$\n:Revision: $Revision$\n:Copyright: This document has been placed in the public domain.\n```\n\n----------------------------------------\n\nTITLE: Target Footnotes Directive\nDESCRIPTION: This snippet defines the 'target-notes' directive used for creating and referencing footnotes in documents. It outlines the directive's options and potential usage in managing footnotes.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"Target footnotes handle the references and creation of footnotes\\nin the document, ensuring a cohesive linking between footnotes and\\ntheir usages.\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Custom LaTeX Command for Block-Level Elements in LaTeX\nDESCRIPTION: This snippet defines a new LaTeX command to style block-level elements with a 'custom' class using small caps font.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_1\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\newcommand*{\\DUCLASScustom}{\\scshape}\n```\n\n----------------------------------------\n\nTITLE: Defining LaTeX Command with Special Characters Using @namedef in LaTeX\nDESCRIPTION: This snippet shows an alternative way to define a LaTeX command with special characters in its name using \\@namedef.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_4\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\makeatletter\n\\@namedef{DUCLASSadmonition-test}{…}\n\\makeatother\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for Sandbox Projects in ReStructuredText\nDESCRIPTION: Recommended directory structure for experimental components in the Docutils sandbox. Shows the layout for both collaborative projects and temporary personal spaces.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/policies.txt#2025-04-19_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\nsandbox/\n    project_name/ # For a collaborative project.\n        README.txt  # Describe the requirements, purpose/goals, usage,\n                    # and list the maintainers.\n        docs/\n            ...\n        component.py    # The component is a single module.\n                        # *OR* (but *not* both)\n        component/      # The component is a package.\n            __init__.py  # Contains the Reader/Writer class.\n            other1.py    # Other modules and data files used\n            data.txt     # by this component.\n            ...\n        test/       # Test suite.\n            ...\n        tools/      # For front ends etc.\n            ...\n        setup.py    # Install the component code and tools/ files\n                    # into the right places.\n    userid/       # For *temporary* personal space.\n```\n\n----------------------------------------\n\nTITLE: Simple Table with Continuation Lines in reStructuredText\nDESCRIPTION: This code illustrates a simple table with continuation lines, blank lines within multi-line rows, and a new row with no text in the first column (using a backslash escape). It highlights the interpretation of blank lines and the limitations of the first column in simple tables.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_18\n\nLANGUAGE: rst\nCODE:\n```\n=====  =====\\ncol 1  col 2\\n====   =====\\n1      Second column of row 1.\\n2      Second column of row 2.\\n       Second line of paragraph.\\n3      - Second column of row 3.\\n\\n       - Second item in bullet\\n         list (row 3, column 2).\\n\\      Row 4; column 1 will be empty.\\n=====  =====\n```\n\n----------------------------------------\n\nTITLE: Example of Generating a Static Table of Contents\nDESCRIPTION: This directive shows how to generate a static table of contents in an ODF document using odtwriter, with parameters to customize its behavior.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_8\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..contents::\n```\n\n----------------------------------------\n\nTITLE: Note Admonition with Multiple Elements\nDESCRIPTION: Shows how to create a note admonition containing multiple body elements including paragraphs and bullet lists.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. note:: This is a note admonition.\n   This is the second line of the first paragraph.\n\n   - The note contains all indented body elements\n     following.\n   - It includes this bullet list.\n```\n\n----------------------------------------\n\nTITLE: SVN Version Tagging\nDESCRIPTION: Command to create a new SVN tag for the release version\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/release.txt#2025-04-19_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsvn copy svn+ssh://grubert@svn.code.sf.net/p/docutils/code/trunk/docutils \\\n         svn+ssh://grubert@svn.code.sf.net/p/docutils/code/tags/docutils-0.## \\\n         -m \"tagging release 0.##\"\n```\n\n----------------------------------------\n\nTITLE: ODT Writer Configuration File Example\nDESCRIPTION: Example configuration file section for the ODT writer, showing how to specify a stylesheet in the configuration rather than on the command line.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n[odf_odt writer]\nstylesheet: styles1.odt\n```\n\n----------------------------------------\n\nTITLE: LaTeX Preamble Example\nDESCRIPTION: This code snippet shows an example of a LaTeX preamble configuration for the latex2e writer. It loads standard PDF fonts (Times, Helvetica, Courier) using \\usepackage commands.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_6\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{mathptmx} % Times\n\\usepackage[scaled=.90]{helvet}\n\\usepackage{courier}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Sidebar Element in reStructuredText\nDESCRIPTION: Example showing how to create a sidebar element with optional title and subtitle using the sidebar directive. The sidebar element is a non-recursive section-like construct that appears at the top level.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_50\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. sidebar:: Optional Title\n   :subtitle: If Desired\n\n   Body.\n```\n\n----------------------------------------\n\nTITLE: Changing Font in LaTeX Document\nDESCRIPTION: This snippet showcases examples of changing fonts in a LaTeX document by using specific packages. It allows for greater control over typography to enhance the document's visual aesthetic and readability, catering to different font styles for various elements. Required packages: `lmodern`, `mathptmx`, `helvet`, etc.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_16\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{lmodern}\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{mathptmx}            % Times for serif and math\n\\usepackage[scaled=.90]{helvet}  % downscaled Helvetica for sans serif\n\\usepackage{courier}             % Courier for teletype (mono-space)\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\renewcommand{\\ttdefault}{txtt}\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\setmainfont{DejaVu Serif}\n\\setsansfont{DejaVu Sans}\n\\setmonofont[HyphenChar=None]{DejaVu Sans Mono}\n```\n\n----------------------------------------\n\nTITLE: reStructuredText External Hyperlink Example\nDESCRIPTION: Demonstrates an external hyperlink, consisting of a one-word reference, declaration of the target location and the target itself.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_18\n\nLANGUAGE: restructuredtext\nCODE:\n```\nHere is a one-word_ external hyperlink.\n\n    .. _one-word: http://www.123.xyz\n```\n\n----------------------------------------\n\nTITLE: Footnote Marks in Normal Font Size\nDESCRIPTION: This example shows how to display footnote marks in normal font size instead of superscript by using the scrextend package and the deffootnote command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_22\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{scrextend} % not required with KOMA-script document classes\n\\deffootnote{1em}{1em}{\\thefootnotemark\\ }\"\n```\n\n----------------------------------------\n\nTITLE: Defining Document Structure Parameter Entity\nDESCRIPTION: Parameter entity %structure.model; defines the hierarchical structure of documents, allowing nested body elements, topics, sidebars, and sections with specific transition constraints\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_73\n\nLANGUAGE: DTD\nCODE:\n```\n( ( (%body.elements; | topic_ | sidebar_)+, transition_? )*,\n  ( (%section.elements;), (transition_?, (%section.elements;))* )? )\n```\n\n----------------------------------------\n\nTITLE: Creating Document Status in reStructuredText\nDESCRIPTION: Example demonstrating how to set a document's status using field list syntax. The status element is used within document info to indicate document state.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_51\n\nLANGUAGE: restructuredtext\nCODE:\n```\nDocument Title\n==============\n\n:Status: Work In Progress\n```\n\n----------------------------------------\n\nTITLE: Alternative Anonymous Hyperlink Definition\nDESCRIPTION: Shows how to define anonymous hyperlinks using separate reference and target definitions with double underscores.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_41\n\nLANGUAGE: restructuredtext\nCODE:\n```\n`RFC 2396`__ and `RFC 2732`__ together define the syntax of URIs.\n\n__ https://www.rfc-editor.org/rfc/rfc2396.txt\n__ https://www.rfc-editor.org/rfc/rfc2732.txt\n```\n\n----------------------------------------\n\nTITLE: Removing page height and width from style.odt using rst2odt_prepstyles.py\nDESCRIPTION: This snippet demonstrates how to use the `rst2odt_prepstyles.py` script to remove page height and width properties from a styles.odt file. This is necessary when you want `odtwriter` to automatically insert a default page size using `paperconf`. The script is executed from the command line, taking the styles.odt file as input.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_14\n\nLANGUAGE: Shell\nCODE:\n```\n$ rst2odt_prepstyles.py styles.odt\n```\n\n----------------------------------------\n\nTITLE: Defining References and Footnotes in reStructuredText\nDESCRIPTION: This snippet demonstrates the syntax for creating references and footnotes in a reStructuredText formatted document. It includes both simple URL references and more complex footnotes that contain additional text and sources, showcasing how the format improves clarity and localizes references. The intended outcome is to create an organized section that allows easy revision and reading of the PEP.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nAbstract\n\n    This PEP proposes adding frungible doodads [1] to the core.\n    It extends PEP 9876 [2] via the BCA [3] mechanism.\n\n...\n\nReferences and Footnotes\n======================\n\n.. _frungible doodads: http://www.example.org/\n\n.. [#pep9876] PEP 9876, Let's Hope We Never Get Here\n\n.. [#] \"Bogus Complexity Addition\"\n```\n\n----------------------------------------\n\nTITLE: Uploading to Production PyPI\nDESCRIPTION: Command to upload the distribution packages to the main PyPI repository\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/release.txt#2025-04-19_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npython3 -m twine upload  dist/docutils-0.##*\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Tables in reStructuredText\nDESCRIPTION: Example demonstrating how to create a basic table structure using grid layout. Tables can contain multiple rows and columns with cell content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_53\n\nLANGUAGE: restructuredtext\nCODE:\n```\n======== ====\n bread   £2\n butter  £30\n======== ====\n```\n\n----------------------------------------\n\nTITLE: Setting Caption Justification in LaTeX\nDESCRIPTION: This snippet demonstrates how to customize caption justification in LaTeX using the caption package. It sets the justification to left-aligned with no single line check, enhancing readability in documents featuring figures and tables. Required packages: `caption`.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_14\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{caption}\n\\captionsetup{justification=raggedleft,singlelinecheck=false}\n```\n\n----------------------------------------\n\nTITLE: Grid Table with spacing fix in reStructuredText\nDESCRIPTION: This code shows one solution for preventing unintended formatting issues in a grid table caused by vertical bars within cells. By adding a space before the text, we shift it and avoid accidental alignment with column boundaries.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_14\n\nLANGUAGE: rst\nCODE:\n```\n\"+--------------+----------+-----------+-----------+\\n| row 1, col 1 | column 2 | column 3  | column 4  |\\n+--------------+----------+-----------+-----------+\\n| row 2        |  Use the command ``ls | more``.  |\\n+--------------+----------+-----------+-----------+\\n| row 3        |          |           |           |\\n+--------------+----------+-----------+-----------+\"\n```\n\n----------------------------------------\n\nTITLE: Redefining DUfootnotetext for Hanging Indent\nDESCRIPTION: This code snippet redefines the \\DUfootnotetext command to insert a hanging indent. It modifies the footnote text to include a specified hanging indentation value.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_21\n\nLANGUAGE: latex\nCODE:\n```\n\"\\newcommand{\\DUfootnotetext}[4]{%\n  \\begingroup%\n  \\renewcommand{\\thefootnote}{%\n    \\protect\\raisebox{1em}{\\protect\\hypertarget{#1}{}}%\n    \\protect\\hyperlink{#2}{#3}}%\n    \\footnotetext{\\hangindent=2em #4}%\n  \\endgroup%\n}\"\n```\n\n----------------------------------------\n\nTITLE: Inserting a Table of Contents in reStructuredText\nDESCRIPTION: This snippet describes how to insert a generated table of contents in a reStructuredText document using the Emacs command `rst-toc-insert` with the keyboard shortcut `C-c C-t C-i`. It explains placing the cursor at the desired insertion point and the optional use of a numeric prefix argument to control TOC depth.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\n.. contents::\n  ..\n      1  Introduction\n      2  Debugging Solution Patterns\n        2.1  Recognize That a Bug Exists\n        2.2  Subdivide and Isolate\n        2.3  Identify and Verify Assumptions\n        2.4  Use a Tool for Introspection\n        2.5  Change one thing at a time\n        2.6  Learn about the System\n      3  Understanding a bug\n      4  The Basic Steps in Debugging\n      5  Attitude\n        5.1  Bad Feelings\n        5.2  Good Feelings\n      6  References\n```\n\n----------------------------------------\n\nTITLE: Configuring System Clipboard Compatibility in Emacs\nDESCRIPTION: This snippet configures the clipboard coding system in Emacs to use 'mac-roman', facilitating better cooperation between the system clipboard and Emacs' kill ring, thus enhancing text manipulation tasks.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_18\n\nLANGUAGE: emacs-lisp\nCODE:\n```\n(set-clipboard-coding-system 'mac-roman)\n```\n\n----------------------------------------\n\nTITLE: Current and Proposed Citation Syntax\nDESCRIPTION: Shows the current syntax for citations (using footnote syntax) and a proposed alternative that removes the explicit markup indicator.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_35\n\nLANGUAGE: rst\nCODE:\n```\nCurrent syntax (footnote syntax):\n.. [GVR2001] Python Documentation; van Rossum, Drake, et al.;\n   https://www.python.org/doc/\n\nPossible new syntax:\n_[GVR2001] Python Documentation; van Rossum, Drake, et al.;\n           https://www.python.org/doc/\n\n_[DJG2002]\n    Docutils: Python Documentation Utilities project; Goodger\n    et al.; https://docutils.sourceforge.io/\n```\n\n----------------------------------------\n\nTITLE: Section Hierarchy XML Example in reStructuredText\nDESCRIPTION: Demonstration of nested section structures with titles and paragraphs in XML representation\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_49\n\nLANGUAGE: XML\nCODE:\n```\n<document>\n    <section ids=\"title-1\" names=\"title 1\">\n        <title>Title 1</title>\n        <paragraph>Paragraph 1.</paragraph>\n        <section ids=\"title-2\" names=\"title 2\">\n            <title>Title 2</title>\n            <paragraph>Paragraph 2.</paragraph>\n\n```\n\n----------------------------------------\n\nTITLE: Advanced rst2odt.py Usage Examples\nDESCRIPTION: Examples showing rst2odt.py with additional command line options, including source URL, generator flag, and custom stylesheet specification.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ rst2odt.py -s -g python_comments.txt python_comments.odt\n\n$ rst2odt.py --source-url=odtwriter.txt --generator \\\n    --stylesheet=/myconfigs/styles.odt odtwriter.txt odtwriter.odt\n```\n\n----------------------------------------\n\nTITLE: Referencing URL and Footnotes with Inline Links\nDESCRIPTION: This snippet illustrates how to create inline links in reStructuredText for footnotes and references. By employing named references, it allows multiple citations to point to the same footnote or URL without duplicating definitions elsewhere in the text. The design aims to enhance the usability of references and footnotes, especially when generating HTML outputs where hyperlinks are utilized for navigation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nIt extends PEP 9876 [PEP9876]_ ...\n\n.. [PEP9876] PEP 9876, Let's Hope We Never Get Here\n```\n\n----------------------------------------\n\nTITLE: Processing Programmatic Settings in Publisher\nDESCRIPTION: Calls process_programmatic_settings method to handle settings for non-command-line applications.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/runtime-settings-processing.txt#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\npublisher.process_programmatic_settings(\n    settings_spec, settings_overrides, config_section)\n```\n\n----------------------------------------\n\nTITLE: Using Literal Blocks in reStructuredText with Double Colon Syntax\nDESCRIPTION: Demonstrates how to create a literal block in reStructuredText using the double colon (::) at the end of a paragraph, followed by indented text that will be preserved verbatim.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nSection Title\n-------------\n\n::\n\n    print \"this is example literal\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Document Info Width in LaTeX\nDESCRIPTION: Example of configuring the width of the document info table in LaTeX output from Docutils. Shows how to set the width to 70% of the text width.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_12\n\nLANGUAGE: latex\nCODE:\n```\n\\newlength{\\DUdocinfowidth}\n\\setlength{\\DUdocinfowidth}{0.7\\textwidth}\n```\n\n----------------------------------------\n\nTITLE: Defining External Links in reStructuredText\nDESCRIPTION: This snippet shows how to define external links in reStructuredText using the link reference format. It includes links to various Python-related resources and projects.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/introduction.txt#2025-04-19_snippet_3\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. _Zope Corporation: http://www.zope.com\n.. _ZOPE: https://www.zope.dev\n.. _reStructuredText SourceForge project:\n   http://structuredtext.sourceforge.net/\n.. _pythondoc: http://starship.python.net/crew/danilo/pythondoc/\n.. _project history file: ../../../HISTORY.html\n.. _PEP 287: ../../peps/pep-0287.html\n.. _Docstring Processing System framework: ../../peps/pep-0256.html\n.. _comp.lang.python: news:comp.lang.python\n.. _Python-dev: https://mail.python.org/pipermail/python-dev/\n.. _Docstring Processing System: http://docstring.sourceforge.net/\n.. _master PEP repository: https://peps.python.org/\n```\n\n----------------------------------------\n\nTITLE: Disabling Hyperlinks\nDESCRIPTION: This code shows how to completely suppress hyper-linking (e.g. for printing).\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_26\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{nohyperref,url}\n\\urlstyle{same}\"\n```\n\n----------------------------------------\n\nTITLE: Recommended Compact Function Docstring Format in Python\nDESCRIPTION: A proposed compact format for function docstrings using a new syntax for definition lists within field lists, significantly reducing whitespace.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/enthought-plan.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef max_gas(temperature, pressure, api, specific_gravity=.56):\n    \"\"\"\n    Computes the maximum dissolved gas in oil using Batzle and\n    Wang (1992).\n\n    :Parameters:\n        : temperature : sequence :: Temperature in degrees Celsius\n        : pressure : sequence :: Pressure in MPa\n        : api : sequence :: Stock tank oil API\n        : specific_gravity : sequence :: Specific gravity of gas at\n          STP, default is .56\n    :Returns:\n        : max_gor : sequence :: Maximum dissolved gas in liters/liter\n    :Description: This estimate is based on equations given by\n        Mavko, Mukerji, and Dvorkin, (1998, pp. 218-219, or 2003,\n        p. 236) obtained originally from Batzle and Wang (1992).\n    \"\"\"\n    code...\n```\n\n----------------------------------------\n\nTITLE: Displaying rst2odt.py Help Information\nDESCRIPTION: Command to display usage information and command line options for the rst2odt.py tool.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ rst2odt.py --help\n```\n\n----------------------------------------\n\nTITLE: Defining anonymous.att Parameter Entity for Unnamed Hyperlinks in XML DTD\nDESCRIPTION: Defines the anonymous.att parameter entity containing the anonymous attribute used for unnamed hyperlinks. Employed by reference and target elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_60\n\nLANGUAGE: XML\nCODE:\n```\nanonymous %yesorno; #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: Defining reStructuredText Footnotes and References\nDESCRIPTION: This snippet demonstrates how to create footnotes and references in reStructuredText, including links to external resources and PEP documents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/introduction.txt#2025-04-19_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. [#spec-2] The second draft of the spec:\n\n   - `An Introduction to reStructuredText`__\n   - `Problems With StructuredText`__\n   - `reStructuredText Markup Specification`__\n   - `Python Extensions to the reStructuredText Markup\n     Specification`__\n\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001858.html\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001859.html\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001860.html\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001861.html\n\n.. [#peps-1] First drafts of the PEPs:\n\n   - `PEP 256: Docstring Processing System Framework`__\n   - `PEP 258: DPS Generic Implementation Details`__\n   - `PEP 257: Docstring Conventions`__\n\n   Current working versions of the PEPs can be found in\n   https://docutils.sourceforge.io/docs/peps/, and official versions\n   can be found in the `master PEP repository`_.\n\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001855.html\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001856.html\n   __ https://mail.python.org/pipermail/doc-sig/2001-June/001857.html\n```\n\n----------------------------------------\n\nTITLE: Converting reStructuredText to LaTeX with rst2latex.py\nDESCRIPTION: Command-line tool to convert a reStructuredText file into LaTeX output for further processing with latex or pdflatex\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nrst2latex.py test.txt test.tex\n```\n\n----------------------------------------\n\nTITLE: Customizing LaTeX Admonitions in Docutils\nDESCRIPTION: Examples of customizing the appearance of admonitions in LaTeX output from Docutils. Shows how to create a lighter layout without a frame, print admonitions in the margin, and use a specific admonition as a margin note.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_9\n\nLANGUAGE: latex\nCODE:\n```\n\\newenvironment{DUadmonition}%\n  {\\begin{quote}}\n  {\\end{quote}}\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{environ}\n\\NewEnviron{DUadmonition}{\\marginpar{\\BODY}}\n```\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{environ}\n\\newcommand{\\DUCLASSnote}{\n  \\RenewEnviron{DUadmonition}{\\marginpar{\\BODY}}%\n  \\renewcommand{\\DUtitle}[1]{}% suppress title (\"Note\")\n}\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Substitution Reference\nDESCRIPTION: This code snippet demonstrates the use of a substitution reference in reStructuredText. The text '|biohazard|' will be replaced with the content defined in the corresponding substitution definition.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_10\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThe |biohazard| symbol...\n```\n\n----------------------------------------\n\nTITLE: Auto-Enumerated Lists Implementation\nDESCRIPTION: Describes the proposal for auto-numbering in enumerated lists, allowing automatic handling of list order without manual renumbering. The pattern uses symbols like '#' to indicate numbering. The description includes how to maintain sequence order and the benefits such as easier list management.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\n#. Item 1.\n#. Item 2.\n#. Item 3.\n\n```\n\nLANGUAGE: plaintext\nCODE:\n```\na) Item a.\n#) Item b.\n#) Item c.\n\n```\n\n----------------------------------------\n\nTITLE: Redefining LaTeX Environment for Bullet Lists in LaTeX\nDESCRIPTION: This snippet redefines the itemize environment to use enumeration for bullet lists with the 'enumerateitems' class.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_2\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\newcommand*{\\DUCLASSenumerateitems}{%\n  \\renewenvironment{itemize}{\\begin{enumerate}}%\n                            {\\end{enumerate}}%\n}\n```\n\n----------------------------------------\n\nTITLE: Table Format 1: Grid Tables with Visual Borders in reStructuredText\nDESCRIPTION: Shows the grid table format in reStructuredText using ascii characters to form a visual border structure. This format supports row and column spans and is compatible with Emacs table mode.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n+------------+------------+------------+--------------+\n|  Header 1  |  Header 2  |  Header 3  |  Header 4    |\n+============+============+============+==============+\n|  Column 1  |  Column 2  | Column 3 & 4 span (Row 1) |\n+------------+------------+------------+--------------+\n|    Column 1 & 2 span    |  Column 3  | - Column 4   |\n+------------+------------+------------+ - Row 2 & 3  |\n|      1     |      2     |      3     | - span       |\n+------------+------------+------------+--------------+\n```\n\n----------------------------------------\n\nTITLE: Custom Footnote with Hanging Indent (KOMA-script)\nDESCRIPTION: Example showing how to set footnote text with a hanging indent using KOMA-script classes.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_19\n\nLANGUAGE: latex\nCODE:\n```\n\"--documentclass=scrartcl\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Quote Handling in German (Swiss) using reStructuredText\nDESCRIPTION: This snippet shows how the smartquotes module handles quotes and apostrophes in German (Swiss dialect). It demonstrates the use of guillemets and the potential mishandling of apostrophes in non-English languages.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/smartquotes.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n   .. class:: language-de-CH\n\n   \"Er sagt: 'Ich fass' es nicht.'\"\n```\n\n----------------------------------------\n\nTITLE: Escaping Underscores in URIs\nDESCRIPTION: Demonstrates how to escape underscores in URIs to prevent them from being interpreted as hyperlink references in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_42\n\nLANGUAGE: restructuredtext\nCODE:\n```\nUse the `source <parrots.txt\\_>`__.\n```\n\n----------------------------------------\n\nTITLE: Customizing Table of Contents Appearance in reStructuredText\nDESCRIPTION: This segment explains how to personalize the appearance of the table of contents by adjusting various customization variables in Emacs, specifically `rst-toc-indent`, `rst-toc-insert-style`, and `rst-toc-insert-max-level`.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\nsetq rst-toc-indent <value>\nsetq rst-toc-insert-style <value>\nsetq rst-toc-insert-max-level <value>\n```\n\n----------------------------------------\n\nTITLE: Using LaTeX Citations for References\nDESCRIPTION: Describes how citation references separated by spaces are combined into a single citation group when the use-latex-citations option is enabled. This results in a combined citation reference in the LaTeX output.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_52\n\nLANGUAGE: LaTeX\nCODE:\n```\n[cite1]_ [cite2]_\n```\n\n----------------------------------------\n\nTITLE: Applying a Predefined Style to a Container in reStructuredText\nDESCRIPTION: This snippet demonstrates how to apply a predefined style (``rststyle-heading2``) to the content within a container in reStructuredText. The ``.. container::`` directive is used to group the content, and the specified style is applied to each paragraph or line within the container.  This allows for consistent formatting across the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_9\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. container:: heading2\n\n   Line 1 of container.\n\n   Line 2 of container.\n```\n\n----------------------------------------\n\nTITLE: Implementing Horizontal Rule as Division XML\nDESCRIPTION: This XML snippet demonstrates an initial attempt to implement horizontal rules as 'divisions' in a ReStructuredText document. It showcases the introduction of a division element to separate paragraphs, illustrating the concept of sections without hierarchical titles. There are no specific dependencies for this XML representation as it is conceptual.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n       <document>\n           <section names=\"document\">\n               <title>\n                   Document\n               <paragraph>\n                   Paragraph 1\n               <division>\n                   <paragraph>\n                       Paragraph 2\n```\n\n----------------------------------------\n\nTITLE: List-Driven Table Syntax Explanation\nDESCRIPTION: Explains how to use different list layouts, including bullet lists, field lists, and enumerated lists, to create structured tables. This method allows authors to define table headers, define column/row orientation, and handle column widths and spans. It shows examples of syntax and discusses the trade-offs of each method.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\n.. list-table::\n\n  * - Treat\n    - Quantity\n    - Description\n  * - Albatross!\n    - 299\n    - On a stick!\n  * - Crunchy Frog!\n    - 1499\n    - If we took the bones out, it wouldn't be crunchy,\n      now would it?\n\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n.. field-list-table::\n   :headrows: 1\n\n   - :treat: Treat\n     :quantity: Quantity\n     :descr: Description\n\n   - :treat: Albatross!\n     :quantity: 299\n     :descr: On a stick!\n\n   - :treat: Crunchy Frog!\n     :quantity: 1499\n     :descr: If we took the bones out, it wouldn't be\n             crunchy, now would it?\n\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n.. list-table::\n\n    * 1. Treat\n      2. Quantity\n      3. Description\n    * 1. Albatross!\n      2. 299\n      3. On a stick!\n\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n.. list-table::\n    :headrows: 1\n\n    Treat\n        :quantity: Quantity\n        :descr: Description\n    Albatross!\n        :quantity: 299\n        :descr: On a stick!\n\n```\n\n----------------------------------------\n\nTITLE: Custom Title Reference Role\nDESCRIPTION: LaTeX configuration for customizing title reference styling with bold monospace font\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_45\n\nLANGUAGE: latex\nCODE:\n```\n\\newcommand{\\DUroletitlereference}[1]{\\texttt{\\textbf{#1}}}\n```\n\n----------------------------------------\n\nTITLE: Setting Local Variables for Text Editing in reStructuredText\nDESCRIPTION: This snippet demonstrates how to set local variables for text editing in reStructuredText, including mode settings, indentation preferences, and text formatting options.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/introduction.txt#2025-04-19_snippet_4\n\nLANGUAGE: reStructuredText\nCODE:\n```\n..\n   Local Variables:\n   mode: indented-text\n   indent-tabs-mode: nil\n   sentence-end-double-space: t\n   fill-column: 70\n   End:\n```\n\n----------------------------------------\n\nTITLE: Compound Paragraph Directive Example\nDESCRIPTION: Illustrates the use of the compound directive to create a logical paragraph containing multiple physical body elements\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_13\n\nLANGUAGE: rst\nCODE:\n```\n.. compound::\n\n   The 'rm' command is very dangerous.  If you are logged\n   in as root and enter ::\n\n       cd /\n       rm -rf *\n\n   you will erase the entire contents of your file system.\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom CSS Class in reStructuredText\nDESCRIPTION: This snippet demonstrates how to apply custom CSS classes to a block of content in reStructuredText.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/index.txt#2025-04-19_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. class:: narrow run-in\n```\n\n----------------------------------------\n\nTITLE: Illustrating Docutils Element Hierarchy in reStructuredText\nDESCRIPTION: A simplified diagram showing the hierarchy of elements in the Docutils document tree structure. This ASCII diagram illustrates how elements can contain other elements, with structural relationships and nesting patterns.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n+--------------------------------------------------------------------+\n| document  [may begin with a title, subtitle, decoration, docinfo]  |\n|                             +--------------------------------------+\n|                             | sections  [each begins with a title] |\n+-----------------------------+-------------------------+------------+\n| [body elements:]                                      | (sections) |\n|         | - literal | - lists  |       | - hyperlink  +------------+\n|         |   blocks  | - tables |       |   targets    |\n| para-   | - doctest | - block  | foot- | - sub. defs  |\n| graphs  |   blocks  |   quotes | notes | - comments   |\n+---------+-----------+----------+-------+--------------+\n| [text]+ | [text]    | (body elements)  | [text]       |\n| (inline +-----------+------------------+--------------+\n| markup) |\n+---------+\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Anonymous Hyperlink Syntax in reStructuredText\nDESCRIPTION: This snippet shows different syntax options considered for anonymous hyperlinks in reStructuredText, including using curly braces, double underscores, and single underscores.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\nSearch the `Python DOC-SIG mailing list archives`{}_.\n\n.. _: https://mail.python.org/pipermail/doc-sig/\n\nSearch the `Python DOC-SIG mailing list archives`__.\n\n.. __: https://mail.python.org/pipermail/doc-sig/\n\nSearch the `Python DOC-SIG mailing list archives`_.\n\n.. _: https://mail.python.org/pipermail/doc-sig/\n\nHyperlinks: anonymous_, named_, and another anonymous_.\n\n.. _named: named\n.. _: anonymous1\n.. _: anonymous2\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Numbering with Chappg\nDESCRIPTION: LaTeX configuration for page numbering using the chappg package, enabling chapter-based page numbering\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_41\n\nLANGUAGE: latex\nCODE:\n```\n\\usepackage{chappg}\n```\n\n----------------------------------------\n\nTITLE: Customizing Definition Lists in LaTeX\nDESCRIPTION: Example of customizing the appearance of definition lists in LaTeX output from Docutils. Shows how to change the styling of the description term label.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_11\n\nLANGUAGE: latex\nCODE:\n```\n\\renewcommand\\descriptionlabel[1]{\\hspace\\labelsep \\normalfont #1}\n```\n\n----------------------------------------\n\nTITLE: Nested Line Blocks XML Representation\nDESCRIPTION: Illustrates the possibility of nesting line block elements to represent complex line block structures in ReStructuredText. This XML snippet proposes using nested elements to represent leading whitespace significance through implied margins, demonstrating a method for handling intricate formatting.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_22\n\nLANGUAGE: XML\nCODE:\n```\n     <line_block>\n         <line>\n             But can a bee be said to be\n         <line_block>\n             <line>\n                  or not to be an entire bee,\n             <line_block>\n                 <line>\n                     when half the bee is not a bee,\n                 <line_block>\n                     <line>\n                         due to some ancient injury?\n```\n\n----------------------------------------\n\nTITLE: Equivalent Multi-line Docstring Formats\nDESCRIPTION: Shows two equivalent ways to write multi-line docstrings, with and without leading blank lines.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0257.txt#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef foo():\n    \"\"\"A multi-line\n    docstring.\n    \"\"\"\n\ndef bar():\n    \"\"\"\n    A multi-line\n    docstring.\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Footnote Text Placement in Source Document\nDESCRIPTION: This LaTeX code snippet shows how to place footnote text where it appears in the source document instead of at the page bottom, creating the effect of endnotes. It needs the hanging package.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_23\n\nLANGUAGE: latex\nCODE:\n```\n\" \\usepackage{hanging}\n \\newcommand{\\DUfootnotetext}[4]{%\n   \\par\\noindent\\raisebox{1em}{\\hypertarget{#1}{}}%\n   \\hyperlink{#2}{#3}%\n   \\hangpara{\\parindent}{1}#4%\n }\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Block Quote Syntax in reStructuredText\nDESCRIPTION: This snippet shows how to create a block quote in reStructuredText using indentation. It also includes an attribution using the -- syntax.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_9\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is an ordinary paragraph, introducing a block quote.\n\n    \"It is my business to know things.  That is my trade.\"\n\n    -- Sherlock Holmes\n```\n\n----------------------------------------\n\nTITLE: Complex Index Entry Substitutions\nDESCRIPTION: Details advanced index entry replacements using substitution mechanisms in Docutils. Dependency includes reStructuredText substitution role understanding. Inputs are substitution definitions aligned with target text. The challenge lies in naming uniqueness for substitutes.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_50\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |Guido van Rossum| index:: Van Rossum, Guido\n```\n\n----------------------------------------\n\nTITLE: Python Class with Interpreted Text Docstrings\nDESCRIPTION: Demonstrates docstring usage with interpreted text and identifier markup\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/peps/pep-0287.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Keeper(Storer):\n\n    \"\"\"\n    Keep data fresher longer.\n\n    Extend `Storer`.  Class attribute `instances` keeps track\n    of the number of `Keeper` objects instantiated.\n    \"\"\"\n\n    instances = 0\n    \"\"\"How many `Keeper` objects are there?\"\"\"\n\n    def __init__(self):\n        \"\"\"\n        Extend `Storer.__init__()` to keep track of\n        instances.  Keep count in `self.instances` and data\n        in `self.data`.\n        \"\"\"\n        Storer.__init__(self)\n        self.instances += 1\n\n        self.data = []\n        \"\"\"Store data in a list, most recent last.\"\"\"\n\n    def storedata(self, data):\n        \"\"\"\n        Extend `Storer.storedata()`; append new `data` to a\n        list (in `self.data`).\n        \"\"\"\n        self.data = data\n```\n\n----------------------------------------\n\nTITLE: Running Python Tests with Warnings\nDESCRIPTION: Commands to run the Docutils test suite with default Python warnings enabled\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/release.txt#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport PYTHONWARNINGS=default\npython3 test/alltests.py\n```\n\n----------------------------------------\n\nTITLE: Document-wide Double Spacing\nDESCRIPTION: This LaTeX code snippet demonstrates how to get document wide double spacing using the setspace package.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_28\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{setspace}\n\\doublespacing\"\n```\n\n----------------------------------------\n\nTITLE: Field List Example in reStructuredText\nDESCRIPTION: This code snippet shows an example of a field list in reStructuredText. The field list consists of field names and corresponding field bodies, demonstrating indentation rules and multi-line field bodies.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_4\n\nLANGUAGE: rst\nCODE:\n```\n\":Date: 2001-08-16\n:Version: 1\n:Authors: - Me\n          - Myself\n          - I\n:Indentation: Since the field marker may be quite long, the second\n   and subsequent lines of the field body do not have to line up\n   with the first line, but they must be indented relative to the\n   field name marker, and they must line up with each other.\n:Parameter i: integer\"\n```\n\n----------------------------------------\n\nTITLE: Python Doctest Block Example in reStructuredText\nDESCRIPTION: Demonstrates how to format a Python doctest block within reStructuredText documentation. The example shows a simple print statement and its output.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/cheatsheet.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n>>> print 'Doctest block'\nDoctest block\n```\n\n----------------------------------------\n\nTITLE: RST Footnote Example\nDESCRIPTION: Shows how to create and reference a footnote in RST syntax using the [#] notation with explanatory text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/introduction.txt#2025-04-19_snippet_1\n\nLANGUAGE: RST\nCODE:\n```\n.. [#] Python's creator and \"Benevolent Dictator For Life\",\n   Guido van Rossum.\n```\n\n----------------------------------------\n\nTITLE: Adjusting Hyphenation Penalty and Tolerance\nDESCRIPTION: This LaTeX snippet adjusts the hyphenation penalty and tolerance. It increases the hyphenation penalty to reduce hyphenation and increases tolerance to allow for more space between words.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_24\n\nLANGUAGE: latex\nCODE:\n```\n\"\\hyphenpenalty=5000\n\\tolerance=1000\"\n```\n\n----------------------------------------\n\nTITLE: RST Comment Example\nDESCRIPTION: An example of converting text to a comment block using comment-dwim in RST mode.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_12\n\nLANGUAGE: restructuredtext\nCODE:\n```\n..\n   Apples\n   Oranges\n   Bananas\n```\n\n----------------------------------------\n\nTITLE: Illustrating Line Block Syntax in reStructuredText\nDESCRIPTION: This example demonstrates the use of line blocks in reStructuredText. Line blocks are created using vertical bar (|) prefixes and are useful for preserving line breaks and initial indents.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_8\n\nLANGUAGE: restructuredtext\nCODE:\n```\n| Lend us a couple of bob till Thursday.\n| I'm absolutely skint.\n| But I'm expecting a postal order and I can pay you back\n  as soon as it comes.\n| Love, Ewan.\n```\n\n----------------------------------------\n\nTITLE: Creating Hyperlink Reference Aliases\nDESCRIPTION: Demonstrates how to create aliases to existing hyperlink references, allowing multiple reference points to the same target.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_38\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis `link <Python home page_>`_ is an alias to the link above.\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Substitution Definition\nDESCRIPTION: This code snippet demonstrates the accepted syntax for defining a substitution in reStructuredText. It defines a substitution named 'biohazard' that inserts an image with specified height and width.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_9\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. |biohazard| image:: biohazard.png\n   [height=20 width=20]\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Named Hyperlink Example\nDESCRIPTION: This code demonstrates named hyperlinks in reStructuredText.  It shows how to create a reference to a URL using a named link and its corresponding definition.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_12\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is a named reference_ of one word (\"reference\").  Here is\n  a `phrase reference`_.  Phrase references may even cross `line\n  boundaries`_.\n\n.. _reference: https://www.example.org/reference/\n.. _phrase reference: https://www.example.org/phrase_reference/\n.. _line boundaries: https://www.example.org/line_boundaries/\n```\n\n----------------------------------------\n\nTITLE: RST Plain Text Example for Lists Demonstration\nDESCRIPTION: An example of plain text that can be converted to a bulleted or enumerated list using RST mode commands.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_4\n\nLANGUAGE: restructuredtext\nCODE:\n```\nApples\n\nOranges\n\nBananas\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Inline External Hyperlink Variations\nDESCRIPTION: This snippet presents other proposed syntax variations for inline external hyperlinks, using different delimiters like '->', '@', and '[]' to separate the reference text from the URL.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_17\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\"`phrase reference`->https://www.example.org\\n\\n    `phrase reference`@https://www.example.org\\n\\n    `phrase reference`__ ->https://www.example.org\\n\\n    `phrase reference` [-> https://www.example.org]\\n\\n    `phrase reference`__ [-> https://www.example.org]\\n\\n    `phrase reference` <https://www.example.org>_\"\n```\n\n----------------------------------------\n\nTITLE: Defining align-h.att Parameter Entity for Horizontal Alignment in XML DTD\nDESCRIPTION: Defines the align-h.att parameter entity containing the align attribute for horizontal alignment. Used by elements like figure and table for specifying left, center, or right alignment.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_58\n\nLANGUAGE: XML\nCODE:\n```\nalign     (left | center | right) #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: Defining Bullet List Structure in reStructuredText\nDESCRIPTION: Demonstrates how to create a bullet list with nested paragraphs in reStructuredText, which gets parsed into a bullet_list XML element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n- Item 1, paragraph 1.\n\n  Item 1, paragraph 2.\n\n- Item 2.\n```\n\n----------------------------------------\n\nTITLE: Line Block Indentation\nDESCRIPTION: This snippet sets the \\DUlineblockindent length to the paragraph indentation. It adjusts the indentation of indented lineblock parts.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_27\n\nLANGUAGE: latex\nCODE:\n```\n\"\\newlength{\\DUlineblockindent}\n\\setlength{\\DUlineblockindent}{\\parindent}\"\n```\n\n----------------------------------------\n\nTITLE: Using a Line Block Directive in reStructuredText\nDESCRIPTION: This example shows how to use the deprecated line-block directive in reStructuredText. It preserves line breaks and initial indentation while supporting inline markup.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_8\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. line-block::\n\n    Lend us a couple of bob till Thursday.\n    I'm absolutely skint.\n    But I'm expecting a postal order and I can pay you back\n        as soon as it comes.\n    Love, Ewan.\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Substitution References\nDESCRIPTION: Shows how to create substitution references using vertical bars that will be replaced by the corresponding substitution definitions during processing.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_48\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is a simple |substitution reference|.  It will be replaced by\nthe processing system.\n```\n\n----------------------------------------\n\nTITLE: Generic Float Directive in reStructuredText\nDESCRIPTION: This snippet demonstrates a generic float directive proposal, similar to the functionality found in Sphinx. It allows defining floats with specific types and captions.  It uses the `:type:` and `:caption:` options to define the float type and caption respectively.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_14\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. float::\n   :type: figure\n   :caption: My caption\n```\n\n----------------------------------------\n\nTITLE: Structuring Large Documents with SGML in reStructuredText\nDESCRIPTION: An example of how large documents were structured using SGML, which could be adapted for use in Docutils for handling multi-part documents. It shows a book structure with chapters and appendices referenced by external files.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n<book id=\"bk01\">\n<title>Title of the Book</title>\n<preface inrefid=\"pr01\"></preface>\n<chapter inrefid=\"ch01\"></chapter>\n<chapter inrefid=\"ch02\"></chapter>\n<chapter inrefid=\"ch03\"></chapter>\n<appendix inrefid=\"ap01\"></appendix>\n</book>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Python Literal Block in reStructuredText\nDESCRIPTION: Example of a Python literal block in reStructuredText that shows the preservation of whitespace and formatting. The code demonstrates a simple conditional statement with associated text values.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/rst/demo.txt#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nif literal_block:\n    text = 'is left as-is'\n    spaces_and_linebreaks = 'are preserved'\n    markup_processing = None\n```\n\n----------------------------------------\n\nTITLE: Defining refname.att Parameter Entity for Internal Name References in XML DTD\nDESCRIPTION: Defines the refname.att parameter entity containing the refname attribute for internal references to the names attribute of another element. Used directly by substitution_reference element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_70\n\nLANGUAGE: XML\nCODE:\n```\nrefname_  %refname.type;  #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: Definition List Item Example in reStructuredText\nDESCRIPTION: This snippet demonstrates a reStructuredText definition list item with a term, classifier, and a multi-paragraph definition. The classifier provides additional information about the term.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_19\n\nLANGUAGE: restructuredtext\nCODE:\n```\nTyrannosaurus Rex : carnivore\n    Big and scary; the \"Tyrant King\".\n\nBrontosaurus : herbivore\n    All brontosauruses are thin at one end,\n    much much thicker in the middle\n    and then thin again at the far end.\n\n    -- Anne Elk (Miss)\n```\n\n----------------------------------------\n\nTITLE: Preparing OpenOffice Stylesheet with rst2odt_prepstyles.py\nDESCRIPTION: Helper tool to fix a word-processor-generated stylesheet file for use with odtwriter\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/tools.txt#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nrst2odt_prepstyles STYLE_FILE.odt\n```\n\n----------------------------------------\n\nTITLE: Configuring File-Specific Settings in ReStructuredText\nDESCRIPTION: Example of proposed syntax for configuring file-specific settings in ReStructuredText config files. Shows two potential approaches - using the input filename or output filename as the selector.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_3\n\nLANGUAGE: restructuredtext\nCODE:\n```\n[file index.txt]\ncompact-lists: no\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\n[source_file index.txt]\n...\n\n[dest_file index.html]\n...\n```\n\n----------------------------------------\n\nTITLE: Tony Ibbs' Proposed reStructuredText Syntax\nDESCRIPTION: This proposal by Tony Ibbs returns to the original syntax while simplifying the definition of anonymous targets. It retains the overarching structure of original targets but refines it to improve usability.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n.. _blah:                     internal hyperlink target\n.. _blah: http://somewhere    external hyperlink target\n.. _blah: blahblah_           indirect hyperlink target\n..                            anonymous internal target\n.. http://somewhere           anonymous external target\n.. blahblah_                  anonymous indirect target\n.. [blah] http://somewhere    footnote\n.. blah:: http://somewhere    directive\n.. blah: http://somewhere     comment\n```\n\n----------------------------------------\n\nTITLE: Using Regular Expression in Inline Literals\nDESCRIPTION: Example of embedding a regular expression pattern within inline literals for code representation in documentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_35\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThe regular expression ``[+-]?(\\d+(\\.\\d*)?|\\.\\d+)`` matches\nfloating-point numbers (without exponents).\n```\n\n----------------------------------------\n\nTITLE: Example of Problematic StructuredText Recognition\nDESCRIPTION: Demonstrates how StructuredText incorrectly recognizes normal text as an enumerated list item.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\nMr. Creosote.\n```\n\n----------------------------------------\n\nTITLE: Epigraph Directive Example\nDESCRIPTION: Shows how to use the epigraph directive to insert a quotation at the beginning of a document or section\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/directives.txt#2025-04-19_snippet_12\n\nLANGUAGE: rst\nCODE:\n```\n.. epigraph::\n\n   No matter where you go, there you are.\n\n   -- Buckaroo Banzai\n```\n\n----------------------------------------\n\nTITLE: Rendering Literal Blocks in reStructuredText\nDESCRIPTION: The snippet explains the use of the 'literal_block' element, which preserves whitespace and formatting for code listings or interactive sessions. It specifies processing requirements and parental relationships.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_43\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe ``literal_block`` element contains a block of text where line\nbreaks and whitespace are significant and must be preserved.\n``literal_block`` elements are commonly used for program listings and\ninteractive computer sessions.  See `line_block`_ for an alternative\nuseful for verse and addresses.\n\n:Category:\n    `Simple Body Elements`_\n\n:Analogues:\n    ``literal_block`` is analogous to the HTML \"pre\" element and to\n    the DocBook \"programlisting\" and \"screen\" elements.\n\n:Processing:\n    ``literal_block`` elements are typically rendered in a monospaced\ntypeface.  It is crucial that all whitespace and line breaks are\npreserved in the rendered form.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Definition List Syntax in reStructuredText\nDESCRIPTION: Shows the recommended syntax for definition lists in reStructuredText, where a term is followed by an indented definition block without blank lines between them.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nterm 1\n    Definition.\n\nterm 2\n    Definition 2, paragraph 1.\n\n    Definition 2, paragraph 2.\n```\n\n----------------------------------------\n\nTITLE: Pseudoxml Output Showing Incorrect Line Numbers\nDESCRIPTION: This code snippet demonstrates an issue where the line numbers for definition list items are incorrectly reported when using the `rst2pseudoxml.py` tool with the `--expose-internal-attribute line` option. The output shows that the internal line attribute for list items do not correspond to the actual line number in the source text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n\"$ rst2pseudoxml.py --expose-internal-attribute line\n        1\n          2\n          3\n\n        5\n          6\n          7\n\n        <document source=\\\"<stdin>\\\">\n            <definition_list>\n                <definition_list_item internal:line=\\\"3\\\">\n                    <term>\n                        1\n                    <definition>\n                        <paragraph internal:line=\\\"2\\\">\n                            2\n                            3\n                <definition_list_item internal:line=\\\"6\\\">\n                    <term>\n                        5\n                    <definition>\n                        <paragraph internal:line=\\\"6\\\">\n                            6\n                            7\"\n```\n\n----------------------------------------\n\nTITLE: Defining bibliographic.elements Parameter Entity for Bibliographic Elements in XML DTD\nDESCRIPTION: Defines the bibliographic.elements parameter entity containing an OR-list of all bibliographic elements. Used in the content model of the docinfo element and can be extended using additional.bibliographic.elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_64\n\nLANGUAGE: XML\nCODE:\n```\nauthor_ | authors_ | organization_ | contact_ | address_\n| version_ | revision_ | status_ | date_ | copyright_\n| field_\n%additional.bibliographic.elements;\n```\n\n----------------------------------------\n\nTITLE: Escaping Angle Brackets in Reference Text\nDESCRIPTION: Shows techniques for escaping angle brackets in reference text to avoid confusion with URI syntax in hyperlinks.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_43\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSee `HTML Element: \\<a>`_, `HTML Element: <b\\> `_, and\n`HTML Element: <c>\\ `_.\n```\n\n----------------------------------------\n\nTITLE: Adding a Title to a Table in reStructuredText\nDESCRIPTION: This snippet shows how to add a title to a table using the ``table`` directive in reStructuredText. The directive takes the title as an argument, which will be displayed above the table. The appearance of the title can be customized by modifying the ``rststyle-table-title`` paragraph style.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/odt.txt#2025-04-19_snippet_10\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. table:: A little test table\n\n    =========== =============\n    Name        Value\n    =========== =============\n    Dave        Cute\n    Mona        Smart\n    =========== =============\n\n```\n\n----------------------------------------\n\nTITLE: Character Entity Set Files Listing\nDESCRIPTION: This snippet presents a table listing various character entity set files and their corresponding descriptions for use in reStructuredText documents, enabling easy reference for special symbols.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_5\n\nLANGUAGE: reStructuredText\nCODE:\n```\n===================  =================================================\nEntity Set File      Description\n===================  =================================================\nisoamsa.txt_         Added Mathematical Symbols: Arrows\nisoamsb.txt_         Added Mathematical Symbols: Binary Operators\nisoamsc.txt_         Added Mathematical Symbols: Delimiters\nisoamsn.txt_         Added Mathematical Symbols: Negated Relations\nisoamso.txt_         Added Mathematical Symbols: Ordinary\nisoamsr.txt_         Added Mathematical Symbols: Relations\nisobox.txt_          Box and Line Drawing\nisocyr1.txt_         Russian Cyrillic\nisocyr2.txt_         Non-Russian Cyrillic\nisodia.txt_          Diacritical Marks\nisogrk1.txt_         Greek Letters\nisogrk2.txt_         Monotoniko Greek\nisogrk3.txt_         Greek Symbols\nisogrk4.txt_  [1]_   Alternative Greek Symbols\nisolat1.txt_         Added Latin 1\nisolat2.txt_         Added Latin 2\nisomfrk.txt_  [1]_   Mathematical Fraktur\nisomopf.txt_  [1]_   Mathematical Openface (Double-struck)\nisomscr.txt_  [1]_   Mathematical Script\nisonum.txt_          Numeric and Special Graphic\nisopub.txt_          Publishing\nisotech.txt_         General Technical\nmmlalias.txt_        MathML aliases for entities from other sets\nmmlextra.txt_ [1]_   Extra names added by MathML\nxhtml1-lat1.txt_     XHTML Latin 1\nxhtml1-special.txt_  XHTML Special Characters\nxhtml1-symbol.txt_   XHTML Mathematical, Greek and Symbolic Characters\n===================  =================================================\n```\n\n----------------------------------------\n\nTITLE: Adding Tips in reStructuredText\nDESCRIPTION: Example showing how to create a tip admonition element which provides a distinctive notice or helpful information to readers.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_54\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. Tip:: 15% if the service is good.\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Fragment of Definition List\nDESCRIPTION: This snippet shows the pseudo-XML representation of a definition list after parsing. It illustrates how terms, classifiers, and definitions are structured within the definition_list and definition_list_item elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<definition_list>\n    <definition_list_item>\n        <term>\n            Term\n        <definition>\n            <paragraph>\n                Definition.\n    <definition_list_item>\n        <term>\n            Term\n        <classifier>\n            classifier\n        <definition>\n            <paragraph>\n                The ' : ' indicates a classifier in\n                definition list item terms only.\n```\n\n----------------------------------------\n\nTITLE: Setting IO in Publisher\nDESCRIPTION: Calls set_io method to set up input and output sources based on settings and command-line arguments.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/runtime-settings-processing.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\npublisher.set_io()\n```\n\n----------------------------------------\n\nTITLE: Defining auto.att Parameter Entity for Auto-numbered Elements in XML DTD\nDESCRIPTION: Defines the auto.att parameter entity containing the auto attribute used to indicate automatically-numbered footnotes or titles. Used by footnote, footnote_reference, and title elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_61\n\nLANGUAGE: XML\nCODE:\n```\nauto     CDATA     #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Internal Hyperlink Example\nDESCRIPTION: Demonstrates how to create an internal hyperlink in reStructuredText, linking to a specific section within the same document.  It uses a named target with an underscore.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_17\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis internal hyperlink will take us to the footnotes_ area below.\n\n    .. _footnotes:\n```\n\n----------------------------------------\n\nTITLE: Defining field_body Element in RestructuredText\nDESCRIPTION: The `field_body` element represents the body content of a field and is analogous to a database field's data. It may contain various body elements and includes common attributes for customization.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_26\n\nLANGUAGE: reStructuredText\nCODE:\n```\n``field_body``\n==============\n\nThe ``field_body`` element contains body elements.  It is analogous to\na database field's data.\n\nDetails\n-------\n\n:Category:\n    `Body Subelements`_\n\n:Analogues:\n    ``field_body`` has no direct analogues in common DTDs.\n\n:Processing:\n    See field_list_.\n\n:Parents:\n    Only the field_ element contains ``field_body``.\n\n:Children:\n    ``field_body`` elements may contain `body elements`_.\n\n    .. parsed-literal::\n\n        (`%body.elements;`_)*\n\n:Attributes:\n    The ``field_body`` element contains only the `common attributes`_.\n\nExamples\n--------\n\nSee the examples for the field_list_ and docinfo_ elements.\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Syntax Example\nDESCRIPTION: Demonstrates how to create hyperlinks and footnotes using reStructuredText syntax. The text is separated from the link URI and footnote definitions, improving readability.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_23\n\nLANGUAGE: restructuredtext\nCODE:\n```\n4. A URI_, see [eggs2000]_ (in Bacon [Publisher]).\n       Also see http://eggs.org.\n\n       .. _URI: http:/spam.org\n       .. [eggs2000] \"Spam, Spam, Spam, Eggs, Bacon, and Spam\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Caution Admonition to Pseudo-XML\nDESCRIPTION: Shows the pseudo-XML structure resulting from parsing a reStructuredText caution admonition, illustrating the caution element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<caution>\n    <paragraph>\n        Don't take any wooden nickels.\n```\n\n----------------------------------------\n\nTITLE: Parameterized Interpreted Text Role Syntax Options in reStructuredText\nDESCRIPTION: Demonstrates three different approaches for adding parameters to interpreted text roles, similar to function calls. Each approach has different syntax considerations and trade-offs.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_56\n\nLANGUAGE: rst\nCODE:\n```\n`interpreted text`:role1(foo=bar):\n\n`CSS`:acronym(Cascading Style Sheets): is used for HTML, and\n`CSS`:acronym(Content Scrambling System): is used for DVDs.\n```\n\nLANGUAGE: rst\nCODE:\n```\n`CSS (Cascading Style Sheets)`:acronym: is used for HTML, and\n`CSS (Content Scrambling System)`:acronym: is used for DVDs.\n```\n\nLANGUAGE: rst\nCODE:\n```\n`CSS <Cascading Style Sheets>`:acronym: is used for HTML, and\n`CSS <Content Scrambling System>`:acronym: is used for DVDs.\n```\n\nLANGUAGE: rst\nCODE:\n```\n`CSS :def:`Cascading Style Sheets``:acronym: is used for HTML,\nand `CSS :def:`Content Scrambling System``:acronym: is used for DVDs.\n```\n\nLANGUAGE: rst\nCODE:\n```\n`CSS `Cascading Style Sheets``:acronym: is used for HTML, and\n`CSS `Content Scrambling System``:acronym: is used for DVDs.\n```\n\nLANGUAGE: rst\nCODE:\n```\n|CSS| is used for HTML, and |CSS-DVD| is used for DVDs.\n\n.. |CSS| acronym:: Cascading Style Sheets\n.. |CSS-DVD| acronym:: Content Scrambling System\n   :text: CSS\n```\n\n----------------------------------------\n\nTITLE: Defining refuri.att Parameter Entity for External URI References in XML DTD\nDESCRIPTION: Defines the refuri.att parameter entity containing the refuri attribute for external references to a URI/URL. Used indirectly by citation_reference, footnote_reference, reference, and target elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_71\n\nLANGUAGE: XML\nCODE:\n```\nrefuri_   CDATA     #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Phrase Hyperlink Example\nDESCRIPTION: Demonstrates a phrase hyperlink, where multiple words become an external link.  The link is declared further down using the \".. _phrase: URL\" format.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_19\n\nLANGUAGE: restructuredtext\nCODE:\n```\nHere is `a hyperlink phrase`_.\n\n    .. _a hyperlink phrase: http://www.123.xyz\n```\n\n----------------------------------------\n\nTITLE: HTML Email Cloaking Example\nDESCRIPTION: This snippet demonstrates how email addresses are cloaked using HTML entities and span tags to obfuscate them from harvesters. The '@' is replaced by HTML entity and surrounded by span tags. Periods are also surrounded by span tags.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n\"<a class=\\\"reference\\\" href=\\\"mailto:abc&#37;&#52;&#48;example&#46;org\\\">\\n    abc<span>&#64;</span>example<span>&#46;</span>org</a>\"\n```\n\n----------------------------------------\n\nTITLE: Documenting Parameters with reStructuredText Definition Lists in Python\nDESCRIPTION: This snippet demonstrates an alternative approach to documenting function parameters using reStructuredText definition lists within a Python docstring. It utilizes the `classifier` element of definition lists to associate type information with each parameter, making the documentation more comprehensive and easier to understand. Parameters include `lines`, `until_blank`, and `strip_indent` with associated types such as `string` and `boolean`.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/semantics.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n      :Parameters:\n          `lines` : [string]\n              List of one-line strings without newlines.\n          `until_blank` : boolean\n              Stop collecting at the first blank line if true (1).\n          `strip_indent` : boolean\n              Strip common leading indent if true (1, default).\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Important Parsing\nDESCRIPTION: Illustrates the pseudo-XML structure of the parsed important admonition. The bullet list, containing paragraphs with list items, is nested within the important element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_37\n\nLANGUAGE: xml\nCODE:\n```\n\"<important>\\n    <bullet_list>\\n        <list_item>\\n            <paragraph>\\n                Wash behind your ears.\\n        <list_item>\\n            <paragraph>\\n                Clean up your room.\\n        <list_item>\\n            <paragraph>\\n                Back up your data.\\n        <list_item>\\n            <paragraph>\\n                Call your mother.\"\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Phrase Link with Brackets\nDESCRIPTION: Demonstrates how to create a phrase link in reStructuredText using brackets to enclose the link text. This method is considered more intuitive because it is reminiscent of links on many web pages.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_12\n\nLANGUAGE: restructuredtext\nCODE:\n```\n[like this]_\n```\n\n----------------------------------------\n\nTITLE: Creating a Caution Admonition in reStructuredText\nDESCRIPTION: Demonstrates how to create a caution admonition in reStructuredText, which gets parsed into a caution XML element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_3\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. Caution:: Don't take any wooden nickels.\n```\n\n----------------------------------------\n\nTITLE: Proposal for Nested Inline Markup Handling\nDESCRIPTION: The snippet outlines a conceptual algorithm for supporting nested inline markup in reStructuredText, citing challenges like complexity and potential for errors. Suggestions include possible implementations and criteria for parsing nested structures.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_42\n\nLANGUAGE: plaintext\nCODE:\n```\nwhile 1:\\n    scan for start-string\\n    if found:\\n        push on stack\\n        scan for start or end string\\n        if new start string found:\\n            recurse\\n        elif matching end string found:\\n            pop stack\\n        elif non-matching end string found:\\n            if its a markup error:\\n                generate warning\\n            elif the initial start-string was misinterpreted:\\n                # e.g. in this case: ***strong** in emphasis*\\n                restart with the other interpretation\\n                # but it might be several layers back ...\n```\n\n----------------------------------------\n\nTITLE: Version String Format Pattern in Python\nDESCRIPTION: Pattern showing the structure of Docutils version string format\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/policies.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n\"<major>.<minor>[.<micro>][<releaselevel>[<serial>]][.dev]\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Anonymous Hyperlinks\nDESCRIPTION: This snippet demonstrates the syntax for creating an anonymous hyperlink in reStructuredText. It features the use of double underscores for linking anonymously without targets, useful in maintaining a simple structure. Dependencies include understanding of basic reStructuredText syntax.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nAn anonymous__ reference.\n\n__ http://anonymous\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Footnote Reference\nDESCRIPTION: Demonstrates how to create a footnote reference in reStructuredText. The trailing underscore markup is used consistently for footnote and citation references.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_14\n\nLANGUAGE: restructuredtext\nCODE:\n```\nPlease refer to the fine manual [GVR2000]_.\n\n.. [GVR2000] Python Documentation, van Rossum, Drake, et al.,\n   http://www.python.org/doc/\n```\n\n----------------------------------------\n\nTITLE: Doctest Block Example\nDESCRIPTION: Illustrates the structure of a doctest block in pseudo-XML after parsing, showing how Python interpreter sessions are represented with preserved whitespace and line breaks. This example showcases the '>>>' prompt to distinguish interactive sessions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_22\n\nLANGUAGE: xml\nCODE:\n```\n\"<doctest_block xml:space=\\\"preserve\\\">\\n    >>> print 'this is a Doctest block'\\n    this is a Doctest block\\n\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Field List Syntax Options in reStructuredText\nDESCRIPTION: This snippet shows various syntax options that were considered for field lists in reStructuredText, including unadorned RFC822, special case usage, directive-based approach, Javadoc-style, and leading colons.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\nAuthor: Me\nVersion: 1\n\n.. fields::\n\n   Author: Me\n   Version: 1\n\n@Author: Me\n@Version: 1\n@param a: integer\n\n:Author: Me\n:Version: 1\n\nAuthor:: Me\nVersion:: 1\n```\n\n----------------------------------------\n\nTITLE: Table Format 4: Bullet List Row Markers in reStructuredText\nDESCRIPTION: Demonstrates using bullet list syntax in the first column to indicate row starts, allowing multi-line rows but without row spans in reStructuredText tables.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n===== =====\ncol 1 col 2\n===== =====\n- 1   Second column of row 1.\n- 2   Second column of row 2.\n      Second line of paragraph.\n- 3   Second column of row 3.\n\n      Second paragraph of row 3,\n      column 2\n===== =====\n```\n\n----------------------------------------\n\nTITLE: Line Block Internal Representation XML\nDESCRIPTION: This snippet provides an XML proposal for representing line blocks by individual line elements within the ReStructuredText internal representation. The design allows for preserving whitespace significance and aims to simplify conversion into other formats with consistent output.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_21\n\nLANGUAGE: XML\nCODE:\n```\n     <!ELEMENT line_block (line+)>\n     <!ATTLIST line_block %basic.atts;>\n\n     <!ELEMENT line %text.model;>\n     <!ATTLIST line %basic.atts;>\n```\n\n----------------------------------------\n\nTITLE: Original Hyperlink Syntax in reStructuredText\nDESCRIPTION: This snippet outlines the original syntax for hyperlinks in reStructuredText. It includes both named and anonymous targets, showcasing its consistency with the indicator \".. _\" followed by a colon. The syntax handles external and internal targets as well as indirect links.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n.. _blah:                     internal hyperlink target\n.. _blah: http://somewhere    external hyperlink target\n.. _blah: blahblah_           indirect hyperlink target\n.. __:                        anonymous internal target\n.. __: http://somewhere       anonymous external target\n.. __: blahblah_              anonymous indirect target\n.. [blah] http://somewhere    footnote\n.. blah:: http://somewhere    directive\n.. blah: http://somewhere     comment\n```\n\n----------------------------------------\n\nTITLE: Substituting Book Identifiers with ISBN\nDESCRIPTION: This snippet illustrates the use of substitution references for book identifiers, allowing for unique objects to be referenced in the text without ambiguity. This helps in linking to specific books through their ISBN.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_28\n\nLANGUAGE: plaintext\nCODE:\n```\n.. |The Transparent Society| book:: isbn=0738201448\n```\n\n----------------------------------------\n\nTITLE: Improved Function Docstring Using Field Lists in Python\nDESCRIPTION: A revised version of the function docstring using field lists to save space and improve readability.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/enthought-plan.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef max_gas(temperature, pressure, api, specific_gravity=.56):\n    \"\"\"\n    Computes the maximum dissolved gas in oil using Batzle and\n    Wang (1992).\n\n    :Parameters:\n        temperature : sequence\n            Temperature in degrees Celsius\n        pressure : sequence\n            Pressure in MPa\n        api : sequence\n            Stock tank oil API\n        specific_gravity : sequence\n            Specific gravity of gas at STP, default is .56\n    :Returns:\n        max_gor : sequence\n            Maximum dissolved gas in liters/liter\n    :Description: This estimate is based on equations given by\n        Mavko, Mukerji, and Dvorkin, (1998, pp. 218-219, or 2003,\n        p. 236) obtained originally from Batzle and Wang (1992).\n    \"\"\"\n    code...\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Combined Substitution and Hyperlink Reference\nDESCRIPTION: This code snippet demonstrates how to combine a substitution reference with a named hyperlink reference in reStructuredText.  The text '|biohazard|_' will be replaced with the content defined in the substitution definition, and the resulting element will be a hyperlink pointing to the specified URL.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_11\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThe |biohazard|_ symbol...\n```\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. |biohazard| image:: biohazard.png\n   [height=20 width=20]\n.. _biohazard: https://www.cdc.gov/\n```\n\n----------------------------------------\n\nTITLE: Defining a Data Dictionary with Classifiers in reStructuredText\nDESCRIPTION: Demonstrates how to create a definition list with classifiers in reStructuredText, which gets parsed into definition_list and classifier XML elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_5\n\nLANGUAGE: reStructuredText\nCODE:\n```\nname : string\n    Customer name.\ni : int\n    Temporary index variable.\n```\n\n----------------------------------------\n\nTITLE: Implementing Transition Element XML\nDESCRIPTION: This XML snippet introduces the concept of a 'transition' element, proposed as a 'point element' that identifies a division point in a ReStructuredText document structure. This approach aims to keep the document tree flatter by inserting transition points without hierarchical structure elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_20\n\nLANGUAGE: XML\nCODE:\n```\n       <document>\n           <section names=\"document\">\n               <title>\n                   Document\n               <paragraph>\n                   Paragraph 1\n               <transition>\n               <paragraph>\n                   Paragraph 2\n```\n\n----------------------------------------\n\nTITLE: Proposed Underscore Prefix Footnote Syntax\nDESCRIPTION: Alternative syntax proposal for footnotes that removes the explicit markup indicator and adds an underscore prefix.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_32\n\nLANGUAGE: rst\nCODE:\n```\n_[1] Footnote 1\n_[#] Auto-numbered footnote.\n_[#label] Auto-labeled footnote.\n```\n\n----------------------------------------\n\nTITLE: Custom Rubric Styling\nDESCRIPTION: LaTeX configuration for creating custom rubric formatting with centered, red text\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_44\n\nLANGUAGE: latex\nCODE:\n```\n\\newcommand*{\\DUrubric}[1]{%\n   \\subsubsection*{\\centerline{\\color{red}#1}}}\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Line Block Parsing\nDESCRIPTION: Illustrates the pseudo-XML representation of the line block example. The line_block element contains nested line and line_block elements, preserving the original structure and whitespace.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_41\n\nLANGUAGE: xml\nCODE:\n```\n\"<paragraph>\\n    Take it away, Eric the Orchestra Leader!\\n<line_block>\\n    <line>\\n        A one, two, a one two three four\\n    <line>\\n    <line>\\n        Half a bee, philosophically,\\n    <line_block>\\n        <line>\\n            must,\\n            <emphasis>\\n                ipso facto\\n            , half not be.\\n    <line>\\n        But half the bee has got to be,\\n    <line_block>\\n        <line>\\n            <emphasis>\\n                vis a vis\\n             its entity.  D'you see?\\n        <line>\\n    <line>\\n        But can a bee be said to be\\n    <line_block>\\n        <line>\\n            or not to be an entire bee,\\n        <line_block>\\n            <line>\\n                when half the bee is not a bee,\\n            <line_block>\\n                <line>\\n                    due to some ancient injury?\\n                <line>\\n    <line>\\n        Singing...\"\n```\n\n----------------------------------------\n\nTITLE: HTML Output for Line Blocks\nDESCRIPTION: Proposal for HTML output of line blocks, using nested div elements to maintain structure with CSS for styling. It includes class attributes to allow flexible margin adjustments in style sheets. This approach intends to move away from using pre blocks that limit formatting.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_23\n\nLANGUAGE: HTML\nCODE:\n```\n    <div class=\"line_block\">\n       <span class=\"line\">First, top level line</span><br class=\"hidden\"/>\n       <div class=\"line_block\"><span class=\"hidden\">&nbsp;</span>\n          <span class=\"line\">Second, once nested</span><br class=\"hidden\"/>\n          <span class=\"line\">Third, once nested</span><br class=\"hidden\"/>\n          ...\n       </div>\n       ...\n    </div>\n```\n\n----------------------------------------\n\nTITLE: Inline Multi-Level Index Targets\nDESCRIPTION: Demonstrates inline multi-level index targeting using Docutils syntax. Understanding of reStructuredText inline markup is required. Inputs are text with embedded index roles connecting different hierarchy levels; outputs are nested index markers within the inline scope.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_48\n\nLANGUAGE: plaintext\nCODE:\n```\nWhen dealing with `expression statements <statement syntax:>`, we must remember ...\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Inline External Hyperlink Proposal (3)\nDESCRIPTION: This snippet illustrates an alternative syntax for embedding the target URL directly within the reference text, using backquotes and angle brackets. The reference is followed by double underscores, indicating an anonymous reference.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_16\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\"This is an anonymous `reference <https://www.example.org\\n       /reference/>`__ of one word (\\\"reference\\\").  Here is a `phrase\\n       reference <https://www.example.org/phrase_reference/>`__.\"\n```\n\n----------------------------------------\n\nTITLE: Defining Comment Syntax in reStructuredText\nDESCRIPTION: This snippet provides examples of proposed changes to the comment syntax in reStructuredText, such as replacing '..' with '.. comment::' to improve clarity. The snippet discusses potential pitfalls and trade-offs, including the risk of syntax becoming obtrusive.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_41\n\nLANGUAGE: plaintext\nCODE:\n```\n.. comment:: This should be a comment\\n\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Anonymous Hyperlink Example\nDESCRIPTION: This code demonstrates anonymous hyperlinks in reStructuredText. It shows how to create a reference to a URL using an anonymous link and its corresponding target. Note that these targets cannot be reused.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_13\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is an anonymous reference__.  Here is an anonymous\n  `phrase reference`__.  Phrase references may even cross `line\n  boundaries`__.\n\n__ https://www.example.org/reference/\n__ https://www.example.org/phrase_reference/\n__ https://www.example.org/line_boundaries/\n```\n\n----------------------------------------\n\nTITLE: Defining fixedspace.att Parameter Entity for XML Space Attribute in XML DTD\nDESCRIPTION: Defines the fixedspace.att parameter entity containing the xml:space attribute for whitespace-preserving elements. Used by elements like address, comment, doctest_block, line_block, literal_block, and raw.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_66\n\nLANGUAGE: XML\nCODE:\n```\nxml:space (default | preserve) #FIXED 'preserve'\n```\n\n----------------------------------------\n\nTITLE: Minimal Footnote Syntax Proposal\nDESCRIPTION: A more minimalist syntax proposal for footnotes using underscore prefix and period suffix, resembling list markers.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_33\n\nLANGUAGE: rst\nCODE:\n```\n_1. Footnote 1.\n_#. Auto-numbered footnote.\n_#label. Auto-labeled footnote.\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Fragment of Danger Directive\nDESCRIPTION: This snippet shows the pseudo-XML representation of the 'danger' directive after parsing. It illustrates how the directive is transformed into an XML structure with a 'danger' element containing a 'paragraph' element with the alert message.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<danger>\n    <paragraph>\n        Mad scientist at work!\n```\n\n----------------------------------------\n\nTITLE: Explicit Auto-Enumeration with Hash Mark\nDESCRIPTION: Tony Ibbs' proposal for an explicit auto-enumeration syntax using the hash mark (#) prefix with list numbers.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_29\n\nLANGUAGE: rst\nCODE:\n```\n#1. First item.\n#3. Aha - I edited this in later.\n#2. Second item.\n```\n\n----------------------------------------\n\nTITLE: Using Subscript and Superscript Roles with Escaped Whitespace in reStructuredText\nDESCRIPTION: Shows how to use subscript and superscript roles with backslash-escaped whitespace to improve readability and formatting of chemical formulas and mathematical expressions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/roles.txt#2025-04-19_snippet_4\n\nLANGUAGE: reStructuredText\nCODE:\n```\nH\\ :sub:`2`\\ O\nE = mc\\ :sup:`2`\n```\n\n----------------------------------------\n\nTITLE: reStructuredText Inline External Hyperlink Proposal (1)\nDESCRIPTION: This snippet shows the first proposed syntax for reStructuredText inline external hyperlinks, including examples of references with single and double underscores to indicate named and anonymous references respectively. The URL is placed in parentheses immediately after the reference text, separated by an underscore.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_14\n\nLANGUAGE: restructuredtext\nCODE:\n```\n\"This is a reference_(https://www.example.org/reference/) of one\\n       word (\\\"reference\\\").  Here is a `phrase\\n       reference`_(https://www.example.org/phrase_reference/).  Are\\n       these examples, (single-underscore), named?  If so, `anonymous\\n       references`__(https://www.example.org/anonymous/) using two\\n       underscores would probably be preferable.\"\n```\n\n----------------------------------------\n\nTITLE: Alan Jaffray's Proposed Hyperlink Syntax #2\nDESCRIPTION: Alan Jaffray's second syntax proposal further simplifies the anonymous hyperlink process by integrating unique symbols like '!!' for directives and '##' for comments. This proposal aims to improve clarity and syntactic differentiation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n.. _blah                      internal hyperlink target\n.. blah: http://somewhere     external hyperlink target\n.. blah: blahblah_            indirect hyperlink target\n..                            anonymous internal target\n.. http://somewhere           anonymous external target\n.. blahblah_                  anonymous indirect target\n.. [blah] http://somewhere    footnote\n!! blah: http://somewhere     directive\n## blah: http://somewhere     comment\n```\n\n----------------------------------------\n\nTITLE: Hierarchical Index Entries\nDESCRIPTION: Discusses achieving multi-level hierarchical indexing using reStructuredText index directives. Context demands comprehension of hierarchical index creation in Docutils. Inputs are directives with colon-separators depicting hierarchy. Outputs reflect nested index entries aligning with levels.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_47\n\nLANGUAGE: plaintext\nCODE:\n```\n.. index:: statement syntax: expression statements\n```\n\n----------------------------------------\n\nTITLE: Example of Man Page Structure in Plain Text Format\nDESCRIPTION: Shows the standard format of a Unix man page as it appears to users, demonstrating the typical header with title, section, and manual group followed by NAME and SYNOPSIS sections.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/manpage.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   man(1)     Man Pager Utils     man(1)\n\n   NAME\n       man - an interface to the on-line reference manuals\n\n   SYNOPSIS\n       man [-c|-w|-tZT device] [-adhu7V] [-m system[,...]] [-L locale]\n```\n\n----------------------------------------\n\nTITLE: Adjacent Citation References Example\nDESCRIPTION: Shows a proposed but rejected syntax for joining multiple citation references without requiring spaces between them.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_30\n\nLANGUAGE: rst\nCODE:\n```\n[cite1]_[cite2]_ instead of requiring [cite1]_ [cite2]_\n```\n\n----------------------------------------\n\nTITLE: Using Substitutions for Improved Readability of Subscripts in reStructuredText\nDESCRIPTION: Demonstrates the use of substitutions to enhance the readability of chemical formulas with subscripts in plain text while maintaining proper formatting in the processed document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/roles.txt#2025-04-19_snippet_5\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThe chemical formula for pure water is |H2O|.\n\n.. |H2O| replace:: H\\ :sub:`2`\\ O\n```\n\n----------------------------------------\n\nTITLE: Syntax for Interpreted Text Role Bindings in reStructuredText\nDESCRIPTION: Shows a proposed syntax for associating directives with roles, allowing for additional flexibility in how interpreted text roles are processed and rendered.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_57\n\nLANGUAGE: rst\nCODE:\n```\n.. :rewrite: class:: rewrite\n\n`She wore ribbons in her hair and it lay with streaks of grey`:rewrite:\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Interpreted Text Role Syntax in reStructuredText\nDESCRIPTION: This snippet illustrates various syntax options considered for specifying roles in interpreted text, including prefix and suffix notations, bracketing with colons, and alternative bracketing methods.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n`role: interpreted text`\n`interpreted text :role`\n\nrole:`prefix` or `suffix`:role\n\n:role:`prefix` or `suffix`:role:\n\nrole::`prefix` or `suffix`::role\n\n(role)`prefix` or `suffix`(role)\n\n{role}`prefix` or `suffix`{role}\n\n[role]`prefix` or `suffix`[role]\n\n<role>`prefix` or `suffix`<role>\n```\n\n----------------------------------------\n\nTITLE: Creating XML from Index Directives\nDESCRIPTION: Illustrates how index directives translate into XML with reStructuredText processing. Context involves familiarity with XML generation in document utilities. Inputs involve directive-targeted paragraphs and outputs being XML elements encapsulating these targets. No explicit constraints are listed.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_49\n\nLANGUAGE: plaintext\nCODE:\n```\n<paragraph>\n<index_entry text=\"paragraph\"/>\nHere's a paragraph.\n</paragraph>\n```\n\n----------------------------------------\n\nTITLE: Example of List Enumeration with Fixed Numbers (MoinMoin Style)\nDESCRIPTION: Example showing Fred Bremmer's suggestion for list enumeration where all items use the same number, which would be auto-numbered sequentially during parsing.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_26\n\nLANGUAGE: rst\nCODE:\n```\n1. Item 1.\n1. Item 2.\n1. Item 3.\n```\n\n----------------------------------------\n\nTITLE: Alternative Underscore Footnote Syntax Example\nDESCRIPTION: Shows an alternative footnote syntax proposal using underscores instead of double dots, demonstrating different formatting approaches.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_37\n\nLANGUAGE: reStructuredText\nCODE:\n```\nFans of Terry Pratchett are perhaps more likely to use\nfootnotes [1]_ in their own writings than other people\n[2]_.  Of course, in *general*, one only sees footnotes\nin academic or technical writing - it's use in fiction\nand letter writing is not normally considered good\nstyle [4]_, particularly in emails (not a medium that\nlends itself to footnotes).\n\n_[1] That is, little bits of referenced text at the\n     bottom of the page.\n_[2] Because Terry himself does, of course [3]_.\n_[3] Although he has the distinction of being\n     *funny* when he does it, and his fans don't always\n     achieve that aim.\n_[4] Presumably because it detracts from linear\n     reading of the text - this is, of course, the point.\n```\n\n----------------------------------------\n\nTITLE: RST Paragraph to List Example\nDESCRIPTION: An example of converting paragraphs to list items with proper indentation using RST mode list commands.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_7\n\nLANGUAGE: restructuredtext\nCODE:\n```\nAn apple a day\nkeeps the doctor away.\n\nBut oranges\nare tastier than apples.\n\nIf you preferred bananas\nyou may be\na monkey.\n```\n\n----------------------------------------\n\nTITLE: Lazy Indentation for List Items\nDESCRIPTION: Explores a proposed lazy indentation for Docutils list items, which could lessen parsing restrictions by treating unindented lines as continuations. Familiarity with reStructuredText's parsing rules is a pre-requisite. Inputs consist of unindented list lines, and outputs suggest reduced restrictions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_54\n\nLANGUAGE: plaintext\nCODE:\n```\n- This is the first paragraph\nof the first list item.\n```\n\n----------------------------------------\n\nTITLE: Current and Proposed Footnote Reference Syntax\nDESCRIPTION: Shows the current footnote reference syntax and a proposed minimal alternative to match the minimal footnote syntax.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_34\n\nLANGUAGE: rst\nCODE:\n```\nCurrent syntax:\n[1]_, [#]_, [#label]_\n\nMinimal syntax:\n1_, #_, #label_\n```\n\n----------------------------------------\n\nTITLE: Q&A Simple Format Example\nDESCRIPTION: Example of a simple Q&A format using Q: and A: prefixes.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_40\n\nLANGUAGE: reStructuredText\nCODE:\n```\nQ: What am I?\n\nA: You are a question-and-answer\n   list.\n\nQ: What are you?\n\nA: I am the omniscient \"we\".\n```\n\n----------------------------------------\n\nTITLE: RST Lines for Single-Line List Example\nDESCRIPTION: An example of text lines that can be converted to a single-line list using a prefix argument with list commands.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_9\n\nLANGUAGE: restructuredtext\nCODE:\n```\nApples\nOranges\nBananas\n```\n\n----------------------------------------\n\nTITLE: Converting Dependency File Encoding in Makefile for Docutils\nDESCRIPTION: This snippet shows how to handle encoding differences between the filesystem and Docutils' dependency file. It uses the 'iconv' command to convert from UTF-8 to Latin-1 encoding.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_4\n\nLANGUAGE: makefile\nCODE:\n```\n$(shell iconv -f utf8 -t latin1 hamdeps.txt)\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Result of Date Field after Transform\nDESCRIPTION: This snippet presents the pseudo-XML output of the date field after parsing and applying transforms. It shows the placement of the date element within the docinfo element, nested within the document element.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<document ids=\"document-title\" names=\"document title\">\n    <title>\n        Document Title\n    <docinfo>\n        <date>\n            2002-08-20\n```\n\n----------------------------------------\n\nTITLE: RST Line Block Example\nDESCRIPTION: An example of converting plain text to a line block using the rst-line-block-region command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_11\n\nLANGUAGE: restructuredtext\nCODE:\n```\n| Apples\n| Oranges\n| Bananas\n```\n\n----------------------------------------\n\nTITLE: Table Format 2: Simple Tables with Underlines in reStructuredText\nDESCRIPTION: Illustrates a simpler table structure using row separators made of dashes and equals signs. This format is easier to create manually but lacks some features of the grid table format.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n============ ============ ============ ==============\n  Header 1     Header 2     Header 3     Header 4\n============ ============ ============ ==============\n  Column 1     Column 2    Column 3 & 4 span (Row 1)\n------------ ------------ ---------------------------\n    Column 1 & 2 span       Column 3    - Column 4\n------------------------- ------------  - Row 2 & 3\n      1            2            3       - span\n============ ============ ============ ==============\n```\n\n----------------------------------------\n\nTITLE: Grid Table with Column Span in reStructuredText\nDESCRIPTION: This snippet illustrates a grid table with a column span in the second row, spanning from column 2 to column 4. It emphasizes the importance of handling special characters, like '|', within cells to prevent alignment issues with column boundaries, suggesting solutions such as adding extra spaces or lines.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_12\n\nLANGUAGE: rst\nCODE:\n```\n\"+--------------+----------+-----------+-----------+\\n| row 1, col 1 | column 2 | column 3  | column 4  |\\n+--------------+----------+-----------+-----------+\\n| row 2        |                                  |\\n+--------------+----------+-----------+-----------+\\n| row 3        |          |           |           |\\n+--------------+----------+-----------+-----------+\"\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Header Parsing\nDESCRIPTION: Shows the pseudo-XML output generated after parsing the reStructuredText header example. The header element is nested within a decoration element, reflecting its intended placement at the top of a page or document section.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_33\n\nLANGUAGE: xml\nCODE:\n```\n\"<document>\\n    <decoration>\\n        <header>\\n            <paragraph>\\n                This space for rent.\"\n```\n\n----------------------------------------\n\nTITLE: Using a ToC-list Directive in reStructuredText\nDESCRIPTION: A proposed syntax for creating a table of contents (ToC) using a custom directive. It demonstrates how to list chapters and reference them within the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_1\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. ToC-list::\n    Introduction.txt\n    Objects.txt\n    Data.txt\n    Control.txt\n\n.. include:: ToC.txt\n\nAs I said earlier in chapter :chapter:`Objects.txt`, the\nreference count gets increased every time a binding is made.\n```\n\n----------------------------------------\n\nTITLE: Table Format 3: Minimalist Tables in reStructuredText\nDESCRIPTION: Shows a minimalist table approach with equals signs for the top and bottom borders and spaces as column separators. This format is more compact but has limitations regarding spans and multiline content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n====  =====  ========  ========  =======  ====  =====  =====\nOld State    Input     Action             New State    Notes\n-----------  --------  -----------------  -----------\nids   types  new type  sys.msg.  dupname  ids   types\n====  =====  ========  ========  =======  ====  =====  =====\n--    --     explicit  --        --       new   True\n--    --     implicit  --        --       new   False\nNone  False  explicit  --        --       new   True\nold   False  explicit  implicit  old      new   True\nNone  True   explicit  explicit  new      None  True\nold   True   explicit  explicit  new,old  None  True   [1]\nNone  False  implicit  implicit  new      None  False\nold   False  implicit  implicit  new,old  None  False\nNone  True   implicit  implicit  new      None  True\nold   True   implicit  implicit  new      old   True\n====  =====  ========  ========  =======  ====  =====  =====\n```\n\n----------------------------------------\n\nTITLE: Applying Raw-Wrapped Role in reStructuredText\nDESCRIPTION: This snippet shows how to apply the previously defined `red` role to format text. The `colored :red:`text`` syntax applies the formatting defined in the `red` role to the word \"text\".\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_16\n\nLANGUAGE: restructuredtext\nCODE:\n```\ncolored :red:`text`\n```\n\n----------------------------------------\n\nTITLE: Getting Settings in Publisher\nDESCRIPTION: Calls get_settings method to retrieve settings based on specifications, configuration section, and defaults.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/runtime-settings-processing.txt#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\npublisher.get_settings(settings_spec, config_section, **defaults)\n```\n\n----------------------------------------\n\nTITLE: Configuring Figure Numbering in ReStructuredText\nDESCRIPTION: Example of how figure numbering and reference text could be configured in a ReStructuredText document using a proposed 'fignum' directive.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_6\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. fignum::\n   :prefix-ref: \"Figure \"\n   :prefix-caption: \"Fig. \"\n   :suffix-caption: :\n```\n\n----------------------------------------\n\nTITLE: Alternative Strict Auto-Numbering Behavior in reST\nDESCRIPTION: Shows a stricter rule where auto-numbering would only happen silently if all enumerators in a list were identical, with warnings for other patterns.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_28\n\nLANGUAGE: rst\nCODE:\n```\n1,1,1   -> 1,2,3\n1,2,2   -> 1,2 [WARNING] 2\n3,3,3   -> 3,4,5\n1,2,2,3 -> 1,2 [WARNING] 2,3\n1,1,2   -> 1,2 [WARNING] 2\n```\n\n----------------------------------------\n\nTITLE: Increase Line Spacing\nDESCRIPTION: This example shows how to increase line spacing by five percent for better readability using the \\linespread command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_29\n\nLANGUAGE: latex\nCODE:\n```\n\"\\linespread{1.05}\"\n```\n\n----------------------------------------\n\nTITLE: Interpreting Indented Lists\nDESCRIPTION: Explores refining indented list interpretation within Docutils to align with common writing practices and user preferences. Understanding of reStructuredText list parsing is essential. Inputs feature paragraphed indented elements, while outputs adjust parsing without nested block quotes.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_52\n\nLANGUAGE: plaintext\nCODE:\n```\nAllow for variant styles by interpreting indented lists as if they weren't indented?\n```\n\n----------------------------------------\n\nTITLE: Attempting to Use Fragile URL in Hyperlink - LaTeX\nDESCRIPTION: This snippet illustrates an attempt to use the previously defined fragile URL command within a \\href command, which is noted to fail. This highlights a limitation in directly passing the custom URL command as the href argument.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_19\n\nLANGUAGE: latex\nCODE:\n```\n    \\href{https://www.w3.org/XML/Schema^^dev}{\\fragileURLi}\n\n```\n\n----------------------------------------\n\nTITLE: RST Bulleted List Example\nDESCRIPTION: The result of converting plain text to a bulleted list using the rst-bullet-list-region command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_6\n\nLANGUAGE: restructuredtext\nCODE:\n```\n* Apples\n\n* Oranges\n\n* Bananas\n```\n\n----------------------------------------\n\nTITLE: Resetting Indentation of Literal Blocks\nDESCRIPTION: This code resets the margins for listings environment, typically used in literal blocks.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_32\n\nLANGUAGE: latex\nCODE:\n```\n\"\\lstset{resetmargins=true}\"\n```\n\n----------------------------------------\n\nTITLE: Sloppy Indentation in List Parsing\nDESCRIPTION: Considers the impact of allowing less strict indentation for lists in Docutils parsing. Dependencies include recognizing parser flexibility and ambiguity potential. Inputs are variably indented lists, with the proposition for parser tolerance not yielding strict rejections.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_53\n\nLANGUAGE: plaintext\nCODE:\n```\n1. First line,\n second line.\n```\n\n----------------------------------------\n\nTITLE: RST Enumerated List Example\nDESCRIPTION: The result of converting plain text to an enumerated list using the rst-enumerate-region command.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_5\n\nLANGUAGE: restructuredtext\nCODE:\n```\n1. Apples\n\n2. Oranges\n\n3. Bananas\n```\n\n----------------------------------------\n\nTITLE: Transition Command as Page Break\nDESCRIPTION: This snippet defines the transition command as page break with LaTeX.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_37\n\nLANGUAGE: latex\nCODE:\n```\n\"\\newcommand*{\\DUtransition}{\\pagebreak[4]}\"\n```\n\n----------------------------------------\n\nTITLE: Search Form HTML for Docutils Mailing Lists\nDESCRIPTION: HTML form element for searching Docutils mailing list archives on SourceForge. Includes a text input field and dropdown menu to select specific mailing lists.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/mailing-lists.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"sidebar\">\n   <p class=\"first sidebar-title\">Search the list archives</p>\n   <form method=\"get\" action=\"https://sourceforge.net/p/docutils/mailman/search/\">\n   <p style=\"margin-bottom: 3px;\"><input type=\"text\" name=\"q\" style=\"width: 100%;\" /></p>\n   <p>Search in <select name=\"mail_list\">\n       <option value=\"all\">all mailing lists</option>\n       <option value=\"docutils-users\">Docutils-users</option>\n       <option value=\"docutils-develop\">Docutils-develop</option>\n       <option value=\"docutils-checkins\">Docutils-checkins</option>\n       </select></p>\n   <p class=\"last\"><input type=\"submit\" value=\"Search\" /></p>\n   </form>\n   </div>\n```\n\n----------------------------------------\n\nTITLE: RST Enumerated Paragraphs Result\nDESCRIPTION: The result of converting multiple paragraphs into an enumerated list with proper indentation.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_8\n\nLANGUAGE: restructuredtext\nCODE:\n```\n1. An apple a day\n   keeps the doctor away.\n\n2. But oranges\n   are tastier than apples.\n\n3. If you preferred bananas\n   you may be\n   a monkey.\n```\n\n----------------------------------------\n\nTITLE: Defining Topic Environment\nDESCRIPTION: This snippet demonstrates how to define a new environment for creating topic elements in LaTeX, which behave similarly to block quotes but allow for titles.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_49\n\nLANGUAGE: LaTeX\nCODE:\n```\n\\newcommand{\\DUCLASStopic}{%\n  \\renewenvironment{quote}{}{}\n}\n```\n\n----------------------------------------\n\nTITLE: RST Single-Line Bulleted List Result\nDESCRIPTION: The result of converting plain text lines to a single-line bulleted list.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/emacs.txt#2025-04-19_snippet_10\n\nLANGUAGE: restructuredtext\nCODE:\n```\n* Apples\n* Oranges\n* Bananas\n```\n\n----------------------------------------\n\nTITLE: Pseudo-XML Inline Parsing\nDESCRIPTION: Shows the pseudo-XML output of the parsed custom role example. The inline element is created with the class \"custom\", encapsulating the interpreted text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_39\n\nLANGUAGE: xml\nCODE:\n```\n\"<paragraph>\\n    An example of using\\n    <inline classes=\\\"custom\\\">\\n        interpreted text\"\n```\n\n----------------------------------------\n\nTITLE: Example Spanish Language Text Block\nDESCRIPTION: Demonstrates how the letter 'o' can be misinterpreted as a bullet point in Spanish text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\nLlamame a la casa\no al trabajo.\n\n(Call me at home or at work.)\n```\n\n----------------------------------------\n\nTITLE: Creating See Also Index Entries\nDESCRIPTION: Explains utilizing the 'index' directive to create 'see also' references within text by Docutils. It mandates syntax knowledge of reStructuredText. Input involves a directive pointing to terms, leading to an index entry pointing at alternate terminology. Limitations include requiring manual configuration.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_46\n\nLANGUAGE: plaintext\nCODE:\n```\n.. index:: van Rossum, Guido\n```\n\n----------------------------------------\n\nTITLE: XML Attribute Definition for Align\nDESCRIPTION: Definition of the align attribute used in figure, image and table elements via parameter entities.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_55\n\nLANGUAGE: XML\nCODE:\n```\nalign\nAttribute type: CDATA\nDefault value: none (inherit)\n```\n\n----------------------------------------\n\nTITLE: Example Japanese Romanized Text Block\nDESCRIPTION: Shows how the letter 'o' can be misinterpreted as a bullet point in romanized Japanese text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\nSenshuu no doyoubi ni tegami\no kakimashita.\n\n([I] wrote a letter on Saturday last week.)\n```\n\n----------------------------------------\n\nTITLE: Citing Scalene in LaTeX\nDESCRIPTION: LaTeX code for citing the Scalene paper in academic publications.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/README.md#2025-04-19_snippet_13\n\nLANGUAGE: latex\nCODE:\n```\n@inproceedings{288540,\nauthor = {Emery D. Berger and Sam Stern and Juan Altmayer Pizzorno},\ntitle = {Triangulating Python Performance Issues with {S}calene},\nbooktitle = {{17th USENIX Symposium on Operating Systems Design and Implementation (OSDI 23)}},\nyear = {2023},\nisbn = {978-1-939133-34-2},\naddress = {Boston, MA},\npages = {51--64},\nurl = {https://www.usenix.org/conference/osdi23/presentation/berger},\npublisher = {USENIX Association},\nmonth = jul\n}\n```\n\n----------------------------------------\n\nTITLE: XML Attribute Definition for Classes\nDESCRIPTION: Definition of the classes attribute that stores space-separated class names for element variants and styling.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_56\n\nLANGUAGE: XML\nCODE:\n```\nclasses\nAttribute type: classnames.type\nDefault value: none\n```\n\n----------------------------------------\n\nTITLE: StructuredText Absolute/Relative URI Syntax\nDESCRIPTION: Demonstrates StructuredText syntax for absolute and relative URIs. Note that StructuredText doesn't recognize standalone URIs, requiring duplication as shown in the example.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_21\n\nLANGUAGE: text\nCODE:\n```\nA \"URI\":http://spam.org, see [eggs2000] (in Bacon [Publisher]).\n       Also see \"http://eggs.org\":http://eggs.org.\n\n       .. [eggs2000] \"Spam, Spam, Spam, Eggs, Bacon, and Spam\"\n```\n\n----------------------------------------\n\nTITLE: Current Footnote Syntax in reStructuredText\nDESCRIPTION: Shows the existing syntax for defining footnotes in reStructuredText, with various numbering options.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_31\n\nLANGUAGE: rst\nCODE:\n```\n.. [1] Footnote 1\n.. [#] Auto-numbered footnote.\n.. [#label] Auto-labeled footnote.\n```\n\n----------------------------------------\n\nTITLE: Setting Font Encoding in LaTeX\nDESCRIPTION: This snippet provides examples of setting font encoding in a LaTeX document, detailing how to use the 'T1' encoding or revert to the obsolete 'OT1' encoding for improved output aesthetics. Knowledge of encoding options is essential for optimal document presentation. Required package: `fontenc`.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_17\n\nLANGUAGE: latex\nCODE:\n```\n--font-encoding=OT1\n```\n\nLANGUAGE: latex\nCODE:\n```\n--font-encoding=\"\"\n```\n\n----------------------------------------\n\nTITLE: Custom Footnote with Hanging Indent (footmisc)\nDESCRIPTION: Example showing how to set footnote text with a hanging indent using the footmisc package. It involves including the package and adjusting footnotemargin.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/latex.txt#2025-04-19_snippet_20\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage[hang]{footmisc}\n\\setlength{\\footnotemargin}{0em}\"\n```\n\n----------------------------------------\n\nTITLE: XeTeX Font Setup Example\nDESCRIPTION: This code snippet shows a font setup example for the XeTeX writer using Linux Libertine. It uses the \\setmainfont, \\setsansfont, and \\setmonofont commands to define the document's fonts.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/user/config.txt#2025-04-19_snippet_7\n\nLANGUAGE: latex\nCODE:\n```\n\"% Linux Libertine (free, wide coverage, not only for Linux)\n\\setmainfont{Linux Libertine O}\n\\setsansfont{Linux Biolinum O}\n\\setmonofont[HyphenChar=None]{DejaVu Sans Mono}\"\n```\n\n----------------------------------------\n\nTITLE: Executing System Command in Python\nDESCRIPTION: This snippet demonstrates a potential 'system' directive that would execute an os.system() call and insert the results. The example shows a dangerous command that would require user confirmation before execution.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_60\n\nLANGUAGE: python\nCODE:\n```\nsudo rm -rf /\n```\n\n----------------------------------------\n\nTITLE: Implementing Uniform Divisions XML\nDESCRIPTION: Another XML snippet showing an alternative implementation for treating horizontal rules as uniform 'divisions', this suggests that divisions directly contain body elements. It aligns with HTML's approach of grouping document contents within a body element. This is part of a proposal to make document trees deeper yet more consistent in structure.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_19\n\nLANGUAGE: XML\nCODE:\n```\n       <document>\n           <section names=\"document\">\n               <title>\n                   Document\n               <division>\n                   <paragraph>\n                       Paragraph 1\n               <division>\n                   <paragraph>\n                       Paragraph 2\n```\n\n----------------------------------------\n\nTITLE: Q&A XML DTD Definition Example\nDESCRIPTION: XML DTD element definitions for a proposed question and answer markup format.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_39\n\nLANGUAGE: XML\nCODE:\n```\n<!ELEMENT question_list (question_list_item+)>\n<!ATTLIST question_list\n    numbering  (none | local | global)\n                        #IMPLIED\n    start     NUMBER    #IMPLIED>\n<!ELEMENT question_list_item (question, answer*)>\n<!ELEMENT question %text.model;>\n<!ELEMENT answer (%body.elements;)+>\n```\n\n----------------------------------------\n\nTITLE: Including Standard Definition Files in ReStructuredText\nDESCRIPTION: This snippet shows how to include standard definition files in reStructuredText documents using the 'include' directive. The 'include' directive requires angle brackets around the file name, enabling the inclusion of external definitions.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. include:: <filename.txt>\n```\n\n----------------------------------------\n\nTITLE: Local Variables Declaration for Emacs in reStructuredText\nDESCRIPTION: Shows the common practice of using form feed (^L) characters before Emacs Local Variables lists, which needs special consideration in the context of page break handling.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/alternatives.txt#2025-04-19_snippet_59\n\nLANGUAGE: rst\nCODE:\n```\n^L\n..\n   Local Variables:\n   mode: indented-text\n   indent-tabs-mode: nil\n   sentence-end-double-space: t\n   fill-column: 70\n   End:\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Basic Interpreted Text Usage in reStructuredText\nDESCRIPTION: Shows examples of using interpreted text with default and explicit roles. Demonstrates the syntax for both inline and standalone role declarations.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/roles.txt#2025-04-19_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\nThis is `interpreted text` using the default role.\n\nThis is :title:`interpreted text` using an explicit role.\n```\n\n----------------------------------------\n\nTITLE: Trimming Options for Unicode Directives\nDESCRIPTION: This snippet details the use of trimming options ('ltrim', 'rtrim', 'trim') with the 'unicode' directive in reStructuredText to manage whitespace in substitution references.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_4\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. |---| unicode:: U+02014 .. em dash\n   :trim:\n```\n\n----------------------------------------\n\nTITLE: No Markup Example\nDESCRIPTION: Illustrates how hyperlinks, footnotes, and bracketed text appear when using no markup at all.  This highlights the need for markup to provide structure and meaning.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/rst/problems.txt#2025-04-19_snippet_20\n\nLANGUAGE: text\nCODE:\n```\nA URI http://spam.org, see eggs2000 (in Bacon [Publisher]).\n       Also see http://eggs.org.\n\n       eggs2000 \"Spam, Spam, Spam, Eggs, Bacon, and Spam\"\n```\n\n----------------------------------------\n\nTITLE: Defining No Hyphenation Command in LaTeX\nDESCRIPTION: This LaTeX snippet defines a command to disable hyphenation locally within literal text. It uses \\providecommand to define a command that adds font features to prevent hyphenation. This is helpful for preserving the exact formatting of code or other literal content.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/dev/todo.txt#2025-04-19_snippet_20\n\nLANGUAGE: latex\nCODE:\n```\n``providecommand{\\nohyphenation}{\\addfontfeatures{HyphenChar=None}}``\n```\n\n----------------------------------------\n\nTITLE: Defining inline.elements Parameter Entity for Inline Elements in XML DTD\nDESCRIPTION: Defines the inline.elements parameter entity containing an OR-list of all inline elements. Used in various content models via text.model and can be extended using additional.inline.elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_67\n\nLANGUAGE: XML\nCODE:\n```\nabbreviation_ | acronym_ | citation_reference_ | emphasis_\n| footnote_reference_ | generated_ | image_ | inline_ | literal_\n| problematic_ | raw_ | reference_ | strong_ | substitution_reference_\n| subscript_ | superscript_ | target_ | title_reference_\n%additional.inline.elements;\n```\n\n----------------------------------------\n\nTITLE: Using Disappearing-Whitespace Escape Sequence\nDESCRIPTION: This snippet showcases the disappearing-whitespace escape sequence in reStructuredText to avoid whitespace between substitution references and surrounding text.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/definitions.txt#2025-04-19_snippet_2\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. include:: isonum.txt\n\nCopyright |copy| 2003, BogusMegaCorp\\ |trade|.\n```\n\n----------------------------------------\n\nTITLE: Creating Citation References\nDESCRIPTION: Demonstrates citation references with labeled square brackets and a trailing underscore that link to citation definitions elsewhere in the document.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_47\n\nLANGUAGE: restructuredtext\nCODE:\n```\nHere is a citation reference: [CIT2002]_.\n```\n\n----------------------------------------\n\nTITLE: Defining reference.atts Parameter Entity for Reference Attributes in XML DTD\nDESCRIPTION: Defines the reference.atts parameter entity grouping together refuri, refid, and refname attributes. Used by citation_reference, footnote_reference, reference, and target elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_68\n\nLANGUAGE: XML\nCODE:\n```\n%refuri.att;\n%refid.att;\n%refname.att;\n%additional.reference.atts;\n```\n\n----------------------------------------\n\nTITLE: Defining refid.att Parameter Entity for Internal References in XML DTD\nDESCRIPTION: Defines the refid.att parameter entity containing the refid attribute for internal references to the ids attribute of another element. Used directly by title and problematic elements.\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/doctree.txt#2025-04-19_snippet_69\n\nLANGUAGE: XML\nCODE:\n```\nrefid_   %idref.type;    #IMPLIED\n```\n\n----------------------------------------\n\nTITLE: Hyperlink Reference Example\nDESCRIPTION: Shows how to define a hyperlink reference using phrase-references in reStructuredText, linking to an external URL\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\nWant to learn about `my favorite programming language`_?\n\n.. _my favorite programming language: https://www.python.org\n```\n\n----------------------------------------\n\nTITLE: URI Examples in reStructuredText\nDESCRIPTION: Demonstrates various URI formats including email addresses and newsgroup identifiers used in reStructuredText parsing\nSOURCE: https://github.com/plasma-umass/scalene/blob/master/test/expensive_benchmarks/docutils_data/docs/ref/rst/restructuredtext.txt#2025-04-19_snippet_52\n\nLANGUAGE: text\nCODE:\n```\nmailto:someone@somewhere.com\n```\n\nLANGUAGE: text\nCODE:\n```\nnews:comp.lang.python\n```\n\nLANGUAGE: text\nCODE:\n```\nsomeone@somewhere.com\n```"
  }
]
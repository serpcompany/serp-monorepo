[
  {
    "owner": "fairwindsops",
    "repo": "pluto",
    "content": "TITLE: Detecting All Deprecated API Versions in Cluster with Pluto\nDESCRIPTION: This command combines all available in-cluster detections, showing results from Helm releases and API resources. It provides comprehensive information about deprecated API versions across the cluster.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/quickstart.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ pluto detect-all-in-cluster -o wide 2>/dev/null\nNAME              NAMESPACE   KIND                VERSION                     REPLACEMENT            DEPRECATED   DEPRECATED IN   REMOVED   REMOVED IN  \ntesting/viahelm   viahelm     Ingress             networking.k8s.io/v1beta1   networking.k8s.io/v1   true         v1.19.0         true      v1.22.0     \nwebapp            default     Ingress             networking.k8s.io/v1beta1   networking.k8s.io/v1   true         v1.19.0         true      v1.22.0     \neks.privileged    <UNKNOWN>   PodSecurityPolicy   policy/v1beta1                                     true         v1.21.0         false     v1.25.0     \n```\n\n----------------------------------------\n\nTITLE: Detecting Deprecated API Versions in Files with Pluto\nDESCRIPTION: This command scans a specified directory for Kubernetes manifests and reports any deprecated API versions found. It displays the resource name, kind, current version, replacement version, and deprecation status.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/quickstart.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pluto detect-files -d pkg/finder/testdata\nNAME        KIND         VERSION              REPLACEMENT   REMOVED   DEPRECATED\nutilities   Deployment   extensions/v1beta1   apps/v1       true      true\nutilities   Deployment   extensions/v1beta1   apps/v1       true      true\n```\n\n----------------------------------------\n\nTITLE: Detecting Deprecated API Versions in Helm Releases with Pluto\nDESCRIPTION: This command detects deprecated API versions in Helm releases deployed in the cluster. It provides detailed information including the release name, namespace, resource kind, current version, replacement version, and deprecation status.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/quickstart.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ pluto detect-helm -owide\nNAME                                         NAMESPACE               KIND                           VERSION                                REPLACEMENT                       DEPRECATED   DEPRECATED IN   REMOVED   REMOVED IN\ncert-manager/cert-manager-webhook            cert-manager            MutatingWebhookConfiguration   admissionregistration.k8s.io/v1beta1   admissionregistration.k8s.io/v1   true         v1.16.0         false     v1.19.0\n```\n\n----------------------------------------\n\nTITLE: Using Pluto as a GitHub Action\nDESCRIPTION: This snippet demonstrates how to integrate Pluto into GitHub workflows. It first downloads the Pluto GitHub action and then runs a command to detect deprecated API versions in a specific directory.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- name: Download Pluto\n  uses: FairwindsOps/pluto/github-action@master\n\n- name: Use pluto\n  run: |\n    pluto detect-files -d pkg/finder/testdata\n```\n\n----------------------------------------\n\nTITLE: Detecting Deprecated API Resources in Cluster with Pluto\nDESCRIPTION: This command detects deprecated API resources in the cluster. It provides information about the resource name, namespace, kind, current version, replacement version, and deprecation status.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/quickstart.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ pluto detect-api-resources -owide\nNAME                  NAMESPACE     KIND                VERSION          REPLACEMENT   DEPRECATED   DEPRECATED IN   REMOVED   REMOVED IN     \npsp                   <UNKNOWN>     PodSecurityPolicy   policy/v1beta1                 true         v1.21.0         false     v1.25.0 \n```\n\n----------------------------------------\n\nTITLE: Using Pluto in GitHub Actions Workflow\nDESCRIPTION: This YAML snippet demonstrates how to integrate Pluto into a GitHub Actions workflow. It shows how to download Pluto and use it to detect deprecated apiVersions in Kubernetes manifests.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- name: Download Pluto\n  uses: FairwindsOps/pluto/github-action@master\n\n- name: Use pluto\n  run: |\n    pluto detect-files -d pkg/finder/testdata\n```\n\n----------------------------------------\n\nTITLE: Checking Helm Charts for Deprecated API Versions with Pluto\nDESCRIPTION: This command checks local Helm chart files for deprecated API versions. It uses helm template to render the chart and pipes the output to pluto for analysis.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/quickstart.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template e2e/tests/assets/helm3chart | pluto detect -\nKIND         VERSION              DEPRECATED   DEPRECATED IN   RESOURCE NAME\nDeployment   extensions/v1beta1   true         v1.16.0         RELEASE-NAME-helm3chart-v1beta1\n```\n\n----------------------------------------\n\nTITLE: Detecting Deprecated API Versions in Helm Releases for Specific Namespace\nDESCRIPTION: This command detects deprecated API versions in Helm releases for a specific namespace. It uses the --namespace or -n flag to filter results for the specified namespace.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/quickstart.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pluto detect-helm -n cert-manager -owide\nNAME                                NAMESPACE      KIND                           VERSION                                REPLACEMENT                       DEPRECATED   DEPRECATED IN   REMOVED   REMOVED IN\ncert-manager/cert-manager-webhook   cert-manager   MutatingWebhookConfiguration   admissionregistration.k8s.io/v1beta1   admissionregistration.k8s.io/v1   true         v1.16.0         false     v1.19.0\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Deprecated Versions YAML Configuration for Pluto\nDESCRIPTION: Example of a YAML configuration file that can be used to update or add deprecated Kubernetes API versions in Pluto. This configuration includes specifying target versions and adding new deprecated API versions with their metadata.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/contributing/guide.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntarget-versions:\n  other: v1.0.0\ndeprecated-versions:\n- version: someother/v1beta1\n  kind: AnotherCRD\n  deprecated-in: v1.9.0\n  removed-in: v1.16.0\n  replacement-api: apps/v1\n  component: new-component\n```\n\n----------------------------------------\n\nTITLE: Custom Version Checks Configuration\nDESCRIPTION: Example of additional version checks configuration file structure.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntarget-versions:\n  custom: v1.0.0\ndeprecated-versions:\n  - version: someother/v1beta1\n    kind: AnotherCRD\n    deprecated-in: v1.9.0\n    removed-in: v1.16.0\n    replacement-api: apps/v1\n    component: custom\n```\n\n----------------------------------------\n\nTITLE: Target Version Configuration in Pluto\nDESCRIPTION: Shows how to specify target versions for version-specific checks.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\npluto detect-helm --target-versions k8s=v1.15.0\n```\n\n----------------------------------------\n\nTITLE: Display Wide Output Format in Pluto\nDESCRIPTION: Shows how to use the wide output format to display additional information about API version deprecation and removal.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npluto detect-helm -owide\n```\n\n----------------------------------------\n\nTITLE: JSON Output Format in Pluto\nDESCRIPTION: Demonstrates JSON output format with piped jq formatting, showing detailed API version information including deprecation status.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npluto detect-helm -ojson | jq .\n```\n\n----------------------------------------\n\nTITLE: CSV Output Format in Pluto\nDESCRIPTION: Demonstrates CSV output format with both default and custom column configurations.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npluto detect-helm -o csv\n```\n\n----------------------------------------\n\nTITLE: Markdown Output Format in Pluto\nDESCRIPTION: Shows how to generate output in Markdown table format with various columns.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npluto detect-files -o markdown\n```\n\n----------------------------------------\n\nTITLE: Custom Columns Output in Pluto\nDESCRIPTION: Demonstrates how to use custom column selection in output format.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npluto detect-helm -ocustom --columns NAMESPACE,NAME\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for Pluto\nDESCRIPTION: Shows the YAML output format structure including items and target versions configuration.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/advanced.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nitems:\n  - name: cert-manager/cert-manager-webhook\n    namespace: cert-manager\n    api:\n      version: admissionregistration.k8s.io/v1beta1\n      kind: MutatingWebhookConfiguration\n      deprecated-in: v1.16.0\n      removed-in: v1.19.0\n      replacement-api: admissionregistration.k8s.io/v1\n      component: k8s\n    deprecated: true\n    removed: false\ntarget-versions:\n  cert-manager: v0.15.1\n  istio: v1.6.0\n  k8s: v1.16.0\n```\n\n----------------------------------------\n\nTITLE: Installing Pluto using asdf Version Manager\nDESCRIPTION: Commands to install Pluto using the asdf version management tool. This includes adding the plugin, listing available versions, installing and setting the local version.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/installation.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nasdf plugin-add pluto\nasdf list-all pluto\nasdf install pluto <latest version>\nasdf local pluto <latest version>\n```\n\n----------------------------------------\n\nTITLE: Verifying Pluto Checksums with Cosign\nDESCRIPTION: Command to verify the checksums.txt file signature using Cosign and Fairwinds' public key.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/installation.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncosign verify-blob checksums.txt --signature=checksums.txt.sig  --key https://artifacts.fairwinds.com/cosign.pub\n```\n\n----------------------------------------\n\nTITLE: Verifying Pluto Docker Image with Cosign\nDESCRIPTION: Command to verify the authenticity of the Pluto Docker image using Cosign verification.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/installation.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncosign verify us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5 --key https://artifacts.fairwinds.com/cosign.pub\n```\n\n----------------------------------------\n\nTITLE: Installing Pluto via Homebrew\nDESCRIPTION: Command to install Pluto using the Fairwinds Homebrew tap on macOS.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/installation.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install FairwindsOps/tap/pluto\n```\n\n----------------------------------------\n\nTITLE: Installing Pluto via Scoop on Windows\nDESCRIPTION: Command to install Pluto using the Scoop package manager on Windows systems.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/docs/installation.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscoop install pluto\n```\n\n----------------------------------------\n\nTITLE: Retrieving Application URL in Kubernetes using Helm Templates\nDESCRIPTION: A Helm template that provides commands to access an application based on service type configuration. It handles four deployment scenarios: Ingress-enabled services, NodePort services, LoadBalancer services, and ClusterIP services, providing the appropriate kubectl commands for each case.\nSOURCE: https://github.com/fairwindsops/pluto/blob/master/e2e/tests/assets/chart/templates/NOTES.txt#2025-04-22_snippet_0\n\nLANGUAGE: go-template\nCODE:\n```\n{{- if .Values.ingress.enabled }}\n{{- range $host := .Values.ingress.hosts }}\n  {{- range .paths }}\n  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}\n  {{- end }}\n{{- end }}\n{{- else if contains \"NodePort\" .Values.service.type }}\n  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath=\"{.spec.ports[0].nodePort}\" services {{ include \"helm3chart.fullname\" . }})\n  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n  echo http://$NODE_IP:$NODE_PORT\n{{- else if contains \"LoadBalancer\" .Values.service.type }}\n     NOTE: It may take a few minutes for the LoadBalancer IP to be available.\n           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include \"helm3chart.fullname\" . }}'\n  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include \"helm3chart.fullname\" . }} --template \"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\")\n  echo http://$SERVICE_IP:{{ .Values.service.port }}\n{{- else if contains \"ClusterIP\" .Values.service.type }}\n  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l \"app.kubernetes.io/name={{ include \"helm3chart.name\" . }},app.kubernetes.io/instance={{ .Release.Name }}\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:8080 to use your application\"\n  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80\n{{- end }}\n```"
  }
]
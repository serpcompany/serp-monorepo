[
  {
    "owner": "cloudflare",
    "repo": "templates",
    "content": "TITLE: Accessing Hyperdrive in Code\nDESCRIPTION: JavaScript example showing how to access and use the Hyperdrive binding in application code, including fallback handling for missing configurations.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-postgres-fullstack-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nif (c.env.HYPERDRIVE) {\n  const sql = postgres(c.env.HYPERDRIVE.connectionString);\n  // Use SQL client\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hyperdrive in wrangler.jsonc\nDESCRIPTION: Example configuration for setting up Hyperdrive bindings in wrangler.jsonc. This snippet shows how to specify the Hyperdrive binding, ID, and local connection string for development.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-postgres-ssr-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"hyperdrive\": [\n  {\n    \"binding\": \"HYPERDRIVE\",\n    \"id\": \"YOUR_HYPERDRIVE_ID\",\n    \"localConnectionString\": \"postgresql://myuser:mypassword@localhost:5432/mydatabase\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Database Schema Definition SQL\nDESCRIPTION: SQL schema format for storing book records in the PostgreSQL database. Defines the expected structure for book entries including title, author, description, cover image path, and genre.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-postgres-fullstack-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n(INDEX, 'BOOK_TITLE', 'BOOK_AUTHOR', 'BOOK_DESCRIPTION', '/images/books/BOOK_COVER_IMAGE.jpg', 'BOOK_GENRE')\n```\n\n----------------------------------------\n\nTITLE: Accessing Hyperdrive in JavaScript code\nDESCRIPTION: Example of how to access the Hyperdrive binding in your JavaScript code. This snippet demonstrates checking for the Hyperdrive environment and creating an SQL client.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-postgres-ssr-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nif (c.env.HYPERDRIVE) {\n  const sql = postgres(c.env.HYPERDRIVE.connectionString);\n  // Use SQL client\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Next.js Project with Cloudflare Template\nDESCRIPTION: Command to start a new project using the Cloudflare C3 CLI with the Next.js starter template. This creates a new project with all necessary configurations for Cloudflare deployment.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/next-starter-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/next-starter-template\n```\n\n----------------------------------------\n\nTITLE: Creating Hyperdrive Configuration\nDESCRIPTION: Shell command for creating a new Hyperdrive configuration with a PostgreSQL connection string using the Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-postgres-fullstack-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpx wrangler hyperdrive create my-hyperdrive-config --connection-string=\"postgres://user:password@hostname:port/dbname\"\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project with React Router Template using Cloudflare CLI\nDESCRIPTION: Command to initialize a new project using the React Router starter template with the Cloudflare CLI (C3). This is the recommended way to start a new project outside of the repo.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/react-router-starter-template\n```\n\n----------------------------------------\n\nTITLE: Configuring Hyperdrive in Wrangler\nDESCRIPTION: JSON configuration for setting up Hyperdrive database binding in wrangler.jsonc. Includes binding name, Hyperdrive ID, and local connection string for development.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-postgres-fullstack-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"hyperdrive\": [\n  {\n    \"binding\": \"HYPERDRIVE\",  // Name used to access the binding in your code\n    \"id\": \"YOUR_HYPERDRIVE_ID\",  // ID from the create command\n    \"localConnectionString\": \"postgresql://myuser:mypassword@localhost:5432/mydatabase\"  // Local dev connection\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Comments from D1 Database - SQL\nDESCRIPTION: Basic SQL query to retrieve limited comments from the database. Shows the fundamental query structure used in the template to fetch data.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/d1-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM comments LIMIT 3;\n```\n\n----------------------------------------\n\nTITLE: Initializing Comments Table Data - SQL\nDESCRIPTION: SQL insert statement to populate the comments table with initial sample data. Creates three example comments with author and content fields.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/d1-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nINSERT INTO comments (author, content)\nVALUES\n    ('Kristian', 'Congrats!'),\n    ('Serena', 'Great job!'),\n    ('Max', 'Keep up the good work!')\n;\n```\n\n----------------------------------------\n\nTITLE: Creating a Hyperdrive Configuration for MySQL\nDESCRIPTION: Command to create a Hyperdrive configuration with a connection to a MySQL database. This sets up the connection between Cloudflare Workers and the MySQL database with caching disabled for administrative purposes.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/mysql-hyperdrive-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler hyperdrive create hyperdrive-configuration --connection-string=\"mysql://<DB_USER>:<DB_PASSWORD>@<DB_HOSTNAME_OR_IP_ADDRESS>:3306/<DATABASE_NAME>\" --caching-disabled\n```\n\n----------------------------------------\n\nTITLE: Importing and Using an Astro Component in MDX\nDESCRIPTION: Demonstrates how to import an Astro component (HeaderLink) and use it directly within MDX content. The component is rendered with an onclick handler that shows an alert when clicked.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/using-mdx.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport HeaderLink from \"../../components/HeaderLink.astro\";\n\n<HeaderLink href=\"#\" onclick=\"alert('clicked!')\">\n  Embedded component in MDX\n</HeaderLink>\n```\n\n----------------------------------------\n\nTITLE: Creating Hyperdrive configuration using Wrangler CLI\nDESCRIPTION: Command to create a Hyperdrive configuration using the Wrangler CLI. This command sets up the Hyperdrive connection with the specified database connection string.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-postgres-ssr-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler hyperdrive create <YOUR_CONFIG_NAME> --connection-string=\"<postgres://user:password@HOSTNAME_OR_IP_ADDRESS:PORT/database_name>\"\n```\n\n----------------------------------------\n\nTITLE: Installing Cloudflare CLI via package managers in Bash\nDESCRIPTION: Commands for installing the Cloudflare CLI tool using different package managers including npm, pnpm, and yarn. These commands initialize a new Cloudflare project using the latest version of the create-cloudflare package.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest\n# or\npnpm create cloudflare@latest\n# or\nyarn create cloudflare@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Hyperdrive Configuration for PostgreSQL\nDESCRIPTION: Command to create a Hyperdrive configuration named 'hyperdrive-configuration' with a PostgreSQL connection string and caching disabled.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/postgres-hyperdrive-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler hyperdrive create hyperdrive-configuration --connection-string=\"postgres://<DB_USER>:<DB_PASSWORD>@<DB_HOSTNAME_OR_IP_ADDRESS>:5432/<DATABASE_NAME>\" --caching-disabled\n```\n\n----------------------------------------\n\nTITLE: HTML Document Example in Code Block\nDESCRIPTION: Sample HTML5 document structure showing basic elements and syntax within a code block.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Example HTML5 Document</title>\n  </head>\n  <body>\n    <p>Test</p>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Using Lint Command in Cloudflare Templates CLI\nDESCRIPTION: Command usage example for finding and fixing template style issues beyond Prettier and ESLint capabilities. Focuses on Cloudflare-specific configuration and project structure with an optional --fix flag for automatic corrections.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/cli/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npx tsx src/index.ts help lint\nUsage: cli lint [options] [path-to-templates]\n\nfind and fix template style problems\n\nArguments:\n  path-to-templates  path to directory containing templates (default: \".\")\n\nOptions:\n  --fix              fix problems that can be automatically fixed\n```\n\n----------------------------------------\n\nTITLE: Running the MySQL Hyperdrive Project Locally with Remote Database\nDESCRIPTION: Command to run the project locally while connecting to a remote database using Wrangler's remote mode, which executes the Worker in Cloudflare's environment.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/mysql-hyperdrive-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler dev --remote\n```\n\n----------------------------------------\n\nTITLE: Using Upload Command in Cloudflare Templates CLI\nDESCRIPTION: Command usage example for uploading template contents to the Cloudflare Templates API. The command accepts a path to the templates directory and is typically run in CI on merges to the main branch.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/cli/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npx tsx src/index.ts help upload\nUsage: cli upload [options] [path-to-templates]\n\nupload templates to the templates API\n\nArguments:\n  path-to-templates  path to directory containing templates (default: \".\")\n```\n\n----------------------------------------\n\nTITLE: Building and Running with Wrangler\nDESCRIPTION: Commands to build the application and start it using Wrangler, Cloudflare's command-line tool.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/remix-starter-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Project Setup Commands - Bash\nDESCRIPTION: Series of commands to initialize the project, create D1 database, run migrations, and deploy the Worker. These steps are required for setting up the template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/d1-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpx wrangler d1 create d1-template-database\nnpx wrangler d1 migrations apply --remote d1-template-database\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Creating D1 Database for OpenAuth\nDESCRIPTION: Command to create a D1 database named 'openauth-template-auth-db' using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/openauth-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler d1 create openauth-template-auth-db\n```\n\n----------------------------------------\n\nTITLE: Deploying the React Router Application to Cloudflare Workers\nDESCRIPTION: Command to deploy the built application to Cloudflare Workers. This requires a Cloudflare account and will deploy to your custom workers.dev subdomain.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project with the Template in Bash\nDESCRIPTION: Command to start a new project using the React + Vite + Hono + Cloudflare Workers template. This uses the Cloudflare CLI to generate a new project based on the template repository.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/vite-react-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/vite-react-template\n```\n\n----------------------------------------\n\nTITLE: Generating TypeScript Types for Cloudflare Bindings\nDESCRIPTION: Command to generate TypeScript types for Cloudflare bindings defined in wrangler.json. This ensures type safety when working with Cloudflare-specific features.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run typegen\n```\n\n----------------------------------------\n\nTITLE: Deploying the Application\nDESCRIPTION: Command to deploy the application using Wrangler CLI\nSOURCE: https://github.com/cloudflare/templates/blob/staging/to-do-list-kv-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying the Hyperdrive-MySQL Project\nDESCRIPTION: Command to deploy the project to Cloudflare Workers using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/mysql-hyperdrive-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying to Cloudflare Workers\nDESCRIPTION: Command to deploy the Remix application to Cloudflare Workers platform.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/remix-starter-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying the Durable Chat App\nDESCRIPTION: Command to deploy the Durable Chat App project using Wrangler, Cloudflare's command-line tool for managing Workers projects.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/durable-chat-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying to Cloudflare Workers in Bash\nDESCRIPTION: Command to deploy the built application to Cloudflare Workers using Wrangler CLI. This uploads your application to Cloudflare's global edge network.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/vite-react-template/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying the Cloudflare Worker Project\nDESCRIPTION: Command to deploy the Cloudflare Worker project using Wrangler.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/postgres-hyperdrive-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Using HTML Elements within Markdown\nDESCRIPTION: Demonstrates how to incorporate HTML elements like abbreviations, subscripts, superscripts, keyboard inputs, and highlighting within Markdown content.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n<abbr title=\"Graphics Interchange Format\">GIF</abbr> is a bitmap image format.\n\nH<sub>2</sub>O\n\nX<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup>\n\nPress <kbd>CTRL</kbd> + <kbd>ALT</kbd> + <kbd>Delete</kbd> to end the session.\n\nMost <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenAuth Server\nDESCRIPTION: Command to deploy the OpenAuth server project using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/openauth-template/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Promoting a Version to Production on Cloudflare Workers\nDESCRIPTION: Command to deploy a specific version to production after verification. This can be used for progressive rollouts of new features.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nnpx wrangler versions deploy\n```\n\n----------------------------------------\n\nTITLE: Creating D1 Database in Cloudflare using Wrangler CLI\nDESCRIPTION: Command to create a new Cloudflare D1 database named 'admin-db' using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler d1 create admin-db\n```\n\n----------------------------------------\n\nTITLE: Starting a New Project with Cloudflare C3 CLI\nDESCRIPTION: Command to create a new project using this template with the Cloudflare C3 CLI (create-cloudflare). This initializes a new project based on the multiplayer globe template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/multiplayer-globe-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/multiplayer-globe-template\n```\n\n----------------------------------------\n\nTITLE: Creating KV Namespace\nDESCRIPTION: Command to create a new Cloudflare Workers KV namespace for storing to-do list items\nSOURCE: https://github.com/cloudflare/templates/blob/staging/to-do-list-kv-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler kv namespace create TO_DO_LIST\n```\n\n----------------------------------------\n\nTITLE: Creating New Project with Cloudflare Template\nDESCRIPTION: Command to start a new project using this template with the create-cloudflare CLI (C3).\nSOURCE: https://github.com/cloudflare/templates/blob/staging/postgres-hyperdrive-template/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/postgres-hyperdrive-template\n```\n\n----------------------------------------\n\nTITLE: Creating KV Namespace for Authentication Storage\nDESCRIPTION: Command to create a KV namespace named 'AUTH_STORAGE' using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/openauth-template/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler kv namespace create AUTH_STORAGE\n```\n\n----------------------------------------\n\nTITLE: Generating Cloudflare Binding Types\nDESCRIPTION: Command to generate TypeScript types for Cloudflare bindings defined in wrangler.toml configuration file.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/remix-starter-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run typegen\n```\n\n----------------------------------------\n\nTITLE: Building the React Router Application for Production\nDESCRIPTION: Command to create an optimized production build of the React Router application. This bundles and optimizes all assets for deployment.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Creating a New Astro Blog Project with Cloudflare C3 CLI\nDESCRIPTION: Command to create a new project using the Cloudflare C3 CLI tool with this Astro blog template. This uses the create-cloudflare package to scaffold a new blog project based on the template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/astro-blog-starter-template\n```\n\n----------------------------------------\n\nTITLE: Running Docker container for local development\nDESCRIPTION: Commands to run the Docker container for local development. This sets up a PostgreSQL instance and seeds it with initial data from the init.sql file.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-postgres-ssr-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project with Cloudflare C3 CLI\nDESCRIPTION: Command to start a new project using this template with the Cloudflare C3 CLI tool. This sets up the Durable Chat App template in a new project.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/durable-chat-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/durable-chat-template\n```\n\n----------------------------------------\n\nTITLE: Running Development Server for Durable Objects in Bash\nDESCRIPTION: Command to start the local development server for the Durable Objects application, allowing local testing and development.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/hello-world-do-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server, which enables hot-reloading during development.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/next-starter-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server with Hot Module Replacement\nDESCRIPTION: Command to start the local development server with Hot Module Replacement (HMR) enabled. This makes the application available at http://localhost:5173.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing OpenAuth Template via C3 CLI\nDESCRIPTION: Command to create a new project using the OpenAuth template through Cloudflare's C3 CLI tool.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/openauth-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/openauth-template\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server in Bash\nDESCRIPTION: Command to start the local development server for the SaaS Admin Template project.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating New Project from Template - Bash\nDESCRIPTION: Command to create a new project using the Cloudflare C3 CLI tool with this D1 template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/d1-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/d1-template\n```\n\n----------------------------------------\n\nTITLE: Installing the Template via C3 CLI\nDESCRIPTION: Command to create a new project using this template with the Cloudflare C3 CLI tool (create-cloudflare).\nSOURCE: https://github.com/cloudflare/templates/blob/staging/mysql-hyperdrive-template/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/mysql-hyperdrive-template\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Remix Application\nDESCRIPTION: Command to run the development server for local development of the Remix application.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/remix-starter-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project with the Text To Image Template\nDESCRIPTION: Command to create a new project using the Text To Image template via Cloudflare's C3 CLI tool (create-cloudflare).\nSOURCE: https://github.com/cloudflare/templates/blob/staging/text-to-image-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/text-to-image-template\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server in Bash\nDESCRIPTION: Command to run the development server with hot module replacement. This will make the application available at http://localhost:5173.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/vite-react-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating New Project with Durable Objects Template in Bash\nDESCRIPTION: Command to initialize a new project using this template with the Cloudflare C3 CLI tool outside of the repository.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/hello-world-do-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/hello-world-do-template\n```\n\n----------------------------------------\n\nTITLE: Previewing the Production Build Locally\nDESCRIPTION: Command to preview the production build locally before deployment. This allows testing the built application in a production-like environment.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run preview\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Next.js Project\nDESCRIPTION: Commands to install project dependencies using various package managers including npm, yarn, pnpm, or bun.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/next-starter-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n# or\nyarn install\n# or\npnpm install\n# or\nbun install\n```\n\n----------------------------------------\n\nTITLE: Deploying the Multiplayer Globe App\nDESCRIPTION: Command to deploy the application to Cloudflare Workers using Wrangler CLI. This uploads and activates the project on Cloudflare's edge network.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/multiplayer-globe-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Durable Objects Template in Bash\nDESCRIPTION: Commands to install project dependencies using various package managers. This is the first step before starting development on the Durable Objects template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/hello-world-do-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n# or\nyarn install\n# or\npnpm install\n# or\nbun install\n```\n\n----------------------------------------\n\nTITLE: Deploying the Text To Image Application\nDESCRIPTION: Command to deploy the Text To Image application to Cloudflare Workers using Wrangler CLI tool.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/text-to-image-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler deploy\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build in Bash\nDESCRIPTION: Command to preview the production build locally before deployment. This allows testing the production version of the application on your local machine.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/vite-react-template/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run preview\n```\n\n----------------------------------------\n\nTITLE: Blog Post YAML Frontmatter Configuration\nDESCRIPTION: YAML frontmatter block defining metadata for a blog post including title, description, publication date, and hero image path.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/second-post.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Second post\"\ndescription: \"Lorem ipsum dolor sit amet\"\npubDate: \"Jul 15 2022\"\nheroImage: \"/blog-placeholder-4.jpg\"\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying a Preview Version to Cloudflare Workers\nDESCRIPTION: Command to upload a version of the application as a preview URL. This allows testing the deployed application before promoting it to production.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nnpx wrangler versions upload\n```\n\n----------------------------------------\n\nTITLE: Setting API Token in Environment Variables\nDESCRIPTION: Example of adding an API token to the .dev.vars file for authentication.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nAPI_TOKEN=your_token_here\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with NPM\nDESCRIPTION: Command to install the necessary dependencies for the MySQL Hyperdrive template project.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/mysql-hyperdrive-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Building for Production in Bash\nDESCRIPTION: Command to build the project for production deployment. This creates optimized assets ready for deployment to Cloudflare Workers.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/vite-react-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with NPM\nDESCRIPTION: Command to install the project dependencies using npm package manager.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/postgres-hyperdrive-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install the required project dependencies using npm\nSOURCE: https://github.com/cloudflare/templates/blob/staging/to-do-list-kv-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Project Dependencies Installation\nDESCRIPTION: Command to install the required project dependencies using npm package manager.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/openauth-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deploying to Cloudflare Workers in Bash\nDESCRIPTION: Command to deploy the SaaS Admin Template to Cloudflare Workers.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with npm\nDESCRIPTION: Command to install all required dependencies for the Text To Image application using npm package manager.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/text-to-image-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for SaaS Admin Template in Bash\nDESCRIPTION: Command to install all required npm dependencies for the SaaS Admin Template project.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Bash\nDESCRIPTION: Command to install all required dependencies for the project as defined in package.json.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/vite-react-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations Remotely in Bash\nDESCRIPTION: Command to execute database migrations on the remote production database.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run db:migrate:remote\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install the necessary project dependencies using a package manager. This step is required before deploying the project.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/durable-chat-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting Production API Token in Cloudflare Workers using Wrangler\nDESCRIPTION: Command to set the API token as a secret in Cloudflare Workers production environment using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler secret put API_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Running Worker Locally with Remote Database Connection\nDESCRIPTION: Command to run the Cloudflare Worker project locally while connecting to a remote database using Wrangler's remote development mode.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/postgres-hyperdrive-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler dev --remote\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Variables File in Bash\nDESCRIPTION: Commands to create a .dev.vars file for local development environment variables.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Create a .dev.vars file for local development\ntouch .dev.vars\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for React Router + Cloudflare Project\nDESCRIPTION: Command to install all required dependencies for the React Router starter template. This should be run after cloning or creating the project.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/react-router-starter-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations Locally in Bash\nDESCRIPTION: Command to run database migrations in the local development environment.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/saas-admin-template/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run db:migrate\n```\n\n----------------------------------------\n\nTITLE: Implementing Code Blocks with Syntax Highlighting in Markdown\nDESCRIPTION: Shows how to create fenced code blocks with language-specific syntax highlighting using backticks.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Example HTML5 Document</title>\n  </head>\n  <body>\n    <p>Test</p>\n  </body>\n</html>\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Ordered Lists in Markdown\nDESCRIPTION: Shows the syntax for creating numbered lists with automatic ordering in Markdown.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n1. First item\n2. Second item\n3. Third item\n```\n\n----------------------------------------\n\nTITLE: Creating Tables in Markdown\nDESCRIPTION: Demonstrates the syntax for creating tables with headers and formatted content in Markdown.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Italics   | Bold     | Code   |\n| --------- | -------- | ------ |\n| _italics_ | **bold** | `code` |\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Lists in Markdown\nDESCRIPTION: Shows how to implement hierarchical lists with indentation for creating parent-child relationships in list items.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n- Fruit\n  - Apple\n  - Orange\n  - Banana\n- Dairy\n  - Milk\n  - Cheese\n```\n\n----------------------------------------\n\nTITLE: Creating Blockquotes with Attribution in Markdown\nDESCRIPTION: Shows how to format blockquotes that include citation and attribution using HTML elements within Markdown.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> Don't communicate by sharing memory, share memory by communicating.<br>\n> — <cite>Rob Pike[^1]</cite>\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Blockquotes in Markdown\nDESCRIPTION: Demonstrates how to create blockquotes without attribution, including formatting options within the blockquote.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> Tiam, ad mint andaepu dandae nostion secatur sequo quae.  \n> **Note** that you can use _Markdown syntax_ within a blockquote.\n```\n\n----------------------------------------\n\nTITLE: Implementing Markdown Image Syntax\nDESCRIPTION: Shows the syntax for adding images in Markdown using the alt text and path format.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Alt text](./full/or/relative/path/of/image)\n```\n\n----------------------------------------\n\nTITLE: Local Development URL Reference\nDESCRIPTION: Markdown link showing the local development server URL.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/d1-starter-sessions-api-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<http://localhost:8787>\n```\n\n----------------------------------------\n\nTITLE: Deploying with Cloudflare Deploy Button\nDESCRIPTION: Markdown snippet for the Cloudflare deploy button that allows one-click deployment of the template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/d1-starter-sessions-api-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy to Cloudflare](https://deploy.workers.cloudflare.com/button)](https://deploy.workers.cloudflare.com/?url=https://github.com/cloudflare/templates/tree/main/d1-starter-sessions-api-template)\n```\n\n----------------------------------------\n\nTITLE: Creating New Project with C3 CLI\nDESCRIPTION: Command to initialize a new project using the Cloudflare C3 CLI tool with this template\nSOURCE: https://github.com/cloudflare/templates/blob/staging/to-do-list-kv-template/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create cloudflare@latest -- --template=cloudflare/templates/to-do-list-kv-template\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install the necessary project dependencies using npm. This needs to be run after cloning or creating a new project from the template.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/multiplayer-globe-template/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Applying Database Migrations\nDESCRIPTION: Command to apply database migrations to the remote D1 database using Wrangler CLI.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/openauth-template/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx wrangler d1 migrations apply --remote openauth-template-auth-db\n```\n\n----------------------------------------\n\nTITLE: Creating Unordered Lists in Markdown\nDESCRIPTION: Demonstrates how to create bullet point lists using the hyphen syntax in Markdown.\nSOURCE: https://github.com/cloudflare/templates/blob/staging/astro-blog-starter-template/src/content/blog/markdown-style-guide.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n- List item\n- Another item\n- And another item\n```"
  }
]
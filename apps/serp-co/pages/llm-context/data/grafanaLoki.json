[
  {
    "owner": "grafana",
    "repo": "loki",
    "content": "TITLE: Configuring Grafana Loki using YAML\nDESCRIPTION: This YAML configuration file defines the core parameters for setting up Grafana Loki. It includes options for authentication, server configuration, UI settings, distributor, querier, query scheduler, frontend, ruler, and ingester client configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# A comma-separated list of components to run. The default value 'all' runs Loki\n# in single binary mode. The value 'read' is an alias to run only read-path\n# related components such as the querier and query-frontend, but all in the same\n# process. The value 'write' is an alias to run only write-path related\n# components such as the distributor and compactor, but all in the same process.\n# Supported values: all, compactor, distributor, ingester, querier,\n# query-scheduler, ingester-querier, query-frontend, index-gateway, ruler,\n# table-manager, read, write. A full list of available targets can be printed\n# when running Loki with the '-list-targets' command line flag.\n# CLI flag: -target\n[target: <string> | default = \"all\"]\n\n# Enables authentication through the X-Scope-OrgID header, which must be present\n# if true. If false, the OrgID will always be set to 'fake'.\n# CLI flag: -auth.enabled\n[auth_enabled: <boolean> | default = true]\n\n# The amount of virtual memory in bytes to reserve as ballast in order to\n# optimize garbage collection. Larger ballasts result in fewer garbage\n# collection passes, reducing CPU overhead at the cost of heap size. The ballast\n# will not consume physical memory, because it is never read from. It will,\n# however, distort metrics, because it is counted as live memory.\n# CLI flag: -config.ballast-bytes\n[ballast_bytes: <int> | default = 0]\n\n# Configures the server of the launched module(s).\n[server: <server>]\n\nui:\n  # Enable the experimental Loki UI.\n  # CLI flag: -ui.enabled\n  [enabled: <boolean> | default = false]\n\n  # Name to use for this node in the cluster.\n  # CLI flag: -ui.node-name\n  [node_name: <string> | default = \"<hostname>\"]\n\n  # IP address to advertise in the cluster.\n  # CLI flag: -ui.advertise-addr\n  [advertise_addr: <string> | default = \"\"]\n\n  # Name of network interface to read address from.\n  # CLI flag: -ui.interface\n  [interface_names: <list of strings> | default = [<private network interfaces>]]\n\n  # How frequently to rejoin the cluster to address split brain issues.\n  # CLI flag: -ui.rejoin-interval\n  [rejoin_interval: <duration> | default = 3m]\n\n  # Number of initial peers to join from the discovered set.\n  # CLI flag: -ui.cluster-max-join-peers\n  [cluster_max_join_peers: <int> | default = 3]\n\n  # Name to prevent nodes without this identifier from joining the cluster.\n  # CLI flag: -ui.cluster-name\n  [cluster_name: <string> | default = \"\"]\n\n  # Enable using a IPv6 instance address.\n  # CLI flag: -ui.enable-ipv6\n  [enable_ipv6: <boolean> | default = false]\n\n  # Enable debug logging for the UI.\n  # CLI flag: -ui.debug\n  [debug: <boolean> | default = false]\n\n  discovery:\n    # List of peers to join the cluster. Supports multiple values separated by\n    # commas. Each value can be a hostname, an IP address, or a DNS name (A/AAAA\n    # and SRV records).\n    # CLI flag: -ui.discovery.join-peers\n    [join_peers: <list of strings> | default = []]\n\n# Configures the distributor.\n[distributor: <distributor>]\n\n# Configures the querier. Only appropriate when running all modules or just the\n# querier.\n[querier: <querier>]\n\n# The query_scheduler block configures the Loki query scheduler. When configured\n# it separates the tenant query queues from the query-frontend.\n[query_scheduler: <query_scheduler>]\n\n# The frontend block configures the Loki query-frontend.\n[frontend: <frontend>]\n\n# The query_range block configures the query splitting and caching in the Loki\n# query-frontend.\n[query_range: <query_range>]\n\n# The ruler block configures the Loki ruler.\n[ruler: <ruler>]\n\nruler_storage:\n  # The thanos_object_store_config block configures the connection to object\n  # storage backend using thanos-io/objstore clients. This will become the\n  # default way of configuring object store clients in future releases.\n  # Currently this is opt-in and takes effect only when `-use-thanos-objstore`\n  # is set to true.\n  # The CLI flags prefix for this block configuration is: ruler-storage\n  [<thanos_object_store_config>]\n\n  # Backend storage to use. Supported backends are: local, s3, gcs, azure,\n  # swift, filesystem, alibabacloud, bos\n  # CLI flag: -ruler-storage.backend\n  [backend: <string> | default = \"filesystem\"]\n\n  local:\n    # Directory to scan for rules\n    # CLI flag: -ruler-storage.local.directory\n    [directory: <string> | default = \"\"]\n\n# The ingester_client block configures how the distributor will connect to\n# ingesters. Only appropriate when running all components, the distributor, or\n# the querier.\n[ingester_client: <ingester_client>]\n\n# The ingester block configures the ingester and how the ingester will register\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Stage Promtail Pipeline in YAML\nDESCRIPTION: Comprehensive example showing a Promtail configuration with multiple pipeline stages including regex parsing, label extraction, timestamp handling, and metric generation. The pipeline demonstrates matching different log sources (Promtail, nginx, jaeger-agent) and applying specific transformations to each.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/pipelines.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: kubernetes-pods-name\n  kubernetes_sd_configs: ....\n  pipeline_stages:\n\n  - match:\n      selector: '{name=\"promtail\"}'\n      stages:\n      - regex:\n          expression: '.*level=(?P<level>[a-zA-Z]+).*ts=(?P<timestamp>[T\\d-:.Z]*).*component=(?P<component>[a-zA-Z]+)'\n      - labels:\n          level:\n          component:\n      - timestamp:\n          format: RFC3339Nano\n          source: timestamp\n\n  - match:\n      selector: '{name=\"nginx\"} |= \"GET\"'\n      stages:\n      - regex:\n          expression: \\w{1,3}.\\w{1,3}.\\w{1,3}.\\w{1,3}(?P<output>.*)\n      - output:\n          source: output\n\n  - match:\n      selector: '{name=\"jaeger-agent\"}'\n      stages:\n      - json:\n          expressions:\n            level: level\n      - labels:\n          level:\n- job_name: kubernetes-pods-app\n  kubernetes_sd_configs: ....\n  pipeline_stages:\n  - match:\n      selector: '{app=~\"grafana|prometheus\"}'\n      stages:\n      - regex:\n          expression: \".*(lvl|level)=(?P<level>[a-zA-Z]+).*(logger|component)=(?P<component>[a-zA-Z]+)\"\n      - labels:\n          level:\n          component:\n\n  - match:\n      selector: '{app=\"some-app\"} != \"info\"'\n      stages:\n      - regex:\n          expression: \".*(?P<panic>panic: .*)\"\n      - metrics:\n          panic_total:\n            type: Counter\n            description: \"total count of panic\"\n            source: panic\n            config:\n              action: inc\n```\n\n----------------------------------------\n\nTITLE: Loki Services Documentation\nDESCRIPTION: Documentation markdown for Loki's core and experimental services, including their roles, behaviors, and deployment characteristics. Covers query handling, data storage, rule evaluation, and bloom filter functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/components.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Query scheduler\n\nThe **query scheduler** is an **optional service** providing more [advanced queuing functionality](../../operations/query-fairness/) than the [query frontend](#query-frontend).\nWhen using this component in the Loki deployment, query frontend pushes split up queries to the query scheduler which enqueues them in an internal in-memory queue.\nThere is a queue for each tenant to guarantee the query fairness across all tenants.\nThe queriers that connect to the query scheduler act as workers that pull their jobs from the queue, execute them, and return them to the query frontend for aggregation. Queriers therefore need to be configured with the query scheduler address (via the `-querier.scheduler-address` CLI flag) in order to allow them to connect to the query scheduler.\n\nQuery schedulers are **stateless**. However, due to the in-memory queue, it's recommended to run more than one replica to keep the benefit of high availability. Two replicas should suffice in most cases.\n```\n\n----------------------------------------\n\nTITLE: Defining RulerConfig CRD Structure in Go for Loki\nDESCRIPTION: This code snippet defines the structure of the RulerConfig Custom Resource Definition for Loki. It includes types for AlertManager configuration, Remote Write client settings, and various helper types for durations and authorization.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage v1beta1\n\nimport (\n    monitoringv1 \"github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1\"\n    metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n)\n\n// LokiDuration defines the type for Prometheus durations.\n//\n// +kubebuilder:validation:Pattern:=\"((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)\"\ntype LokiDuration string\n\n// AlertManagerDiscoverySpec defines the configuration to use DNS resolution for AlertManager hosts.\ntype AlertManagerDiscoverySpec struct {\n    // Use DNS SRV records to discover Alertmanager hosts.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    Enabled bool `json:\"enabled\"`\n\n    // How long to wait between refreshing DNS resolutions of Alertmanager hosts.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1m\"\n    RefreshInterval LokiDuration `json:\"refreshInterval\"`\n}\n\n// AlertManagerNotificationSpec defines the configuration for AlertManager notification settings.\ntype AlertManagerNotificationSpec struct {\n    // Capacity of the queue for notifications to be sent to the Alertmanager.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=10000\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Notification Queue Capacity\"\n    QueueCapacity int32 `json:\"queueCapacity\"`\n\n    // HTTP timeout duration when sending notifications to the Alertmanager.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"10s\"\n    Timeout LokiDuration `json:\"timeout\"`\n\n    // Max time to tolerate outage for restoring \"for\" state of alert.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1h\"\n    ForOutageTolerance LokiDuration `json:\"forOutageTolerance\"`\n\n    // Minimum duration between alert and restored \"for\" state. This is maintained\n    // only for alerts with configured \"for\" time greater than the grace period.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"10m\"\n    ForGracePeriod LokiDuration `json:\"forGracePeriod\"`\n\n    // Minimum amount of time to wait before resending an alert to Alertmanager.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1m\"\n    ResendDelay LokiDuration `json:\"resendDelay\"`\n}\n\n// AlertManagerSpec defines the configuration for ruler's alertmanager connectivity.\ntype AlertManagerSpec struct {\n    // URL for alerts return path.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    ExternalURL string `json:\"external_url,omitempty\"`\n\n    // Additional labels to add to all alerts.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    ExternalLabels map[string]string `json:\"external_labels,omitempty\"`\n\n    // If enabled, then requests to Alertmanager use the v2 API.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:booleanSwitch\",displayName=\"Enable AlertManager V2 API\"\n    EnableV2 bool `json:\"enableV2\"`\n\n    // List of AlertManager URLs to send notifications to. Each Alertmanager URL is treated as\n    // a separate group in the configuration. Multiple Alertmanagers in HA per group can be\n    // supported by using DNS resolution (See EnableDNSDiscovery).\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    Endpoints []string `json:\"endpoints\"`\n\n    // Defines the configuration for DNS-based discovery of AlertManager hosts.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"DNS Discovery\"\n    DiscoverySpec *AlertManagerDiscoverySpec `json:\"discoverySpec\"`\n\n    // Defines the configuration for the notification queue to AlertManager hosts.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"Notification Queue\"\n    NotificationSpec *AlertManagerNotificationSpec `json:\"notificationSpec\"`\n}\n\n// RemoteWriteAuthType defines the type of authorization to use to access the remote write endpoint.\n//\n// +kubebuilder:validation:Enum=basic;header\ntype RemoteWriteAuthType string\n\nconst (\n    // BasicAuthorization defines the remote write client to use HTTP basic authorization.\n    BasicAuthorization RemoteWriteAuthType = \"basic\"\n    // BasicAuthorization defines the remote write client to use HTTP header authorization.\n    HeaderAuthorization RemoteWriteAuthType = \"header\"\n)\n\n// RemoteWriteClientSpec defines the configuration of the remote write client.\ntype RemoteWriteClientSpec struct {\n    // Name of the remote write config, which if specified must be unique among remote write configs.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    Name string `json:\"name\"`\n\n    // The URL of the endpoint to send samples to.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    URL string `json:\"url\"`\n\n    // Timeout for requests to the remote write endpoint.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"30s\"\n    Timeout LokiDuration `json:\"timeout\"`\n\n    // Type of Authorzation to use to access the remote write endpoint\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors={\"urn:alm:descriptor:com.tectonic.ui:select:basic\",\"urn:alm:descriptor:com.tectonic.ui:select:header\"},displayName=\"Authorization Type\"\n    AuthorizationType RemoteWriteAuthType `json:\"authorization\"`\n\n    // Name of a secret in the namespace configured for authorization secrets.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:io.kubernetes:Secret\",displayName=\"Authorization Secret Name\"\n    AuthorizationSecretName string `json:\"authorizationSecretName\"`\n\n    // Additional HTTP headers to be sent along with each remote write request.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    AdditionalHeaders map[string]string `json:\"additionalHeaders,omitempty\"`\n\n    // List of remote write relabel configurations.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    RelabelConfigs []monitoringv1.RelabelConfig `json:\"relabelConfigs,omitempty\"`\n\n    // Optional proxy URL.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    ProxyURL string `json:\"proxyUrl\"`\n\n    // Configure whether HTTP requests follow HTTP 3xx redirects.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=true\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:booleanSwitch\",displayName=\"Follow HTTP Redirects\"\n    FollowRedirects bool `json:\"followRedirects\"`\n}\n\n// RemoteWriteClientQueueSpec defines the configuration of the remote write client queue.\ntype RemoteWriteClientQueueSpec struct {\n    // Number of samples to buffer per shard before we block reading of more\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=2500\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Queue Capacity\"\n    Capacity int32 `json:\"capacity\"`\n\n    // Maximum number of shards, i.e. amount of concurrency.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=200\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Maximum Shards\"\n    MaxShards int32 `json:\"maxShards\"`\n\n    // Minimum number of shards, i.e. amount of concurrency.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=200\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Minimum Shards\"\n    MinShards int32 `json:\"minShards\"`\n\n    // Maximum number of samples per send.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=500\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Maximum Shards per Send\"\n    MaxSamplesPerSend int32 `json:\"maxSamplesPerSend\"`\n\n    // Maximum time a sample will wait in buffer.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"5s\"\n    BatchSendDeadline int32 `json:\"batchSendDeadline\"`\n\n    // Initial retry delay. Gets doubled for every retry.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"30ms\"\n    MinBackOffPeriod int32 `json:\"minBackOffPeriod\"`\n\n```\n\n----------------------------------------\n\nTITLE: Defining Chunk v4 Binary Format Structure in Grafana Loki\nDESCRIPTION: Complete specification of the Chunk v4 binary format used in Grafana Loki. The format consists of a header with magic number and version info, followed by data blocks with checksums, block metadata with timestamps and offsets, structured metadata containing labels, and a footer with offset information to navigate the chunk structure.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/chunkenc/README.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n// Header\n+-----------------------------------+\n| Magic Number (uint32, 4 bytes)    |\n+-----------------------------------+\n| Version (1 byte)                  |\n+-----------------------------------+\n| Encoding (1 byte)                 |\n+-----------------------------------+\n\n// Blocks\n+--------------------+----------------------------+\n| block 1 (n bytes)  | checksum (uint32, 4 bytes) |\n+--------------------+----------------------------+\n| block 1 (n bytes)  | checksum (uint32, 4 bytes) |\n+--------------------+----------------------------+\n| ...                                             |\n+--------------------+----------------------------+\n| block N (n bytes)  | checksum (uint32, 4 bytes) |\n+--------------------+----------------------------+\n\n// Metas\n+------------------------------------------------------------------------------------------------------------------------+\n| #blocks (uvarint)                                                                                                      |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| #entries (uvarint) | minTs (uvarint) | maxTs (uvarint) | offset (uvarint) | len (uvarint) | uncompressedSize (uvarint) |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| #entries (uvarint) | minTs (uvarint) | maxTs (uvarint) | offset (uvarint) | len (uvarint) | uncompressedSize (uvarint) |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| ...                                                                                                                    |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| #entries (uvarint) | minTs (uvarint) | maxTs (uvarint) | offset (uvarint) | len (uvarint) | uncompressedSize (uvarint) |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| checksum (uint32, 4 bytes)                                                                                             | \n+------------------------------------------------------------------------------------------------------------------------+\n\n// Structured Metadata\n+---------------------------------+\n| #labels (uvarint)               |\n+---------------+-----------------+\n| len (uvarint) | value (n bytes) |\n+---------------+-----------------+\n| ...                             |\n+---------------+-----------------+\n| checksum (uint32, 4 bytes)      |\n+---------------------------------+\n\n// Footer\n+-----------------------+--------------------------+\n| len (uint64, 8 bytes) | offset (uint64, 8 bytes) |   // offset to Structured Metadata\n+-----------------------+--------------------------+\n| len (uint64, 8 bytes) | offset (uint64, 8 bytes) |   // offset to Metas\n+-----------------------+--------------------------+\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Chart Repository\nDESCRIPTION: Bash command to update the Helm chart repository to ensure the latest charts are available.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Data Source in Grafana\nDESCRIPTION: YAML configuration for setting up the Loki data source in Grafana using Docker Compose. This includes environment variables and data source provisioning details.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ngrafana:\n  image: grafana/grafana:latest\n  environment:\n    - GF_PATHS_PROVISIONING=/etc/grafana/provisioning\n    - GF_AUTH_ANONYMOUS_ENABLED=true\n    - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin\n  depends_on:\n    - gateway\n  entrypoint:\n    - sh\n    - -euc\n    - |\n      mkdir -p /etc/grafana/provisioning/datasources\n      cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml\n      apiVersion: 1\n      datasources:\n        - name: Loki\n          type: loki\n          access: proxy\n          url: http://gateway:3100\n          jsonData:\n            httpHeaderName1: \"X-Scope-OrgID\"\n          secureJsonData:\n            httpHeaderValue1: \"tenant1\"\n      EOF\n      /run.sh\n```\n\n----------------------------------------\n\nTITLE: Processing JSON Arrays in LogQL Queries\nDESCRIPTION: Example of parsing and iterating over a JSON array in a LogQL query using template functions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_8\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"loki/querier\"} |= \"finish in prometheus\" | logfmt | line_format `{{ range $q := fromJson .queries }} {{ $q.query }} {{ end }}`\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Parser Example\nDESCRIPTION: Example of using regexp parser to extract fields using named capture groups\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_13\n\nLANGUAGE: log\nCODE:\n```\nPOST /api/prom/api/v1/query_range (200) 1.5s\n```\n\n----------------------------------------\n\nTITLE: Filtering by Multiple Structured Metadata Labels in LogQL\nDESCRIPTION: LogQL query example showing how to filter log lines using multiple structured metadata labels simultaneously, filtering by both 'pod' and 'trace_id'.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/structured-metadata.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"example\"} | pod=\"myservice-abc1234-56789\" | trace_id=\"0242ac120002\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Schema Migration from BoltDB to TSDB in Loki\nDESCRIPTION: This configuration demonstrates how to migrate from BoltDB with v11 schema to TSDB with v13 schema starting from July 1, 2023. It allows Loki to handle data across multiple schemas transparently, simplifying the upgrade process.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2019-07-01\n      store: boltdb\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n    - from: 2023-07-01\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Configuring Label Relabeling in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure label relabeling in Promtail, including options for source labels, regex matching, and label replacement.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\n[ source_labels: '[' <labelname> [, ...] ']' ]\n\n[ separator: <string> | default = ; ]\n\n[ target_label: <labelname> ]\n\n[ regex: <regex> | default = (.*) ]\n\n[ modulus: <uint64> ]\n\n[ replacement: <string> | default = $1 ]\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki using Helm on Azure\nDESCRIPTION: Command to install Loki using Helm chart with a custom values.yaml file in a dedicated namespace. Creates the 'loki' namespace which is important for federated credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values values.yaml loki grafana/loki -n loki --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: Command to add the Grafana Helm repository to your local Helm configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\n----------------------------------------\n\nTITLE: Query Range Endpoint - HTTP GET\nDESCRIPTION: The query_range endpoint allows querying logs over a specified time range. It supports various parameters like query, limit, start, end, step, and interval.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/query_range\n```\n\n----------------------------------------\n\nTITLE: Building and Running Loki from Source (Bash)\nDESCRIPTION: Instructions for building Loki from source code and running it in a single-host, no-dependencies mode. Requires an up-to-date version of Go.\nSOURCE: https://github.com/grafana/loki/blob/main/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Checkout source code\n$ git clone https://github.com/grafana/loki\n$ cd loki\n\n# Build binary\n$ go build ./cmd/loki\n\n# Run executable\n$ ./loki -config.file=./cmd/loki/loki-local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining Top-Level Promtail Configuration Structure in YAML\nDESCRIPTION: Outlines the main sections of the Promtail configuration file, including global settings, server config, clients, positions, scrape configs, limits, target config, options, and tracing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Configures global settings which impact all targets.\n[global: <global_config>]\n\n# Configures the server for Promtail.\n[server: <server_config>]\n\n# Describes how Promtail connects to multiple instances\n# of Grafana Loki, sending logs to each.\nclients:\n  - [<client_config>]\n\n# Describes how to save read file offsets to disk\n[positions: <position_config>]\n\nscrape_configs:\n  - [<scrape_config>]\n\n# Configures global limits for this instance of Promtail\n[limits_config: <limits_config>]\n\n# Configures how tailed targets will be watched.\n[target_config: <target_config>]\n\n# Configures additional promtail configurations.\n[options: <options_config>]\n\n# Configures tracing support\n[tracing: <tracing_config>]\n```\n\n----------------------------------------\n\nTITLE: Example Log Line Showing Query Hash in Logfmt Format\nDESCRIPTION: This snippet shows a sample log line from the query-frontend component, demonstrating how query hashes are logged. The query_hash field can be used as a reference when configuring hash-based query blocking.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/blocking-queries.md#2025-04-19_snippet_1\n\nLANGUAGE: logfmt\nCODE:\n```\nlevel=info ts=2023-03-30T09:08:15.2614555Z caller=metrics.go:152 component=frontend org_id=29 latency=fast \nquery=\"{stream=\\\"stdout\\\",pod=\\\"loki-canary-9w49x\\\"}\" query_hash=2943214005 query_type=limited range_type=range ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Consul Catalog Service Discovery in YAML\nDESCRIPTION: Configuration for Consul Catalog API service discovery including server settings, authentication, service filtering, and tag configuration. Supports service-based target discovery with metadata and tag filtering.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_42\n\nLANGUAGE: yaml\nCODE:\n```\n# The information to access the Consul Catalog API. It is to be defined\n# as the Consul documentation requires.\n[ server: <host> | default = \"localhost:8500\" ]\n[ token: <secret> ]\n[ datacenter: <string> ]\n[ scheme: <string> | default = \"http\" ]\n[ username: <string> ]\n[ password: <secret> ]\n\ntls_config:\n  [ <tls_config> ]\n\n# A list of services for which targets are retrieved. If omitted, all services\n# are scraped.\nservices:\n  [ - <string> ]\n\n# An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.\ntags:\n  [ - <string> ]\n\n# Node metadata key/value pairs to filter nodes for a given service.\n[ node_meta:\n  [ <string>: <string> ... ] ]\n\n# The string by which Consul tags are joined into the tag label.\n[ tag_separator: <string> | default = , ]\n\n# Allow stale Consul results. Will reduce load on Consul.\n[ allow_stale: <boolean> | default = true ]\n\n# The time after which the provided names are refreshed.\n[ refresh_interval: <duration> | default = 30s ]\n```\n\n----------------------------------------\n\nTITLE: Basic Cassandra Operations with GoCQL\nDESCRIPTION: Example showing how to connect to a Cassandra cluster, insert data, and query it using GoCQL. Demonstrates creating a session, executing queries, and handling results.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gocql/gocql/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\n\t\"github.com/gocql/gocql\"\n)\n\nfunc main() {\n\t// connect to the cluster\n\tcluster := gocql.NewCluster(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\")\n\tcluster.Keyspace = \"example\"\n\tcluster.Consistency = gocql.Quorum\n\tsession, _ := cluster.CreateSession()\n\tdefer session.Close()\n\n\t// insert a tweet\n\tif err := session.Query(`INSERT INTO tweet (timeline, id, text) VALUES (?, ?, ?)`,\n\t\t\"me\", gocql.TimeUUID(), \"hello world\").Exec(); err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tvar id gocql.UUID\n\tvar text string\n\n\tif err := session.Query(`SELECT id, text FROM tweet WHERE timeline = ? LIMIT 1`,\n\t\t\"me\").Consistency(gocql.One).Scan(&id, &text); err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Println(\"Tweet:\", id, text)\n\n\t// list all tweets\n\titer := session.Query(`SELECT id, text FROM tweet WHERE timeline = ?`, \"me\").Iter()\n\tfor iter.Scan(&id, &text) {\n\t\tfmt.Println(\"Tweet:\", id, text)\n\t}\n\tif err := iter.Close(); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating custom flags with the Value interface\nDESCRIPTION: Shows how to register a custom flag implementation that satisfies the Value interface. This approach allows for flags with custom parsing and value handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nflag.Var(&flagVal, \"name\", \"help message for flagname\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Limits in Loki YAML Configuration\nDESCRIPTION: This YAML configuration block defines various limits and constraints in Loki, including ingestion rates, validation parameters, and query limits. These settings can be applied globally or overridden per-tenant in the runtime_config file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_42\n\nLANGUAGE: yaml\nCODE:\n```\n# Whether the ingestion rate limit should be applied individually to each\n# distributor instance (local), or evenly shared across the cluster (global).\n# The ingestion rate strategy cannot be overridden on a per-tenant basis.\n# - local: enforces the limit on a per distributor basis. The actual effective\n# rate limit will be N times higher, where N is the number of distributor\n# replicas.\n# - global: enforces the limit globally, configuring a per-distributor local\n# rate limiter as 'ingestion_rate / N', where N is the number of distributor\n# replicas (it's automatically adjusted if the number of replicas change). The\n# global strategy requires the distributors to form their own ring, which is\n# used to keep track of the current number of healthy distributor replicas.\n# CLI flag: -distributor.ingestion-rate-limit-strategy\n[ingestion_rate_strategy: <string> | default = \"global\"]\n\n# Per-user ingestion rate limit in sample size per second. Sample size includes\n# size of the logs line and the size of structured metadata labels. Units in MB.\n# CLI flag: -distributor.ingestion-rate-limit-mb\n[ingestion_rate_mb: <float> | default = 4]\n\n# Per-user allowed ingestion burst size (in sample size). Units in MB. The burst\n# size refers to the per-distributor local rate limiter even in the case of the\n# 'global' strategy, and should be set at least to the maximum logs size\n# expected in a single push request.\n# CLI flag: -distributor.ingestion-burst-size-mb\n[ingestion_burst_size_mb: <float> | default = 6]\n\n# Maximum length accepted for label names.\n# CLI flag: -validation.max-length-label-name\n[max_label_name_length: <int> | default = 1024]\n\n# Maximum length accepted for label value. This setting also applies to the\n# metric name.\n# CLI flag: -validation.max-length-label-value\n[max_label_value_length: <int> | default = 2048]\n\n# Maximum number of label names per series.\n# CLI flag: -validation.max-label-names-per-series\n[max_label_names_per_series: <int> | default = 15]\n\n# Whether or not old samples will be rejected.\n# CLI flag: -validation.reject-old-samples\n[reject_old_samples: <boolean> | default = true]\n\n# Maximum accepted sample age before rejecting.\n# CLI flag: -validation.reject-old-samples.max-age\n[reject_old_samples_max_age: <duration> | default = 1w]\n\n# Duration which table will be created/deleted before/after it's needed; we\n# won't accept sample from before this time.\n# CLI flag: -validation.create-grace-period\n[creation_grace_period: <duration> | default = 10m]\n\n# Maximum line size on ingestion path. Example: 256kb. Any log line exceeding\n# this limit will be discarded unless `distributor.max-line-size-truncate` is\n# set which in case it is truncated instead of discarding it completely. There\n# is no limit when unset or set to 0.\n# CLI flag: -distributor.max-line-size\n[max_line_size: <int> | default = 256KB]\n\n# Whether to truncate lines that exceed max_line_size.\n# CLI flag: -distributor.max-line-size-truncate\n[max_line_size_truncate: <boolean> | default = false]\n\n# Alter the log line timestamp during ingestion when the timestamp is the same\n# as the previous entry for the same stream. When enabled, if a log line in a\n# push request has the same timestamp as the previous line for the same stream,\n# one nanosecond is added to the log line. This will preserve the received order\n# of log lines with the exact same timestamp when they are queried, by slightly\n# altering their stored timestamp. NOTE: This is imperfect, because Loki accepts\n# out of order writes, and another push request for the same stream could\n# contain duplicate timestamps to existing entries and they will not be\n# incremented.\n# CLI flag: -validation.increment-duplicate-timestamps\n[increment_duplicate_timestamp: <boolean> | default = false]\n\n# Simulated latency to add to push requests. Used for testing. Set to 0s to\n# disable.\n# CLI flag: -limits.simulated-push-latency\n[simulated_push_latency: <duration> | default = 0s]\n\n# Enable experimental support for running multiple query variants over the same\n# underlying data. For example, running both a rate() and count_over_time()\n# query over the same range selector.\n# CLI flag: -limits.enable-multi-variant-queries\n[enable_multi_variant_queries: <boolean> | default = false]\n\n# Experimental: Detect fields from stream labels, structured metadata, or\n# json/logfmt formatted log line and put them into structured metadata of the\n# log entry.\ndiscover_generic_fields:\n  [fields: <map of string to list of strings>]\n\n# If no service_name label exists, Loki maps a single label from the configured\n# list to service_name. If none of the configured labels exist in the stream,\n# label is set to unknown_service. Empty list disables setting the label.\n# CLI flag: -validation.discover-service-name\n[discover_service_name: <list of strings> | default = [service app application app_name name app_kubernetes_io_name container container_name k8s_container_name component workload job k8s_job_name]]\n\n# Discover and add log levels during ingestion, if not present already. Levels\n# would be added to Structured Metadata with name\n# level/LEVEL/Level/Severity/severity/SEVERITY/lvl/LVL/Lvl (case-sensitive) and\n# one of the values from 'trace', 'debug', 'info', 'warn', 'error', 'critical',\n# 'fatal' (case insensitive).\n# CLI flag: -validation.discover-log-levels\n[discover_log_levels: <boolean> | default = true]\n\n# Field name to use for log levels. If not set, log level would be detected\n# based on pre-defined labels as mentioned above.\n# CLI flag: -validation.log-level-fields\n[log_level_fields: <list of strings> | default = [level LEVEL Level Severity severity SEVERITY lvl LVL Lvl severity_text Severity_Text SEVERITY_TEXT]]\n\n# Maximum depth to search for log level fields in JSON logs. A value of 0 or\n# less means unlimited depth. Default is 2 which searches the first 2 levels of\n# the JSON object.\n# CLI flag: -validation.log-level-from-json-max-depth\n[log_level_from_json_max_depth: <int> | default = 2]\n\n# When true an ingester takes into account only the streams that it owns\n# according to the ring while applying the stream limit.\n# CLI flag: -ingester.use-owned-stream-count\n[use_owned_stream_count: <boolean> | default = false]\n\n# Maximum number of active streams per user, per ingester. 0 to disable.\n# CLI flag: -ingester.max-streams-per-user\n[max_streams_per_user: <int> | default = 0]\n\n# Maximum number of active streams per user, across the cluster. 0 to disable.\n# When the global limit is enabled, each ingester is configured with a dynamic\n# local limit based on the replication factor and the current number of healthy\n# ingesters, and is kept updated whenever the number of ingesters change.\n# CLI flag: -ingester.max-global-streams-per-user\n[max_global_streams_per_user: <int> | default = 5000]\n\n# Deprecated. When true, out-of-order writes are accepted.\n# CLI flag: -ingester.unordered-writes\n[unordered_writes: <boolean> | default = true]\n\n# Maximum byte rate per second per stream, also expressible in human readable\n# forms (1MB, 256KB, etc).\n# CLI flag: -ingester.per-stream-rate-limit\n[per_stream_rate_limit: <int> | default = 3MB]\n\n# Maximum burst bytes per stream, also expressible in human readable forms (1MB,\n# 256KB, etc). This is how far above the rate limit a stream can 'burst' before\n# the stream is limited.\n# CLI flag: -ingester.per-stream-rate-limit-burst\n[per_stream_rate_limit_burst: <int> | default = 15MB]\n\n# Maximum number of chunks that can be fetched in a single query.\n# CLI flag: -store.query-chunk-limit\n[max_chunks_per_query: <int> | default = 2000000]\n\n# Limit the maximum of unique series that is returned by a metric query. When\n# the limit is reached an error is returned.\n# CLI flag: -querier.max-query-series\n[max_query_series: <int> | default = 500]\n\n# Limit how far back in time series data and metadata can be queried, up until\n# lookback duration ago. This limit is enforced in the query frontend, the\n# querier and the ruler. If the requested time range is outside the allowed\n# range, the request will not fail, but will be modified to only query data\n# within the allowed time range. The default value of 0 does not set a limit.\n# CLI flag: -querier.max-query-lookback\n[max_query_lookback: <duration> | default = 0s]\n\n# The limit to length of chunk store queries. 0 to disable.\n# CLI flag: -store.max-query-length\n[max_query_length: <duration> | default = 30d1h]\n\n# Limit the length of the [range] inside a range query. Default is 0 or\n# unlimited\n# CLI flag: -querier.max-query-range\n[max_query_range: <duration> | default = 0s]\n\n# Maximum number of queries that will be scheduled in parallel by the frontend.\n# CLI flag: -querier.max-query-parallelism\n[max_query_parallelism: <int> | default = 32]\n\n# Maximum number of queries will be scheduled in parallel by the frontend for\n# TSDB schemas.\n# CLI flag: -querier.tsdb-max-query-parallelism\n[tsdb_max_query_parallelism: <int> | default = 128]\n\n# Target maximum number of bytes assigned to a single sharded query. Also\n# expressible in human readable forms (1GB, etc). Note: This is a _target_ and\n# not an absolute limit. The actual limit can be higher, but the query planner\n# will try to build shards up to this limit.\n# CLI flag: -querier.tsdb-max-bytes-per-shard\n[tsdb_max_bytes_per_shard: <int> | default = 600MB]\n\n# sharding strategy to use in query planning. Suggested to use bounded once all\n# nodes can recognize it.\n# CLI flag: -limits.tsdb-sharding-strategy\n[tsdb_sharding_strategy: <string> | default = \"power_of_two\"]\n\n# Precompute chunks for TSDB queries. This can improve query performance at the\n# cost of increased memory usage by computing chunks once during planning,\n# reducing index calls.\n# CLI flag: -querier.tsdb-precompute-chunks\n[tsdb_precompute_chunks: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: JSON Parser Input Example\nDESCRIPTION: Sample JSON input demonstrating the structure that can be parsed using the JSON parser\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"protocol\": \"HTTP/2.0\",\n    \"servers\": [\"129.0.1.1\",\"10.2.1.3\"],\n    \"request\": {\n        \"time\": \"6.032\",\n        \"method\": \"GET\",\n        \"host\": \"foo.grafana.net\",\n        \"size\": \"55\",\n        \"headers\": {\n          \"Accept\": \"*/*\",\n          \"User-Agent\": \"curl/7.68.0\"\n        }\n    },\n    \"response\": {\n        \"status\": 401,\n        \"size\": \"228\",\n        \"latency_seconds\": \"6.031\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Readiness Probe in Loki API\nDESCRIPTION: The readiness probe endpoint returns HTTP 200 when Loki is ready to accept traffic. It can be used for Kubernetes readiness probes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nGET /ready\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Chunk Storage for Grafana Loki in YAML\nDESCRIPTION: This YAML configuration sets up Azure Blob Storage as the chunk storage backend for Grafana Loki. It uses service principal authentication and specifies the necessary Azure credentials and container details. The configuration includes options for tenant ID, client ID, client secret, container name, and request timeout.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/configuration-examples.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# This partial configuration uses Azure for chunk storage and a service principal for authentication\nstorage_config:\n  azure:\n    use_service_principal: true\n    # Azure tenant ID used to authenticate through Azure OAuth\n    tenant_id: <tenant-id>\n    # Azure Service Principal ID\n    client_id: <client-id>\n    # Azure Service Principal secret key\n    client_secret: <client-secret>\n    # See https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction#containers\n    container_name: <azure_storage_bucket_name>\n    request_timeout: 0\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS IAM Policy for Loki S3 Storage in JSON\nDESCRIPTION: This JSON snippet shows the IAM policy required for Loki to access S3 buckets. It includes permissions for listing, putting, getting, and deleting objects in the specified bucket.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"LokiStorage\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": [\n                    \"arn:aws:iam::<account_ID>\"\n                ]\n            },\n            \"Action\": [\n                \"s3:ListBucket\",\n                \"s3:PutObject\",\n                \"s3:GetObject\",\n                \"s3:DeleteObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>\",\n                \"arn:aws:s3:::<bucket_name>/*\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Request Rates as Percentage of Total in LogQL\nDESCRIPTION: This LogQL query calculates the rates of requests partitioned by 'app' and 'status' as a percentage of total requests. It demonstrates the use of group_left for many-to-one matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_13\n\nLANGUAGE: logql\nCODE:\n```\nsum by (app, status) (\n  rate(\n    {job=\"http-server\"}\n      | json\n      [5m]\n  )\n)\n/ on (app) group_left\nsum by (app) (\n  rate(\n    {job=\"http-server\"}\n      | json\n      [5m]\n  )\n)\n\n=>\n[\n  {app=\"foo\", status=\"200\"} => 0.8\n  {app=\"foo\", status=\"400\"} => 0.1\n  {app=\"foo\", status=\"500\"} => 0.1\n]\n```\n\n----------------------------------------\n\nTITLE: Checking Series Cardinality with LogCLI in Loki\nDESCRIPTION: This command uses logcli to analyze the cardinality of labels in your Loki deployment over the past hour. It helps identify potential high cardinality issues by displaying statistics about your current label usage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/cardinality.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nlogcli series '{}' --since=1h --analyze-labels\n```\n\n----------------------------------------\n\nTITLE: Querying Loki Patterns API (Bash)\nDESCRIPTION: This snippet demonstrates the HTTP GET request format for querying the Loki patterns API. It includes the endpoint for retrieving detected patterns in log data.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/patterns\n```\n\n----------------------------------------\n\nTITLE: Docker Service Discovery Example with Relabeling\nDESCRIPTION: Example configuration showing how to use Docker service discovery with relabeling to scrape a specific container named 'flog'. This demonstrates practical usage of Docker service discovery metadata labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_46\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  - job_name: flog_scrape\n    docker_sd_configs:\n      - host: unix:///var/run/docker.sock\n        refresh_interval: 5s\n        filters:\n          - name: name\n            values: [flog]\n    relabel_configs:\n      - source_labels: ['__meta_docker_container_name']\n        regex: '/(.*)'        \n        target_label: 'container'\n```\n\n----------------------------------------\n\nTITLE: Using detected-fields Command in Loki CLI\nDESCRIPTION: The detected-fields command retrieves information about fields detected using either 'logfmt' or 'json' parser on log lines returned by a query. It allows specifying time ranges, limiting the number of fields or values returned, and provides various output formats and authentication options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli detected-fields [<flags>] <query> [<field>]\n\nRun a query for detected fields..\n\nThe \"detected-fields\" command will return information about fields detected using either the \"logfmt\" or \"json\" parser against the log lines returned by the provided query for the provided time range.\n\nThe \"detected-fields\" command will output extra information about the query and its results, such as the API URL, set of common labels, and set of excluded labels. This extra information can be suppressed with the\n--quiet flag.\n\nBy default we look over the last hour of data; use --since to modify or provide specific start and end times with --from and --to respectively.\n\nNotice that when using --from and --to then ensure to use RFC3339Nano time format, but without timezone at the end. The local timezone will be added automatically or if using --timezone flag.\n\nExample:\n\n  logcli detected-fields\n     --timezone=UTC\n     --from=\"2021-01-19T10:00:00Z\"\n     --to=\"2021-01-19T20:00:00Z\"\n     --output=jsonl\n     'my-query'\n\nThe output is limited to 100 fields by default; use --field-limit to increase. The query is limited to processing 1000 lines per subquery; use --line-limit to increase.\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n  -q, --quiet                 Suppress query metadata\n      --stats                 Show query statistics\n  -o, --output=default        Specify output mode [default, raw, jsonl]. raw suppresses log labels and timestamp.\n  -z, --timezone=Local        Specify the timezone to use when formatting output timestamps [Local, UTC]\n      --cpuprofile=\"\"         Specify the location for writing a CPU profile.\n      --memprofile=\"\"         Specify the location for writing a memory profile.\n      --stdin                 Take input logs from stdin\n      --addr=\"http://localhost:3100\"\n                              Server address. Can also be set using LOKI_ADDR env var.\n      --username=\"\"           Username for HTTP basic auth. Can also be set using LOKI_USERNAME env var.\n      --password=\"\"           Password for HTTP basic auth. Can also be set using LOKI_PASSWORD env var.\n      --ca-cert=\"\"            Path to the server Certificate Authority. Can also be set using LOKI_CA_CERT_PATH env var.\n      --tls-skip-verify       Server certificate TLS skip verify. Can also be set using LOKI_TLS_SKIP_VERIFY env var.\n      --cert=\"\"               Path to the client certificate. Can also be set using LOKI_CLIENT_CERT_PATH env var.\n      --key=\"\"                Path to the client certificate key. Can also be set using LOKI_CLIENT_KEY_PATH env var.\n      --org-id=\"\"             adds X-Scope-OrgID to API requests for representing tenant ID. Useful for requesting tenant data when bypassing an auth gateway. Can also be set using LOKI_ORG_ID env var.\n      --query-tags=\"\"         adds X-Query-Tags http header to API requests. This header value will be part of `metrics.go` statistics. Useful for tracking the query. Can also be set using LOKI_QUERY_TAGS env var.\n      --nocache               adds Cache-Control: no-cache http header to API requests. Can also be set using LOKI_NO_CACHE env var.\n      --bearer-token=\"\"       adds the Authorization header to API requests for authentication purposes. Can also be set using LOKI_BEARER_TOKEN env var.\n      --bearer-token-file=\"\"  adds the Authorization header to API requests for authentication purposes. Can also be set using LOKI_BEARER_TOKEN_FILE env var.\n      --retries=0             How many times to retry each query when getting an error response from Loki. Can also be set using LOKI_CLIENT_RETRIES env var.\n      --min-backoff=0         Minimum backoff time between retries. Can also be set using LOKI_CLIENT_MIN_BACKOFF env var.\n      --max-backoff=0         Maximum backoff time between retries. Can also be set using LOKI_CLIENT_MAX_BACKOFF env var.\n      --auth-header=\"Authorization\"\n                              The authorization header used. Can also be set using LOKI_AUTH_HEADER env var.\n      --proxy-url=\"\"          The http or https proxy to use when making requests. Can also be set using LOKI_HTTP_PROXY_URL env var.\n      --compress              Request that Loki compress returned data in transit. Can also be set using LOKI_HTTP_COMPRESSION env var.\n      --limit=100             Limit on number of fields or values to return.\n      --line-limit=1000       Limit the number of lines each subquery is allowed to process.\n      --since=1h              Lookback window.\n      --from=FROM             Start looking for logs at this absolute time (inclusive)\n      --to=TO                 Stop looking for logs at this absolute time (exclusive)\n      --step=10s              Query resolution step width, for metric queries. Evaluate the query at the specified step over the time range.\n\nArgs:\n  <query>    eg '{foo=\"bar\",baz=~\".*blip\"} |~ \".*error.*\"'\n  [<field>]  The name of the field.\n```\n\n----------------------------------------\n\nTITLE: Querying Log Statistics\nDESCRIPTION: Command to retrieve statistics about queried log data including bytes, chunks, streams, and entries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nlogcli stats --since 24h '{service_name=\"Delivery World\"}'\n```\n\n----------------------------------------\n\nTITLE: Pack Stage Schema Configuration\nDESCRIPTION: YAML configuration schema for the pack stage, defining label handling and timestamp behavior options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/pack.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npack:\n  # Name from extracted data and/or line labels\n  # Labels provided here are automatically removed from the output labels.\n  labels:\n    - [<string>]\n\n  # If the resulting log line should use any existing timestamp or use time.Now() when the line was processed.\n  [ingest_timestamp: <bool> | default = true]\n```\n\n----------------------------------------\n\nTITLE: Doubling Log Stream Entry Rate in LogQL\nDESCRIPTION: Shows how to double the rate of a log stream's entries using the sum and rate functions in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\nsum(rate({app=\"foo\"}[1m])) * 2\n```\n\n----------------------------------------\n\nTITLE: Labels Stage Schema Definition in YAML\nDESCRIPTION: Defines the schema structure for the labels stage configuration in Promtail pipeline. The schema shows how to map string keys to optional string values for label creation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labels.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  # Key is REQUIRED and the name for the label that will be created.\n  # Value is optional and will be the name from extracted data whose value\n  # will be used for the value of the label. If empty, the value will be\n  # inferred to be the same as the key.\n  [ <string>: [<string>] ... ]\n```\n\n----------------------------------------\n\nTITLE: Creating and Using Swift Connection in Go\nDESCRIPTION: This example demonstrates how to create a connection to Swift (OpenStack Object Storage), authenticate, and list containers. It shows the basic initialization and authentication flow required for Swift operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/ncw/swift\"\n\n// Create a connection\nc := swift.Connection{\n    UserName: \"user\",\n    ApiKey:   \"key\",\n    AuthUrl:  \"auth_url\",\n    Domain:   \"domain\",  // Name of the domain (v3 auth only)\n    Tenant:   \"tenant\",  // Name of the tenant (v2 auth only)\n}\n// Authenticate\nerr := c.Authenticate()\nif err != nil {\n    panic(err)\n}\n// List all the containers\ncontainers, err := c.ContainerNames(nil)\nfmt.Println(containers)\n// etc...\n```\n\n----------------------------------------\n\nTITLE: Analyzing Log Volume Over Time\nDESCRIPTION: Command to analyze log volume with hourly intervals and label-based aggregation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nlogcli volume_range --since 24h --step=1h --targetLabels='state' '{service_name=\"Delivery World\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Stages for Log Processing in YAML\nDESCRIPTION: Defines various pipeline stages for transforming and processing log entries, including parsing Docker and CRI logs, regex matching, and JSON parsing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n  - [\n      <docker> |\n      <cri> |\n      <regex> |\n      <json> |\n      <template> |\n      <match> |\n      <timestamp> |\n      <output> |\n      <labels> |\n      <metrics> |\n      <tenant> |\n      <replace>\n    ]\n```\n\n----------------------------------------\n\nTITLE: Calculating Error Rate with Filters and Parsers in LogQL\nDESCRIPTION: This aggregation includes filters and parsers. It returns the per-second rate of all non-timeout errors within the last minute per host for the MySQL job, only including errors with duration above ten seconds.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/metric_queries.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\nsum by (host) (rate({job=\"mysql\"} |= \"error\" != \"timeout\" | json | duration > 10s [1m]))\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with Azure Blob Storage (YAML)\nDESCRIPTION: A complete YAML configuration for setting up Loki with Azure Blob Storage. It includes schema configuration, ingester settings, tracing, storage configuration with Azure Blob parameters, and deployment specifications for various Loki components in a distributed architecture.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-microservices/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: azure\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  ingester:\n    chunk_encoding: snappy\n  tracing:\n    enabled: true\n  querier:\n    max_concurrent: 4\n\n  storage:\n    type: azure\n    azure:\n      # Name of the Azure Blob Storage account\n      accountName: <your-account-name>\n      # Key associated with the Azure Blob Storage account\n      accountKey: <your-account-key>\n      # Comprehensive connection string for Azure Blob Storage account (Can be used to replace endpoint, accountName, and accountKey)\n      connectionString: <your-connection-string>\n      # Flag indicating whether to use Azure Managed Identity for authentication\n      useManagedIdentity: false\n      # Flag indicating whether to use a federated token for authentication\n      useFederatedToken: false\n      # Client ID of the user-assigned managed identity (if applicable)\n      userAssignedId: <your-user-assigned-id>\n      # Timeout duration for requests made to the Azure Blob Storage account (in seconds)\n      requestTimeout: <your-request-timeout>\n      # Domain suffix of the Azure Blob Storage service endpoint (e.g., core.windows.net)\n      endpointSuffix: <your-endpoint-suffix>\n    bucketNames:\n      chunks: \"chunks\"\n      ruler: \"ruler\"\n      admin: \"admin\"\ndeploymentMode: Distributed\n\ningester:\n  replicas: 3\n  zoneAwareReplication:\n    enabled: false\nquerier:\n  replicas: 3\n  maxUnavailable: 2\nqueryFrontend:\n  replicas: 2\n  maxUnavailable: 1\nqueryScheduler:\n  replicas: 2\ndistributor:\n  replicas: 3\n  maxUnavailable: 2\ncompactor:\n  replicas: 1\nindexGateway:\n  replicas: 2\n  maxUnavailable: 1\n\nbloomPlanner:\n  replicas: 0\nbloomBuilder:\n  replicas: 0\nbloomGateway:\n  replicas: 0\n\nbackend:\n  replicas: 0\nread:\n  replicas: 0\nwrite:\n  replicas: 0\n\nsingleBinary:\n  replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Development Mode Loki Configuration\nDESCRIPTION: YAML configuration for deploying Loki in test mode using MinIO as storage, including schema configuration, deployment mode settings, and component replicas.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-scalable/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  ingester:\n    chunk_encoding: snappy\n  querier:\n    max_concurrent: 4\n  pattern_ingester:\n    enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n\ndeploymentMode: SimpleScalable\n\nbackend:\n  replicas: 2\nread:\n  replicas: 2\nwrite:\n  replicas: 3\n\nminio:\n  enabled: true\n\ngateway:\n  service:\n    type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS, HTTP, and gRPC Settings for Grafana Loki Server\nDESCRIPTION: This YAML configuration snippet defines TLS settings, HTTP and gRPC server parameters, logging options, and cluster validation configurations for a Grafana Loki server. It includes options for certificate paths, timeouts, keepalive settings, and various security and performance tuning parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_67\n\nLANGUAGE: yaml\nCODE:\n```\n# CLI flag: -server.tls-min-version\n[tls_min_version: <string> | default = \"\"]\n\nhttp_tls_config:\n  # Server TLS certificate. This configuration parameter is YAML only.\n  [cert: <string> | default = \"\"]\n\n  # Server TLS key. This configuration parameter is YAML only.\n  [key: <string> | default = \"\"]\n\n  # Root certificate authority used to verify client certificates. This\n  # configuration parameter is YAML only.\n  [client_ca: <string> | default = \"\"]\n\n  # HTTP server cert path.\n  # CLI flag: -server.http-tls-cert-path\n  [cert_file: <string> | default = \"\"]\n\n  # HTTP server key path.\n  # CLI flag: -server.http-tls-key-path\n  [key_file: <string> | default = \"\"]\n\n  # HTTP TLS Client Auth type.\n  # CLI flag: -server.http-tls-client-auth\n  [client_auth_type: <string> | default = \"\"]\n\n  # HTTP TLS Client CA path.\n  # CLI flag: -server.http-tls-ca-path\n  [client_ca_file: <string> | default = \"\"]\n\ngrpc_tls_config:\n  # Server TLS certificate. This configuration parameter is YAML only.\n  [cert: <string> | default = \"\"]\n\n  # Server TLS key. This configuration parameter is YAML only.\n  [key: <string> | default = \"\"]\n\n  # Root certificate authority used to verify client certificates. This\n  # configuration parameter is YAML only.\n  [client_ca: <string> | default = \"\"]\n\n  # GRPC TLS server cert path.\n  # CLI flag: -server.grpc-tls-cert-path\n  [cert_file: <string> | default = \"\"]\n\n  # GRPC TLS server key path.\n  # CLI flag: -server.grpc-tls-key-path\n  [key_file: <string> | default = \"\"]\n\n  # GRPC TLS Client Auth type.\n  # CLI flag: -server.grpc-tls-client-auth\n  [client_auth_type: <string> | default = \"\"]\n\n  # GRPC TLS Client CA path.\n  # CLI flag: -server.grpc-tls-ca-path\n  [client_ca_file: <string> | default = \"\"]\n\n# Register the intrumentation handlers (/metrics etc).\n# CLI flag: -server.register-instrumentation\n[register_instrumentation: <boolean> | default = true]\n\n# If set to true, gRPC statuses will be reported in instrumentation labels with\n# their string representations. Otherwise, they will be reported as \"error\".\n# CLI flag: -server.report-grpc-codes-in-instrumentation-label-enabled\n[report_grpc_codes_in_instrumentation_label_enabled: <boolean> | default = false]\n\n# Timeout for graceful shutdowns\n# CLI flag: -server.graceful-shutdown-timeout\n[graceful_shutdown_timeout: <duration> | default = 30s]\n\n# Read timeout for entire HTTP request, including headers and body.\n# CLI flag: -server.http-read-timeout\n[http_server_read_timeout: <duration> | default = 30s]\n\n# Read timeout for HTTP request headers. If set to 0, value of\n# -server.http-read-timeout is used.\n# CLI flag: -server.http-read-header-timeout\n[http_server_read_header_timeout: <duration> | default = 0s]\n\n# Write timeout for HTTP server\n# CLI flag: -server.http-write-timeout\n[http_server_write_timeout: <duration> | default = 30s]\n\n# Idle timeout for HTTP server\n# CLI flag: -server.http-idle-timeout\n[http_server_idle_timeout: <duration> | default = 2m]\n\n# Log closed connections that did not receive any response, most likely because\n# client didn't send any request within timeout.\n# CLI flag: -server.http-log-closed-connections-without-response-enabled\n[http_log_closed_connections_without_response_enabled: <boolean> | default = false]\n\n# Limit on the size of a gRPC message this server can receive (bytes).\n# CLI flag: -server.grpc-max-recv-msg-size-bytes\n[grpc_server_max_recv_msg_size: <int> | default = 4194304]\n\n# Limit on the size of a gRPC message this server can send (bytes).\n# CLI flag: -server.grpc-max-send-msg-size-bytes\n[grpc_server_max_send_msg_size: <int> | default = 4194304]\n\n# Limit on the number of concurrent streams for gRPC calls per client connection\n# (0 = unlimited)\n# CLI flag: -server.grpc-max-concurrent-streams\n[grpc_server_max_concurrent_streams: <int> | default = 100]\n\n# The duration after which an idle connection should be closed. Default:\n# infinity\n# CLI flag: -server.grpc.keepalive.max-connection-idle\n[grpc_server_max_connection_idle: <duration> | default = 2562047h47m16.854775807s]\n\n# The duration for the maximum amount of time a connection may exist before it\n# will be closed. Default: infinity\n# CLI flag: -server.grpc.keepalive.max-connection-age\n[grpc_server_max_connection_age: <duration> | default = 2562047h47m16.854775807s]\n\n# An additive period after max-connection-age after which the connection will be\n# forcibly closed. Default: infinity\n# CLI flag: -server.grpc.keepalive.max-connection-age-grace\n[grpc_server_max_connection_age_grace: <duration> | default = 2562047h47m16.854775807s]\n\n# Duration after which a keepalive probe is sent in case of no activity over the\n# connection., Default: 2h\n# CLI flag: -server.grpc.keepalive.time\n[grpc_server_keepalive_time: <duration> | default = 2h]\n\n# After having pinged for keepalive check, the duration after which an idle\n# connection should be closed, Default: 20s\n# CLI flag: -server.grpc.keepalive.timeout\n[grpc_server_keepalive_timeout: <duration> | default = 20s]\n\n# Minimum amount of time a client should wait before sending a keepalive ping.\n# If client sends keepalive ping more often, server will send GOAWAY and close\n# the connection.\n# CLI flag: -server.grpc.keepalive.min-time-between-pings\n[grpc_server_min_time_between_pings: <duration> | default = 10s]\n\n# If true, server allows keepalive pings even when there are no active\n# streams(RPCs). If false, and client sends ping when there are no active\n# streams, server will send GOAWAY and close the connection.\n# CLI flag: -server.grpc.keepalive.ping-without-stream-allowed\n[grpc_server_ping_without_stream_allowed: <boolean> | default = true]\n\n# If non-zero, configures the amount of GRPC server workers used to serve the\n# requests.\n# CLI flag: -server.grpc.num-workers\n[grpc_server_num_workers: <int> | default = 0]\n\n# If true, the request_message_bytes, response_message_bytes, and\n# inflight_requests metrics will be tracked. Enabling this option prevents the\n# use of memory pools for parsing gRPC request bodies and may lead to more\n# memory allocations.\n# CLI flag: -server.grpc.stats-tracking-enabled\n[grpc_server_stats_tracking_enabled: <boolean> | default = true]\n\n# Deprecated option, has no effect and will be removed in a future version.\n# CLI flag: -server.grpc.recv-buffer-pools-enabled\n[grpc_server_recv_buffer_pools_enabled: <boolean> | default = false]\n\n# Output log messages in the given format. Valid formats: [logfmt, json]\n# CLI flag: -log.format\n[log_format: <string> | default = \"logfmt\"]\n\n# Only log messages with the given severity or above. Valid levels: [debug,\n# info, warn, error]\n# CLI flag: -log.level\n[log_level: <string> | default = \"info\"]\n\n# Optionally log the source IPs.\n# CLI flag: -server.log-source-ips-enabled\n[log_source_ips_enabled: <boolean> | default = false]\n\n# Log all source IPs instead of only the originating one. Only used if\n# server.log-source-ips-enabled is true\n# CLI flag: -server.log-source-ips-full\n[log_source_ips_full: <boolean> | default = false]\n\n# Header field storing the source IPs. Only used if\n# server.log-source-ips-enabled is true. If not set the default Forwarded,\n# X-Real-IP and X-Forwarded-For headers are used\n# CLI flag: -server.log-source-ips-header\n[log_source_ips_header: <string> | default = \"\"]\n\n# Regex for matching the source IPs. Only used if server.log-source-ips-enabled\n# is true. If not set the default Forwarded, X-Real-IP and X-Forwarded-For\n# headers are used\n# CLI flag: -server.log-source-ips-regex\n[log_source_ips_regex: <string> | default = \"\"]\n\n# Optionally log request headers.\n# CLI flag: -server.log-request-headers\n[log_request_headers: <boolean> | default = false]\n\n# Optionally log requests at info level instead of debug level. Applies to\n# request headers as well if server.log-request-headers is enabled.\n# CLI flag: -server.log-request-at-info-level-enabled\n[log_request_at_info_level_enabled: <boolean> | default = false]\n\n# Comma separated list of headers to exclude from loggin. Only used if\n# server.log-request-headers is true.\n# CLI flag: -server.log-request-headers-exclude-list\n[log_request_exclude_headers_list: <string> | default = \"\"]\n\n# Base path to serve all API routes from (e.g. /v1/)\n# CLI flag: -server.path-prefix\n[http_path_prefix: <string> | default = \"\"]\n\ncluster_validation:\n  # Optionally define the cluster validation label.\n  # CLI flag: -server.cluster-validation.label\n  [label: <string> | default = \"\"]\n\n  grpc:\n    # When enabled, cluster label validation is executed: configured cluster\n    # validation label is compared with the cluster validation label received\n    # through the requests.\n    # CLI flag: -server.cluster-validation.grpc.enabled\n    [enabled: <boolean> | default = false]\n\n    # When enabled, soft cluster label validation is executed. Can be enabled\n    # only together with server.cluster-validation.grpc.enabled\n    # CLI flag: -server.cluster-validation.grpc.soft-validation\n    [soft_validation: <boolean> | default = false]\n\n  http:\n    # When enabled, cluster label validation is executed: configured cluster\n    # validation label is compared with the cluster validation label received\n    # through the requests.\n    # CLI flag: -server.cluster-validation.http.enabled\n    [enabled: <boolean> | default = false]\n\n    # When enabled, soft cluster label validation is executed. Can be enabled\n    # only together with server.cluster-validation.http.enabled\n    # CLI flag: -server.cluster-validation.http.soft-validation\n    [soft_validation: <boolean> | default = false]\n\n    # Comma-separated list of url paths that are excluded from the cluster\n    # validation check.\n    # CLI flag: -server.cluster-validation.http.excluded-paths\n    [excluded_paths: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Grafana Agent for Kubernetes Log Collection\nDESCRIPTION: YAML configuration for deploying Grafana Agent to collect Kubernetes pod logs and ship them to Loki. It includes Kubernetes discovery, relabeling rules, file matching, and Loki endpoint configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nagent:\n  mounts:\n    varlog: true\n  configMap:\n    content: |\n      logging {\n        level  = \"info\"\n        format = \"logfmt\"\n      }\n\n      discovery.kubernetes \"k8s\" {\n        role = \"pod\"\n      }\n\n      discovery.relabel \"k8s\" {\n        targets = discovery.kubernetes.k8s.targets\n\n        rule {\n          source_labels = [\"__meta_kubernetes_pod_name\"]\n          action = \"replace\"\n          target_label = \"pod\"\n        }\n        rule {\n          source_labels = [\"__meta_kubernetes_pod_container_name\"]\n          action = \"replace\"\n          target_label = \"container\"\n        }\n\n        rule {\n          source_labels = [\"__meta_kubernetes_namespace\", \"__meta_kubernetes_pod_label_name\"]\n          target_label  = \"job\"\n          separator     = \"/\"\n        }\n\n        rule {\n          source_labels = [\"__meta_kubernetes_pod_uid\", \"__meta_kubernetes_pod_container_name\"]\n          target_label  = \"__path__\"\n          separator     = \"/\"\n          replacement   = \"/var/log/pods/*$1/*.log\"\n        }\n      }\n\n      local.file_match \"pods\" {\n        path_targets = discovery.relabel.k8s.output\n      }\n\n      loki.source.file \"pods\" {\n        targets = local.file_match.pods.targets\n        forward_to = [loki.write.endpoint.receiver]\n      }\n\n      loki.write \"endpoint\" {\n        endpoint {\n            url = \"http://loki-gateway:80/loki/api/v1/push\"\n            tenant_id = \"cloud\"\n        }\n      }\n```\n\n----------------------------------------\n\nTITLE: Security Log Analysis in LogQL\nDESCRIPTION: Queries for analyzing security logs including failed login attempts and successful login sessions from Linux /var/log/secure.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"security\"} \n    |~ \"Invalid user.*\"\n    | regexp \"(^(?P<user>\\\\S+ {1,2}){8})\"\n    | regexp \"(^(?P<ip>\\\\S+ {1,2}){10})\"\n    | line_format \"IP = {{.ip}}\\tUSER = {{.user}}\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"security\"}\n    != \"grafana_com\"\n    |= \"session opened\"\n    != \"sudo: \"\n    | regexp \"(^(?P<user>\\\\S+ {1,2}){11})\"\n    | line_format \"USER = {{.user}}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Global and Stream-Specific Retention Periods in Grafana Loki\nDESCRIPTION: This YAML snippet demonstrates how to set global retention periods and stream-specific retention rules within the limits_config section of Grafana Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/retention.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  retention_period: 744h\n  retention_stream:\n  - selector: '{namespace=\"dev\"}'\n    priority: 1\n    period: 24h\n  per_tenant_override_config: /etc/overrides.yaml\n```\n\n----------------------------------------\n\nTITLE: Vector Aggregation Queries\nDESCRIPTION: Examples of vector aggregation for analyzing log throughput, counting log lines, and calculating request rates.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_6\n\nLANGUAGE: logql\nCODE:\n```\ntopk(10,sum(rate({region=\"us-east1\"}[5m])) by (name))\n```\n\nLANGUAGE: logql\nCODE:\n```\nsum(count_over_time({job=\"mysql\"}[5m])) by (level)\n```\n\nLANGUAGE: logql\nCODE:\n```\navg(rate(({job=\"nginx\"} |= \"GET\" | json | path=\"/home\")[10s])) by (region)\n```\n\n----------------------------------------\n\nTITLE: Executing LogQL Query with LogCLI in Shell\nDESCRIPTION: This example demonstrates how to use LogCLI to execute a LogQL query with specific time range, timezone, and output format. It shows the basic usage of the 'query' command with essential flags.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nlogcli query \\\n     --timezone=UTC \\\n     --from=\"2021-01-19T10:00:00Z\" \\\n     --to=\"2021-01-19T20:00:00Z\" \\\n     --output=jsonl \\\n     'my-query'\n```\n\n----------------------------------------\n\nTITLE: Installing Promtail via Docker\nDESCRIPTION: Command to pull and run Promtail Docker container with configuration mounted from local path.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/installation.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull grafana/promtail:3.2.1\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v <local-path>:/mnt/config -v /var/log:/var/log --link loki grafana/promtail:3.2.1 --config.file=/mnt/config/promtail-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Downloading Loki Configuration Files using wget\nDESCRIPTION: Downloads the necessary configuration files (loki-config.yaml, alloy-local-config.yaml, and docker-compose.yaml) from the Grafana Loki GitHub repository using wget.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/grafana/loki/main/examples/getting-started/loki-config.yaml -O loki-config.yaml\nwget https://raw.githubusercontent.com/grafana/loki/main/examples/getting-started/alloy-local-config.yaml -O alloy-local-config.yaml\nwget https://raw.githubusercontent.com/grafana/loki/main/examples/getting-started/docker-compose.yaml -O docker-compose.yaml\n```\n\n----------------------------------------\n\nTITLE: Converting Unix Epoch to Human-Readable Date in LogQL\nDESCRIPTION: Example of converting a Unix epoch timestamp to a human-readable date format in a LogQL query.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_5\n\nLANGUAGE: logql\nCODE:\n```\n... | json | line_format `from=\"{{date \"2006-01-02\" (unixToTime .from)}}\"`\n```\n\n----------------------------------------\n\nTITLE: Keep Labels Expression - App Regex Example\nDESCRIPTION: Demonstrates keeping labels with regex matching for app names and specific fields like level and tenant.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\"app\": \"some-api-service\", \"level\": \"info\", \"method\": \"GET\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n{\"app\": \"other-service\", \"level\": \"info\", \"method\": \"GET\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n```\n\n----------------------------------------\n\nTITLE: Rule Group YAML Definition Format for Loki\nDESCRIPTION: YAML format for defining rule groups that can be used with the POST /loki/api/v1/rules/{namespace} endpoint. Includes group name, interval, and rules with alerts, expressions, durations, annotations, and labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\nname: <string>\ninterval: <duration;optional>\nrules:\n  - alert: <string>\n    expr: <string>\n    for: <duration>\n    annotations:\n      <annotation_name>: <string>\n    labels:\n      <label_name>: <string>\n```\n\n----------------------------------------\n\nTITLE: Installing Loki and Promtail using DNF Package Manager\nDESCRIPTION: This snippet shows how to install Loki and Promtail using the DNF package manager on RPM-based systems. It updates the package list and installs both Loki and Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndnf update\ndnf install loki promtail\n```\n\n----------------------------------------\n\nTITLE: Example Static Configuration for Promtail\nDESCRIPTION: A complete example configuration for setting up Promtail on a standalone machine. This includes server settings, positions file location, client URL for Loki, and a static scrape configuration for system logs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_50\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /var/log/positions.yaml # This location needs to be writeable by Promtail.\n\nclients:\n  - url: http://ip_or_hostname_where_Loki_run:3100/loki/api/v1/push\n\nscrape_configs:\n - job_name: system\n   pipeline_stages:\n   static_configs:\n   - targets:\n      - localhost\n     labels:\n      job: varlogs  # A `job` label is fairly standard in prometheus and useful for linking metrics and logs.\n      host: yourhost # A `host` label will help identify logs from this machine vs others\n      __path__: /var/log/*.log  # The path matching uses a third party library: https://github.com/bmatcuk/doublestar\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Clients for Loki Connection in YAML\nDESCRIPTION: Specifies the clients configuration block, which defines how Promtail connects to Loki instances, including URL, authentication, batching, and custom headers.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# The URL where Loki is listening, denoted in Loki as http_listen_address and\n# http_listen_port. If Loki is running in microservices mode, this is the HTTP\n# URL for the Distributor. Path to the push API needs to be included.\n# Example: http://example.com:3100/loki/api/v1/push\nurl: <string>\n\n# Custom HTTP headers to be sent along with each push request.\n# Be aware that headers that are set by Promtail itself (e.g. X-Scope-OrgID) can't be overwritten.\nheaders:\n  # Example: CF-Access-Client-Id: xxx\n  [ <labelname>: <labelvalue> ... ]\n\n# The tenant ID used by default to push logs to Loki. If omitted or empty\n# it assumes Loki is running in single-tenant mode and no X-Scope-OrgID header\n# is sent.\n[tenant_id: <string>]\n\n# Maximum amount of time to wait before sending a batch, even if that\n# batch isn't full.\n[batchwait: <duration> | default = 1s]\n\n# Maximum batch size (in bytes) of logs to accumulate before sending\n# the batch to Loki.\n[batchsize: <int> | default = 1048576]\n\n# If using basic auth, configures the username and password\n# sent.\nbasic_auth:\n  # The username to use for basic auth\n  [username: <string>]\n\n  # The password to use for basic auth\n  [password: <string>]\n\n  # The file containing the password for basic auth\n  [password_file: <filename>]\n\n# Optional OAuth 2.0 configuration\n```\n\n----------------------------------------\n\nTITLE: Implementing Graceful Shutdown with Gorilla Mux in Go\nDESCRIPTION: This snippet demonstrates how to implement graceful shutdown for a server using Gorilla Mux. It sets up a server with timeouts and uses context to manage the shutdown process.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"context\"\n    \"flag\"\n    \"log\"\n    \"net/http\"\n    \"os\"\n    \"os/signal\"\n    \"time\"\n\n    \"github.com/gorilla/mux\"\n)\n\nfunc main() {\n    var wait time.Duration\n    flag.DurationVar(&wait, \"graceful-timeout\", time.Second * 15, \"the duration for which the server gracefully wait for existing connections to finish - e.g. 15s or 1m\")\n    flag.Parse()\n\n    r := mux.NewRouter()\n    // Add your routes as needed\n\n    srv := &http.Server{\n        Addr:         \"0.0.0.0:8080\",\n        // Good practice to set timeouts to avoid Slowloris attacks.\n        WriteTimeout: time.Second * 15,\n        ReadTimeout:  time.Second * 15,\n        IdleTimeout:  time.Second * 60,\n        Handler: r, // Pass our instance of gorilla/mux in.\n    }\n\n    // Run our server in a goroutine so that it doesn't block.\n    go func() {\n        if err := srv.ListenAndServe(); err != nil {\n            log.Println(err)\n        }\n    }()\n\n    c := make(chan os.Signal, 1)\n    // We'll accept graceful shutdowns when quit via SIGINT (Ctrl+C)\n    // SIGKILL, SIGQUIT or SIGTERM (Ctrl+/) will not be caught.\n    signal.Notify(c, os.Interrupt)\n\n    // Block until we receive our signal.\n    <-c\n\n    // Create a deadline to wait for.\n    ctx, cancel := context.WithTimeout(context.Background(), wait)\n    defer cancel()\n    // Doesn't block if no connections, but will otherwise wait\n    // until the timeout deadline.\n    srv.Shutdown(ctx)\n    // Optionally, you could run srv.Shutdown in a goroutine and block on\n    // <-ctx.Done() if your application should wait for other services\n    // to finalize based on context cancellation.\n    log.Println(\"shutting down\")\n    os.Exit(0)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Object Handling in Grafana Loki (YAML)\nDESCRIPTION: This snippet defines configuration options for data object handling in Grafana Loki, including consumer settings, builder configuration, uploader settings, and querier options. It specifies default values and corresponding CLI flags for each option.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndataobj:\n  consumer:\n    builderconfig:\n      # The size of the target page to use for the data object builder.\n      # CLI flag: -dataobj-consumer.target-page-size\n      [target_page_size: <int> | default = 2MiB]\n\n      # The size of the target object to use for the data object builder.\n      # CLI flag: -dataobj-consumer.target-object-size\n      [target_object_size: <int> | default = 1GiB]\n\n      # Configures a maximum size for sections, for sections that support it.\n      # CLI flag: -dataobj-consumer.target-section-size\n      [target_section_size: <int> | default = 128MiB]\n\n      # The size of the buffer to use for sorting logs.\n      # CLI flag: -dataobj-consumer.buffer-size\n      [buffer_size: <int> | default = 16MiB]\n\n      # The maximum number of stripes to merge into a section at once. Must be\n      # greater than 1.\n      # CLI flag: -dataobj-consumer.section-stripe-merge-limit\n      [section_stripe_merge_limit: <int> | default = 2]\n\n    uploader:\n      # The size of the SHA prefix to use for generating object storage keys for\n      # data objects.\n      # CLI flag: -dataobj-consumer.sha-prefix-size\n      [shaprefixsize: <int> | default = 2]\n\n    # The maximum amount of time to wait in seconds before flushing an object\n    # that is no longer receiving new writes\n    # CLI flag: -dataobj-consumer.idle-flush-timeout\n    [idle_flush_timeout: <duration> | default = 1h]\n\n  querier:\n    # Enable the dataobj querier.\n    # CLI flag: -dataobj-querier-enabled\n    [enabled: <boolean> | default = false]\n\n    # The date of the first day of when the dataobj querier should start\n    # querying from. In YYYY-MM-DD format, for example: 2018-04-15.\n    # CLI flag: -dataobj-querier-from\n    [from: <daytime> | default = 1970-01-01]\n\n    # The number of shards to use for the dataobj querier.\n    # CLI flag: -dataobj-querier-shard-factor\n    [shard_factor: <int> | default = 32]\n\n  # The prefix to use for the storage bucket.\n  # CLI flag: -dataobj-storage-bucket-prefix\n  [storage_bucket_prefix: <string> | default = \"dataobj/\"]\n```\n\n----------------------------------------\n\nTITLE: Deploying Promtail as Kubernetes DaemonSet\nDESCRIPTION: Complete Kubernetes manifests for deploying Promtail as a DaemonSet with necessary RBAC configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/installation.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: promtail-daemonset\nspec:\n  selector:\n    matchLabels:\n      name: promtail\n  template:\n    metadata:\n      labels:\n        name: promtail\n    spec:\n      serviceAccount: promtail-serviceaccount\n      containers:\n      - name: promtail-container\n        image: grafana/promtail\n        args:\n        - -config.file=/etc/promtail/promtail.yaml\n        env: \n        - name: 'HOSTNAME'\n          valueFrom:\n            fieldRef:\n              fieldPath: 'spec.nodeName'\n        volumeMounts:\n        - name: logs\n          mountPath: /var/log\n        - name: promtail-config\n          mountPath: /etc/promtail\n        - mountPath: /var/lib/docker/containers\n          name: varlibdockercontainers\n          readOnly: true\n      volumes:\n      - name: logs\n        hostPath:\n          path: /var/log\n      - name: varlibdockercontainers\n        hostPath:\n          path: /var/lib/docker/containers\n      - name: promtail-config\n        configMap:\n          name: promtail-config\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: promtail-config\ndata:\n  promtail.yaml: |\n    server:\n      http_listen_port: 9080\n      grpc_listen_port: 0\n\n    clients:\n    - url: https://{YOUR_LOKI_ENDPOINT}/loki/api/v1/push\n\n    positions:\n      filename: /tmp/positions.yaml\n    target_config:\n      sync_period: 10s\n    scrape_configs:\n    - job_name: pod-logs\n      kubernetes_sd_configs:\n        - role: pod\n      pipeline_stages:\n        - docker: {}\n      relabel_configs:\n        - source_labels:\n            - __meta_kubernetes_pod_node_name\n          target_label: __host__\n        - action: labelmap\n          regex: __meta_kubernetes_pod_label_(.+)\n        - action: replace\n          replacement: $1\n          separator: /\n          source_labels:\n            - __meta_kubernetes_namespace\n            - __meta_kubernetes_pod_name\n          target_label: job\n        - action: replace\n          source_labels:\n            - __meta_kubernetes_namespace\n          target_label: namespace\n        - action: replace\n          source_labels:\n            - __meta_kubernetes_pod_name\n          target_label: pod\n        - action: replace\n          source_labels:\n            - __meta_kubernetes_pod_container_name\n          target_label: container\n        - replacement: /var/log/pods/*$1/*.log\n          separator: /\n          source_labels:\n            - __meta_kubernetes_pod_uid\n            - __meta_kubernetes_pod_container_name\n          target_label: __path__\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: promtail-clusterrole\nrules:\n  - apiGroups: [\"\"]\n    resources:\n    - nodes\n    - services\n    - pods\n    verbs:\n    - get\n    - watch\n    - list\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: promtail-serviceaccount\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: promtail-clusterrolebinding\nsubjects:\n    - kind: ServiceAccount\n      name: promtail-serviceaccount\n      namespace: default\nroleRef:\n    kind: ClusterRole\n    name: promtail-clusterrole\n    apiGroup: rbac.authorization.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Storage Options in YAML\nDESCRIPTION: Comprehensive configuration options for Loki's storage backends including cloud providers (AWS, Azure, GCS, Alibaba Cloud), local storage, and deprecated options like Cassandra and Bigtable. The configuration includes connection settings, authentication, caching, and performance tuning parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_68\n\nLANGUAGE: yaml\nCODE:\n```\n# The alibabacloud_storage_config block configures the connection to Alibaba\n# Cloud Storage object storage backend.\n[alibabacloud: <alibabacloud_storage_config>]\n\n# The aws_storage_config block configures the connection to dynamoDB and S3\n# object storage. Either one of them or both can be configured.\n[aws: <aws_storage_config>]\n\n# The azure_storage_config block configures the connection to Azure object\n# storage backend.\n[azure: <azure_storage_config>]\n\n# The bos_storage_config block configures the connection to Baidu Object Storage\n# (BOS) object storage backend.\n[bos: <bos_storage_config>]\n\n# Deprecated: Configures storing indexes in Bigtable. Required fields only\n# required when bigtable is defined in config.\nbigtable:\n  # Bigtable project ID.\n  # CLI flag: -bigtable.project\n  [project: <string> | default = \"\"]\n\n  # Bigtable instance ID. Please refer to\n  # https://cloud.google.com/docs/authentication/production for more information\n  # about how to configure authentication.\n  # CLI flag: -bigtable.instance\n  [instance: <string> | default = \"\"]\n\n  # The grpc_client block configures the gRPC client used to communicate between\n  # a client and server component in Loki.\n  # The CLI flags prefix for this block configuration is: bigtable\n  [grpc_client_config: <grpc_client>]\n\n  # If enabled, once a tables info is fetched, it is cached.\n  # CLI flag: -bigtable.table-cache.enabled\n  [table_cache_enabled: <boolean> | default = true]\n\n  # Duration to cache tables before checking again.\n  # CLI flag: -bigtable.table-cache.expiration\n  [table_cache_expiration: <duration> | default = 30m]\n\n# Configures storing chunks in GCS. Required fields only required when gcs is\n# defined in config.\n[gcs: <gcs_storage_config>]\n\n# Deprecated: Configures storing chunks and/or the index in Cassandra.\ncassandra:\n  # Comma-separated hostnames or IPs of Cassandra instances.\n  # CLI flag: -cassandra.addresses\n  [addresses: <string> | default = \"\"]\n\n  # Port that Cassandra is running on\n  # CLI flag: -cassandra.port\n  [port: <int> | default = 9042]\n\n  # Keyspace to use in Cassandra.\n  # CLI flag: -cassandra.keyspace\n  [keyspace: <string> | default = \"\"]\n\n  # Consistency level for Cassandra.\n  # CLI flag: -cassandra.consistency\n  [consistency: <string> | default = \"QUORUM\"]\n\n  # Replication factor to use in Cassandra.\n  # CLI flag: -cassandra.replication-factor\n  [replication_factor: <int> | default = 3]\n\n  # Instruct the cassandra driver to not attempt to get host info from the\n  # system.peers table.\n  # CLI flag: -cassandra.disable-initial-host-lookup\n  [disable_initial_host_lookup: <boolean> | default = false]\n\n  # Use SSL when connecting to cassandra instances.\n  # CLI flag: -cassandra.ssl\n  [SSL: <boolean> | default = false]\n\n  # Require SSL certificate validation.\n  # CLI flag: -cassandra.host-verification\n  [host_verification: <boolean> | default = true]\n\n  # Policy for selecting Cassandra host. Supported values are: round-robin,\n  # token-aware.\n  # CLI flag: -cassandra.host-selection-policy\n  [host_selection_policy: <string> | default = \"round-robin\"]\n\n  # Path to certificate file to verify the peer.\n  # CLI flag: -cassandra.ca-path\n  [CA_path: <string> | default = \"\"]\n\n  # Path to certificate file used by TLS.\n  # CLI flag: -cassandra.tls-cert-path\n  [tls_cert_path: <string> | default = \"\"]\n\n  # Path to private key file used by TLS.\n  # CLI flag: -cassandra.tls-key-path\n  [tls_key_path: <string> | default = \"\"]\n\n  # Enable password authentication when connecting to cassandra.\n  # CLI flag: -cassandra.auth\n  [auth: <boolean> | default = false]\n\n  # Username to use when connecting to cassandra.\n  # CLI flag: -cassandra.username\n  [username: <string> | default = \"\"]\n\n  # Password to use when connecting to cassandra.\n  # CLI flag: -cassandra.password\n  [password: <string> | default = \"\"]\n\n  # File containing password to use when connecting to cassandra.\n  # CLI flag: -cassandra.password-file\n  [password_file: <string> | default = \"\"]\n\n  # If set, when authenticating with cassandra a custom authenticator will be\n  # expected during the handshake. This flag can be set multiple times.\n  # CLI flag: -cassandra.custom-authenticator\n  [custom_authenticators: <list of strings> | default = []]\n\n  # Timeout when connecting to cassandra.\n  # CLI flag: -cassandra.timeout\n  [timeout: <duration> | default = 2s]\n\n  # Initial connection timeout, used during initial dial to server.\n  # CLI flag: -cassandra.connect-timeout\n  [connect_timeout: <duration> | default = 5s]\n\n  # Interval to retry connecting to cassandra nodes marked as DOWN.\n  # CLI flag: -cassandra.reconnent-interval\n  [reconnect_interval: <duration> | default = 1s]\n\n  # Number of retries to perform on a request. Set to 0 to disable retries.\n  # CLI flag: -cassandra.max-retries\n  [max_retries: <int> | default = 0]\n\n  # Maximum time to wait before retrying a failed request.\n  # CLI flag: -cassandra.retry-max-backoff\n  [retry_max_backoff: <duration> | default = 10s]\n\n  # Minimum time to wait before retrying a failed request.\n  # CLI flag: -cassandra.retry-min-backoff\n  [retry_min_backoff: <duration> | default = 100ms]\n\n  # Limit number of concurrent queries to Cassandra. Set to 0 to disable the\n  # limit.\n  # CLI flag: -cassandra.query-concurrency\n  [query_concurrency: <int> | default = 0]\n\n  # Number of TCP connections per host.\n  # CLI flag: -cassandra.num-connections\n  [num_connections: <int> | default = 2]\n\n  # Convict hosts of being down on failure.\n  # CLI flag: -cassandra.convict-hosts-on-failure\n  [convict_hosts_on_failure: <boolean> | default = true]\n\n  # Table options used to create index or chunk tables. This value is used as\n  # plain text in the table `WITH` like this, \"CREATE TABLE\n  # <generated_by_cortex> (...) WITH <cassandra.table-options>\". For details,\n  # see https://cortexmetrics.io/docs/production/cassandra. By default it will\n  # use the default table options of your Cassandra cluster.\n  # CLI flag: -cassandra.table-options\n  [table_options: <string> | default = \"\"]\n\n# Deprecated: Configures storing index in BoltDB. Required fields only required\n# when boltdb is present in the configuration.\nboltdb:\n  # Location of BoltDB index files.\n  # CLI flag: -boltdb.dir\n  [directory: <string> | default = \"\"]\n\n# Configures storing the chunks on the local file system. Required fields only\n# required when filesystem is present in the configuration.\n[filesystem: <local_storage_config>]\n\n# The swift_storage_config block configures the connection to OpenStack Object\n# Storage (Swift) object storage backend.\n[swift: <swift_storage_config>]\n\n# Deprecated:\ngrpc_store:\n  # Hostname or IP of the gRPC store instance.\n  # CLI flag: -grpc-store.server-address\n  [server_address: <string> | default = \"\"]\n\nhedging:\n  # If set to a non-zero value a second request will be issued at the provided\n  # duration. Default is 0 (disabled)\n  # CLI flag: -store.hedge-requests-at\n  [at: <duration> | default = 0s]\n\n  # The maximum of hedge requests allowed.\n  # CLI flag: -store.hedge-requests-up-to\n  [up_to: <int> | default = 2]\n\n  # The maximum of hedge requests allowed per seconds.\n  # CLI flag: -store.hedge-max-per-second\n  [max_per_second: <int> | default = 5]\n\n# Configures additional object stores for a given storage provider.\n# Supported stores: aws, azure, bos, filesystem, gcs, swift.\n# Example:\n# ```yaml\n#     storage_config:\n#       named_stores:\n#         aws:\n#           store-1:\n#             endpoint: s3://foo-bucket\n#             region: us-west1\n# ```\n# Named store from this example can be used by setting object_store to store-1\n# in period_config.\n[named_stores: <named_stores_config>]\n\n# The cos_storage_config block configures the connection to IBM Cloud Object\n# Storage (COS) backend.\n[cos: <cos_storage_config>]\n\n# Cache validity for active index entries. Should be no higher than\n# -ingester.max-chunk-idle.\n# CLI flag: -store.index-cache-validity\n[index_cache_validity: <duration> | default = 5m]\n\ncongestion_control:\n  # Use storage congestion control (default: disabled).\n  # CLI flag: -store.congestion-control.enabled\n  [enabled: <boolean> | default = false]\n\n  controller:\n    # Congestion control strategy to use (default: none, options: 'aimd').\n    # CLI flag: -store.congestion-control.strategy\n    [strategy: <string> | default = \"\"]\n\n    aimd:\n      # AIMD starting throughput window size: how many requests can be sent per\n      # second (default: 2000).\n      # CLI flag: -store.congestion-control.strategy.aimd.start\n      [start: <int> | default = 2000]\n\n      # AIMD maximum throughput window size: upper limit of requests sent per\n      # second (default: 10000).\n      # CLI flag: -store.congestion-control.strategy.aimd.upper-bound\n      [upper_bound: <int> | default = 10000]\n\n      # AIMD backoff factor when upstream service is throttled to decrease\n      # number of requests sent per second (default: 0.5).\n      # CLI flag: -store.congestion-control.strategy.aimd.backoff-factor\n      [backoff_factor: <float> | default = 0.5]\n\n  retry:\n    # Congestion control retry strategy to use (default: none, options:\n    # 'limited').\n    # CLI flag: -store.congestion-control.retry.strategy\n    [strategy: <string> | default = \"\"]\n\n    # Maximum number of retries allowed.\n    # CLI flag: -store.congestion-control.retry.strategy.limited.limit\n    [limit: <int> | default = 2]\n\n  hedging:\n    config:\n      [at: <duration>]\n\n      [up_to: <int>]\n\n      [max_per_second: <int>]\n\n    # Congestion control hedge strategy to use (default: none, options:\n    # 'limited').\n    # CLI flag: -store.congestion-control.hedge.strategy\n    [strategy: <string> | default = \"\"]\n\n# Experimental. Sets a constant prefix for all keys inserted into object\n# storage. Example: loki/\n# CLI flag: -store.object-prefix\n[object_prefix: <string> | default = \"\"]\n\n# The cache_config block configures the cache backend for a specific Loki\n# component.\n```\n\n----------------------------------------\n\nTITLE: Negative Pattern Match Filter in LogQL\nDESCRIPTION: Uses the line match not pattern operator to exclude log lines matching a specific pattern in the 'distributor' service in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: logql\nCODE:\n```\n{service_name=`distributor`} !> `<_> caller=http.go:194 level=debug <_> msg=\"POST /push.v1.PusherService/Push <_>`\n```\n\n----------------------------------------\n\nTITLE: Log Line Formatting and Unwrap Operations\nDESCRIPTION: Examples of reformatting log lines for better readability and unwrapping specific metrics for analysis.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_5\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"ops-tools1\", name=\"querier\", namespace=\"loki-dev\"}\n  |= \"metrics.go\" != \"loki-canary\"\n  | logfmt\n  | query != \"\"\n  | label_format query=\"{{ Replace .query \\\"\\\\n\\\" \\\"\\\" -1 }}\"\n  | line_format \"{{ .ts}}\\t{{.duration}}\\ttraceID = {{.traceID}}\\t{{ printf \\\"%-100.100s\\\" .query }} \"\n```\n\nLANGUAGE: logql\nCODE:\n```\nquantile_over_time(0.99,\n  {cluster=\"ops-tools1\",container=\"ingress-nginx\"}\n    | json\n    | __error__ = \"\"\n    | unwrap request_time [1m]) by (path)\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingest Limits in Grafana Loki (YAML)\nDESCRIPTION: This snippet defines configuration options for ingest limits in Grafana Loki, including general settings, lifecycler options, and ring configuration. It specifies default values and corresponding CLI flags for each option.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ningest_limits:\n  # Enable the ingest limits service.\n  # CLI flag: -ingest-limits.enabled\n  [enabled: <boolean> | default = false]\n\n  # The time window for which stream metadata is considered active.\n  # CLI flag: -ingest-limits.window-size\n  [window_size: <duration> | default = 1h]\n\n  # The time window for rate calculation. This should match the window used in\n  # Prometheus rate() queries for consistency.\n  # CLI flag: -ingest-limits.rate-window\n  [rate_window: <duration> | default = 5m]\n\n  # The granularity of time buckets used for sliding window rate calculation.\n  # Smaller buckets provide more precise rate tracking but require more memory.\n  # CLI flag: -ingest-limits.bucket-duration\n  [bucket_duration: <duration> | default = 1m]\n\n  lifecycler:\n    ring:\n      kvstore:\n        # Backend storage to use for the ring. Supported values are: consul,\n        # etcd, inmemory, memberlist, multi.\n        # CLI flag: -ingest-limits.store\n        [store: <string> | default = \"consul\"]\n\n        # The prefix for the keys in the store. Should end with a /.\n        # CLI flag: -ingest-limits.prefix\n        [prefix: <string> | default = \"collectors/\"]\n\n        # Configuration for a Consul client. Only applies if the selected\n        # kvstore is consul.\n        # The CLI flags prefix for this block configuration is: ingest-limits\n        [consul: <consul>]\n\n        # Configuration for an ETCD v3 client. Only applies if the selected\n        # kvstore is etcd.\n        # The CLI flags prefix for this block configuration is: ingest-limits\n        [etcd: <etcd>]\n\n        multi:\n          # Primary backend storage used by multi-client.\n          # CLI flag: -ingest-limits.multi.primary\n          [primary: <string> | default = \"\"]\n\n          # Secondary backend storage used by multi-client.\n          # CLI flag: -ingest-limits.multi.secondary\n          [secondary: <string> | default = \"\"]\n\n          # Mirror writes to secondary store.\n          # CLI flag: -ingest-limits.multi.mirror-enabled\n          [mirror_enabled: <boolean> | default = false]\n\n          # Timeout for storing value to secondary store.\n          # CLI flag: -ingest-limits.multi.mirror-timeout\n          [mirror_timeout: <duration> | default = 2s]\n\n      # The heartbeat timeout after which ingesters are skipped for\n      # reads/writes. 0 = never (timeout disabled).\n      # CLI flag: -ingest-limits.ring.heartbeat-timeout\n      [heartbeat_timeout: <duration> | default = 1m]\n\n      # The number of ingesters to write to and read from.\n      # CLI flag: -ingest-limits.distributor.replication-factor\n      [replication_factor: <int> | default = 3]\n\n      # True to enable the zone-awareness and replicate ingested samples across\n      # different availability zones.\n      # CLI flag: -ingest-limits.distributor.zone-awareness-enabled\n      [zone_awareness_enabled: <boolean> | default = false]\n\n      # Comma-separated list of zones to exclude from the ring. Instances in\n      # excluded zones will be filtered out from the ring.\n      # CLI flag: -ingest-limits.distributor.excluded-zones\n      [excluded_zones: <string> | default = \"\"]\n\n    # Number of tokens for each ingester.\n    # CLI flag: -ingest-limits.num-tokens\n    [num_tokens: <int> | default = 128]\n\n    # Period at which to heartbeat to consul. 0 = disabled.\n    # CLI flag: -ingest-limits.heartbeat-period\n    [heartbeat_period: <duration> | default = 5s]\n\n    # Heartbeat timeout after which instance is assumed to be unhealthy. 0 =\n    # disabled.\n    # CLI flag: -ingest-limits.heartbeat-timeout\n    [heartbeat_timeout: <duration> | default = 1m]\n\n    # Observe tokens after generating to resolve collisions. Useful when using\n    # gossiping ring.\n    # CLI flag: -ingest-limits.observe-period\n```\n\n----------------------------------------\n\nTITLE: Getting Rule Groups by Namespace in Loki API\nDESCRIPTION: Returns the rule groups defined for a specific namespace in YAML format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/rules/{namespace}\n```\n\nLANGUAGE: yaml\nCODE:\n```\nname: <string>\ninterval: <duration;optional>\nrules:\n  - alert: <string>\n    expr: <string>\n    for: <duration>\n    annotations:\n      <annotation_name>: <string>\n    labels:\n      <label_name>: <string>\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Stage Schema in YAML\nDESCRIPTION: Specifies the schema for the 'json' stage in Promtail's pipeline configuration. It includes options for JMESPath expressions, source specification, and handling of malformed JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/json.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njson:\n  expressions:\n    [ <string>: <string> ... ]\n  [source: <string>]\n  [drop_malformed: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Adding Comments in LogQL Queries\nDESCRIPTION: Demonstrates how to add comments to LogQL queries using the '#' character. Comments can be added at the end of a line or on separate lines in multi-line queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_15\n\nLANGUAGE: logql\nCODE:\n```\n{app=\"foo\"} # anything that comes after will not be interpreted in your query\n```\n\nLANGUAGE: logql\nCODE:\n```\n{app=\"foo\"}\n    | json\n    # this line will be ignored\n    | bar=\"baz\" # this checks if bar = \"baz\"\n```\n\n----------------------------------------\n\nTITLE: Scaling Loki Instances with Nomad CLI\nDESCRIPTION: Command to scale the number of Loki instances using Nomad's job scale functionality, allowing horizontal scaling of the deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnomad job scale loki loki <count>\n```\n\n----------------------------------------\n\nTITLE: Configuring Positions File for Promtail in YAML\nDESCRIPTION: Specifies settings for the positions file used by Promtail to track progress in log files, including file location and update frequency.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\npositions:\n  [filename: <string> | default = \"/var/log/positions.yaml\"]\n  [sync_period: <duration> | default = 10s]\n  [ignore_invalid_yaml: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Service Discovery in YAML\nDESCRIPTION: Configuration options for Kubernetes service discovery including API server settings, authentication, TLS, namespace discovery, and label/field selectors. Supports roles like endpoints, service, pod, node, and ingress.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_41\n\nLANGUAGE: yaml\nCODE:\n```\n# The information to access the Kubernetes API.\n\n# The API server addresses. If left empty, Prometheus is assumed to run inside\n# of the cluster and will discover API servers automatically and use the pod's\n# CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.\n[ api_server: <host> ]\n\n# The Kubernetes role of entities that should be discovered.\nrole: <role>\n\n# Optional authentication information used to authenticate to the API server.\n# Note that `basic_auth`, `bearer_token` and `bearer_token_file` options are\n# mutually exclusive.\n# password and password_file are mutually exclusive.\n\n# Optional HTTP basic authentication information.\nbasic_auth:\n  [ username: <string> ]\n  [ password: <secret> ]\n  [ password_file: <string> ]\n\n# Optional bearer token authentication information.\n[ bearer_token: <secret> ]\n\n# Optional bearer token file authentication information.\n[ bearer_token_file: <filename> ]\n\n# Optional proxy URL.\n[ proxy_url: <string> ]\n\n# TLS configuration.\ntls_config:\n  [ <tls_config> ]\n\n# Optional namespace discovery. If omitted, all namespaces are used.\nnamespaces:\n  names:\n    [ - <string> ]\n\n# Optional label and field selectors to limit the discovery process to a subset of available\n#  resources.\n[ selectors:\n          [ - role: <string>\n                  [ label: <string> ]\n                  [ field: <string> ] ]]\n```\n\n----------------------------------------\n\nTITLE: Example Log Deletion Request with Basic Authentication\nDESCRIPTION: Example cURL command for log deletion in Grafana Enterprise Logs, using Basic Authentication with tenant name and access policy token.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\ncurl -u \"Tenant1:$API_TOKEN\" \\\n  -g -X POST \\\n  'http://127.0.0.1:3100/loki/api/v1/delete?query={foo=\"bar\"}&start=1591616227&end=1591619692'\n```\n\n----------------------------------------\n\nTITLE: Basic GET Request with Retryable HTTP Client in Go\nDESCRIPTION: Demonstrates how to perform a simple GET request using the retryablehttp library. The client automatically handles retries and exponential backoff for failed requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-retryablehttp/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nresp, err := retryablehttp.Get(\"/foo\")\nif err != nil {\n    panic(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Blob Storage Configuration\nDESCRIPTION: YAML configuration for deploying Loki with Azure Blob Storage, including storage account settings and authentication options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-scalable/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: azure\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  ingester:\n    chunk_encoding: snappy\n  tracing:\n    enabled: true\n  querier:\n    max_concurrent: 4\n\n  storage:\n    type: azure\n    azure:\n      accountName: <your-account-name>\n      accountKey: <your-account-key>\n      connectionString: <your-connection-string>\n      useManagedIdentity: false\n      useFederatedToken: false\n      userAssignedId: <your-user-assigned-id>\n      requestTimeout: <your-request-timeout>\n      endpointSuffix: <your-endpoint-suffix>\n    bucketNames:\n      chunks: \"chunks\"\n      ruler: \"ruler\"\n      admin: \"admin\"\n```\n\n----------------------------------------\n\nTITLE: Complex Vector Comparison in LogQL\nDESCRIPTION: Compares log counts between two applications, removing the 'app' label, and filters based on the comparison in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: logql\nCODE:\n```\nsum without(app) (count_over_time({app=\"foo\"}[1m])) > sum without(app) (count_over_time({app=\"bar\"}[1m]))\n```\n\n----------------------------------------\n\nTITLE: Listing Alerts in Loki API (Prometheus-compatible)\nDESCRIPTION: GET endpoint to list all active alerts. This is compatible with Prometheus alerts API.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_42\n\nLANGUAGE: bash\nCODE:\n```\nGET /prometheus/api/v1/alerts\n```\n\n----------------------------------------\n\nTITLE: k6 Test Script for Loki\nDESCRIPTION: A JavaScript k6 test script with Loki extension that tests both writing logs to Loki and querying them back. It handles authentication, creates parametrized push requests, and executes both instant and range queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nimport {sleep, check} from 'k6';\nimport loki from 'k6/x/loki';\n\n/**\n* URL used for push and query requests\n* Path is automatically appended by the client\n* @constant {string}\n*/\n\nconst username = '<USERNAME>';\nconst password = '<PASSWORD>';\nconst external_ip = '<EXTERNAL-IP>';\n\nconst credentials = `${username}:${password}`;\n\nconst BASE_URL = `http://${credentials}@${external_ip}`;\n\n/**\n* Helper constant for byte values\n* @constant {number}\n*/\nconst KB = 1024;\n\n/**\n* Helper constant for byte values\n* @constant {number}\n*/\nconst MB = KB * KB;\n\n/**\n* Instantiate config and Loki client\n*/\n\nconst conf = new loki.Config(BASE_URL);\nconst client = new loki.Client(conf);\n\n/**\n* Define test scenario\n*/\nexport const options = {\n  vus: 10,\n  iterations: 10,\n};\n\nexport default () => {\n  // Push request with 10 streams and uncompressed logs between 800KB and 2MB\n  var res = client.pushParameterized(10, 800 * KB, 2 * MB);\n  // Check for successful write\n  check(res, { 'successful write': (res) => res.status == 204 });\n\n  // Pick a random log format from label pool\n  let format = randomChoice(conf.labels[\"format\"]);\n\n  // Execute instant query with limit 1\n  res = client.instantQuery(`count_over_time({format=\"${format}\"}[1m])`, 1)\n  // Check for successful read\n  check(res, { 'successful instant query': (res) => res.status == 200 });\n\n  // Execute range query over last 5m and limit 1000\n  res = client.rangeQuery(`{format=\"${format}\"}`, \"5m\", 1000)\n  // Check for successful read\n  check(res, { 'successful range query': (res) => res.status == 200 });\n\n  // Wait before next iteration\n  sleep(1);\n}\n\n/**\n* Helper function to get random item from array\n*/\nfunction randomChoice(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n```\n\n----------------------------------------\n\nTITLE: Boolean Comparison in LogQL\nDESCRIPTION: Attaches boolean values to streams based on their log volume using the 'bool' modifier in a comparison operation in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: logql\nCODE:\n```\ncount_over_time({foo=\"bar\"}[1m]) > bool 10\n```\n\n----------------------------------------\n\nTITLE: Accelerated LogQL Query Example\nDESCRIPTION: Example showing a properly structured LogQL query that will be accelerated because the structured metadata filter is placed before any parser stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_acceleration.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"prod\"} | detected_level=\"error\" | logfmt | json\n```\n\n----------------------------------------\n\nTITLE: Querying Grafana Cloud with LogCLI Authentication\nDESCRIPTION: Set environment variables for Grafana Cloud authentication and run a LogCLI query against the cloud instance.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport LOKI_ADDR=https://logs-us-west1.grafana.net\nexport LOKI_USERNAME=<username>\nexport LOKI_PASSWORD=<password>\n\nlogcli query '{service_name=\"website\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring TSDB in Loki YAML\nDESCRIPTION: This YAML configuration snippet demonstrates how to set up TSDB in Loki, including schema configuration, storage configuration, query scheduler settings, and querier settings. It shows both old boltdb-shipper and new TSDB configurations for comparison.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/tsdb.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    # Old boltdb-shipper schema. Included in example for reference but does not need changing.\n    - from: \"2023-01-03\" # <---- A date in the past\n      index:\n        period: 24h\n        prefix: index_\n      object_store: gcs\n      schema: v12\n      store: boltdb-shipper\n    # New TSDB schema below\n    - from: \"2023-01-05\" # <---- A date in the future\n      index:\n        period: 24h\n        prefix: index_\n      object_store: gcs\n      schema: v13\n      store: tsdb\n\nstorage_config:\n  # Old boltdb-shipper configuration. Included in example for reference but does not need changing.\n  boltdb_shipper:\n    active_index_directory: /data/index\n    build_per_tenant_index: true\n    cache_location: /data/boltdb-cache\n    index_gateway_client:\n      # only applicable if using microservices where index-gateways are independently deployed.\n      # This example is using kubernetes-style naming.\n      server_address: dns:///index-gateway.<namespace>.svc.cluster.local:9095\n  # New tsdb-shipper configuration\n  tsdb_shipper:\n    active_index_directory: /data/tsdb-index\n    cache_location: /data/tsdb-cache\n    index_gateway_client:\n      # only applicable if using microservices where index-gateways are independently deployed.\n      # This example is using kubernetes-style naming.\n      server_address: dns:///index-gateway.<namespace>.svc.cluster.local:9095\n\nquery_scheduler:\n  # the TSDB index dispatches many more, but each individually smaller, requests. \n  # We increase the pending request queue sizes to compensate.\n  max_outstanding_requests_per_tenant: 32768\n\nquerier:\n  # Each `querier` component process runs a number of parallel workers to process queries simultaneously.\n  # You may want to adjust this up or down depending on your resource usage\n  # (more available cpu and memory can tolerate higher values and vice versa),\n  # but we find the most success running at around `16` with tsdb\n  max_concurrent: 16\n```\n\n----------------------------------------\n\nTITLE: Configuring Consul Agent Service Discovery in YAML\nDESCRIPTION: Configuration for Consul Agent API service discovery including server settings, authentication, and service filtering. Used for local agent-based service discovery in large Consul clusters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_43\n\nLANGUAGE: yaml\nCODE:\n```\n# The information to access the Consul Agent API. It is to be defined\n# as the Consul documentation requires.\n[ server: <host> | default = \"localhost:8500\" ]\n[ token: <secret> ]\n[ datacenter: <string> ]\n[ scheme: <string> | default = \"http\" ]\n[ username: <string> ]\n[ password: <secret> ]\n\ntls_config:\n  [ <tls_config> ]\n\n# A list of services for which targets are retrieved. If omitted, all services\n# are scraped.\nservices:\n  [ - <string> ]\n\n# An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.\ntags:\n  [ - <string> ]\n\n# Node metadata key/value pairs to filter nodes for a given service.\n[ node_meta:\n  [ <string>: <string> ... ] ]\n```\n\n----------------------------------------\n\nTITLE: Querying Local Loki Instance with LogCLI\nDESCRIPTION: Set the LOKI_ADDR environment variable and run a LogCLI query against a local Loki instance without authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport LOKI_ADDR=http://localhost:3100\n\nlogcli query '{service_name=\"website\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail with Compressed File Support\nDESCRIPTION: YAML configuration example showing how to set up Promtail with decompression support for compressed log files. Demonstrates server settings, positions file configuration, client URL, and scrape configs with decompression options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\npositions:\n  filename: /var/lib/promtail/positions.yaml\nclients:\n  - url: http://localhost:3100/loki/api/v1/push\nscrape_configs:\n- job_name: system\n  decompression:\n    enabled: true\n    initial_delay: 10s\n    format: gz\n  static_configs:\n  - targets:\n      - localhost\n    labels:\n      job: varlogs\n      __path__: /var/log/**.gz\n```\n\n----------------------------------------\n\nTITLE: Setting Up GELF UDP Listener in Promtail (YAML)\nDESCRIPTION: This configuration demonstrates how to set up Promtail to listen for GELF (Graylog Extended Log Format) messages over UDP. It includes label configurations and relabeling rules for GELF-specific attributes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: gelf\n  gelf:\n    listen_address: \"0.0.0.0:12201\"\n    use_incoming_timestamp: true\n    labels:\n      job: gelf\n  relabel_configs:\n      - action: replace\n        source_labels:\n          - __gelf_message_host\n        target_label: host\n      - action: replace\n        source_labels:\n          - __gelf_message_level\n        target_label: level\n      - action: replace\n        source_labels:\n          - __gelf_message_facility\n        target_label: facility\n```\n\n----------------------------------------\n\nTITLE: Validating Loki Configuration Examples\nDESCRIPTION: Command to validate example configurations. Skips validation for examples marked with '# doc-example:skip-validation=true' comment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/yaml/README.txt#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake validate-example-configs\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Canary Command Line Options\nDESCRIPTION: Comprehensive list of command line flags available for configuring Loki Canary. Includes connection settings, authentication, metrics configuration, logging parameters, and testing intervals. Each option includes default values and descriptions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-canary/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n  -addr string\n    \tThe Loki server URL:Port, e.g. loki:3100. Loki address can also be set using the environment variable LOKI_ADDRESS.\n  -buckets int\n    \tNumber of buckets in the response_latency histogram (default 10)\n  -ca-file string\n    \tClient certificate authority for optional use with TLS connection to Loki\n  -cert-file string\n    \tClient PEM encoded X.509 certificate for optional use with TLS connection to Loki\n  -insecure\n    \tAllow insecure TLS connections\n  -interval duration\n    \tDuration between log entries (default 1s)\n  -key-file string\n    \tClient PEM encoded X.509 key for optional use with TLS connection to Loki\n  -labelname string\n    \tThe label name for this instance of loki-canary to use in the log selector (default \"name\")\n  -labelvalue string\n    \tThe unique label value for this instance of loki-canary to use in the log selector (default \"loki-canary\")\n  -max-wait duration\n    \tDuration to keep querying Loki for missing websocket entries before reporting them missing (default 5m0s)\n  -metric-test-interval duration\n    \tThe interval the metric test query should be run (default 1h0m0s)\n  -metric-test-range duration\n    \tThe range value [24h] used in the metric test instant-query. Note: this value is truncated to the running time of the canary until this value is reached (default 24h0m0s)\n  -out-of-order-max duration\n    \tMaximum amount of time to go back for out of order entries (in seconds). (default 1m0s)\n  -out-of-order-min duration\n    \tMinimum amount of time to go back for out of order entries (in seconds). (default 30s)\n  -out-of-order-percentage int\n    \tPercentage (0-100) of log entries that should be sent out of order.\n  -pass string\n    \tLoki password. This credential should have both read and write permissions to Loki endpoints\n  -port int\n    \tPort which loki-canary should expose metrics (default 3500)\n  -pruneinterval duration\n    \tFrequency to check sent vs received logs, also the frequency which queries for missing logs will be dispatched to loki (default 1m0s)\n  -push\n    \tPush the logs directly to given Loki address\n  -query-timeout duration\n    \tHow long to wait for a query response from Loki (default 10s)\n  -size int\n    \tSize in bytes of each log line (default 100)\n  -spot-check-initial-wait duration\n    \tHow long should the spot check query wait before starting to check for entries (default 10s)\n  -spot-check-interval duration\n    \tInterval that a single result will be kept from sent entries and spot-checked against Loki, e.g. 15min default one entry every 15 min will be saved and then queried again every 15min until spot-check-max is reached (default 15m0s)\n  -spot-check-max duration\n    \tHow far back to check a spot check entry before dropping it (default 4h0m0s)\n  -spot-check-query-rate duration\n    \tInterval that the canary will query Loki for the current list of all spot check entries (default 1m0s)\n  -streamname string\n    \tThe stream name for this instance of loki-canary to use in the log selector (default \"stream\")\n  -streamvalue string\n    \tThe unique stream value for this instance of loki-canary to use in the log selector (default \"stdout\")\n  -tenant-id string\n    \tTenant ID to be set in X-Scope-OrgID header.\n  -tls\n    \tDoes the loki connection use TLS?\n  -user string\n    \tLoki username.\n  -version\n    \tPrint this builds version information\n  -wait duration\n    \tDuration to wait for log entries on websocket before querying loki for them (default 1m0s)\n  -write-max-backoff duration\n    \tMaximum backoff time between retries  (default 5m0s)\n  -write-max-retries int\n    \tMaximum number of retries when push a log entry  (default 10)\n  -write-min-backoff duration\n    \tInitial backoff time before first retry  (default 500ms)\n  -write-timeout duration\n    \tHow long to wait write response from Loki (default 10s)\n```\n\n----------------------------------------\n\nTITLE: Viewing Index Gateway Ring Status in Loki API\nDESCRIPTION: Displays a web page with the index gateway hash ring status, including state, health, and last heartbeat time of each index gateway.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nGET /indexgateway/ring\n```\n\n----------------------------------------\n\nTITLE: Loki Ingest Limits Base Configuration\nDESCRIPTION: Core configuration settings for Loki ingest limits including observation periods, network settings, and lifecycler parameters. Defines basic operational parameters like observation periods, join delays, and ring healthcheck settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nobserve_period: <duration> | default = 0s\njoin_after: <duration> | default = 0s\nmin_ready_duration: <duration> | default = 15s\ninterface_names: <list of strings> | default = [<private network interfaces>]\nenable_inet6: <boolean> | default = false\nfinal_sleep: <duration> | default = 0s\ntokens_file_path: <string> | default = \"\"\navailability_zone: <string> | default = \"\"\nunregister_on_shutdown: <boolean> | default = true\nreadiness_check_ring_health: <boolean> | default = true\naddress: <string> | default = \"\"\nport: <int> | default = 0\nid: <string> | default = \"<hostname>\"\nnum_partitions: <int> | default = 64\n```\n\n----------------------------------------\n\nTITLE: Local Filesystem Configuration\nDESCRIPTION: Complete configuration for deploying Loki with filesystem backend storage. The index is shipped via tsdb-shipper and stored locally.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/configuration-examples.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nauth_enabled: false\n\nserver:\n  http_listen_port: 3100\n\ncommon:\n  ring:\n    instance_addr: 127.0.0.1\n    kvstore:\n      store: inmemory\n  replication_factor: 1\n  path_prefix: /tmp/loki\n\nschema_config:\n  configs:\n  - from: 2020-05-15\n    store: tsdb\n    object_store: filesystem\n    schema: v13\n    index:\n      prefix: index_\n      period: 24h\n\nstorage_config:\n  filesystem:\n    directory: /tmp/loki/chunks\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudflare API Connection in YAML\nDESCRIPTION: This YAML snippet shows how to configure the connection to Cloudflare's API, including authentication, zone selection, and log fetching options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\napi_token: <string>\n\nzone_id: <string>\n\n[pull_range: <duration> | default = 1m]\n\n[workers: <int> | default = 3]\n\n[fields_type: <string> | default = default]\n\n[additional_fields: <string> ... ]\n\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n```\n\n----------------------------------------\n\nTITLE: Basic LogQL Query with Stream Selector and Pipeline\nDESCRIPTION: Example showing a complete LogQL query that selects logs from a specific container and namespace, then filters and processes the logs using a pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n{container=\"query-frontend\",namespace=\"loki-dev\"} |= \"metrics.go\" | logfmt | duration > 10s and throughput_mb < 500\n```\n\n----------------------------------------\n\nTITLE: LogQL Stream Selector\nDESCRIPTION: Basic log stream selector that matches logs based on specific label values using exact matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{app=\"mysql\",name=\"mysql-backup\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with S3 Storage\nDESCRIPTION: YAML configuration for deploying Loki microservices using AWS S3 as the storage backend.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-microservices/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: 2024-04-01\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  storage_config:\n    aws:\n      region: <AWS region your bucket is in, for example, `eu-west-2`>\n      bucketnames: <Your AWS bucket for chunk, for example, `aws-loki-dev-chunk`>\n      s3forcepathstyle: false\n  ingester:\n      chunk_encoding: snappy\n  pattern_ingester:\n      enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n    retention_period: 672h # 28 days retention\n  querier:\n      max_concurrent: 4\n\n  storage:\n    type: s3\n    bucketNames:\n        chunks: <Your AWS bucket for chunk, for example, `aws-loki-dev-chunk`>\n        ruler: <Your AWS bucket for ruler, for example,  `aws-loki-dev-ruler`>\n        admin: <Your AWS bucket for admin, for example,  `aws-loki-dev-admin`>\n    s3:\n      s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name\n      endpoint: <your-endpoint>\n      region: <your-region>\n      secretAccessKey: <your-secret-access-key>\n      accessKeyId: <your-access-key-id>\n      signatureVersion: <your-signature-version>\n      s3ForcePathStyle: false\n      insecure: false\n      http_config: {}\n\n  deploymentMode: Distributed\n\n  minio:\n      enabled: false\n\n  ingester:\n    replicas: 3\n    zoneAwareReplication:\n      enabled: false\n  querier:\n    replicas: 3\n    maxUnavailable: 2\n  queryFrontend:\n    replicas: 2\n    maxUnavailable: 1\n  queryScheduler:\n    replicas: 2\n  distributor:\n    replicas: 3\n    maxUnavailable: 2\n  compactor:\n    replicas: 1\n  indexGateway:\n    replicas: 2\n    maxUnavailable: 1\n\n  bloomPlanner:\n    replicas: 0\n  bloomBuilder:\n    replicas: 0\n  bloomGateway:\n    replicas: 0\n\n  backend:\n    replicas: 0\n  read:\n    replicas: 0\n  write:\n    replicas: 0\n\n  singleBinary:\n    replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Logical Comparisons in Go Templates\nDESCRIPTION: Functions for performing logical comparisons in templates.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_18\n\nLANGUAGE: template\nCODE:\n```\n{{ if contains \"ErrTimeout\" .err }} timeout {{end}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ if contains \"he\" \"hello\" }} yes {{end}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ if eq \"ErrTimeout\" .err }} timeout {{end}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ if eq \"hello\" \"hello\" }} yes {{end}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ if hasSuffix .err \"Timeout\" }} timeout {{end}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ if hasPrefix \"he\" \"hello\" }} yes {{end}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Blocking with Per-Tenant Overrides in YAML\nDESCRIPTION: This snippet demonstrates how to use per-tenant overrides in Grafana Loki to block unwanted queries. It shows various blocking methods including exact matching, regex patterns, query type filtering, and hash-based blocking.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/blocking-queries.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\noverrides:\n  \"tenant-id\":\n    blocked_queries:\n      # block this query exactly\n      - pattern: 'sum(rate({env=\"prod\"}[1m]))'\n\n      # block any query matching this regex pattern \n      - pattern: '.*prod.*'\n        regex: true\n\n      # block all metric queries\n      - types: metric\n\n      # block any filter or limited queries matching this regex pattern \n      - pattern: '.*prod.*'\n        regex: true\n        types: filter,limited\n\n      # block any query that matches this query hash\n      - hash: 2943214005          # hash of {stream=\"stdout\",pod=\"loki-canary-9w49x\"}\n        types: filter,limited\n```\n\n----------------------------------------\n\nTITLE: Flushing and Shutting Down Ingester in Loki API\nDESCRIPTION: Triggers a shutdown of the ingester with options to flush in-memory chunks, delete ring tokens, and terminate the process. This is helpful for scaling down WAL-enabled ingesters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nGET, POST /ingester/shutdown\n```\n\n----------------------------------------\n\nTITLE: Tanka Configuration for Loki Canary\nDESCRIPTION: Jsonnet configuration example for deploying Loki Canary using Tanka, specifying various parameters like address, port, and intervals.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-canary/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: jsonnet\nCODE:\n```\nlocal loki_canary = import 'loki-canary/loki-canary.libsonnet';\n\nloki_canary {\n  loki_canary_args+:: {\n    addr: \"loki:3100\",\n    port: 80,\n    labelname: \"instance\",\n    interval: \"100ms\",\n    size: 1024,\n    wait: \"3m\",\n  },\n  _config+:: {\n    namespace: \"default\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an etcd client in Go\nDESCRIPTION: Example of creating an etcd client using clientv3.New. It sets up the client with multiple endpoints and a dial timeout.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/etcd/client/v3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncli, err := clientv3.New(clientv3.Config{\n\tEndpoints:   []string{\"localhost:2379\", \"localhost:22379\", \"localhost:32379\"},\n\tDialTimeout: 5 * time.Second,\n})\nif err != nil {\n\t// handle error!\n}\ndefer cli.Close()\n```\n\n----------------------------------------\n\nTITLE: S3 Storage Configuration in YAML\nDESCRIPTION: Comprehensive configuration block for Amazon S3 object storage backend, including endpoint settings, authentication, HTTP configuration, and SSE encryption options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_64\n\nLANGUAGE: yaml\nCODE:\n```\n# S3 endpoint URL with escaped Key and Secret encoded. If only region is\n# specified as a host, proper endpoint will be deduced. Use\n# inmemory:///<bucket-name> to use a mock in-memory implementation.\n# CLI flag: -<prefix>.s3.url\n[s3: <url>]\n\n# Set this to `true` to force the request to use path-style addressing.\n# CLI flag: -<prefix>.s3.force-path-style\n[s3forcepathstyle: <boolean> | default = false]\n\n# Comma separated list of bucket names to evenly distribute chunks over.\n# Overrides any buckets specified in s3.url flag\n# CLI flag: -<prefix>.s3.buckets\n[bucketnames: <string> | default = \"\"]\n\n# S3 Endpoint to connect to.\n# CLI flag: -<prefix>.s3.endpoint\n[endpoint: <string> | default = \"\"]\n\n# AWS region to use.\n# CLI flag: -<prefix>.s3.region\n[region: <string> | default = \"\"]\n\n# AWS Access Key ID\n# CLI flag: -<prefix>.s3.access-key-id\n[access_key_id: <string> | default = \"\"]\n\n# AWS Secret Access Key\n# CLI flag: -<prefix>.s3.secret-access-key\n[secret_access_key: <string> | default = \"\"]\n\n# AWS Session Token\n# CLI flag: -<prefix>.s3.session-token\n[session_token: <string> | default = \"\"]\n\n# Disable https on s3 connection.\n# CLI flag: -<prefix>.s3.insecure\n[insecure: <boolean> | default = false]\n\n# Delimiter used to replace the default delimiter ':' in chunk IDs when storing\n# chunks. This is mainly intended when you run a MinIO instance on a Windows\n# machine. You should not change this value inflight.\n# CLI flag: -<prefix>.s3.chunk-delimiter\n[chunk_delimiter: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Implementing k6 Load Test for Loki Write Path\nDESCRIPTION: A complete k6 test script for load testing Loki's write path. The script configures test parameters, sets up a Loki client, and implements write operations with randomized data streams. It includes configurations for VUs (Virtual Users), test duration, and success criteria validation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/write-scenario.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { check, fail } from 'k6';\nimport loki from 'k6/x/loki';\n\n/*\n * Host name with port\n * @constant {string}\n */\nconst HOST = \"localhost:3100\";\n\n/**\n * Name of the Loki tenant\n * passed as X-Scope-OrgID header to requests.\n * If tenant is omitted, xk6-loki runs in multi-tenant mode,\n * and every VU will use its own ID.\n * @constant {string}\n */\nconst TENANT_ID = \"my_org_id\"\n\n/**\n * URL used for push and query requests\n * Path is automatically appended by the client\n * @constant {string}\n */\nconst BASE_URL = `${TENANT_ID}@${HOST}`;\n\n/**\n * Minimum amount of virtual users (VUs)\n * @constant {number}\n */\nconst MIN_VUS = 1\n\n/**\n * Maximum amount of virtual users (VUs)\n * @constant {number}\n */\nconst MAX_VUS = 10;\n\n/**\n * Constants for byte values\n * @constant {number}\n */\nconst KB = 1024;\nconst MB = KB * KB;\n\n/**\n * Definition of test scenario\n */\nexport const options = {\n  thresholds: {\n    'http_req_failed': [{ threshold: 'rate<=0.01', abortOnFail: true }],\n  },\n  scenarios: {\n    write: {\n      executor: 'ramping-vus',\n      exec: 'write',\n      startVUs: MIN_VUS,\n      stages: [\n        { duration: '5m', target: MAX_VUS },\n        { duration: '30m', target: MAX_VUS },\n      ],\n      gracefulRampDown: '1m',\n    },\n  },\n};\n\nconst labelCardinality = {\n  \"app\": 5,\n  \"namespace\": 1,\n};\nconst timeout = 10000; // 10s\nconst ratio = 0.9; // 90% Protobuf\nconst conf = new loki.Config(BASE_URL, timeout, ratio, labelCardinality);\nconst client = new loki.Client(conf);\n\n/**\n * Entrypoint for write scenario\n */\nexport function write() {\n  let streams = randomInt(4, 8);\n  let res = client.pushParameterized(streams, 800 * KB, 1 * MB);\n  check(res,\n    {\n      'successful write': (res) => {\n        let success = res.status === 204;\n        if (!success) console.log(res.status, res.body);\n        return success;\n      },\n    }\n  );\n}\n\n/**\n * Return a random integer between min and max including min and max\n */\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Log Level Proportion in LogQL\nDESCRIPTION: Calculates the proportion of warning logs to error logs for a specific application using rate and sum functions in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\nsum(rate({app=\"foo\", level=\"warn\"}[1m])) / sum(rate({app=\"foo\", level=\"error\"}[1m]))\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with GET Request to Loki API (Bash)\nDESCRIPTION: This snippet shows how to query logs from Loki using a GET request to the /loki/api/v1/query endpoint. It uses URL-encoded parameters to specify the LogQL query and retrieves the results in JSON format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -G -s  \"http://localhost:3100/loki/api/v1/query\" \\\n  --data-urlencode 'query=sum(rate({job=\"varlogs\"}[10m])) by (level)' | jq\n```\n\n----------------------------------------\n\nTITLE: Setting Up Kafka Consumer in Promtail (YAML)\nDESCRIPTION: This snippet demonstrates how to configure Promtail to read messages from Kafka using a consumer group. It specifies brokers, topics, and includes relabeling configurations for Kafka-specific metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: kafka\n  kafka:\n    brokers:\n    - my-kafka-0.org:50705\n    - my-kafka-1.org:50705\n    topics:\n    - ^promtail.*\n    - some_fixed_topic\n    labels:\n      job: kafka\n  relabel_configs:\n      - action: replace\n        source_labels:\n          - __meta_kafka_topic\n        target_label: topic\n      - action: replace\n        source_labels:\n          - __meta_kafka_partition\n        target_label: partition\n      - action: replace\n        source_labels:\n          - __meta_kafka_group_id\n        target_label: group\n      - action: replace\n        source_labels:\n          - __meta_kafka_message_key\n        target_label: message_key\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Distributor in YAML\nDESCRIPTION: Comprehensive configuration for the Loki distributor component, including ring configuration, push workers, rate limiting, write failures logging, OTLP settings, and Kafka integration options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\nring:\n  kvstore:\n    # Backend storage to use for the ring. Supported values are: consul, etcd,\n    # inmemory, memberlist, multi.\n    # CLI flag: -distributor.ring.store\n    [store: <string> | default = \"consul\"]\n\n    # The prefix for the keys in the store. Should end with a /.\n    # CLI flag: -distributor.ring.prefix\n    [prefix: <string> | default = \"collectors/\"]\n\n    # Configuration for a Consul client. Only applies if the selected kvstore is\n    # consul.\n    # The CLI flags prefix for this block configuration is: distributor.ring\n    [consul: <consul>]\n\n    # Configuration for an ETCD v3 client. Only applies if the selected kvstore\n    # is etcd.\n    # The CLI flags prefix for this block configuration is: distributor.ring\n    [etcd: <etcd>]\n\n    multi:\n      # Primary backend storage used by multi-client.\n      # CLI flag: -distributor.ring.multi.primary\n      [primary: <string> | default = \"\"]\n\n      # Secondary backend storage used by multi-client.\n      # CLI flag: -distributor.ring.multi.secondary\n      [secondary: <string> | default = \"\"]\n\n      # Mirror writes to secondary store.\n      # CLI flag: -distributor.ring.multi.mirror-enabled\n      [mirror_enabled: <boolean> | default = false]\n\n      # Timeout for storing value to secondary store.\n      # CLI flag: -distributor.ring.multi.mirror-timeout\n      [mirror_timeout: <duration> | default = 2s]\n\n  # Period at which to heartbeat to the ring. 0 = disabled.\n  # CLI flag: -distributor.ring.heartbeat-period\n  [heartbeat_period: <duration> | default = 5s]\n\n  # The heartbeat timeout after which distributors are considered unhealthy\n  # within the ring. 0 = never (timeout disabled).\n  # CLI flag: -distributor.ring.heartbeat-timeout\n  [heartbeat_timeout: <duration> | default = 1m]\n\n  # Name of network interface to read address from.\n  # CLI flag: -distributor.ring.instance-interface-names\n  [instance_interface_names: <list of strings> | default = [<private network interfaces>]]\n\n# Number of workers to push batches to ingesters.\n# CLI flag: -distributor.push-worker-count\n[push_worker_count: <int> | default = 256]\n\n# The maximum size of a received message.\n# CLI flag: -distributor.max-recv-msg-size\n[max_recv_msg_size: <int> | default = 104857600]\n\nrate_store:\n  # The max number of concurrent requests to make to ingester stream apis\n  # CLI flag: -distributor.rate-store.max-request-parallelism\n  [max_request_parallelism: <int> | default = 200]\n\n  # The interval on which distributors will update current stream rates from\n  # ingesters\n  # CLI flag: -distributor.rate-store.stream-rate-update-interval\n  [stream_rate_update_interval: <duration> | default = 1s]\n\n  # Timeout for communication between distributors and any given ingester when\n  # updating rates\n  # CLI flag: -distributor.rate-store.ingester-request-timeout\n  [ingester_request_timeout: <duration> | default = 500ms]\n\n  # If enabled, detailed logs and spans will be emitted.\n  # CLI flag: -distributor.rate-store.debug\n  [debug: <boolean> | default = false]\n\n# Customize the logging of write failures.\nwrite_failures_logging:\n  # Log volume allowed (per second). Default: 1KB.\n  # CLI flag: -distributor.write-failures-logging.rate\n  [rate: <int> | default = 1KB]\n\n  # Whether a insight=true key should be logged or not. Default: false.\n  # CLI flag: -distributor.write-failures-logging.add-insights-label\n  [add_insights_label: <boolean> | default = false]\n\notlp_config:\n  # List of default otlp resource attributes to be picked as index labels\n  # CLI flag: -distributor.otlp.default_resource_attributes_as_index_labels\n  [default_resource_attributes_as_index_labels: <list of strings> | default = [service.name service.namespace service.instance.id deployment.environment deployment.environment.name cloud.region cloud.availability_zone k8s.cluster.name k8s.namespace.name k8s.pod.name k8s.container.name container.name k8s.replicaset.name k8s.deployment.name k8s.statefulset.name k8s.daemonset.name k8s.cronjob.name k8s.job.name]]\n\n# Enable writes to Kafka during Push requests.\n# CLI flag: -distributor.kafka-writes-enabled\n[kafka_writes_enabled: <boolean> | default = false]\n\n# Enable writes to Ingesters during Push requests. Defaults to true.\n# CLI flag: -distributor.ingester-writes-enabled\n[ingester_writes_enabled: <boolean> | default = true]\n\n# Enable checking limits against the ingest-limits service. Defaults to false.\n# CLI flag: -distributor.ingest-limits-enabled\n[ingest_limits_enabled: <boolean> | default = false]\n\n# Enable dry-run mode where limits are checked the ingest-limits service, but\n# not enforced. Defaults to false.\n# CLI flag: -distributor.ingest-limits-dry-run-enabled\n[ingest_limits_dry_run_enabled: <boolean> | default = false]\n\ntenant_topic:\n  # Enable the tenant topic tee, which writes logs to Kafka topics based on\n  # tenant IDs instead of using multitenant topics/partitions.\n  # CLI flag: -distributor.tenant-topic-tee.enabled\n  [enabled: <boolean> | default = false]\n\n  # Prefix to prepend to tenant IDs to form the final Kafka topic name\n  # CLI flag: -distributor.tenant-topic-tee.topic-prefix\n  [topic_prefix: <string> | default = \"loki.tenant\"]\n\n  # Maximum number of bytes that can be buffered before producing to Kafka\n  # CLI flag: -distributor.tenant-topic-tee.max-buffered-bytes\n  [max_buffered_bytes: <int> | default = 100MiB]\n\n  # Maximum size of a single Kafka record in bytes\n  # CLI flag: -distributor.tenant-topic-tee.max-record-size-bytes\n  [max_record_size_bytes: <int> | default = 15MiB249KiB]\n\n  # Topic strategy to use. Valid values are 'simple' or 'automatic'\n  # CLI flag: -distributor.tenant-topic-tee.strategy\n  [strategy: <string> | default = \"simple\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Helm Chart Values\nDESCRIPTION: YAML configuration for deploying Loki in microservices mode on AKS with Azure Blob Storage and workload identity for authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n   podLabels:\n    \"azure.workload.identity/use\": \"true\" # Add this label to the Loki pods to enable workload identity\n   schemaConfig:\n     configs:\n       - from: \"2024-04-01\"\n         store: tsdb\n         object_store: azure\n         schema: v13\n         index:\n           prefix: loki_index_\n           period: 24h\n   storage_config:\n     azure:\n      account_name: \"<INSERT-STORAGE-ACCOUNT-NAME>\" \n      container_name: \"<CHUNK-CONTAINER-NAME>\" # Your actual Azure Blob Storage container name (loki-azure-dev-chunks)\n      use_federated_token: true # Use federated token for authentication\n   ingester:\n       chunk_encoding: snappy\n   pattern_ingester:\n       enabled: true\n   limits_config:\n     allow_structured_metadata: true\n     volume_enabled: true\n     retention_period: 672h # 28 days retention\n   compactor:\n     retention_enabled: true \n     delete_request_store: azure\n   ruler:\n    enable_api: true\n    storage:\n      type: azure\n      azure:\n        account_name: <INSERT-STORAGE-ACCOUNT-NAME>\n        container_name: <RULER-CONTAINER-NAME> # Your actual Azure Blob Storage container name (loki-azure-dev-ruler)\n        use_federated_token: true # Use federated token for authentication\n      alertmanager_url: http://prom:9093 # The URL of the Alertmanager to send alerts (Prometheus, Mimir, etc.)\n\n   querier:\n      max_concurrent: 4\n\n   storage:\n      type: azure\n      bucketNames:\n        chunks: \"<CHUNK-CONTAINER-NAME>\" # Your actual Azure Blob Storage container name (loki-azure-dev-chunks)\n        ruler: \"<RULER-CONTAINER-NAME>\" # Your actual Azure Blob Storage container name (loki-azure-dev-ruler)\n        # admin: \"admin-loki-devrel\" # Your actual Azure Blob Storage container name (loki-azure-dev-admin)\n      azure:\n        accountName: <INSERT-STORAGE-ACCOUNT-NAME>\n        useFederatedToken: true # Use federated token for authentication\n\n# Define the Azure workload identity\nserviceAccount:\n  name: loki\n  annotations:\n    \"azure.workload.identity/client-id\": \"<APP-ID>\" # The app ID of the Azure AD app\n  labels:\n    \"azure.workload.identity/use\": \"true\"\n\ndeploymentMode: Distributed\n\ningester:\n replicas: 3\n zoneAwareReplication:\n  enabled: false\n\nquerier:\n replicas: 3\n maxUnavailable: 2\n\nqueryFrontend:\n replicas: 2\n maxUnavailable: 1\n\nqueryScheduler:\n replicas: 2\n\ndistributor:\n replicas: 3\n maxUnavailable: 2\ncompactor:\n replicas: 1\n\nindexGateway:\n replicas: 2\n maxUnavailable: 1\n\nruler:\n replicas: 1\n maxUnavailable: 1\n\n\n# This exposes the Loki gateway so it can be written to and queried externaly\ngateway:\n service:\n   type: LoadBalancer\n basicAuth: \n     enabled: true\n     existingSecret: loki-basic-auth\n\n# Since we are using basic auth, we need to pass the username and password to the canary\nlokiCanary:\n  extraArgs:\n    - -pass=$(LOKI_PASS)\n    - -user=$(LOKI_USER)\n  extraEnv:\n    - name: LOKI_PASS\n      valueFrom:\n        secretKeyRef:\n          name: canary-basic-auth\n          key: password\n    - name: LOKI_USER\n      valueFrom:\n        secretKeyRef:\n          name: canary-basic-auth\n          key: username\n\n# Enable minio for storage\nminio:\n enabled: false\n\nbackend:\n replicas: 0\nread:\n replicas: 0\nwrite:\n replicas: 0\n\nsingleBinary:\n replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler Storage in YAML\nDESCRIPTION: This YAML configuration sets up the Loki ruler to store rules locally and enables the ruler API. It specifies storage type, directories, alertmanager URL, and ring configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nruler:\n  storage:\n    type: local\n    local:\n      directory: /tmp/rules\n  rule_path: /tmp/scratch\n  alertmanager_url: http://localhost\n  ring:\n    kvstore:\n      store: inmemory\n  enable_api: true\n```\n\n----------------------------------------\n\nTITLE: Unpack Parser - JSON Example\nDESCRIPTION: Example of using unpack parser to extract embedded labels from JSON formatted log line\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"container\": \"myapp\",\n  \"pod\": \"pod-3223f\",\n  \"_entry\": \"original log message\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Options in Loki YAML\nDESCRIPTION: Defines storage configuration options for Loki, including various object storage backends like S3, GCS, Azure, and filesystem storage. It also includes settings for hedging requests and congestion control.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nstorage:\n  [s3: <s3_storage_config>]\n  [gcs: <gcs_storage_config>]\n  [azure: <azure_storage_config>]\n  [alibabacloud: <alibabacloud_storage_config>]\n  [bos: <bos_storage_config>]\n  [swift: <swift_storage_config>]\n  filesystem:\n    [chunks_directory: <string> | default = \"\"]\n    [rules_directory: <string> | default = \"\"]\n  hedging:\n    [at: <duration> | default = 0s]\n    [up_to: <int> | default = 2]\n    [max_per_second: <int> | default = 5]\n  [cos: <cos_storage_config>]\n  congestion_control:\n    [enabled: <boolean> | default = false]\n    controller:\n      [strategy: <string> | default = \"\"]\n      aimd:\n        [start: <int> | default = 2000]\n        [upper_bound: <int> | default = 10000]\n        [backoff_factor: <float> | default = 0.5]\n    retry:\n      [strategy: <string> | default = \"\"]\n      [limit: <int> | default = 2]\n    hedging:\n      config:\n        [at: <duration>]\n        [up_to: <int>]\n        [max_per_second: <int>]\n      [strategy: <string> | default = \"\"]\n  [object_store: <thanos_object_store_config>]\n```\n\n----------------------------------------\n\nTITLE: Drop Labels Expression - Regex Multiple Names Example\nDESCRIPTION: Illustrates dropping multiple labels including regex matching for app labels starting with 'some-api'.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\"app\": \"some-api-service\", \"level\": \"info\", \"method\": \"GET\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n{\"app\": \"other-service\", \"level\": \"info\", \"method\": \"GET\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n```\n\n----------------------------------------\n\nTITLE: Performing Read-Write Transactions in bbolt\nDESCRIPTION: Example of using DB.Update() to start a read-write transaction which provides a consistent view of the database for modifications that are committed or rolled back.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nerr := db.Update(func(tx *bolt.Tx) error {\n\t...\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Single Page Application Handler\nDESCRIPTION: Complete implementation of a handler for serving Single Page Applications with API endpoints.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"log\"\n\t\"net/http\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n\n\t\"github.com/gorilla/mux\"\n)\n\ntype spaHandler struct {\n\tstaticPath string\n\tindexPath  string\n}\n\nfunc (h spaHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\tpath := filepath.Join(h.staticPath, r.URL.Path)\n\n\tfi, err := os.Stat(path)\n\tif os.IsNotExist(err) || fi.IsDir() {\n\t\thttp.ServeFile(w, r, filepath.Join(h.staticPath, h.indexPath))\n\t\treturn\n\t}\n\n\tif err != nil {\n\t\thttp.Error(w, err.Error(), http.StatusInternalServerError)\n        return\n\t}\n\n\thttp.FileServer(http.Dir(h.staticPath)).ServeHTTP(w, r)\n}\n\nfunc main() {\n\trouter := mux.NewRouter()\n\n\trouter.HandleFunc(\"/api/health\", func(w http.ResponseWriter, r *http.Request) {\n\t\tjson.NewEncoder(w).Encode(map[string]bool{\"ok\": true})\n\t})\n\n\tspa := spaHandler{staticPath: \"build\", indexPath: \"index.html\"}\n\trouter.PathPrefix(\"/\").Handler(spa)\n\n\tsrv := &http.Server{\n\t\tHandler: router,\n\t\tAddr:    \"127.0.0.1:8000\",\n\t\tWriteTimeout: 15 * time.Second,\n\t\tReadTimeout:  15 * time.Second,\n\t}\n\n\tlog.Fatal(srv.ListenAndServe())\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki with Helm Chart\nDESCRIPTION: Command to install Loki using the Helm chart with the custom values.yaml file. This creates a namespace if it doesn't exist and deploys all Loki components.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values values.yaml loki grafana/loki -n loki --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Query Range Example Request\nDESCRIPTION: Example cURL command for querying log rates with aggregation by level.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl -G -s  \"http://localhost:3100/loki/api/v1/query_range\" \\\n  --data-urlencode 'query=sum(rate({job=\"varlogs\"}[10m])) by (level)' \\\n  --data-urlencode 'step=300' | jq\n```\n\n----------------------------------------\n\nTITLE: Creating a Gauge Metric for Retry Counts\nDESCRIPTION: Example of using regex and metrics stages to create a gauge metric for tracking retry counts from log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^.* retries=(?P<retries>\\d+) .*$\"\n- metrics:\n    retries_total:\n      type: Gauge\n      description: \"total retries\"\n      source: retries\n      config:\n        action: add\n```\n\n----------------------------------------\n\nTITLE: Configuring File Watching Settings for Promtail in YAML\nDESCRIPTION: Specifies the file_watch_config block, which controls how often Promtail polls log files for changes, including minimum and maximum poll frequencies.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Minimum frequency to poll for files. Any time file changes are detected, the\n# poll frequency gets reset to this duration.\n[min_poll_frequency: <duration> | default = \"250ms\"]\n\n# Maximum frequency to poll for files. Any time no file changes are detected,\n# the poll frequency doubles in value up to the maximum duration specified by\n# this value.\n#\n# The default is set to the same as min_poll_frequency.\n[max_poll_frequency: <duration> | default = \"250ms\"]\n```\n\n----------------------------------------\n\nTITLE: Building Error List with Append\nDESCRIPTION: Demonstrates how to accumulate multiple errors using the multierror.Append function. Shows error handling for multiple operations while maintaining a single error result.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nvar result error\n\nif err := step1(); err != nil {\n\tresult = multierror.Append(result, err)\n}\nif err := step2(); err != nil {\n\tresult = multierror.Append(result, err)\n}\n\nreturn result\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Cloud Infrastructure Storage with API Signing Key in Thanos\nDESCRIPTION: YAML configuration for setting up Oracle Cloud Infrastructure Object Storage in Thanos using the default API signing key authentication method with various connection parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\ntype: OCI\nconfig:\n  provider: \"default\"\n  bucket: \"\"\n  compartment_ocid: \"\"\n  part_size: \"\"                   // Optional part size to override the OCI default of 128 MiB, value is in bytes.\n  max_request_retries: \"\"         // Optional maximum number of retries for a request.\n  request_retry_interval: \"\"      // Optional sleep duration in seconds between retry requests.\n  http_config:\n    idle_conn_timeout: 1m30s      // Optional maximum amount of time an idle (keep-alive) connection will remain idle before closing itself. Zero means no limit.\n    response_header_timeout: 2m   // Optional amount of time to wait for a server's response headers after fully writing the request.\n    tls_handshake_timeout: 10s    // Optional maximum amount of time waiting to wait for a TLS handshake. Zero means no timeout.\n    expect_continue_timeout: 1s   // Optional amount of time to wait for a server's first response headers. Zero means no timeout and causes the body to be sent immediately.\n    insecure_skip_verify: false   // Optional. If true, crypto/tls accepts any certificate presented by the server and any host name in that certificate.\n    max_idle_conns: 100           // Optional maximum number of idle (keep-alive) connections across all hosts. Zero means no limit.\n    max_idle_conns_per_host: 100  // Optional maximum idle (keep-alive) connections to keep per-host. If zero, DefaultMaxIdleConnsPerHost=2 is used.\n    max_conns_per_host: 0         // Optional maximum total number of connections per host.\n    disable_compression: false    // Optional. If true, prevents the Transport from requesting compression.\n    client_timeout: 90s           // Optional time limit for requests made by the HTTP Client.\n```\n\n----------------------------------------\n\nTITLE: Configuring Grafana Alloy for Kubernetes Log Collection\nDESCRIPTION: YAML configuration for deploying Grafana Alloy to collect Kubernetes pod logs and ship them to Loki. It sets up Kubernetes discovery, configures log forwarding, and specifies the Loki endpoint.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nalloy:\n  mounts:\n    varlog: true\n  configMap:\n    content: |\n      logging {\n        level  = \"info\"\n        format = \"logfmt\"\n      }\n\n      discovery.kubernetes \"pods\" {\n        role = \"pod\"\n      }\n\n      loki.source.kubernetes \"pods\" {\n        targets    = discovery.kubernetes.pods.targets\n        forward_to = [loki.write.endpoint.receiver]\n      }\n\n      loki.write \"endpoint\" {\n        endpoint {\n            url = \"http://loki-gateway.default.svc.cluster.local:80/loki/api/v1/push\"\n            tenant_id = \"local\"\n        }\n      }\n```\n\n----------------------------------------\n\nTITLE: Configuring Memcached for Chunk Cache in Loki\nDESCRIPTION: This snippet shows the command-line arguments for configuring a Memcached instance dedicated to chunk caching in Loki. It sets memory limits, maximum item size, and connection limits.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n--memory-limit=4096 --max-item-size=2m --conn-limit=1024\n```\n\n----------------------------------------\n\nTITLE: Instrumenting HTTP Handler with Metrics in Go\nDESCRIPTION: Demonstrates how to wrap an HTTP handler with metrics instrumentation. It creates a new namespace, initializes default HTTP metrics, registers the namespace, and instruments the handler.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-metrics/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nnamespace := metrics.NewNamespace(\"docker_distribution\", \"http\", metrics.Labels{\"handler\": \"your_http_handler_name\"})\nhttpMetrics := namespace.NewDefaultHttpMetrics()\nmetrics.Register(namespace)\ninstrumentedHandler = metrics.InstrumentHandler(httpMetrics, unInstrumentedHandler)\n```\n\n----------------------------------------\n\nTITLE: Querying Loki Series API with cURL (Bash)\nDESCRIPTION: This snippet demonstrates how to query the Loki series API using cURL. It sends a GET request to the /loki/api/v1/series endpoint with URL-encoded parameters for matching log streams.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s \"http://localhost:3100/loki/api/v1/series\" \\\n  --data-urlencode 'match[]={container_name=~\"prometheus.*\", component=\"server\"}' \\\n  --data-urlencode 'match[]={app=\"loki\"}' | jq '.'\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail for Systemd Journal in YAML\nDESCRIPTION: A Promtail configuration for reading from systemd journal. It includes server setup, positions tracking, and client connection. The journal configuration specifies max_age and labels, with relabel_configs to extract the systemd unit as a label.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_52\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /tmp/positions.yaml\n\nclients:\n  - url: http://ip_or_hostname_where_loki_runs:3100/loki/api/v1/push\n\nscrape_configs:\n  - job_name: journal\n    journal:\n      max_age: 12h\n      labels:\n        job: systemd-journal\n    relabel_configs:\n      - source_labels: ['__journal__systemd_unit']\n        target_label: 'unit'\n```\n\n----------------------------------------\n\nTITLE: Label Values Endpoint - HTTP GET\nDESCRIPTION: Endpoint to retrieve known values for a specific label within a given time span.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/label/<name>/values\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Many-to-One and One-to-Many Vector Matching Syntax in LogQL\nDESCRIPTION: Shows the syntax for many-to-one and one-to-many vector matching in LogQL queries. These matchings are used when vector elements on one side can match with multiple elements on the other side.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_12\n\nLANGUAGE: logql\nCODE:\n```\n<vector expr> <bin-op> ignoring(<labels>) group_left(<labels>) <vector expr>\n<vector expr> <bin-op> ignoring(<labels>) group_right(<labels>) <vector expr>\n<vector expr> <bin-op> on(<labels>) group_left(<labels>) <vector expr>\n<vector expr> <bin-op> on(<labels>) group_right(<labels>) <vector expr>\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Monitoring Values\nDESCRIPTION: YAML configuration for the Kubernetes Monitoring Helm chart. Defines cluster name, log destinations, event collection, pod log collection, and collector settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\ncluster:\n  name: meta-monitoring-tutorial\n\ndestinations:\n  - name: loki\n    type: loki\n    url: http://loki-gateway.meta.svc.cluster.local/loki/api/v1/push\n\n\nclusterEvents:\n  enabled: true\n  collector: alloy-logs\n  namespaces:\n    - meta\n    - prod\n\nnodeLogs:\n  enabled: false\n\npodLogs:\n  enabled: true\n  gatherMethod: kubernetesApi\n  collector: alloy-logs\n  labelsToKeep: [\"app_kubernetes_io_name\",\"container\",\"instance\",\"job\",\"level\",\"namespace\",\"service_name\",\"service_namespace\",\"deployment_environment\",\"deployment_environment_name\"]\n  structuredMetadata:\n    pod: pod  # Set structured metadata \"pod\" from label \"pod\"\n  namespaces:\n    - meta\n    - prod\n\n# Collectors\nalloy-singleton:\n  enabled: false\n\nalloy-metrics:\n  enabled: false\n\nalloy-logs:\n  enabled: true\n  # Required when using the Kubernetes API to pod logs\n  alloy:\n    mounts:\n      varlog: false\n    clustering:\n      enabled: true\n\nalloy-profiles:\n  enabled: false\n\nalloy-receiver:\n  enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring GELF UDP Log Scraping in Promtail\nDESCRIPTION: Configuration block for setting up a GELF UDP listener to receive logs using the GELF protocol. Specifies listen address, labeling options, and timestamp handling. Lists available internal labels for relabeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\n# UDP address to listen on. Has the format of \"host:port\". Default to 0.0.0.0:12201\nlisten_address: <string>\n\n# Label map to add to every log message.\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n\n# Whether Promtail should pass on the timestamp from the incoming gelf message.\n# When false, or if no timestamp is present on the gelf message, Promtail will assign the current timestamp to the log when it was processed.\n# Default is false\nuse_incoming_timestamp: <bool>\n```\n\n----------------------------------------\n\nTITLE: Deleting Rules Namespace in Loki API\nDESCRIPTION: DELETE endpoint to remove all rule groups in a namespace, including the namespace itself. Returns 202 on success.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_40\n\nLANGUAGE: bash\nCODE:\n```\nDELETE /loki/api/v1/rules/{namespace}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Loki Output in Fluent Bit\nDESCRIPTION: Basic configuration example for connecting Fluent Bit to Loki hosted on Grafana Cloud, including host configuration, TLS settings, and authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\n    [OUTPUT]\n        Name        loki\n        Match       *\n        Host        YourHostname.company.com\n        port        443\n        tls         on\n        tls.verify  on\n        http_user   XXX\n        http_passwd XXX\n```\n\n----------------------------------------\n\nTITLE: Configuring Desired Rate for Stream Sharding in Loki\nDESCRIPTION: YAML configuration to enable automatic stream sharding with a customized desired_rate setting to adjust the maximum stream size in bytes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/automatic-stream-sharding.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  shard_streams:\n    enabled: true\n    desired_rate: 2097152 #2MiB\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration Table\nDESCRIPTION: Table defining all available configuration parameters for Grafana Loki integration, including their descriptions and default values. Covers connection settings, batch processing, retry logic, labeling options, and buffer configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| Key                  | Description                                                                                                                                                                                                                                                                                                                                                                             | Default                                |\n|----------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------|\n| Url                  | Url of Loki server API endpoint.                                                                                                                                                                                                                                                                                                                                                        | http://localhost:3100/loki/api/v1/push |\n| TenantID             | The tenant ID used by default to push logs to Loki. If omitted or empty it assumes Loki is running in single-tenant mode and no `X-Scope-OrgID` header is sent.                                                                                                                                                                                                                         | \"\"                                     |\n| BatchWait            | Time to wait before send a log batch to Loki, full or not.                                                                                                                                                                                                                                                                                                                              | 1s                                     |\n| BatchSize            | Log batch size to send a log batch to Loki (unit: Bytes).                                                                                                                                                                                                                                                                                                               | 10 KiB (10 * 1024 Bytes)               |\n| Timeout              | Maximum time to wait for Loki server to respond to a request.                                                                                                                                                                                                                                                                                                                           | 10s                                    |\n| MinBackoff           | Initial backoff time between retries.                                                                                                                                                                                                                                                                                                                                                   | 500ms                                  |\n| MaxBackoff           | Maximum backoff time between retries.                                                                                                                                                                                                                                                                                                                                                   | 5m                                     |\n| MaxRetries           | Maximum number of retries when sending batches. Setting it to `0` will retry indefinitely.                                                                                                                                                                                                                                                                                                                                        | 10                                     |\n| Labels               | Labels for API requests.                                                                                                                                                                                                                                                                                                                                                                | {job=\"fluent-bit\"}                     |\n| LogLevel             | LogLevel for plugin logger.                                                                                                                                                                                                                                                                                                                                                             | `info`                                 |\n| RemoveKeys           | Specify removing keys.                                                                                                                                                                                                                                                                                                                                                                  | none                                   |\n| AutoKubernetesLabels | If set to `true`, it will add all Kubernetes labels to Loki labels.                                                                                                                                                                                                                                                                                                                        | false                                  |\n| LabelKeys            | Comma separated list of keys to use as stream labels. All other keys will be placed into the log line. LabelKeys is deactivated when using `LabelMapPath` label mapping configuration.                                                                                                                                                                                                  | none                                   |\n| LineFormat           | Format to use when flattening the record to a log line. Valid values are `json` or `key_value`. If set to `json` the log line sent to Loki will be the fluentd record (excluding any keys extracted out as labels) dumped as json. If set to `key_value`, the log line will be each item in the record concatenated together (separated by a single space) in the format &lt;key&gt;=&lt;value&gt;. | json                                   |\n| DropSingleKey        | If set to true and after extracting label_keys a record only has a single key remaining, the log line sent to Loki will just be the value of the record key.                                                                                                                                                                                                                            | true                                   |\n| LabelMapPath         | Path to a json file defining how to transform nested records.                                                                                                                                                                                                                                                                                                                           | none                                   |\n| Buffer               | Enable buffering mechanism.                                                                                                                                                                                                                                                                                                                                                              | false                                  |\n| BufferType           | Specify the buffering mechanism to use (currently only `dque` is implemented).                                                                                                                                                                                                                                                                                                            | dque                                   |\n| DqueDir              | Path to the directory for queued logs.                                                                                                                                                                                                                                                                                                                                                   | /tmp/flb-storage/loki                  |\n| DqueSegmentSize      | Segment size in terms of number of records per segment.                                                                                                                                                                                                                                                                                                                                  | 500                                    |\n```\n\n----------------------------------------\n\nTITLE: Querying Logs in Grafana Cloud (Bash)\nDESCRIPTION: This snippet demonstrates how to query logs from a hosted log tenant in Grafana Cloud. It uses the User and URL values provided in the Loki logging service details and an access policy token for authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -u \"User:$API_TOKEN\" \\\n  -G -s \"<URL-PROVIDED-IN-LOKI-DATA-SOURCE-SETTINGS>/loki/api/v1/query\" \\\n  --data-urlencode 'query=sum(rate({job=\"varlogs\"}[10m])) by (level)' | jq\n```\n\n----------------------------------------\n\nTITLE: Filtering IP Address Ranges in LogQL\nDESCRIPTION: Examples of filtering log lines based on IP address ranges using LogQL. Shows how to exclude specific IP ranges and match subnet values while excluding specific addresses.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"} != ip(\"192.168.4.5-192.168.4.20\")\n```\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"}\n\t\t| logfmt\n\t\t| addr = ip(\"192.168.4.5/16\")\n\t\t| addr != ip(\"192.168.4.2\")\n```\n\n----------------------------------------\n\nTITLE: Loki Monitoring Rules Configuration\nDESCRIPTION: YAML configuration showing Prometheus recording rules for Loki metrics, including request duration quantiles and rates across different dimensions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nloki-rules:\n - name: loki_rules\n   rules:\n     - record: cluster_job:loki_request_duration_seconds:99quantile\n       expr: histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, job))\n     - record: cluster_job:loki_request_duration_seconds:50quantile\n       expr: histogram_quantile(0.50, sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, job))\n     - record: cluster_job:loki_request_duration_seconds:avg\n       expr: sum(rate(loki_request_duration_seconds_sum[5m])) by (cluster, job) / sum(rate(loki_request_duration_seconds_count[5m])) by (cluster, job)\n     - record: cluster_job:loki_request_duration_seconds_bucket:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, job)\n     - record: cluster_job:loki_request_duration_seconds_sum:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_sum[5m])) by (cluster, job)\n     - record: cluster_job:loki_request_duration_seconds_count:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_count[5m])) by (cluster, job)\n     - record: cluster_job_route:loki_request_duration_seconds:99quantile\n       expr: histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, job, route))\n     - record: cluster_job_route:loki_request_duration_seconds:50quantile\n       expr: histogram_quantile(0.50, sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, job, route))\n     - record: cluster_job_route:loki_request_duration_seconds:avg\n       expr: sum(rate(loki_request_duration_seconds_sum[5m])) by (cluster, job, route) / sum(rate(loki_request_duration_seconds_count[5m])) by (cluster, job, route)\n     - record: cluster_job_route:loki_request_duration_seconds_bucket:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, job, route)\n     - record: cluster_job_route:loki_request_duration_seconds_sum:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_sum[5m])) by (cluster, job, route)\n     - record: cluster_job_route:loki_request_duration_seconds_count:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_count[5m])) by (cluster, job, route)\n     - record: cluster_namespace_job_route:loki_request_duration_seconds:99quantile\n       expr: histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, namespace, job, route))\n     - record: cluster_namespace_job_route:loki_request_duration_seconds:50quantile\n       expr: histogram_quantile(0.50, sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, namespace, job, route))\n     - record: cluster_namespace_job_route:loki_request_duration_seconds:avg\n       expr: sum(rate(loki_request_duration_seconds_sum[5m])) by (cluster, namespace, job, route) / sum(rate(loki_request_duration_seconds_count[5m])) by (cluster, namespace, job, route)\n     - record: cluster_namespace_job_route:loki_request_duration_seconds_bucket:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_bucket[5m])) by (le, cluster, namespace, job, route)\n     - record: cluster_namespace_job_route:loki_request_duration_seconds_sum:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_sum[5m])) by (cluster, namespace, job, route)\n     - record: cluster_namespace_job_route:loki_request_duration_seconds_count:sum_rate\n       expr: sum(rate(loki_request_duration_seconds_count[5m])) by (cluster, namespace, job, route)\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Compactor Settings in YAML\nDESCRIPTION: Defines various configuration options for the Loki compactor, including retention settings, delete request handling, compaction parallelism, and ring configuration. It specifies timeouts, backoff settings, and storage options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\n# CLI flag: -compactor.retention-table-timeout\n[retention_table_timeout: <duration> | default = 0s]\n\nretention_backoff_config:\n  # Minimum delay when backing off.\n  # CLI flag: -compactor.retention-backoff-config.backoff-min-period\n  [min_period: <duration> | default = 100ms]\n\n  # Maximum delay when backing off.\n  # CLI flag: -compactor.retention-backoff-config.backoff-max-period\n  [max_period: <duration> | default = 10s]\n\n  # Number of times to backoff and retry before failing.\n  # CLI flag: -compactor.retention-backoff-config.backoff-retries\n  [max_retries: <int> | default = 10]\n\n# Store used for managing delete requests.\n# CLI flag: -compactor.delete-request-store\n[delete_request_store: <string> | default = \"\"]\n\n# Path prefix for storing delete requests.\n# CLI flag: -compactor.delete-request-store.key-prefix\n[delete_request_store_key_prefix: <string> | default = \"index/\"]\n\n# Type of DB to use for storing delete requests. Supported types: boltdb, sqlite\n# CLI flag: -compactor.delete-request-store.db-type\n[delete_request_store_db_type: <string> | default = \"boltdb\"]\n\n# Type of DB to use as backup for storing delete requests. Backup DB should\n# ideally be used while migrating from one DB type to another. Supported\n# type(s): boltdb\n# CLI flag: -compactor.delete-request-store.backup-db-type\n[backup_delete_request_store_db_type: <string> | default = \"\"]\n\n# The max number of delete requests to run per compaction cycle.\n# CLI flag: -compactor.delete-batch-size\n[delete_batch_size: <int> | default = 70]\n\n# Allow cancellation of delete request until duration after they are created.\n# Data would be deleted only after delete requests have been older than this\n# duration. Ideally this should be set to at least 24h.\n# CLI flag: -compactor.delete-request-cancel-period\n[delete_request_cancel_period: <duration> | default = 24h]\n\n# Constrain the size of any single delete request with line filters. When a\n# delete request > delete_max_interval is input, the request is sharded into\n# smaller requests of no more than delete_max_interval\n# CLI flag: -compactor.delete-max-interval\n[delete_max_interval: <duration> | default = 24h]\n\n# Maximum number of tables to compact in parallel. While increasing this value,\n# please make sure compactor has enough disk space allocated to be able to store\n# and compact as many tables.\n# CLI flag: -compactor.max-compaction-parallelism\n[max_compaction_parallelism: <int> | default = 1]\n\n# Number of upload/remove operations to execute in parallel when finalizing a\n# compaction. NOTE: This setting is per compaction operation, which can be\n# executed in parallel. The upper bound on the number of concurrent uploads is\n# upload_parallelism * max_compaction_parallelism.\n# CLI flag: -compactor.upload-parallelism\n[upload_parallelism: <int> | default = 10]\n\n# The hash ring configuration used by compactors to elect a single instance for\n# running compactions. The CLI flags prefix for this block config is:\n# compactor.ring\ncompactor_ring:\n  kvstore:\n    # Backend storage to use for the ring. Supported values are: consul, etcd,\n    # inmemory, memberlist, multi.\n    # CLI flag: -compactor.ring.store\n    [store: <string> | default = \"consul\"]\n\n    # The prefix for the keys in the store. Should end with a /.\n    # CLI flag: -compactor.ring.prefix\n    [prefix: <string> | default = \"collectors/\"]\n\n    # Configuration for a Consul client. Only applies if the selected kvstore is\n    # consul.\n    # The CLI flags prefix for this block configuration is: compactor.ring\n    [consul: <consul>]\n\n    # Configuration for an ETCD v3 client. Only applies if the selected kvstore\n    # is etcd.\n    # The CLI flags prefix for this block configuration is: compactor.ring\n    [etcd: <etcd>]\n\n    multi:\n      # Primary backend storage used by multi-client.\n      # CLI flag: -compactor.ring.multi.primary\n      [primary: <string> | default = \"\"]\n\n      # Secondary backend storage used by multi-client.\n      # CLI flag: -compactor.ring.multi.secondary\n      [secondary: <string> | default = \"\"]\n\n      # Mirror writes to secondary store.\n      # CLI flag: -compactor.ring.multi.mirror-enabled\n      [mirror_enabled: <boolean> | default = false]\n\n      # Timeout for storing value to secondary store.\n      # CLI flag: -compactor.ring.multi.mirror-timeout\n      [mirror_timeout: <duration> | default = 2s]\n\n  # Period at which to heartbeat to the ring. 0 = disabled.\n  # CLI flag: -compactor.ring.heartbeat-period\n  [heartbeat_period: <duration> | default = 15s]\n\n  # The heartbeat timeout after which compactors are considered unhealthy within\n  # the ring. 0 = never (timeout disabled).\n  # CLI flag: -compactor.ring.heartbeat-timeout\n  [heartbeat_timeout: <duration> | default = 1m]\n\n  # File path where tokens are stored. If empty, tokens are not stored at\n  # shutdown and restored at startup.\n  # CLI flag: -compactor.ring.tokens-file-path\n  [tokens_file_path: <string> | default = \"\"]\n\n  # True to enable zone-awareness and replicate blocks across different\n  # availability zones.\n  # CLI flag: -compactor.ring.zone-awareness-enabled\n  [zone_awareness_enabled: <boolean> | default = false]\n\n  # Instance ID to register in the ring.\n  # CLI flag: -compactor.ring.instance-id\n  [instance_id: <string> | default = \"<hostname>\"]\n\n  # Name of network interface to read address from.\n  # CLI flag: -compactor.ring.instance-interface-names\n  [instance_interface_names: <list of strings> | default = [<private network interfaces>]]\n\n  # Port to advertise in the ring (defaults to server.grpc-listen-port).\n  # CLI flag: -compactor.ring.instance-port\n  [instance_port: <int> | default = 0]\n\n  # IP address to advertise in the ring.\n  # CLI flag: -compactor.ring.instance-addr\n  [instance_addr: <string> | default = \"\"]\n\n  # The availability zone where this instance is running. Required if\n  # zone-awareness is enabled.\n  # CLI flag: -compactor.ring.instance-availability-zone\n  [instance_availability_zone: <string> | default = \"\"]\n\n  # Enable using a IPv6 instance address.\n  # CLI flag: -compactor.ring.instance-enable-ipv6\n  [instance_enable_ipv6: <boolean> | default = false]\n\n# Number of tables that compactor will try to compact. Newer tables are chosen\n# when this is less than the number of tables available.\n# CLI flag: -compactor.tables-to-compact\n[tables_to_compact: <int> | default = 0]\n\n# Do not compact N latest tables. Together with -compactor.run-once and\n# -compactor.tables-to-compact, this is useful when clearing compactor backlogs.\n# CLI flag: -compactor.skip-latest-n-tables\n[skip_latest_n_tables: <int> | default = 0]\n```\n\n----------------------------------------\n\nTITLE: Configuring OTLP Log Ingestion in YAML\nDESCRIPTION: Configuration settings for OpenTelemetry Protocol (OTLP) log ingestion in Loki. Defines how resource attributes, scope attributes, and log attributes are processed and stored as index labels or structured metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_46\n\nLANGUAGE: yaml\nCODE:\n```\notlp_config:\n  # Configuration for resource attributes to store them as index labels or\n  # Structured Metadata or drop them altogether\n  resource_attributes:\n    # Configure whether to ignore the default list of resource attributes set in\n    # 'distributor.otlp.default_resource_attributes_as_index_labels' to be\n    # stored as index labels and only use the given resource attributes config\n    [ignore_defaults: <boolean> | default = false]\n\n    [attributes_config: <list of attributes_configs>]\n\n  # Configuration for scope attributes to store them as Structured Metadata or\n  # drop them altogether\n  [scope_attributes: <list of attributes_configs>]\n\n  # Configuration for log attributes to store them as index labels or Structured\n  # Metadata or drop them altogether\n  [log_attributes: <list of attributes_configs>]\n\n  # When true, the severity_text field from log records will be stored as an\n  # index label. It is recommended not to use this option unless absolutely\n  # necessary\n  [severity_text_as_label: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: JSON Format for Ingesting Logs in Loki (JSON)\nDESCRIPTION: This snippet shows the JSON format used for ingesting logs into Loki when the Content-Type header is set to application/json. It includes the structure for streams, labels, and log values with timestamps.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"streams\": [\n    {\n      \"stream\": {\n        \"label\": \"value\"\n      },\n      \"values\": [\n          [ \"<unix epoch in nanoseconds>\", \"<log line>\" ],\n          [ \"<unix epoch in nanoseconds>\", \"<log line>\" ]\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging in Loki and Promtail\nDESCRIPTION: Commands to enable debug level logging for both Loki and Promtail services\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/troubleshooting.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nloki -log.level=debug\n```\n\nLANGUAGE: bash\nCODE:\n```\npromtail -log.level=debug\n```\n\n----------------------------------------\n\nTITLE: Kubernetes PreStop Lifecycle Hook Configuration\nDESCRIPTION: Example configuration showing how to implement PreStop lifecycle hooks in Kubernetes for graceful ingester shutdown with WAL enabled. This ensures proper data flushing before pod termination.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/wal.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlifecycle:\n  preStop:\n    exec:\n      command: [\"/flush_shutdown\"]\nterminationGracePeriodSeconds: 1800 # 30 minutes\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Event Hubs Log Scraping in Promtail\nDESCRIPTION: Configuration block for receiving logs from Azure Event Hubs. Specifies namespace, event hubs, connection string, consumer group, timestamp handling, and labeling options. Lists available internal labels for relabeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\n# Event Hubs namespace host names (Required). Typically, it looks like <your-namespace>.servicebus.windows.net:9093.\nfully_qualified_namespace: <string> | default = \"\"\n\n# Event Hubs to consume (Required).\nevent_hubs:\n    [ - <string> ... ]\n\n# Event Hubs ConnectionString for authentication on Azure Cloud (Required).\nconnection_string: <string> | default = \"range\"\n\n# The consumer group id.\n[group_id: <string> | default = \"promtail\"]\n\n# If Promtail should pass on the timestamp from the incoming message or not.\n# When false Promtail will assign the current timestamp to the log when it was processed.\n[use_incoming_timestamp: <bool> | default = false]\n\n# If Promtail should ignore messages that don't match the schema for Azure resource logs.\n# Schema is described here https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/resource-logs-schema.\n[disallow_custom_messages: <bool> | default = false]\n\n# Labels optionally hold labels to associate with each log line.\n[labels]:\n  [ <labelname>: <labelvalue> ... ]\n```\n\n----------------------------------------\n\nTITLE: Pattern Parsing Apache Logs in Loki\nDESCRIPTION: Example of parsing unstructured Apache-style access logs using pattern matching. Demonstrates filtering by HTTP status codes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n238.46.18.83 - - [09/Jun/2022:14:13:44 -0700] \"PUT /target/next-generation HTTP/2.0\" 404 19042\n16.97.233.22 - - [09/Jun/2022:14:13:44 -0700] \"DELETE /extensible/functionalities HTTP/1.0\" 200 27913\n```\n\nLANGUAGE: logql\nCODE:\n```\n| pattern \"<_> - <_> <_> \\\"<method> <url> <protocol>\\\" <status> <_> <_> \\\"<_>\\\" <_>\" | status >= 200 and status < 300\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with LogQL in Grafana\nDESCRIPTION: Sample LogQL queries to view and filter logs from the Loki data source in Grafana. These queries demonstrate basic log filtering, JSON parsing, and metric queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"}\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-grafana-1\"}\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"} |= `status`\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"} | json | status=`404`\n```\n\nLANGUAGE: bash\nCODE:\n```\nsum by(container) (rate({container=\"evaluate-loki-flog-1\"} | json | status=`404` [$__auto]))\n```\n\n----------------------------------------\n\nTITLE: Extracting Data from JSON Log Line\nDESCRIPTION: Demonstrates how to extract specific fields from a JSON log line using JMESPath expressions. This example extracts 'output', 'stream', and 'timestamp' from the log.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/json.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      output: log\n      stream: stream\n      timestamp: time\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Chained IP Address Filters in LogQL\nDESCRIPTION: Demonstrates chaining multiple IP address filters in LogQL to match a subnet while excluding a specific IP address.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_5\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"}\n\t\t| logfmt\n\t\t| addr = ip(\"192.168.4.5/16\")\n\t\t| addr != ip(\"192.168.4.2\")\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Counter Metrics for Order Statuses\nDESCRIPTION: Example of creating multiple counter metrics based on different order status values extracted from log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^.* order_status=(?P<order_status>.*?) .*$\"\n- metrics:\n    successful_orders_total:\n      type: Counter\n      description: \"successful orders\"\n      source: order_status\n      config:\n        value: success\n        action: inc\n    failed_orders_total:\n      type: Counter\n      description: \"failed orders\"\n      source: order_status\n      config:\n        value: fail\n        action: inc\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 and Cloud Storage Backends with thanos_object_store_config in YAML\nDESCRIPTION: Comprehensive YAML configuration for connecting to object storage backends including AWS S3, Google Cloud Storage, and Azure Blob Storage using the thanos-io/objstore clients. This configuration supports authentication, connection parameters, encryption settings, and performance tuning options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_80\n\nLANGUAGE: yaml\nCODE:\n```\ns3:\n  # The S3 bucket endpoint. It could be an AWS S3 endpoint listed at\n  # https://docs.aws.amazon.com/general/latest/gr/s3.html or the address of an\n  # S3-compatible service in hostname:port format.\n  # CLI flag: -<prefix>.s3.endpoint\n  [endpoint: <string> | default = \"\"]\n\n  # S3 region. If unset, the client will issue a S3 GetBucketLocation API call\n  # to autodetect it.\n  # CLI flag: -<prefix>.s3.region\n  [region: <string> | default = \"\"]\n\n  # S3 bucket name\n  # CLI flag: -<prefix>.s3.bucket-name\n  [bucket_name: <string> | default = \"\"]\n\n  # S3 secret access key\n  # CLI flag: -<prefix>.s3.secret-access-key\n  [secret_access_key: <string> | default = \"\"]\n\n  # S3 access key ID\n  # CLI flag: -<prefix>.s3.access-key-id\n  [access_key_id: <string> | default = \"\"]\n\n  # S3 session token\n  # CLI flag: -<prefix>.s3.session-token\n  [session_token: <string> | default = \"\"]\n\n  # If enabled, use http:// for the S3 endpoint instead of https://. This could\n  # be useful in local dev/test environments while using an S3-compatible\n  # backend storage, like Minio.\n  # CLI flag: -<prefix>.s3.insecure\n  [insecure: <boolean> | default = false]\n\n  # Use a specific version of the S3 list object API. Supported values are v1 or\n  # v2. Default is unset.\n  # CLI flag: -<prefix>.s3.list-objects-version\n  [list_objects_version: <string> | default = \"\"]\n\n  # Bucket lookup style type, used to access bucket in S3-compatible service.\n  # Default is auto. Supported values are: auto, path, virtual-hosted.\n  # CLI flag: -<prefix>.s3.bucket-lookup-type\n  [bucket_lookup_type: <int> | default = auto]\n\n  # When enabled, direct all AWS S3 requests to the dual-stack IPv4/IPv6\n  # endpoint for the configured region.\n  # CLI flag: -<prefix>.s3.dualstack-enabled\n  [dualstack_enabled: <boolean> | default = true]\n\n  # The S3 storage class to use, not set by default. Details can be found at\n  # https://aws.amazon.com/s3/storage-classes/. Supported values are: STANDARD,\n  # REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING,\n  # DEEP_ARCHIVE, OUTPOSTS, GLACIER_IR, SNOW, EXPRESS_ONEZONE\n  # CLI flag: -<prefix>.s3.storage-class\n  [storage_class: <string> | default = \"\"]\n\n  # If enabled, it will use the default authentication methods of the AWS SDK\n  # for go based on known environment variables and known AWS config files.\n  # CLI flag: -<prefix>.s3.native-aws-auth-enabled\n  [native_aws_auth_enabled: <boolean> | default = false]\n\n  # The minimum file size in bytes used for multipart uploads. If 0, the value\n  # is optimally computed for each object.\n  # CLI flag: -<prefix>.s3.part-size\n  [part_size: <int> | default = 0]\n\n  # If enabled, a Content-MD5 header is sent with S3 Put Object requests.\n  # Consumes more resources to compute the MD5, but may improve compatibility\n  # with object storage services that do not support checksums.\n  # CLI flag: -<prefix>.s3.send-content-md5\n  [send_content_md5: <boolean> | default = false]\n\n  # Accessing S3 resources using temporary, secure credentials provided by AWS\n  # Security Token Service.\n  # CLI flag: -<prefix>.s3.sts-endpoint\n  [sts_endpoint: <string> | default = \"\"]\n\n  # The maximum number of retries for S3 requests that are retryable. Default is\n  # 10, set this to 1 to disable retries.\n  # CLI flag: -<prefix>.s3.max-retries\n  [max_retries: <int> | default = 10]\n\n  sse:\n    # Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.\n    # CLI flag: -<prefix>.s3.sse.type\n    [type: <string> | default = \"\"]\n\n    # KMS Key ID used to encrypt objects in S3\n    # CLI flag: -<prefix>.s3.sse.kms-key-id\n    [kms_key_id: <string> | default = \"\"]\n\n    # KMS Encryption Context used for object encryption. It expects JSON\n    # formatted string.\n    # CLI flag: -<prefix>.s3.sse.kms-encryption-context\n    [kms_encryption_context: <string> | default = \"\"]\n\n  http:\n    # The time an idle connection will remain idle before closing.\n    # CLI flag: -<prefix>.s3.http.idle-conn-timeout\n    [idle_conn_timeout: <duration> | default = 1m30s]\n\n    # The amount of time the client will wait for a servers response headers.\n    # CLI flag: -<prefix>.s3.http.response-header-timeout\n    [response_header_timeout: <duration> | default = 2m]\n\n    # If the client connects via HTTPS and this option is enabled, the client\n    # will accept any certificate and hostname.\n    # CLI flag: -<prefix>.s3.http.insecure-skip-verify\n    [insecure_skip_verify: <boolean> | default = false]\n\n    # Maximum time to wait for a TLS handshake. 0 means no limit.\n    # CLI flag: -<prefix>.s3.tls-handshake-timeout\n    [tls_handshake_timeout: <duration> | default = 10s]\n\n    # The time to wait for a server's first response headers after fully writing\n    # the request headers if the request has an Expect header. 0 to send the\n    # request body immediately.\n    # CLI flag: -<prefix>.s3.expect-continue-timeout\n    [expect_continue_timeout: <duration> | default = 1s]\n\n    # Maximum number of idle (keep-alive) connections across all hosts. 0 means\n    # no limit.\n    # CLI flag: -<prefix>.s3.max-idle-connections\n    [max_idle_connections: <int> | default = 100]\n\n    # Maximum number of idle (keep-alive) connections to keep per-host. If 0, a\n    # built-in default value is used.\n    # CLI flag: -<prefix>.s3.max-idle-connections-per-host\n    [max_idle_connections_per_host: <int> | default = 100]\n\n    # Maximum number of connections per host. 0 means no limit.\n    # CLI flag: -<prefix>.s3.max-connections-per-host\n    [max_connections_per_host: <int> | default = 0]\n\n    # Path to the CA certificates to validate server certificate against. If not\n    # set, the host's root CA certificates are used.\n    # CLI flag: -<prefix>.s3.http.tls-ca-path\n    [tls_ca_path: <string> | default = \"\"]\n\n    # Path to the client certificate, which will be used for authenticating with\n    # the server. Also requires the key path to be configured.\n    # CLI flag: -<prefix>.s3.http.tls-cert-path\n    [tls_cert_path: <string> | default = \"\"]\n\n    # Path to the key for the client certificate. Also requires the client\n    # certificate to be configured.\n    # CLI flag: -<prefix>.s3.http.tls-key-path\n    [tls_key_path: <string> | default = \"\"]\n\n    # Override the expected name on the server certificate.\n    # CLI flag: -<prefix>.s3.http.tls-server-name\n    [tls_server_name: <string> | default = \"\"]\n\n  trace:\n    # When enabled, low-level S3 HTTP operation information is logged at the\n    # debug level.\n    # CLI flag: -<prefix>.s3.trace.enabled\n    [enabled: <boolean> | default = false]\n\ngcs:\n  # GCS bucket name\n  # CLI flag: -<prefix>.gcs.bucket-name\n  [bucket_name: <string> | default = \"\"]\n\n  # JSON either from a Google Developers Console client_credentials.json file,\n  # or a Google Developers service account key. Needs to be valid JSON, not a\n  # filesystem path. If empty, fallback to Google default logic:\n  # 1. A JSON file whose path is specified by the GOOGLE_APPLICATION_CREDENTIALS\n  # environment variable. For workload identity federation, refer to\n  # https://cloud.google.com/iam/docs/how-to#using-workload-identity-federation\n  # on how to generate the JSON configuration file for on-prem/non-Google cloud\n  # platforms.\n  # 2. A JSON file in a location known to the gcloud command-line tool:\n  # $HOME/.config/gcloud/application_default_credentials.json.\n  # 3. On Google Compute Engine it fetches credentials from the metadata server.\n  # CLI flag: -<prefix>.gcs.service-account\n  [service_account: <string> | default = \"\"]\n\n  # The maximum size of the buffer that GCS client for a single PUT request. 0\n  # to disable buffering.\n  # CLI flag: -<prefix>.gcs.chunk-buffer-size\n  [chunk_buffer_size: <int> | default = 0]\n\n  # The maximum number of retries for idempotent operations. Overrides the\n  # default gcs storage client behavior if this value is greater than 0. Set\n  # this to 1 to disable retries.\n  # CLI flag: -<prefix>.gcs.max-retries\n  [max_retries: <int> | default = 10]\n\nazure:\n  # Azure storage account name\n  # CLI flag: -<prefix>.azure.account-name\n  [account_name: <string> | default = \"\"]\n\n  # Azure storage account key. If unset, Azure managed identities will be used\n  # for authentication instead.\n  # CLI flag: -<prefix>.azure.account-key\n  [account_key: <string> | default = \"\"]\n\n  # If `connection-string` is set, the value of `endpoint-suffix` will not be\n  # used. Use this method over `account-key` if you need to authenticate via a\n  # SAS token. Or if you use the Azurite emulator.\n  # CLI flag: -<prefix>.azure.connection-string\n  [connection_string: <string> | default = \"\"]\n\n  # Azure storage container name\n  # CLI flag: -<prefix>.azure.container-name\n  [container_name: <string> | default = \"\"]\n\n  # Azure storage endpoint suffix without schema. The account name will be\n  # prefixed to this value to create the FQDN. If set to empty string, default\n  # endpoint suffix is used.\n  # CLI flag: -<prefix>.azure.endpoint-suffix\n  [endpoint_suffix: <string> | default = \"\"]\n\n  # Number of retries for recoverable errors\n  # CLI flag: -<prefix>.azure.max-retries\n  [max_retries: <int> | default = 20]\n\n  # User assigned managed identity. If empty, then System assigned identity is\n  # used.\n  # CLI flag: -<prefix>.azure.user-assigned-id\n  [user_assigned_id: <string> | default = \"\"]\n\n  # Delimiter used to replace ':' in chunk IDs when storing chunks\n  # CLI flag: -<prefix>.azure.chunk-delimiter\n  [chunk_delimiter: <string> | default = \"-\"]\n\nswift:\n```\n\n----------------------------------------\n\nTITLE: Promtail Configuration File\nDESCRIPTION: YAML configuration for Promtail including EC2 service discovery and log shipping settings\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 3100\n  grpc_listen_port: 0\n\nclients:\n  - url: https://<user id>:<api secret>@logs-prod-us-central1.grafana.net/loki/api/v1/push\n\npositions:\n  filename: /opt/promtail/positions.yaml\n\nscrape_configs:\n  - job_name: ec2-logs\n    ec2_sd_configs:\n      - region: us-east-2\n        access_key: REDACTED\n        secret_key: REDACTED\n    relabel_configs:\n      - source_labels: [__meta_ec2_tag_Name]\n        target_label: name\n        action: replace\n      - source_labels: [__meta_ec2_instance_id]\n        target_label: instance\n        action: replace\n      - source_labels: [__meta_ec2_availability_zone]\n        target_label: zone\n        action: replace\n      - action: replace\n        replacement: /var/log/**.log\n        target_label: __path__\n      - source_labels: [__meta_ec2_private_dns_name]\n        regex: \"(.*)\"\n        target_label: __host__\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Scheduler in Loki\nDESCRIPTION: Configuration block for the Loki query scheduler that separates tenant query queues from the query-frontend. Includes settings for request limits, queue hierarchy, ring configuration, and instance identification.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_57\n\nLANGUAGE: yaml\nCODE:\n```\n# Maximum number of outstanding requests per tenant per query-scheduler.\n# In-flight requests above this limit will fail with HTTP response status code\n# 429.\n# CLI flag: -query-scheduler.max-outstanding-requests-per-tenant\n[max_outstanding_requests_per_tenant: <int> | default = 32000]\n\n# Maximum number of levels of nesting of hierarchical queues. 0 means that\n# hierarchical queues are disabled.\n# CLI flag: -query-scheduler.max-queue-hierarchy-levels\n[max_queue_hierarchy_levels: <int> | default = 3]\n\n# If a querier disconnects without sending notification about graceful shutdown,\n# the query-scheduler will keep the querier in the tenant's shard until the\n# forget delay has passed. This feature is useful to reduce the blast radius\n# when shuffle-sharding is enabled.\n# CLI flag: -query-scheduler.querier-forget-delay\n[querier_forget_delay: <duration> | default = 0s]\n\n# This configures the gRPC client used to report errors back to the\n# query-frontend.\n# The CLI flags prefix for this block configuration is:\n# query-scheduler.grpc-client-config\n[grpc_client_config: <grpc_client>]\n\n# Set to true to have the query schedulers create and place themselves in a\n# ring. If no frontend_address or scheduler_address are present anywhere else in\n# the configuration, Loki will toggle this value to true.\n# CLI flag: -query-scheduler.use-scheduler-ring\n[use_scheduler_ring: <boolean> | default = false]\n\n# The hash ring configuration. This option is required only if\n# use_scheduler_ring is true.\nscheduler_ring:\n  kvstore:\n    # Backend storage to use for the ring. Supported values are: consul, etcd,\n    # inmemory, memberlist, multi.\n    # CLI flag: -query-scheduler.ring.store\n    [store: <string> | default = \"consul\"]\n\n    # The prefix for the keys in the store. Should end with a /.\n    # CLI flag: -query-scheduler.ring.prefix\n    [prefix: <string> | default = \"collectors/\"]\n\n    # Configuration for a Consul client. Only applies if the selected kvstore is\n    # consul.\n    # The CLI flags prefix for this block configuration is: query-scheduler.ring\n    [consul: <consul>]\n\n    # Configuration for an ETCD v3 client. Only applies if the selected kvstore\n    # is etcd.\n    # The CLI flags prefix for this block configuration is: query-scheduler.ring\n    [etcd: <etcd>]\n\n    multi:\n      # Primary backend storage used by multi-client.\n      # CLI flag: -query-scheduler.ring.multi.primary\n      [primary: <string> | default = \"\"]\n\n      # Secondary backend storage used by multi-client.\n      # CLI flag: -query-scheduler.ring.multi.secondary\n      [secondary: <string> | default = \"\"]\n\n      # Mirror writes to secondary store.\n      # CLI flag: -query-scheduler.ring.multi.mirror-enabled\n      [mirror_enabled: <boolean> | default = false]\n\n      # Timeout for storing value to secondary store.\n      # CLI flag: -query-scheduler.ring.multi.mirror-timeout\n      [mirror_timeout: <duration> | default = 2s]\n\n  # Period at which to heartbeat to the ring. 0 = disabled.\n  # CLI flag: -query-scheduler.ring.heartbeat-period\n  [heartbeat_period: <duration> | default = 15s]\n\n  # The heartbeat timeout after which compactors are considered unhealthy within\n  # the ring. 0 = never (timeout disabled).\n  # CLI flag: -query-scheduler.ring.heartbeat-timeout\n  [heartbeat_timeout: <duration> | default = 1m]\n\n  # File path where tokens are stored. If empty, tokens are not stored at\n  # shutdown and restored at startup.\n  # CLI flag: -query-scheduler.ring.tokens-file-path\n  [tokens_file_path: <string> | default = \"\"]\n\n  # True to enable zone-awareness and replicate blocks across different\n  # availability zones.\n  # CLI flag: -query-scheduler.ring.zone-awareness-enabled\n  [zone_awareness_enabled: <boolean> | default = false]\n\n  # Instance ID to register in the ring.\n  # CLI flag: -query-scheduler.ring.instance-id\n  [instance_id: <string> | default = \"<hostname>\"]\n\n  # Name of network interface to read address from.\n  # CLI flag: -query-scheduler.ring.instance-interface-names\n  [instance_interface_names: <list of strings> | default = [<private network interfaces>]]\n\n  # Port to advertise in the ring (defaults to server.grpc-listen-port).\n  # CLI flag: -query-scheduler.ring.instance-port\n  [instance_port: <int> | default = 0]\n\n  # IP address to advertise in the ring.\n  # CLI flag: -query-scheduler.ring.instance-addr\n  [instance_addr: <string> | default = \"\"]\n\n  # The availability zone where this instance is running. Required if\n  # zone-awareness is enabled.\n  # CLI flag: -query-scheduler.ring.instance-availability-zone\n  [instance_availability_zone: <string> | default = \"\"]\n\n  # Enable using a IPv6 instance address.\n  # CLI flag: -query-scheduler.ring.instance-enable-ipv6\n  [instance_enable_ipv6: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Working with Lua Coroutines in Go\nDESCRIPTION: Demonstrates how to create and manage Lua coroutines from Go code. This example creates a new thread, obtains a function from Lua's global environment, and resumes execution while handling the different resume states.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\nco, _ := L.NewThread() /* create a new thread */\nfn := L.GetGlobal(\"coro\").(*lua.LFunction) /* get function from lua */\nfor {\n    st, err, values := L.Resume(co, fn)\n    if st == lua.ResumeError {\n        fmt.Println(\"yield break(error)\")\n        fmt.Println(err.Error())\n        break\n    }\n\n    for i, lv := range values {\n        fmt.Printf(\"%v : %v\\n\", i, lv)\n    }\n\n    if st == lua.ResumeOK {\n        fmt.Println(\"yield break(ok)\")\n        break\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Index Schema Periods in Loki\nDESCRIPTION: The period_config block configures which index schemas should be used for specific time periods, including storage configuration for indexes and chunks, and schema versioning.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_53\n\nLANGUAGE: yaml\nCODE:\n```\n# The date of the first day that index buckets should be created. Use a date in\n# the past if this is your only period_config, otherwise use a date when you\n# want the schema to switch over. In YYYY-MM-DD format, for example: 2018-04-15.\n[from: <daytime>]\n\n# store and object_store below affect which <storage_config> key is used. Which\n# index to use. Either tsdb or boltdb-shipper. Following stores are deprecated:\n# aws, aws-dynamo, gcp, gcp-columnkey, bigtable, bigtable-hashed, cassandra,\n# grpc.\n[store: <string> | default = \"\"]\n\n# Which store to use for the chunks. Either aws (alias s3), azure, gcs,\n# alibabacloud, bos, cos, swift, filesystem, or a named_store (refer to\n# named_stores_config). Following stores are deprecated: aws-dynamo, gcp,\n# gcp-columnkey, bigtable, bigtable-hashed, cassandra, grpc.\n[object_store: <string> | default = \"\"]\n\n# The schema version to use, current recommended schema is v13.\n[schema: <string> | default = \"\"]\n\n# Configures how the index is updated and stored.\nindex:\n  # Path prefix for index tables. Prefix always needs to end with a path\n  # delimiter '/', except when the prefix is empty.\n  [path_prefix: <string> | default = \"index/\"]\n\n  # Table prefix for all period tables.\n  [prefix: <string> | default = \"\"]\n\n  # Table period.\n  [period: <duration>]\n\n  # A map to be added to all managed tables.\n  [tags: <map of string to string>]\n\n# Configured how the chunks are updated and stored.\nchunks:\n  # Table prefix for all period tables.\n  [prefix: <string> | default = \"\"]\n\n  # Table period.\n  [period: <duration>]\n\n  # A map to be added to all managed tables.\n  [tags: <map of string to string>]\n\n# How many shards will be created. Only used if schema is v10 or greater.\n[row_shards: <int> | default = 16]\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail as a Syslog Receiver in YAML\nDESCRIPTION: A Promtail configuration to receive syslog entries over TCP. It establishes server settings, positions file, and Loki client connection. The syslog configuration specifies a listen address and labels, with relabel_configs to extract the hostname.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_53\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /tmp/positions.yaml\n\nclients:\n  - url: http://loki_addr:3100/loki/api/v1/push\n\nscrape_configs:\n  - job_name: syslog\n    syslog:\n      listen_address: 0.0.0.0:1514\n      labels:\n        job: \"syslog\"\n    relabel_configs:\n      - source_labels: ['__syslog_message_hostname']\n        target_label: 'host'\n```\n\n----------------------------------------\n\nTITLE: LogQL Line Filter Expression\nDESCRIPTION: Examples of line filter expressions for filtering log lines based on content matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"mysql\"} |= \"error\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{instance=~\"kafka-[23]\",name=\"kafka\"} != \"kafka.server:type=ReplicaManager\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{name=\"kafka\"} |~ \"tsdb-ops.*io:2003\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{name=\"cassandra\"} |~  `error=\\w+`\n```\n\n----------------------------------------\n\nTITLE: Counting Log Lines with count_over_time in LogQL\nDESCRIPTION: This snippet demonstrates how to count all log lines within the last five minutes for the MySQL job using the count_over_time function.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/metric_queries.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\ncount_over_time({job=\"mysql\"}[5m])\n```\n\n----------------------------------------\n\nTITLE: Configuring JSON Parsing Stage in YAML\nDESCRIPTION: Defines a stage for parsing JSON log lines, using JMESPath expressions to extract data for use in further stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\njson:\n  expressions:\n    [ <string>: <string> ... ]\n  [source: <string>]\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail as a Push API Receiver in YAML\nDESCRIPTION: A Promtail configuration that accepts logs pushed from other Promtail instances or the Docker Logging Driver. It establishes server settings, positions file, client connection, and a separate server instance for the push API with unique ports and labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_54\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /tmp/positions.yaml\n\nclients:\n  - url: http://ip_or_hostname_where_Loki_run:3100/loki/api/v1/push\n\nscrape_configs:\n- job_name: push1\n  loki_push_api:\n    server:\n      http_listen_port: 3500\n      grpc_listen_port: 3600\n    labels:\n      pushserver: push1\n```\n\n----------------------------------------\n\nTITLE: Enabling Loki UI Discoverability in Helm Configuration\nDESCRIPTION: YAML configuration snippet to enable UI discoverability for Loki Helm users by adding the required parameter to the values.yaml file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-ui/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  ui:\n   enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Shard Streams in YAML\nDESCRIPTION: Configuration options for Loki's stream sharding behavior. Includes settings for automatic sharding, time-based sharding, threshold rates, and logging options to manage high-volume log streams.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_45\n\nLANGUAGE: yaml\nCODE:\n```\nshard_streams:\n  # Automatically shard streams to keep them under the per-stream rate limit.\n  # Sharding is dictated by the desired rate.\n  # CLI flag: -shard-streams.enabled\n  [enabled: <boolean> | default = true]\n\n  # Automatically shard streams by adding a __time_shard__ label, with values\n  # calculated from the log timestamps divided by MaxChunkAge/2. This allows the\n  # out-of-order ingestion of very old logs. If both flags are enabled,\n  # time-based sharding will happen before rate-based sharding.\n  # CLI flag: -shard-streams.time-sharding-enabled\n  [time_sharding_enabled: <boolean> | default = false]\n\n  # Logs with timestamps that are newer than this value will not be\n  # time-sharded.\n  # CLI flag: -shard-streams.time-sharding-ignore-recent\n  [time_sharding_ignore_recent: <duration> | default = 40m]\n\n  # Whether to log sharding streams behavior or not. Not recommended for\n  # production environments.\n  # CLI flag: -shard-streams.logging-enabled\n  [logging_enabled: <boolean> | default = false]\n\n  # Threshold used to cut a new shard. Default (1536KB) means if a rate is above\n  # 1536KB/s, it will be sharded into two streams.\n  # CLI flag: -shard-streams.desired-rate\n  [desired_rate: <int> | default = 1536KB]\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with GCS and 28-day Retention\nDESCRIPTION: This YAML configuration example sets up Grafana Loki to use Google Cloud Storage (GCS) with a 28-day retention period. It includes schema configuration, storage settings, retention limits, and compactor settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/retention.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n  - from: 2018-04-15\n    store: tsdb\n    object_store: gcs\n    schema: v13\n    index:\n      prefix: loki_index_\n      period: 24h\n\nstorage_config:\n  tsdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/index_cache\n  gcs:\n    bucket_name: GCS_BUCKET_NAME\n\nlimits_config:\n  max_query_lookback: 672h # 28 days\n  retention_period: 672h   # 28 days\n\ncompactor:\n  working_directory: /data/retention\n  delete_request_store: gcs\n  retention_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ingester Client in YAML\nDESCRIPTION: Configuration block for the ingester client that defines how the distributor connects to ingesters. This includes settings for connection pooling, timeouts, and gRPC client configuration. Only relevant when running all components, the distributor, or the querier.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_41\n\nLANGUAGE: yaml\nCODE:\n```\n# Configures how connections are pooled.\npool_config:\n  # How frequently to clean up clients for ingesters that have gone away.\n  # CLI flag: -distributor.client-cleanup-period\n  [client_cleanup_period: <duration> | default = 15s]\n\n  # Run a health check on each ingester client during periodic cleanup.\n  # CLI flag: -distributor.health-check-ingesters\n  [health_check_ingesters: <boolean> | default = true]\n\n  # How quickly a dead client will be removed after it has been detected to\n  # disappear. Set this to a value to allow time for a secondary health check to\n  # recover the missing client.\n  # CLI flag: -ingester.client.healthcheck-timeout\n  [remote_timeout: <duration> | default = 1s]\n\n# The remote request timeout on the client side.\n# CLI flag: -ingester.client.timeout\n[remote_timeout: <duration> | default = 5s]\n\n# Configures how the gRPC connection to ingesters work as a client.\n# The CLI flags prefix for this block configuration is: ingester.client\n[grpc_client_config: <grpc_client>]\n```\n\n----------------------------------------\n\nTITLE: Filtering Logs by Tenant ID in LogQL Query\nDESCRIPTION: A LogQL query example that filters logs for tenants with IDs starting with 'a'. This uses the special __tenant_id__ label with a regular expression matcher to select specific tenants in a multi-tenant query.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/multi-tenancy.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n{app=\"foo\", __tenant_id__=~\"a.+\"} | logfmt\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Remote Write in YAML\nDESCRIPTION: This YAML snippet shows how to configure Loki's ruler for remote write to a local Prometheus instance. It enables remote write and specifies the client URL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nruler:\n  ... other settings ...\n\n  remote_write:\n    enabled: true\n    client:\n      url: http://localhost:9090/api/v1/write\n```\n\n----------------------------------------\n\nTITLE: Advanced Logrus Configuration\nDESCRIPTION: Demonstrates customizing Logrus with JSON formatting, output redirection, and log levels with field-based structured logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n  \"os\"\n  log \"github.com/sirupsen/logrus\"\n)\n\nfunc init() {\n  log.SetFormatter(&log.JSONFormatter{})\n  log.SetOutput(os.Stdout)\n  log.SetLevel(log.WarnLevel)\n}\n\nfunc main() {\n  log.WithFields(log.Fields{\n    \"animal\": \"walrus\",\n    \"size\":   10,\n  }).Info(\"A group of walrus emerges from the ocean\")\n\n  log.WithFields(log.Fields{\n    \"omg\":    true,\n    \"number\": 122,\n  }).Warn(\"The group's number increased tremendously!\")\n\n  log.WithFields(log.Fields{\n    \"omg\":    true,\n    \"number\": 100,\n  }).Fatal(\"The ice breaks!\")\n\n  contextLogger := log.WithFields(log.Fields{\n    \"common\": \"this is a common field\",\n    \"other\": \"I also should be logged always\",\n  })\n\n  contextLogger.Info(\"I'll be logged with common and other field\")\n  contextLogger.Info(\"Me too\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Filesystem Storage in Loki\nDESCRIPTION: Basic YAML configuration for setting up filesystem-based object storage in Grafana Loki. Specifies the directory path where chunks will be stored.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/filesystem.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  filesystem:\n    directory: /tmp/loki/\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Event Log Scraping in Promtail (YAML)\nDESCRIPTION: This YAML configuration block sets up Promtail to scrape Windows event logs. It includes options for locale settings, event log selection, polling interval, and label management.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\n[locale: <int> | default = 0]\n\n[eventlog_name: <string> | default = \"\"]\n\n[xpath_query: <string> | default = \"*\"]\n\n[bookmark_path: <string> | default = \"\"]\n\n[poll_interval: <duration> | default = 3s]\n\n[exclude_event_data: <bool> | default = false]\n\n[exclude_event_message: <bool> | default = false]\n\n[exclude_user_data: <bool> | default = false]\n\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n\n[use_incoming_timestamp: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Building Promtail on Non-Linux Platforms (Go)\nDESCRIPTION: Command to build Promtail, Loki's log collection agent, on non-Linux platforms using Go.\nSOURCE: https://github.com/grafana/loki/blob/main/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ go build ./clients/cmd/promtail\n```\n\n----------------------------------------\n\nTITLE: Basic Stream Compression with Zstd in Go\nDESCRIPTION: Demonstrates how to compress input from a reader to an output writer using zstd compression with default settings. The function creates a new zstd writer, copies data from input to the encoder, and properly closes the encoder when done.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n// Compress input to output.\nfunc Compress(in io.Reader, out io.Writer) error {\n    enc, err := zstd.NewWriter(out)\n    if err != nil {\n        return err\n    }\n    _, err = io.Copy(enc, in)\n    if err != nil {\n        enc.Close()\n        return err\n    }\n    return enc.Close()\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gauge Metrics in Promtail\nDESCRIPTION: YAML configuration for defining a gauge metric in Promtail, including options for description, source, and action.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntype: Gauge\n[description: <string>]\n[prefix: <string>]\n[source: <string>]\n[max_idle_duration: <string>]\nconfig:\n  [value: <string>]\n  action: <string>\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Policy Stream Mapping in YAML\nDESCRIPTION: Example of policy stream mapping configuration with priorities. This allows mapping specific log streams to different policies based on label selectors and priorities.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_48\n\nLANGUAGE: yaml\nCODE:\n```\npolicy_stream_mapping: \n  finance: \n    - selector: '{namespace=\"prod\", container=\"billing\"}' \n      priority: 2 \n  ops: \n    - selector: '{namespace=\"prod\", container=\"ops\"}' \n      priority: 1 \n  staging: \n    - selector: '{namespace=\"staging\"}' \n      priority: 1\n```\n\n----------------------------------------\n\nTITLE: Docker Log Collection Configuration File\nDESCRIPTION: Fluent Bit configuration file for collecting Docker container logs using the tail input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_2\n\nLANGUAGE: conf\nCODE:\n```\n[INPUT]\n    Name   tail\n    Path   /var/lib/docker/containers/*/*.log\n    Parser docker\n    Tag    docker.*\n\n[OUTPUT]\n    Name   loki\n    Match  *\n    Host   loki\n    Port   3100\n    Labels agent=fluend-bit,env=docker\n```\n\n----------------------------------------\n\nTITLE: Using volume_range Command in Loki CLI\nDESCRIPTION: The volume_range command queries aggregate volumes for series matching specified label selectors, aggregated into time buckets. It works only with Loki instances using the TSDB index format. The command includes various options for time range specification, authentication, and output formatting.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli volume_range [<flags>] <query>\n\nRun a volume query and return timeseries data.\n\nThe \"volume_range\" command will take the provided label selector(s) and return aggregate volumes for series matching those volumes, aggregated\ninto buckets according to the step value. This only works against Loki instances using the TSDB index format.\n\nBy default we look over the last hour of data; use --since to modify or provide specific start and end times with --from and --to\nrespectively.\n\nNotice that when using --from and --to then ensure to use RFC3339Nano time format, but without timezone at the end. The local timezone will be\nadded automatically or if using --timezone flag.\n\nExample:\n\n        logcli volume_range\n           --timezone=UTC\n           --from=\"2021-01-19T10:00:00Z\"\n           --to=\"2021-01-19T20:00:00Z\"\n       --step=1h\n           'my-query'\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n  -q, --quiet                 Suppress query metadata\n      --stats                 Show query statistics\n  -o, --output=default        Specify output mode [default, raw, jsonl]. raw suppresses log labels and timestamp.\n  -z, --timezone=Local        Specify the timezone to use when formatting output timestamps [Local, UTC]\n      --cpuprofile=\"\"         Specify the location for writing a CPU profile.\n      --memprofile=\"\"         Specify the location for writing a memory profile.\n      --stdin                 Take input logs from stdin\n      --addr=\"http://localhost:3100\"\n                              Server address. Can also be set using LOKI_ADDR env var.\n      --username=\"\"           Username for HTTP basic auth. Can also be set using LOKI_USERNAME env var.\n      --password=\"\"           Password for HTTP basic auth. Can also be set using LOKI_PASSWORD env var.\n      --ca-cert=\"\"            Path to the server Certificate Authority. Can also be set using LOKI_CA_CERT_PATH env var.\n      --tls-skip-verify       Server certificate TLS skip verify. Can also be set using LOKI_TLS_SKIP_VERIFY env var.\n      --cert=\"\"               Path to the client certificate. Can also be set using LOKI_CLIENT_CERT_PATH env var.\n      --key=\"\"                Path to the client certificate key. Can also be set using LOKI_CLIENT_KEY_PATH env var.\n      --org-id=\"\"             adds X-Scope-OrgID to API requests for representing tenant ID. Useful for requesting tenant data when bypassing\n                              an auth gateway. Can also be set using LOKI_ORG_ID env var.\n      --query-tags=\"\"         adds X-Query-Tags http header to API requests. This header value will be part of `metrics.go` statistics.\n                              Useful for tracking the query. Can also be set using LOKI_QUERY_TAGS env var.\n      --bearer-token=\"\"       adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN env var.\n      --bearer-token-file=\"\"  adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN_FILE env var.\n      --retries=0             How many times to retry each query when getting an error response from Loki. Can also be set using\n                              LOKI_CLIENT_RETRIES env var.\n      --min-backoff=0         Minimum backoff time between retries. Can also be set using LOKI_CLIENT_MIN_BACKOFF env var.\n      --max-backoff=0         Maximum backoff time between retries. Can also be set using LOKI_CLIENT_MAX_BACKOFF env var.\n      --auth-header=\"Authorization\"\n                              The authorization header used. Can also be set using LOKI_AUTH_HEADER env var.\n      --proxy-url=\"\"          The http or https proxy to use when making requests. Can also be set using LOKI_HTTP_PROXY_URL env var.\n      --compress              Request that Loki compress returned data in transit. Can also be set using LOKI_HTTP_COMPRESSION env var.\n      --since=1h              Lookback window.\n      --from=FROM             Start looking for logs at this absolute time (inclusive)\n      --to=TO                 Stop looking for logs at this absolute time (exclusive)\n      --limit=30              Limit on number of series to return volumes for.\n      --targetLabels=TARGETLABELS ...\n                              List of labels to aggregate results into.\n      --aggregateByLabels     Whether to aggregate results by label name only.\n      --step=1h               Query resolution step width, roll up volumes into buckets cover step time each.\n\nArgs:\n  <query>  eg '{foo=\"bar\",baz=~\".*blip\"}'\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with Multi-Tenancy in Loki (Bash)\nDESCRIPTION: This snippet demonstrates how to query logs from Loki with multi-tenancy enabled. It uses the X-Scope-OrgID header to specify multiple tenants, separated by the pipe character.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H 'X-Scope-OrgID:Tenant1|Tenant2|Tenant3' \\\n  -G -s \"http://localhost:3100/loki/api/v1/query\" \\\n  --data-urlencode 'query=sum(rate({job=\"varlogs\"}[10m])) by (level)' | jq\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic LRU Cache in Go\nDESCRIPTION: This snippet demonstrates how to create and use a basic LRU cache with a fixed size of 128 elements. It adds 256 elements to the cache and verifies that the length remains at 128 due to the LRU eviction policy.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/golang-lru/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/hashicorp/golang-lru/v2\"\n)\n\nfunc main() {\n\tl, _ := lru.New[int, any](128)\n\tfor i := 0; i < 256; i++ {\n\t\tl.Add(i, nil)\n\t}\n\tif l.Len() != 128 {\n\t\tpanic(fmt.Sprintf(\"bad len: %v\", l.Len()))\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Consul Tag Separator in Promtail\nDESCRIPTION: Configuration option for specifying the string separator used to join Consul tags into the tag label. This is part of the Consul service discovery configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_44\n\nLANGUAGE: yaml\nCODE:\n```\n# The string by which Consul tags are joined into the tag label.\n[ tag_separator: <string> | default = , ]\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic File System Watcher in Go\nDESCRIPTION: Example demonstrates how to create and use a basic file system watcher using fsnotify. It shows initialization, event handling, and error management patterns. The watcher monitors a directory for changes and logs events.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fsnotify/fsnotify/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"log\"\n\n    \"github.com/fsnotify/fsnotify\"\n)\n\nfunc main() {\n    // Create new watcher.\n    watcher, err := fsnotify.NewWatcher()\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer watcher.Close()\n\n    // Start listening for events.\n    go func() {\n        for {\n            select {\n            case event, ok := <-watcher.Events:\n                if !ok {\n                    return\n                }\n                log.Println(\"event:\", event)\n                if event.Has(fsnotify.Write) {\n                    log.Println(\"modified file:\", event.Name)\n                }\n            case err, ok := <-watcher.Errors:\n                if !ok {\n                    return\n                }\n                log.Println(\"error:\", err)\n            }\n        }\n    }()\n\n    // Add a path.\n    err = watcher.Add(\"/tmp\")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Block main goroutine forever.\n    <-make(chan struct{})\n}\n```\n\n----------------------------------------\n\nTITLE: Using Vector Function for Default Value in LogQL\nDESCRIPTION: This example demonstrates how to use the vector function to return a default value when a query might otherwise return nothing. It's useful for alerting scenarios.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/metric_queries.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\nsum(count_over_time({namespace=\"traefik\"}[5m])) or vector(0)\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Options in Loki YAML\nDESCRIPTION: This YAML configuration block defines various caching options for Loki, including default validity, background write-back settings, memcached configuration, Redis settings, and embedded cache parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\n# CLI flag: -<prefix>.default-validity\n[default_validity: <duration> | default = 1h]\n\nbackground:\n  # At what concurrency to write back to cache.\n  # CLI flag: -<prefix>.background.write-back-concurrency\n  [writeback_goroutines: <int> | default = 1]\n\n  # How many key batches to buffer for background write-back. Default is large\n  # to prefer size based limiting.\n  # CLI flag: -<prefix>.background.write-back-buffer\n  [writeback_buffer: <int> | default = 500000]\n\n  # Size limit in bytes for background write-back.\n  # CLI flag: -<prefix>.background.write-back-size-limit\n  [writeback_size_limit: <int> | default = 500MB]\n\nmemcached:\n  # How long keys stay in the memcache.\n  # CLI flag: -<prefix>.memcached.expiration\n  [expiration: <duration> | default = 0s]\n\n  # How many keys to fetch in each batch.\n  # CLI flag: -<prefix>.memcached.batchsize\n  [batch_size: <int> | default = 4]\n\n  # Maximum active requests to memcache.\n  # CLI flag: -<prefix>.memcached.parallelism\n  [parallelism: <int> | default = 5]\n\nmemcached_client:\n  # Hostname for memcached service to use. If empty and if addresses is unset,\n  # no memcached will be used.\n  # CLI flag: -<prefix>.memcached.hostname\n  [host: <string> | default = \"\"]\n\n  # SRV service used to discover memcache servers.\n  # CLI flag: -<prefix>.memcached.service\n  [service: <string> | default = \"memcached\"]\n\n  # Comma separated addresses list in DNS Service Discovery format:\n  # https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes\n  # CLI flag: -<prefix>.memcached.addresses\n  [addresses: <string> | default = \"\"]\n\n  # Maximum time to wait before giving up on memcached requests.\n  # CLI flag: -<prefix>.memcached.timeout\n  [timeout: <duration> | default = 100ms]\n\n  # Maximum number of idle connections in pool.\n  # CLI flag: -<prefix>.memcached.max-idle-conns\n  [max_idle_conns: <int> | default = 16]\n\n  # The maximum size of an item stored in memcached. Bigger items are not\n  # stored. If set to 0, no maximum size is enforced.\n  # CLI flag: -<prefix>.memcached.max-item-size\n  [max_item_size: <int> | default = 0]\n\n  # Period with which to poll DNS for memcache servers.\n  # CLI flag: -<prefix>.memcached.update-interval\n  [update_interval: <duration> | default = 1m]\n\n  # Use consistent hashing to distribute to memcache servers.\n  # CLI flag: -<prefix>.memcached.consistent-hash\n  [consistent_hash: <boolean> | default = true]\n\n  # Trip circuit-breaker after this number of consecutive dial failures (if zero\n  # then circuit-breaker is disabled).\n  # CLI flag: -<prefix>.memcached.circuit-breaker-consecutive-failures\n  [circuit_breaker_consecutive_failures: <int> | default = 10]\n\n  # Duration circuit-breaker remains open after tripping (if zero then 60\n  # seconds is used).\n  # CLI flag: -<prefix>.memcached.circuit-breaker-timeout\n  [circuit_breaker_timeout: <duration> | default = 10s]\n\n  # Reset circuit-breaker counts after this long (if zero then never reset).\n  # CLI flag: -<prefix>.memcached.circuit-breaker-interval\n  [circuit_breaker_interval: <duration> | default = 10s]\n\n  # Enable connecting to Memcached with TLS.\n  # CLI flag: -<prefix>.memcached.tls-enabled\n  [tls_enabled: <boolean> | default = false]\n\n  # The TLS configuration.\n  # The CLI flags prefix for this block configuration is:\n  # store.index-cache-write.memcached\n  [<tls_config>]\n\nredis:\n  # Redis Server or Cluster configuration endpoint to use for caching. A\n  # comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If\n  # empty, no redis will be used.\n  # CLI flag: -<prefix>.redis.endpoint\n  [endpoint: <string> | default = \"\"]\n\n  # Redis Sentinel master name. An empty string for Redis Server or Redis\n  # Cluster.\n  # CLI flag: -<prefix>.redis.master-name\n  [master_name: <string> | default = \"\"]\n\n  # Maximum time to wait before giving up on redis requests.\n  # CLI flag: -<prefix>.redis.timeout\n  [timeout: <duration> | default = 500ms]\n\n  # How long keys stay in the redis.\n  # CLI flag: -<prefix>.redis.expiration\n  [expiration: <duration> | default = 0s]\n\n  # Database index.\n  # CLI flag: -<prefix>.redis.db\n  [db: <int> | default = 0]\n\n  # Maximum number of connections in the pool.\n  # CLI flag: -<prefix>.redis.pool-size\n  [pool_size: <int> | default = 0]\n\n  # Username to use when connecting to redis.\n  # CLI flag: -<prefix>.redis.username\n  [username: <string> | default = \"\"]\n\n  # Password to use when connecting to redis.\n  # CLI flag: -<prefix>.redis.password\n  [password: <string> | default = \"\"]\n\n  # Enable connecting to redis with TLS.\n  # CLI flag: -<prefix>.redis.tls-enabled\n  [tls_enabled: <boolean> | default = false]\n\n  # Skip validating server certificate.\n  # CLI flag: -<prefix>.redis.tls-insecure-skip-verify\n  [tls_insecure_skip_verify: <boolean> | default = false]\n\n  # Close connections after remaining idle for this duration. If the value is\n  # zero, then idle connections are not closed.\n  # CLI flag: -<prefix>.redis.idle-timeout\n  [idle_timeout: <duration> | default = 0s]\n\n  # Close connections older than this duration. If the value is zero, then the\n  # pool does not close connections based on age.\n  # CLI flag: -<prefix>.redis.max-connection-age\n  [max_connection_age: <duration> | default = 0s]\n\n  # By default, the Redis client only reads from the master node. Enabling this\n  # option can lower pressure on the master node by randomly routing read-only\n  # commands to the master and any available replicas.\n  # CLI flag: -<prefix>.redis.route-randomly\n  [route_randomly: <boolean> | default = false]\n\nembedded_cache:\n  # Whether embedded cache is enabled.\n  # CLI flag: -<prefix>.embedded-cache.enabled\n  [enabled: <boolean> | default = false]\n\n  # Maximum memory size of the cache in MB.\n  # CLI flag: -<prefix>.embedded-cache.max-size-mb\n  [max_size_mb: <int> | default = 100]\n\n  # Maximum number of entries in the cache.\n  # CLI flag: -<prefix>.embedded-cache.max-size-items\n  [max_size_items: <int> | default = 0]\n\n  # The time to live for items in the cache before they get purged.\n  # CLI flag: -<prefix>.embedded-cache.ttl\n  [ttl: <duration> | default = 1h]\n```\n\n----------------------------------------\n\nTITLE: Ingesting Logs with POST Request to Loki API (Bash)\nDESCRIPTION: This snippet demonstrates how to ingest logs into Loki using a POST request to the /loki/api/v1/push endpoint. It uses JSON encoding to send a stream with a label and a single log line.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Content-Type: application/json\" \\\n  -s -X POST \"http://localhost:3100/loki/api/v1/push\" \\\n  --data-raw '{\"streams\": [{ \"stream\": { \"foo\": \"bar2\" }, \"values\": [ [ \"1570818238000000000\", \"fizzbuzz\" ] ] }]}'\n```\n\n----------------------------------------\n\nTITLE: Bloom Gateway Storage Configuration\nDESCRIPTION: YAML configuration showing how to specify multiple working directories for the Bloom Gateway across different disk mounts.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/bloom-filters.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n-bloom.shipper.working-directory=\"/mnt/data0,/mnt/data1,/mnt/data2,/mnt/data3\"\n```\n\n----------------------------------------\n\nTITLE: Creating Loki Recording Rule with Terraform\nDESCRIPTION: This snippet shows how to create a Loki recording rule using Terraform. It defines a rule to record the sum of in-progress HTTP requests by job.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"loki_rule_group_recording\" \"test\" {\n  name      = \"test1\"\n  namespace = \"namespace1\"\n  rule {\n    expr   = \"sum by (job) (http_inprogress_requests)\"\n    record = \"job:http_inprogress_requests:sum\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring External Labels and Timeout for Loki Client in YAML\nDESCRIPTION: Defines static labels to be added to all logs and sets the maximum timeout for server responses.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nexternal_labels:\n  [ <labelname>: <labelvalue> ... ]\n\n[timeout: <duration> | default = 10s]\n```\n\n----------------------------------------\n\nTITLE: Logstash Configuration Example for Loki Output\nDESCRIPTION: Example Logstash configuration demonstrating input, filter, and Loki output settings, including field manipulation and label creation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: conf\nCODE:\n```\ninput {\n  ...\n}\n\nfilter {\n  mutate {\n    add_field => {\n      \"cluster\" => \"us-central1\"\n      \"job\" => \"logstash\"\n    }\n    replace => { \"type\" => \"stream\"}\n    remove_field => [\"src\"]\n  }\n}\noutput {\n  loki {\n    url => \"http://myloki.domain:3100/loki/api/v1/push\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Log Parsing Stage in YAML\nDESCRIPTION: Defines a stage for parsing Docker container logs, extracting timestamp, stream, and log content automatically.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ndocker: {}\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda Promtail with Terraform for CloudWatch Logs\nDESCRIPTION: Terraform command to deploy Lambda Promtail with CloudWatch log group configuration. Includes variables for image, write address, authentication, log groups, and bucket names.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nterraform apply -var \"lambda_promtail_image=<repo:tag>\" -var \"write_address=https://logs-prod-us-central1.grafana.net/loki/api/v1/push\" -var \"password=<password>\" -var \"username=<user>\" -var 'log_group_names=[\"/aws/lambda/log-group-1\", \"/aws/lambda/log-group-2\"]' -var 'bucket_names=[\"bucket-a\", \"bucket-b\"]' -var 'batch_size=131072'\n```\n\n----------------------------------------\n\nTITLE: Serving Static Files with HttpRouter NotFound Handler in Go\nDESCRIPTION: This snippet demonstrates how to use the Router.NotFound handler to serve static files. This approach allows serving static content from a specified directory for any routes not explicitly defined in the router.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/julienschmidt/httprouter/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// Serve static files from the ./public directory\nrouter.NotFound = http.FileServer(http.Dir(\"public\"))\n```\n\n----------------------------------------\n\nTITLE: Using JSON-Iterator Marshal Method\nDESCRIPTION: Example showing how to replace the standard JSON Marshal method with JSON-Iterator's compatible implementation. The ConfigCompatibleWithStandardLibrary ensures drop-in compatibility.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/json-iterator/go/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport jsoniter \"github.com/json-iterator/go\"\n\nvar json = jsoniter.ConfigCompatibleWithStandardLibrary\njson.Marshal(&data)\n```\n\n----------------------------------------\n\nTITLE: Configuring Stream Retention Rules in YAML\nDESCRIPTION: Example configuration for per-stream retention policies in Loki. Shows how to define retention selectors with Prometheus label matchers, priorities, and custom retention periods for different log streams.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_44\n\nLANGUAGE: yaml\nCODE:\n```\nretention_stream:\n - selector: '{namespace=\"dev\"}'\n priority: 1\n period: 24h\n- selector: '{container=\"nginx\"}'\n priority: 1\n period: 744h\n```\n\n----------------------------------------\n\nTITLE: Configuring Tracing in YAML for Loki\nDESCRIPTION: This snippet demonstrates how to configure tracing in Loki's YAML configuration file. It shows the option to enable or disable tracing using a boolean flag.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_85\n\nLANGUAGE: yaml\nCODE:\n```\n# Set to false to disable tracing.\n# CLI flag: -tracing.enabled\n[enabled: <boolean> | default = true]\n```\n\n----------------------------------------\n\nTITLE: Docker Compose with Loki Pipeline Stages\nDESCRIPTION: YAML configuration showing how to configure pipeline stages for log processing in Docker Compose\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3\"\nservices:\n  grafana:\n    image: grafana/grafana\n    logging:\n      driver: loki\n      options:\n        loki-url: http://host.docker.internal:3100/loki/api/v1/push\n        loki-pipeline-stages: |\n          - regex:\n              expression: '(level|lvl|severity)=(?P<level>\\w+)'\n          - labels:\n              level:\n    ports:\n      - \"3000:3000\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating SwissMap Usage in Go\nDESCRIPTION: This example showcases the basic operations of SwissMap, including initialization, insertion, iteration, retrieval, deletion, and clearing. It demonstrates that SwissMap has an interface similar to Go's built-in map.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dolthub/swiss/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"github.com/dolthub/swiss\"\n\nfunc main() {\n\tm := swiss.NewMap[string, int](42)\n\n\tm.Put(\"foo\", 1)\n\tm.Put(\"bar\", 2)\n\n\tm.Iter(func(k string, v int) (stop bool) {\n\t\tprintln(\"iter\", k, v)\n\t\treturn false // continue\n\t})\n\n\tif x, ok := m.Get(\"foo\"); ok {\n\t\tprintln(x)\n\t}\n\tif m.Has(\"bar\") {\n\t\tx, _ := m.Get(\"bar\")\n\t\tprintln(x)\n\t}\n\n\tm.Put(\"foo\", -1)\n\tm.Delete(\"bar\")\n\n\tif x, ok := m.Get(\"foo\"); ok {\n\t\tprintln(x)\n\t}\n\tif m.Has(\"bar\") {\n\t\tx, _ := m.Get(\"bar\")\n\t\tprintln(x)\n\t}\n\n\tm.Clear()\n\n\t// Output:\n\t// iter foo 1\n\t// iter bar 2\n\t// 1\n\t// 2\n\t// -1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TSDB Index in Loki Schema Config (YAML)\nDESCRIPTION: This YAML configuration adds a new period_config to the schema_config, setting up Loki to use the TSDB index for data ingested from a specified future date. It demonstrates the transition from boltdb-shipper to TSDB index type.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-to-tsdb/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2023-01-01\n      store: boltdb-shipper\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n    - from: 2023-10-20\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Deployment for Loki with Azure Blob Storage in YAML\nDESCRIPTION: This snippet shows the configuration for deploying Loki on Azure using Azure Blob Storage. It includes options for authentication using account name and key, as well as using a service principal.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n  - from: \"2020-12-11\"\n    index:\n      period: 24h\n      prefix: index_\n    object_store: azure\n    schema: v13\n    store: tsdb\nstorage_config:\n  azure:\n    # Your Azure storage account name\n    account_name: <account-name>\n    # For the account-key, see docs: https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal\n    account_key: <account-key>\n    # See https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction#containers\n    container_name: <container-name>\n    use_managed_identity: <true|false>\n    # Providing a user assigned ID will override use_managed_identity\n    user_assigned_id: <user-assigned-identity-id>\n    request_timeout: 0\n    # Configure this if you are using private azure cloud like azure stack hub and will use this endpoint suffix to compose container and blob storage URL. Ex: https://account_name.endpoint_suffix/container_name/blob_name\n    endpoint_suffix: <endpoint-suffix>\n    # If `connection_string` is set, the values of `account_name` and `endpoint_suffix` values will not be used. Use this method over `account_key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.\n    connection_string: <connection-string>\n  tsdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/index_cache\n    cache_ttl: 24h\n  filesystem:\n    directory: /loki/chunks\n```\n\n----------------------------------------\n\nTITLE: Using label_replace() Function in LogQL\nDESCRIPTION: Demonstrates the use of the label_replace() function in LogQL. This function matches a regex against a label and replaces or adds a new label based on the match.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_17\n\nLANGUAGE: logql\nCODE:\n```\nlabel_replace(rate({job=\"api-server\",service=\"a:c\"} |= \"err\" [1m]), \"foo\", \"$1\",\n  \"service\", \"(.*):.*\")\n```\n\n----------------------------------------\n\nTITLE: Using Default Values for Missing JSON Fields in LogQL\nDESCRIPTION: Example of using the default function to handle missing JSON fields in a LogQL query.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_7\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"access_log\"} | json | line_format `{{.http_request_headers_x_forwarded_for | default \"-\"}}`\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Query Frontend ConfigMap in Kubernetes\nDESCRIPTION: This ConfigMap configuration enables query parallelization and caching for Loki's query-frontend component. It sets up embedded caching, query alignment, and splits queries into 15-minute intervals for parallel processing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/query-frontend.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loki-frontend\n  namespace: <namespace>\ndata:\n  config.yaml: |\n    # Disable the requirement that every request to Loki has a\n    # X-Scope-OrgID header. `fake` will be substituted in instead.\n    auth_enabled: false\n\n    # We don't want the usual /api/prom prefix.\n    http_prefix:\n\n    server:\n      http_listen_port: 3100\n\n    query_range:\n      # make queries more cache-able by aligning them with their step intervals\n      align_queries_with_step: true\n      max_retries: 5\n      cache_results: true\n\n      results_cache:\n        cache:\n          # We're going to use the embedded cache\n          embedded_cache:\n            enabled: true\n            max_size_mb: 100\n            ttl: 24h\n\n    limits_config:\n      max_cache_freshness_per_query: '10m'\n      # parallelize queries in 15min intervals\n      split_queries_by_interval: 15m\n\n    frontend:\n      log_queries_longer_than: 5s\n      downstream_url: http://querier.<namespace>.svc.cluster.local:3100\n      compress_responses: true\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Stack with Docker Compose\nDESCRIPTION: Starts the Loki demo environment by running the Docker Compose configuration in detached mode, which deploys all the necessary containers for the stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Creating AlibabaCloud OSS Secret for Loki in Kubernetes\nDESCRIPTION: Creates a Kubernetes secret containing AlibabaCloud OSS access credentials for Loki. The secret includes the bucket name, endpoint URL, access key ID, and secret access key required to authenticate with AlibabaCloud OSS.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_17\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-alibabacloud \\\n  --from-literal=bucket=\"<BUCKET_NAME>\" \\\n  --from-literal=endpoint=\"<OSS_BUCKET_ENDPOINT>\" \\\n  --from-literal=access_key_id=\"<OSS_ACCESS_KEY_ID>\" \\\n  --from-literal=secret_access_key=\"<OSS_ACCESS_KEY_SECRET>\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Timestamp Stage with RFC3339Nano Format\nDESCRIPTION: Example configuration for the timestamp stage using the RFC3339Nano format. This stage looks for a 'time' field in the extracted map and parses it as an RFC3339Nano timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/timestamp.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- timestamp:\n    source: time\n    format: RFC3339Nano\n```\n\n----------------------------------------\n\nTITLE: Checking Installed Docker Plugins\nDESCRIPTION: Command to list installed Docker plugins and verify their status.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker plugin ls\n```\n\n----------------------------------------\n\nTITLE: Implementing Logging and Compression Middleware in Go\nDESCRIPTION: This example demonstrates how to use handlers.LoggingHandler for logging admin dashboard requests and handlers.CompressHandler for compressing all responses in a Go HTTP server.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/handlers/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"net/http\"\n    \"github.com/gorilla/handlers\"\n)\n\nfunc main() {\n    r := http.NewServeMux()\n\n    // Only log requests to our admin dashboard to stdout\n    r.Handle(\"/admin\", handlers.LoggingHandler(os.Stdout, http.HandlerFunc(ShowAdminDashboard)))\n    r.HandleFunc(\"/\", ShowIndex)\n\n    // Wrap our server with our gzip handler to gzip compress all responses.\n    http.ListenAndServe(\":8000\", handlers.CompressHandler(r))\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Log Collection Command with Fluent Bit\nDESCRIPTION: Docker run command to collect container logs using Fluent Bit's tail input plugin and forward them to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v /var/lib/docker/containers:/var/lib/docker/containers fluent/fluent-bit:latest /fluent-bit/bin/fluent-bit -i tail -p Path=\"/var/lib/docker/containers/*/*.log\" -p Parser=docker -p Tag=\"docker.*\"  -o loki -p host=loki -p port=3100 -p labels=\"agent=fluend-bit,env=docker\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Counter Metric for Successful Orders\nDESCRIPTION: Example of using regex and metrics stages to count occurrences of 'order successful' in log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^.*(?P<order_success>order successful).*$\"\n- metrics:\n    successful_orders_total:\n      type: Counter\n      description: \"log lines with the message `order successful`\"\n      source: order_success\n      config:\n        action: inc\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda Promtail with Terraform for Kinesis Streams\nDESCRIPTION: Terraform command to deploy Lambda Promtail with Kinesis data stream configuration. Includes variables for image, write address, authentication, stream names, and additional labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nterraform apply -var \"<ecr-repo>:<tag>\" -var \"write_address=https://your-loki-url/loki/api/v1/push\" -var \"password=<basic-auth-pw>\" -var \"username=<basic-auth-username>\" -var 'kinesis_stream_name=[\"kinesis-stream-01\", \"kinesis-stream-02\"]' -var 'extra_labels=\"name1,value1,name2,value2\"' -var \"tenant_id=<value>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Scrape Configs for Promtail in YAML\nDESCRIPTION: Defines scrape configurations for Promtail, including job name, pipeline stages, and various discovery methods for log targets.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  job_name: <string>\n  [pipeline_stages: <pipeline_stages>]\n  decompression:\n    [enabled: <boolean> | default = false]\n    [initial_delay: <duration> | default = 0s]\n    [format: <string> | default = \"\"]\n  [journal: <journal_config>]\n  [encoding: <iana_encoding_name>]\n  [syslog: <syslog_config>]\n  [loki_push_api: <loki_push_api_config>]\n  [windows_events: <windows_events_config>]\n  [gcplog: <gcplog_config>]\n  [azure_event_hub: <azure_event_hub_config>]\n  [kafka: <kafka_config>]\n  [gelf: <gelf_config>]\n  [cloudflare: <cloudflare>]\n  [heroku_drain: <heroku_drain>]\n  relabel_configs:\n    - [<relabel_config>]\n  static_configs:\n    - [<static_config>]\n  file_sd_configs:\n    - [<file_sd_configs>]\n  kubernetes_sd_configs:\n    - [<kubernetes_sd_config>]\n  consul_sd_configs:\n    [ - <consul_sd_config> ... ]\n  consulagent_sd_configs:\n    [ - <consulagent_sd_config> ... ]\n  docker_sd_configs:\n    [ - <docker_sd_config> ... ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Logstash Loki Output Plugin\nDESCRIPTION: Example configuration for the Loki output plugin in Logstash, showing all available options and their default values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: conf\nCODE:\n```\noutput {\n  loki {\n    [url => \"\" | default = none | required=true]\n\n    [tenant_id => string | default = nil | required=false]\n\n    [message_field => string | default = \"message\" | required=false]\n\n    [include_fields => array | default = [] | required=false]\n\n    [metadata_fields => array | default = [] | required=false]\n\n    [batch_wait => number | default = 1(s) | required=false]\n\n    [batch_size => number | default = 102400(bytes) | required=false]\n\n    [min_delay => number | default = 1(s) | required=false]\n\n    [max_delay => number | default = 300(s) | required=false]\n\n    [retries => number | default = 10 | required=false]\n\n    [username => string | default = nil | required=false]\n\n    [password => secret | default = nil | required=false]\n\n    [cert => path | default = nil | required=false]\n\n    [key => path | default = nil| required=false]\n\n    [ca_cert => path | default = nil | required=false]\n\n    [insecure_skip_verify => boolean | default = false | required=false]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiline Stage for Custom Log Format\nDESCRIPTION: Shows how to configure the multiline stage for a custom log format from an Akka HTTP service. It uses a zero-width space character to simplify the identification of new log blocks.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/multiline.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmultiline:\n  # Identify zero-width space as first line of a multiline block.\n  # Note the string should be in single quotes.\n  firstline: '^\\x{200B}\\['\n\n  max_wait_time: 3s\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Storage Client for Grafana Loki using YAML\nDESCRIPTION: This snippet shows the configuration for an Amazon S3 storage client in Grafana Loki using Thanos-based object storage. It includes settings for bucket name, endpoint, region, and access credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/thanos-storage-configs.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    s3:\n      bucket_name: my-s3-bucket\n      endpoint: s3.us-west-2.amazonaws.com\n      region: us-west-2\n      # You can either declare the access key and secret in the config or\n      # use environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY which will be picked up by the AWS SDK.\n      access_key_id: access-key-id\n      secret_access_key: secret-access-key\n```\n\n----------------------------------------\n\nTITLE: Implementing SCRAM Authentication Client in Go\nDESCRIPTION: Demonstrates how to use the scram package to create an authentication client and manage a conversation flow. The example shows initializing a SHA1 client with credentials, stepping through the authentication flow, and validating server responses.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xdg-go/scram/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"github.com/xdg-go/scram\"\n\nfunc main() {\n    // Get Client with username, password and (optional) authorization ID.\n    clientSHA1, err := scram.SHA1.NewClient(\"mulder\", \"trustno1\", \"\")\n    if err != nil {\n        panic(err)\n    }\n\n    // Prepare the authentication conversation. Use the empty string as the\n    // initial server message argument to start the conversation.\n    conv := clientSHA1.NewConversation()\n    var serverMsg string\n\n    // Get the first message, send it and read the response.\n    firstMsg, err := conv.Step(serverMsg)\n    if err != nil {\n        panic(err)\n    }\n    serverMsg = sendClientMsg(firstMsg)\n\n    // Get the second message, send it, and read the response.\n    secondMsg, err := conv.Step(serverMsg)\n    if err != nil {\n        panic(err)\n    }\n    serverMsg = sendClientMsg(secondMsg)\n\n    // Validate the server's final message.  We have no further message to\n    // send so ignore that return value.\n    _, err = conv.Step(serverMsg)\n    if err != nil {\n        panic(err)\n    }\n\n    return\n}\n```\n\n----------------------------------------\n\nTITLE: Keep Labels Expression - Method Filter Example\nDESCRIPTION: Shows keeping only specific labels (level and method='GET') while dropping all others from JSON log data.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\"level\": \"info\", \"method\": \"GET\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n{\"level\": \"info\", \"method\": \"POST\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Named Stores for Storage Providers in Loki\nDESCRIPTION: Configuration for additional object stores with different storage providers in Loki. Supports AWS, Azure, BOS, filesystem, GCS, Swift and other providers. Named stores can be referenced in period_config.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_51\n\nLANGUAGE: yaml\nCODE:\n```\n    storage_config:\n      named_stores:\n        aws:\n          store-1:\n            endpoint: s3://foo-bucket\n            region: us-west1\n```\n\n----------------------------------------\n\nTITLE: Configuring Fluent Bit for Kubernetes with Helm\nDESCRIPTION: This YAML configuration sets up Fluent Bit as a daemonset in Kubernetes using a Helm chart. It configures the input to collect container logs and the output to send them to a Loki instance.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nimage:\n  repository: grafana/fluent-bit-plugin-loki\n  tag: main-e2ed1c0\n\nargs:\n  - \"-e\"\n  - \"/fluent-bit/bin/out_grafana_loki.so\"\n  - --workdir=/fluent-bit/etc\n  - --config=/fluent-bit/etc/conf/fluent-bit.conf\n\nenv:\n  - name: FLUENT_LOKI_URL\n    value: https://user:pass@your-loki.endpoint/loki/api/v1/push\n\nconfig:\n  inputs: |\n    [INPUT]\n        Name tail\n        Tag kube.*\n        Path /var/log/containers/*.log\n        multiline.parser docker, cri\n        Mem_Buf_Limit 5MB\n        Skip_Long_Lines On\n\n  outputs: |\n    [Output]\n        Name grafana-loki\n        Match kube.*\n        Url ${FLUENT_LOKI_URL}\n        Labels {job=\"fluent-bit\"}\n        LabelKeys level,app\n        BatchWait 1\n        BatchSize 1001024\n        LineFormat json\n        LogLevel info\n        AutoKubernetesLabels true\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackStatus Struct in Go\nDESCRIPTION: Defines the LokiStackStatus struct representing the observed state of LokiStack. It includes fields for component status, storage status, and conditions.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackStatus struct {\n  Components LokiStackComponentStatus\n  Storage LokiStackStorageStatus\n  Conditions []metav1.Condition\n}\n```\n\n----------------------------------------\n\nTITLE: Encoding a Buffer with S2 Compression in Go\nDESCRIPTION: This function shows how to compress a single buffer of data using S2 stream encoding. It uses the EncodeBuffer method which is slightly more efficient for single blocks of data as it takes ownership of the buffer until the stream is closed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nfunc EncodeStream(src []byte, dst io.Writer) error {\n    enc := s2.NewWriter(dst)\n    // The encoder owns the buffer until Flush or Close is called.\n    err := enc.EncodeBuffer(src)\n    if err != nil {\n        enc.Close()\n        return err\n    }\n    // Blocks until compression is done.\n    return enc.Close()\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Objects from Google Cloud Storage Bucket in Go\nDESCRIPTION: Demonstrates how to read an object from a Cloud Storage bucket. This snippet shows the process of creating a reader for the object, reading all content, and properly handling the connection closure.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/storage/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Read the object1 from bucket.\nrc, err := client.Bucket(\"bucket\").Object(\"object1\").NewReader(ctx)\nif err != nil {\n\tlog.Fatal(err)\n}\ndefer rc.Close()\nbody, err := io.ReadAll(rc)\nif err != nil {\n\tlog.Fatal(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading Loki Schema Configuration in YAML\nDESCRIPTION: This snippet demonstrates how to upgrade the Loki schema by creating a new period_config entry in the schema_config. It shows an example of upgrading from schema v11 to v13.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2019-07-14\n      store: tsdb\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n    - from: 2023-07-20\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Using Helm\nDESCRIPTION: Bash command to deploy Loki using the Helm chart with a custom values.yaml configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm install loki grafana/loki -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Producing Kafka Records with Tracing in HTTP Handler\nDESCRIPTION: Example of an HTTP handler that creates a span and produces a Kafka record with tracing. It shows how to pass the parent context to maintain trace lineage and how to handle errors within the span.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/twmb/franz-go/plugin/kotel/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc httpHandler(w http.ResponseWriter, r *http.Request) {\n\t// Start a new span with options.\n\topts := []trace.SpanStartOption{\n\t\ttrace.WithSpanKind(trace.SpanKindServer),\n\t\ttrace.WithAttributes([]attribute.KeyValue{attribute.String(\"some-key\", \"foo\")}...),\n\t}\n\tctx, span := tracer.Start(r.Context(), \"request\", opts...)\n\t// End the span when function exits.\n\tdefer span.End()\n\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\trecord := &kgo.Record{Topic: \"topic\", Value: []byte(\"foo\")}\n\t// Pass in the context from the tracer.Start() call to ensure that the span\n\t// created is linked to the parent span.\n\tcl.Produce(ctx, record, func(_ *kgo.Record, err error) {\n\t\tdefer wg.Done()\n\t\tif err != nil {\n\t\t\tfmt.Printf(\"record had a produce error: %v\\n\", err)\n\t\t\tspan.SetStatus(codes.Error, err.Error())\n\t\t\tspan.RecordError(err)\n\t\t}\n\t})\n\twg.Wait()\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Pipeline Errors in LogQL\nDESCRIPTION: Shows how to handle pipeline processing errors in LogQL queries. Errors are labeled with '__error__' and can be filtered out using label filter expressions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_16\n\nLANGUAGE: logql\nCODE:\n```\n  {cluster=\"ops-tools1\",container=\"ingress-nginx\"}\n    | json\n    | __error__ != \"JSONParserErr\"\n```\n\nLANGUAGE: logql\nCODE:\n```\nquantile_over_time(\n\t0.99,\n\t{container=\"ingress-nginx\",service=\"hosted-grafana\"}\n\t| json\n\t| unwrap response_latency_seconds\n\t| __error__=\"\"[1m]\n\t) by (cluster)\n```\n\n----------------------------------------\n\nTITLE: Configuring Compactor for Log Retention in Grafana Loki\nDESCRIPTION: This YAML configuration activates retention in the Compactor, setting up working directory, compaction interval, retention settings, and storage configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/retention.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncompactor:\n  working_directory: /data/retention\n  compaction_interval: 10m\n  retention_enabled: true\n  retention_delete_delay: 2h\n  retention_delete_worker_count: 150\n  delete_request_store: gcs\nschema_config:\n    configs:\n      - from: \"2020-07-31\"\n        index:\n            period: 24h\n            prefix: index_\n        object_store: gcs\n        schema: v13\n        store: tsdb\nstorage_config:\n    tsdb_shipper:\n        active_index_directory: /data/index\n        cache_location: /data/index_cache\n    gcs:\n        bucket_name: loki\n```\n\n----------------------------------------\n\nTITLE: Hashing Example for Bloom Filter in Loki\nDESCRIPTION: Demonstrates how structured metadata is hashed and appended to the stream bloom filter. It shows the process for a single key-value pair and chunk identifier.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/bloom-filters.md#2025-04-19_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nhash(\"foo\"), hash(\"foo=bar\"), hash(\"c6dj8g\" + \"foo\") and hash(\"c6dj8g\" + \"foo=bar\")\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Log Push in Promtail (YAML)\nDESCRIPTION: This snippet shows how to configure Promtail to receive logs pushed from Google Cloud Platform. It sets up an HTTP server, defines labels, and includes relabeling configurations for GCP-specific attributes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  - job_name: gcplog\n    gcplog:\n      subscription_type: \"push\"\n      use_incoming_timestamp: false\n      labels:\n        job: \"gcplog-push\"\n      server:\n        http_listen_address: 0.0.0.0\n        http_listen_port: 8080\n    relabel_configs:\n      - source_labels: ['__gcp_message_id']\n        target_label: 'message_id'\n      - source_labels: ['__gcp_attributes_logging_googleapis_com_timestamp']\n        target_label: 'incoming_ts'\n```\n\n----------------------------------------\n\nTITLE: Drop Stage Schema Definition in YAML\nDESCRIPTION: Defines the complete schema for configuring a drop stage in Promtail's pipeline, including all available options like source, separator, expression, value, older_than, and longer_than.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndrop:\n  [source: [<string>] | <string>]\n  [separator: <string> | default = \";\"]\n  [expression: <string>]\n  [value: <string>]\n  [older_than: <duration>]\n  [longer_than: <string>|<int>]\n  [drop_counter_reason: <string> | default = \"drop_stage\"]\n```\n\n----------------------------------------\n\nTITLE: Basic Label Querying with logcli\nDESCRIPTION: Example of querying all values for a specific label using logcli, demonstrating the basic query syntax and output format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nlogcli labels job\n```\n\n----------------------------------------\n\nTITLE: Disabling MinIO Dependency in YAML\nDESCRIPTION: Configuration to disable the bundled MinIO dependency if managing it separately.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-from-2x/index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nminio:\n  enabled: false\n```\n\n----------------------------------------\n\nTITLE: Using GenericWriter for Custom Parquet File Creation\nDESCRIPTION: Example demonstrating how to use parquet.GenericWriter to create Parquet files with more control over the writing process. This approach allows for writing data in chunks and configuring how rows are converted to columns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct { FirstName, LastName string }\n\nwriter := parquet.NewGenericWriter[RowType](output)\n\n_, err := writer.Write([]RowType{\n    ...\n})\nif err != nil {\n    ...\n}\n\n// Closing the writer is necessary to flush buffers and write the file footer.\nif err := writer.Close(); err != nil {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterLogForwarder for LokiStack\nDESCRIPTION: YAML configuration for creating a ClusterLogForwarder to forward logs to LokiStack, specifying the Loki Distributor URL and using the CA certificate secret.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_without_gateway.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: logging.openshift.io/v1\nkind: ClusterLogForwarder\nmetadata:\n  name: instance\n  namespace: openshift-logging\nspec:\n  outputs:\n   - name: loki-operator\n     type: loki\n     url: https://lokistack-dev-distributor-http.openshift-logging.svc:3100\n     secret:\n       name: loki-distributor-ca\n     loki:\n       tenantKey: log_type\n  pipelines:\n   - name: send-logs\n     inputRefs:\n     - application\n     - audit\n     - infrastructure\n     outputRefs:\n     - loki-operator\n```\n\n----------------------------------------\n\nTITLE: Configuring Logstash Output to Loki\nDESCRIPTION: Complete Logstash configuration example showing input from Beats, Kubernetes log processing, and output to Loki. Includes settings for authentication, batch processing, retry logic, and field mapping.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: conf\nCODE:\n```\ninput {\n  beats {\n    port => 5044\n  }\n}\n\nfilter {\n  if [kubernetes] {\n    mutate {\n      add_field => {\n        \"container_name\" => \"%{[kubernetes][container][name]}\"\n        \"namespace\" => \"%{[kubernetes][namespace]}\"\n        \"pod\" => \"%{[kubernetes][pod][name]}\"\n      }\n      replace => { \"host\" => \"%{[kubernetes][node][name]}\"}\n    }\n  }\n  mutate {\n    remove_field => [\"tags\"]  # Note: with include_fields defined below this wouldn't be necessary\n  }\n}\n\noutput {\n  loki {\n    url => \"https://logs-prod-us-central1.grafana.net/loki/api/v1/push\"\n    username => \"3241\"\n    password => \"REDACTED\"\n    batch_size => 112640 #112.64 kilobytes\n    retries => 5\n    min_delay => 3\n    max_delay => 500\n    message_field => \"message\"\n    include_fields => [\"container_name\",\"namespace\",\"pod\",\"host\"]\n    metadata_fields => [\"pod\"]\n  }\n  # stdout { codec => rubydebug }\n}\n```\n\n----------------------------------------\n\nTITLE: Loki Base Query Command Usage\nDESCRIPTION: Shows the basic command usage pattern and flags for querying logs in Loki, including options for label handling, output formatting, and log scanning direction.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n--forward                 Scan forwards through logs.\n--no-labels               Do not print any labels\n--exclude-label=EXCLUDE-LABEL ...\n                         Exclude labels given the provided key during output.\n--include-label=INCLUDE-LABEL ...\n                         Include labels given the provided key during output.\n--labels-length=0         Set a fixed padding to labels\n--store-config=\"\"         Execute the current query using a configured storage from a given Loki configuration file.\n--remote-schema           Execute the current query using a remote schema retrieved from the configured -schema-store.\n--schema-store=\"\"         Store used for retrieving remote schema.\n--colored-output          Show output with colored labels\n-t, --tail                    Tail the logs\n-f, --follow                  Alias for --tail\n    --delay-for=0             Delay in tailing by number of seconds to accumulate logs for re-ordering\n```\n\n----------------------------------------\n\nTITLE: Validating Promtail Configuration File with Bash\nDESCRIPTION: Shows how to use Promtail to validate and check the syntax of a configuration file. This command checks the config file for errors without starting Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npromtail -config.file=myConfigFile.yaml -check-syntax\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler for Sharding\nDESCRIPTION: This YAML snippet shows the configuration for a sharding-enabled Loki Ruler. It includes settings for Alertmanager, API enablement, sharding, and rule storage using GCS.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nruler:\n  alertmanager_url: <alertmanager_endpoint>\n  enable_alertmanager_v2: true # true by default since Loki 3.2.0\n  enable_api: true\n  enable_sharding: true\n  ring:\n    kvstore:\n      consul:\n        host: consul.loki-dev.svc.cluster.local:8500\n      store: consul\n  rule_path: /tmp/rules\n  storage:\n    gcs:\n      bucket_name: <loki-rules-bucket>\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Mutating Webhook for Pod Binding\nDESCRIPTION: Defines a MutatingWebhookConfiguration to intercept pod binding requests for Loki pods and modify their annotations with topology information.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n name: mutating-pod-webhook-configuration\nwebhooks:\n - clientConfig:\n     service:\n       name: webhook-service\n       namespace: system\n       path: /pod-binding-loki-grafana-com-v1\n   name: podbinding.loki.grafana.com\n   objectSelector:\n     matchLabels:    \n       \"app.kubernetes.io/instance\": \"lokistack-dev\"\n   rules:\n     - apiGroups:\n         - \"\"\n       apiVersions:\n         - v1\n       resources:\n         - bindings\n         - pods/binding\n       operations:\n         - CREATE\n```\n\n----------------------------------------\n\nTITLE: Configuring Meta-Monitoring Stack in YAML\nDESCRIPTION: YAML configuration for the meta-monitoring stack, enabling local components and specifying namespaces to monitor.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnamespacesToMonitor:\n- default\n\ncloud:\n  logs:\n    enabled: false\n  metrics:\n    enabled: false\n  traces:\n    enabled: false\n\nlocal:\n  grafana:\n    enabled: true\n  logs:\n    enabled: true\n  metrics:\n    enabled: true\n  traces:\n    enabled: true\n  minio:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage and Schema in Loki YAML\nDESCRIPTION: This snippet shows the configuration options for storage, chunk store, and schema in Loki. It includes placeholders for detailed configurations of these components, which are crucial for data storage and retrieval in Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n[storage_config: <storage_config>]\n\n[chunk_store_config: <chunk_store_config>]\n\n[schema_config: <schema_config>]\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Range in Loki\nDESCRIPTION: Configuration for query splitting and caching in the Loki query-frontend, including result caching, query parallelization, and retry settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_56\n\nLANGUAGE: yaml\nCODE:\n```\n# Mutate incoming queries to align their start and end with their step.\n# CLI flag: -querier.align-querier-with-step\n[align_queries_with_step: <boolean> | default = false]\n\nresults_cache:\n  # The cache_config block configures the cache backend for a specific Loki\n  # component.\n  # The CLI flags prefix for this block configuration is: frontend\n  [cache: <cache_config>]\n\n  # Use compression in cache. The default is an empty value '', which disables\n  # compression. Supported values are: 'snappy' and ''.\n  # CLI flag: -frontend.compression\n  [compression: <string> | default = \"\"]\n\n# Cache query results.\n# CLI flag: -querier.cache-results\n[cache_results: <boolean> | default = false]\n\n# Maximum number of retries for a single request; beyond this, the downstream\n# error is returned.\n# CLI flag: -querier.max-retries-per-request\n[max_retries: <int> | default = 5]\n\n# Perform query parallelisations based on storage sharding configuration and\n# query ASTs. This feature is supported only by the chunks storage engine.\n# CLI flag: -querier.parallelise-shardable-queries\n[parallelise_shardable_queries: <boolean> | default = true]\n\n# A comma-separated list of LogQL vector and range aggregations that should be\n# sharded. Possible values 'quantile_over_time', 'last_over_time',\n# 'first_over_time'.\n# CLI flag: -querier.shard-aggregations\n[shard_aggregations: <string> | default = \"\"]\n\n# Cache index stats query results.\n# CLI flag: -querier.cache-index-stats-results\n[cache_index_stats_results: <boolean> | default = true]\n\n# If a cache config is not specified and cache_index_stats_results is true, the\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with MinIO Single Store\nDESCRIPTION: YAML configuration for setting up Loki with MinIO as the storage backend using AWS S3 configuration since MinIO implements the S3 API. Includes TSDB shipper settings and S3-specific configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  aws:\n    # Note: use a fully qualified domain name (fqdn), like localhost.\n    # full example: http://loki:supersecret@localhost.:9000\n    s3: http<s>://<username>:<secret>@<fqdn>:<port>\n    s3forcepathstyle: true\n  tsdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/index_cache\n    cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space\n\nschema_config:\n  configs:\n    - from: 2020-07-01\n      store: tsdb\n      object_store: s3\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Configuring Chunk Store in Loki YAML\nDESCRIPTION: This YAML configuration block defines settings for the chunk store in Loki, including cache configurations for chunks and index entries, and options for write deduplication and cache handoff.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\n# The cache_config block configures the cache backend for a specific Loki\n# component.\n# The CLI flags prefix for this block configuration is: store.chunks-cache\n[chunk_cache_config: <cache_config>]\n\n# The cache_config block configures the cache backend for a specific Loki\n# component.\n# The CLI flags prefix for this block configuration is: store.chunks-cache-l2\n[chunk_cache_config_l2: <cache_config>]\n\n# Write dedupe cache is deprecated along with legacy index types (aws,\n# aws-dynamo, bigtable, bigtable-hashed, cassandra, gcp, gcp-columnkey,\n# grpc-store).\n# Consider using TSDB index which does not require a write dedupe cache.\n# The CLI flags prefix for this block configuration is: store.index-cache-write\n[write_dedupe_cache_config: <cache_config>]\n\n# Chunks fetched from queriers before this duration will not be written to the\n# cache. A value of 0 will write all chunks to the cache\n# CLI flag: -store.skip-query-writeback-older-than\n[skip_query_writeback_cache_older_than: <duration> | default = 0s]\n\n# Chunks will be handed off to the L2 cache after this duration. 0 to disable L2\n# cache.\n# CLI flag: -store.chunks-cache-l2.handoff\n[l2_chunk_cache_handoff: <duration> | default = 0s]\n\n# Cache index entries older than this period. 0 to disable.\n# CLI flag: -store.cache-lookups-older-than\n[cache_lookups_older_than: <duration> | default = 0s]\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Storage Schemas for Loki (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure multiple storage schemas in Loki. It includes two schema configurations with different 'from' dates, allowing for schema changes over time.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/schema/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: \"2020-07-31\"\n      index:\n        period: 24h\n        prefix: loki_ops_index_\n      object_store: gcs\n      schema: v11\n      store: tsdb\n    - from: \"2022-01-20\"\n      index:\n        period: 24h\n        prefix: loki_ops_index_\n      object_store: gcs\n      schema: v13\n      store: tsdb\n```\n\n----------------------------------------\n\nTITLE: Streaming Logs with WebSocket in Loki API\nDESCRIPTION: The tail endpoint provides a WebSocket connection for streaming logs based on a LogQL query. It supports parameters for query, delay, limit, and start time.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/tail\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"streams\": [\n    {\n      \"stream\": {\n        <label key-value pairs>\n      },\n      \"values\": [\n        [\n          <string: nanosecond unix epoch>,\n          <string: log line>\n        ]\n      ]\n    }\n  ],\n  \"dropped_entries\": [\n    {\n      \"labels\": {\n        <label key-value pairs>\n      },\n      \"timestamp\": \"<nanosecond unix epoch>\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Schema and Table Manager in Loki YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the schema and table manager in Loki. It includes examples of schema config with multiple versions and table manager settings for retention and DynamoDB provisioning.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/table-manager/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from:   2019-01-01\n      store:  dynamo\n      schema: v10\n      index:\n        prefix: loki_\n        period: 168h\n    - from:   2019-04-15\n      store:  dynamo\n      schema: v11\n      index:\n        prefix: loki_\n        period: 168h\n\ntable_manager:\n  retention_deletes_enabled: true\n  retention_period: 336h\n  index_tables_provisioning:\n    provisioned_write_throughput: 10\n    provisioned_read_throughput: 10\n  chunk_tables_provisioning:\n    provisioned_write_throughput: 10\n    provisioned_read_throughput: 10\n```\n\n----------------------------------------\n\nTITLE: Using Different Logging Levels in Logrus\nDESCRIPTION: Shows the seven logging levels available in Logrus (Trace, Debug, Info, Warning, Error, Fatal, Panic) and how to use them for different types of log messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nlog.Trace(\"Something very low level.\")\nlog.Debug(\"Useful debugging information.\")\nlog.Info(\"Something noteworthy happened!\")\nlog.Warn(\"You should probably take a look at this.\")\nlog.Error(\"Something failed but I'm not quitting.\")\n// Calls os.Exit(1) after logging\nlog.Fatal(\"Bye.\")\n// Calls panic() after logging\nlog.Panic(\"I'm bailing.\")\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Server with OpenTracing\nDESCRIPTION: Example demonstrating how to initialize a gRPC server with OpenTracing interceptors. Shows configuration for both unary and streaming RPCs using the OpenTracingServerInterceptor.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// You must have some sort of OpenTracing Tracer instance on hand.\nvar tracer opentracing.Tracer = ...\n...\n\n// Initialize the gRPC server.\ns := grpc.NewServer(\n    ... // other options\n    grpc.UnaryInterceptor(\n        otgrpc.OpenTracingServerInterceptor(tracer)),\n    grpc.StreamInterceptor(\n        otgrpc.OpenTracingStreamServerInterceptor(tracer)))\n\n// All future RPC activity involving `s` will be automatically traced.\n```\n\n----------------------------------------\n\nTITLE: Adding approx_topk Function in LogQL\nDESCRIPTION: New LogQL function that uses probabilistic techniques to approximate the most frequent values in the input along with their frequencies. Useful for scenarios where standard topk queries hit limits or timeout.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-3.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\napprox_topk\n```\n\n----------------------------------------\n\nTITLE: Configuring Chunk Tables Provisioning in DynamoDB\nDESCRIPTION: YAML configuration for chunk tables in DynamoDB, specifying throughput modes and autoscaling settings. Includes read and write capacity configurations with default values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_78\n\nLANGUAGE: yaml\nCODE:\n```\nchunk_tables_provisioning:\n  enable_ondemand_throughput_mode: false\n  provisioned_write_throughput: 1000\n  provisioned_read_throughput: 300\n  write_scale:\n    enabled: false\n    role_arn: \"\"\n    min_capacity: 3000\n    max_capacity: 6000\n    out_cooldown: 1800\n    in_cooldown: 1800\n    target: 80\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Blob Storage in YAML\nDESCRIPTION: This snippet shows the YAML configuration for Azure Blob Storage, including options for authentication, connection settings, and HTTP client configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ntype: AZURE\nconfig:\n  storage_account: \"\"\n  storage_account_key: \"\"\n  storage_connection_string: \"\"\n  storage_create_container: false\n  container: \"\"\n  endpoint: \"\"\n  user_assigned_id: \"\"\n  max_retries: 0\n  reader_config:\n    max_retry_requests: 0\n  pipeline_config:\n    max_tries: 0\n    try_timeout: 0s\n    retry_delay: 0s\n    max_retry_delay: 0s\n  http_config:\n    idle_conn_timeout: 0s\n    response_header_timeout: 0s\n    insecure_skip_verify: false\n    tls_handshake_timeout: 0s\n    expect_continue_timeout: 0s\n    max_idle_conns: 0\n    max_idle_conns_per_host: 0\n    max_conns_per_host: 0\n    tls_config:\n      ca_file: \"\"\n      cert_file: \"\"\n      key_file: \"\"\n      server_name: \"\"\n      insecure_skip_verify: false\n    disable_compression: false\n  msi_resource: \"\"\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Grafana with Datasource Configuration\nDESCRIPTION: Kubernetes manifest for deploying Grafana with a ConfigMap containing the Loki datasource configuration. Includes both the ConfigMap definition and the Deployment specification with volume mounting.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/howto_connect_grafana.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: grafana-datasources\ndata:\n  loki.yaml: |\n    -- datasource configuration file contents --\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata: {}\nspec:\n  template:\n    metadata: {}\n    spec:\n      volumes:\n      - name: grafana-datasources\n        configMap:\n          name: grafana-datasources\n      containers:\n      - name: grafana\n        volumeMounts:\n        - name: grafana-datasources\n          mountPath: /etc/grafana/provisioning/datasources\n          readOnly: true\n```\n\n----------------------------------------\n\nTITLE: Using Extended File Attributes in Go\nDESCRIPTION: Demonstrates basic usage of the xattr package including setting, listing, getting, and removing extended attributes on files. Also shows how to use SetWithFlags for creating attributes with specific system flags.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/xattr/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n  const path = \"/tmp/myfile\"\n  const prefix = \"user.\"\n\n  if err := xattr.Set(path, prefix+\"test\", []byte(\"test-attr-value\")); err != nil {\n  \tlog.Fatal(err)\n  }\n\n  var list []string\n  if list, err = xattr.List(path); err != nil {\n  \tlog.Fatal(err)\n  }\n\n  var data []byte\n  if data, err = xattr.Get(path, prefix+\"test\"); err != nil {\n  \tlog.Fatal(err)\n  }\n\n  if err = xattr.Remove(path, prefix+\"test\"); err != nil {\n  \tlog.Fatal(err)\n  }\n\n  // One can also specify the flags parameter to be passed to the OS.\n  if err := xattr.SetWithFlags(path, prefix+\"test\", []byte(\"test-attr-value\"), xattr.XATTR_CREATE); err != nil {\n  \tlog.Fatal(err)\n  }\n```\n\n----------------------------------------\n\nTITLE: Configuring GCS Storage in Loki\nDESCRIPTION: Configuration options for connecting to Google Cloud Storage as an object storage backend for Loki. Includes bucket settings, authentication, and request parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\n# Name of GCS bucket. Please refer to\n# https://cloud.google.com/docs/authentication/production for more information\n# about how to configure authentication.\n# CLI flag: -<prefix>.gcs.bucketname\n[bucket_name: <string> | default = \"\"]\n\n# Custom GCS endpoint URL.\n# CLI flag: -<prefix>.gcs.endpoint\n[endpoint: <string> | default = \"\"]\n\n# Service account key content in JSON format, refer to\n# https://cloud.google.com/iam/docs/creating-managing-service-account-keys for\n# creation.\n# CLI flag: -<prefix>.gcs.service-account\n[service_account: <string> | default = \"\"]\n\n# The size of the buffer that GCS client for each PUT request. 0 to disable\n# buffering.\n# CLI flag: -<prefix>.gcs.chunk-buffer-size\n[chunk_buffer_size: <int> | default = 0]\n\n# The duration after which the requests to GCS should be timed out.\n# CLI flag: -<prefix>.gcs.request-timeout\n[request_timeout: <duration> | default = 0s]\n\n# Enable OpenCensus (OC) instrumentation for all requests.\n# CLI flag: -<prefix>.gcs.enable-opencensus\n[enable_opencensus: <boolean> | default = true]\n\n# Enable HTTP2 connections.\n# CLI flag: -<prefix>.gcs.enable-http2\n[enable_http2: <boolean> | default = true]\n\n# Enable automatic retries of failed idempotent requests.\n# CLI flag: -<prefix>.gcs.enable-retries\n[enable_retries: <boolean> | default = true]\n```\n\n----------------------------------------\n\nTITLE: Enabling Loki Tracing in YAML Configuration\nDESCRIPTION: YAML configuration to enable tracing for Loki and instrument Loki components to send traces to the meta-monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  tracing:\n    enabled: true\n\ningester:\n  replicas: 3\n  extraEnv:\n    - name: JAEGER_ENDPOINT\n      value: \"http://mmc-alloy-external.default.svc.cluster.local:14268/api/traces\"\n    - name: JAEGER_AGENT_TAGS\n      value: 'cluster=\"prod\",namespace=\"default\"'\n    - name: JAEGER_SAMPLER_TYPE\n      value: \"ratelimiting\"\n    - name: JAEGER_SAMPLER_PARAM\n      value: \"1.0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Global OTLP Stream Labels in LokiStack\nDESCRIPTION: YAML configuration for mapping OpenTelemetry resource attributes to Loki stream labels at the global level. This example shows how to map Kubernetes namespace, pod and container attributes as stream labels.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/open-telemetry.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# [...]\nspec:\n  limits:\n    global:\n      otlp:\n        streamLabels:\n          resourceAttributes:\n          - name: \"k8s.namespace.name\"\n          - name: \"k8s.pod.name\"\n          - name: \"k8s.container.name\"\n```\n\n----------------------------------------\n\nTITLE: Multiple Filtering Stages Example\nDESCRIPTION: Demonstrates ordered filtering stages using stream selectors, line filters, and label filters for efficient querying.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"ops-tools1\", namespace=\"loki-dev\", job=\"loki-dev/query-frontend\"} |= \"metrics.go\" != \"out of order\" | logfmt | duration > 30s or status_code != \"200\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Pattern Ingester in Loki YAML\nDESCRIPTION: This snippet defines the configuration options for the pattern ingester component in Loki. It includes settings for client connections, flushing, metric aggregation, and various other parameters that control the ingester's behavior.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  client_config:\n    pool_config:\n      [client_cleanup_period: <duration> | default = 15s]\n      [health_check_ingesters: <boolean> | default = true]\n      [remote_timeout: <duration> | default = 1s]\n    [remote_timeout: <duration> | default = 5s]\n    [grpc_client_config: <grpc_client>]\n  [concurrent_flushes: <int> | default = 32]\n  [flush_check_period: <duration> | default = 1m]\n  [max_clusters: <int> | default = 300]\n  [max_eviction_ratio: <float> | default = 0.25]\n  metric_aggregation:\n    [downsample_period: <duration> | default = 10s]\n    [loki_address: <string> | default = \"\"]\n    [timeout: <duration> | default = 10s]\n    [push_period: <duration> | default = 30s]\n    http_client_config:\n      basic_auth:\n        [username: <string> | default = \"\"]\n        [password: <string> | default = \"\"]\n    [use_tls: <boolean> | default = false]\n    basic_auth:\n      [username: <string> | default = \"\"]\n      [password: <string> | default = \"\"]\n    backoff_config:\n      [min_period: <duration> | default = 100ms]\n      [max_period: <duration> | default = 10s]\n      [max_retries: <int> | default = 10]\n  tee_config:\n    [batch_size: <int> | default = 5000]\n    [batch_flush_interval: <duration> | default = 1s]\n    [flush_queue_size: <int> | default = 1000]\n    [flush_worker_count: <int> | default = 100]\n    [stop_flush_timeout: <duration> | default = 30s]\n  [connection_timeout: <duration> | default = 2s]\n  [max_allowed_line_length: <int> | default = 3000]\n```\n\n----------------------------------------\n\nTITLE: Configuring Logfmt Stage for Extracted Data Parsing in YAML\nDESCRIPTION: This example shows a two-stage logfmt parsing process. The first stage extracts an 'extra' field, and the second stage parses this extracted data to obtain additional key-value pairs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/logfmt.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- logfmt:\n    mapping:\n      extra:\n- logfmt:\n    mapping:\n      user:\n    source: extra\n```\n\n----------------------------------------\n\nTITLE: Pushing Parameterized Logs to Loki using k6\nDESCRIPTION: This snippet demonstrates how to use the pushParameterized method to generate and push log data to Loki. It sets up a Loki client and pushes a batch of logs with specified stream count and size range.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/log-generation.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport loki from 'k6/x/loki';\n\nconst KB = 1024;\nconst MB = KB * KB;\n\nconst conf = loki.Config(\"http://localhost:3100\");\nconst client = loki.Client(conf);\n\nexport default () => {\n   client.pushParameterized(2, 500 * KB, 1 * MB);\n};\n```\n\n----------------------------------------\n\nTITLE: Registering Loki in Traefik for Load Balancing (HCL)\nDESCRIPTION: HCL configuration to register Loki service in Traefik for load balancing. It enables Traefik, sets the entrypoint to HTTPS, and defines the host rule.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\ntags = [\n  \"traefik.enable=true\",\n  \"traefik.http.routers.loki.entrypoints=https\",\n  \"traefik.http.routers.loki.rule=Host(`loki.service.consul`)\",\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Fluent Bit Input for Forward Protocol\nDESCRIPTION: Configure Fluent Bit to receive logs using the forward input plugin, listening on all IP addresses on port 24224.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\n[INPUT]\n    Name              forward\n    Listen            0.0.0.0\n    Port              24224\n```\n\n----------------------------------------\n\nTITLE: Extracting Tenant ID from JSON Log\nDESCRIPTION: Example showing how to extract a tenant ID from a structured JSON log using a pipeline that combines JSON parsing and tenant stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/tenant.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n  - json:\n      expressions:\n        customer_id: customer_id\n  - tenant:\n      source: customer_id\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"customer_id\":\"1\",\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Loki Ingest Limits Frontend Configuration\nDESCRIPTION: Frontend-specific configuration for Loki ingest limits including client settings, pool configuration, and ring store settings. Includes gRPC client configuration, health check parameters, and kvstore backend options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ningest_limits_frontend:\n  client_config:\n    grpc_client_config: <grpc_client>\n    pool_config:\n      client_cleanup_period: <duration> | default = 15s\n      health_check_ingest_limits: <boolean> | default = true\n      remote_timeout: <duration> | default = 1s\n\n  lifecycler:\n    ring:\n      kvstore:\n        store: <string> | default = \"consul\"\n        prefix: <string> | default = \"collectors/\"\n        consul: <consul>\n        etcd: <etcd>\n        multi:\n          primary: <string> | default = \"\"\n          secondary: <string> | default = \"\"\n          mirror_enabled: <boolean> | default = false\n          mirror_timeout: <duration> | default = 2s\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote-Write Client for Loki Recording Rules in YAML\nDESCRIPTION: This YAML configuration snippet demonstrates how to set up a remote-write client for Loki recording rules. It includes the URL for the Mimir API endpoint and a relabel configuration to replace the job label.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/recording-rules.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nremote_write:\n  clients:\n    mimir:\n      url: http://mimir/api/v1/push\n      write_relabel_configs:\n      - action: replace\n        target_label: job\n        replacement: loki-recording-rules\n```\n\n----------------------------------------\n\nTITLE: Default Docker Daemon Loki Configuration\nDESCRIPTION: JSON configuration for setting Loki as the default logging driver in Docker daemon.json\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"debug\": true,\n  \"log-driver\": \"loki\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"debug\": true,\n  \"log-driver\": \"loki\",\n  \"log-opts\": {\n    \"loki-url\": \"https://<user_id>:<password>@logs-us-west1.grafana.net/loki/api/v1/push\",\n    \"loki-batch-size\": \"400\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of errwrap Package in Go\nDESCRIPTION: Demonstrates how to use the errwrap package to wrap errors, check for contained errors, and extract specific error types. It includes a sample function that wraps an error and a main function showcasing various errwrap methods.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/errwrap/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// A function that always returns an error, but wraps it, like a real\n// function might.\nfunc tryOpen() error {\n\t_, err := os.Open(\"/i/dont/exist\")\n\tif err != nil {\n\t\treturn errwrap.Wrapf(\"Doesn't exist: {{err}}\", err)\n\t}\n\n\treturn nil\n}\n\nfunc main() {\n\terr := tryOpen()\n\n\t// We can use the Contains helpers to check if an error contains\n\t// another error. It is safe to do this with a nil error, or with\n\t// an error that doesn't even use the errwrap package.\n\tif errwrap.Contains(err, \"does not exist\") {\n\t\t// Do something\n\t}\n\tif errwrap.ContainsType(err, new(os.PathError)) {\n\t\t// Do something\n\t}\n\n\t// Or we can use the associated `Get` functions to just extract\n\t// a specific error. This would return nil if that specific error doesn't\n\t// exist.\n\tperr := errwrap.GetType(err, new(os.PathError))\n}\n```\n\n----------------------------------------\n\nTITLE: Drop Labels Expression - Error Label Example\nDESCRIPTION: Shows how to drop __error__ labels from plain text log entries using the drop expression.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_16\n\nLANGUAGE: text\nCODE:\n```\nINFO GET / loki.net 200\n```\n\n----------------------------------------\n\nTITLE: Loki Helm Chart Values Configuration for AWS Deployment\nDESCRIPTION: YAML configuration for the Loki Helm chart in microservices mode, specifying S3 storage, authentication, and scaling parameters for AWS deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n   schemaConfig:\n     configs:\n       - from: \"2024-04-01\"\n         store: tsdb\n         object_store: s3\n         schema: v13\n         index:\n           prefix: loki_index_\n           period: 24h\n   storage_config:\n     aws:\n       region: <S3 BUCKET REGION> # for example, eu-west-2  \n       bucketnames: <CHUNK BUCKET NAME> # Your actual S3 bucket name, for example, loki-aws-dev-chunks\n       s3forcepathstyle: false\n   ingester:\n       chunk_encoding: snappy\n   pattern_ingester:\n       enabled: true\n   limits_config:\n     allow_structured_metadata: true\n     volume_enabled: true\n     retention_period: 672h # 28 days retention\n   compactor:\n     retention_enabled: true \n     delete_request_store: s3\n   ruler:\n    enable_api: true\n    storage:\n      type: s3\n      s3:\n        region: <S3 BUCKET REGION> # for example, eu-west-2\n        bucketnames: <RULER BUCKET NAME> # Your actual S3 bucket name, for example, loki-aws-dev-ruler\n        s3forcepathstyle: false\n      alertmanager_url: http://prom:9093 # The URL of the Alertmanager to send alerts (Prometheus, Mimir, etc.)\n\n   querier:\n      max_concurrent: 4\n\n   storage:\n      type: s3\n      bucketNames:\n        chunks: \"<CHUNK BUCKET NAME>\" # Your actual S3 bucket name (loki-aws-dev-chunks)\n        ruler: \"<RULER BUCKET NAME>\" # Your actual S3 bucket name (loki-aws-dev-ruler)\n        # admin: \"<Insert s3 bucket name>\" # Your actual S3 bucket name (loki-aws-dev-admin) - GEL customers only\n      s3:\n        region: <S3 BUCKET REGION> # eu-west-2\n        #insecure: false\n      # s3forcepathstyle: false\n\nserviceAccount:\n create: true\n annotations:\n   \"eks.amazonaws.com/role-arn\": \"arn:aws:iam::<Account ID>:role/LokiServiceAccountRole\" # The service role you created\n\ndeploymentMode: Distributed\n\ningester:\n replicas: 3\n zoneAwareReplication:\n  enabled: false\n\nquerier:\n replicas: 3\n maxUnavailable: 2\n\nqueryFrontend:\n replicas: 2\n maxUnavailable: 1\n\nqueryScheduler:\n replicas: 2\n\ndistributor:\n replicas: 3\n maxUnavailable: 2\ncompactor:\n replicas: 1\n\nindexGateway:\n replicas: 2\n maxUnavailable: 1\n\nruler:\n replicas: 1\n maxUnavailable: 1\n\n\n# This exposes the Loki gateway so it can be written to and queried externaly\ngateway:\n service:\n   type: LoadBalancer\n basicAuth: \n     enabled: true\n     existingSecret: loki-basic-auth\n\n# Since we are using basic auth, we need to pass the username and password to the canary\nlokiCanary:\n  extraArgs:\n    - -pass=$(LOKI_PASS)\n    - -user=$(LOKI_USER)\n  extraEnv:\n    - name: LOKI_PASS\n      valueFrom:\n        secretKeyRef:\n          name: canary-basic-auth\n          key: password\n    - name: LOKI_USER\n      valueFrom:\n        secretKeyRef:\n          name: canary-basic-auth\n          key: username\n\n# Enable minio for storage\nminio:\n enabled: false\n\nbackend:\n replicas: 0\nread:\n replicas: 0\nwrite:\n replicas: 0\n\nsingleBinary:\n replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Memcached for Query Result and Index Queries Cache in Loki\nDESCRIPTION: This snippet shows the command-line arguments for configuring a Memcached instance dedicated to query result and index queries caching in Loki. It sets memory limits, maximum item size, and connection limits.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n--memory-limit=1024 --max-item-size=5m --conn-limit=1024\n```\n\n----------------------------------------\n\nTITLE: Computing Quantiles and CDFs using TDigest in Go\nDESCRIPTION: Example demonstrating how to use the tdigest library to compute quantiles and cumulative distribution functions (CDFs) from a series of numbers. The code initializes a TDigest with compression parameter 1000, adds sample data, and calculates various percentiles and CDFs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/tdigest/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/influxdata/tdigest\"\n)\n\nfunc main() {\n\ttd := tdigest.NewWithCompression(1000)\n\tfor _, x := range []float64{1, 2, 3, 4, 5, 5, 4, 3, 2, 1} {\n\t\ttd.Add(x, 1)\n\t}\n\n\t// Compute Quantiles\n\tlog.Println(\"50th\", td.Quantile(0.5))\n\tlog.Println(\"75th\", td.Quantile(0.75))\n\tlog.Println(\"90th\", td.Quantile(0.9))\n\tlog.Println(\"99th\", td.Quantile(0.99))\n\n\t// Compute CDFs\n\tlog.Println(\"CDF(1) = \", td.CDF(1))\n\tlog.Println(\"CDF(2) = \", td.CDF(2))\n\tlog.Println(\"CDF(3) = \", td.CDF(3))\n\tlog.Println(\"CDF(4) = \", td.CDF(4))\n\tlog.Println(\"CDF(5) = \", td.CDF(5))\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring boltdb-shipper Schema with 24h Period\nDESCRIPTION: Example configuration for updating boltdb-shipper schema to use mandatory 24h period. Shows how to add a new schema config while maintaining the existing one, with focus on the required 24h period setting for the index.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2020-01-01\n      store: boltdb-shipper\n      object_store: aws\n      schema: v11\n      index:\n        prefix: index_\n        period: 168h\n    - from: [INSERT FUTURE DATE HERE]\n      store: boltdb-shipper\n      object_store: aws\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Settings in YAML for Loki\nDESCRIPTION: This snippet shows how to configure TLS cipher suites and minimum TLS version in Loki's YAML configuration file. It includes options for specifying custom cipher suites and overriding the default minimum TLS version.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_84\n\nLANGUAGE: yaml\nCODE:\n```\n# CLI flag: -<prefix>.tls-cipher-suites\n[tls_cipher_suites: <string> | default = \"\"]\n\n# Override the default minimum TLS version. Allowed values: VersionTLS10,\n# VersionTLS11, VersionTLS12, VersionTLS13\n# CLI flag: -<prefix>.tls-min-version\n[tls_min_version: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Label Extraction Configuration\nDESCRIPTION: Fluentd configuration for extracting Kubernetes labels and container information.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentd/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: conf\nCODE:\n```\n<match mytag>\n  @type loki\n  # ...\n  extract_kubernetes_labels true\n  remove_keys kubernetes\n  <label>\n    container $.kubernetes.container\n  </label>\n  # ...\n</match>\n```\n\n----------------------------------------\n\nTITLE: Configuring DynamoDB Provisioning for Loki in YAML\nDESCRIPTION: This snippet shows how to configure DynamoDB provisioning for Loki, including read/write throughput settings for current and inactive tables.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntable_manager:\n  index_tables_provisioning:\n    # Read/write throughput requirements for the current table\n    # (the table which would handle writes/reads for data timestamped at the current time)\n    provisioned_write_throughput: <int> | default = 3000\n    provisioned_read_throughput: <int> | default = 300\n\n    # Read/write throughput requirements for non-current tables\n    inactive_write_throughput: <int> | default = 1\n    inactive_read_throughput: <int> | Default = 300\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with Structured Metadata in LogQL\nDESCRIPTION: LogQL query example demonstrating how to filter log lines using structured metadata label 'pod'. The query targets logs with job='example' and filters for a specific pod name.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/structured-metadata.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"example\"} | pod=\"myservice-abc1234-56789\"\n```\n\n----------------------------------------\n\nTITLE: Mapping Kubernetes Pod Labels in Promtail YAML Configuration\nDESCRIPTION: This YAML configuration shows how to persist all Kubernetes pod labels by mapping them in Promtail's relabel_configs, such as mapping __meta_kubernetes_pod_label_foo to foo.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n```\n\n----------------------------------------\n\nTITLE: RecordingRuleGroup Configuration Structure\nDESCRIPTION: Defines a group of Loki recording rules. The structure includes name, evaluation interval, series limit, and list of recording rules.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nname: string        # Group name, must be unique\ninterval: duration   # Time between evaluations\nlimit: int32        # Max series limit (0 = unlimited)\nrules:             # List of recording rules\n  - record: string # Rule name\n    expr: string   # LogQL expression\n    labels: map    # Additional labels\n```\n\n----------------------------------------\n\nTITLE: Calculating Cost of Discarded Events in LogQL\nDESCRIPTION: This LogQL query calculates the cost of discarded events per user, organization, and namespace. It uses group_left to include labels from the right-hand side in the result.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_14\n\nLANGUAGE: logql\nCODE:\n```\nsum by (user, namespace) (\n  rate(\n    {job=\"events\"}\n      | logfmt\n      | discarded=\"true\"\n      [5m]\n  )\n)\n* on (user) group_left(organization)\nmax_over_time(\n  {job=\"cost-calculator\"}\n    | logfmt\n    | unwrap cost\n    [5m]\n) by (user, organization)\n\n=>\n[\n  {user=\"foo\", namespace=\"dev\", organization=\"little-org\"} => 10\n  {user=\"foo\", namespace=\"prod\", organization=\"little-org\"} => 50\n  {user=\"bar\", namespace=\"dev\", organization=\"big-org\"} => 70\n  {user=\"bar\", namespace=\"prod\", organization=\"big-org\"} => 200\n]\n```\n\n----------------------------------------\n\nTITLE: Promtail Configuration for Docker Log Collection\nDESCRIPTION: A YAML configuration file for Promtail that sets up server parameters, positions storage, and scrape configurations for Docker logs. It includes job definitions for targeting Docker containers with specific labels.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/hack/boilerplate.go.txt#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /tmp/positions.yaml\n\nclients:\n  - url: http://gateway.loki-prod.svc.cluster.local:3100/loki/api/v1/push\n\nscrape_configs:\n  - job_name: docker\n    docker_sd_configs:\n      - host: unix:///var/run/docker.sock\n        refresh_interval: 5s\n        filters:\n          - name: label\n            values: [\"logging=promtail\"]\n    relabel_configs:\n      - source_labels: ['__meta_docker_container_name']\n        regex: '/(.*)'\n        target_label: 'container'\n      - source_labels: ['__meta_docker_container_log_stream']\n        target_label: 'logstream'\n      - source_labels: ['__meta_docker_container_label_logging_jobname']\n        target_label: 'job'\n```\n\n----------------------------------------\n\nTITLE: Starting Loki and Promtail Containers in Linux\nDESCRIPTION: Docker run commands to start Loki and Promtail containers with mounted configurations\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/docker.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name loki -d -v $(pwd):/mnt/config -p 3100:3100 grafana/loki:3.4.1 -config.file=/mnt/config/loki-config.yaml\ndocker run --name promtail -d -v $(pwd):/mnt/config -v /var/log:/var/log --link loki grafana/promtail:3.4.1 -config.file=/mnt/config/promtail-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Payload Encoding Ratio for Loki Log Generation\nDESCRIPTION: This snippet shows how to set the ratio of Protobuf to JSON encoding when configuring the Loki client. It specifies that 80% of requests should use Protobuf encoding, while 20% use JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/log-generation.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport loki from 'k6/x/loki';\n\nconst ratio = 0.8; // 80% Protobuf, 20% JSON\nconst conf = loki.Config(\"http://localhost:3100\", 5000, ratio);\nconst client = loki.Client(conf);\n```\n\n----------------------------------------\n\nTITLE: Basic SQLite Usage in Go\nDESCRIPTION: This Go code snippet demonstrates how to open an in-memory SQLite database, execute a simple query, and print the result. It shows the basic usage of the package, including connection handling and query execution.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/zombiezen.com/go/sqlite/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  \"fmt\"\n\n  \"zombiezen.com/go/sqlite\"\n  \"zombiezen.com/go/sqlite/sqlitex\"\n)\n\n// ...\n\n// Open an in-memory database.\nconn, err := sqlite.OpenConn(\":memory:\", sqlite.OpenReadWrite)\nif err != nil {\n  return err\n}\ndefer conn.Close()\n\n// Execute a query.\nerr = sqlitex.ExecuteTransient(conn, \"SELECT 'hello, world';\", &sqlitex.ExecOptions{\n  ResultFunc: func(stmt *sqlite.Stmt) error {\n    fmt.Println(stmt.ColumnText(0))\n    return nil\n  },\n})\nif err != nil {\n  return err\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing JSON fields using jsonparser in Go\nDESCRIPTION: Demonstrates how to use the jsonparser library to extract various fields from a JSON object, including nested structures, arrays, and different data types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/buger/jsonparser/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/buger/jsonparser\"\n\n...\n\ndata := []byte(`{\n  \"person\": {\n    \"name\": {\n      \"first\": \"Leonid\",\n      \"last\": \"Bugaev\",\n      \"fullName\": \"Leonid Bugaev\"\n    },\n    \"github\": {\n      \"handle\": \"buger\",\n      \"followers\": 109\n    },\n    \"avatars\": [\n      { \"url\": \"https://avatars1.githubusercontent.com/u/14009?v=3&s=460\", \"type\": \"thumbnail\" }\n    ]\n  },\n  \"company\": {\n    \"name\": \"Acme\"\n  }\n}`)\n\n// You can specify key path by providing arguments to Get function\njsonparser.Get(data, \"person\", \"name\", \"fullName\")\n\n// There is `GetInt` and `GetBoolean` helpers if you exactly know key data type\njsonparser.GetInt(data, \"person\", \"github\", \"followers\")\n\n// When you try to get object, it will return you []byte slice pointer to data containing it\n// In `company` it will be `{\"name\": \"Acme\"}`\njsonparser.Get(data, \"company\")\n\n// If the key doesn't exist it will throw an error\nvar size int64\nif value, err := jsonparser.GetInt(data, \"company\", \"size\"); err == nil {\n  size = value\n}\n\n// You can use `ArrayEach` helper to iterate items [item1, item2 .... itemN]\njsonparser.ArrayEach(data, func(value []byte, dataType jsonparser.ValueType, offset int, err error) {\n\tfmt.Println(jsonparser.Get(value, \"url\"))\n}, \"person\", \"avatars\")\n\n// Or use can access fields by index!\njsonparser.GetString(data, \"person\", \"avatars\", \"[0]\", \"url\")\n\n// You can use `ObjectEach` helper to iterate objects { \"key1\":object1, \"key2\":object2, .... \"keyN\":objectN }\njsonparser.ObjectEach(data, func(key []byte, value []byte, dataType jsonparser.ValueType, offset int) error {\n        fmt.Printf(\"Key: '%s'\\n Value: '%s'\\n Type: %s\\n\", string(key), string(value), dataType)\n\treturn nil\n}, \"person\", \"name\")\n\n// The most efficient way to extract multiple keys is `EachKey`\n\npaths := [][]string{\n  []string{\"person\", \"name\", \"fullName\"},\n  []string{\"person\", \"avatars\", \"[0]\", \"url\"},\n  []string{\"company\", \"url\"},\n}\njsonparser.EachKey(data, func(idx int, value []byte, vt jsonparser.ValueType, err error){\n  switch idx {\n  case 0: // []string{\"person\", \"name\", \"fullName\"}\n    ...\n  case 1: // []string{\"person\", \"avatars\", \"[0]\", \"url\"}\n    ...\n  case 2: // []string{\"company\", \"url\"},\n    ...\n  }\n}, paths...)\n```\n\n----------------------------------------\n\nTITLE: Walking Registered Routes with Gorilla Mux in Go\nDESCRIPTION: This snippet shows how to use the Walk function to iterate over all registered routes in a Gorilla Mux router. It prints details about each route, including path templates, regexps, and methods.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"strings\"\n\n\t\"github.com/gorilla/mux\"\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\treturn\n}\n\nfunc main() {\n\tr := mux.NewRouter()\n\tr.HandleFunc(\"/\", handler)\n\tr.HandleFunc(\"/products\", handler).Methods(\"POST\")\n\tr.HandleFunc(\"/articles\", handler).Methods(\"GET\")\n\tr.HandleFunc(\"/articles/{id}\", handler).Methods(\"GET\", \"PUT\")\n\tr.HandleFunc(\"/authors\", handler).Queries(\"surname\", \"{surname}\")\n\terr := r.Walk(func(route *mux.Route, router *mux.Router, ancestors []*mux.Route) error {\n\t\tpathTemplate, err := route.GetPathTemplate()\n\t\tif err == nil {\n\t\t\tfmt.Println(\"ROUTE:\", pathTemplate)\n\t\t}\n\t\tpathRegexp, err := route.GetPathRegexp()\n\t\tif err == nil {\n\t\t\tfmt.Println(\"Path regexp:\", pathRegexp)\n\t\t}\n\t\tqueriesTemplates, err := route.GetQueriesTemplates()\n\t\tif err == nil {\n\t\t\tfmt.Println(\"Queries templates:\", strings.Join(queriesTemplates, \",\"))\n\t\t}\n\t\tqueriesRegexps, err := route.GetQueriesRegexp()\n\t\tif err == nil {\n\t\t\tfmt.Println(\"Queries regexps:\", strings.Join(queriesRegexps, \",\"))\n\t\t}\n\t\tmethods, err := route.GetMethods()\n\t\tif err == nil {\n\t\t\tfmt.Println(\"Methods:\", strings.Join(methods, \",\"))\n\t\t}\n\t\tfmt.Println()\n\t\treturn nil\n\t})\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\n\thttp.Handle(\"/\", r)\n}\n```\n\n----------------------------------------\n\nTITLE: String Manipulation in LogQL Templates\nDESCRIPTION: Demonstrates various string manipulation functions available in LogQL template expressions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{ alignLeft 5 \"hello world\"}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ alignLeft 5 \"hi\"}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ alignRight 5 \"hello world\"}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ alignRight 5 \"hi\"}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | b64enc }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ b64enc  .foo }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | b64dec }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ b64dec  .foo }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | bytes }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ bytes .foo }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ default \"-\" \"\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ default \"-\" \"foo\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{fromJson \"{\\\"foo\\\": 55}\"}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .request_method | lower }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ lower  \"HELLO\"}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ indent 4 .query }}\n```\n\n----------------------------------------\n\nTITLE: Example API Statistics Response in JSON\nDESCRIPTION: Sample JSON response showing all possible statistics returned by Loki query endpoints like /loki/api/v1/query and /loki/api/v1/query_range. Includes detailed metrics about ingester, store, and summary statistics.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"resultType\": \"streams\",\n    \"result\": [],\n    \"stats\": {\n      \"ingester\": {\n        \"compressedBytes\": 0,\n        \"decompressedBytes\": 0,\n        \"decompressedLines\": 0,\n        \"headChunkBytes\": 0,\n        \"headChunkLines\": 0,\n        \"totalBatches\": 0,\n        \"totalChunksMatched\": 0,\n        \"totalDuplicates\": 0,\n        \"totalLinesSent\": 0,\n        \"totalReached\": 0\n      },\n      \"store\": {\n        \"compressedBytes\": 0,\n        \"decompressedBytes\": 0,\n        \"decompressedLines\": 0,\n        \"chunksDownloadTime\": 0,\n        \"totalChunksRef\": 0,\n        \"totalChunksDownloaded\": 0,\n        \"totalDuplicates\": 0\n      },\n      \"summary\": {\n        \"bytesProcessedPerSecond\": 0,\n        \"execTime\": 0,\n        \"linesProcessedPerSecond\": 0,\n        \"queueTime\": 0,\n        \"totalBytesProcessed\": 0,\n        \"totalLinesProcessed\": 0\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Block Scheduler in YAML\nDESCRIPTION: Configuration options for the Loki block scheduler component, which handles job planning and scheduling. Includes settings for planning intervals, lookback periods, job planning strategies, and job queue management.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nblock_scheduler:\n  # How often the scheduler should plan jobs.\n  # CLI flag: -block-scheduler.interval\n  [interval: <duration> | default = 15m]\n\n  # Lookback period used by the scheduler to plan jobs when the consumer group\n  # has no commits. 0 consumes from the start of the partition.\n  # CLI flag: -block-scheduler.lookback-period\n  [lookback_period: <duration> | default = 0s]\n\n  # Strategy used by the planner to plan jobs. One of record-count\n  # CLI flag: -block-scheduler.strategy\n  [strategy: <string> | default = \"record-count\"]\n\n  # Target record count used by the planner to plan jobs. Only used when\n  # strategy is record-count\n  # CLI flag: -block-scheduler.target-record-count\n  [target_record_count: <int> | default = 1000]\n\n  job_queue:\n    # Interval to check for expired job leases\n    # CLI flag: -jobqueue.lease-expiry-check-interval\n    [lease_expiry_check_interval: <duration> | default = 1m]\n\n    # Duration after which a job lease is considered expired if the scheduler\n    # receives no updates from builders about the job. Expired jobs are\n    # re-enqueued\n    # CLI flag: -jobqueue.lease-duration\n    [lease_duration: <duration> | default = 10m]\n```\n\n----------------------------------------\n\nTITLE: Using Lokitool for Rule Management in Shell\nDESCRIPTION: These shell commands demonstrate how to use lokitool to lint, diff, sync, and print rules for Loki. Lokitool is used to interact with the Loki Ruler and manage rule files.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# lint the rules.yaml file ensuring it's valid and reformatting it if necessary\nlokitool rules lint ./output/rules.yaml\n\n# diff rules against the currently managed ruleset in Loki\nlokitool rules diff --rule-dirs=./output\n\n# ensure the remote ruleset matches your local ruleset, creating/updating/deleting remote rules which differ from your local specification.\nlokitool rules sync --rule-dirs=./output\n\n# print the remote ruleset\nlokitool rules print\n```\n\n----------------------------------------\n\nTITLE: Conditional Logic in LogQL Templates\nDESCRIPTION: Shows how to use conditional logic with boolean functions in LogQL template expressions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ if and (contains \"he\" \"hello\") (contains \"llo\" \"hello\") }} yes {{end}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ if or (contains \"he\" \"hello\") (contains(\"llo\" \"hello\") }} yes {{end}}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ if contains \"ErrTimeout\" .err }} timeout {{else if contains \"he\" \"hello\"}} yes {{else}} no {{end}}\n```\n\n----------------------------------------\n\nTITLE: Parsing Logfmt Format - With Parameters\nDESCRIPTION: Example of parsing a logfmt formatted log line with specific field extraction parameters\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_11\n\nLANGUAGE: logfmt\nCODE:\n```\nat=info method=GET path=/ host=grafana.net fwd=\"124.133.124.161\" service=8ms status=200\n```\n\n----------------------------------------\n\nTITLE: Configuring KEDA ScaledObject for Loki Querier Autoscaling\nDESCRIPTION: A YAML configuration for KEDA ScaledObject that defines autoscaling parameters for Loki queriers. It specifies min/max replicas, scaling threshold, Prometheus metrics source, and stabilization windows.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/autoscaling_queriers.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: keda.sh/v1alpha1\nkind: ScaledObject\nmetadata:\n  name: querier\n  namespace: loki-cluster\nspec:\n  maxReplicaCount: 50\n  minReplicaCount: 10\n  scaleTargetRef:\n    kind: Deployment\n    name: querier\n  triggers:\n  - metadata:\n      metricName: querier_autoscaling_metric\n      query: sum(max_over_time(loki_query_scheduler_inflight_requests{namespace=\"loki-cluster\", quantile=\"0.75\"}[2m]))\n      serverAddress: http://prometheus.default:9090/prometheus\n      threshold: \"4\"\n    type: prometheus\n  advanced:\n    horizontalPodAutoscalerConfig:\n      behavior:\n        scaleDown:\n          stabilizationWindowSeconds: 1800\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Settings for Promtail in YAML\nDESCRIPTION: Defines the global configuration block, which includes settings that affect all scrape targets, such as file watching configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Configure how frequently log files from disk get polled for changes.\n[file_watch_config: <file_watch_config>]\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Query Result Cache\nDESCRIPTION: This YAML configuration snippet shows how to configure the query result cache in Loki's configuration file. It specifies the Memcached host, service, and various caching parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nquery_range:\n  cache_results: true\n  results_cache:\n    cache:\n      memcached_client:\n        consistent_hash: true\n        host: <memcached host>\n        service: <port name of memcached service>\n        max_idle_conns: 16\n        timeout: 500ms\n        update_interval: 1m\n```\n\n----------------------------------------\n\nTITLE: Formatting Strings with printf in Go Templates\nDESCRIPTION: The printf function formats strings in a custom way, similar to the Go fmt package.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_11\n\nLANGUAGE: template\nCODE:\n```\n{{ printf \"The IP address was %s\" .remote_addr }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ printf \"%-40.40s\" .request_uri}} {{printf \"%-5.5s\" .request_method}}\n```\n\nLANGUAGE: template\nCODE:\n```\nline_format \"\\\"|\\\" {{printf \\\"%15.15s\\\" .ClientHost}} \\\"|\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Syslog Receiver in Promtail YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure Promtail to receive IETF Syslog (RFC5424) messages from a TCP or UDP stream, including labeling and relabeling options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  - job_name: syslog\n    syslog:\n      listen_address: 0.0.0.0:1514\n      listen_protocol: tcp\n      idle_timeout: 60s\n      label_structured_data: yes\n      labels:\n        job: \"syslog\"\n    relabel_configs:\n      - source_labels: ['__syslog_message_hostname']\n        target_label: 'host'\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination for Droplet Listing\nDESCRIPTION: Function demonstrating how to handle pagination when listing Droplets, iterating through pages until all items are retrieved.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc DropletList(ctx context.Context, client *godo.Client) ([]godo.Droplet, error) {\n    // create a list to hold our droplets\n    list := []godo.Droplet{}\n\n    // create options. initially, these will be blank\n    opt := &godo.ListOptions{}\n    for {\n        droplets, resp, err := client.Droplets.List(ctx, opt)\n        if err != nil {\n            return nil, err\n        }\n\n        // append the current page's droplets to our list\n        list = append(list, droplets...)\n\n        // if we are at the last page, break out the for loop\n        if resp.Links == nil || resp.Links.IsLastPage() {\n            break\n        }\n\n        page, err := resp.Links.CurrentPage()\n        if err != nil {\n            return nil, err\n        }\n\n        // set the page we want for the next request\n        opt.Page = page + 1\n    }\n\n    return list, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Root Span in Go\nDESCRIPTION: Demonstrates how to create a root span without any parent or causal reference. This is typically used to start a new trace.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc xyz() {\n    ...\n    sp := opentracing.StartSpan(\"operation_name\")\n    defer sp.Finish()\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Lua Module in Go\nDESCRIPTION: Demonstrates how to create and register a Lua module implemented in Go. This example shows the module implementation with a loader function and registering functions to be used in Lua.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\npackage mymodule\n\nimport (\n    \"github.com/yuin/gopher-lua\"\n)\n\nfunc Loader(L *lua.LState) int {\n    // register functions to the table\n    mod := L.SetFuncs(L.NewTable(), exports)\n    // register other stuff\n    L.SetField(mod, \"name\", lua.LString(\"value\"))\n\n    // returns the module\n    L.Push(mod)\n    return 1\n}\n\nvar exports = map[string]lua.LGFunction{\n    \"myfunc\": myfunc,\n}\n\nfunc myfunc(L *lua.LState) int {\n    return 0\n}\n```\n\n----------------------------------------\n\nTITLE: Migration Configuration for New Loki Deployment\nDESCRIPTION: YAML configuration for enabling migration mode in the new Loki deployment, specifying memberlist service connection to existing cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmigrate:\n  fromDistributed:\n    enabled: true\n    memberlistService: loki-loki-distributed-memberlist\n```\n\n----------------------------------------\n\nTITLE: Setting Up Helm-based Enterprise Logs\nDESCRIPTION: Two-step process to install Enterprise Logs using Helm. First creates the cluster, then installs Enterprise Logs.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/k3d/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake helm-cluster\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake helm-install-enterprise-logs\n```\n\n----------------------------------------\n\nTITLE: Complex Sampling with JSON Parsing and Matching\nDESCRIPTION: Shows how to combine sampling with JSON parsing and matching stages. This configuration extracts the 'app' field from JSON logs and applies sampling only to logs matching specific criteria.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/sampling.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n- json:\n    expressions:\n      app:\n- match:\n    pipeline_name: \"app2\"\n    selector: '{app=\"poki\"}'\n    stages:\n    - sampling:\n        rate: 0.1\n```\n\n----------------------------------------\n\nTITLE: Creating a New Droplet\nDESCRIPTION: Example showing how to create a new Droplet using the Godo client, including specifying name, region, size, and image.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ndropletName := \"super-cool-droplet\"\n\ncreateRequest := &godo.DropletCreateRequest{\n    Name:   dropletName,\n    Region: \"nyc3\",\n    Size:   \"s-1vcpu-1gb\",\n    Image: godo.DropletCreateImage{\n        Slug: \"ubuntu-20-04-x64\",\n    },\n}\n\nctx := context.TODO()\n\nnewDroplet, _, err := client.Droplets.Create(ctx, createRequest)\n\nif err != nil {\n    fmt.Printf(\"Something bad happened: %s\\n\\n\", err)\n    return err\n}\n```\n\n----------------------------------------\n\nTITLE: Cloud Storage Provider Configuration in YAML\nDESCRIPTION: Configuration settings for additional storage backends including Alibaba Cloud OSS, Baidu Cloud BOS, and local filesystem storage options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_83\n\nLANGUAGE: yaml\nCODE:\n```\nfilesystem:\n  dir: <string> | default = \"\"\n\nalibaba:\n  endpoint: <string> | default = \"\"\n  bucket: <string> | default = \"\"\n  access_key_id: <string> | default = \"\"\n  access_key_secret: <string> | default = \"\"\n\nbos:\n  bucket: <string> | default = \"\"\n  endpoint: <string> | default = \"\"\n  access_key: <string> | default = \"\"\n  secret_key: <string> | default = \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OTLP HTTP Exporter for Loki\nDESCRIPTION: YAML configuration for setting up the OTLP HTTP exporter to send logs to Loki. Specifies the endpoint and TLS settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/otel-collector-getting-started.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nexporters:\n  otlphttp/logs:\n    endpoint: \"http://loki:3100/otlp\"\n    tls:\n      insecure: true\n```\n\n----------------------------------------\n\nTITLE: Querying Loki API with Time Range\nDESCRIPTION: Example of using Loki's query_range API endpoint to filter logs within a specific time range using start and end timestamps as parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/bp-query.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttp://<loki-instance>/loki/api/v1/query_range?query={job=\"app\"}&start=1633017600000000000&end=1633104000000000000\n```\n\n----------------------------------------\n\nTITLE: Multi-Stage Pipeline Configuration with Static Labels\nDESCRIPTION: Example pipeline configuration showing JSON parsing, label extraction, and static label addition. Demonstrates how to combine multiple stages including static_labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/static_labels.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      stream: stream\n- labels:\n    stream:\n- static_labels:\n    custom_key: custom_val\n```\n\n----------------------------------------\n\nTITLE: Server Configuration in YAML\nDESCRIPTION: Server configuration block defining HTTP and gRPC server settings including network, address, ports, and TLS options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_66\n\nLANGUAGE: yaml\nCODE:\n```\n# HTTP server listen network, default tcp\n# CLI flag: -server.http-listen-network\n[http_listen_network: <string> | default = \"tcp\"]\n\n# HTTP server listen address.\n# CLI flag: -server.http-listen-address\n[http_listen_address: <string> | default = \"\"]\n\n# HTTP server listen port.\n# CLI flag: -server.http-listen-port\n[http_listen_port: <int> | default = 3100]\n\n# Maximum number of simultaneous http connections, <=0 to disable\n# CLI flag: -server.http-conn-limit\n[http_listen_conn_limit: <int> | default = 0]\n\n# gRPC server listen network\n# CLI flag: -server.grpc-listen-network\n[grpc_listen_network: <string> | default = \"tcp\"]\n\n# gRPC server listen address.\n# CLI flag: -server.grpc-listen-address\n[grpc_listen_address: <string> | default = \"\"]\n\n# gRPC server listen port.\n# CLI flag: -server.grpc-listen-port\n[grpc_listen_port: <int> | default = 9095]\n\n# Maximum number of simultaneous grpc connections, <=0 to disable\n# CLI flag: -server.grpc-conn-limit\n[grpc_listen_conn_limit: <int> | default = 0]\n\n# Enables PROXY protocol.\n# CLI flag: -server.proxy-protocol-enabled\n[proxy_protocol_enabled: <boolean> | default = false]\n\n# Comma-separated list of cipher suites to use. If blank, the default Go cipher\n# suites is used.\n# CLI flag: -server.tls-cipher-suites\n[tls_cipher_suites: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Implementing Counter Metrics for Log Lines and Bytes\nDESCRIPTION: Example of creating counter metrics to track total log lines and bytes in Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- metrics:\n    log_lines_total:\n      type: Counter\n      description: \"total number of log lines\"\n      prefix: my_promtail_custom_\n      max_idle_duration: 24h\n      config:\n        match_all: true\n        action: inc\n    log_bytes_total:\n      type: Counter\n      description: \"total bytes of log lines\"\n      prefix: my_promtail_custom_\n      max_idle_duration: 24h\n      config:\n        match_all: true\n        count_entry_bytes: true\n        action: add\n```\n\n----------------------------------------\n\nTITLE: Federated Credentials Configuration\nDESCRIPTION: JSON configuration for setting up federated credentials for Loki authentication\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"LokiFederatedIdentity\",\n    \"issuer\": \"<OIDC-ISSUER-URL>\",\n    \"subject\": \"system:serviceaccount:loki:loki\",\n    \"description\": \"Federated identity for Loki accessing Azure resources\",\n    \"audiences\": [\n      \"api://AzureADTokenExchange\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Ruler Ring Status in Loki API\nDESCRIPTION: Displays a web page with the ruler hash ring status, including state, health, and last heartbeat time of each ruler.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nGET /ruler/ring\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki to Use Memcached Caches via Helm Values\nDESCRIPTION: This YAML configuration snippet shows how to configure Loki to use Memcached for chunk and results caches when deploying with Helm. It specifies the Memcached hosts, services, and other caching parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  memcached:\n    chunk_cache:\n      enabled: true\n      host: chunk-cache-memcached.loki.svc\n      service: memcached-client\n      batch_size: 256\n      parallelism: 10\n    results_cache:\n      enabled: true\n      host: results-cache-memcached.loki.svc\n      service: memcached-client\n      default_validity: 12h\n```\n\n----------------------------------------\n\nTITLE: Configuring Fluent Bit Output for Loki\nDESCRIPTION: Configure Fluent Bit to send logs to Loki using the official Loki output plugin, matching all service logs and adding custom labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_2\n\nLANGUAGE: conf\nCODE:\n```\n[OUTPUT]\n    name   loki\n    match  service.**\n    host   loki\n    port   3100\n    labels agent=fluent-bit\n    label_map_path /fluent-bit/etc/conf/logmap.json\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Pipeline with Output Stage in YAML\nDESCRIPTION: Demonstrates a complete Promtail pipeline configuration including JSON parsing, label addition, and output modification. This example processes a JSON log, extracts user and message fields, adds a label, and sets the output to the extracted message.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/output.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      user: user\n      message: message\n- labels:\n    user:\n- output:\n    source: message\n```\n\n----------------------------------------\n\nTITLE: Timestamp Stage Configuration in YAML\nDESCRIPTION: Configuration for the timestamp stage that parses and overrides the final time value of logs stored by Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\ntimestamp:\n  source: <string>\n  format: <string>\n  [location: <string>]\n```\n\n----------------------------------------\n\nTITLE: Handlebars Template for LogQL Results Display\nDESCRIPTION: JavaScript template using Handlebars for rendering query results, including original log lines, processing stages, and label information. Handles both successful matches and filtered results.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<script id=\"log-result-template\" type=\"text/x-handlebars-template\">\n    <div class=\"panel-header\">\n        Results\n    </div>\n    {{#each results}}\n        <article class=\"debug-result-row\">\n            <div class=\"last-stage-result\" data-line-index=\"{{@index}}\">\n                <div class=\"line-index\">\n                    <div class=\"line-index__wrapper\">\n                        <i class=\"line-cursor expand-cursor\"></i>\n                        <span>Line {{inc @index}}</span>\n                    </div>\n                </div>\n                {{#if this.log_result}}\n                    <span {{#if this.filtered_out}}class=\"filtered-out\"{{/if}}>\n                        {{this.log_result}}\n                    </span>\n                {{/if}}\n                {{#unless this.log_result}}\n                    <span class=\"note-text\">(empty line)</span>\n                {{/unless}}\n            </div>\n            <!-- Template continues with explain section -->\n        </article>\n    {{/each}}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Container with Loki Logging Driver\nDESCRIPTION: Command to run a Grafana container with Loki logging driver configuration, including URL, retries, and batch size settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --log-driver=loki \\\n    --log-opt loki-url=\"https://<user_id>:<password>@logs-us-west1.grafana.net/loki/api/v1/push\" \\\n    --log-opt loki-retries=5 \\\n    --log-opt loki-batch-size=400 \\\n    grafana/grafana\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry HTTP Exporter in Alloy\nDESCRIPTION: Sets up an OTLP HTTP exporter to send processed logs to Loki's OTLP endpoint.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/alloy/examples/alloy-otel-logs.md#2025-04-19_snippet_2\n\nLANGUAGE: alloy\nCODE:\n```\notelcol.exporter.otlphttp \"default\" {\n  client {\n    endpoint = \"http://loki:3100/otlp\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Parquet Files with ReadFile Function\nDESCRIPTION: Example of using the parquet.ReadFile function to read a Parquet file into a slice of Go struct values. This approach is suitable for simple use cases where the data fits in memory.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct { FirstName, LastName string }\n\nrows, err := parquet.ReadFile[RowType](\"file.parquet\")\nif err != nil {\n    ...\n}\n\nfor _, c := range rows {\n    fmt.Printf(\"%+v\\n\", c)\n}\n```\n\n----------------------------------------\n\nTITLE: Database API Overview for Bolt\nDESCRIPTION: Core API methods and entry points in Bolt database including Open(), Begin(), Bucket operations, cursors, and transaction management. Details the internal workings of key operations and their interactions with the B+tree structure and memory mapping.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_28\n\nLANGUAGE: go\nCODE:\n```\nOpen()        // Initializes database reference\nDB.Begin()    // Starts transaction\nBucket.Put()  // Writes key/value pair\nBucket.Get()  // Retrieves key/value pair\nCursor        // Traverses B+tree\nTx.Commit()   // Commits transaction\n```\n\n----------------------------------------\n\nTITLE: Querying Logs without Filters in LogQL\nDESCRIPTION: Demonstrates how to query all logs without any filters using LogQL for both Loki Exporter and native OTLP endpoint formats.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/native_otlp_vs_loki_exporter.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"dev/auth\"}\n```\n\nLANGUAGE: logql\nCODE:\n```\n{service_name=\"auth\", service_namespace=\"dev\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-Tenant Retention Overrides in Grafana Loki\nDESCRIPTION: This YAML configuration demonstrates how to set up per-tenant retention overrides, including tenant-specific retention periods and stream-specific retention rules.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/retention.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\noverrides:\n    \"29\":\n        retention_period: 168h\n        retention_stream:\n        - selector: '{namespace=\"prod\"}'\n          priority: 2\n          period: 336h\n        - selector: '{container=\"loki\"}'\n          priority: 1\n          period: 72h\n    \"30\":\n        retention_stream:\n        - selector: '{container=\"nginx\", level=\"debug\"}'\n          priority: 1\n          period: 24h\n```\n\n----------------------------------------\n\nTITLE: Creating a Detailed gRPC Status Error in Go\nDESCRIPTION: Shows how to create a more complex gRPC status error with additional details. This example creates a FailedPrecondition error and attaches a BadRequest detail with field violations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gogo/status/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nst := status.New(codes.FailedPrecondition, \"wrong user role\")\ndetSt, err := st.WithDetails(&rpc.BadRequest{\n    FieldViolations: []*rpc.BadRequest_FieldViolation{\n        {\n            Field:       \"role\",\n            Description: \"The first user created must have the role of an ADMIN\",\n        },\n    },\n})\nif err == nil {\n    return detSt.Err()\n}\nreturn st.Err()\n```\n\n----------------------------------------\n\nTITLE: Docker Swarm/Compose Loki Configuration\nDESCRIPTION: YAML configuration for setting up Loki logging in Docker Swarm services or Docker Compose\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.7\"\nservices:\n  logger:\n    image: grafana/grafana\n    logging:\n      driver: loki\n      options:\n        loki-url: \"https://<user_id>:<password>@logs-prod-us-central1.grafana.net/loki/api/v1/push\"\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Klog in Go Applications\nDESCRIPTION: Examples showing how to use klog for basic logging. The snippet demonstrates importing klog/v2, initializing flags, and writing log messages at different severity levels.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/klog/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nklog.InitFlags(nil)\nklog.Info(\"Prepare to repel boarders\")\nklog.Fatalf(\"Initialization failed: %s\", err)\n\nif glog.V(2) {\n    glog.Info(\"Starting transaction...\")\n}\n\nglog.V(2).Infoln(\"Processed\", nItems, \"elements\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Zone Aware Ingesters in Jsonnet\nDESCRIPTION: This code snippet shows how to configure zone aware ingesters using Jsonnet. It sets up the migration mode, disables replication on write and read paths, and initializes the new StatefulSets with zero replicas.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/zone-ingesters.md#2025-04-19_snippet_0\n\nLANGUAGE: jsonnet\nCODE:\n```\n_config+:: {\n    multi_zone_ingester_enabled: true,\n    multi_zone_ingester_migration_enabled: true,\n    multi_zone_ingester_replicas: 0,\n    // These last two lines are necessary now that we enable zone aware ingester by default\n    // so that newly created cells will not be migrated later on. If you miss them you will\n    // break writes in the cell.\n    multi_zone_ingester_replication_write_path_enabled: false,\n    multi_zone_ingester_replication_read_path_enabled: false,\n},\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Application (Tempo)\nDESCRIPTION: Helm command to install Grafana Tempo, a distributed tracing backend, in the 'prod' namespace. This serves as a sample application generating logs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhelm install tempo grafana/tempo-distributed -n prod\n```\n\n----------------------------------------\n\nTITLE: Defining a Sample Go Struct for JSON Decoding\nDESCRIPTION: A simple Go struct definition with JSON tags that will be used to demonstrate the JSON decoding process and associated performance challenges.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype T struct {\n    A int `json:\"a\"`\n    B int `json:\"b\"`\n    C int `json:\"c\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Deployment for Loki with S3 Single Store in YAML\nDESCRIPTION: This snippet demonstrates the configuration for deploying Loki on AWS using S3 as a single store. It includes storage and schema configurations, as well as options for using EC2 instance roles.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n   tsdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/index_cache\n    cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space\n  aws:\n    s3: s3://<access_key>:<uri-encoded-secret-access-key>@<region>\n    bucketnames: <bucket1,bucket2>\n\nschema_config:\n  configs:\n    - from: 2020-07-01\n      store: tsdb\n      object_store: aws\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Memberlist Configuration with Ring Overrides in Loki\nDESCRIPTION: Example configuration for using memberlist for distributor and ingester rings, while overriding the ruler ring to use Consul in Loki. This demonstrates the new automatic application of memberlist config to all non-configured rings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nmemberlist:\n  join_members:\n    - loki.namespace.svc.cluster.local\nruler:\n  ring:\n    kvstore:\n      store: consul\n      consul:\n        host: consul.namespace.svc.cluster.local:8500\n```\n\n----------------------------------------\n\nTITLE: Running Promtail in Dry Run Mode with Bash\nDESCRIPTION: Demonstrates how to use Promtail in dry run mode to debug log parsing without sending data to Loki. This command pipes a log file to Promtail, enabling dry run and stdin modes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncat my.log | promtail --stdin --dry-run --client.url http://127.0.0.1:3100/loki/api/v1/push\n```\n\n----------------------------------------\n\nTITLE: Running k6 Test\nDESCRIPTION: Command to execute a k6 test script\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./k6 run test.js\n```\n\n----------------------------------------\n\nTITLE: Service Discovery Labels Pipeline Configuration\nDESCRIPTION: Configuration example showing how to use Kubernetes service discovery labels as structured metadata sources.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/structured_metadata.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n  - structured_metadata:\n      pod_uid:\n      pod_host_ip:\nrelabel_configs:\n  - action: replace\n    source_labels:\n      - __meta_kubernetes_pod_uid\n    target_label: pod_uid\n  - action: replace\n    source_labels:\n      - __meta_kubernetes_pod_host_ip\n    target_label: pod_host_ip\n```\n\n----------------------------------------\n\nTITLE: Example Runtime Configuration File in YAML for Loki\nDESCRIPTION: This snippet provides an example of a runtime configuration file for Loki. It includes overrides for different tenants and multi-KV configuration settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_87\n\nLANGUAGE: yaml\nCODE:\n```\noverrides:\n  tenant1:\n    ingestion_rate_mb: 10\n    max_streams_per_user: 100000\n    max_chunks_per_query: 100000\n  tenant2:\n    max_streams_per_user: 1000000\n    max_chunks_per_query: 1000000\n\nmulti_kv_config:\n    mirror-enabled: false\n    primary: consul\n```\n\n----------------------------------------\n\nTITLE: Match Stage Configuration in YAML\nDESCRIPTION: Configuration for the match stage that conditionally executes stages based on LogQL stream selector matches.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nmatch:\n  selector: <string>\n  [pipeline_name: <string>]\n  stages:\n    - [\n        <docker> |\n        <cri> |\n        <regex>\n        <json> |\n        <template> |\n        <match> |\n        <timestamp> |\n        <output> |\n        <labels> |\n        <metrics>\n      ]\n```\n\n----------------------------------------\n\nTITLE: Installing or Upgrading Loki Deployment\nDESCRIPTION: Bash commands to either install a new Loki deployment or upgrade an existing one using Helm.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values values.yaml loki grafana/loki\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --values values.yaml loki grafana/loki\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterLogForwarder Configuration\nDESCRIPTION: YAML configuration for setting up ClusterLogForwarder to forward different types of logs to LokiStack.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: logging.openshift.io/v1\nkind: ClusterLogForwarder\nmetadata:\n  name: instance\n  namespace: openshift-logging\nspec:\n  outputs:\n   - name: loki-app\n     type: loki\n     url: https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/application\n     secret:\n       name: lokistack-gateway-bearer-token\n   - name: loki-infra\n     type: loki\n     url: https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/infrastructure\n     secret:\n       name: lokistack-gateway-bearer-token\n   - name: loki-audit\n     type: loki\n     url: https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/audit\n     secret:\n       name: lokistack-gateway-bearer-token\n  pipelines:\n   - name: send-app-logs\n     inputRefs:\n     - application\n     outputRefs:\n     - loki-app\n   - name: send-infra-logs\n     inputRefs:\n     - infrastructure\n     outputRefs:\n     - loki-infra\n   - name: send-audit-logs\n     inputRefs:\n     - audit\n     outputRefs:\n     - loki-audit\n```\n\n----------------------------------------\n\nTITLE: Writing String Columns to Parquet Buffer in Go\nDESCRIPTION: Example showing how to write string column data to a parquet GenericBuffer using the Value interface. Demonstrates handling first name column writes with value boxing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct { FirstName, LastName string }\n\nfunc writeColumns(buffer *parquet.GenericBuffer[RowType], firstNames []string) error {\n    values := make([]parquet.Value, len(firstNames))\n    for i := range firstNames {\n        values[i] = parquet.ValueOf(firstNames[i])\n    }\n    _, err := buffer.ColumnBuffers()[0].WriteValues(values)\n    return err\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Current Configuration in Loki API\nDESCRIPTION: This endpoint shows the current Loki configuration, with options to display differences from defaults or default configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nGET /config\n```\n\n----------------------------------------\n\nTITLE: LogQL Decolorize Filter\nDESCRIPTION: Example showing how to strip ANSI color codes from log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"example\"} | decolorize\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Cloudflare API Client in Go\nDESCRIPTION: This snippet demonstrates how to create a new Cloudflare API client, fetch user details, retrieve a zone ID, and get zone details. It requires the CLOUDFLARE_API_KEY and CLOUDFLARE_API_EMAIL environment variables to be set.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/cloudflare-go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/cloudflare/cloudflare-go\"\n)\n\nfunc main() {\n\t// Construct a new API object\n\tapi, err := cloudflare.New(os.Getenv(\"CLOUDFLARE_API_KEY\"), os.Getenv(\"CLOUDFLARE_API_EMAIL\"))\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Most API calls require a Context\n\tctx := context.Background()\n\n\t// Fetch user details on the account\n\tu, err := api.UserDetails(ctx)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// Print user details\n\tfmt.Println(u)\n\n\t// Fetch the zone ID\n\tid, err := api.ZoneIDByName(\"example.com\") // Assuming example.com exists in your Cloudflare account already\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Fetch zone details\n\tzone, err := api.ZoneDetails(ctx, id)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// Print zone details\n\tfmt.Println(zone)\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading Docker Loki Driver\nDESCRIPTION: Series of commands to upgrade the Loki Docker driver plugin, including disabling the current version, upgrading to a new version, and restarting Docker.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker plugin disable loki --force\ndocker plugin upgrade loki grafana/loki-docker-driver:3.3.2-arm64 --grant-all-permissions\ndocker plugin enable loki\nsystemctl restart docker\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with Basic Authentication in Grafana Enterprise Logs (Bash)\nDESCRIPTION: This snippet shows how to query logs from Grafana Enterprise Logs using Basic Authentication. It specifies multiple tenants as the user and uses an access policy token as the password.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -u \"Tenant1|Tenant2|Tenant3:$API_TOKEN\" \\\n  -G -s \"http://localhost:3100/loki/api/v1/query\" \\\n  --data-urlencode 'query=sum(rate({job=\"varlogs\"}[10m])) by (level)' | jq\n```\n\n----------------------------------------\n\nTITLE: Configuring Compactor in Loki YAML\nDESCRIPTION: Defines the compactor configuration for Loki, including working directory, compaction interval, and retention settings. The compactor is responsible for compacting index shards to improve query performance.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\ncompactor:\n  [working_directory: <string> | default = \"\"]\n  [compaction_interval: <duration> | default = 10m]\n  [apply_retention_interval: <duration> | default = 0s]\n  [retention_enabled: <boolean> | default = false]\n  [retention_delete_delay: <duration> | default = 2h]\n  [retention_delete_worker_count: <int> | default = 150]\n```\n\n----------------------------------------\n\nTITLE: LogQL Label Filter Examples\nDESCRIPTION: Examples of equivalent label filter expressions showing different ways to combine predicates using logical operators\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: logql\nCODE:\n```\n| duration >= 20ms or size == 20KB and method!~\"2..\"\n| duration >= 20ms or size == 20KB | method!~\"2..\"\n| duration >= 20ms or size == 20KB , method!~\"2..\"\n| duration >= 20ms or size == 20KB  method!~\"2..\"\n```\n\n----------------------------------------\n\nTITLE: Counting Login Events by Email in LogQL\nDESCRIPTION: Demonstrates how to count login events in the last hour by email using LogQL for both Loki Exporter and native OTLP endpoint formats.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/native_otlp_vs_loki_exporter.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\nsum(count_over_time({job=\"dev/auth\"} |= \"user logged in\" | json[1h])) by (email)\n```\n\nLANGUAGE: logql\nCODE:\n```\nsum(count_over_time({service_name=\"auth\", service_namespace=\"dev\"} |= \"user logged in\"[1h])) by (email)\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with S3 Object Storage\nDESCRIPTION: YAML configuration for deploying Loki with Amazon S3 as the object storage backend. This setup includes AWS-specific settings and disables MinIO.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  commonConfig:\n    replication_factor: 3\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  storage_config:\n    aws:\n      region: <AWS region your bucket is in, for example, `eu-west-2`>\n      bucketnames: <Your AWS bucket for chunk, for exaxmple,  `aws-loki-dev-chunk`>\n      s3forcepathstyle: false\n  pattern_ingester:\n      enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n    retention_period: 672h # 28 days retention\n\n  storage:\n    type: s3\n    bucketNames:\n        chunks: <Your AWS bucket for chunk, for example, `aws-loki-dev-chunk`>\n        ruler: <Your AWS bucket for ruler, for example, `aws-loki-dev-ruler`>\n        admin: <Your AWS bucket for admin, for example, `aws-loki-dev-admin`>\n    s3:\n      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages or are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).\n      s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name\n      # AWS endpoint URL\n      endpoint: <your-endpoint>\n      # AWS region where the S3 bucket is located\n      region: <your-region>\n      # AWS secret access key\n      secretAccessKey: <your-secret-access-key>\n      # AWS access key ID\n      accessKeyId: <your-access-key-id>\n      # AWS signature version (e.g., v2 or v4)\n      signatureVersion: <your-signature-version>\n      # Forces the path style for S3 (true/false)\n      s3ForcePathStyle: false\n      # Allows insecure (HTTP) connections (true/false)\n      insecure: false\n      # HTTP configuration settings\n      http_config: {}\n\n# Disable minio storage\nminio:\n  enabled: false\n\ndeploymentMode: SingleBinary\n\nsingleBinary:\n  replicas: 3\n  persistence:\n    storageClass: gp2\n    accessModes:\n      - ReadWriteOnce\n    size: 30Gi\n\n# Zero out replica counts of other deployment modes\nbackend:\n  replicas: 0\nread:\n  replicas: 0\nwrite:\n  replicas: 0\n\ningester:\n  replicas: 0\nquerier:\n  replicas: 0\nqueryFrontend:\n  replicas: 0\nqueryScheduler:\n  replicas: 0\ndistributor:\n  replicas: 0\ncompactor:\n  replicas: 0\nindexGateway:\n  replicas: 0\nbloomCompactor:\n  replicas: 0\nbloomGateway:\n  replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Table Manager for Data Retention in Loki\nDESCRIPTION: This configuration shows how to set up the table-manager component in Loki for handling data retention. It enables deletion of old data and sets a retention period of 15 weeks (2520 hours) based on weekly (168h) period durations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntable_manager:\n  # The retention period must be a multiple of the index / chunks\n  # table \"period\" (see period_config).\n  retention_deletes_enabled: true\n  # This is 15 weeks retention, based on the 168h (1week) period durations used in the rest of the examples.\n  retention_period: 2520h\n```\n\n----------------------------------------\n\nTITLE: JSON Format for Ingesting Logs with Structured Metadata in Loki (JSON)\nDESCRIPTION: This snippet demonstrates the JSON format for ingesting logs with structured metadata into Loki. It shows how to attach a JSON object with metadata to each log line in the values array.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"values\": [\n    [ \"<unix epoch in nanoseconds>\", \"<log line>\", {\"trace_id\": \"0242ac120002\", \"user_id\": \"superUser123\"}]\n]\n```\n\n----------------------------------------\n\nTITLE: Encoding a Stream with S2 Compression in Go\nDESCRIPTION: This function demonstrates how to compress data from a reader to a writer using S2 stream encoding. It creates a new S2 writer, copies all data from the source to the encoder, and closes the encoder to complete compression and release resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nfunc EncodeStream(src io.Reader, dst io.Writer) error {\n    enc := s2.NewWriter(dst)\n    _, err := io.Copy(enc, src)\n    if err != nil {\n        enc.Close()\n        return err\n    }\n    // Blocks until compression is done.\n    return enc.Close() \n}\n```\n\n----------------------------------------\n\nTITLE: Creating User with Nested Buckets in Bolt Database (Go)\nDESCRIPTION: Shows how to use nested buckets in a Bolt database for a multi-tenant application. It creates a user in a specific account's bucket, demonstrating bucket nesting and sequence generation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_20\n\nLANGUAGE: go\nCODE:\n```\n// createUser creates a new user in the given account.\nfunc createUser(accountID int, u *User) error {\n    // Start the transaction.\n    tx, err := db.Begin(true)\n    if err != nil {\n        return err\n    }\n    defer tx.Rollback()\n\n    // Retrieve the root bucket for the account.\n    // Assume this has already been created when the account was set up.\n    root := tx.Bucket([]byte(strconv.FormatUint(accountID, 10)))\n\n    // Setup the users bucket.\n    bkt, err := root.CreateBucketIfNotExists([]byte(\"USERS\"))\n    if err != nil {\n        return err\n    }\n\n    // Generate an ID for the new user.\n    userID, err := bkt.NextSequence()\n    if err != nil {\n        return err\n    }\n    u.ID = userID\n\n    // Marshal and save the encoded user.\n    if buf, err := json.Marshal(u); err != nil {\n        return err\n    } else if err := bkt.Put([]byte(strconv.FormatUint(u.ID, 10)), buf); err != nil {\n        return err\n    }\n\n    // Commit the transaction.\n    if err := tx.Commit(); err != nil {\n        return err\n    }\n\n    return nil\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Ring in Loki YAML\nDESCRIPTION: Specifies the ring configuration for Loki, including key-value store settings, heartbeat parameters, and instance details. This is crucial for Loki's distributed architecture and service discovery.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nring:\n  kvstore:\n    [store: <string> | default = \"consul\"]\n    [prefix: <string> | default = \"collectors/\"]\n    [consul: <consul>]\n    [etcd: <etcd>]\n    multi:\n      [primary: <string> | default = \"\"]\n      [secondary: <string> | default = \"\"]\n      [mirror_enabled: <boolean> | default = false]\n      [mirror_timeout: <duration> | default = 2s]\n  [heartbeat_period: <duration> | default = 15s]\n  [heartbeat_timeout: <duration> | default = 1m]\n  [tokens_file_path: <string> | default = \"\"]\n  [zone_awareness_enabled: <boolean> | default = false]\n  [num_tokens: <int> | default = 128]\n  [replication_factor: <int> | default = 3]\n  [instance_id: <string> | default = \"<hostname>\"]\n  [instance_interface_names: <list of strings> | default = [<private network interfaces>]]\n  [instance_port: <int> | default = 0]\n  [instance_addr: <string> | default = \"\"]\n  [instance_availability_zone: <string> | default = \"\"]\n  [instance_enable_ipv6: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Configuring CRI Log Parsing Stage in YAML\nDESCRIPTION: Defines a stage for parsing CRI (Container Runtime Interface) logs, extracting timestamp, stream, and log content automatically.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ncri: {}\n```\n\n----------------------------------------\n\nTITLE: Uploading a Blob to Azure Storage\nDESCRIPTION: Complete example of authenticating with Azure AD, creating a client, opening a file, and uploading it to a specified container and blob path.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nconst (\n\taccount       = \"https://MYSTORAGEACCOUNT.blob.core.windows.net/\"\n\tcontainerName = \"sample-container\"\n\tblobName      = \"sample-blob\"\n\tsampleFile    = \"path/to/sample/file\"\n)\n\n// authenticate with Azure Active Directory\ncred, err := azidentity.NewDefaultAzureCredential(nil)\n// TODO: handle error\n\n// create a client for the specified storage account\nclient, err := azblob.NewClient(account, cred, nil)\n// TODO: handle error\n\n// open the file for reading\nfile, err := os.OpenFile(sampleFile, os.O_RDONLY, 0)\n// TODO: handle error\ndefer file.Close()\n\n// upload the file to the specified container with the specified blob name\n_, err = client.UploadFile(context.TODO(), containerName, blobName, file, nil)\n// TODO: handle error\n```\n\n----------------------------------------\n\nTITLE: Manually Managing bbolt Transactions\nDESCRIPTION: Example showing how to manually start, commit, and rollback transactions using DB.Begin() instead of the helper functions, with proper error handling and deferred rollback.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n// Start a writable transaction.\ntx, err := db.Begin(true)\nif err != nil {\n    return err\n}\ndefer tx.Rollback()\n\n// Use the transaction...\n_, err := tx.CreateBucket([]byte(\"MyBucket\"))\nif err != nil {\n    return err\n}\n\n// Commit the transaction and check for error.\nif err := tx.Commit(); err != nil {\n    return err\n}\n```\n\n----------------------------------------\n\nTITLE: Example Promtail Pipeline Configuration\nDESCRIPTION: Demonstrates a complete pipeline configuration that extracts a 'stream' field from JSON and converts it to a label. Shows the combination of json and labels stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labels.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      stream: stream\n- labels:\n    stream:\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables with Static Proxy Configuration in Go\nDESCRIPTION: This example shows how to override environment variables with static proxy settings using OverrideEnvWithStaticProxy(). It then sets the default HTTP transport to use the proxy from the environment.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-ieproxy/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc init() {\n\tieproxy.OverrideEnvWithStaticProxy()\n\thttp.DefaultTransport.(*http.Transport).Proxy = http.ProxyFromEnvironment\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Index Tables Provisioning in DynamoDB\nDESCRIPTION: YAML configuration for index tables in DynamoDB, including throughput settings, autoscaling parameters, and inactive table management. Defines both read and write scaling configurations with default values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_77\n\nLANGUAGE: yaml\nCODE:\n```\nindex_tables_provisioning:\n  enable_ondemand_throughput_mode: false\n  provisioned_write_throughput: 1000\n  provisioned_read_throughput: 300\n  write_scale:\n    enabled: false\n    role_arn: \"\"\n    min_capacity: 3000\n    max_capacity: 6000\n    out_cooldown: 1800\n    in_cooldown: 1800\n    target: 80\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Schema for New Loki Installation (YAML)\nDESCRIPTION: This YAML snippet shows the recommended schema configuration for a new Loki installation. It specifies the schema version, object store, and index settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/schema/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2024-04-01\n      object_store: s3\n      store: tsdb\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Microservices with MinIO Storage\nDESCRIPTION: YAML configuration for deploying Loki microservices using MinIO as the storage backend.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-microservices/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  ingester:\n    chunk_encoding: snappy\n  querier:\n    max_concurrent: 4\n  pattern_ingester:\n    enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n\ndeploymentMode: Distributed\n\ningester:\n  replicas: 3\n  zoneAwareReplication:\n    enabled: false\nquerier:\n  replicas: 3\n  maxUnavailable: 2\nqueryFrontend:\n  replicas: 2\n  maxUnavailable: 1\nqueryScheduler:\n  replicas: 2\ndistributor:\n  replicas: 3 \n  maxUnavailable: 2\ncompactor:\n  replicas: 1\nindexGateway:\n  replicas: 2\n  maxUnavailable: 1\n\nbloomPlanner:\n  replicas: 0\nbloomBuilder:\n  replicas: 0\nbloomGateway:\n  replicas: 0\n\nbackend:\n  replicas: 0\nread:\n  replicas: 0\nwrite:\n  replicas: 0\n\nsingleBinary:\n  replicas: 0\n\ngateway:\n  service:\n    type: LoadBalancer\n\nminio:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: GCP Log Scraping Configuration in Promtail\nDESCRIPTION: Configuration for scraping GCP logs using Promtail. It demonstrates the 'pull' strategy, specifying project_id and subscription, along with optional settings and relabeling to transform GCP resource labels into Promtail labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  - job_name: gcplog\n    gcplog:\n      subscription_type: \"pull\" # If the `subscription_type` field is empty, defaults to `pull`\n      project_id: \"my-gcp-project\"\n      subscription: \"my-pubsub-subscription\"\n      use_incoming_timestamp: false # default rewrite timestamps.\n      use_full_line: false # default use textPayload as log line.\n      labels:\n        job: \"gcplog\"\n    relabel_configs:\n      - source_labels: ['__gcp_resource_type']\n        target_label: 'resource_type'\n      - source_labels: ['__gcp_resource_labels_project_id']\n        target_label: 'project'\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Namespace-based Tenant ID\nDESCRIPTION: Example showing how to set tenant IDs based on Kubernetes namespace labels using kubernetes service discovery and relabeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/tenant.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  - job_name: kubernetes-pods-name\n\n    kubernetes_sd_configs:\n      - role: pod\n\n    relabel_configs:\n      - action: replace\n        source_labels:\n          - __meta_kubernetes_namespace\n        target_label: namespace\n\n    pipeline_stages:\n    - match:\n        selector: '{namespace=~\".+\"}'\n        stages:\n          - tenant:\n              label: \"namespace\"\n    - output:\n         source: message\n```\n\n----------------------------------------\n\nTITLE: Basic Logrus Usage in Go\nDESCRIPTION: Shows the simplest way to use Logrus with package-level logger and field-based logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n  log \"github.com/sirupsen/logrus\"\n)\n\nfunc main() {\n  log.WithFields(log.Fields{\n    \"animal\": \"walrus\",\n  }).Info(\"A walrus appears\")\n}\n```\n\n----------------------------------------\n\nTITLE: Series Command Usage in Loki CLI\nDESCRIPTION: Command reference for the 'series' command in Loki CLI that runs series queries to find log streams within a time window. Includes options for authentication, connection settings, query parameters, and label analysis.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli series [<flags>] <matcher>\n\nRun series query.\n\nThe \"series\" command will take the provided label matcher and return all the log streams found in the time window.\n\nIt is possible to send an empty label matcher '{}' to return all streams.\n\nUse the --analyze-labels flag to get a summary of the labels found in all streams. This is helpful to find high cardinality labels.\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n  -q, --quiet                 Suppress query metadata\n      --stats                 Show query statistics\n  -o, --output=default        Specify output mode [default, raw, jsonl]. raw suppresses log labels and timestamp.\n  -z, --timezone=Local        Specify the timezone to use when formatting output timestamps [Local, UTC]\n      --cpuprofile=\"\"         Specify the location for writing a CPU profile.\n      --memprofile=\"\"         Specify the location for writing a memory profile.\n      --stdin                 Take input logs from stdin\n      --addr=\"http://localhost:3100\"\n                              Server address. Can also be set using LOKI_ADDR env var.\n      --username=\"\"           Username for HTTP basic auth. Can also be set using LOKI_USERNAME env var.\n      --password=\"\"           Password for HTTP basic auth. Can also be set using LOKI_PASSWORD env var.\n      --ca-cert=\"\"            Path to the server Certificate Authority. Can also be set using LOKI_CA_CERT_PATH env var.\n      --tls-skip-verify       Server certificate TLS skip verify. Can also be set using LOKI_TLS_SKIP_VERIFY env var.\n      --cert=\"\"               Path to the client certificate. Can also be set using LOKI_CLIENT_CERT_PATH env var.\n      --key=\"\"                Path to the client certificate key. Can also be set using LOKI_CLIENT_KEY_PATH env var.\n      --org-id=\"\"             adds X-Scope-OrgID to API requests for representing tenant ID. Useful for requesting tenant data when bypassing\n                              an auth gateway. Can also be set using LOKI_ORG_ID env var.\n      --query-tags=\"\"         adds X-Query-Tags http header to API requests. This header value will be part of `metrics.go` statistics.\n                              Useful for tracking the query. Can also be set using LOKI_QUERY_TAGS env var.\n      --bearer-token=\"\"       adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN env var.\n      --bearer-token-file=\"\"  adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN_FILE env var.\n      --retries=0             How many times to retry each query when getting an error response from Loki. Can also be set using\n                              LOKI_CLIENT_RETRIES env var.\n      --min-backoff=0         Minimum backoff time between retries. Can also be set using LOKI_CLIENT_MIN_BACKOFF env var.\n      --max-backoff=0         Maximum backoff time between retries. Can also be set using LOKI_CLIENT_MAX_BACKOFF env var.\n      --auth-header=\"Authorization\"\n                              The authorization header used. Can also be set using LOKI_AUTH_HEADER env var.\n      --proxy-url=\"\"          The http or https proxy to use when making requests. Can also be set using LOKI_HTTP_PROXY_URL env var.\n      --compress              Request that Loki compress returned data in transit. Can also be set using LOKI_HTTP_COMPRESSION env var.\n      --since=1h              Lookback window.\n      --from=FROM             Start looking for logs at this absolute time (inclusive)\n      --to=TO                 Stop looking for logs at this absolute time (exclusive)\n      --analyze-labels        Printout a summary of labels including count of label value combinations, useful for debugging high cardinality\n                              series\n\nArgs:\n  <matcher>  eg '{foo=\"bar\",baz=~\".*blip\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Server Settings in YAML\nDESCRIPTION: Defines the server configuration block, which includes settings for HTTP and gRPC servers, logging, profiling, and other server-related options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Disable the HTTP and GRPC server.\n[disable: <boolean> | default = false]\n\n# Enable the /debug/fgprof and /debug/pprof endpoints for profiling.\n[profiling_enabled: <boolean> | default = false]\n\n# HTTP server listen host\n[http_listen_address: <string>]\n\n# HTTP server listen port (0 means random port)\n[http_listen_port: <int> | default = 80]\n\n# gRPC server listen host\n[grpc_listen_address: <string>]\n\n# gRPC server listen port (0 means random port)\n[grpc_listen_port: <int> | default = 9095]\n\n# Register instrumentation handlers (/metrics, etc.)\n[register_instrumentation: <boolean> | default = true]\n\n# Timeout for graceful shutdowns\n[graceful_shutdown_timeout: <duration> | default = 30s]\n\n# Read timeout for HTTP server\n[http_server_read_timeout: <duration> | default = 30s]\n\n# Write timeout for HTTP server\n[http_server_write_timeout: <duration> | default = 30s]\n\n# Idle timeout for HTTP server\n[http_server_idle_timeout: <duration> | default = 120s]\n\n# Max gRPC message size that can be received\n[grpc_server_max_recv_msg_size: <int> | default = 4194304]\n\n# Max gRPC message size that can be sent\n[grpc_server_max_send_msg_size: <int> | default = 4194304]\n\n# Limit on the number of concurrent streams for gRPC calls (0 = unlimited)\n[grpc_server_max_concurrent_streams: <int> | default = 100]\n\n# Log only messages with the given severity or above. Supported values [debug,\n# info, warn, error]\n[log_level: <string> | default = \"info\"]\n\n# Base path to server all API routes from (e.g., /v1/).\n[http_path_prefix: <string>]\n\n# Target managers check flag for Promtail readiness, if set to false the check is ignored\n[health_check_target: <bool> | default = true]\n\n# Enable reload via HTTP request.\n[enable_runtime_reload: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Rendering Tables with Lip Gloss in Go\nDESCRIPTION: Shows how to use the Lip Gloss table sub-package to create and style tables. Includes defining data rows, styling headers and cells, and rendering the table.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_24\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/charmbracelet/lipgloss/table\"\n```\n\nLANGUAGE: go\nCODE:\n```\nrows := [][]string{\n    {\"Chinese\", \"您好\", \"你好\"},\n    {\"Japanese\", \"こんにちは\", \"やあ\"},\n    {\"Arabic\", \"أهلين\", \"أهلا\"},\n    {\"Russian\", \"Здравствуйте\", \"Привет\"},\n    {\"Spanish\", \"Hola\", \"¿Qué tal?\"},\n}\n```\n\nLANGUAGE: go\nCODE:\n```\nvar (\n    purple    = lipgloss.Color(\"99\")\n    gray      = lipgloss.Color(\"245\")\n    lightGray = lipgloss.Color(\"241\")\n\n    headerStyle  = lipgloss.NewStyle().Foreground(purple).Bold(true).Align(lipgloss.Center)\n    cellStyle    = lipgloss.NewStyle().Padding(0, 1).Width(14)\n    oddRowStyle  = cellStyle.Foreground(gray)\n    evenRowStyle = cellStyle.Foreground(lightGray)\n)\n\nt := table.New().\n    Border(lipgloss.NormalBorder()).\n    BorderStyle(lipgloss.NewStyle().Foreground(purple)).\n    StyleFunc(func(row, col int) lipgloss.Style {\n        switch {\n        case row == table.HeaderRow:\n            return headerStyle\n        case row%2 == 0:\n            return evenRowStyle\n        default:\n            return oddRowStyle\n        }\n    }).\n    Headers(\"LANGUAGE\", \"FORMAL\", \"INFORMAL\").\n    Rows(rows...)\n\n// You can also add tables row-by-row\nt.Row(\"English\", \"You look absolutely fabulous.\", \"How's it going?\")\n```\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println(t)\n```\n\n----------------------------------------\n\nTITLE: Installing Promtail via Homebrew\nDESCRIPTION: Commands for installing Promtail using Homebrew package manager on MacOS.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/installation.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nbrew update\n```\n\nLANGUAGE: bash\nCODE:\n```\nbrew install promtail\n```\n\nLANGUAGE: bash\nCODE:\n```\nwhich promtail\n```\n\nLANGUAGE: bash\nCODE:\n```\npromtail\n```\n\n----------------------------------------\n\nTITLE: Creating .htpasswd File for Basic Authentication\nDESCRIPTION: Command to create an .htpasswd file with username and password for Loki basic authentication. This will prompt for password entry.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhtpasswd -c .htpasswd <username>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Retention Period in YAML\nDESCRIPTION: YAML configuration for specifying a custom retention period in Loki's limits configuration. Shows how to set the retention period to 744 hours.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  retention_period: 744h\n```\n\n----------------------------------------\n\nTITLE: Using 'ignoring' Keyword in LogQL\nDESCRIPTION: Demonstrates the use of the 'ignoring' keyword to compare machine-specific log counts to the overall average in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_10\n\nLANGUAGE: logql\nCODE:\n```\nmax by(machine) (count_over_time({app=\"foo\"}[1m])) > bool ignoring(machine) avg(count_over_time({app=\"foo\"}[1m]))\n```\n\n----------------------------------------\n\nTITLE: Multiple Parser Combination\nDESCRIPTION: Example showing how to combine multiple parsers (logfmt and regexp) to extract method and path from log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"loki-ops/query-frontend\"} | logfmt | line_format \"{{.msg}}\" | regexp \"(?P<method>\\\\w+) (?P<path>[\\\\w|/]+) \\\\((?P<status>\\\\d+?)\\\\) (?P<duration>.*)\"\n```\n\n----------------------------------------\n\nTITLE: File Discovery Configuration in Promtail\nDESCRIPTION: Example of file discovery configuration in Promtail using file_sd_configs. It demonstrates how to define targets for scraping apt and dpkg logs, including the use of glob patterns for matching multiple log files.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n - job_name: apt-dpkg\n    file_sd_configs:\n      - files:\n        - /etc/promtail/dpkg-apt.yaml\n    refresh_interval: 5m\n```\n\nLANGUAGE: yaml\nCODE:\n```\n- targets: [\"localhost\"]\n  labels:\n    job: dpkg\n    __path__: /var/log/dpkg.log\n- targets: [\"localhost\"]\n  labels:\n    job: apt\n    __path__: /var/log/apt/*.log\n```\n\n----------------------------------------\n\nTITLE: Using Logrus as an IO Writer\nDESCRIPTION: Shows how to use Logrus as an io.Writer, allowing it to be used with the standard library's HTTP server for error logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nw := logger.Writer()\ndefer w.Close()\n\nsrv := http.Server{\n    // create a stdlib log.Logger that writes to\n    // logrus.Logger.\n    ErrorLog: log.New(w, \"\", 0),\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Loki Gateway Service using kubectl\nDESCRIPTION: A kubectl command to list services in the loki namespace to locate the Loki Gateway service that exposes Loki to the internet.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc -n loki\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry Collector Service Pipeline Configuration\nDESCRIPTION: Pipeline configuration to enable the OTLP HTTP exporter in the OpenTelemetry Collector.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  pipelines:\n    logs:\n      receivers: [...]\n      processors: [...]\n      exporters: [..., otlphttp]\n```\n\n----------------------------------------\n\nTITLE: Defining RulerSpec Struct in Go\nDESCRIPTION: Defines the RulerSpec struct for configuring Loki ruler behavior. It includes fields for evaluation interval, poll interval, alert manager configuration, and remote write specification.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// RulerSpec defines the desired state of Ruler\ntype RulerSpec struct {\n    // Interval on how frequently to evaluate rules.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1m\"\n    EvalutionInterval LokiDuration `json:\"evaluationInterval\"`\n\n    // Interval on how frequently to poll for new rule definitions.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1m\"\n    PollInterval LokiDuration `json:\"pollInterval\"`\n\n    // Defines alert manager configuration to notify on firing alerts.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"Alert Manager Configuration\"\n    AlertManagerSpec *AlertManagerSpec `json:\"alertmanager,omitempty\"`\n\n    // Defines a remote write endpoint to write recording rule metrics.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"Remote Write Configuration\"\n    RemoteWriteSpec *RemoteWriteSpec `json:\"remoteWrite,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Pattern Matching with regexp2 in Go\nDESCRIPTION: Demonstrates basic pattern matching using regexp2 library with MustCompile and MatchString methods. Shows how to compile a regex pattern and check if a string matches it.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dlclark/regexp2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nre := regexp2.MustCompile(`Your pattern`, 0)\nif isMatch, _ := re.MatchString(`Something to match`); isMatch {\n    //do something\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail for Static Log Files in YAML\nDESCRIPTION: A basic Promtail configuration for tailing static log files on VMs or bare metal. It sets up server ports, positions tracking, and a client connection to Loki. The scrape_config uses static_configs to target log files with pattern matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_51\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /var/log/positions.yaml # This location needs to be writeable by Promtail.\n\nclients:\n  - url: http://ip_or_hostname_where_Loki_run:3100/loki/api/v1/push\n\nscrape_configs:\n - job_name: system\n   pipeline_stages:\n   static_configs:\n   - labels:\n      job: varlogs  # A `job` label is fairly standard in prometheus and useful for linking metrics and logs.\n      host: yourhost # A `host` label will help identify logs from this machine vs others\n      __path__: /var/log/*.log  # The path matching uses a third party library: https://github.com/bmatcuk/doublestar\n```\n\n----------------------------------------\n\nTITLE: Query Range Response Format\nDESCRIPTION: JSON response format for query_range endpoint showing the structure for both matrix and stream result types.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"resultType\": \"matrix\" | \"streams\",\n    \"result\": [<matrix value>] | [<stream value>]\n    \"stats\" : [<statistics>]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Capturing HTTP Metrics with httpsnoop in Go\nDESCRIPTION: This snippet demonstrates how to use httpsnoop to wrap an existing HTTP handler and log metrics for each request. It captures the HTTP method, URL, status code, duration, and bytes written.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/felixge/httpsnoop/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// myH is your app's http handler, perhaps a http.ServeMux or similar.\nvar myH http.Handler\n// wrappedH wraps myH in order to log every request.\nwrappedH := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\tm := httpsnoop.CaptureMetrics(myH, w, r)\n\tlog.Printf(\n\t\t\"%s %s (code=%d dt=%s written=%d)\",\n\t\tr.Method,\n\t\tr.URL,\n\t\tm.Code,\n\t\tm.Duration,\n\t\tm.Written,\n\t)\n})\nhttp.ListenAndServe(\":8080\", wrappedH)\n```\n\n----------------------------------------\n\nTITLE: ULID Generation Example in Go\nDESCRIPTION: Example demonstrating how to generate a ULID using a timestamp and entropy source. Shows usage with a monotonic random number generator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oklog/ulid/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc ExampleULID() {\n\tt := time.Unix(1000000, 0)\n\tentropy := ulid.Monotonic(rand.New(rand.NewSource(t.UnixNano())), 0)\n\tfmt.Println(ulid.MustNew(ulid.Timestamp(t), entropy))\n\t// Output: 0000XSNJG0MQJHBF4QX1EFD6Y3\n}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Helm Repository Addition\nDESCRIPTION: Command to add the Fluent Bit Helm repository for Kubernetes deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add fluent https://fluent.github.io/helm-charts\n```\n\n----------------------------------------\n\nTITLE: Basic Storage Index Cache Configuration\nDESCRIPTION: YAML configuration block for Loki's index cache and query settings, including cache config, parallel processing limits, and object storage integration options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_69\n\nLANGUAGE: yaml\nCODE:\n```\nindex_queries_cache_config: <cache_config>\ndisable_broad_index_queries: <boolean> | default = false\nmax_parallel_get_chunk: <int> | default = 150\nuse_thanos_objstore: <boolean> | default = false\nmax_chunk_batch_size: <int> | default = 50\n```\n\n----------------------------------------\n\nTITLE: Installing Bundler for Loki Logstash Plugin\nDESCRIPTION: Command to install the specific version of Bundler required for the Loki Logstash output plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngem install bundler:2.1.4\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki Deployment in Kubernetes\nDESCRIPTION: Command to check if the Loki pods are running correctly in the dedicated namespace.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n loki\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Schema for Parquet Writers\nDESCRIPTION: Example showing how to explicitly declare a Parquet schema when creating a writer, which is useful when the application needs to ensure data adheres to a predefined schema.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nschema := parquet.SchemaOf(new(RowType))\nwriter := parquet.NewGenericWriter[any](output, schema)\n...\n```\n\n----------------------------------------\n\nTITLE: Inspecting Promtail Pipeline Stages with Bash\nDESCRIPTION: Demonstrates how to use Promtail's inspection mode to output changes to log entries at each pipeline stage. This is useful for debugging pipeline configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncat my.log | promtail --stdin --dry-run --inspect --client.url http://127.0.0.1:3100/loki/api/v1/push\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Storage Client for Grafana Loki using YAML\nDESCRIPTION: This snippet demonstrates the configuration for an Azure storage client in Grafana Loki using Thanos-based object storage. It includes settings for account name, account key, and container name.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/thanos-storage-configs.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    azure:\n      account_name: myaccount\n      account_key: ${SECRET_ACCESS_KEY} # loki expands environment variables\n      container_name: example-container\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC for Log Forwarding\nDESCRIPTION: YAML configuration for creating ClusterRole and ClusterRoleBinding to authorize log forwarding to different tenants.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: lokistack-dev-tenant-logs\nrules:\n- apiGroups:\n  - 'loki.grafana.com'\n  resources:\n  - application\n  - infrastructure\n  - audit\n  resourceNames:\n  - logs\n  verbs:\n  - 'create'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: lokistack-dev-tenant-logs\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: lokistack-dev-tenant-logs\nsubjects:\n- kind: ServiceAccount\n  name: logcollector\n  namespace: openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Generating Protobuf Code for HTTP-gRPC Service\nDESCRIPTION: Command to regenerate protobuf code from the httpgrpc.proto definition file using the protoc compiler with gRPC plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/httpgrpc/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nprotoc -I ./ --go_out=plugins=grpc:./ ./httpgrpc.proto\n```\n\n----------------------------------------\n\nTITLE: Comparing Loki Configurations Between Versions\nDESCRIPTION: This bash script compares the configuration output of two different Loki versions using Docker. It helps identify changes in the internal config struct used to run Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport OLD_LOKI=2.9.4\nexport NEW_LOKI=3.0.0\nexport CONFIG_FILE=local-config.yaml\ndiff --color=always --side-by-side <(docker run --rm -t -v \"${PWD}\":/config grafana/loki:${OLD_LOKI} -config.file=/etc/loki/${CONFIG_FILE} -print-config-stderr 2>&1 | sed '/Starting Loki/q' | tr -d '\\r') <(docker run --rm -t -v \"${PWD}\":/config grafana/loki:${NEW_LOKI} -config.file=/etc/loki/${CONFIG_FILE} -print-config-stderr 2>&1 | sed '/Starting Loki/q' | tr -d '\\r') | less -R\n```\n\n----------------------------------------\n\nTITLE: Basic Fluentd Loki Output Configuration\nDESCRIPTION: Basic configuration for the Loki output plugin in Fluentd, including authentication and buffer settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentd/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: conf\nCODE:\n```\n<match **>\n  @type loki\n  url \"https://logs-prod-us-central1.grafana.net\"\n  username \"#{ENV['LOKI_USERNAME']}\"\n  password \"#{ENV['LOKI_PASSWORD']}\"\n  extra_labels {\"env\":\"dev\"}\n  <buffer>\n    flush_interval 10s\n    flush_at_shutdown true\n  </buffer>\n  buffer_chunk_limit 1m\n</match>\n```\n\n----------------------------------------\n\nTITLE: Prepending Application Name to Log Line with 'template' Stage in YAML\nDESCRIPTION: Shows how to use the special 'Entry' key to prepend the application name to the log line in the 'template' stage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: message\n    template: '{{.app }}: {{ .Entry }}'\n- output:\n    source: message\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki 3.0 Configuration Compatibility\nDESCRIPTION: This Docker command verifies if an existing Loki configuration file is compatible with Loki 3.0. It mounts the current directory and runs the configuration verification.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --rm -t -v \"${PWD}\":/config grafana/loki:3.0.0 -config.file=/config/loki-config.yaml -verify-config=true\n```\n\n----------------------------------------\n\nTITLE: Basic approx_topk Function Syntax in LogQL\nDESCRIPTION: Shows the basic syntax for the approx_topk function which takes a k parameter and a vector expression as arguments. Used for probabilistic approximation of topk queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/metric_queries.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\napprox_topk(k, <vector expression>)\n```\n\n----------------------------------------\n\nTITLE: Implementing User-Defined Types in Go for Lua\nDESCRIPTION: Demonstrates how to extend GopherLua with new types written in Go. This example creates a 'Person' type with methods that can be used from Lua, showing registration, constructor, and method implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\ntype Person struct {\n    Name string\n}\n\nconst luaPersonTypeName = \"person\"\n\n// Registers my person type to given L.\nfunc registerPersonType(L *lua.LState) {\n    mt := L.NewTypeMetatable(luaPersonTypeName)\n    L.SetGlobal(\"person\", mt)\n    // static attributes\n    L.SetField(mt, \"new\", L.NewFunction(newPerson))\n    // methods\n    L.SetField(mt, \"__index\", L.SetFuncs(L.NewTable(), personMethods))\n}\n\n// Constructor\nfunc newPerson(L *lua.LState) int {\n    person := &Person{L.CheckString(1)}\n    ud := L.NewUserData()\n    ud.Value = person\n    L.SetMetatable(ud, L.GetTypeMetatable(luaPersonTypeName))\n    L.Push(ud)\n    return 1\n}\n\n// Checks whether the first lua argument is a *LUserData with *Person and returns this *Person.\nfunc checkPerson(L *lua.LState) *Person {\n    ud := L.CheckUserData(1)\n    if v, ok := ud.Value.(*Person); ok {\n        return v\n    }\n    L.ArgError(1, \"person expected\")\n    return nil\n}\n\nvar personMethods = map[string]lua.LGFunction{\n    \"name\": personGetSetName,\n}\n\n// Getter and setter for the Person#Name\nfunc personGetSetName(L *lua.LState) int {\n    p := checkPerson(L)\n    if L.GetTop() == 2 {\n        p.Name = L.CheckString(2)\n        return 0\n    }\n    L.Push(lua.LString(p.Name))\n    return 1\n}\n\nfunc main() {\n    L := lua.NewState()\n    defer L.Close()\n    registerPersonType(L)\n    if err := L.DoString(`\n        p = person.new(\"Steeve\")\n        print(p:name()) -- \"Steeve\"\n        p:name(\"Alice\")\n        print(p:name()) -- \"Alice\"\n    `); err != nil {\n        panic(err)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Upgrade Commands for Scalable Mode\nDESCRIPTION: Console commands for upgrading from grafana/loki-simple-scalable chart to v3.0.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-from-2x/index.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nhelm repo update grafana\nhelm upgrade loki grafana/loki \\\n  --values values.yaml \\\n  --namespace loki\n```\n\n----------------------------------------\n\nTITLE: Installing Loki with Docker Compose\nDESCRIPTION: Commands to download and run Loki using Docker Compose configuration\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/docker.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/grafana/loki/v3.4.1/production/docker-compose.yaml -O docker-compose.yaml\ndocker-compose -f docker-compose.yaml up\n```\n\n----------------------------------------\n\nTITLE: Date and Time Manipulation in LogQL Templates\nDESCRIPTION: Shows various date and time manipulation functions available in LogQL template expressions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{ date \"2006-01-02\" now }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | duration }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ duration .foo }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | duration_seconds }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ duration_seconds .foo }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ now }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ toDate \"2006-01-02\" \"2021-11-02\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | toDate \"2006-01-02T15:04:05.999999999Z\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ toDateInZone \"2006-01-02\" \"UTC\" \"2021-11-02\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | toDateInZone \"2006-01-02T15:04:05.999999999Z\" \"UTC\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ unixEpoch now }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | toDateInZone \"2006-01-02T15:04:05.999999999Z\" \"UTC\" | unixEpoch }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ unixEpochMillis now }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | toDateInZone \"2006-01-02T15:04:05.999999999Z\" \"UTC\" | unixEpochMillis }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ unixEpochNanos now }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ .foo | toDateInZone \"2006-01-02T15:04:05.999999999Z\" \"UTC\" | unixEpochNanos }}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Ingester Block Structure in Loki\nDESCRIPTION: ASCII diagram showing the structure of blocks in Loki's ingester memory and when stored as chunks. It illustrates how data flows from compressed blocks and uncompressed head blocks into storage chunks.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/2021-01-Ordering-Constraint-Removal.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFigure 1\n\n    Data while being buffered in Ingester          |                                Chunk in storage\n                                                   |\n    Blocks                    Head                 |       ---------------------------------------------------------------------\n                                                   |       |   ts0   ts1    ts2   ts3    ts4   ts5    ts6   ts7    ts8    ts9  |\n--------------           ----------------          |       |   ---------    ---------    ---------    ---------    ---------   |\n|    blocks  |--         |  head block  |          |       |   |block 0|    |block 1|    |block 2|    |block 4|    |block 5|   |\n|(compressed)| |         |(uncompressed)|          |       |   |       |    |       |    |       |    |       |    |       |   |\n|            | | ------> |              |          |       |   ---------    ---------    ---------    ---------    ---------   |\n|            | |         |              |          |       |                                                                   |\n-------------- |         ----------------          |       ---------------------------------------------------------------------\n  |            |                                   |\n  --------------                                   |\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Service Discovery in Promtail\nDESCRIPTION: Complete configuration for Docker service discovery in Promtail. This allows retrieving targets from a Docker daemon for log collection. Includes settings for host connection, filtering, authentication, and refresh intervals.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_45\n\nLANGUAGE: yaml\nCODE:\n```\n# Address of the Docker daemon.  Use unix:///var/run/docker.sock for a local setup.\nhost: <string>\n\n# Optional proxy URL.\n[ proxy_url: <string> ]\n\n# TLS configuration.\ntls_config:\n  [ <tls_config> ]\n\n# The port to scrape metrics from, when `role` is nodes, and for discovered\n# tasks and services that don't have published ports.\n[ port: <int> | default = 80 ]\n\n# The host to use if the container is in host networking mode.\n[ host_networking_host: <string> | default = \"localhost\" ]\n\n# Sort all non-nil networks in ascending order based on network name and\n# get the first network if the container has multiple networks defined, \n# thus avoiding collecting duplicate targets.\n[ match_first_network: <bool> | default = true ]\n\n# Optional filters to limit the discovery process to a subset of available\n# resources.\n# The available filters are listed in the Docker documentation:\n# Containers: https://docs.docker.com/engine/api/v1.41/#operation/ContainerList\n[ filters:\n  [ - name: <string>\n      values: <string>, [...] ]\n]\n\n# The time after which the containers are refreshed.\n[ refresh_interval: <duration> | default = 60s ]\n\n# Authentication information used by Promtail to authenticate itself to the\n# Docker daemon.\n# Note that `basic_auth` and `authorization` options are mutually exclusive.\n# `password` and `password_file` are mutually exclusive.\n\n# Optional HTTP basic authentication information.\nbasic_auth:\n  [ username: <string> ]\n  [ password: <secret> ]\n  [ password_file: <string> ]\n\n# Optional `Authorization` header configuration.\nauthorization:\n  # Sets the authentication type.\n  [ type: <string> | default: Bearer ]\n  # Sets the credentials. It is mutually exclusive with\n  # `credentials_file`.\n  [ credentials: <secret> ]\n  # Sets the credentials to the credentials read from the configured file.\n  # It is mutually exclusive with `credentials`.\n  [ credentials_file: <filename> ]\n\n# Optional OAuth 2.0 configuration.\n# Cannot be used at the same time as basic_auth or authorization.\noauth2:\n  [ <oauth2> ]\n\n# Configure whether HTTP requests follow HTTP 3xx redirects.\n[ follow_redirects: <bool> | default = true ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Grafana Alloy for Loki Log Ingestion\nDESCRIPTION: This snippet demonstrates how to configure Grafana Alloy to send logs to Loki. It includes file matching, label addition, and relabeling stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: alloy\nCODE:\n```\nlocal.file_match \"tmplogs\" {\n    path_targets = [{\"__path__\" = \"/tmp/alloy-logs/*.log\"}]\n}\n\nloki.source.file \"local_files\" {\n    targets    = local.file_match.tmplogs.targets\n    forward_to = [loki.process.add_new_label.receiver]\n}\n\nloki.process \"add_new_label\" {\n    stage.logfmt {\n        mapping = {\n            \"extracted_level\" = \"level\",\n        }\n    }\n\n    stage.labels {\n        values = {\n            \"level\" = \"extracted_level\",\n        }\n    }\n\n    forward_to = [loki.relabel.add_static_label.receiver]\n}\n\nloki.relabel \"add_static_label\" {\n    forward_to = [loki.write.local_loki.receiver]\n\n    rule {\n        target_label = \"os\"\n        replacement  = constants.os\n    }\n}\n\nloki.write \"local_loki\" {\n    endpoint {\n        url = \"http://localhost:3100/loki/api/v1/push\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating AWS S3 Object Storage Secret for Loki\nDESCRIPTION: Command to create a Kubernetes secret for AWS S3 storage authentication. This secret contains the bucket name, endpoint, access credentials, and region information needed for Loki to connect to S3.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-s3 \\\n  --from-literal=bucketnames=\"<BUCKET_NAME>\" \\\n  --from-literal=endpoint=\"<AWS_BUCKET_ENDPOINT>\" \\\n  --from-literal=access_key_id=\"<AWS_ACCESS_KEY_ID>\" \\\n  --from-literal=access_key_secret=\"<AWS_ACCESS_KEY_SECRET>\" \\\n  --from-literal=region=\"<AWS_REGION_YOUR_BUCKET_LIVES_IN>\"\n```\n\n----------------------------------------\n\nTITLE: Basic Kingpin Usage for Simple CLI Applications in Go\nDESCRIPTION: A simple example of using Kingpin to create a basic command-line application that pings an IP address. It demonstrates flag definitions, required arguments, and basic command-line parsing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n  \"fmt\"\n\n  \"github.com/alecthomas/kingpin/v2\"\n)\n\nvar (\n  debug   = kingpin.Flag(\"debug\", \"Enable debug mode.\").Bool()\n  timeout = kingpin.Flag(\"timeout\", \"Timeout waiting for ping.\").Default(\"5s\").Envar(\"PING_TIMEOUT\").Short('t').Duration()\n  ip      = kingpin.Arg(\"ip\", \"IP address to ping.\").Required().IP()\n  count   = kingpin.Arg(\"count\", \"Number of packets to send\").Int()\n)\n\nfunc main() {\n  kingpin.Version(\"0.0.1\")\n  kingpin.Parse()\n  fmt.Printf(\"Would ping: %s with timeout %s and count %d\\n\", *ip, *timeout, *count)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Logger with go-hclog in Go\nDESCRIPTION: Shows how to create a new logger instance with custom name and log level using go-hclog.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nappLogger := hclog.New(&hclog.LoggerOptions{\n\tName:  \"my-app\",\n\tLevel: hclog.LevelFromString(\"DEBUG\"),\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Replica Loki Deployment in YAML\nDESCRIPTION: YAML configuration for deploying multiple replicas of Loki using the Helm chart. This setup includes Loki with 3 replicas, Loki Canary, Loki Gateway, and MinIO for object storage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  commonConfig:\n    replication_factor: 3\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  pattern_ingester:\n      enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n  ruler:\n    enable_api: true\n\nminio:\n  enabled: true\n      \ndeploymentMode: SingleBinary\n\nsingleBinary:\n  replicas: 3\n\n# Zero out replica counts of other deployment modes\nbackend:\n  replicas: 0\nread:\n  replicas: 0\nwrite:\n  replicas: 0\n\ningester:\n  replicas: 0\nquerier:\n  replicas: 0\nqueryFrontend:\n  replicas: 0\nqueryScheduler:\n  replicas: 0\ndistributor:\n  replicas: 0\ncompactor:\n  replicas: 0\nindexGateway:\n  replicas: 0\nbloomCompactor:\n  replicas: 0\nbloomGateway:\n  replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Index Queries Cache\nDESCRIPTION: This YAML configuration snippet shows how to configure the index queries cache in Loki's configuration file. It specifies the Memcached host, service, and caching parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  index_queries_cache_config:\n    memcached:\n      batch_size: 100\n      parallelism: 100\n    memcached_client:\n      host: <memcached host>\n      service: <port name of memcached service>\n      consistent_hash: true\n```\n\n----------------------------------------\n\nTITLE: Supporting Go standard library flags alongside pflag\nDESCRIPTION: Shows how to integrate flags defined using Go's standard flag package with pflag. This is useful for supporting third-party libraries that use the standard flag package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\tgoflag \"flag\"\n\tflag \"github.com/spf13/pflag\"\n)\n\nvar ip *int = flag.Int(\"flagname\", 1234, \"help message for flagname\")\n\nfunc main() {\n\tflag.CommandLine.AddGoFlagSet(goflag.CommandLine)\n\tflag.Parse()\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler\nDESCRIPTION: Configuration block for the Loki ruler component which evaluates alert rules. Includes settings for rule evaluation intervals, Grafana integration, and client communication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_58\n\nLANGUAGE: yaml\nCODE:\n```\n# Base URL of the Grafana instance.\n# CLI flag: -ruler.external.url\n[external_url: <url>]\n\n# Datasource UID for the dashboard.\n# CLI flag: -ruler.datasource-uid\n[datasource_uid: <string> | default = \"\"]\n\n# Labels to add to all alerts.\n[external_labels: <list of Labels>]\n\n# The grpc_client block configures the gRPC client used to communicate between a\n# client and server component in Loki.\n# The CLI flags prefix for this block configuration is: ruler.client\n[ruler_client: <grpc_client>]\n\n# How frequently to evaluate rules.\n# CLI flag: -ruler.evaluation-interval\n[evaluation_interval: <duration> | default = 1m]\n\n# How frequently to poll for rule changes.\n# CLI flag: -ruler.poll-interval\n[poll_interval: <duration> | default = 1m]\n\n# Deprecated: Use -ruler-storage. CLI flags and their respective YAML config\n```\n\n----------------------------------------\n\nTITLE: Certificate-Based Authentication in Go\nDESCRIPTION: Implementation of certificate-based authentication for acquiring an access token using a PKCS12 certificate\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ncertificatePath := \"./example-app.pfx\"\n\ncertData, err := os.ReadFile(certificatePath)\nif err != nil {\n\treturn nil, fmt.Errorf(\"failed to read the certificate file (%s): %v\", certificatePath, err)\n}\n\n// Get the certificate and private key from pfx file\ncertificate, rsaPrivateKey, err := decodePkcs12(certData, \"\")\nif err != nil {\n\treturn nil, fmt.Errorf(\"failed to decode pkcs12 certificate while creating spt: %v\", err)\n}\n\nspt, err := adal.NewServicePrincipalTokenFromCertificate(\n\t*oauthConfig,\n\tapplicationID,\n\tcertificate,\n\trsaPrivateKey,\n\tresource,\n\tcallbacks...)\n\n// Acquire a new access token\nerr  = spt.Refresh()\nif (err == nil) {\n    token := spt.Token\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Table Manager for Database Retention in Loki\nDESCRIPTION: Configuration options for the Loki table manager which handles database retention and capacity management. These settings control table retention periods and polling intervals.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_76\n\nLANGUAGE: yaml\nCODE:\n```\n# If true, disable all changes to DB capacity\n# CLI flag: -table-manager.throughput-updates-disabled\n[throughput_updates_disabled: <boolean> | default = false]\n\n# If true, enables retention deletes of DB tables\n# CLI flag: -table-manager.retention-deletes-enabled\n[retention_deletes_enabled: <boolean> | default = false]\n\n# Tables older than this retention period are deleted. Must be either 0\n# (disabled) or a multiple of 24h. When enabled, be aware this setting is\n# destructive to data!\n# CLI flag: -table-manager.retention-period\n[retention_period: <duration> | default = 0s]\n\n# How frequently to poll backend to learn our capacity.\n# CLI flag: -table-manager.poll-interval\n[poll_interval: <duration> | default = 2m]\n\n# Periodic tables grace period (duration which table will be created/deleted\n# before/after it's needed).\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Push API Server in Promtail (YAML)\nDESCRIPTION: This YAML block configures Promtail to expose a Loki push API server. It includes options for server configuration, label management, and timestamp handling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\n[server: <server_config>]\n\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n\n[use_incoming_timestamp: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail for Loki Integration (YAML)\nDESCRIPTION: This YAML configuration sets up Promtail to listen on specific ports, define client connections to Loki, and configure log scraping with label management. It's designed to work with AWS CloudWatch logs and includes relabeling for log types, groups, and load balancer names.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n\npositions:\n  filename: /tmp/positions.yaml\n\nclients:\n  - url: http://ip_or_hostname_where_Loki_run:3100/loki/api/v1/push\n\nscrape_configs:\n  - job_name: push1\n    loki_push_api:\n      server:\n        http_listen_port: 3500\n        grpc_listen_port: 3600\n      labels:\n        # Adds a label on all streams indicating it was processed by the lambda-promtail workflow.\n        promtail: 'lambda-promtail'\n    relabel_configs:\n      - source_labels: ['__aws_log_type']\n        target_label: 'log_type'\n      # Maps the cloudwatch log group into a label called `log_group` for use in Loki.\n      - source_labels: ['__aws_cloudwatch_log_group']\n        target_label: 'log_group'\n      # Maps the loadbalancer name into a label called `loadbalancer_name` for use in Loki.\n      - source_labels: ['__aws_s3_log_lb']\n        target_label: 'loadbalancer_name'\n```\n\n----------------------------------------\n\nTITLE: Log Entry Parsing Pipeline Configuration\nDESCRIPTION: Example pipeline configuration that demonstrates parsing JSON log entries to extract stream and traceID values into structured metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/structured_metadata.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      stream: stream\n      traceID: traceID\n- labels:\n    stream:\n- structured_metadata:\n    traceID:\n```\n\n----------------------------------------\n\nTITLE: Configuring Fluent Bit for Docker Container Logs\nDESCRIPTION: This configuration file sets up Fluent Bit to collect logs from Docker containers and forward them to a Loki instance. It defines the input source, parsing method, and output destination.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\n[SERVICE]\n    Flush        1\n    Log_Level    info\n\n[INPUT]\n    Name     tail\n    Path     /var/lib/docker/containers/*/*.log\n    Parser   docker\n    Tag      docker.*\n\n[OUTPUT]\n    Name         grafana-loki\n    Match        *\n    Url          http://localhost:3100/loki/api/v1/push\n    Labels       {job=\"fluentbit\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Journal Scraping in Promtail (YAML)\nDESCRIPTION: This configuration shows how to set up Promtail for scraping systemd journal logs on Linux systems. It includes options for filtering journal entries, setting maximum age, and relabeling systemd-specific fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  - job_name: journal\n    journal:\n      json: false\n      max_age: 12h\n      path: /var/log/journal\n      matches: _TRANSPORT=kernel\n      labels:\n        job: systemd-journal\n    relabel_configs:\n      - source_labels: ['__journal__systemd_unit']\n        target_label: 'unit'\n```\n\n----------------------------------------\n\nTITLE: Piping Data to Promtail with Additional Labels\nDESCRIPTION: Shows how to pipe log data to Promtail and add additional labels from the command line. This is useful for testing and troubleshooting Promtail configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat my.log | promtail --stdin  --client.url http://127.0.0.1:3100/loki/api/v1/push --client.external-labels=k1=v1,k2=v2\n```\n\n----------------------------------------\n\nTITLE: Running Stream Generator with Custom Settings\nDESCRIPTION: Comprehensive example of running the Stream Generator with custom configuration options, including Kafka and ring settings.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/stream-generator/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 9091:9090 \\\n  grafana/stream-generator \\\n  --tenants.total=5 \\\n  --tenants.streams.total=1000 \\\n  --tenants.qps=100 \\\n  --http-listen-port=3100 \\\n  --kafka.address=kafka-1:9092 \\\n  --kafka.topic=loki \\\n  --kafka.client-id=stream-meta-gen-1 \\\n  --kafka.sasl.enabled=true \\\n  --kafka.sasl.mechanism=PLAIN \\\n  --kafka.sasl.username=loki \\\n  --kafka.sasl.password=secret123 \\\n  --stream-metadata-generator.store=consul \\\n  --stream-metadata-generator.replication-factor=3 \\\n  --stream-metadata-generator.kvstore.consul.hostname=consul:8500\n```\n\n----------------------------------------\n\nTITLE: Defining Model Structure for Bubble Tea Application\nDESCRIPTION: Defines the model struct that represents the application state. It includes fields for choices, cursor position, and selected items.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype model struct {\n    choices  []string           // items on the to-do list\n    cursor   int                // which to-do list item our cursor is pointing at\n    selected map[int]struct{}   // which to-do items are selected\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Fluentd-Loki\nDESCRIPTION: Docker Compose configuration for setting up Fluentd with Loki plugin, including volume mounts and environment variables.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentd/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  fluentd:\n    image: grafana/fluent-plugin-loki:main\n    command:\n      - \"fluentd\"\n      - \"-v\"\n      - \"-p\"\n      - \"/fluentd/plugins\"\n    environment:\n      LOKI_URL: http://loki:3100\n      LOKI_USERNAME:\n      LOKI_PASSWORD:\n    deploy:\n      mode: global\n    configs:\n      - source: loki_config\n        target: /fluentd/etc/loki/loki.conf\n    networks:\n      - loki\n    volumes:\n      - host_logs:/var/log\n      # Needed for journald log ingestion:\n      - /etc/machine-id:/etc/machine-id\n      - /dev/log:/dev/log\n      - /var/run/systemd/journal/:/var/run/systemd/journal/\n    logging:\n      options:\n         tag: infra.monitoring\n```\n\n----------------------------------------\n\nTITLE: Configuring Complex Promtail Pipeline with Match Stages\nDESCRIPTION: Demonstrates a complex Promtail pipeline configuration using multiple match stages for different log processing scenarios, including JSON parsing, labeling, and conditional dropping of log entries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/match.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n- json:\n    expressions:\n      app:\n- labels:\n    app:\n- match:\n    selector: '{app=\"loki\"}'\n    stages:\n    - json:\n        expressions:\n          msg: message\n- match:\n    pipeline_name: \"app2\"\n    selector: '{app=\"pokey\"}'\n    action: keep\n    stages:\n    - json:\n        expressions:\n          msg: msg\n- match:\n    selector: '{app=\"promtail\"} |~ \".*noisy error.*\"'\n    action: drop\n    drop_counter_reason: promtail_noisy_error\n- output:\n    source: msg\n```\n\n----------------------------------------\n\nTITLE: Migrating Tenant ID Within a Loki Cluster\nDESCRIPTION: Example command for changing a tenant ID within the same Loki cluster. Uses the same configuration file for source and destination but different tenant IDs, along with a specified time range.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/migrate/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmigrate -source.config.file=/etc/loki-us-west1/config/config.yaml -dest.config.file=/etc/loki-us-west1/config/config.yaml -source.tenant=fake -dest.tenant=1 -from=2020-06-16T14:00:00-00:00 -to=2020-07-01T00:00:00-00:00\n```\n\n----------------------------------------\n\nTITLE: Configuring Regex Parsing Stage in YAML\nDESCRIPTION: Defines a stage for parsing log lines using regular expressions, extracting named capture groups for use in further stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nregex:\n  expression: <string>\n  [source: <string>]\n```\n\n----------------------------------------\n\nTITLE: Implementing a Histogram Metric for Response Times\nDESCRIPTION: Example of creating a histogram metric to track the distribution of HTTP response times.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- metrics:\n    http_response_time_seconds:\n      type: Histogram\n      description: \"distribution of log response time\"\n      source: response_time\n      config:\n        buckets: [0.001,0.0025,0.005,0.010,0.025,0.050]\n```\n\n----------------------------------------\n\nTITLE: Additional Sample LogQL Queries for Flog Data\nDESCRIPTION: More example LogQL queries for analyzing logs generated by the Flog sample data. These queries demonstrate filtering by HTTP methods and status codes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"}\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"} |= \"GET\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"} |= \"POST\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"} | json | status=\"401\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n{container=\"evaluate-loki-flog-1\"} != \"401\"\n```\n\n----------------------------------------\n\nTITLE: Depicting Loki Block Format in ASCII\nDESCRIPTION: This ASCII diagram illustrates the structure of a block within a Loki chunk. It shows how individual log entries are stored, including timestamps, lengths, and symbol references for structured metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/architecture.md#2025-04-19_snippet_1\n\nLANGUAGE: ascii\nCODE:\n```\n-----------------------------------------------------------------------------------------------------------------------------------------------\n|  ts (varint)  |  len (uvarint)  |  log-1 bytes  |  len(from #symbols)  |  #symbols (uvarint)  |  symbol-1 (uvarint)  | symbol-n*2 (uvarint) |\n-----------------------------------------------------------------------------------------------------------------------------------------------\n|  ts (varint)  |  len (uvarint)  |  log-2 bytes  |  len(from #symbols)  |  #symbols (uvarint)  |  symbol-1 (uvarint)  | symbol-n*2 (uvarint) |\n-----------------------------------------------------------------------------------------------------------------------------------------------\n|  ts (varint)  |  len (uvarint)  |  log-3 bytes  |  len(from #symbols)  |  #symbols (uvarint)  |  symbol-1 (uvarint)  | symbol-n*2 (uvarint) |\n-----------------------------------------------------------------------------------------------------------------------------------------------\n|  ts (varint)  |  len (uvarint)  |  log-n bytes  |  len(from #symbols)  |  #symbols (uvarint)  |  symbol-1 (uvarint)  | symbol-n*2 (uvarint) |\n-----------------------------------------------------------------------------------------------------------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Creating HTTP-compatible FileSystem with Afero (Go)\nDESCRIPTION: Sets up an HTTP-compatible filesystem backend that can wrap any existing Afero backend. This satisfies the http.FileSystem interface requirement for serving files over HTTP.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nhttpFs := afero.NewHttpFs(<ExistingFS>)\nfileserver := http.FileServer(httpFs.Dir(<PATH>))\nhttp.Handle(\"/\", fileserver)\n```\n\n----------------------------------------\n\nTITLE: Creating a flag alias using normalization function\nDESCRIPTION: Defines a normalization function that creates an alias between flag names. This enables backward compatibility when flag names change over time.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc aliasNormalizeFunc(f *pflag.FlagSet, name string) pflag.NormalizedName {\n\tswitch name {\n\tcase \"old-flag-name\":\n\t\tname = \"new-flag-name\"\n\t\tbreak\n\t}\n\treturn pflag.NormalizedName(name)\n}\n\nmyFlagSet.SetNormalizeFunc(aliasNormalizeFunc)\n```\n\n----------------------------------------\n\nTITLE: Encoding and Decoding YAML Data in Go\nDESCRIPTION: Example demonstrating how to marshal and unmarshal YAML data using structs and maps in Go. Shows struct tag usage for YAML field mapping and handling of nested data structures.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/yaml.v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n        \"fmt\"\n        \"log\"\n\n        \"gopkg.in/yaml.v2\"\n)\n\nvar data = `\na: Easy!\nb:\n  c: 2\n  d: [3, 4]\n`\n\n// Note: struct fields must be public in order for unmarshal to\n// correctly populate the data.\ntype T struct {\n        A string\n        B struct {\n                RenamedC int   `yaml:\"c\"`\n                D        []int `yaml:\",flow\"`\n        }\n}\n\nfunc main() {\n        t := T{}\n    \n        err := yaml.Unmarshal([]byte(data), &t)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- t:\\n%v\\n\\n\", t)\n    \n        d, err := yaml.Marshal(&t)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- t dump:\\n%s\\n\\n\", string(d))\n    \n        m := make(map[interface{}]interface{})\n    \n        err = yaml.Unmarshal([]byte(data), &m)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- m:\\n%v\\n\\n\", m)\n    \n        d, err = yaml.Marshal(&m)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- m dump:\\n%s\\n\\n\", string(d))\n}\n```\n\nLANGUAGE: text\nCODE:\n```\n--- t:\n{Easy! {2 [3 4]}}\n\n--- t dump:\na: Easy!\nb:\n  c: 2\n  d: [3, 4]\n\n\n--- m:\nmap[a:Easy! b:map[c:2 d:[3 4]]]\n\n--- m dump:\na: Easy!\nb:\n  c: 2\n  d:\n  - 3\n  - 4\n```\n\n----------------------------------------\n\nTITLE: Creating a RESTful WebService in Go\nDESCRIPTION: Demonstrates how to create a WebService, define a route, and implement a handler function for a user resource. Shows path definition, HTTP method specification, and parameter handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/emicklei/go-restful/v3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nws := new(restful.WebService)\nws.\n\tPath(\"/users\").\n\tConsumes(restful.MIME_XML, restful.MIME_JSON).\n\tProduces(restful.MIME_JSON, restful.MIME_XML)\n\nws.Route(ws.GET(\"/{user-id}\").To(u.findUser).\n\tDoc(\"get a user\").\n\tParam(ws.PathParameter(\"user-id\", \"identifier of the user\").DataType(\"string\")).\n\tWrites(User{}))\n...\n\nfunc (u UserResource) findUser(request *restful.Request, response *restful.Response) {\n\tid := request.PathParameter(\"user-id\")\n\t...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Compactor with Google Cloud Storage in YAML\nDESCRIPTION: This YAML configuration snippet demonstrates how to set up the Loki Compactor service with Google Cloud Storage. It specifies the working directory for the compactor and the GCS bucket name for storage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/boltdb-shipper.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncompactor:\n  working_directory: /loki/compactor\n\nstorage_config:\n  gcs:\n    bucket_name: GCS_BUCKET_NAME\n```\n\n----------------------------------------\n\nTITLE: Resizing In-Memory FIFO Caches in Loki\nDESCRIPTION: Configuration to resize the newly enabled in-memory FIFO caches for chunks and query results in Loki. This example sets both caches to a maximum size of 500MB.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nchunk_store_config:\n  chunk_cache_config:\n    enable_fifocache: true\n    fifocache:\n      max_size_bytes: 500MB\nquery_range:\n  results_cache:\n    cache:\n      enable_fifocache: true\n      fifocache:\n        max_size_bytes: 500MB\n```\n\n----------------------------------------\n\nTITLE: Using Afero's OsFs Backend in Go\nDESCRIPTION: This snippet shows how to use Afero's OsFs backend, which is a wrapper around native OS calls.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nappfs := afero.NewOsFs()\nappfs.MkdirAll(\"src/a\", 0755)\n```\n\n----------------------------------------\n\nTITLE: Downloading Alert Rules from Git (HCL)\nDESCRIPTION: HCL configuration using the 'artifact' stanza to download Loki alert rules from a Git repository. It specifies the source and destination for the rules.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\nartifact {\n  source      = \"git::github.com/<someorg>/<repo>//<subdirectory_with_loki_rules>\"\n  destination = \"local/rules/\"\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki Deployment\nDESCRIPTION: Command to check the status of Loki pods after deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-microservices/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n loki\n```\n\n----------------------------------------\n\nTITLE: Initializing Google Cloud Storage Client in Go\nDESCRIPTION: Creates a new Cloud Storage client that can be reused throughout the application. This client is the primary entry point for interacting with Google Cloud Storage services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/storage/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nclient, err := storage.NewClient(ctx)\nif err != nil {\n\tlog.Fatal(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Downsampling Colors in Go using Colorprofile\nDESCRIPTION: This snippet shows how to downsample colors to different profiles using the Colorprofile package. It demonstrates converting a color to the detected profile and manually converting to specific profiles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/colorprofile/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\np := colorprofile.Detect(os.Stdout, os.Environ())\nc := color.RGBA{0x6b, 0x50, 0xff, 0xff} // #6b50ff\n\n// Downsample to the detected profile, when necessary.\nconvertedColor := p.Convert(c)\n\n// Or manually convert to a given profile.\nansi256Color := colorprofile.ANSI256.Convert(c)\nansiColor := colorprofile.ANSI.Convert(c)\nnoColor := colorprofile.Ascii.Convert(c)\nnoANSI := colorprofile.NoTTY.Convert(c)\n```\n\n----------------------------------------\n\nTITLE: Calculating Minimum Querier Count in PromQL\nDESCRIPTION: A PromQL query to determine the minimum number of queriers needed based on average inflight requests over a 7-day period. It targets 75% utilization of worker capacity.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/autoscaling_queriers.md#2025-04-19_snippet_1\n\nLANGUAGE: promql\nCODE:\n```\nclamp_min(ceil(\n    avg(\n        avg_over_time(loki_query_scheduler_inflight_requests{namespace=\"loki-cluster\", quantile=\"0.75\"}[7d])\n    ) / scalar(floor(vector(6 * 0.75)))\n), 1)\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Structured Metadata\nDESCRIPTION: Basic Loki configuration to enable structured metadata for OTLP log ingestion.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  allow_structured_metadata: true\n```\n\n----------------------------------------\n\nTITLE: Using Structured Logger in Go\nDESCRIPTION: Example demonstrating the use of the high-performance Logger interface for critical performance scenarios. Shows strongly typed field logging with zero allocations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nlogger, _ := zap.NewProduction()\ndefer logger.Sync()\nlogger.Info(\"failed to fetch URL\",\n  // Structured context as strongly typed Field values.\n  zap.String(\"url\", url),\n  zap.Int(\"attempt\", 3),\n  zap.Duration(\"backoff\", time.Second),\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Authentication with HttpRouter in Go\nDESCRIPTION: This example shows how to add Basic Authentication (RFC 2617) to specific routes in HttpRouter. It creates a middleware wrapper function that checks credentials before delegating to the protected handler, returning a 401 Unauthorized response when authentication fails.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/julienschmidt/httprouter/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n\n\t\"github.com/julienschmidt/httprouter\"\n)\n\nfunc BasicAuth(h httprouter.Handle, requiredUser, requiredPassword string) httprouter.Handle {\n\treturn func(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {\n\t\t// Get the Basic Authentication credentials\n\t\tuser, password, hasAuth := r.BasicAuth()\n\n\t\tif hasAuth && user == requiredUser && password == requiredPassword {\n\t\t\t// Delegate request to the given handle\n\t\t\th(w, r, ps)\n\t\t} else {\n\t\t\t// Request Basic Authentication otherwise\n\t\t\tw.Header().Set(\"WWW-Authenticate\", \"Basic realm=Restricted\")\n\t\t\thttp.Error(w, http.StatusText(http.StatusUnauthorized), http.StatusUnauthorized)\n\t\t}\n\t}\n}\n\nfunc Index(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {\n\tfmt.Fprint(w, \"Not protected!\\n\")\n}\n\nfunc Protected(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {\n\tfmt.Fprint(w, \"Protected!\\n\")\n}\n\nfunc main() {\n\tuser := \"gordon\"\n\tpass := \"secret!\"\n\n\trouter := httprouter.New()\n\trouter.GET(\"/\", Index)\n\trouter.GET(\"/protected/\", BasicAuth(Protected, user, pass))\n\n\tlog.Fatal(http.ListenAndServe(\":8080\", router))\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Logrus Hooks in Go\nDESCRIPTION: Demonstrates how to configure Logrus hooks for sending logs to different destinations, including Airbrake for error tracking and Syslog for system logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  log \"github.com/sirupsen/logrus\"\n  \"gopkg.in/gemnasium/logrus-airbrake-hook.v2\" // the package is named \"airbrake\"\n  logrus_syslog \"github.com/sirupsen/logrus/hooks/syslog\"\n  \"log/syslog\"\n)\n\nfunc init() {\n\n  // Use the Airbrake hook to report errors that have Error severity or above to\n  // an exception tracker. You can create custom hooks, see the Hooks section.\n  log.AddHook(airbrake.NewHook(123, \"xyz\", \"production\"))\n\n  hook, err := logrus_syslog.NewSyslogHook(\"udp\", \"localhost:514\", syslog.LOG_INFO, \"\")\n  if err != nil {\n    log.Error(\"Unable to connect to local syslog daemon\")\n  } else {\n    log.AddHook(hook)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Regex Pipeline Stage Without Source in YAML\nDESCRIPTION: This example demonstrates how to configure the regex stage to parse a log line without specifying a source. It uses named capture groups to extract time, stream, flags, and content from the log message.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/regex.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^(?s)(?P<time>\\S+?) (?P<stream>stdout|stderr) (?P<flags>\\S+?) (?P<content>.*)$\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Self-Monitoring in Loki v6\nDESCRIPTION: Configuration settings to enable self-monitoring features in Loki v6.x, though this capability will be removed in future versions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-to-6x/index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmonitoring:\n  enabled: true\n  selfMonitoring:\n    enabled: true\n    grafanaAgent:\n      installOperator: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Recording Rules with Sample Limits in YAML\nDESCRIPTION: This YAML configuration demonstrates how to set up recording rules with sample limits. It includes an alerting rule and a recording rule within a group, with a limit of 10 samples.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ngroups:\n  - name: production_rules\n    limit: 10\n    interval: 1m\n    rules:\n      - alert: HighPercentageError\n        expr: |\n          sum(rate({app=\"foo\", env=\"production\"} |= \"error\" [5m])) by (job)\n            /\n          sum(rate({app=\"foo\", env=\"production\"}[5m])) by (job)\n            > 0.05\n        for: 10m\n        labels:\n          severity: page\n        annotations:\n          summary: High request latency\n      - record: nginx:requests:rate1m\n        expr: |\n          sum(\n            rate({container=\"nginx\"}[1m])\n          )\n        labels:\n          cluster: \"us-central1\"\n```\n\n----------------------------------------\n\nTITLE: Loki Log Stream\nDESCRIPTION: Timestamped log entries from Loki showing file target management, tailing operations, and error handling for multiple log files in a Kubernetes pod environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.314451491Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-8c9f94cf-4npds_48df0ae1-00a4-4c5f-9d89-8c55b50c08f4/hgrun/0.log to appear...\"\nts=2024-04-16T15:10:43.314350274Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-8c9f94cf-4npds_48df0ae1-00a4-4c5f-9d89-8c55b50c08f4/hgrun/0.log ...\"\nts=2024-04-16T15:10:43.308822084Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 94 on line 1: unexpected '\\\"'\"\n```\n\n----------------------------------------\n\nTITLE: Illustrating Loki Chunk Format in ASCII\nDESCRIPTION: This ASCII diagram details the structure of a chunk in Loki, including metadata, labels, blocks, and checksums. It shows how log data is organized and stored within the chunk format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/architecture.md#2025-04-19_snippet_0\n\nLANGUAGE: ascii\nCODE:\n```\n----------------------------------------------------------------------------\n|                        |                       |                         |\n|     MagicNumber(4b)    |     version(1b)       |      encoding (1b)      |\n|                        |                       |                         |\n----------------------------------------------------------------------------\n|                      #structuredMetadata (uvarint)                       |\n----------------------------------------------------------------------------\n|      len(label-1) (uvarint)      |          label-1 (bytes)              |\n----------------------------------------------------------------------------\n|      len(label-2) (uvarint)      |          label-2 (bytes)              |\n----------------------------------------------------------------------------\n|      len(label-n) (uvarint)      |          label-n (bytes)              |\n----------------------------------------------------------------------------\n|                      checksum(from #structuredMetadata)                  |\n----------------------------------------------------------------------------\n|           block-1 bytes          |           checksum (4b)               |\n----------------------------------------------------------------------------\n|           block-2 bytes          |           checksum (4b)               |\n----------------------------------------------------------------------------\n|           block-n bytes          |           checksum (4b)               |\n----------------------------------------------------------------------------\n|                           #blocks (uvarint)                              |\n----------------------------------------------------------------------------\n| #entries(uvarint) | mint, maxt (varint)  | offset, len (uvarint)         |\n----------------------------------------------------------------------------\n| #entries(uvarint) | mint, maxt (varint)  | offset, len (uvarint)         |\n----------------------------------------------------------------------------\n| #entries(uvarint) | mint, maxt (varint)  | offset, len (uvarint)         |\n----------------------------------------------------------------------------\n| #entries(uvarint) | mint, maxt (varint)  | offset, len (uvarint)         |\n----------------------------------------------------------------------------\n|                          checksum(from #blocks)                          |\n----------------------------------------------------------------------------\n| #structuredMetadata len (uvarint) | #structuredMetadata offset (uvarint) |\n----------------------------------------------------------------------------\n|     #blocks len (uvarint)         |       #blocks offset (uvarint)       |\n----------------------------------------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Web Server\nDESCRIPTION: YAML configuration example showing how to configure Promtail's embedded web server settings including listen address and port.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_address: 127.0.0.1\n  http_listen_port: 9080\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler Storage in YAML\nDESCRIPTION: Defines storage options for the Loki ruler, including various backend types like Azure, GCS, S3, and local file system. Each storage type has its own configuration block.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_59\n\nLANGUAGE: yaml\nCODE:\n```\nstorage:\n  [type: <string> | default = \"\"]\n  [azure: <azure_storage_config>]\n  [alibabacloud: <alibabacloud_storage_config>]\n  [gcs: <gcs_storage_config>]\n  [s3: <s3_storage_config>]\n  [bos: <bos_storage_config>]\n  [swift: <swift_storage_config>]\n  [cos: <cos_storage_config>]\n  local:\n    [directory: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingester Lifecycle and Ring Registration in Loki\nDESCRIPTION: This YAML configuration block defines how the Loki ingester will operate and register itself to a key value store. It includes settings for the ring store, heartbeat timeouts, replication factors, token management, and network interface configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_39\n\nLANGUAGE: yaml\nCODE:\n```\n# Configures how the lifecycle of the ingester will operate and where it will\n# register for discovery.\nlifecycler:\n  ring:\n    kvstore:\n      # Backend storage to use for the ring. Supported values are: consul, etcd,\n      # inmemory, memberlist, multi.\n      # CLI flag: -ring.store\n      [store: <string> | default = \"consul\"]\n\n      # The prefix for the keys in the store. Should end with a /.\n      # CLI flag: -ring.prefix\n      [prefix: <string> | default = \"collectors/\"]\n\n      # Configuration for a Consul client. Only applies if the selected kvstore\n      # is consul.\n      [consul: <consul>]\n\n      # Configuration for an ETCD v3 client. Only applies if the selected\n      # kvstore is etcd.\n      [etcd: <etcd>]\n\n      multi:\n        # Primary backend storage used by multi-client.\n        # CLI flag: -multi.primary\n        [primary: <string> | default = \"\"]\n\n        # Secondary backend storage used by multi-client.\n        # CLI flag: -multi.secondary\n        [secondary: <string> | default = \"\"]\n\n        # Mirror writes to secondary store.\n        # CLI flag: -multi.mirror-enabled\n        [mirror_enabled: <boolean> | default = false]\n\n        # Timeout for storing value to secondary store.\n        # CLI flag: -multi.mirror-timeout\n        [mirror_timeout: <duration> | default = 2s]\n\n    # The heartbeat timeout after which ingesters are skipped for reads/writes.\n    # 0 = never (timeout disabled).\n    # CLI flag: -ring.heartbeat-timeout\n    [heartbeat_timeout: <duration> | default = 1m]\n\n    # The number of ingesters to write to and read from.\n    # CLI flag: -distributor.replication-factor\n    [replication_factor: <int> | default = 3]\n\n    # True to enable the zone-awareness and replicate ingested samples across\n    # different availability zones.\n    # CLI flag: -distributor.zone-awareness-enabled\n    [zone_awareness_enabled: <boolean> | default = false]\n\n    # Comma-separated list of zones to exclude from the ring. Instances in\n    # excluded zones will be filtered out from the ring.\n    # CLI flag: -distributor.excluded-zones\n    [excluded_zones: <string> | default = \"\"]\n\n  # Number of tokens for each ingester.\n  # CLI flag: -ingester.num-tokens\n  [num_tokens: <int> | default = 128]\n\n  # Period at which to heartbeat to consul. 0 = disabled.\n  # CLI flag: -ingester.heartbeat-period\n  [heartbeat_period: <duration> | default = 5s]\n\n  # Heartbeat timeout after which instance is assumed to be unhealthy. 0 =\n  # disabled.\n  # CLI flag: -ingester.heartbeat-timeout\n  [heartbeat_timeout: <duration> | default = 1m]\n\n  # Observe tokens after generating to resolve collisions. Useful when using\n  # gossiping ring.\n  # CLI flag: -ingester.observe-period\n  [observe_period: <duration> | default = 0s]\n\n  # Period to wait for a claim from another member; will join automatically\n  # after this.\n  # CLI flag: -ingester.join-after\n  [join_after: <duration> | default = 0s]\n\n  # Minimum duration to wait after the internal readiness checks have passed but\n  # before succeeding the readiness endpoint. This is used to slowdown\n  # deployment controllers (eg. Kubernetes) after an instance is ready and\n  # before they proceed with a rolling update, to give the rest of the cluster\n  # instances enough time to receive ring updates.\n  # CLI flag: -ingester.min-ready-duration\n  [min_ready_duration: <duration> | default = 15s]\n\n  # Name of network interface to read address from.\n  # CLI flag: -ingester.lifecycler.interface\n  [interface_names: <list of strings> | default = [<private network interfaces>]]\n\n  # Enable IPv6 support. Required to make use of IP addresses from IPv6\n  # interfaces.\n  # CLI flag: -ingester.enable-inet6\n  [enable_inet6: <boolean> | default = false]\n\n  # Duration to sleep for before exiting, to ensure metrics are scraped.\n  # CLI flag: -ingester.final-sleep\n  [final_sleep: <duration> | default = 0s]\n\n  # File path where tokens are stored. If empty, tokens are not stored at\n  # shutdown and restored at startup.\n  # CLI flag: -ingester.tokens-file-path\n  [tokens_file_path: <string> | default = \"\"]\n\n  # The availability zone where this instance is running.\n  # CLI flag: -ingester.availability-zone\n  [availability_zone: <string> | default = \"\"]\n\n  # Unregister from the ring upon clean shutdown. It can be useful to disable\n  # for rolling restarts with consistent naming in conjunction with\n  # -distributor.extend-writes=false.\n  # CLI flag: -ingester.unregister-on-shutdown\n  [unregister_on_shutdown: <boolean> | default = true]\n\n  # When enabled the readiness probe succeeds only after all instances are\n  # ACTIVE and healthy in the ring, otherwise only the instance itself is\n  # checked. This option should be disabled if in your cluster multiple\n  # instances can be rolled out simultaneously, otherwise rolling updates may be\n  # slowed down.\n  # CLI flag: -ingester.readiness-check-ring-health\n  [readiness_check_ring_health: <boolean> | default = true]\n\n  # IP address to advertise in the ring.\n  # CLI flag: -ingester.lifecycler.addr\n  [address: <string> | default = \"\"]\n\n  # port to advertise in consul (defaults to server.grpc-listen-port).\n  # CLI flag: -ingester.lifecycler.port\n  [port: <int> | default = 0]\n\n  # ID to register in the ring.\n  # CLI flag: -ingester.lifecycler.ID\n  [id: <string> | default = \"<hostname>\"]\n\n# How many flushes can happen concurrently from each stream.\n# CLI flag: -ingester.concurrent-flushes\n[concurrent_flushes: <int> | default = 32]\n\n# How often should the ingester see if there are any blocks to flush. The first\n# flush check is delayed by a random time up to 0.8x the flush check period.\n# Additionally, there is +/- 1% jitter added to the interval.\n```\n\n----------------------------------------\n\nTITLE: Loki Tracing Configuration\nDESCRIPTION: YAML configuration for enabling tracing in Loki components with Jaeger integration settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  tracing:\n    enabled: true\n\ningester:\n  replicas: 3\n  extraEnv:\n    - name: JAEGER_ENDPOINT\n      value: \"http://mmc-alloy-external.default.svc.cluster.local:14268/api/traces\"\n    - name: JAEGER_AGENT_TAGS\n      value: 'cluster=\"prod\",namespace=\"default\"'\n    - name: JAEGER_SAMPLER_TYPE\n      value: \"ratelimiting\"\n    - name: JAEGER_SAMPLER_PARAM\n      value: \"1.0\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Child Span in Go\nDESCRIPTION: Shows how to create a child span from an existing parent span. This is used to create a hierarchy of spans within a trace.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc xyz(parentSpan opentracing.Span, ...) {\n    ...\n    sp := opentracing.StartSpan(\n        \"operation_name\",\n        opentracing.ChildOf(parentSpan.Context()))\n    defer sp.Finish()\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Loki Chunk Format Specification in ASCII Art\nDESCRIPTION: Detailed ASCII diagram showing the binary format structure of Loki chunks, including headers, blocks, metadata, and footer sections. The format includes magic numbers, version info, checksums, and various metadata fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n// Header\n+-----------------------------------+\n| Magic Number (uint32, 4 bytes)    |\n+-----------------------------------+\n| Version (1 byte)                  |\n+-----------------------------------+\n| Encoding (1 byte)                 |\n+-----------------------------------+\n\n// Blocks\n+--------------------+----------------------------+\n| block 1 (n bytes)  | checksum (uint32, 4 bytes) |\n+--------------------+----------------------------+\n| block 1 (n bytes)  | checksum (uint32, 4 bytes) |\n+--------------------+----------------------------+\n| ...                                             |\n+--------------------+----------------------------+\n| block N (n bytes)  | checksum (uint32, 4 bytes) |\n+--------------------+----------------------------+\n\n// Metas\n+------------------------------------------------------------------------------------------------------------------------+\n| #blocks (uvarint)                                                                                                      |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| #entries (uvarint) | minTs (uvarint) | maxTs (uvarint) | offset (uvarint) | len (uvarint) | uncompressedSize (uvarint) |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| #entries (uvarint) | minTs (uvarint) | maxTs (uvarint) | offset (uvarint) | len (uvarint) | uncompressedSize (uvarint) |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| ...                                                                                                                    |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| #entries (uvarint) | minTs (uvarint) | maxTs (uvarint) | offset (uvarint) | len (uvarint) | uncompressedSize (uvarint) |\n+--------------------+-----------------+-----------------+------------------+---------------+----------------------------+\n| checksum (uint32, 4 bytes)                                                                                             | \n+------------------------------------------------------------------------------------------------------------------------+\n\n// Structured Metadata\n+---------------------------------+\n| #labels (uvarint)               |\n+---------------+-----------------+\n| len (uvarint) | value (n bytes) |\n+---------------+-----------------+\n| ...                             |\n+---------------+-----------------+\n| checksum (uint32, 4 bytes)      |\n+---------------------------------+\n\n// Footer\n+-----------------------+--------------------------+\n| len (uint64, 8 bytes) | offset (uint64, 8 bytes) |   // offset to Structured Metadata\n+-----------------------+--------------------------+\n| len (uint64, 8 bytes) | offset (uint64, 8 bytes) |   // offset to Metas\n+-----------------------+--------------------------+\n```\n\n----------------------------------------\n\nTITLE: Basic Gorilla Mux Server Example in Go\nDESCRIPTION: Complete example of a simple Gorilla Mux server implementation with basic routing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"net/http\"\n    \"log\"\n    \"github.com/gorilla/mux\"\n)\n\nfunc YourHandler(w http.ResponseWriter, r *http.Request) {\n    w.Write([]byte(\"Gorilla!\\n\"))\n}\n\nfunc main() {\n    r := mux.NewRouter()\n    // Routes consist of a path and a handler function.\n    r.HandleFunc(\"/\", YourHandler)\n\n    // Bind to a port and pass our router in\n    log.Fatal(http.ListenAndServe(\":8000\", r))\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Deployment for Loki with GCS Single Store in YAML\nDESCRIPTION: This snippet shows the configuration for deploying Loki on GCP using Google Cloud Storage (GCS) as a single store. It includes storage and schema configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  tsdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/index_cache\n    cache_ttl: 24h # Can be increased for faster performance over longer query periods, uses more disk space\n  gcs:\n      bucket_name: <bucket>\n      service_account: |    \n        {\n          \"type\": \"service_account\",\n          ...\n        }\n\nschema_config:\n  configs:\n    - from: 2020-07-01\n      store: tsdb\n      object_store: gcs\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Using Labels to Handle Multiple Log Sources\nDESCRIPTION: Demonstrates how to use additional labels to create separate streams for different log sources, allowing parallel time series without ordering conflicts.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/bp-configure.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n{job=\"syslog\", instance=\"host1\"} 00:00:00 i'm a syslog!\n{job=\"syslog\", instance=\"host1\"} 00:00:02 i'm a syslog!\n{job=\"syslog\", instance=\"host2\"} 00:00:01 i'm a syslog!  <- Accepted, this is a new stream!\n{job=\"syslog\", instance=\"host1\"} 00:00:03 i'm a syslog!  <- Accepted, still in order for stream 1\n{job=\"syslog\", instance=\"host2\"} 00:00:02 i'm a syslog!  <- Accepted, still in order for stream 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Conntrack Dialer for HTTP DefaultClient in Go\nDESCRIPTION: This snippet demonstrates how to set up connection tracking for the default HTTP client in Go. It replaces the DialContext of the default transport with a new function that includes tracing and custom dialer settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mwitkow/go-conntrack/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nhttp.DefaultTransport.(*http.Transport).DialContext = conntrack.NewDialContextFunc(\n    conntrack.DialWithTracing(),\n    conntrack.DialWithDialer(&net.Dialer{\n        Timeout:   30 * time.Second,\n        KeepAlive: 30 * time.Second,\n    }),\n)\n```\n\n----------------------------------------\n\nTITLE: Querying Loki Log Volume API (Bash)\nDESCRIPTION: This snippet shows the HTTP GET request formats for querying the Loki log volume API. It includes endpoints for both single-point and range queries of log volume information.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/index/volume\nGET /loki/api/v1/index/volume_range\n```\n\n----------------------------------------\n\nTITLE: Appending Suffix to Existing Value with 'template' Stage in YAML\nDESCRIPTION: Shows how to use the 'template' stage to append '_some_suffix' to the existing value of the 'app' key in the extracted map.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: app\n    template: '{{ .Value }}_some_suffix'\n```\n\n----------------------------------------\n\nTITLE: Configuring Querier in Loki\nDESCRIPTION: Configuration for the querier module in Loki, including settings for query processing, concurrent queries, and engine parameters. These settings are applicable when running all modules or just the querier.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_55\n\nLANGUAGE: yaml\nCODE:\n```\n# Maximum duration for which the live tailing requests are served.\n# CLI flag: -querier.tail-max-duration\n[tail_max_duration: <duration> | default = 1h]\n\n# Time to wait before sending more than the minimum successful query requests.\n# CLI flag: -querier.extra-query-delay\n[extra_query_delay: <duration> | default = 0s]\n\n# Maximum lookback beyond which queries are not sent to ingester. 0 means all\n# queries are sent to ingester.\n# CLI flag: -querier.query-ingesters-within\n[query_ingesters_within: <duration> | default = 3h]\n\nengine:\n  # The maximum amount of time to look back for log lines. Used only for instant\n  # log queries.\n  # CLI flag: -querier.engine.max-lookback-period\n  [max_look_back_period: <duration> | default = 30s]\n\n  # The maximum number of labels the heap of a topk query using a count min\n  # sketch can track.\n  # CLI flag: -querier.engine.max-count-min-sketch-heap-size\n  [max_count_min_sketch_heap_size: <int> | default = 10000]\n\n  # Experimental: Enable next generation query engine for supported queries.\n  # CLI flag: -querier.engine.enable-v2-engine\n  [enable_v2_engine: <boolean> | default = false]\n\n# The maximum number of queries that can be simultaneously processed by the\n# querier.\n# CLI flag: -querier.max-concurrent\n[max_concurrent: <int> | default = 4]\n\n# Only query the store, and not attempt any ingesters. This is useful for\n# running a standalone querier pool operating only against stored data.\n# CLI flag: -querier.query-store-only\n[query_store_only: <boolean> | default = false]\n\n# When true, queriers only query the ingesters, and not stored data. This is\n# useful when the object store is unavailable.\n# CLI flag: -querier.query-ingester-only\n[query_ingester_only: <boolean> | default = false]\n\n# When true, allow queries to span multiple tenants.\n# CLI flag: -querier.multi-tenant-queries-enabled\n[multi_tenant_queries_enabled: <boolean> | default = false]\n\n# When true, querier limits sent via a header are enforced.\n# CLI flag: -querier.per-request-limits-enabled\n[per_request_limits_enabled: <boolean> | default = false]\n\n# When true, querier directs ingester queries to the partition-ingesters instead\n# of the normal ingesters.\n# CLI flag: -querier.query-partition-ingesters\n[query_partition_ingesters: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Identity in azblob\nDESCRIPTION: Creates a new Azure Blob Storage client with AAD token authentication. The credential is created from the azidentity module and passed directly to the client constructor.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/migrationguide.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// new code.  cred is an AAD token credential created from the azidentity module\nclient, err := azblob.NewClient(\"<my storage account URL>\", cred, nil)\n```\n\n----------------------------------------\n\nTITLE: Using go-sysconf to Get Clock Ticks in Go\nDESCRIPTION: This snippet demonstrates how to use the go-sysconf package to retrieve the number of clock ticks per second (SC_CLK_TCK). It imports the package, calls the Sysconf function with the appropriate constant, and prints the result if successful.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/tklauser/go-sysconf/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/tklauser/go-sysconf\"\n)\n\nfunc main() {\n\t// get clock ticks, this will return the same as C.sysconf(C._SC_CLK_TCK)\n\tclktck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)\n\tif err == nil {\n\t\tfmt.Printf(\"SC_CLK_TCK: %v\\n\", clktck)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Pattern Ingester in YAML\nDESCRIPTION: Configuration options for the Loki pattern ingester component, including enable/disable settings and detailed lifecycle management. Contains ring configuration for distributed coordination and discovery using various key-value stores.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npattern_ingester:\n  # Whether the pattern ingester is enabled.\n  # CLI flag: -pattern-ingester.enabled\n  [enabled: <boolean> | default = false]\n\n  # Configures how the lifecycle of the pattern ingester will operate and where\n  # it will register for discovery.\n  lifecycler:\n    ring:\n      kvstore:\n        # Backend storage to use for the ring. Supported values are: consul,\n        # etcd, inmemory, memberlist, multi.\n        # CLI flag: -pattern-ingester.store\n        [store: <string> | default = \"consul\"]\n\n        # The prefix for the keys in the store. Should end with a /.\n        # CLI flag: -pattern-ingester.prefix\n        [prefix: <string> | default = \"collectors/\"]\n\n        # Configuration for a Consul client. Only applies if the selected\n        # kvstore is consul.\n        # The CLI flags prefix for this block configuration is: pattern-ingester\n        [consul: <consul>]\n\n        # Configuration for an ETCD v3 client. Only applies if the selected\n        # kvstore is etcd.\n        # The CLI flags prefix for this block configuration is: pattern-ingester\n        [etcd: <etcd>]\n\n        multi:\n          # Primary backend storage used by multi-client.\n          # CLI flag: -pattern-ingester.multi.primary\n          [primary: <string> | default = \"\"]\n\n          # Secondary backend storage used by multi-client.\n          # CLI flag: -pattern-ingester.multi.secondary\n          [secondary: <string> | default = \"\"]\n\n          # Mirror writes to secondary store.\n          # CLI flag: -pattern-ingester.multi.mirror-enabled\n          [mirror_enabled: <boolean> | default = false]\n\n          # Timeout for storing value to secondary store.\n          # CLI flag: -pattern-ingester.multi.mirror-timeout\n          [mirror_timeout: <duration> | default = 2s]\n\n      # The heartbeat timeout after which ingesters are skipped for\n      # reads/writes. 0 = never (timeout disabled).\n      # CLI flag: -pattern-ingester.ring.heartbeat-timeout\n      [heartbeat_timeout: <duration> | default = 1m]\n\n      # The number of ingesters to write to and read from.\n      # CLI flag: -pattern-ingester.distributor.replication-factor\n      [replication_factor: <int> | default = 1]\n\n      # True to enable the zone-awareness and replicate ingested samples across\n      # different availability zones.\n      # CLI flag: -pattern-ingester.distributor.zone-awareness-enabled\n      [zone_awareness_enabled: <boolean> | default = false]\n\n      # Comma-separated list of zones to exclude from the ring. Instances in\n      # excluded zones will be filtered out from the ring.\n      # CLI flag: -pattern-ingester.distributor.excluded-zones\n      [excluded_zones: <string> | default = \"\"]\n\n    # Number of tokens for each ingester.\n    # CLI flag: -pattern-ingester.num-tokens\n    [num_tokens: <int> | default = 128]\n\n    # Period at which to heartbeat to consul. 0 = disabled.\n    # CLI flag: -pattern-ingester.heartbeat-period\n    [heartbeat_period: <duration> | default = 5s]\n\n    # Heartbeat timeout after which instance is assumed to be unhealthy. 0 =\n    # disabled.\n    # CLI flag: -pattern-ingester.heartbeat-timeout\n    [heartbeat_timeout: <duration> | default = 1m]\n\n    # Observe tokens after generating to resolve collisions. Useful when using\n    # gossiping ring.\n    # CLI flag: -pattern-ingester.observe-period\n    [observe_period: <duration> | default = 0s]\n\n    # Period to wait for a claim from another member; will join automatically\n    # after this.\n    # CLI flag: -pattern-ingester.join-after\n    [join_after: <duration> | default = 0s]\n\n    # Minimum duration to wait after the internal readiness checks have passed\n    # but before succeeding the readiness endpoint. This is used to slowdown\n    # deployment controllers (eg. Kubernetes) after an instance is ready and\n    # before they proceed with a rolling update, to give the rest of the cluster\n    # instances enough time to receive ring updates.\n    # CLI flag: -pattern-ingester.min-ready-duration\n    [min_ready_duration: <duration> | default = 15s]\n\n    # Name of network interface to read address from.\n    # CLI flag: -pattern-ingester.lifecycler.interface\n    [interface_names: <list of strings> | default = [<private network interfaces>]]\n\n    # Enable IPv6 support. Required to make use of IP addresses from IPv6\n    # interfaces.\n    # CLI flag: -pattern-ingester.enable-inet6\n    [enable_inet6: <boolean> | default = false]\n\n    # Duration to sleep for before exiting, to ensure metrics are scraped.\n    # CLI flag: -pattern-ingester.final-sleep\n    [final_sleep: <duration> | default = 0s]\n\n    # File path where tokens are stored. If empty, tokens are not stored at\n    # shutdown and restored at startup.\n    # CLI flag: -pattern-ingester.tokens-file-path\n    [tokens_file_path: <string> | default = \"\"]\n\n    # The availability zone where this instance is running.\n    # CLI flag: -pattern-ingester.availability-zone\n    [availability_zone: <string> | default = \"\"]\n\n    # Unregister from the ring upon clean shutdown. It can be useful to disable\n    # for rolling restarts with consistent naming in conjunction with\n    # -distributor.extend-writes=false.\n    # CLI flag: -pattern-ingester.unregister-on-shutdown\n    [unregister_on_shutdown: <boolean> | default = true]\n\n    # When enabled the readiness probe succeeds only after all instances are\n    # ACTIVE and healthy in the ring, otherwise only the instance itself is\n    # checked. This option should be disabled if in your cluster multiple\n    # instances can be rolled out simultaneously, otherwise rolling updates may\n    # be slowed down.\n    # CLI flag: -pattern-ingester.readiness-check-ring-health\n    [readiness_check_ring_health: <boolean> | default = true]\n\n    # IP address to advertise in the ring.\n    # CLI flag: -pattern-ingester.lifecycler.addr\n    [address: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Pattern Parser - NGINX Log Example\nDESCRIPTION: Example of using pattern parser to extract fields from an NGINX log line using explicit pattern matching\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_12\n\nLANGUAGE: log\nCODE:\n```\n0.191.12.2 - - [10/Jun/2021:09:14:29 +0000] \"GET /api/plugins/versioncheck HTTP/1.1\" 200 2 \"-\" \"Go-http-client/2.0\" \"13.76.247.102, 34.120.177.193\" \"TLSv1.2\" \"US\" \"\"\n```\n\n----------------------------------------\n\nTITLE: Managing Context.Context with run.Group in Go\nDESCRIPTION: This snippet demonstrates how to use run.Group with a context.Context. It creates a cancellable context and adds it to the group, allowing for graceful termination of a process.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oklog/run/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nctx, cancel := context.WithCancel(context.Background())\ng.Add(func() error {\n\treturn myProcess(ctx, ...)\n}, func(error) {\n\tcancel()\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring EKS Cluster with EKSctl in YAML\nDESCRIPTION: YAML configuration for creating an EKS cluster using EKSctl. Specifies cluster metadata, IAM settings, addons, and managed node groups.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# A simple example of ClusterConfig object:\n---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: <INSERT-CLUSTER-NAME>\n  region: <INSERT-REGION-FOR-CLUSTER>\n  version: \"1.31\"\n\niam:\n  withOIDC: true\n\naddons:\n  - name: aws-ebs-csi-driver\n\nmanagedNodeGroups:\n  - name: loki-workers\n    instanceType: m7i.2xlarge\n    desiredCapacity: 3\n    minSize: 2\n    maxSize: 3\n    amiFamily: AmazonLinux2023\n    iam:\n      withAddonPolicies:\n        ebs: true\n    volumeSize: 80\n    volumeType: gp3\n    ebsOptimized: true\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Log Ingestion in Promtail (YAML)\nDESCRIPTION: This YAML block configures Promtail to receive GCP logs using either pull or push subscriptions. It includes options for subscription type, project ID, server configuration, and timestamp handling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\n[subscription_type: <string> | default = \"pull\"]\n\n[project_id: <string>]\n\n[subscription: <string>]\n\n[server: <server_config>]\n\n[use_incoming_timestamp: <boolean> | default = false]\n\n[use_full_line: <boolean> | default = false]\n\n[push_timeout: <duration>|  default = 0 (no timeout)]\n```\n\n----------------------------------------\n\nTITLE: Using Backoff with Jitter in Go\nDESCRIPTION: Demonstrates the usage of the Jitter option in the Backoff struct, which adds randomization to the backoff durations for improved performance in distributed systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jpillora/backoff/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport \"math/rand\"\n\nb := &backoff.Backoff{\n\tJitter: true,\n}\n\nrand.Seed(42)\n\nfmt.Printf(\"%s\\n\", b.Duration())\nfmt.Printf(\"%s\\n\", b.Duration())\nfmt.Printf(\"%s\\n\", b.Duration())\n\nfmt.Printf(\"Reset!\\n\")\nb.Reset()\n\nfmt.Printf(\"%s\\n\", b.Duration())\nfmt.Printf(\"%s\\n\", b.Duration())\nfmt.Printf(\"%s\\n\", b.Duration())\n```\n\n----------------------------------------\n\nTITLE: Configuring Operational Settings in Loki\nDESCRIPTION: Configuration for operational aspects of Loki, including logging controls for streams, push requests, and error handling. These values can be overridden in the runtime_config file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_52\n\nLANGUAGE: yaml\nCODE:\n```\n# Log every new stream created by a push request (very verbose, recommend to\n# enable via runtime config only).\n# CLI flag: -operation-config.log-stream-creation\n[log_stream_creation: <boolean> | default = false]\n\n# Log every push request (very verbose, recommend to enable via runtime config\n# only).\n# CLI flag: -operation-config.log-push-request\n[log_push_request: <boolean> | default = false]\n\n# Log every stream in a push request (very verbose, recommend to enable via\n# runtime config only).\n# CLI flag: -operation-config.log-push-request-streams\n[log_push_request_streams: <boolean> | default = false]\n\n# Log metrics for duplicate lines received.\n# CLI flag: -operation-config.log-duplicate-metrics\n[log_duplicate_metrics: <boolean> | default = false]\n\n# Log stream info for duplicate lines received\n# CLI flag: -operation-config.log-duplicate-stream-info\n[log_duplicate_stream_info: <boolean> | default = false]\n\n# Log push errors with a rate limited logger, will show client push errors\n# without overly spamming logs.\n# CLI flag: -operation-config.limited-log-push-errors\n[limited_log_push_errors: <boolean> | default = true]\n```\n\n----------------------------------------\n\nTITLE: Configuring Heroku HTTPS Drain in YAML\nDESCRIPTION: This YAML snippet shows how to configure Promtail to expose a Heroku HTTPS Drain, including server settings, label mapping, and timestamp handling options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\n[server: <server_config>]\n\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n\n[use_incoming_timestamp: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Configuring LokiStack with Replication Factor for Zone Resilience in YAML\nDESCRIPTION: A YAML example showing how to configure a LokiStack custom resource with replication factor set to 2, enabling data redundancy across zones. This configuration is essential for preventing data loss during zone failures.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: loki.grafana.com/v1\nkind: LokiStack\nmetadata:\nname: lokistack-dev\nspec:\nsize: 1x.small\nstorage:\n  secret:\n    name: test\n  type: s3\nstorageClassName: gp3-csi\nreplication:\n  factor: 2\n  zones:\n  - topologyKey: topology.kubernetes.io/zone\n    maxSkew: 1\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: Commands to add and update Grafana's Helm chart repository.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-scalable/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Setting up GCP Log Collection Resources using Terraform\nDESCRIPTION: This Terraform configuration creates the necessary resources for GCP log collection, including a Pub/Sub topic, log sink, and IAM binding. It can be used for both pull and push-based setups.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: terraform\nCODE:\n```\n// Provider module\nprovider \"google\" {\n  project = \"$GCP_PROJECT_ID\"\n}\n\n// Topic\nresource \"google_pubsub_topic\" \"main\" {\n  name = \"cloud-logs\"\n}\n\n// Log sink\nvariable \"inclusion_filter\" {\n  type        = string\n  description = \"Optional GCP Logs query which can filter logs being routed to the pub/sub topic and promtail\"\n}\n\nresource \"google_logging_project_sink\" \"main\" {\n  name                   = \"cloud-logs\"\n  destination            = \"pubsub.googleapis.com/${google_pubsub_topic.main.id}\"\n  filter                 = var.inclusion_filter\n  unique_writer_identity = true\n}\n\nresource \"google_pubsub_topic_iam_binding\" \"log-writer\" {\n  topic = google_pubsub_topic.main.name\n  role  = \"roles/pubsub.publisher\"\n  members = [\n    google_logging_project_sink.main.writer_identity,\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Events Collection Command\nDESCRIPTION: Docker run command to collect Docker events using Fluent Bit and forward them to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v /var/run/docker.sock:/var/run/docker.sock fluent/fluent-bit:latest /fluent-bit/bin/fluent-bit -i docker_events -o loki -p host=loki -p port=3100 -p labels=\"agent=fluend-bit,env=docker\"\n```\n\n----------------------------------------\n\nTITLE: Implementing CORS Handler with Gorilla Mux in Go\nDESCRIPTION: Example of using CORSMethodMiddleware with a custom OPTIONS handler to handle CORS requests. Shows how to set CORS headers and handle different HTTP methods.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"net/http\"\n\t\"github.com/gorilla/mux\"\n)\n\nfunc main() {\n    r := mux.NewRouter()\n\n    // IMPORTANT: you must specify an OPTIONS method matcher for the middleware to set CORS headers\n    r.HandleFunc(\"/foo\", fooHandler).Methods(http.MethodGet, http.MethodPut, http.MethodPatch, http.MethodOptions)\n    r.Use(mux.CORSMethodMiddleware(r))\n    \n    http.ListenAndServe(\":8080\", r)\n}\n\nfunc fooHandler(w http.ResponseWriter, r *http.Request) {\n    w.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n    if r.Method == http.MethodOptions {\n        return\n    }\n\n    w.Write([]byte(\"foo\"))\n}\n```\n\n----------------------------------------\n\nTITLE: Running Fluent Bit with Loki Output Plugin\nDESCRIPTION: Command to run Fluent Bit with the Loki output plugin. It uses the 'out_grafana_loki.so' library file and a configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluent-bit/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ fluent-bit -e out_grafana_loki.so -c /etc/fluent-bit.conf\n```\n\n----------------------------------------\n\nTITLE: Journal Configuration in YAML\nDESCRIPTION: Configuration for reading from systemd journal, including JSON handling, age limits, and label mapping.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\njson: <boolean> | default = false\n[max_age: <duration> | default = 7h]\nlabels:\n  [ <labelname>: <labelvalue> ... ]\nrelabel_configs:\n- source_labels: ['__journal__hostname']\n  target_label: host\n[path: <string>]\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Client with Custom Root Certificates in Go\nDESCRIPTION: Demonstrates how to create an HTTP client with custom TLS configuration using rootcerts library. The function configures root certificates from environment variables and returns a configured HTTP client with custom transport settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-rootcerts/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc httpClient() (*http.Client, error)\n\ttlsConfig := &tls.Config{}\n\terr := rootcerts.ConfigureTLS(tlsConfig, &rootcerts.Config{\n\t\tCAFile:      os.Getenv(\"MYAPP_CAFILE\"),\n\t\tCAPath:      os.Getenv(\"MYAPP_CAPATH\"),\n\t\tCertificate: os.Getenv(\"MYAPP_CERTIFICATE\"),\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tc := cleanhttp.DefaultClient()\n\tt := cleanhttp.DefaultTransport()\n\tt.TLSClientConfig = tlsConfig\n\tc.Transport = t\n\treturn c, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Logging Levels in YAML\nDESCRIPTION: Configuration snippet for setting the logging level in Loki's config.yaml file. Supports debug, info, warn, and error levels with info as the default setting. This configuration controls the verbosity of Loki's logging output.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Only log messages with the given severity or above. Valid levels: [debug,\n# info, warn, error]\n# CLI flag: -log.level\n[log_level: <string> | default = \"info\"]\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda-Promtail with CloudFormation and EventBridge\nDESCRIPTION: AWS CLI command to create a CloudFormation stack for lambda-promtail using EventBridge for S3 event notifications. It specifies various parameters for configuration and includes an S3 bucket as the event source.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naws cloudformation create-stack --stack-name lambda-promtail-stack --template-body file://template-eventbridge.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --region us-east-2 --parameters ParameterKey=WriteAddress,ParameterValue=https://your-loki-url/loki/api/v1/push ParameterKey=Username,ParameterValue=<basic-auth-username> ParameterKey=Password,ParameterValue=<basic-auth-pw> ParameterKey=BearerToken,ParameterValue=<bearer-token> ParameterKey=LambdaPromtailImage,ParameterValue=<ecr-repo>:<tag> ParameterKey=ExtraLabels,ParameterValue=\"name1,value1,name2,value2\" ParameterKey=TenantID,ParameterValue=<value> ParameterKey=SkipTlsVerify,ParameterValue=\"false\" ParameterKey=EventSourceS3Bucket,ParameterValue=\"alb-logs-bucket-name\"\n```\n\n----------------------------------------\n\nTITLE: TSDB Shipper Configuration\nDESCRIPTION: Configuration for TSDB-style index storage including directory settings, caching parameters, and gateway client options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_72\n\nLANGUAGE: yaml\nCODE:\n```\ntsdb_shipper:\n  active_index_directory: <string> | default = \"\"\n  cache_location: <string> | default = \"\"\n  cache_ttl: <duration> | default = 24h\n  resync_interval: <duration> | default = 5m\n  query_ready_num_days: <int> | default = 0\n```\n\n----------------------------------------\n\nTITLE: AWS S3 Storage Configuration\nDESCRIPTION: YAML configuration for deploying Loki with AWS S3 as the object storage, including bucket configuration and AWS credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-scalable/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  storage_config:\n    aws:\n      region: <AWS region your bucket is in, for example, `eu-west-2`>\n      bucketnames: <Your AWS bucket for chunk, for example, `aws-loki-dev-chunk`>\n      s3forcepathstyle: false\n  pattern_ingester:\n      enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n    retention_period: 672h\n  querier:\n    max_concurrent: 4\n\n  storage:\n    type: s3\n    bucketNames:\n        chunks: <Your AWS bucket for chunk, for example, `aws-loki-dev-chunk`>\n        ruler: <Your AWS bucket for ruler, for example,  `aws-loki-dev-ruler`>\n        admin: <Your AWS bucket for admin, for example,  `aws-loki-dev-admin`>\n    s3:\n      s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name\n      endpoint: <your-endpoint>\n      region: <your-region>\n      secretAccessKey: <your-secret-access-key>\n      accessKeyId: <your-access-key-id>\n      signatureVersion: <your-signature-version>\n      s3ForcePathStyle: false\n      insecure: false\n      http_config: {}\n```\n\n----------------------------------------\n\nTITLE: Processing Nested JSON in Extracted Data\nDESCRIPTION: Shows how to process nested JSON structures by using multiple JSON stages. The first stage extracts fields including a nested JSON string, while the second stage parses this nested JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/json.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      output:    log\n      stream:    stream\n      timestamp: time\n      extra:\n- json:\n    expressions:\n      user:\n    source: extra\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\",\"extra\":\"{\\\"user\\\":\\\"marco\\\"}\"}\n```\n\n----------------------------------------\n\nTITLE: Running Fluentd Test with Loki\nDESCRIPTION: Command to start Fluentd and send test logs to a specified Loki URL using make.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nLOKI_URL=http://{{ IP }}:3100 make fluentd-test\n```\n\n----------------------------------------\n\nTITLE: Recursive Type Definition and JSON Marshaling in Go\nDESCRIPTION: This snippet shows how to define and marshal recursive types in Go. It demonstrates the structure of recursive types and how they are encoded to JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ntype T struct {\n    X int\n    U *U\n}\n\ntype U struct {\n    T *T\n}\n\nb, err := json.Marshal(&T{\n    X: 1,\n    U: &U{\n        T: &T{\n            X: 2,\n        },\n    },\n})\nfmt.Println(string(b)) // {\"X\":1,\"U\":{\"T\":{\"X\":2,\"U\":null}}}\n```\n\n----------------------------------------\n\nTITLE: Redirecting Stdlib Logger to Go Kit Logger\nDESCRIPTION: Shows how to redirect the standard library's logger to use a Go Kit JSON logger, allowing for structured logging in legacy code.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/log/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\t\"os\"\n\tstdlog \"log\"\n\tkitlog \"github.com/go-kit/log\"\n)\n\nfunc main() {\n\tlogger := kitlog.NewJSONLogger(kitlog.NewSyncWriter(os.Stdout))\n\tstdlog.SetOutput(kitlog.NewStdlibAdapter(logger))\n\tstdlog.Print(\"I sure like pie\")\n}\n\n// Output:\n// {\"msg\":\"I sure like pie\",\"ts\":\"2016/01/01 12:34:56\"}\n```\n\n----------------------------------------\n\nTITLE: Using Best Effort Mode for Partial Syslog Message Parsing\nDESCRIPTION: Example showing how to enable best effort mode for the RFC5424 parser. This mode allows for partial parsing and returns both the partially parsed message and the error that stopped the parser.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-syslog/v4/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ni := []byte(\"<1>1 A - - - - - -\")\np := NewParser(WithBestEffort())\nm, e := p.Parse(i)\n```\n\n----------------------------------------\n\nTITLE: Custom OTLP to Loki Mapping Examples\nDESCRIPTION: Various examples of customizing how OTLP attributes are mapped to Loki's data model using tenant-specific configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  otlp_config:\n    resource_attributes:\n      attributes_config:\n        - action: index_label\n          attributes:\n            - service.group\n```\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  otlp_config:\n    resource_attributes:\n      ignore_defaults: true\n      attributes_config:\n        - action: index_label\n          regex: service.group\n```\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  otlp_config:\n    resource_attributes:\n      attributes_config:\n        - action: index_label\n          regex: service.group\n    scope_attributes:\n      - action: drop\n        attributes:\n          - method.name\n    log_attributes:\n      - action: structured_metadata\n        attributes:\n          - user.id\n      - action: drop\n        regex: .*\n```\n\n----------------------------------------\n\nTITLE: Basic Validation Error Handling\nDESCRIPTION: Demonstrates how to handle validation errors by type asserting the returned error to ValidationErrors type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-playground/validator/v10/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nerr := validate.Struct(mystruct)\nvalidationErrors := err.(validator.ValidationErrors)\n```\n\n----------------------------------------\n\nTITLE: Configuring Retry and Backoff Settings for Loki Client in YAML\nDESCRIPTION: Specifies retry behavior and backoff configuration for failed requests to Loki, including options to handle rate-limited responses.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nbackoff_config:\n  [min_period: <duration> | default = 500ms]\n  [max_period: <duration> | default = 5m]\n  [max_retries: <int> | default = 10]\n\n[drop_rate_limited_batches: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Complete OpenTelemetry Collector Configuration\nDESCRIPTION: Complete YAML configuration combining receivers, processors, exporters, and pipeline settings for the OpenTelemetry Collector.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/otel-collector-getting-started.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Receivers\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n        \n# Processors\nprocessors:\n  batch:\n\n# Exporters\nexporters:\n  otlphttp/logs:\n    endpoint: \"http://loki:3100/otlp\"\n    tls:\n      insecure: true\n      \n# Pipelines\nservice:\n  pipelines:\n    logs:\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [otlphttp/logs]\n```\n\n----------------------------------------\n\nTITLE: Using ForEach in Bolt Database (Go)\nDESCRIPTION: Demonstrates how to use the ForEach() function to iterate over all keys in a Bolt database bucket. It prints all key-value pairs in the bucket.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\ndb.View(func(tx *bolt.Tx) error {\n\t// Assume bucket exists and has keys\n\tb := tx.Bucket([]byte(\"MyBucket\"))\n\n\tb.ForEach(func(k, v []byte) error {\n\t\tfmt.Printf(\"key=%s, value=%s\\n\", k, v)\n\t\treturn nil\n\t})\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Metric Names (Go)\nDESCRIPTION: Code snippet showing how to configure Prometheus metric name validation scheme to preserve original delimiters instead of replacing with underscores.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/prometheus/common/model.NameValidationScheme = NoEscaping\n```\n\n----------------------------------------\n\nTITLE: Basic Log Queries\nDESCRIPTION: Various LogCLI commands for querying logs including filtering by status and time ranges.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nlogcli labels\n```\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query '{service_name=\"Delivery World\"} | package_status=\"critical\"'\n```\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query --since 24h '{service_name=\"Delivery World\"} | package_status=\"critical\"'\n```\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query --since 24h --limit 100 '{service_name=\"Delivery World\"} | package_status=\"critical\"'\n```\n\n----------------------------------------\n\nTITLE: Downloading Loki and Promtail Configuration Files\nDESCRIPTION: This snippet shows how to download the configuration files for Loki and Promtail using wget. It retrieves the local configuration files from the Grafana Loki GitHub repository.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/grafana/loki/main/cmd/loki/loki-local-config.yaml\nwget https://raw.githubusercontent.com/grafana/loki/main/clients/cmd/promtail/promtail-local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Object Storage Secret for Loki\nDESCRIPTION: Command to create a Kubernetes secret for Azure storage authentication. This secret contains the container name, environment, account credentials, and optional endpoint suffix for Loki to connect to Azure Blob Storage.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-azure \\\n  --from-literal=container=\"<AZURE_CONTAINER_NAME>\" \\\n  --from-literal=environment=\"<AZURE_ENVIRONMENTs>\" \\\n  --from-literal=account_name=\"<AZURE_ACCOUNT_NAME>\" \\\n  --from-literal=account_key=\"<AZURE_ACCOUNT_KEY>\" \\\n  --from-literal=endpoint_suffix=\"<OPTIONAL_AZURE_ENDPOINT_SUFFIX>\"\n```\n\n----------------------------------------\n\nTITLE: Using mimetype for MIME type detection in Go\nDESCRIPTION: Demonstrates three methods for detecting MIME types: from a byte slice, an io.Reader, or a file path. It also shows how to print the detected MIME type and file extension.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gabriel-vasile/mimetype/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nmtype := mimetype.Detect([]byte)\n// OR\nmtype, err := mimetype.DetectReader(io.Reader)\n// OR\nmtype, err := mimetype.DetectFile(\"/path/to/file\")\nfmt.Println(mtype.String(), mtype.Extension())\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom JSON Formatter in Logrus\nDESCRIPTION: Demonstrates how to implement a custom formatter by implementing the Formatter interface with a Format method that serializes the log entry to JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype MyJSONFormatter struct {\n}\n\nlog.SetFormatter(new(MyJSONFormatter))\n\nfunc (f *MyJSONFormatter) Format(entry *Entry) ([]byte, error) {\n  // Note this doesn't include Time, Level and Message which are available on\n  // the Entry. Consult `godoc` on information about those fields or read the\n  // source of the official loggers.\n  serialized, err := json.Marshal(entry.Data)\n    if err != nil {\n      return nil, fmt.Errorf(\"Failed to marshal fields to JSON, %w\", err)\n    }\n  return append(serialized, '\\n'), nil\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Receiver in Alloy\nDESCRIPTION: Sets up an OpenTelemetry receiver to accept logs via HTTP and gRPC, then forwards them to a batch processor.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/alloy/examples/alloy-otel-logs.md#2025-04-19_snippet_0\n\nLANGUAGE: alloy\nCODE:\n```\notelcol.receiver.otlp \"default\" {\n  http {}\n  grpc {}\n\n  output {\n    logs    = [otelcol.processor.batch.default.input]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Loki on openSUSE\nDESCRIPTION: This snippet shows how to install Loki on openSUSE using the zypper package manager. It installs the Loki package from the previously added repository.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nzypper in loki\n```\n\n----------------------------------------\n\nTITLE: Configuring AutoRest for Azure Network Management SDK Generation\nDESCRIPTION: YAML configuration that instructs AutoRest how to generate Azure Network Management SDK. It specifies Azure ARM mode, references to API specifications, MIT license header requirement, module version 4.3.0, and targets the package-2023-05 API version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/autorest.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nazure-arm: true\nrequire:\n- https://github.com/Azure/azure-rest-api-specs/blob/80c21c17b4a7aa57f637ee594f7cfd653255a7e0/specification/network/resource-manager/readme.md\n- https://github.com/Azure/azure-rest-api-specs/blob/80c21c17b4a7aa57f637ee594f7cfd653255a7e0/specification/network/resource-manager/readme.go.md\nlicense-header: MICROSOFT_MIT_NO_VERSION\nmodule-version: 4.3.0\ntag: package-2023-05\n```\n\n----------------------------------------\n\nTITLE: Implementing Client-Side Load Balancing with Kuberesolver\nDESCRIPTION: Demonstrates how to enable client-side load balancing when using kuberesolver. This allows gRPC to create connections to multiple service endpoints and distribute requests across them.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sercand/kuberesolver/v6/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ngrpc.DialContext(ctx,  \"kubernetes:///service:grpc\", grpc.WithBalancerName(\"round_robin\"), grpc.WithInsecure())\n```\n\n----------------------------------------\n\nTITLE: Executing Range Query with k6-loki\nDESCRIPTION: Shows how to execute a range query over a 15-minute period to retrieve error logs from a specific application.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport default () => {\n  client.rangeQuery(`{app=\"my-app-name\"} | logfmt | level=\"error\"`, \"15m\");\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Automatic Stream Sharding in Loki Configuration\nDESCRIPTION: Basic YAML configuration to enable automatic stream sharding in Grafana Loki's limits_config section.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/automatic-stream-sharding.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  shard_streams:\n      enabled: true\n```\n\n----------------------------------------\n\nTITLE: Querying Query-Scheduler Queue Duration per Tenant in PromQL\nDESCRIPTION: This PromQL query retrieves the maximum queue duration over time for each tenant (org_id) in the query-frontend. It filters logs containing 'metrics.go', extracts the queue_time using logfmt, and unwraps it as a duration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/shuffle-sharding/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: promql\nCODE:\n```\nmax_over_time({cluster=\"$cluster\",container=\"query-frontend\", namespace=\"$namespace\"} |= \"metrics.go\" |logfmt | unwrap duration(queue_time) | __error__=\"\" [5m]) by (org_id)\n```\n\n----------------------------------------\n\nTITLE: Creating a Pull-based Pub/Sub Subscription in GCP using gcloud CLI\nDESCRIPTION: This command creates a pull-based subscription for the Pub/Sub topic. Promtail will use this subscription to consume log messages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ gcloud pubsub subscriptions create cloud-logs --topic=projects/my-project/topics/cloud-logs \\\n--ack-deadline=10 \\\n--message-retention-duration=7d\n```\n\n----------------------------------------\n\nTITLE: Setting up CopyOnWriteFs in Afero (Go)\nDESCRIPTION: Creates a composite filesystem with a read-only base and a writable overlay. Read operations check the overlay first, then the base. Write operations only affect the overlay, with files from the base being copied to the overlay before modification.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n\tbase := afero.NewOsFs()\n\troBase := afero.NewReadOnlyFs(base)\n\tufs := afero.NewCopyOnWriteFs(roBase, afero.NewMemMapFs())\n\n\tfh, _ = ufs.Create(\"/home/test/file2.txt\")\n\tfh.WriteString(\"This is a test\")\n\tfh.Close()\n```\n\n----------------------------------------\n\nTITLE: Installing Fluent Bit with Helm in Kubernetes\nDESCRIPTION: These Helm commands add the Fluent Bit repository, update it, and install Fluent Bit in a Kubernetes cluster using a custom values file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add fluent https://fluent.github.io/helm-charts\nhelm repo update\nhelm install fluent-bit fluent/fluent-bit -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Bearer Token Authentication for Loki Client in YAML\nDESCRIPTION: Specifies bearer token authentication options for a Loki client, including direct token input or loading from a file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n[bearer_token: <secret>]\n[bearer_token_file: <filename>]\n```\n\n----------------------------------------\n\nTITLE: Metrics Query with Rate Calculation\nDESCRIPTION: Query to calculate per-second rate of non-timeout errors for MySQL job, filtered by duration threshold.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_examples.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\nsum by (host) (rate({job=\"mysql\"}\n    |= \"error\" != \"timeout\"\n    | json\n    | duration > 10s [1m]))\n```\n\n----------------------------------------\n\nTITLE: Creating Directory for Loki Evaluation Environment in Bash\nDESCRIPTION: Creates a directory called 'evaluate-loki' for the demo environment and changes into it as the working directory.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir evaluate-loki\ncd evaluate-loki\n```\n\n----------------------------------------\n\nTITLE: Dropping Targets with Empty Labels in Promtail YAML Configuration\nDESCRIPTION: This YAML snippet demonstrates how to drop a target if a specific label (__service__ in this case) is empty using Promtail's relabel_configs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n  - action: drop\n    regex: ''\n    source_labels:\n    - __service__\n```\n\n----------------------------------------\n\nTITLE: Creating Loki Alert Rule with Terraform\nDESCRIPTION: This snippet demonstrates how to create a Loki alert rule using Terraform. It defines an alert for high percentage errors in a specific application and environment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"loki_rule_group_alerting\" \"test\" {\n  name      = \"test1\"\n  namespace = \"namespace1\"\n  rule {\n    alert       = \"HighPercentageError\"\n    expr        = <<EOT\nsum(rate({app=\"foo\", env=\"production\"} |= \"error\" [5m])) by (job)\n  /\nsum(rate({app=\"foo\", env=\"production\"}[5m])) by (job)\n  > 0.05\nEOT\n    for         = \"10m\"\n    labels      = {\n      severity = \"warning\"\n    }\n    annotations = {\n      summary = \"High request latency\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Syslog-NG Output for Promtail in Syslog-NG Syntax\nDESCRIPTION: This configuration snippet shows how to set up Syslog-NG to forward logs to Promtail using TCP transport.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_15\n\nLANGUAGE: syslog-ng\nCODE:\n```\ndestination d_loki {\n  syslog(\"localhost\" transport(\"tcp\") port(<promtail_port>));\n};\n```\n\n----------------------------------------\n\nTITLE: GeoIP Pipeline Stage Schema Configuration in YAML\nDESCRIPTION: Basic schema configuration for the GeoIP pipeline stage showing the required fields including database path, source IP field, and database type selection.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/geoip.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ngeoip:\n  # Path to the Maxmind DB file\n  [db: <string>]\n\n  # IP from extracted data to parse.\n  [source: <string>]\n\n  # Maxmind DB type. Allowed values are \"city\", \"asn\"\n  [db_type: <string>]\n```\n\n----------------------------------------\n\nTITLE: Managing net.Listener with run.Group in Go\nDESCRIPTION: This example shows how to use run.Group with a net.Listener. It sets up an HTTP server on a TCP listener and adds it to the group, allowing for controlled shutdown of the server.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oklog/run/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nln, _ := net.Listen(\"tcp\", \":8080\")\ng.Add(func() error {\n\treturn http.Serve(ln, nil)\n}, func(error) {\n\tln.Close()\n})\n```\n\n----------------------------------------\n\nTITLE: Processing Kafka Records with Tracing\nDESCRIPTION: Function that demonstrates how to use the kotel.Tracer.WithProcessSpan method to create a process span when consuming and processing a Kafka record. It creates a span context from the record and properly closes it after processing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/twmb/franz-go/plugin/kotel/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc processRecord(record *kgo.Record, tracer *kotel.Tracer) {\n\tctx, span := tracer.WithProcessSpan(record)\n\t// Process the record here.\n\t// End the span when function exits.\n\tdefer span.End()\n\t// optionally pass the context to the next processing step.\n\tfmt.Printf(\n\t\t\"processed offset '%s' with key '%s' and value '%s'\\n\",\n\t\tstrconv.FormatInt(record.Offset, 10),\n\t\tstring(record.Key),\n\t\tstring(record.Value),\n\t)\n}\n```\n\n----------------------------------------\n\nTITLE: Using context for request timeout in etcd operations\nDESCRIPTION: Demonstrates how to use context.WithTimeout to specify a timeout for etcd operations, in this case a Put operation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/etcd/client/v3/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nctx, cancel := context.WithTimeout(context.Background(), timeout)\nresp, err := cli.Put(ctx, \"sample_key\", \"sample_value\")\ncancel()\nif err != nil {\n    // handle error!\n}\n// use the response\n```\n\n----------------------------------------\n\nTITLE: Parallelized Log Query with LogCLI in Shell\nDESCRIPTION: This example shows how to use LogCLI for parallelized log querying. It demonstrates the use of flags for parallel processing, including duration, max workers, and part file management. This approach is useful for processing large volumes of log data efficiently.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nlogcli query \\\n     --timezone=UTC \\\n     --from=\"2021-01-19T10:00:00Z\" \\\n     --to=\"2021-01-19T20:00:00Z\" \\\n     --output=jsonl \\\n     --parallel-duration=\"15m\" \\\n     --parallel-max-workers=\"4\" \\\n     --part-path-prefix=\"/tmp/my_query\" \\\n     --merge-parts \\\n     'my-query'\n```\n\n----------------------------------------\n\nTITLE: Inspecting Parquet Files using Low-Level API\nDESCRIPTION: Example demonstrating how to use the parquet.File type to access the low-level structure of a Parquet file, allowing iteration over row groups and column chunks for advanced operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nf, err := parquet.OpenFile(file, size)\nif err != nil {\n    ...\n}\n\nfor _, rowGroup := range f.RowGroups() {\n    for _, columnChunk := range rowGroup.ColumnChunks() {\n        ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail for Log Parsing and Labeling\nDESCRIPTION: Provides a YAML configuration for Promtail that demonstrates how to parse logs and add labels. This config uses regex to extract a 'level' label from log entries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nclients:\n  - url: http://localhost:3100/loki/api/v1/push\n\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n  - regex:\n      expression: '(level|lvl|severity)=(?P<level>\\\\w+)'\n  - labels:\n      level:\n  static_configs:\n  - labels:\n      job: my-stdin-logs\n```\n\n----------------------------------------\n\nTITLE: Aligning Text in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to align paragraphs of text to the left, right, or center using Lip Gloss styles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nvar style = lipgloss.NewStyle().\n    Width(24).\n    Align(lipgloss.Left).  // align it left\n    Align(lipgloss.Right). // no wait, align it right\n    Align(lipgloss.Center) // just kidding, align it in the center\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Local Storage in YAML\nDESCRIPTION: Configuration block for local file system storage backend in Loki. Specifies the directory where chunks will be stored.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_49\n\nLANGUAGE: yaml\nCODE:\n```\n# Directory to store chunks in.\n# CLI flag: -local.chunk-directory\n[directory: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring LokiStack with AlibabaCloud OSS Storage\nDESCRIPTION: YAML configuration for LokiStack that references an AlibabaCloud OSS secret for object storage. This snippet shows how to configure the storage section of a LokiStack instance to use AlibabaCloud OSS by specifying the secret name and type.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  storage:\n    secret:\n      name: lokistack-dev-alibabacloud\n      type: alibabacloud\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime and Operational Settings in YAML for Loki\nDESCRIPTION: YAML configuration blocks for runtime config, operational config, tracing, analytics, and profiling options in Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n# Configuration for 'runtime config' module, responsible for reloading runtime\n# configuration file.\n[runtime_config: <runtime_config>]\n\n# These are values which allow you to control aspects of Loki's operation, most\n# commonly used for controlling types of higher verbosity logging, the values\n# here can be overridden in the `configs` section of the `runtime_config` file.\n[operational_config: <operational_config>]\n\n# Configuration for tracing.\n[tracing: <tracing>]\n\n# Configuration for analytics.\n[analytics: <analytics>]\n\n# Configuration for profiling options.\n[profiling: <profiling>]\n```\n\n----------------------------------------\n\nTITLE: Configuring TSDB Shipper in Loki Storage Config (YAML)\nDESCRIPTION: This YAML configuration sets up the tsdb_shipper block in the storage_config. It specifies the active_index_directory for ingesters to write index files and the cache_location for downloading index files from storage for queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-to-tsdb/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  tsdb_shipper:\n    active_index_directory: /data/tsdb-index\n    cache_location: /data/tsdb-cache\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Policy using AWS CLI\nDESCRIPTION: Bash command to create an IAM policy named 'LokiS3AccessPolicy' using the AWS CLI, based on the previously defined JSON policy document.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naws iam create-policy --policy-name LokiS3AccessPolicy --policy-document file://loki-s3-policy.json\n```\n\n----------------------------------------\n\nTITLE: Installing Memcached for Loki Caches using Helm\nDESCRIPTION: These Helm commands install Memcached instances for chunk and results caches in Loki. They use the bitnami/memcached chart with custom override files.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nhelm upgrade --install chunk-cache -n loki bitnami/memcached -f memcached-overrides-chunk.yaml\nhelm upgrade --install results-cache -n loki bitnami/memcached -f memcached-overrides-results.yaml\n```\n\n----------------------------------------\n\nTITLE: Preparing Ingester Shutdown in Loki API\nDESCRIPTION: This endpoint is used to prepare the ingester for a full shutdown when the next SIGTERM or SIGINT signal is received, managing ring unregistration and data flushing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nGET, POST, DELETE /ingester/prepare_shutdown\n```\n\n----------------------------------------\n\nTITLE: Configuring Compactor Retention Settings in YAML\nDESCRIPTION: Shows how to configure retention settings using the compactor instead of table-manager\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ncompactor:\n  retention_enabled: true\nlimits_config:\n  retention_period: [30d]\n```\n\n----------------------------------------\n\nTITLE: Comparing Ingester StatefulSet Configurations\nDESCRIPTION: This bash script compares the configurations of the original ingester StatefulSet and the new zone-aware ingester StatefulSet. It helps ensure that all necessary configurations are correctly transferred to the new StatefulSets.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/zone-ingesters.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get statefulset -n loki-dev-008 ingester -o yaml > ingester.yaml\nkubectl get statefulset -n loki-dev-008 ingester-zone-a -o yaml > ingester-zone-a.yaml\ndiff ingester.yaml ingester-zone-a.yaml\n```\n\n----------------------------------------\n\nTITLE: Opening a bbolt Database with Timeout Option\nDESCRIPTION: Example of opening a bbolt database with a timeout option to prevent indefinite waiting if the database is already locked by another process.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ndb, err := bolt.Open(\"my.db\", 0600, &bolt.Options{Timeout: 1 * time.Second})\n```\n\n----------------------------------------\n\nTITLE: Migrating Filesystem Storage Configuration in Loki\nDESCRIPTION: Example showing the migration from existing FSConfig to Thanos-based filesystem storage configuration. The main change involves renaming 'directory' to 'dir' and adding Thanos object store configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  filesystem:\n    directory: /var/loki/chunks\n```\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    filesystem:\n      dir: /var/loki/chunks\n```\n\n----------------------------------------\n\nTITLE: Configuring Etcd Client in YAML\nDESCRIPTION: Configuration options for ETCD v3 client connections used by various Loki components, including endpoint configuration, connection timeouts, retries, and authentication settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\n# The etcd endpoints to connect to.\n# CLI flag: -<prefix>.etcd.endpoints\n[endpoints: <list of strings> | default = []]\n\n# The dial timeout for the etcd connection.\n# CLI flag: -<prefix>.etcd.dial-timeout\n[dial_timeout: <duration> | default = 10s]\n\n# The maximum number of retries to do for failed ops.\n# CLI flag: -<prefix>.etcd.max-retries\n[max_retries: <int> | default = 10]\n\n# Enable TLS.\n# CLI flag: -<prefix>.etcd.tls-enabled\n[tls_enabled: <boolean> | default = false]\n\n# The TLS configuration.\n# The CLI flags prefix for this block configuration is: ruler.ring.etcd\n[<tls_config>]\n\n# Etcd username.\n# CLI flag: -<prefix>.etcd.username\n[username: <string> | default = \"\"]\n\n# Etcd password.\n# CLI flag: -<prefix>.etcd.password\n[password: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Using Logical Operators in LogQL\nDESCRIPTION: Demonstrates the use of the 'and' logical operator to find the intersection of two log queries in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\nrate({app=~\"foo|bar\"}[1m]) and rate({app=\"bar\"}[1m])\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Discovery Relabeling in Promtail\nDESCRIPTION: Relabeling configuration for Kubernetes service discovery in Promtail. It shows how to create an __host__ label from __meta_kubernetes_pod_node_name, which is necessary for Promtail to validate and read log files from pods on the same node.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nrelabel_configs:\n  - source_labels: ['__meta_kubernetes_pod_node_name']\n    target_label: '__host__'\n```\n\n----------------------------------------\n\nTITLE: OR Condition with IP Subnets in LogQL\nDESCRIPTION: Shows how to use the conditional 'or' to match log lines with IP addresses from multiple subnets in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_6\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"}\n\t\t| logfmt\n\t\t| addr = ip(\"192.168.4.0/24\") or addr = ip(\"10.10.15.0/24\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Relabeling in Lambda-promtail\nDESCRIPTION: These JSON snippets demonstrate various relabeling configurations for Lambda-promtail. They show how to rename labels, filter log types, drop internal AWS labels, and combine multiple relabeling rules.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RELABEL_CONFIGS\": [\n    {\n      \"source_labels\": [\"__aws_log_type\"],\n      \"target_label\": \"log_type\",\n      \"action\": \"replace\",\n      \"regex\": \"(.*)\",\n      \"replacement\": \"${1}\"\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RELABEL_CONFIGS\": [\n    {\n      \"source_labels\": [\"__aws_log_type\"],\n      \"regex\": \"s3_.*\",\n      \"action\": \"keep\"\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RELABEL_CONFIGS\": [\n    {\n      \"regex\": \"__aws_.*\",\n      \"action\": \"labeldrop\"\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RELABEL_CONFIGS\": [\n    {\n      \"source_labels\": [\"__aws_log_type\"],\n      \"target_label\": \"log_type\",\n      \"action\": \"replace\",\n      \"regex\": \"(.*)\",\n      \"replacement\": \"${1}\"\n    },\n    {\n      \"source_labels\": [\"__aws_s3_log_lb\"],\n      \"target_label\": \"loadbalancer\",\n      \"action\": \"replace\"\n    },\n    {\n      \"regex\": \"__aws_.*\",\n      \"action\": \"labeldrop\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Loki Stack with Docker-Compose in Bash\nDESCRIPTION: Shell command to start the Loki distributed setup locally. This runs the current code base in the repository, allowing for quick iteration and debugging of new features.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/loki-tsdb-storage-s3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./tools/dev/loki-tsdb-storage-s3/compose-up.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Monitoring Destinations\nDESCRIPTION: YAML configuration for setting up Prometheus and Loki endpoints in values.yaml.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/meta-monitoring/README.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndestinations:\n  - name: prometheus\n    type: prometheus\n    url:  https://<PROMETHEUS-ENDPOINT>/api/prom/push\n    # Configure authentication as needed\n    \n  - name: loki\n    type: loki\n    url: https://<LOKI-ENDPOINT>/loki/api/v1/push\n    # Configure authentication as needed\n```\n\n----------------------------------------\n\nTITLE: Logging Info with Key-Value Pairs in Go using go-hclog\nDESCRIPTION: Illustrates how to log an info level message with additional key-value pairs for context, including error handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ninput := \"5.5\"\n_, err := strconv.ParseInt(input, 10, 32)\nif err != nil {\n\tappLogger.Info(\"Invalid input for ParseInt\", \"input\", input, \"error\", err)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ReadOnlyFs in Afero (Go)\nDESCRIPTION: Creates a thin wrapper around the source filesystem that provides a read-only view. Any write operations will return permission errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nfs := afero.NewReadOnlyFs(afero.NewOsFs())\n_, err := fs.Create(\"/file.txt\")\n// err = syscall.EPERM\n```\n\n----------------------------------------\n\nTITLE: Overriding Standard Library Logger with Logrus\nDESCRIPTION: Demonstrates how to replace the standard library's log package with Logrus for consistent logging throughout an application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nlogger := logrus.New()\nlogger.Formatter = &logrus.JSONFormatter{}\n\n// Use logrus for standard log output\n// Note that `log` here references stdlib's log\n// Not logrus imported under the name `log`.\nlog.SetOutput(logger.Writer())\n```\n\n----------------------------------------\n\nTITLE: Defining Metric Types in YAML for Promtail\nDESCRIPTION: YAML schema for defining different types of metrics (counter, gauge, histogram) in Promtail's 'metrics' pipeline stage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmetrics:\n  [<string>: [ <metric_counter> | <metric_gauge> | <metric_histogram> ] ...]\n```\n\n----------------------------------------\n\nTITLE: Using Backoff with Network Connections in Go\nDESCRIPTION: Example of using the Backoff struct in a network connection retry loop. It demonstrates error handling and resetting the backoff on successful connection.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jpillora/backoff/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nb := &backoff.Backoff{\n    Max:    5 * time.Minute,\n}\n\nfor {\n\tconn, err := net.Dial(\"tcp\", \"example.com:5309\")\n\tif err != nil {\n\t\td := b.Duration()\n\t\tfmt.Printf(\"%s, reconnecting in %s\", err, d)\n\t\ttime.Sleep(d)\n\t\tcontinue\n\t}\n\t//connected\n\tb.Reset()\n\tconn.Write([]byte(\"hello world!\"))\n\t// ... Read ... Write ... etc\n\tconn.Close()\n\t//disconnected\n}\n```\n\n----------------------------------------\n\nTITLE: Installing/Upgrading Loki Deployment\nDESCRIPTION: Helm commands for installing or upgrading the Loki deployment using the values configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-scalable/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values values.yaml loki grafana/loki\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --values values.yaml loki grafana/loki\n```\n\n----------------------------------------\n\nTITLE: Registering Fatal Handlers in Logrus\nDESCRIPTION: Demonstrates how to register functions that will be called when fatal level messages are logged, allowing for graceful shutdown before the application exits.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nhandler := func() {\n  // gracefully shutdown something...\n}\nlogrus.RegisterExitHandler(handler)\n```\n\n----------------------------------------\n\nTITLE: Handling Azure Blob Storage Errors\nDESCRIPTION: Example demonstrating how to handle specific Blob Storage error codes when attempting to delete a container, ignoring errors if the container is already being deleted or not found.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nconst (\n\tconnectionString = \"<connection_string>\"\n\tcontainerName    = \"sample-container\"\n)\n\n// create a client with the provided connection string\nclient, err := azblob.NewClientFromConnectionString(connectionString, nil)\n// TODO: handle error\n\n// try to delete the container, avoiding any potential race conditions with an in-progress or completed deletion\n_, err = client.DeleteContainer(context.TODO(), containerName, nil)\n\nif bloberror.HasCode(err, bloberror.ContainerBeingDeleted, bloberror.ContainerNotFound) {\n\t// ignore any errors if the container is being deleted or already has been deleted\n} else if err != nil {\n\t// TODO: some other error\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Loki and Promtail Modules with jsonnet-bundler\nDESCRIPTION: Commands to download and install the Loki and Promtail modules using jsonnet-bundler (jb). This fetches the necessary Jsonnet files for deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/tanka.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\njb init  # not required if you already ran `tk init`\njb install github.com/grafana/loki/production/ksonnet/loki@main\njb install github.com/grafana/loki/production/ksonnet/promtail@main\n```\n\n----------------------------------------\n\nTITLE: Implementing Channel Communication in GopherLua\nDESCRIPTION: Demonstrates channel communication between goroutines using GopherLua. Shows how to set up receiver and sender functions that communicate through channels while handling channel closure and message passing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_22\n\nLANGUAGE: go\nCODE:\n```\nfunc receiver(ch, quit chan lua.LValue) {\n    L := lua.NewState()\n    defer L.Close()\n    L.SetGlobal(\"ch\", lua.LChannel(ch))\n    L.SetGlobal(\"quit\", lua.LChannel(quit))\n    if err := L.DoString(`\n    local exit = false\n    while not exit do\n      channel.select(\n        {\"|<-\", ch, function(ok, v)\n          if not ok then\n            print(\"channel closed\")\n            exit = true\n          else\n            print(\"received:\", v)\n          end\n        end},\n        {\"|<-\", quit, function(ok, v)\n            print(\"quit\")\n            exit = true\n        end}\n      )\n    end\n  `); err != nil {\n        panic(err)\n    }\n}\n\nfunc sender(ch, quit chan lua.LValue) {\n    L := lua.NewState()\n    defer L.Close()\n    L.SetGlobal(\"ch\", lua.LChannel(ch))\n    L.SetGlobal(\"quit\", lua.LChannel(quit))\n    if err := L.DoString(`\n    ch:send(\"1\")\n    ch:send(\"2\")\n  `); err != nil {\n        panic(err)\n    }\n    ch <- lua.LString(\"3\")\n    quit <- lua.LTrue\n}\n\nfunc main() {\n    ch := make(chan lua.LValue)\n    quit := make(chan lua.LValue)\n    go receiver(ch, quit)\n    go sender(ch, quit)\n    time.Sleep(3 * time.Second)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Network Client Factory in Go\nDESCRIPTION: Code to initialize a client factory for the Azure Network module. The factory requires a subscription ID and credential object for authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nclientFactory, err := armnetwork.NewClientFactory(<subscription ID>, cred, nil)\n```\n\n----------------------------------------\n\nTITLE: Executing Instant Query with k6-loki\nDESCRIPTION: Demonstrates how to perform an instant query using the k6-loki client to fetch error logs from a specific application.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport default () => {\n  client.instantQuery(`rate({app=\"my-app-name\"} | logfmt | level=\"error\" [5m])`);\n}\n```\n\n----------------------------------------\n\nTITLE: Authentication Using Environment Variables\nDESCRIPTION: Example of authenticating with OpenStack using credentials from environment variables set by openrc file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"os\"\n\n\t\"github.com/gophercloud/gophercloud/v2\"\n\t\"github.com/gophercloud/gophercloud/v2/openstack\"\n)\n\nfunc main() {\n\tctx := context.Background()\n\n\topts, err := openstack.AuthOptionsFromEnv()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tproviderClient, err := openstack.AuthenticatedClient(ctx, opts)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tcomputeClient, err := openstack.NewComputeV2(providerClient, gophercloud.EndpointOpts{\n\t\tRegion: os.Getenv(\"OS_REGION_NAME\"),\n\t})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// use the computeClient\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tencent COS in YAML\nDESCRIPTION: This snippet shows the YAML configuration for Tencent Cloud Object Storage (COS), including bucket information, authentication credentials, and HTTP client settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ntype: COS\nconfig:\n  bucket: \"\"\n  region: \"\"\n  app_id: \"\"\n  endpoint: \"\"\n  secret_key: \"\"\n  secret_id: \"\"\n  http_config:\n    idle_conn_timeout: 1m30s\n    response_header_timeout: 2m\n    insecure_skip_verify: false\n    tls_handshake_timeout: 10s\n    expect_continue_timeout: 1s\n    max_idle_conns: 100\n    max_idle_conns_per_host: 100\n    max_conns_per_host: 0\n    tls_config:\n      ca_file: \"\"\n      cert_file: \"\"\n      key_file: \"\"\n      server_name: \"\"\n      insecure_skip_verify: false\n    disable_compression: false\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Writing Parquet Files with WriteFile Function\nDESCRIPTION: Example of using the parquet.WriteFile function to create a Parquet file from a slice of Go struct values. This approach is ideal for simple use cases where the data fits in memory.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct { FirstName, LastName string }\n\nif err := parquet.WriteFile(\"file.parquet\", []RowType{\n    {FirstName: \"Bob\"},\n    {FirstName: \"Alice\"},\n}); err != nil {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Enumerating Blobs in a Container\nDESCRIPTION: Code example showing how to list all blobs in a container by using a pager to fetch multiple pages of results.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nconst (\n\taccount       = \"https://MYSTORAGEACCOUNT.blob.core.windows.net/\"\n\tcontainerName = \"sample-container\"\n)\n\n// authenticate with Azure Active Directory\ncred, err := azidentity.NewDefaultAzureCredential(nil)\n// TODO: handle error\n\n// create a client for the specified storage account\nclient, err := azblob.NewClient(account, cred, nil)\n// TODO: handle error\n\n// blob listings are returned across multiple pages\npager := client.NewListBlobsFlatPager(containerName, nil)\n\n// continue fetching pages until no more remain\nfor pager.More() {\n  // advance to the next page\n\tpage, err := pager.NextPage(context.TODO())\n\t// TODO: handle error\n\n\t// print the blob names for this page\n\tfor _, blob := range page.Segment.BlobItems {\n\t\tfmt.Println(*blob.Name)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Schema Configuration in YAML\nDESCRIPTION: Configuration for chunk index schema and storage location.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_65\n\nLANGUAGE: yaml\nCODE:\n```\n[configs: <list of period_configs>]\n```\n\n----------------------------------------\n\nTITLE: Setting Rule Group in Loki API\nDESCRIPTION: POST endpoint to create or update a rule group. Requires application/yaml Content-Type header and a YAML rule definition in the request body.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nPOST /loki/api/v1/rules/{namespace}\n```\n\n----------------------------------------\n\nTITLE: Sending Log Data to Loki Using curl\nDESCRIPTION: This curl command sends a test log entry to Loki's push API. It includes a timestamp and sample text with proper JSON formatting. When auth is enabled, it includes the X-Scope-OrgId header for tenant identification.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/templates/NOTES.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Content-Type: application/json\" -XPOST -s \"http://127.0.0.1:3100/loki/api/v1/push\"  \\\n--data-raw \"{\\\"streams\\\": [{\\\"stream\\\": {\\\"job\\\": \\\"test\\\"}, \\\"values\\\": [[\\\"$(date +%s)000000000\\\", \\\"fizzbuzz\\\"]]}]}\"\n```\n\n----------------------------------------\n\nTITLE: Creating OTLP Trace Exporter Pipeline in Go\nDESCRIPTION: Adds convenience functions 'NewExportPipeline' and 'InstallNewPipeline' in the 'go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc' package to set up and install an OTLP trace exporter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_23\n\nLANGUAGE: Go\nCODE:\n```\nNewExportPipeline(ctx context.Context, opts ...Option) (TracerProvider, error)\nInstallNewPipeline(ctx context.Context, opts ...Option) (TracerProvider, error)\n```\n\n----------------------------------------\n\nTITLE: Checking Version Constraints in Go\nDESCRIPTION: Example of how to create a version constraint and check if a particular version meets the constraints using the semver package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/semver/v3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nc, err := semver.NewConstraint(\">= 1.2.3\")\nif err != nil {\n    // Handle constraint not being parsable.\n}\n\nv, err := semver.NewVersion(\"1.3\")\nif err != nil {\n    // Handle version not being parsable.\n}\n// Check if the version meets the constraints. The variable a will be true.\na := c.Check(v)\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Storage Configuration\nDESCRIPTION: Complete configuration for deploying Loki with Google Cloud Storage (GCS) backend. Includes local index directory and cache location settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/configuration-examples.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nauth_enabled: false\n\nserver:\n  http_listen_port: 3100\n\ncommon:\n  ring:\n    instance_addr: 127.0.0.1\n    kvstore:\n      store: inmemory\n  replication_factor: 1\n  path_prefix: /loki\n\nschema_config:\n  configs:\n  - from: 2020-05-15\n    store: tsdb\n    object_store: gcs\n    schema: v13\n    index:\n      prefix: index_\n      period: 24h\n\nstorage_config:\n  tsdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/index_cache\n  gcs:\n    bucket_name: replace_by_your_bucked_name\n```\n\n----------------------------------------\n\nTITLE: Loki Instant Query Command Usage\nDESCRIPTION: Documents the instant-query command usage for executing point-in-time LogQL queries. Includes configuration options for authentication, connection settings, and output formatting.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli instant-query [<flags>] <query>\n\nRun an instant LogQL query.\n\nThe \"instant-query\" command is useful for evaluating a metric query for a single point in time. This is equivalent to the Grafana Explore\ntable view; if you want a metrics query that is used to build a Grafana graph, you should use the \"query\" command instead.\n```\n\n----------------------------------------\n\nTITLE: Using Loki Stats Command\nDESCRIPTION: The stats command returns statistics from the TSDB index about data contained in matching streams. It supports time range specification and various authentication and connection options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli stats [<flags>] <query>\n\nRun a stats query.\n\nThe \"stats\" command will take the provided query and return statistics from the index on how much data is contained in the matching stream(s).\nThis only works against Loki instances using the TSDB index format.\n\nBy default we look over the last hour of data; use --since to modify or provide specific start and end times with --from and --to\nrespectively.\n\nNotice that when using --from and --to then ensure to use RFC3339Nano time format, but without timezone at the end. The local timezone will be\nadded automatically or if using --timezone flag.\n\nExample:\n\n  logcli stats\n     --timezone=UTC\n     --from=\"2021-01-19T10:00:00Z\"\n     --to=\"2021-01-19T20:00:00Z\"\n     'my-query'\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n  -q, --quiet                 Suppress query metadata\n      --stats                 Show query statistics\n  -o, --output=default        Specify output mode [default, raw, jsonl]. raw suppresses log labels and timestamp.\n  -z, --timezone=Local        Specify the timezone to use when formatting output timestamps [Local, UTC]\n      --cpuprofile=\"\"         Specify the location for writing a CPU profile.\n      --memprofile=\"\"         Specify the location for writing a memory profile.\n      --stdin                 Take input logs from stdin\n      --addr=\"http://localhost:3100\"\n                              Server address. Can also be set using LOKI_ADDR env var.\n      --username=\"\"           Username for HTTP basic auth. Can also be set using LOKI_USERNAME env var.\n      --password=\"\"           Password for HTTP basic auth. Can also be set using LOKI_PASSWORD env var.\n      --ca-cert=\"\"            Path to the server Certificate Authority. Can also be set using LOKI_CA_CERT_PATH env var.\n      --tls-skip-verify       Server certificate TLS skip verify. Can also be set using LOKI_TLS_SKIP_VERIFY env var.\n      --cert=\"\"               Path to the client certificate. Can also be set using LOKI_CLIENT_CERT_PATH env var.\n      --key=\"\"                Path to the client certificate key. Can also be set using LOKI_CLIENT_KEY_PATH env var.\n      --org-id=\"\"             adds X-Scope-OrgID to API requests for representing tenant ID. Useful for requesting tenant data when bypassing\n                              an auth gateway. Can also be set using LOKI_ORG_ID env var.\n      --query-tags=\"\"         adds X-Query-Tags http header to API requests. This header value will be part of `metrics.go` statistics.\n                              Useful for tracking the query. Can also be set using LOKI_QUERY_TAGS env var.\n      --bearer-token=\"\"       adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN env var.\n      --bearer-token-file=\"\"  adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN_FILE env var.\n      --retries=0             How many times to retry each query when getting an error response from Loki. Can also be set using\n                              LOKI_CLIENT_RETRIES env var.\n      --min-backoff=0         Minimum backoff time between retries. Can also be set using LOKI_CLIENT_MIN_BACKOFF env var.\n      --max-backoff=0         Maximum backoff time between retries. Can also be set using LOKI_CLIENT_MAX_BACKOFF env var.\n      --auth-header=\"Authorization\"\n                              The authorization header used. Can also be set using LOKI_AUTH_HEADER env var.\n      --proxy-url=\"\"          The http or https proxy to use when making requests. Can also be set using LOKI_HTTP_PROXY_URL env var.\n      --compress              Request that Loki compress returned data in transit. Can also be set using LOKI_HTTP_COMPRESSION env var.\n      --since=1h              Lookback window.\n      --from=FROM             Start looking for logs at this absolute time (inclusive)\n      --to=TO                 Stop looking for logs at this absolute time (exclusive)\n\nArgs:\n  <query>  eg '{foo=\"bar\",baz=~\".*blip\"} |~ \".*error.*\"'\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets for Grafana Cloud Credentials\nDESCRIPTION: Commands to create Kubernetes secrets for storing Grafana Cloud credentials for logs, metrics, and traces authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic logs -n meta \\\n  --from-literal=username=<USERNAME LOGS> \\\n  --from-literal= <ACCESS POLICY TOKEN> \\\n  --from-literal=endpoint='https://<LOG URL>/loki/api/v1/push'\n\nkubectl create secret generic metrics -n meta \\\n  --from-literal=username=<USERNAME METRICS> \\\n  --from-literal=password=<ACCESS POLICY TOKEN> \\\n  --from-literal=endpoint='https://<METRICS URL>/api/prom/push'\n\nkubectl create secret generic traces -n meta \\\n  --from-literal=username=<OTLP INSTANCE ID> \\\n  --from-literal=password=<ACCESS POLICY TOKEN> \\\n  --from-literal=endpoint='https://<OTLP URL>/otlp'\n```\n\n----------------------------------------\n\nTITLE: Initializing Bubble Tea Application in Go\nDESCRIPTION: Sets up the basic structure for a Bubble Tea application, including package declaration and imports. This snippet forms the foundation for the rest of the tutorial.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"fmt\"\n    \"os\"\n\n    tea \"github.com/charmbracelet/bubbletea\"\n)\n```\n\n----------------------------------------\n\nTITLE: Listing All Containers Using Docker Engine API Go Client\nDESCRIPTION: This snippet demonstrates how to use the Docker Engine API Go client to list all containers, equivalent to the 'docker ps --all' command. It initializes the API client, retrieves the container list, and prints the ID, image, and status of each container.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/docker/client/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/docker/docker/api/types/container\"\n\t\"github.com/docker/docker/client\"\n)\n\nfunc main() {\n\tapiClient, err := client.NewClientWithOpts(client.FromEnv)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer apiClient.Close()\n\n\tcontainers, err := apiClient.ContainerList(context.Background(), container.ListOptions{All: true})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfor _, ctr := range containers {\n\t\tfmt.Printf(\"%s %s (status: %s)\\n\", ctr.ID, ctr.Image, ctr.Status)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Syslog Listener in Promtail (YAML)\nDESCRIPTION: This YAML configuration block sets up a syslog listener in Promtail. It includes options for TCP listening, TLS configuration, idle timeout, label management, and syslog format settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nlisten_address: <string>\n\ntls_config:\n  cert_file: <string>\n  key_file: <string>\n  [ ca_file: <string> ]\n\nidle_timeout: <duration>\n\nlabel_structured_data: <bool>\n\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n\nuse_incoming_timestamp: <bool>\n\nmax_message_length: <int>\n\nsyslog_format:\n [type: <string> | default = \"rfc5424\"]\n\nuse_rfc5424_message: <bool>\n```\n\n----------------------------------------\n\nTITLE: Configuring Compactor Retention Settings in YAML\nDESCRIPTION: YAML configuration for enabling the compactor retention feature in Loki. Shows the basic compactor configuration that enables retention functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncompactor:\n  retention_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Downloading Loki Configuration Files in Linux\nDESCRIPTION: Commands to download Loki and Promtail configuration files from GitHub repository\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/docker.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/grafana/loki/v3.4.1/cmd/loki/loki-local-config.yaml -O loki-config.yaml\nwget https://raw.githubusercontent.com/grafana/loki/v3.4.1/clients/cmd/promtail/promtail-docker-config.yaml -O promtail-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Basic Loki Output Configuration with Labels\nDESCRIPTION: Basic Fluent Bit configuration for Loki output with custom labels and key management.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_10\n\nLANGUAGE: properties\nCODE:\n```\n[Output]\n    Name grafana-loki\n    Match *\n    Url http://localhost:3100/loki/api/v1/push\n    BatchWait 1s\n    BatchSize 30720\n    # (30KiB)\n    Labels {test=\"fluent-bit-go\", lang=\"Golang\"}\n    RemoveKeys key1,key2\n    LabelKeys key3,key4\n    LineFormat key_value\n```\n\n----------------------------------------\n\nTITLE: Kubernetes DaemonSet Configuration\nDESCRIPTION: YAML configuration for deploying Loki Canary as a DaemonSet with associated service in Kubernetes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-canary/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  labels:\n    app: loki-canary\n    name: loki-canary\n  name: loki-canary\nspec:\n  template:\n    metadata:\n      name: loki-canary\n      labels:\n        app: loki-canary\n    spec:\n      containers:\n      - args:\n        - -addr=loki:3100\n        image: grafana/loki-canary:latest\n        imagePullPolicy: IfNotPresent\n        name: loki-canary\n        resources: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: loki-canary\n  labels:\n    app: loki-canary\nspec:\n  type: ClusterIP\n  selector:\n    app: loki-canary\n  ports:\n  - name: metrics\n    protocol: TCP\n    port: 3500\n    targetPort: 3500\n```\n\n----------------------------------------\n\nTITLE: Importing go-restful Package in Go\nDESCRIPTION: Examples of how to import the go-restful package with and without Go modules. For versions up to v2, import without modules. For v3 and later, use Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/emicklei/go-restful/v3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nimport (\n\trestful \"github.com/emicklei/go-restful\"\n)\n```\n\nLANGUAGE: Go\nCODE:\n```\nimport (\n\trestful \"github.com/emicklei/go-restful/v3\"\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Frontend Worker in YAML\nDESCRIPTION: Configuration options for the frontend worker running within the Loki querier that picks up and executes queries enqueued by the query-frontend.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\n# Address of query frontend service, in host:port format. If\n# -querier.scheduler-address is set as well, querier will use scheduler instead.\n# Only one of -querier.frontend-address or -querier.scheduler-address can be\n# set. If neither is set, queries are only received via HTTP endpoint.\n# CLI flag: -querier.frontend-address\n[frontend_address: <string> | default = \"\"]\n\n# Hostname (and port) of scheduler that querier will periodically resolve,\n# connect to and receive queries from. Only one of -querier.frontend-address or\n# -querier.scheduler-address can be set. If neither is set, queries are only\n# received via HTTP endpoint.\n# CLI flag: -querier.scheduler-address\n[scheduler_address: <string> | default = \"\"]\n\n# How often to query DNS for query-frontend or query-scheduler address. Also\n# used to determine how often to poll the scheduler-ring for addresses if the\n# scheduler-ring is configured.\n# CLI flag: -querier.dns-lookup-period\n[dns_lookup_duration: <duration> | default = 3s]\n\n# Querier ID, sent to frontend service to identify requests from the same\n# querier. Defaults to hostname.\n# CLI flag: -querier.id\n[id: <string> | default = \"\"]\n\n# Configures the querier gRPC client used to communicate with the\n# query-frontend. This can't be used in conjunction with 'grpc_client_config'.\n# The CLI flags prefix for this block configuration is:\n# querier.frontend-grpc-client\n[query_frontend_grpc_client: <grpc_client>]\n\n# Configures the querier gRPC client used to communicate with the query-frontend\n# and with the query-scheduler. This can't be used in conjunction with\n# 'query_frontend_grpc_client' or 'query_scheduler_grpc_client'.\n# The CLI flags prefix for this block configuration is: querier.frontend-client\n[grpc_client_config: <grpc_client>]\n\n# Configures the querier gRPC client used to communicate with the\n# query-scheduler. This can't be used in conjunction with 'grpc_client_config'.\n# The CLI flags prefix for this block configuration is:\n# querier.scheduler-grpc-client\n[query_scheduler_grpc_client: <grpc_client>]\n```\n\n----------------------------------------\n\nTITLE: Structured Metadata Schema Configuration in YAML\nDESCRIPTION: Basic YAML schema configuration for the structured_metadata stage that defines how metadata key-value pairs should be mapped.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/structured_metadata.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstructured_metadata:\n  # Key is REQUIRED and the name for the label of structured metadata that will be created.\n  # Value is optional and will be the name from extracted data whose value\n  # will be used for the value of the label. If empty, the value will be\n  # inferred to be the same as the key.\n  [ <string>: [<string>] ... ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Heroku HTTPS Drain in Promtail (YAML)\nDESCRIPTION: This snippet illustrates the configuration for Promtail to receive logs from a Heroku application using HTTPS Drain. It sets up an HTTP server, defines labels, and includes relabeling for Heroku-specific attributes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- job_name: heroku_drain\n    heroku_drain:\n      server:\n        http_listen_address: 0.0.0.0\n        http_listen_port: 8080\n      labels:\n        job: heroku_drain_docs\n      use_incoming_timestamp: true\n    relabel_configs:\n      - source_labels: ['__heroku_drain_host']\n        target_label: 'host'\n      - source_labels: ['__heroku_drain_app']\n        target_label: 'source'\n      - source_labels: ['__heroku_drain_proc']\n        target_label: 'proc'\n      - source_labels: ['__heroku_drain_log_id']\n        target_label: 'log_id'\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Google Cloud Storage Objects in Go\nDESCRIPTION: This code shows the new way to iterate through Google Cloud Storage objects after API changes. It replaces the BucketHandle.List method with a new Objects method that returns an iterator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_41\n\nLANGUAGE: go\nCODE:\n```\niter := bucket.Objects(d.ctx, query)\nfor {\n    obj, err := iter.Next()\n    if err == iterator.Done {\n        break\n    }\n    if err != nil { ... }\n    fmt.Println(obj)\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Retry Logic in Go\nDESCRIPTION: Demonstrates how to use the ShouldRetry field in policy.RetryOptions for custom retry logic.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nretryOptions := policy.RetryOptions{\n    ShouldRetry: func(err error) bool {\n        // Custom retry logic\n        return true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IAM Trust Policy for EKS in JSON\nDESCRIPTION: JSON configuration for IAM trust policy allowing EKS to assume the role. Specifies conditions for AssumeRoleWithWebIdentity action based on OIDC provider.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Federated\": \"arn:aws:iam::< ACCOUNT ID >:oidc-provider/oidc.eks.<INSERT REGION>.amazonaws.com/id/< OIDC ID >\"\n            },\n            \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"oidc.eks.<INSERT REGION>.amazonaws.com/id/< OIDC ID >:sub\": \"system:serviceaccount:loki:loki\",\n                    \"oidc.eks.<INSERT REGION>.amazonaws.com/id/< OIDC ID >:aud\": \"sts.amazonaws.com\"\n                }\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Calling C Functions from Go using Purego\nDESCRIPTION: This example demonstrates how to use Purego to call the 'puts' function from the system library on macOS and Linux. It dynamically loads the appropriate library, registers the 'puts' function, and calls it from Go code.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ebitengine/purego/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\n\t\"github.com/ebitengine/purego\"\n)\n\nfunc getSystemLibrary() string {\n\tswitch runtime.GOOS {\n\tcase \"darwin\":\n\t\treturn \"/usr/lib/libSystem.B.dylib\"\n\tcase \"linux\":\n\t\treturn \"libc.so.6\"\n\tdefault:\n\t\tpanic(fmt.Errorf(\"GOOS=%s is not supported\", runtime.GOOS))\n\t}\n}\n\nfunc main() {\n\tlibc, err := purego.Dlopen(getSystemLibrary(), purego.RTLD_NOW|purego.RTLD_GLOBAL)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tvar puts func(string)\n\tpurego.RegisterLibFunc(&puts, libc, \"puts\")\n\tputs(\"Calling C from Go without Cgo!\")\n}\n```\n\n----------------------------------------\n\nTITLE: LogQL Pipeline Performance Examples\nDESCRIPTION: Demonstrates the performance impact of filter placement in log pipelines, showing optimal and suboptimal arrangements.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"mysql\"} |= \"error\" | json | line_format \"{{.err}}\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"mysql\"} | json | line_format \"{{.message}}\" |= \"error\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Log Scraping in Promtail\nDESCRIPTION: Configuration block for scraping logs from Google Cloud Platform. Specifies labels to add to every log message and lists available internal labels for relabeling based on pull or push subscriptions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\n# Label map to add to every log message.\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n```\n\n----------------------------------------\n\nTITLE: Basic Arithmetic Operation in LogQL\nDESCRIPTION: Demonstrates a simple health check query using basic arithmetic in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n1 + 1\n```\n\n----------------------------------------\n\nTITLE: Runtime Configuration Settings in YAML\nDESCRIPTION: Configuration block for the runtime config module that handles dynamic configuration file reloading. Includes settings for reload period and file paths.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_63\n\nLANGUAGE: yaml\nCODE:\n```\n# How often to check runtime config files.\n# CLI flag: -runtime-config.reload-period\n[period: <duration> | default = 10s]\n\n# Comma separated list of yaml files with the configuration that can be updated\n# at runtime. Runtime config files will be merged from left to right.\n# CLI flag: -runtime-config.file\n[file: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Stack with Logstash on Kubernetes\nDESCRIPTION: Helm command to install the Loki stack on Kubernetes, using Filebeat for log scraping and Logstash for forwarding to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install loki loki/loki-stack \\\n    --set filebeat.enabled=true,logstash.enabled=true,promtail.enabled=false \\\n    --set loki.fullnameOverride=loki,logstash.fullnameOverride=logstash-loki\n```\n\n----------------------------------------\n\nTITLE: Configuring Tenant-Specific Ingestion Limits for Loki in Kubernetes\nDESCRIPTION: This YAML configuration demonstrates how to set tenant-specific ingestion rate limits for Loki in Kubernetes. It allows adjusting the ingestion rate for different log types (application, audit, infrastructure).\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nlimits:\n    tenants:\n        <TENANT_NAME>:\n            IngestionLimits:\n                IngestionRate: 15\n```\n\n----------------------------------------\n\nTITLE: Creating OpenTelemetry Pipeline Configuration\nDESCRIPTION: YAML configuration for setting up the pipeline that connects receivers, processors, and exporters for log processing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/otel-collector-getting-started.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  pipelines:\n    logs:\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [otlphttp/logs]\n```\n\n----------------------------------------\n\nTITLE: Advanced Log Filtering in GCP using gcloud CLI\nDESCRIPTION: This command demonstrates a more complex log filtering setup, including multiple cloud resource logs and excluding specific logs based on payload and status code.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ gcloud logging sinks create cloud-logs pubsub.googleapis.com/projects/my-project/topics/cloud-logs \\\n--log-filter='resource.type=(\"gcs_bucket OR k8s_cluster OR service_account OR iam_role OR api OR audited_resource OR http_load_balancer\")' \\\n--description=\"Cloud logs\" \\\n--exclusion='name=http_load_balancer,filter=<<EOF\nresource.type=\"http_load_balancer\"\n(\n\t(\n\t\tjsonPayload.statusDetails=(\"byte_range_caching\" OR \"websocket_closed\")\n\t)\n\t\tOR\n\t(\n\t\thttp_request.status=(101 OR 206)\n\t)\n)\nEOF\n```\n\n----------------------------------------\n\nTITLE: Querying Log Patterns with cURL in Loki API\nDESCRIPTION: This example demonstrates how to query log patterns using the Loki API, which returns detected patterns in logs with sample counts at specific timestamps.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s \"http://localhost:3100/loki/api/v1/patterns\" \\\n  --data-urlencode 'query={app=\"loki\"}' | jq\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"pattern\": \"<_> caller=grpc_logging.go:66 <_> level=error method=/cortex.Ingester/Push <_> msg=gRPC err=\\\"connection refused to object store\\\"\",\n      \"samples\": [\n        [\n          1711839260,\n          1\n        ],\n        [\n          1711839270,\n          2\n        ],\n        [\n          1711839280,\n          1\n        ]\n      ]\n    },\n    {\n      \"pattern\": \"<_> caller=grpc_logging.go:66 <_> level=info method=/cortex.Ingester/Push <_> msg=gRPC\",\n      \"samples\": [\n        [\n          1711839260,\n          105\n        ],\n        [\n          1711839270,\n          222\n        ],\n        [\n          1711839280,\n          196\n        ]\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Fluentd Logs from Loki\nDESCRIPTION: Command to verify that syslog entries from Fluentd are being properly stored in Loki by querying for logs with the job label 'fluentd'.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl \"http://localhost:3100/loki/api/v1/query_range\" --data-urlencode 'query={job=\"fluentd\"}' --data-urlencode 'step=300' | jq .data.result\n```\n\n----------------------------------------\n\nTITLE: Template Stage Configuration in YAML\nDESCRIPTION: Configuration for the template stage that uses Go's text/template to manipulate values. Includes source and template parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ntemplate:\n  source: level\n  template: '{{ if eq .Value \"WARN\" }}{{ Replace .Value \"WARN\" \"OK\" -1 }}{{ else }}{{ .Value }}{{ end }}'\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStack API Extensions for Zone-Aware Replication in Go\nDESCRIPTION: Go struct definitions for the LokiStack CRD that add support for zone-aware replication configuration. Includes new ReplicationSpec and ZoneSpec types with fields for replication factor and topology settings.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/prometheus/prometheus/model/labels\"\n\ntype LokiStackSpec struct {\n    ReplicationFactor int32 `json:\"replicationFactor,omitempty\"`\n    Replication *ReplicationSpec `json:\"replication,omitempty\"`\n}\n\ntype ReplicationSpec struct {\n    Factor int32 `json:\"factor,omitempty\"`\n    Zones []ZoneSpec\n}\n\ntype ZoneSpec struct {\n    MaxSkew int `json:\"maxSkew,omitempty\"`\n    Topologykey string `json:\"topologyKey,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Rule Groups in Loki API\nDESCRIPTION: Lists all rules configured for the authenticated tenant, returning a YAML dictionary with all rule groups for each namespace.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/rules\n```\n\nLANGUAGE: yaml\nCODE:\n```\n---\n<namespace1>:\n- name: <string>\n  interval: <duration;optional>\n  rules:\n  - alert: <string>\n      expr: <string>\n      for: <duration>\n      annotations:\n      <annotation_name>: <string>\n      labels:\n      <label_name>: <string>\n- name: <string>\n  interval: <duration;optional>\n  rules:\n  - alert: <string>\n      expr: <string>\n      for: <duration>\n      annotations:\n      <annotation_name>: <string>\n      labels:\n      <label_name>: <string>\n<namespace2>:\n- name: <string>\n  interval: <duration;optional>\n  rules:\n  - alert: <string>\n      expr: <string>\n      for: <duration>\n      annotations:\n      <annotation_name>: <string>\n      labels:\n      <label_name>: <string>\n```\n\n----------------------------------------\n\nTITLE: Docker Compose with Loki Relabeling\nDESCRIPTION: YAML configuration demonstrating label modification using Prometheus relabeling in Docker Compose\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3\"\nservices:\n  grafana:\n    image: grafana/grafana\n    logging:\n      driver: loki\n      options:\n        loki-url: http://host.docker.internal:3100/loki/api/v1/push\n        loki-relabel-config: |\n          - action: labelmap\n            regex: swarm_stack\n            replacement: namespace\n          - action: labelmap\n            regex: swarm_(service)\n    ports:\n      - \"3000:3000\"\n```\n\n----------------------------------------\n\nTITLE: IP Address Matching Using CIDR in LogQL Line Filter\nDESCRIPTION: Demonstrates how to use the ip() function with a CIDR pattern in a LogQL line filter to match IP addresses.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"} |= ip(\"192.168.4.5/16\")\n```\n\n----------------------------------------\n\nTITLE: Querying Inflight Requests for Loki Querier Scaling in PromQL\nDESCRIPTION: A PromQL query that calculates the sum of maximum inflight requests over time. This metric combines queued queries and queries currently running in querier workers, making it ideal for autoscaling decisions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/autoscaling_queriers.md#2025-04-19_snippet_0\n\nLANGUAGE: promql\nCODE:\n```\nsum(\n  max_over_time(\n    loki_query_scheduler_inflight_requests{namespace=\"loki-cluster\", quantile=\"<Q>\"}[<R>]\n  )\n)\n```\n\n----------------------------------------\n\nTITLE: Ruler Configuration Specification Fields\nDESCRIPTION: RulerConfigSpec fields for configuring evaluation intervals, polling intervals, alertmanager settings, remote write endpoints, and tenant-specific overrides.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_28\n\nLANGUAGE: kubernetes\nCODE:\n```\nevaluationInterval: PrometheusDuration\npollInterval: PrometheusDuration\nalertmanager: AlertManagerSpec\nremoteWrite: RemoteWriteSpec\noverrides: map[string]RulerOverrides\n```\n\n----------------------------------------\n\nTITLE: Detailed Block Inspection in Shell\nDESCRIPTION: Example of using the -b parameter with chunks-inspect to show detailed information about each block inside a chunk, including position, length, compression ratio, timestamps, and checksums.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/chunks-inspect/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ ./chunks-inspect -b db61b4eca2a5ad68\\:16f89ff4164\\:16f8a0cfb41\\:1538ace0\n\n... chunk file info, see above ...\n \nBlock    0: position:        6, original length: 273604 (stored:  56220, ratio: 4.87), minT: 2020-01-09 11:10:04.644490 UTC maxT: 2020-01-09 11:12:53.458289 UTC, checksum: 13e73d71 OK\nBlock    0: digest compressed: ae657fdbb2b8be55eebe86b31a21050de2b5e568444507e5958218710ddf02fd, original: 0dad619bf3049a1152cb3153d90c6db6c3f54edbf9977753dde3c4e1b09d07b4\nBlock    1: position:    56230, original length: 274703 (stored:  60861, ratio: 4.51), minT: 2020-01-09 11:12:53.461855 UTC maxT: 2020-01-09 11:16:35.420787 UTC, checksum: 55269e65 OK\nBlock    1: digest compressed: a7999f471f68cce0458ff9790e7e7501c5bfe14cc28661d8670b9d88aeaee96f, original: a617a9e0b6c33aeaa83833470cf6164c540a7a64258e55eec6fdff483059df6f\nBlock    2: position:   117095, original length: 273592 (stored:  56563, ratio: 4.84), minT: 2020-01-09 11:16:35.423228 UTC maxT: 2020-01-09 11:19:28.680048 UTC, checksum: 781dba21 OK\nBlock    2: digest compressed: 65b59cc61c5eeea8116ce8a8c0b0d98b4d4671e8bc91656979c93717050a18fc, original: 896cc6487365ad0590097794a202aad5c89776d1c626f2cea33c652885939ac6\nBlock    3: position:   173662, original length: 273745 (stored:  57486, ratio: 4.76), minT: 2020-01-09 11:19:31.062836 UTC maxT: 2020-01-09 11:23:13.562630 UTC, checksum: 2a88a52b OK\nBlock    3: digest compressed: 4f51a64d0397cc806a898cd6662695620083466f234d179fef5c2d02c9766191, original: 15e8a1833ccbba9aa8374029141a054127526382423d3a63f321698ff8e087b5\nBlock    4: position:   231152, original length: 161675 (stored:  33440, ratio: 4.83), minT: 2020-01-09 11:23:15.416284 UTC maxT: 2020-01-09 11:25:04.192368 UTC, checksum: 6d952296 OK\nBlock    4: digest compressed: 8dd12235f1d619c30a9afb66823a6c827613257773669fda6fbfe014ed623cd1, original: 1f7e8ef8eb937c87ad3ed3e24c321c40d43534cc43662f83ab493fb3391548b2\nTotal size of original data: 1257319 file size: 265226 ratio: 4.74\n```\n\n----------------------------------------\n\nTITLE: Testing Membership in Bloom Filter in Go\nDESCRIPTION: This code shows how to test if an item is present in the Bloom filter. It checks if the string \"Love\" is in the filter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bloom/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nif filter.Test([]byte(\"Love\"))\n```\n\n----------------------------------------\n\nTITLE: Starting and Enabling Loki and Promtail Services on openSUSE\nDESCRIPTION: This snippet demonstrates how to start and enable the Loki and Promtail services using systemd on openSUSE. It ensures that both services start automatically on system boot.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsystemd start loki\nsystemd enable loki\nsystemd start promtail\nsystemd enable promtail\n```\n\n----------------------------------------\n\nTITLE: Rate Limiting with Drop Configuration\nDESCRIPTION: Configuration example demonstrating rate limiting with the drop option enabled to discard logs exceeding the limit.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/limit.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- limit:\n    rate: 10\n    burst: 10\n    drop: true\n```\n\n----------------------------------------\n\nTITLE: Defining Clock Interface for Time Operations in Go\nDESCRIPTION: This code snippet defines the Clock interface with methods for getting current time, sleeping, and creating timers. It's designed to be implemented for both real-time and mock time scenarios.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/utils/clock/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\ntype Clock interface {\n\t// Now returns the current local time.\n\tNow() time.Time\n\n\t// Sleep pauses the current goroutine for at least the duration d.\n\tSleep(d time.Duration)\n\n\t// After waits for the duration to elapse and then sends the current time on the returned channel.\n\tAfter(d time.Duration) <-chan time.Time\n\n\t// NewTicker returns a new Ticker containing a channel that will send the current time on the channel\n\t// after each tick. The period of the ticks is specified by the duration argument.\n\tNewTicker(d time.Duration) *time.Ticker\n\n\t// Since returns the time elapsed since t.\n\tSince(t time.Time) time.Duration\n}\n```\n\n----------------------------------------\n\nTITLE: Reversing a String while Preserving Grapheme Clusters\nDESCRIPTION: Example showing how to reverse a string while preserving grapheme clusters using the ReverseString function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println(uniseg.ReverseString(\"🇩🇪🏳️‍🌈\"))\n// 🏳️‍🌈🇩🇪\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with Azure Blob Storage\nDESCRIPTION: YAML configuration for deploying Loki with Azure Blob Storage as the object storage backend. This setup includes Azure-specific settings for authentication and storage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: azure\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  ingester:\n    chunk_encoding: snappy\n\n  storage:\n    type: azure\n    azure:\n      # Name of the Azure Blob Storage account\n      accountName: <your-account-name>\n      # Key associated with the Azure Blob Storage account\n      accountKey: <your-account-key>\n      # Comprehensive connection string for Azure Blob Storage account (Can be used to replace endpoint, accountName, and accountKey)\n      connectionString: <your-connection-string>\n      # Flag indicating whether to use Azure Managed Identity for authentication\n      useManagedIdentity: false\n      # Flag indicating whether to use a federated token for authentication\n      useFederatedToken: false\n      # Client ID of the user-assigned managed identity (if applicable)\n      userAssignedId: <your-user-assigned-id>\n      # Timeout duration for requests made to the Azure Blob Storage account (in seconds)\n      requestTimeout: <your-request-timeout>\n      # Domain suffix of the Azure Blob Storage service endpoint (e.g., core.windows.net)\n      endpointSuffix: <your-endpoint-suffix>\n    bucketNames:\n      chunks: \"chunks\"\n      ruler: \"ruler\"\n      admin: \"admin\"\n```\n\n----------------------------------------\n\nTITLE: S3 Storage Configuration Migration Example\nDESCRIPTION: Examples showing the migration from existing S3 configuration to new Thanos-based configuration format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  aws:\n    bucket_names: my-bucket1,my-bucket2\n    endpoint: s3.amazonaws.com\n    region: us-west-2\n    access_key_id: example-key\n    secret_access_key: example-secret\n    signature_version: v4\n    disable_dualstack: true\n    storage_class: STANDARD\n    http_config:\n      timeout: 1m\n      insecure_skip_verify: false\n    backoff_config:\n      max_retries: 5\n    sse:\n      type: SSE-KMS\n      kms_key_id: mySSEKey\n```\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    s3:\n      bucket_name: my-bucket1\n      endpoint: s3.amazonaws.com\n      region: us-west-2\n      access_key_id: example-key\n      secret_access_key: example-secret\n      dualstack_enabled: false\n      storage_class: STANDARD\n      max_retries: 5\n      http:\n        insecure_skip_verify: false\n      sse:\n        type: SSE-KMS\n        kms_key_id: mySSEKey\n```\n\n----------------------------------------\n\nTITLE: Enabling Unstable RESP3 for RediSearch Commands\nDESCRIPTION: Demonstrates how to enable unstable RESP3 protocol support for Redis search commands. This is necessary when working with complex structures like search results that are not yet finalized in the RESP3 protocol.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nredis.NewClient(&redis.Options{\n\t\t\tUnstableResp3: true,\n\t\t})\n```\n\n----------------------------------------\n\nTITLE: Retrieving Baggage Item in Go\nDESCRIPTION: Demonstrates how to retrieve a baggage item from a span in a downstream Go service.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nif span := opentracing.SpanFromContext(ctx); span != nil {\n    val := span.BaggageItem(\"key\")\n    println(val)\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Log Data from Loki Using curl\nDESCRIPTION: This curl command queries Loki for log entries with the job label 'test' and formats the output using jq. It demonstrates how to use Loki's query_range API endpoint to retrieve log data, with optional authentication header.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/templates/NOTES.txt#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl \"http://127.0.0.1:3100/loki/api/v1/query_range\" --data-urlencode 'query={job=\"test\"}' | jq .data.result\n```\n\n----------------------------------------\n\nTITLE: Importing bbolt in Go Application\nDESCRIPTION: Code example showing how to import bbolt and open a database connection with proper error handling and deferred closing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport bolt \"go.etcd.io/bbolt\"\n\ndb, err := bolt.Open(path, 0600, nil)\nif err != nil {\n  return err\n}\ndefer db.Close()\n```\n\n----------------------------------------\n\nTITLE: Running the Chroma Development Server in Shell\nDESCRIPTION: Shell command for running the Chroma development server to test changes to lexers in a browser-based playground.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\ngo run . --csrf-key=securekey\n```\n\n----------------------------------------\n\nTITLE: Creating a Bucket in Bolt Database (Go)\nDESCRIPTION: Demonstrates how to create a new bucket in a Bolt database using a transaction. The function creates a bucket named 'MyBucket' and handles potential errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\ndb.Update(func(tx *bolt.Tx) error {\n\tb, err := tx.CreateBucket([]byte(\"MyBucket\"))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"create bucket: %s\", err)\n\t}\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Detecting Language from Content in Go\nDESCRIPTION: Snippet demonstrating how to analyze code content to determine its language using Chroma's lexers.Analyse function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nlexer := lexers.Analyse(\"package main\\n\\nfunc main()\\n{\\n}\\n\")\n```\n\n----------------------------------------\n\nTITLE: Tokenizing Content in Go\nDESCRIPTION: Snippet demonstrating how to read content and convert it into tokens using the lexer's Tokenise function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ncontents, err := ioutil.ReadAll(r)\niterator, err := lexer.Tokenise(nil, string(contents))\n```\n\n----------------------------------------\n\nTITLE: Docker Events Configuration File\nDESCRIPTION: Fluent Bit configuration file for collecting Docker events using the docker_events input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_4\n\nLANGUAGE: conf\nCODE:\n```\n[INPUT]\n    Name   docker_events\n\n[OUTPUT]\n    Name   loki\n    Match  *\n    Host   loki\n    Port   3100\n    Labels agent=fluent-bit,env=docker\n```\n\n----------------------------------------\n\nTITLE: Enabling Structured Metadata in Loki Configuration\nDESCRIPTION: YAML configuration for enabling structured metadata in Loki. Sets allow_structured_metadata to true and configures volume_enabled and retention_period settings in the limits_config section.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/structured-metadata.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n    retention_period: 672h # 28 days retention\n```\n\n----------------------------------------\n\nTITLE: Using Miniredis in Go Unit Tests\nDESCRIPTION: Demonstrates how to use Miniredis in a Go unit test, including setting up test data, connecting with redigo, verifying values, handling TTLs, and testing key expiration functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alicebob/miniredis/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    ...\n    \"github.com/alicebob/miniredis/v2\"\n    ...\n)\n\nfunc TestSomething(t *testing.T) {\n\ts := miniredis.RunT(t)\n\n\t// Optionally set some keys your code expects:\n\ts.Set(\"foo\", \"bar\")\n\ts.HSet(\"some\", \"other\", \"key\")\n\n\t// Run your code and see if it behaves.\n\t// An example using the redigo library from \"github.com/gomodule/redigo/redis\":\n\tc, err := redis.Dial(\"tcp\", s.Addr())\n\t_, err = c.Do(\"SET\", \"foo\", \"bar\")\n\n\t// Optionally check values in redis...\n\tif got, err := s.Get(\"foo\"); err != nil || got != \"bar\" {\n\t\tt.Error(\"'foo' has the wrong value\")\n\t}\n\t// ... or use a helper for that:\n\ts.CheckGet(t, \"foo\", \"bar\")\n\n\t// TTL and expiration:\n\ts.Set(\"foo\", \"bar\")\n\ts.SetTTL(\"foo\", 10*time.Second)\n\ts.FastForward(11 * time.Second)\n\tif s.Exists(\"foo\") {\n\t\tt.Fatal(\"'foo' should not have existed anymore\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Quick Syntax Highlighting with Chroma in Go\nDESCRIPTION: Demonstrates using Chroma's quick.Highlight function to easily highlight source code and output the result.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nerr := quick.Highlight(os.Stdout, someSourceCode, \"go\", \"html\", \"monokai\")\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Go-Redis Client\nDESCRIPTION: Demonstrates how to create a Redis client connection, set a key-value pair, and retrieve values with error handling. This example shows the basic usage pattern for the go-redis library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"context\"\n    \"fmt\"\n\n    \"github.com/redis/go-redis/v9\"\n)\n\nvar ctx = context.Background()\n\nfunc ExampleClient() {\n    rdb := redis.NewClient(&redis.Options{\n        Addr:     \"localhost:6379\",\n        Password: \"\", // no password set\n        DB:       0,  // use default DB\n    })\n\n    err := rdb.Set(ctx, \"key\", \"value\", 0).Err()\n    if err != nil {\n        panic(err)\n    }\n\n    val, err := rdb.Get(ctx, \"key\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"key\", val)\n\n    val2, err := rdb.Get(ctx, \"key2\").Result()\n    if err == redis.Nil {\n        fmt.Println(\"key2 does not exist\")\n    } else if err != nil {\n        panic(err)\n    } else {\n        fmt.Println(\"key2\", val2)\n    }\n    // Output: key value\n    // key2 does not exist\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Run with Pipeline Stages\nDESCRIPTION: Bash script showing how to configure pipeline stages when running a Docker container\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nread -d '' stages << EOF\n- regex:\n     expression: '(level|lvl|severity)=(?P<level>\\\\\\w+)'\n- labels:\n    level:\nEOF\n\ndocker run --log-driver=loki \\\n    --log-opt loki-url=\"http://host.docker.internal:3100/loki/api/v1/push\" \\\n    --log-opt loki-pipeline-stages=\"$stages\" \\\n    -p 3000:3000 grafana/grafana\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Client in Loki\nDESCRIPTION: Configuration options for the gRPC client used for communication between client and server components in Loki. Includes message size limits, compression, rate limiting, and connection parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\n# gRPC client max receive message size (bytes).\n# CLI flag: -<prefix>.grpc-max-recv-msg-size\n[max_recv_msg_size: <int> | default = 104857600]\n\n# gRPC client max send message size (bytes).\n# CLI flag: -<prefix>.grpc-max-send-msg-size\n[max_send_msg_size: <int> | default = 104857600]\n\n# Use compression when sending messages. Supported values are: 'gzip', 'snappy'\n# and '' (disable compression)\n# CLI flag: -<prefix>.grpc-compression\n[grpc_compression: <string> | default = \"\"]\n\n# Rate limit for gRPC client; 0 means disabled.\n# CLI flag: -<prefix>.grpc-client-rate-limit\n[rate_limit: <float> | default = 0]\n\n# Rate limit burst for gRPC client.\n# CLI flag: -<prefix>.grpc-client-rate-limit-burst\n[rate_limit_burst: <int> | default = 0]\n\n# Enable backoff and retry when we hit rate limits.\n# CLI flag: -<prefix>.backoff-on-ratelimits\n[backoff_on_ratelimits: <boolean> | default = false]\n\nbackoff_config:\n  # Minimum delay when backing off.\n  # CLI flag: -<prefix>.backoff-min-period\n  [min_period: <duration> | default = 100ms]\n\n  # Maximum delay when backing off.\n  # CLI flag: -<prefix>.backoff-max-period\n  [max_period: <duration> | default = 10s]\n\n  # Number of times to backoff and retry before failing.\n  # CLI flag: -<prefix>.backoff-retries\n  [max_retries: <int> | default = 10]\n\n# Initial stream window size. Values less than the default are not supported and\n# are ignored. Setting this to a value other than the default disables the BDP\n# estimator.\n# CLI flag: -<prefix>.initial-stream-window-size\n[initial_stream_window_size: <int> | default = 63KiB1023B]\n\n# Initial connection window size. Values less than the default are not supported\n# and are ignored. Setting this to a value other than the default disables the\n# BDP estimator.\n# CLI flag: -<prefix>.initial-connection-window-size\n[initial_connection_window_size: <int> | default = 63KiB1023B]\n\n# Enable TLS in the gRPC client. This flag needs to be enabled when any other\n# TLS flag is set. If set to false, insecure connection to gRPC server will be\n# used.\n# CLI flag: -<prefix>.tls-enabled\n[tls_enabled: <boolean> | default = false]\n\n# The TLS configuration.\n# The CLI flags prefix for this block configuration is:\n# tsdb.shipper.index-gateway-client.grpc\n[<tls_config>]\n\n# The maximum amount of time to establish a connection. A value of 0 means\n# default gRPC client connect timeout and backoff.\n# CLI flag: -<prefix>.connect-timeout\n[connect_timeout: <duration> | default = 5s]\n\n# Initial backoff delay after first connection failure. Only relevant if\n# ConnectTimeout > 0.\n# CLI flag: -<prefix>.connect-backoff-base-delay\n[connect_backoff_base_delay: <duration> | default = 1s]\n\n# Maximum backoff delay when establishing a connection. Only relevant if\n# ConnectTimeout > 0.\n# CLI flag: -<prefix>.connect-backoff-max-delay\n[connect_backoff_max_delay: <duration> | default = 5s]\n\ncluster_validation:\n  # Optionally define the cluster validation label.\n  # CLI flag: -<prefix>.cluster-validation.label\n  [label: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Using OpenTelemetry OTLP Exporters in Go\nDESCRIPTION: Example showing the transition from the removed general OTLP exporter to the specific trace exporter. This change is part of the refactoring of exporters in the OpenTelemetry Go SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_28\n\nLANGUAGE: Go\nCODE:\n```\n// Old (removed) approach\nimport \"go.opentelemetry.io/otel/exporters/otlp\"\n\n// New recommended approach\nimport \"go.opentelemetry.io/otel/exporters/otlp/otlptrace\"\n```\n\n----------------------------------------\n\nTITLE: Using OpenTelemetry Stdout Exporters in Go\nDESCRIPTION: Example showing the transition from the removed general stdout exporter to the specific trace or metric exporters. This change supports better separation of concerns in the OpenTelemetry Go SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_29\n\nLANGUAGE: Go\nCODE:\n```\n// Old (removed) approach\nimport \"go.opentelemetry.io/otel/exporters/stdout\"\n\n// New recommended approaches\n// For traces:\nimport \"go.opentelemetry.io/otel/exporters/stdout/stdouttrace\"\n// For metrics:\nimport \"go.opentelemetry.io/otel/exporters/stdout/stdoutmetric\"\n```\n\n----------------------------------------\n\nTITLE: Loki Series API Response (JSON)\nDESCRIPTION: This snippet shows the JSON response structure from the Loki series API. It includes a status field and a data array containing series information with various labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"container_name\": \"loki\",\n      \"app\": \"loki\",\n      \"stream\": \"stderr\",\n      \"filename\": \"/var/log/pods/default_loki-stack-0_50835643-1df0-11ea-ba79-025000000001/loki/0.log\",\n      \"name\": \"loki\",\n      \"job\": \"default/loki\",\n      \"controller_revision_hash\": \"loki-stack-757479754d\",\n      \"statefulset_kubernetes_io_pod_name\": \"loki-stack-0\",\n      \"release\": \"loki-stack\",\n      \"namespace\": \"default\",\n      \"instance\": \"loki-stack-0\"\n    },\n    {\n      \"chart\": \"prometheus-9.3.3\",\n      \"container_name\": \"prometheus-server-configmap-reload\",\n      \"filename\": \"/var/log/pods/default_loki-stack-prometheus-server-696cc9ddff-87lmq_507b1db4-1df0-11ea-ba79-025000000001/prometheus-server-configmap-reload/0.log\",\n      \"instance\": \"loki-stack-prometheus-server-696cc9ddff-87lmq\",\n      \"pod_template_hash\": \"696cc9ddff\",\n      \"app\": \"prometheus\",\n      \"component\": \"server\",\n      \"heritage\": \"Tiller\",\n      \"job\": \"default/prometheus\",\n      \"namespace\": \"default\",\n      \"release\": \"loki-stack\",\n      \"stream\": \"stderr\"\n    },\n    {\n      \"app\": \"prometheus\",\n      \"component\": \"server\",\n      \"filename\": \"/var/log/pods/default_loki-stack-prometheus-server-696cc9ddff-87lmq_507b1db4-1df0-11ea-ba79-025000000001/prometheus-server/0.log\",\n      \"release\": \"loki-stack\",\n      \"namespace\": \"default\",\n      \"pod_template_hash\": \"696cc9ddff\",\n      \"stream\": \"stderr\",\n      \"chart\": \"prometheus-9.3.3\",\n      \"container_name\": \"prometheus-server\",\n      \"heritage\": \"Tiller\",\n      \"instance\": \"loki-stack-prometheus-server-696cc9ddff-87lmq\",\n      \"job\": \"default/prometheus\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Storage Settings for Loki\nDESCRIPTION: YAML configuration for setting up S3 storage type and bucket names in Loki without explicit credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/configure-storage/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  storage:\n    type: \"s3\"\n    s3:\n      region: eu-central-1\n    bucketNames:\n      chunks: <bucket name>\n      ruler: <bucket name>\n      admin: <bucket name>\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-domain Routing with HttpRouter in Go\nDESCRIPTION: This example demonstrates how to handle multiple domains or subdomains using HttpRouter. It creates a custom HostSwitch type that maps hostnames to different http.Handlers, allowing different routing rules for different domains.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/julienschmidt/httprouter/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// We need an object that implements the http.Handler interface.\n// Therefore we need a type for which we implement the ServeHTTP method.\n// We just use a map here, in which we map host names (with port) to http.Handlers\ntype HostSwitch map[string]http.Handler\n\n// Implement the ServeHTTP method on our new type\nfunc (hs HostSwitch) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\t// Check if a http.Handler is registered for the given host.\n\t// If yes, use it to handle the request.\n\tif handler := hs[r.Host]; handler != nil {\n\t\thandler.ServeHTTP(w, r)\n\t} else {\n\t\t// Handle host names for which no handler is registered\n\t\thttp.Error(w, \"Forbidden\", 403) // Or Redirect?\n\t}\n}\n\nfunc main() {\n\t// Initialize a router as usual\n\trouter := httprouter.New()\n\trouter.GET(\"/\", Index)\n\trouter.GET(\"/hello/:name\", Hello)\n\n\t// Make a new HostSwitch and insert the router (our http handler)\n\t// for example.com and port 12345\n\ths := make(HostSwitch)\n\ths[\"example.com:12345\"] = router\n\n\t// Use the HostSwitch to listen and serve on port 12345\n\tlog.Fatal(http.ListenAndServe(\":12345\", hs))\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Redis-based Distributed Mutex with Redsync in Go\nDESCRIPTION: Example demonstrates how to create and use a distributed mutex lock using Redsync with go-redis driver. Shows initialization of Redis client, creation of mutex, acquiring lock, and releasing it safely.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-redsync/redsync/v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\tgoredislib \"github.com/redis/go-redis/v9\"\n\t\"github.com/go-redsync/redsync/v4\"\n\t\"github.com/go-redsync/redsync/v4/redis/goredis/v9\"\n)\n\nfunc main() {\n\t// Create a pool with go-redis (or redigo) which is the pool redisync will\n\t// use while communicating with Redis. This can also be any pool that\n\t// implements the `redis.Pool` interface.\n\tclient := goredislib.NewClient(&goredislib.Options{\n\t\tAddr: \"localhost:6379\",\n\t})\n\tpool := goredis.NewPool(client) // or, pool := redigo.NewPool(...)\n\n\t// Create an instance of redisync to be used to obtain a mutual exclusion\n\t// lock.\n\trs := redsync.New(pool)\n\n\t// Obtain a new mutex by using the same name for all instances wanting the\n\t// same lock.\n\tmutexname := \"my-global-mutex\"\n\tmutex := rs.NewMutex(mutexname)\n\n\t// Obtain a lock for our given mutex. After this is successful, no one else\n\t// can obtain the same lock (the same mutex name) until we unlock it.\n\tif err := mutex.Lock(); err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Do your work that requires the lock.\n\n\t// Release the lock so other processes or threads can obtain a lock.\n\tif ok, err := mutex.Unlock(); !ok || err != nil {\n\t\tpanic(\"unlock failed\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: BoltDB Shipper Configuration\nDESCRIPTION: Settings for BoltDB-based index storage configuration including active directory settings, caching parameters, and index gateway client options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_71\n\nLANGUAGE: yaml\nCODE:\n```\nboltdb_shipper:\n  active_index_directory: <string> | default = \"\"\n  cache_location: <string> | default = \"\"\n  cache_ttl: <duration> | default = 24h\n  resync_interval: <duration> | default = 5m\n  query_ready_num_days: <int> | default = 0\n  build_per_tenant_index: <boolean> | default = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiline Stage Schema in YAML\nDESCRIPTION: Defines the schema for configuring the multiline stage in Promtail's pipeline. It includes options for specifying the firstline regular expression, maximum wait time, and maximum number of lines per block.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/multiline.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmultiline:\n  # RE2 regular expression, if matched will start a new multiline block.\n  # This expression must be provided.\n  firstline: <string>\n\n  # The maximum wait time will be parsed as a Go duration: https://golang.org/pkg/time/#ParseDuration.\n  # If no new logs arrive within this maximum wait time, the current block will be sent on.\n  # This is useful if the observed application dies with, for example, an exception.\n  # No new logs will arrive and the exception\n  # block is sent *after* the maximum wait time expires.\n  # It defaults to 3s.\n  max_wait_time: <duration>\n\n  # Maximum number of lines a block can have. If the block has more lines, a new block is started.\n  # The default is 128 lines.\n  max_lines: <integer>\n```\n\n----------------------------------------\n\nTITLE: Complex Date Formatting with 'template' Stage in YAML\nDESCRIPTION: Demonstrates a complex use of the 'template' stage for formatting dates, including conditional logic and string manipulation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: time\n    template: \"\\\n      {{ .date_local | substr 6 10 }}-{{ .date_local | substr 0 2 }}-{{ .date_local | substr 3 5 }}T\\\n      {{ if eq (.time_local | substr 0 2) \\\"12\\\" }}\\\n          {{ if eq .hour_period \\\"AM\\\" }}00{{ else }}12{{ end }}{{ .time_local | substr 2 10}}Z\\\n      {{ else }}\\\n          {{ if eq .hour_period \\\"AM\\\" }}\\\n              {{ if or (eq (.time_local | substr 0 2) \\\"11\\\") (eq (.time_local | substr 0 2) \\\"10\\\") }}{{ .time_local }}Z\\\n                  {{ else }}0{{ .time_local }}Z\\\n              {{ end }}\\\n          {{ else }}\\\n              {{ if eq (.time_local | substr 0 2) \\\"11\\\" }}23{{ .time_local | substr 2 10 }}Z{{ end }}\\\n              {{ if eq (.time_local | substr 0 2) \\\"10\\\" }}22{{ .time_local | substr 2 10 }}Z{{ end }}\\\n              {{ if eq (.time_local | substr 0 2) \\\"9:\\\" }}21{{ .time_local | substr 1 10 }}Z{{ end }}\\\n              {{ if eq (.time_local | substr 0 2) \\\"8:\\\" }}20{{ .time_local | substr 1 10 }}Z{{ end }}\\\n              {{ if and (le (.time_local | substr 0 1) \\\"7\\\") (eq (.time_local | substr 1 2) \\\":\\\") }}1{{ add (.time_local | substr 0 1) 2 }}{{ .time_local | substr 1 10 }}Z{{ end }}\\\n          {{ end }}\\\n      {{ end }}\"\n  - timestamp:\n      source: time\n      format: RFC3339\n```\n\n----------------------------------------\n\nTITLE: Implementing Claims Interface in Go for JWT Library v5.0.0\nDESCRIPTION: Demonstrates the new Claims interface in v5.0.0, which replaces the previous Valid() method with a set of getter functions for various claim types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype Claims interface {\n\tGetExpirationTime() (*NumericDate, error)\n\tGetIssuedAt() (*NumericDate, error)\n\tGetNotBefore() (*NumericDate, error)\n\tGetIssuer() (string, error)\n\tGetSubject() (string, error)\n\tGetAudience() (ClaimStrings, error)\n}\n```\n\n----------------------------------------\n\nTITLE: Using Afero for Testing in Go\nDESCRIPTION: This snippet demonstrates how to use Afero's MemMapFs for testing, creating a blank slate memory backend for each test.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfunc TestExist(t *testing.T) {\n\tappFS := afero.NewMemMapFs()\n\t// create test files and directories\n\tappFS.MkdirAll(\"src/a\", 0755)\n\tafero.WriteFile(appFS, \"src/a/b\", []byte(\"file b\"), 0644)\n\tafero.WriteFile(appFS, \"src/c\", []byte(\"file c\"), 0644)\n\tname := \"src/c\"\n\t_, err := appFS.Stat(name)\n\tif os.IsNotExist(err) {\n\t\tt.Errorf(\"file \\\"%s\\\" does not exist.\\n\", name)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Provider in Terraform\nDESCRIPTION: This Terraform configuration sets up the Loki provider for managing alerts and recording rules. It specifies the required provider and configures the Loki provider with URI and organization ID.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_providers {\n    loki = {\n      source = \"fgouteroux/loki\"\n    }\n  }\n}\n\n# Provider config\nprovider \"loki\" {\n  uri = \"http://127.0.0.1:3100\"\n  org_id = \"mytenant\"\n}\n```\n\n----------------------------------------\n\nTITLE: Float16 Package API Overview in Go\nDESCRIPTION: Provides an overview of the Float16 type and the API exposed by the float16 package. It includes exported types, constants, functions, and methods available for working with Float16 values.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/x448/float16/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\npackage float16 // import \"github.com/x448/float16\"\n\n// Exported types and consts\ntype Float16 uint16\nconst ErrInvalidNaNValue = float16Error(\"float16: invalid NaN value, expected IEEE 754 NaN\")\n\n// Exported functions\nFromfloat32(f32 float32) Float16\nFromNaN32ps(nan float32) (Float16, error)\nFrombits(b16 uint16) Float16\nNaN() Float16\nInf(sign int) Float16\nPrecisionFromfloat32(f32 float32) Precision\n\n// Exported methods\n(f Float16) Float32() float32\n(f Float16) Bits() uint16\n(f Float16) IsNaN() bool\n(f Float16) IsQuietNaN() bool\n(f Float16) IsInf(sign int) bool\n(f Float16) IsFinite() bool\n(f Float16) IsNormal() bool\n(f Float16) Signbit() bool\n(f Float16) String() string\n```\n\n----------------------------------------\n\nTITLE: Installing Loki and Promtail using APT Package Manager\nDESCRIPTION: This snippet demonstrates the installation of Loki and Promtail using the APT package manager on Debian-based systems. It updates the package list and installs both Loki and Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get update\napt-get install loki promtail\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 Authentication for Loki Client in YAML\nDESCRIPTION: Defines OAuth2 authentication settings for a Loki client, including client ID, secret, token URL, and optional scopes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\noauth2:\n  [client_id: <string>]\n  [client_secret: <secret>]\n  [client_secret_file: <filename>]\n  scopes:\n    [ - <string> ... ]\n  token_url: <string>\n  endpoint_params:\n    [ <string>: <string> ... ]\n```\n\n----------------------------------------\n\nTITLE: Defining RecordingRule CRD struct in Golang for LokiStack\nDESCRIPTION: This code defines the RecordingRule CRD structure for LokiStack which allows storing precomputed LogQL expressions as time series. It includes specifications for tenant association, rule groups, evaluation intervals, and validation conditions. The structure parallels the AlertingRule CRD but focuses on recording metrics instead of triggering alerts.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// RecordingRuleSpec defines the desired state of RecordingRule\ntype RecordingRuleSpec struct {\n    // Tenant to associate the recording rule groups.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Tenant ID\"\n    TenantID string `json:\"tenantID\"`\n\n    // List of groups for recording rules.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Groups\"\n    Groups []*RecordingRuleGroup `json:\"groups\"`\n}\n\n// RecordingRuleGroup defines a group of Loki  recording rules.\ntype RecordingRuleGroup struct {\n    // Name defines a name of the present recoding rule. Must be unique\n    // within all loki rules.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Name\"\n    Name string `json:\"name\"`\n\n    // Interval defines the time interval between evaluation of the given\n    // recoding rule.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1m\"\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Evaluation Interval\"\n    Interval PrometheusDuration `json:\"interval\"`\n\n    // Limit defines the number of series a recording rule can produce. 0 is no limit.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Limit of produced series\"\n    Limit int32 `json:\"limit,omitempty\"`\n\n    // Rules defines a list of recording rules\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Rules\"\n    Rules []*RecordingRuleGroupSpec `json:\"rules\"`\n}\n\n// RecordingRuleGroupSpec defines the spec for a Loki recording rule.\ntype RecordingRuleGroupSpec struct {\n    // The name of the time series to output to. Must be a valid metric name.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Metric Name\"\n    Record string `json:\"record,omitempty\"`\n\n    // The LogQL expression to evaluate. Every evaluation cycle this is\n    // evaluated at the current time, and all resultant time series become\n    // pending/firing alerts.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"LogQL Expression\"\n    Expr string `json:\"expr\"`\n}\n\n// RecordingRuleStatus defines the observed state of RecordingRule\ntype RecordingRuleStatus struct {\n    // Conditions of the RecordingRule generation health.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=status,xDescriptors=\"urn:alm:descriptor:io.kubernetes.conditions\"\n    Conditions []metav1.Condition `json:\"conditions,omitempty\"`\n}\n\n//+kubebuilder:object:root=true\n//+kubebuilder:subresource:status\n\n// RecordingRule is the Schema for the recordingrules API\n//\n// +operator-sdk:csv:customresourcedefinitions:displayName=\"RecordingRule\",resources={{LokiStack,v1beta1}}\ntype RecordingRule struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n\n    Spec   RecordingRuleSpec   `json:\"spec,omitempty\"`\n    Status RecordingRuleStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Authentication Flow with ChainedTokenCredential in Go\nDESCRIPTION: This example shows how to create a custom authentication flow using ChainedTokenCredential, which tries managed identity authentication first and falls back to Azure CLI authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nmanaged, err := azidentity.NewManagedIdentityCredential(nil)\nif err != nil {\n  // handle error\n}\nazCLI, err := azidentity.NewAzureCLICredential(nil)\nif err != nil {\n  // handle error\n}\nchain, err := azidentity.NewChainedTokenCredential([]azcore.TokenCredential{managed, azCLI}, nil)\nif err != nil {\n  // handle error\n}\n\nclient := armresources.NewResourceGroupsClient(\"subscription ID\", chain, nil)\n```\n\n----------------------------------------\n\nTITLE: Defining Static Configs in YAML for Loki\nDESCRIPTION: This YAML configuration specifies static targets and labels for Loki. It includes options for defining file paths to scrape logs from, exclusion patterns, and additional labels to assign to the logs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\ntargets:\n  - localhost\n\nlabels:\n  __path__: <string>\n\n  __path_exclude__: <string>\n\n  [ <labelname>: <labelvalue> ... ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Query Frontend in YAML\nDESCRIPTION: Configuration settings for the Loki query frontend, including query logging, request limits, statistics tracking, and scheduler configuration options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_34\n\nLANGUAGE: yaml\nCODE:\n```\n# Log queries that are slower than the specified duration. Set to 0 to disable.\n# Set to < 0 to enable on all queries.\n# CLI flag: -frontend.log-queries-longer-than\n[log_queries_longer_than: <duration> | default = 0s]\n\n# Comma-separated list of request header names to include in query logs. Applies\n# to both query stats and slow queries logs.\n# CLI flag: -frontend.log-query-request-headers\n[log_query_request_headers: <string> | default = \"\"]\n\n# Max body size for downstream prometheus.\n# CLI flag: -frontend.max-body-size\n[max_body_size: <int> | default = 10485760]\n\n# True to enable query statistics tracking. When enabled, a message with some\n# statistics is logged for every query.\n# CLI flag: -frontend.query-stats-enabled\n[query_stats_enabled: <boolean> | default = false]\n\n# Maximum number of outstanding requests per tenant per frontend; requests\n# beyond this error with HTTP 429.\n# CLI flag: -querier.max-outstanding-requests-per-tenant\n[max_outstanding_per_tenant: <int> | default = 2048]\n\n# In the event a tenant is repeatedly sending queries that lead the querier to\n# crash or be killed due to an out-of-memory error, the crashed querier will be\n# disconnected from the query frontend and a new querier will be immediately\n# assigned to the tenant's shard. This invalidates the assumption that shuffle\n# sharding can be used to reduce the impact on tenants. This option mitigates\n# the impact by configuring a delay between when a querier disconnects because\n# of a crash and when the crashed querier is actually removed from the tenant's\n# shard.\n# CLI flag: -query-frontend.querier-forget-delay\n[querier_forget_delay: <duration> | default = 0s]\n\n# DNS hostname used for finding query-schedulers.\n# CLI flag: -frontend.scheduler-address\n[scheduler_address: <string> | default = \"\"]\n\n# How often to resolve the scheduler-address, in order to look for new\n# query-scheduler instances. Also used to determine how often to poll the\n# scheduler-ring for addresses if the scheduler-ring is configured.\n# CLI flag: -frontend.scheduler-dns-lookup-period\n[scheduler_dns_lookup_period: <duration> | default = 10s]\n\n# Number of concurrent workers forwarding queries to single query-scheduler.\n```\n\n----------------------------------------\n\nTITLE: Clearing Pending Pub/Sub Queue using gcloud CLI\nDESCRIPTION: This command removes log messages from the Pub/Sub subscription without needing to be consumed by Promtail or any other Pub/Sub consumer. It's useful for clearing the queue of pending messages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngcloud pubsub subscriptions seek projects/my-project/subscriptions/cloud-logs --time=$(date +%Y-%m-%dT%H:%M:%S)\n```\n\n----------------------------------------\n\nTITLE: Defining IAM Policy for Loki S3 Access in JSON\nDESCRIPTION: JSON configuration for IAM policy granting Loki access to S3 buckets. Specifies permissions for listing, putting, getting, and deleting objects in the specified buckets.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"LokiStorage\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListBucket\",\n                \"s3:PutObject\",\n                \"s3:GetObject\",\n                \"s3:DeleteObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::< CHUNK BUCKET NAME >\",\n                \"arn:aws:s3:::< CHUNK BUCKET NAME >/*\",\n                \"arn:aws:s3:::< RULER BUCKET NAME >\",\n                \"arn:aws:s3:::< RULER BUCKET NAME >/*\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Memberlist in YAML\nDESCRIPTION: Comprehensive configuration options for Loki's memberlist implementation, used for distributed coordination and ring management. Includes settings for node identification, communication timeouts, gossip protocols, and failure handling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_50\n\nLANGUAGE: yaml\nCODE:\n```\n# Name of the node in memberlist cluster. Defaults to hostname.\n# CLI flag: -memberlist.nodename\n[node_name: <string> | default = \"\"]\n\n# Add random suffix to the node name.\n# CLI flag: -memberlist.randomize-node-name\n[randomize_node_name: <boolean> | default = true]\n\n# The timeout for establishing a connection with a remote node, and for\n# read/write operations.\n# CLI flag: -memberlist.stream-timeout\n[stream_timeout: <duration> | default = 2s]\n\n# Multiplication factor used when sending out messages (factor * log(N+1)).\n# CLI flag: -memberlist.retransmit-factor\n[retransmit_factor: <int> | default = 4]\n\n# How often to use pull/push sync.\n# CLI flag: -memberlist.pullpush-interval\n[pull_push_interval: <duration> | default = 30s]\n\n# How often to gossip.\n# CLI flag: -memberlist.gossip-interval\n[gossip_interval: <duration> | default = 200ms]\n\n# How many nodes to gossip to.\n# CLI flag: -memberlist.gossip-nodes\n[gossip_nodes: <int> | default = 3]\n\n# How long to keep gossiping to dead nodes, to give them chance to refute their\n# death.\n# CLI flag: -memberlist.gossip-to-dead-nodes-time\n[gossip_to_dead_nodes_time: <duration> | default = 30s]\n\n# How soon can dead node's name be reclaimed with new address. 0 to disable.\n# CLI flag: -memberlist.dead-node-reclaim-time\n[dead_node_reclaim_time: <duration> | default = 0s]\n\n# Enable message compression. This can be used to reduce bandwidth usage at the\n# cost of slightly more CPU utilization.\n# CLI flag: -memberlist.compression-enabled\n[compression_enabled: <boolean> | default = true]\n\n# How frequently to notify watchers when a key changes. Can reduce CPU activity\n# in large memberlist deployments. 0 to notify without delay.\n# CLI flag: -memberlist.notify-interval\n[notify_interval: <duration> | default = 0s]\n\n# Gossip address to advertise to other members in the cluster. Used for NAT\n# traversal.\n# CLI flag: -memberlist.advertise-addr\n[advertise_addr: <string> | default = \"\"]\n\n# Gossip port to advertise to other members in the cluster. Used for NAT\n# traversal.\n# CLI flag: -memberlist.advertise-port\n[advertise_port: <int> | default = 7946]\n\n# The cluster label is an optional string to include in outbound packets and\n# gossip streams. Other members in the memberlist cluster will discard any\n# message whose label doesn't match the configured one, unless the\n# 'cluster-label-verification-disabled' configuration option is set to true.\n# CLI flag: -memberlist.cluster-label\n[cluster_label: <string> | default = \"\"]\n\n# When true, memberlist doesn't verify that inbound packets and gossip streams\n# have the cluster label matching the configured one. This verification should\n# be disabled while rolling out the change to the configured cluster label in a\n# live memberlist cluster.\n# CLI flag: -memberlist.cluster-label-verification-disabled\n[cluster_label_verification_disabled: <boolean> | default = false]\n\n# Other cluster members to join. Can be specified multiple times. It can be an\n# IP, hostname or an entry specified in the DNS Service Discovery format.\n# CLI flag: -memberlist.join\n[join_members: <list of strings> | default = []]\n\n# Min backoff duration to join other cluster members.\n# CLI flag: -memberlist.min-join-backoff\n[min_join_backoff: <duration> | default = 1s]\n\n# Max backoff duration to join other cluster members.\n# CLI flag: -memberlist.max-join-backoff\n[max_join_backoff: <duration> | default = 1m]\n\n# Max number of retries to join other cluster members.\n# CLI flag: -memberlist.max-join-retries\n[max_join_retries: <int> | default = 10]\n\n# Abort if this node fails the fast memberlist cluster joining procedure at\n# startup. When enabled, it's guaranteed that other services, depending on\n# memberlist, have an updated view over the cluster state when they're started.\n# CLI flag: -memberlist.abort-if-fast-join-fails\n[abort_if_cluster_fast_join_fails: <boolean> | default = false]\n\n# Abort if this node fails to join memberlist cluster at startup. When enabled,\n# it's not guaranteed that other services are started only after the cluster\n# state has been successfully updated; use 'abort-if-fast-join-fails' instead.\n# CLI flag: -memberlist.abort-if-join-fails\n[abort_if_cluster_join_fails: <boolean> | default = false]\n\n# If not 0, how often to rejoin the cluster. Occasional rejoin can help to fix\n# the cluster split issue, and is harmless otherwise. For example when using\n# only few components as a seed nodes (via -memberlist.join), then it's\n# recommended to use rejoin. If -memberlist.join points to dynamic service that\n# resolves to all gossiping nodes (eg. Kubernetes headless service), then rejoin\n# is not needed.\n# CLI flag: -memberlist.rejoin-interval\n[rejoin_interval: <duration> | default = 0s]\n\n# How long to keep LEFT ingesters in the ring.\n# CLI flag: -memberlist.left-ingesters-timeout\n[left_ingesters_timeout: <duration> | default = 5m]\n\n# How long to keep obsolete entries in the KV store.\n# CLI flag: -memberlist.obsolete-entries-timeout\n[obsolete_entries_timeout: <duration> | default = 30s]\n\n# Timeout for leaving memberlist cluster.\n# CLI flag: -memberlist.leave-timeout\n[leave_timeout: <duration> | default = 20s]\n\n# Timeout for broadcasting all remaining locally-generated updates to other\n# nodes when shutting down. Only used if there are nodes left in the memberlist\n# cluster, and only applies to locally-generated updates, not to broadcast\n# messages that are result of incoming gossip updates. 0 = no timeout, wait\n# until all locally-generated updates are sent.\n# CLI flag: -memberlist.broadcast-timeout-for-local-updates-on-shutdown\n[broadcast_timeout_for_local_updates_on_shutdown: <duration> | default = 10s]\n\n# How much space to use for keeping received and sent messages in memory for\n# troubleshooting (two buffers). 0 to disable.\n# CLI flag: -memberlist.message-history-buffer-bytes\n[message_history_buffer_bytes: <int> | default = 0]\n\n# Size of the buffered channel for the WatchPrefix function.\n# CLI flag: -memberlist.watch-prefix-buffer-size\n[watch_prefix_buffer_size: <int> | default = 128]\n\n# IP address to listen on for gossip messages. Multiple addresses may be\n# specified. Defaults to 0.0.0.0\n# CLI flag: -memberlist.bind-addr\n[bind_addr: <list of strings> | default = []]\n\n# Port to listen on for gossip messages.\n# CLI flag: -memberlist.bind-port\n[bind_port: <int> | default = 7946]\n\n# Timeout used when connecting to other nodes to send packet.\n```\n\n----------------------------------------\n\nTITLE: Viewing Individual Streams in Loki Segment\nDESCRIPTION: Shows how to use the -s parameter with segment-inspect to display individual streams contained within a Loki segment, including their labels and metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/segment-inspect/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ ./segment-inspect -s 01J2F010G82AWFGAEC3WGKC84P\n\n{__loki_tenant__=\"29\", cluster=\"dev-us-central-0\", container=\"loki-canary\", controller_revision_hash=\"9cbf8c4bb\", job=\"promtail-ops/loki-canary\", name=\"loki-canary\", namespace=\"promtail-ops\", pod=\"loki-canary-z6jrt\", pod_template_generation=\"2008\", service_name=\"loki/loki-canary\", stream=\"stdout\"}\n{__loki_tenant__=\"29\", cluster=\"dev-us-central-0\", container=\"loki-canary\", controller_revision_hash=\"9cbf8c4bb\", job=\"promtail-ops/loki-canary\", name=\"loki-canary\", namespace=\"promtail-ops\", pod=\"loki-canary-zpx5v\", pod_template_generation=\"2008\", service_name=\"loki/loki-canary\", stream=\"stdout\"}\n{__loki_tenant__=\"29\", cluster=\"dev-us-central-0\", container=\"metadata-forwarder\", job=\"metadata-forwarder/metadata-forwarder\", name=\"metadata-forwarder\", namespace=\"metadata-forwarder\", pod=\"metadata-forwarder-676f57978c-dpd2s\", pod_template_hash=\"676f57978c\", service_name=\"metadata-forwarder\", stream=\"stderr\"}\n{__loki_tenant__=\"29\", cluster=\"dev-us-central-0\", container=\"metadata-forwarder\", job=\"metadata-forwarder/metadata-forwarder\", name=\"metadata-forwarder\", namespace=\"metadata-forwarder\", pod=\"metadata-forwarder-676f57978c-sbnc9\", pod_template_hash=\"676f57978c\", service_name=\"metadata-forwarder\", stream=\"stderr\"}\n{__loki_tenant__=\"29\", cluster=\"dev-us-central-0\", container=\"mimir-read\", gossip_ring_member=\"true\", job=\"mimir-dev-09/mimir-read\", name=\"mimir-read\", namespace=\"mimir-dev-09\", pod=\"mimir-read-74d58cd64c-4kg55\", pod_template_hash=\"74d58cd64c\", service_name=\"mimir/mimir-read\", stream=\"stderr\"}\n```\n\n----------------------------------------\n\nTITLE: Example Log Deletion Request with URL Encoded Query\nDESCRIPTION: Example cURL command for log deletion showing how to URL encode the query parameter and specify a time range.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_45\n\nLANGUAGE: bash\nCODE:\n```\ncurl -g -X POST \\\n  'http://127.0.0.1:3100/loki/api/v1/delete?query={foo=\"bar\"}&start=1591616227&end=1591619692' \\\n  -H 'X-Scope-OrgID: 1'\n```\n\n----------------------------------------\n\nTITLE: Implementing Transactional API for Kafka Producer in Go\nDESCRIPTION: Adds support for the transactional API in the Kafka producer implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\nfeat(producer): transactional API\n```\n\n----------------------------------------\n\nTITLE: Basic pgzip Compression Example\nDESCRIPTION: Demonstrates basic usage of pgzip writer with custom concurrency settings for parallel compression\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/pgzip/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar b bytes.Buffer\nw := gzip.NewWriter(&b)\nw.SetConcurrency(100000, 10)\nw.Write([]byte(\"hello, world\\n\"))\nw.Close()\n```\n\n----------------------------------------\n\nTITLE: Sample Age Validation Error Properties\nDESCRIPTION: Configuration and response properties for the greater_than_max_sample_age error that occurs when samples are older than the configured maximum age.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/request-validation-rate-limits.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                | Value             |\n|-------------------------|-------------------|\n| Enforced by             | `distributor`     |\n| Outcome                 | Request rejected  |\n| Retryable               | **No**            |\n| Sample discarded        | **Yes**           |\n| Configurable per tenant | Yes               |\n| HTTP status code        | `400 Bad Request` |\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Standalone Pod Configuration\nDESCRIPTION: YAML configuration for deploying Loki Canary as a standalone pod with associated service in Kubernetes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-canary/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: loki-canary\n    name: loki-canary\n  name: loki-canary\nspec:\n  containers:\n  - args:\n    - -addr=loki:3100\n    image: grafana/loki-canary:latest\n    imagePullPolicy: IfNotPresent\n    name: loki-canary\n    resources: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: loki-canary\n  labels:\n    app: loki-canary\nspec:\n  type: ClusterIP\n  selector:\n    app: loki-canary\n  ports:\n  - name: metrics\n    protocol: TCP\n    port: 3500\n    targetPort: 3500\n```\n\n----------------------------------------\n\nTITLE: AWS Provider Configuration in Terraform\nDESCRIPTION: Terraform AWS provider configuration specifying the deployment region.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nprovider \"aws\" {\n  region = \"us-east-2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Tenant Limit Metrics from the Overrides Exporter\nDESCRIPTION: Shell command that uses curl to query the HTTP metrics endpoint of the Loki overrides-exporter and filters for the overrides metrics showing both tenant-specific and default values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/overrides-exporter.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ curl -sq localhost:8080/metrics | grep override\n```\n\n----------------------------------------\n\nTITLE: Creating TSDB Configuration File for Loki Audit in YAML\nDESCRIPTION: This YAML configuration defines the storage settings needed for lokitool to communicate with your Loki data. It specifies schema configuration with time period and index prefix, object storage settings (GCS in this example), and tenant information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/tool/audit/README.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: \"2023-08-21\"\n      index:\n        period: 24h\n        prefix: loki_env_tsdb_index_\n      object_store: gcs\n      schema: v13\n      store: tsdb\n\nstorage_config:\n  gcs:\n    bucket_name: loki-bucket\n\ntenant: 12345\n```\n\n----------------------------------------\n\nTITLE: LogQL Precedence Examples\nDESCRIPTION: Examples demonstrating precedence rules in label filter expressions using parentheses\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: logql\nCODE:\n```\n| duration >= 20ms or method=\"GET\" and size <= 20KB\n| ((duration >= 20ms or method=\"GET\") and size <= 20KB)\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Containers\nDESCRIPTION: Commands to create storage containers for Loki chunks and ruler data\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naz storage container create --account-name <STORAGE-ACCOUNT-NAME> --name <CHUNK-BUCKET-NAME> --auth-mode login && \\\naz storage container create --account-name <STORAGE-ACCOUNT-NAME> --name <RULER-BUCKET-NAME> --auth-mode login\n```\n\n----------------------------------------\n\nTITLE: Importing and Registering Kuberesolver in Go\nDESCRIPTION: Demonstrates how to import the kuberesolver module and register it with gRPC before establishing connections. This is a required setup step for using Kubernetes service discovery.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sercand/kuberesolver/v6/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Import the module\nimport \"github.com/sercand/kuberesolver/v6\"\n\t\n// Register kuberesolver to grpc before calling grpc.Dial\nkuberesolver.RegisterInCluster()\n\n// it is same as\nresolver.Register(kuberesolver.NewBuilder(nil /*custom kubernetes client*/ , \"kubernetes\"))\n\n// if schema is 'kubernetes' then grpc will use kuberesolver to resolve addresses\ncc, err := grpc.Dial(\"kubernetes:///service.namespace:portname\", opts...)\n```\n\n----------------------------------------\n\nTITLE: Configuring Multizone Ingesters in Loki on Kubernetes\nDESCRIPTION: Configuration fields for enabling and configuring multizone ingesters in Loki. These settings control the multizone functionality, migration status, replica count, and maximum unavailable percentage for ingester pods.\nSOURCE: https://github.com/grafana/loki/blob/main/production/ksonnet/README.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n_config+: {\n    multi_zone_ingester_enabled: false,\n    multi_zone_ingester_migration_enabled: false,\n    multi_zone_ingester_replicas: 0,\n    multi_zone_ingester_max_unavailable: 25,\n}\n```\n\n----------------------------------------\n\nTITLE: Example LokiStack Configuration with Zone-Aware Replication\nDESCRIPTION: YAML manifest demonstrating how to configure a LokiStack instance with zone-aware replication using topology spread constraints and S3 storage.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: loki.grafana.com/v1beta1\nkind: LokiStack\nmetadata:\n  name: lokistack-dev\nspec:\n  size: 1x.small\n  storage:\n    secret:\n      name: test\n      type: s3\n  storageClassName: gp3-csi\n  replication:\n    factor: 3\n    zones:\n    - topologyKey: topology.kubernetes.io/zone\n      maxSkew: 1\n```\n\n----------------------------------------\n\nTITLE: Dropping Targets with Non-Empty Labels in Promtail YAML Configuration\nDESCRIPTION: This YAML configuration shows how to drop a target if any of the specified source_labels contain a value in Promtail's relabel_configs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n  - action: drop\n    regex: .+\n    separator: ''\n    source_labels:\n    - __meta_kubernetes_pod_label_name\n    - __meta_kubernetes_pod_label_app\n```\n\n----------------------------------------\n\nTITLE: Implementing Buffer Decompression in Go with zstd\nDESCRIPTION: Example of buffer-based decompression using a cached decoder. This approach is optimized for decompressing multiple small buffers by reusing the decoder instance, with concurrency set to 0 to use GOMAXPROCS decoders.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/klauspost/compress/zstd\"\n\n// Create a reader that caches decompressors.\n// For this operation type we supply a nil Reader.\nvar decoder, _ = zstd.NewReader(nil, zstd.WithDecoderConcurrency(0))\n\n// Decompress a buffer. We don't supply a destination buffer,\n// so it will be allocated by the decoder.\nfunc Decompress(src []byte) ([]byte, error) {\n    return decoder.DecodeAll(src, nil)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler Sharding and Ring in YAML\nDESCRIPTION: Defines sharding and ring configurations for the Loki ruler, including sharding strategy, algorithm, and ring backend options like Consul or etcd.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_61\n\nLANGUAGE: yaml\nCODE:\n```\n[enable_sharding: <boolean> | default = false]\n[sharding_strategy: <string> | default = \"default\"]\n[sharding_algo: <string> | default = \"by-group\"]\n[search_pending_for: <duration> | default = 5m]\n\nring:\n  kvstore:\n    [store: <string> | default = \"consul\"]\n    [prefix: <string> | default = \"rulers/\"]\n    [consul: <consul>]\n    [etcd: <etcd>]\n    multi:\n      [primary: <string> | default = \"\"]\n      [secondary: <string> | default = \"\"]\n      [mirror_enabled: <boolean> | default = false]\n      [mirror_timeout: <duration> | default = 2s]\n  [heartbeat_period: <duration> | default = 5s]\n  [heartbeat_timeout: <duration> | default = 1m]\n  [instance_interface_names: <list of strings> | default = [<private network interfaces>]]\n  [num_tokens: <int> | default = 128]\n```\n\n----------------------------------------\n\nTITLE: Using Enabled Method with Go Instruments\nDESCRIPTION: Example showing how to check if an instrument implements the EnabledInstrument interface before using the Enabled function to avoid performing expensive computations when recording measurements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\ntype enabledInstrument interface { Enabled(context.Context) bool }\n\nctr, err := m.Int64Counter(\"expensive-counter\")\nc, ok := ctr.(enabledInstrument)\nif !ok || c.Enabled(context.Background()) {\n    c.Add(expensiveComputation())\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling Docker Images with Docker Compose\nDESCRIPTION: Command to pull the latest Docker images for the Loki stack using docker-compose\nSOURCE: https://github.com/grafana/loki/blob/main/production/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose pull\n```\n\n----------------------------------------\n\nTITLE: Systemd Journal Scraping Configuration\nDESCRIPTION: YAML configuration for scraping systemd journal logs including kubelet logs\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nextraScrapeConfigs:\n  - job_name: journal\n    journal:\n      path: /var/log/journal\n      max_age: 12h\n      labels:\n        job: systemd-journal\n    relabel_configs:\n      - source_labels: ['__journal__systemd_unit']\n        target_label: 'unit'\n      - source_labels: ['__journal__hostname']\n        target_label: 'hostname'\n```\n\n----------------------------------------\n\nTITLE: Using nindent Function in Go Templates\nDESCRIPTION: The nindent function indents every line of text by a specified number of spaces and adds a new line to the beginning.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_9\n\nLANGUAGE: template\nCODE:\n```\n{{ nindent 4 .query }}\n```\n\n----------------------------------------\n\nTITLE: Accessing Named Parameters with http.Handler in HttpRouter\nDESCRIPTION: This snippet shows how to access HttpRouter's named parameters when using the standard http.Handler interface. It retrieves parameters from the request context using the provided helper function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/julienschmidt/httprouter/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc Hello(w http.ResponseWriter, r *http.Request) {\n    params := httprouter.ParamsFromContext(r.Context())\n\n    fmt.Fprintf(w, \"hello, %s!\\n\", params.ByName(\"name\"))\n}\n```\n\n----------------------------------------\n\nTITLE: Loki Components Table in Markdown\nDESCRIPTION: A markdown table showing which Loki components are included in different deployment targets (all, read, write, backend) or can be run individually.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/components.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Component                                          | _individual_ | `all` | `read` | `write` | `backend` |\n|----------------------------------------------------|--------------| - | - | - | - |\n| [Distributor](#distributor)                        | x            | x |   | x |   |\n| [Ingester](#ingester)                              | x            | x |   | x |   |\n| [Query Frontend](#query-frontend)                  | x            | x | x |   |   |\n| [Query Scheduler](#query-scheduler)                | x            | x |   |   | x |\n| [Querier](#querier)                                | x            | x | x |   |   |\n| [Index Gateway](#index-gateway)                    | x            |   |   |   | x |\n| [Compactor](#compactor)                            | x            | x |   |   | x |\n| [Ruler](#ruler)                                    | x            | x |   |   | x |\n| [Bloom Planner (Experimental)](#bloom-planner)     | x            |   |   |   | x |\n| [Bloom Builder (Experimental)](#bloom-builder)     | x            |   |   |   | x |\n| [Bloom Gateway (Experimental)](#bloom-gateway)     | x            |   |   |   | x |\n```\n\n----------------------------------------\n\nTITLE: Opening Bolt Database in Read-Only Mode in Go\nDESCRIPTION: This code demonstrates how to open a Bolt database in read-only mode using the Options.ReadOnly flag. This allows multiple processes to read from the database simultaneously while preventing any write operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_24\n\nLANGUAGE: go\nCODE:\n```\ndb, err := bolt.Open(\"my.db\", 0600, &bolt.Options{ReadOnly: true})\nif err != nil {\n\tlog.Fatal(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Using Pipeline Syntax in LogQL Templates\nDESCRIPTION: Demonstrates how to chain multiple template functions using pipeline syntax in LogQL queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{ .path | replace \" \" \"_\" | trunc 5 | upper }}\n```\n\n----------------------------------------\n\nTITLE: Decoding an S2 Compressed Stream in Go\nDESCRIPTION: This function demonstrates how to decompress data from an S2 compressed stream. It creates a new S2 reader and copies all data from the decoder to the destination writer. The decoder can handle both S2 and Snappy compressed content.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nfunc DecodeStream(src io.Reader, dst io.Writer) error {\n    dec := s2.NewReader(src)\n    _, err := io.Copy(dst, dec)\n    return err\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Nested Values in Objx Maps with Dot Notation in Go\nDESCRIPTION: Demonstrates how to use the Get method with dot and array notation to access nested values within an objx.Map.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nm.Get(\"places[0].latlng\")\n```\n\n----------------------------------------\n\nTITLE: Setting Mock Clock Time in Go\nDESCRIPTION: Demonstrates how to set a specific start time for the mock clock, allowing tests to begin at any desired point in time.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nmClock := quartz.NewMock(t)\nmClock.Set(time.Date(2021, 6, 18, 12, 0, 0, 0, time.UTC)) // June 18, 2021 @ 12pm UTC\n```\n\n----------------------------------------\n\nTITLE: Mounting Custom Loki Config File in Docker (Shell)\nDESCRIPTION: Shell command example showing how to mount a custom Loki configuration file when using Docker. This is required when upgrading to Loki 2.0 to maintain previous schema settings instead of the new defaults.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -d --name=loki --mount type=bind,source=\"path to loki-config.yaml\",target=/etc/loki/local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Schema Configuration in Tanka (Jsonnet)\nDESCRIPTION: Jsonnet configuration example for maintaining the previous schema configuration when upgrading to Loki 2.0. This sets up the schema to use bigtable and GCS instead of the new default boltdb-shipper, required for users who don't want to change their index store.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_18\n\nLANGUAGE: jsonnet\nCODE:\n```\n{\n  _config+:: {\n    using_boltdb_shipper: false,\n    loki+: {\n      schema_config+: {\n        configs: [{\n          from: '2018-04-15',\n          store: 'bigtable',\n          object_store: 'gcs',\n          schema: 'v11',\n          index: {\n            prefix: '%s_index_' % $._config.table_prefix,\n            period: '168h',\n          },\n        }],\n      },\n    },\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Mock Clock for Testing in Go\nDESCRIPTION: Shows how to create a mock clock for testing a Component. This allows precise control over time in unit tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\t\"testing\"\n\t\"github.com/coder/quartz\"\n)\n\nfunc TestComponent(t *testing.T) {\n\tmClock := quartz.NewMock(t)\n\tcomp := &Component{\n\t\t...\n\t\tclock: mClock,\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing fgprof with HTTP Server in Go\nDESCRIPTION: Basic setup code to add fgprof alongside Go's built-in profiler. Creates an HTTP server listening on port 6060 with endpoints for both profilers.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/felixge/fgprof/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport(\n\t_ \"net/http/pprof\"\n\t\"github.com/felixge/fgprof\"\n)\n\nfunc main() {\n\thttp.DefaultServeMux.Handle(\"/debug/fgprof\", fgprof.Handler())\n\tgo func() {\n\t\tlog.Println(http.ListenAndServe(\":6060\", nil))\n\t}()\n\n\t// <code to profile>\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Key with 'template' Stage in YAML\nDESCRIPTION: Demonstrates how to use the 'template' stage to create a new key 'new_key' with a static value 'hello world!' in the extracted map.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: new_key\n    template: 'hello world!'\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiline Stage for Predefined Log Format\nDESCRIPTION: Demonstrates how to configure the multiline stage for a predefined log format from a Flask service. It uses a regular expression to identify the start of new log blocks based on timestamps.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/multiline.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- multiline:\n    # Identify timestamps as first line of a multiline block. Enclose the string in single quotes.\n    firstline: '^\\[\\d{4}-\\d{2}-\\d{2} \\d{1,2}:\\d{2}:\\d{2}\\]'\n    max_wait_time: 3s\n- regex:\n    # Flag (?s:.*) needs to be set for regex stage to capture full traceback log in the extracted map.\n    expression: '^(?P<time>\\[\\d{4}-\\d{2}-\\d{2} \\d{1,2}:\\d{2}:\\d{2}\\]) (?P<message>(?s:.*))'$\n```\n\n----------------------------------------\n\nTITLE: Manual Authentication Configuration\nDESCRIPTION: Example of manually configuring authentication credentials for OpenStack.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\n\t\"github.com/gophercloud/gophercloud/v2\"\n\t\"github.com/gophercloud/gophercloud/v2/openstack\"\n)\n\nfunc main() {\n\tctx := context.Background()\n\n\tproviderClient, err := openstack.AuthenticatedClient(ctx, gophercloud.AuthOptions{\n\t\tIdentityEndpoint: \"https://openstack.example.com:5000/v2.0\",\n\t\tUsername:         \"username\",\n\t\tPassword:         \"password\",\n\t})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tcomputeClient, err := openstack.NewComputeV2(providerClient, gophercloud.EndpointOpts{\n\t\tRegion: \"RegionName\",\n\t})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// use the computeClient\n}\n```\n\n----------------------------------------\n\nTITLE: Merging Parquet Row Groups in Go\nDESCRIPTION: Shows how to merge multiple row groups into a single larger group using parquet.MergeRowGroups. This operation helps improve query performance by consolidating row groups while maintaining their sorting order.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nmerge, err := parquet.MergeRowGroups(rowGroups)\nif err != nil {\n    ...\n}\n\nwriter := parquet.NewGenericWriter[RowType](output)\n_, err := parquet.CopyRows(writer, merge.Rows())\nif err != nil {\n    ...\n}\nif err := writer.Close(); err != nil {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing MinIO Client in Go\nDESCRIPTION: Example demonstrating how to initialize a MinIO client object with endpoint, credentials, and SSL configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/minio/minio-go/v7\"\n\t\"github.com/minio/minio-go/v7/pkg/credentials\"\n)\n\nfunc main() {\n\tendpoint := \"play.min.io\"\n\taccessKeyID := \"Q3AM3UQ867SPQQA43P2F\"\n\tsecretAccessKey := \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\"\n\tuseSSL := true\n\n\t// Initialize minio client object.\n\tminioClient, err := minio.New(endpoint, &minio.Options{\n\t\tCreds:  credentials.NewStaticV4(accessKeyID, secretAccessKey, \"\"),\n\t\tSecure: useSSL,\n\t})\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.Printf(\"%#v\\n\", minioClient) // minioClient is now set up\n}\n```\n\n----------------------------------------\n\nTITLE: Label Selector Query Example\nDESCRIPTION: Demonstrates how to use specific label selectors in Loki queries to efficiently filter log data.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/bp-query.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n{app_name=\"carnivorousgreenhouse\"}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Time Ordering in Log Streams\nDESCRIPTION: Shows how log entries must be sent in increasing time order within a single stream. Demonstrates valid sequential timestamps in a log stream.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/bp-configure.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n{job=\"syslog\"} 00:00:00 i'm a syslog!\n{job=\"syslog\"} 00:00:01 i'm a syslog!\n```\n\n----------------------------------------\n\nTITLE: Multi-worker Fluentd Configuration\nDESCRIPTION: Configuration for handling multiple Fluentd workers with record modification and labeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentd/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: conf\nCODE:\n```\n<filter mytag>\n    @type record_modifier\n    <record>\n        fluentd_worker \"#{worker_id}\"\n    </record>\n</filter>\n\n<match mytag>\n  @type loki\n  # ...\n  <label>\n    fluentd_worker\n  </label>\n  # ...\n</match>\n```\n\n----------------------------------------\n\nTITLE: Implementing PROXY Protocol Client in Go\nDESCRIPTION: Example code demonstrating how to create a client that uses the PROXY protocol. It shows how to establish a connection to a proxy listener, create and write a PROXY protocol header, and then send data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pires/go-proxyproto/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"io\"\n\t\"log\"\n\t\"net\"\n\n\tproxyproto \"github.com/pires/go-proxyproto\"\n)\n\nfunc chkErr(err error) {\n\tif err != nil {\n\t\tlog.Fatalf(\"Error: %s\", err.Error())\n\t}\n}\n\nfunc main() {\n\t// Dial some proxy listener e.g. https://github.com/mailgun/proxyproto\n\ttarget, err := net.ResolveTCPAddr(\"tcp\", \"127.0.0.1:2319\")\n\tchkErr(err)\n\n\tconn, err := net.DialTCP(\"tcp\", nil, target)\n\tchkErr(err)\n\n\tdefer conn.Close()\n\n\t// Create a proxyprotocol header or use HeaderProxyFromAddrs() if you\n\t// have two conn's\n\theader := &proxyproto.Header{\n\t\tVersion:            1,\n\t\tCommand:            proxyproto.PROXY,\n\t\tTransportProtocol:  proxyproto.TCPv4,\n\t\tSourceAddr: &net.TCPAddr{\n\t\t\tIP:   net.ParseIP(\"10.1.1.1\"),\n\t\t\tPort: 1000,\n\t\t},\n\t\tDestinationAddr: &net.TCPAddr{\n\t\t\tIP:   net.ParseIP(\"20.2.2.2\"),\n\t\t\tPort: 2000,\n\t\t},\n\t}\n\t// After the connection was created write the proxy headers first\n\t_, err = header.WriteTo(conn)\n\tchkErr(err)\n\t// Then your data... e.g.:\n\t_, err = io.WriteString(conn, \"HELO\")\n\tchkErr(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Query Parameters in YAML\nDESCRIPTION: YAML configuration snippet showing changes to default query-related parameters in Loki 2.4.2. This includes modifications to query parallelization, sharding, and ingester querying settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-4.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nparallelise_shardable_queries: true\nsplit_queries_by_interval: 30m\nquery_ingesters_within: 3h\nmax_chunk_age: 2h\nmax_concurrent: 10\n```\n\n----------------------------------------\n\nTITLE: Parsing Docker JSON Log Format in YAML\nDESCRIPTION: This YAML configuration demonstrates how to parse a Docker JSON log format, extracting timestamp, labels, and log message using a pipeline of JSON and regex parsers.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/labels.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n    - json:\n        timestamp:\n          source: time\n          format: RFC3339\n        labels:\n          stream:\n            source: json_key_name.json_sub_key_name\n        output: log\n    - regex:\n        expr: '.*level=(?P<level>[a-zA-Z]+).*'\n        labels:\n          level:\n    - regex:\n        expr: '.*msg=(?P<message>[a-zA-Z]+).*'\n        output: message\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Blob Storage Authentication and Performance Settings in Grafana Loki\nDESCRIPTION: YAML configuration block for Azure Blob Storage in Grafana Loki. It includes authentication options (managed identity, service principal, federated token), buffer sizes for uploads and downloads, timeout settings, and retry configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n# CLI flag: -<prefix>.azure.use-managed-identity\n[use_managed_identity: <boolean> | default = false]\n\n# Use Federated Token to authenticate to the Azure storage account.\n# CLI flag: -<prefix>.azure.use-federated-token\n[use_federated_token: <boolean> | default = false]\n\n# User assigned identity ID to authenticate to the Azure storage account.\n# CLI flag: -<prefix>.azure.user-assigned-id\n[user_assigned_id: <string> | default = \"\"]\n\n# Use Service Principal to authenticate through Azure OAuth.\n# CLI flag: -<prefix>.azure.use-service-principal\n[use_service_principal: <boolean> | default = false]\n\n# Azure Service Principal ID(GUID).\n# CLI flag: -<prefix>.azure.client-id\n[client_id: <string> | default = \"\"]\n\n# Azure Service Principal secret key.\n# CLI flag: -<prefix>.azure.client-secret\n[client_secret: <string> | default = \"\"]\n\n# Azure Tenant ID is used to authenticate through Azure OAuth.\n# CLI flag: -<prefix>.azure.tenant-id\n[tenant_id: <string> | default = \"\"]\n\n# Chunk delimiter for blob ID to be used\n# CLI flag: -<prefix>.azure.chunk-delimiter\n[chunk_delimiter: <string> | default = \"-\"]\n\n# Preallocated buffer size for downloads.\n# CLI flag: -<prefix>.azure.download-buffer-size\n[download_buffer_size: <int> | default = 512000]\n\n# Preallocated buffer size for uploads.\n# CLI flag: -<prefix>.azure.upload-buffer-size\n[upload_buffer_size: <int> | default = 256000]\n\n# Number of buffers used to used to upload a chunk.\n# CLI flag: -<prefix>.azure.download-buffer-count\n[upload_buffer_count: <int> | default = 1]\n\n# Timeout for requests made against azure blob storage.\n# CLI flag: -<prefix>.azure.request-timeout\n[request_timeout: <duration> | default = 30s]\n\n# Number of retries for a request which times out.\n# CLI flag: -<prefix>.azure.max-retries\n[max_retries: <int> | default = 5]\n\n# Minimum time to wait before retrying a request.\n# CLI flag: -<prefix>.azure.min-retry-delay\n[min_retry_delay: <duration> | default = 10ms]\n\n# Maximum time to wait before retrying a request.\n# CLI flag: -<prefix>.azure.max-retry-delay\n[max_retry_delay: <duration> | default = 500ms]\n```\n\n----------------------------------------\n\nTITLE: Configuring Regex Pipeline Stage With Source in YAML\nDESCRIPTION: This example shows how to use the regex stage in combination with a JSON stage. It first extracts a 'time' field using JSON parsing, then applies a regex to extract the 'year' from the 'time' field.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/regex.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      time:\n- regex:\n    expression: \"^(?P<year>\\d+)\"\n    source:     \"time\"\n```\n\n----------------------------------------\n\nTITLE: Using Option Pattern in Tests with Mock Clock in Go\nDESCRIPTION: Shows how to use the Option pattern in tests to inject a mock clock, allowing for easy time manipulation in unit tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\nfunc TestThing(t *testing.T) {\n\tmClock := quartz.NewMock(t)\n\tthing := NewThing(<required args>, WithTestClock(mClock))\n\t...\n}\n```\n\n----------------------------------------\n\nTITLE: Firelens Log Router Container Configuration\nDESCRIPTION: JSON configuration for the Firelens log router container using fluent-bit with Loki plugin\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"essential\": true,\n    \"image\": \"grafana/fluent-bit-plugin-loki:2.9.3-amd64\",\n    \"name\": \"log_router\",\n    \"firelensConfiguration\": {\n        \"type\": \"fluentbit\",\n        \"options\": {\n            \"enable-ecs-log-metadata\": \"true\"\n        }\n    },\n    \"logConfiguration\": {\n        \"logDriver\": \"awslogs\",\n        \"options\": {\n            \"awslogs-group\": \"firelens-container\",\n            \"awslogs-region\": \"us-east-2\",\n            \"awslogs-create-group\": \"true\",\n            \"awslogs-stream-prefix\": \"firelens\"\n        }\n    },\n    \"memoryReservation\": 50\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Methods to Existing Clients for Network Management in Go\nDESCRIPTION: This snippet demonstrates the addition of new methods to existing clients for operations such as listing active configurations, deleting connections, and managing rules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\nfunc (*ManagementClient) ListActiveConnectivityConfigurations(context.Context, string, string, ActiveConfigurationParameter, *ManagementClientListActiveConnectivityConfigurationsOptions) (ManagementClientListActiveConnectivityConfigurationsResponse, error)\n\nfunc (*ScopeConnectionsClient) Delete(context.Context, string, string, string, *ScopeConnectionsClientDeleteOptions) (ScopeConnectionsClientDeleteResponse, error)\n\nfunc (*AdminRulesClient) CreateOrUpdate(context.Context, string, string, string, string, string, BaseAdminRuleClassification, *AdminRulesClientCreateOrUpdateOptions) (AdminRulesClientCreateOrUpdateResponse, error)\n\n// ... (more methods)\n```\n\n----------------------------------------\n\nTITLE: Using Offset Modifier in LogQL Range Vector\nDESCRIPTION: This example shows how to use the offset modifier to count logs within a specific time range. It counts all logs from ten minutes ago to five minutes ago for the MySQL job.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/metric_queries.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\ncount_over_time({job=\"mysql\"}[5m] offset 5m)\n```\n\n----------------------------------------\n\nTITLE: Configuring Kafka Log Scraping in Promtail\nDESCRIPTION: Configuration block for scraping logs from Kafka using a group consumer. Specifies brokers, topics, consumer group settings, authentication, and labeling options. Lists available internal labels for relabeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\n# The list of brokers to connect to kafka (Required).\n[brokers: <strings> | default = [\"\"]]\n\n# The list of Kafka topics to consume (Required).\n[topics: <strings> | default = [\"\"]]\n\n# The Kafka consumer group id.\n[group_id: <string> | default = \"promtail\"]\n\n# The consumer group rebalancing strategy to use. (e.g `sticky`, `roundrobin` or `range`)\n[assignor: <string> | default = \"range\"]\n\n# Kafka version to connect to.\n[version: <string> | default = \"2.2.1\"]\n\n# Optional authentication configuration with Kafka brokers\nauthentication:\n  # Type is authentication type. Supported values [none, ssl, sasl]\n  [type: <string> | default = \"none\"]\n\n  # TLS configuration for authentication and encryption. It is used only when authentication type is ssl.\n  tls_config:\n    [ <tls_config> ]\n\n  # SASL configuration for authentication. It is used only when authentication type is sasl.\n  sasl_config:\n    # SASL mechanism. Supported values [PLAIN, SCRAM-SHA-256, SCRAM-SHA-512]\n    [mechanism: <string> | default = \"PLAIN\"]\n\n    # The user name to use for SASL authentication\n    [user: <string>]\n\n    # The password to use for SASL authentication\n    [password: <secret>]\n\n    # If true, SASL authentication is executed over TLS\n    [use_tls: <boolean> | default = false]\n\n    # The CA file to use to verify the server\n    [ca_file: <string>]\n\n    # Validates that the server name in the server's certificate\n    # is this value.\n    [server_name: <string>]\n\n    # If true, ignores the server certificate being signed by an\n    # unknown CA.\n    [insecure_skip_verify: <boolean> | default = false]\n\n\n# Label map to add to every log line read from kafka\nlabels:\n  [ <labelname>: <labelvalue> ... ]\n\n# If Promtail should pass on the timestamp from the incoming log or not.\n# When false Promtail will assign the current timestamp to the log when it was processed\n[use_incoming_timestamp: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Providing Local Alert Rules to Loki Ruler (HCL)\nDESCRIPTION: HCL configuration using dynamic blocks to provide local alert rules to Loki ruler. It uses 'fileset' and 'file' functions to read local files and create templates.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\ndynamic \"template\" {\n  for_each = fileset(\".\", \"rules/**\")\n\n  content {\n    data            = file(template.value)\n    destination     = \"local/${template.value}\"\n    left_delimiter  = \"[[\"\n    right_delimiter = \"]]\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Loki Metrics Log Output\nDESCRIPTION: Example of Loki metrics log output showing store and cache statistics, including the new store_chunks_download_time, cache_chunk_download_time, cache_index_download_time, and cache_result_download_time fields that provide timing information for chunk operations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nlevel=info ts=2022-12-20T15:27:54.858554127Z caller=metrics.go:147 component=frontend org_id=docker latency=fast query=\"sum(count_over_time({job=\\\"generated-logs\\\"}[1h]))\" query_type=metric range_type=range length=6h17m48.865587821s start_delta=6h17m54.858533178s end_delta=5.99294552s step=1m30s duration=5.990829396s status=200 limit=30 returned_lines=0 throughput=123MB total_bytes=738MB total_entries=1 store_chunks_download_time=2.319297059s queue_time=2m21.476090991s subqueries=8 cache_chunk_req=81143 cache_chunk_hit=32390 cache_chunk_bytes_stored=1874098 cache_chunk_bytes_fetched=94289610 cache_chunk_download_time=56.96914ms cache_index_req=994 cache_index_hit=710 cache_index_download_time=1.587842ms cache_result_req=7 cache_result_hit=0 cache_result_download_time=380.555µs\n```\n\n----------------------------------------\n\nTITLE: Creating a Google Cloud Pub/Sub Client in Go\nDESCRIPTION: This snippet demonstrates how to initialize a Google Cloud Pub/Sub client. It requires a valid Google Cloud project ID and context, and returns a client instance that can be used for publishing and subscribing to topics.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/pubsub/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nclient, err := pubsub.NewClient(ctx, \"project-id\")\nif err != nil {\n\tlog.Fatal(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Complete File Uploader Example in Go\nDESCRIPTION: A complete example that connects to MinIO play server, creates a bucket, and uploads a file to the bucket. This demonstrates bucket creation, existence checking, and file uploading.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// FileUploader.go MinIO example\npackage main\n\nimport (\n\t\"context\"\n\t\"log\"\n\n\t\"github.com/minio/minio-go/v7\"\n\t\"github.com/minio/minio-go/v7/pkg/credentials\"\n)\n\nfunc main() {\n\tctx := context.Background()\n\tendpoint := \"play.min.io\"\n\taccessKeyID := \"Q3AM3UQ867SPQQA43P2F\"\n\tsecretAccessKey := \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\"\n\tuseSSL := true\n\n\t// Initialize minio client object.\n\tminioClient, err := minio.New(endpoint, &minio.Options{\n\t\tCreds:  credentials.NewStaticV4(accessKeyID, secretAccessKey, \"\"),\n\t\tSecure: useSSL,\n\t})\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\t// Make a new bucket called testbucket.\n\tbucketName := \"testbucket\"\n\tlocation := \"us-east-1\"\n\n\terr = minioClient.MakeBucket(ctx, bucketName, minio.MakeBucketOptions{Region: location})\n\tif err != nil {\n\t\t// Check to see if we already own this bucket (which happens if you run this twice)\n\t\texists, errBucketExists := minioClient.BucketExists(ctx, bucketName)\n\t\tif errBucketExists == nil && exists {\n\t\t\tlog.Printf(\"We already own %s\\n\", bucketName)\n\t\t} else {\n\t\t\tlog.Fatalln(err)\n\t\t}\n\t} else {\n\t\tlog.Printf(\"Successfully created %s\\n\", bucketName)\n\t}\n\n\t// Upload the test file\n\t// Change the value of filePath if the file is in another location\n\tobjectName := \"testdata\"\n\tfilePath := \"/tmp/testdata\"\n\tcontentType := \"application/octet-stream\"\n\n\t// Upload the test file with FPutObject\n\tinfo, err := minioClient.FPutObject(ctx, bucketName, objectName, filePath, minio.PutObjectOptions{ContentType: contentType})\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.Printf(\"Successfully uploaded %s of size %d\\n\", objectName, info.Size)\n}\n```\n\n----------------------------------------\n\nTITLE: Bloom Gateway Memory Configuration\nDESCRIPTION: YAML configuration example for controlling memory usage in Bloom Gateway through worker concurrency and query page size settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/bloom-filters.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n-bloom-gateway.worker-concurrency=4      // 1x NUM_CORES\n-bloom-gateway.block-query-concurrency=8 // 2x NUM_CORES\n-bloom.max-query-page-size=64MiB\n```\n\n----------------------------------------\n\nTITLE: Configuring Sampling Stage Schema in YAML\nDESCRIPTION: Defines the basic schema for the sampling stage configuration. The rate parameter accepts values between 0 and 1, where 0 means no logs are sampled and 1 means all logs are sampled.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/sampling.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsampling:\n  # The rate sampling in lines per second that Promtail will push to Loki.The value is between 0 and 1, where a value of 0 means no logs are sampled and a value of 1 means 100% of logs are sampled.\n  [rate: <int>]  \n```\n\n----------------------------------------\n\nTITLE: Advanced JMESPath Queries in Go\nDESCRIPTION: Shows more complex JMESPath query examples including nested object access, array projections, and filtering with conditions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jmespath/go-jmespath/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar jsondata = []byte(`{\"foo\": {\"bar\": {\"baz\": [0, 1, 2, 3, 4]}}}`)\nvar data interface{}\nerr := json.Unmarshal(jsondata, &data)\nresult, err := jmespath.search(\"foo.bar\", data)\nresult = { \"baz\": [ 0, 1, 2, 3, 4 ] }\n\nvar jsondata  = []byte(`{\"foo\": [{\"first\": \"a\", \"last\": \"b\"},\n                           {\"first\": \"c\", \"last\": \"d\"}]}`)\nvar data interface{}\nerr := json.Unmarshal(jsondata, &data)\nresult, err := jmespath.search({\"foo[*].first\", data)\nresult [ 'a', 'c' ]\n\nvar jsondata = []byte(`{\"foo\": [{\"age\": 20}, {\"age\": 25},\n                           {\"age\": 30}, {\"age\": 35},\n                           {\"age\": 40}]}`)\nvar data interface{}\nerr := json.Unmarshal(jsondata, &data)\nresult, err := jmespath.search(\"foo[?age > `30`]\")\nresult = [ { age: 35 }, { age: 40 } ]\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace for Loki\nDESCRIPTION: Command to create a dedicated namespace for Loki resources within Kubernetes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace loki\n```\n\n----------------------------------------\n\nTITLE: Defining New Struct Types in Go\nDESCRIPTION: Example of defining new struct types in Go. This is commonly used to introduce new data structures for API requests and responses.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype EventGridAndResourceGraph struct {}\n\ntype ScheduledEventsAdditionalPublishingTargets struct {}\n\ntype ScheduledEventsPolicy struct {}\n\ntype UserInitiatedReboot struct {}\n\ntype UserInitiatedRedeploy struct {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Systemd Service Definition\nDESCRIPTION: Systemd service unit configuration for running Promtail as a service. Includes service definition with automatic restart on failure, working directory specification, and execution parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: systemd\nCODE:\n```\n[Unit]\nDescription=Promtail\n\n[Service]\nUser=root\nWorkingDirectory=/opt/promtail/\nExecStartPre=/bin/sleep 30\nExecStart=/opt/promtail/promtail-linux-amd64 --config.file=./ec2-promtail.yaml\nSuccessExitStatus=143\nTimeoutStopSec=10\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterLogging Instance for Vector\nDESCRIPTION: YAML configuration for creating a ClusterLogging instance in the openshift-logging namespace using Vector as the log collector.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_without_gateway.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: logging.openshift.io/v1\nkind: ClusterLogging\nmetadata:\n  name: instance\n  namespace: openshift-logging\nspec:\n  collection:\n    logs:\n      type: vector\n      fluentd: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Object Storage in Thanos\nDESCRIPTION: YAML configuration for setting up AWS S3 as an object storage backend in Thanos. Includes all available configuration options such as bucket settings, authentication, HTTP configuration, and server-side encryption options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntype: S3\nconfig:\n  bucket: \"\"\n  endpoint: \"\"\n  region: \"\"\n  disable_dualstack: false\n  aws_sdk_auth: false\n  access_key: \"\"\n  insecure: false\n  signature_version2: false\n  secret_key: \"\"\n  session_token: \"\"\n  put_user_metadata: {}\n  http_config:\n    idle_conn_timeout: 1m30s\n    response_header_timeout: 2m\n    insecure_skip_verify: false\n    tls_handshake_timeout: 10s\n    expect_continue_timeout: 1s\n    max_idle_conns: 100\n    max_idle_conns_per_host: 100\n    max_conns_per_host: 0\n    tls_config:\n      ca_file: \"\"\n      cert_file: \"\"\n      key_file: \"\"\n      server_name: \"\"\n      insecure_skip_verify: false\n    disable_compression: false\n  trace:\n    enable: false\n  list_objects_version: \"\"\n  bucket_lookup_type: auto\n  send_content_md5: true\n  disable_multipart: false\n  part_size: 67108864\n  sse_config:\n    type: \"\"\n    kms_key_id: \"\"\n    kms_encryption_context: {}\n    encryption_key: \"\"\n  sts_endpoint: \"\"\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Creating New Key from Multiple Values with 'template' Stage in YAML\nDESCRIPTION: Demonstrates how to create a new key 'output_msg' using values from existing keys 'level' and 'app' in the extracted map.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: output_msg\n    template: '{{ .level }} for app {{ ToUpper .app }}'\n```\n\n----------------------------------------\n\nTITLE: Client Secret Authentication Implementation\nDESCRIPTION: Demonstrates how to implement client secret authentication using both packages, including client setup and authorization.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/MIGRATION.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/Azure/azure-sdk-for-go/services/resources/mgmt/2018-06-01/subscriptions\"\n    \"github.com/Azure/go-autorest/autorest\"\n    \"github.com/Azure/go-autorest/autorest/adal\"\n)\n\noauthCfg, err := adal.NewOAuthConfig(\"https://login.microsoftonline.com\", tenantID)\nhandle(err)\nspt, err := adal.NewServicePrincipalTokenWithSecret(\n    *oauthCfg, clientID, \"https://management.azure.com/\", &adal.ServicePrincipalTokenSecret{ClientSecret: secret},\n)\nhandle(err)\n\nclient := subscriptions.NewClient()\nclient.Authorizer = autorest.NewBearerAuthorizer(spt)\n```\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/Azure/azure-sdk-for-go/sdk/azidentity\"\n    \"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armsubscriptions\"\n)\n\ncred, err := azidentity.NewClientSecretCredential(tenantID, clientID, secret, nil)\nhandle(err)\n\nclient, err := armsubscriptions.NewClient(cred, nil)\nhandle(err)\n```\n\n----------------------------------------\n\nTITLE: Detecting Fields in Log Data\nDESCRIPTION: Command to detect and analyze fields in logs from the last 24 hours, showing field types and cardinality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nlogcli detected-fields --since 24h '{service_name=\"Delivery World\"}'\n```\n\n----------------------------------------\n\nTITLE: Building Debug Images for Loki Project\nDESCRIPTION: Command to build debug versions of Loki project images. This helps in debugging issues by providing more verbose logging and debugging capabilities.\nSOURCE: https://github.com/grafana/loki/blob/main/debug/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake debug\n```\n\n----------------------------------------\n\nTITLE: Internal Implementation of approx_topk in LogQL\nDESCRIPTION: Demonstrates how approx_topk is implemented internally using count-min sketch algorithm across multiple shards. Shows the transformation of the function into topk and eval_cms operations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/metric_queries.md#2025-04-19_snippet_5\n\nLANGUAGE: logql\nCODE:\n```\ntopk(\n  k,\n  eval_cms(\n    __count_min_sketch__(inner, shard=1) ++ __count_min_sketch__(inner, shard=2)...\n  )\n)\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda-Promtail with Terraform (Kinesis Data Stream)\nDESCRIPTION: Terraform command to deploy lambda-promtail using Kinesis data streams as the source. It sets configuration options for write address, authentication, stream names, and labels.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nterraform apply -var \"write_address=https://your-loki-url/loki/api/v1/push\" -var \"password=<basic-auth-pw>\" -var \"username=<basic-auth-username>\" -var 'kinesis_stream_name=[\"kinesis-stream-01\", \"kinesis-stream-02\"]' -var 'extra_labels=\"name1,value1,name2,value2\"'  -var 'drop_labels=\"name1,name2\"' -var \"tenant_id=<value>\" -var 'skip_tls_verify=\"false\"'\n```\n\n----------------------------------------\n\nTITLE: Formatting LogQL Queries in Loki API\nDESCRIPTION: GET/POST endpoint to format LogQL queries for improved readability and debugging. Returns formatted query or error if the passed LogQL is invalid.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_53\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/format_query\nPOST /loki/api/v1/format_query\n```\n\n----------------------------------------\n\nTITLE: AWS S3 Static Credentials Configuration\nDESCRIPTION: YAML configuration for AWS S3 storage using static credentials. Defines required fields including bucket names, access key ID, secret, and endpoint.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  bucketnames:       # A comma-separated list of bucket names\n  access_key_id:     # The AWS static service account's key ID\n  access_key_secret: # The AWS static service account's key secret\n  endpoint:          # The AWS endpoint URL.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Variable Expansion Syntax in Go\nDESCRIPTION: Shows the basic syntax for variable expansion using the ${var} format. This is the core functionality of the envsubst package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/drone/envsubst/readme.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`${var}`\n```\n\n----------------------------------------\n\nTITLE: Querying Loki Index Statistics API (Bash)\nDESCRIPTION: This snippet shows the HTTP GET request format for querying the Loki index statistics API. It includes URL parameters for specifying the LogQL query, start time, and end time.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/index/stats\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Pipeline Stages for Kubernetes Events\nDESCRIPTION: Updates the Promtail configuration to parse and label Kubernetes events from the eventrouter application. It uses JSON parsing to extract the namespace and add it as a label.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npipelineStages:\n- docker:\n- match:\n    selector: '{app=\"eventrouter\"}'\n    stages:\n    - json:\n        expressions:\n          namespace: event.metadata.namespace\n    - labels:\n        namespace: \"\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxy Configuration in Go\nDESCRIPTION: This snippet demonstrates how to obtain the proxy configuration using the GetConf() method. It allows for custom handling of proxy settings based on the returned configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-ieproxy/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n\tconf := ieproxy.GetConf()\n\t//Handle proxies how you want to.\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Kingpin Usage Example in Go\nDESCRIPTION: Demonstrates basic usage of Kingpin to define and parse command-line flags and arguments.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar (\n  verbose = kingpin.Flag(\"verbose\", \"Verbose mode.\").Short('v').Bool()\n  name    = kingpin.Arg(\"name\", \"Name of user.\").Required().String()\n)\n\nfunc main() {\n  kingpin.Parse()\n  fmt.Printf(\"%v, %s\\n\", *verbose, *name)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry-Go with OpenCensus Bridge for Cloud Trace in Go\nDESCRIPTION: Code example demonstrating how to configure the OpenCensus bridge with OpenTelemetry and Cloud Trace for tracing in Go applications. It includes exporter creation, resource detection for GCP, trace provider setup, and configuring the OpenCensus tracer to use the bridge.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/debug.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"context\"\n    \"log\"\n    \"os\"\n    texporter \"github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/trace\"\n    octrace \"go.opencensus.io/trace\"\n    \"go.opentelemetry.io/contrib/detectors/gcp\"\n    \"go.opentelemetry.io/otel\"\n    \"go.opentelemetry.io/otel/bridge/opencensus\"\n    \"go.opentelemetry.io/otel/sdk/resource\"\n    sdktrace \"go.opentelemetry.io/otel/sdk/trace\"\n    semconv \"go.opentelemetry.io/otel/semconv/v1.7.0\"\n)\n\nfunc main() {\n    // Create exporter.\n    ctx := context.Background()\n    projectID := os.Getenv(\"GOOGLE_CLOUD_PROJECT\")\n    exporter, err := texporter.New(texporter.WithProjectID(projectID))\n    if err != nil {\n        log.Fatalf(\"texporter.New: %v\", err)\n    }\n    // Identify your application using resource detection\n    res, err := resource.New(ctx,\n        // Use the GCP resource detector to detect information about the GCP platform\n        resource.WithDetectors(gcp.NewDetector()),\n        // Keep the default detectors\n        resource.WithTelemetrySDK(),\n        // Add your own custom attributes to identify your application\n        resource.WithAttributes(\n            semconv.ServiceNameKey.String(\"my-application\"),\n        ),\n    )\n    if err != nil {\n        log.Fatalf(\"resource.New: %v\", err)\n    }\n    // Create trace provider with the exporter.\n    //\n    // By default it uses AlwaysSample() which samples all traces.\n    // In a production environment or high QPS setup please use\n    // probabilistic sampling.\n    // Example:\n    //   tp := sdktrace.NewTracerProvider(sdktrace.WithSampler(sdktrace.TraceIDRatioBased(0.0001)), ...)\n    tp := sdktrace.NewTracerProvider(\n        sdktrace.WithBatcher(exporter),\n        sdktrace.WithResource(res),\n    )\n    defer tp.Shutdown(ctx) // flushes any pending spans, and closes connections.\n    otel.SetTracerProvider(tp)\n    tracer := otel.GetTracerProvider().Tracer(\"example.com/trace\")\n    // Configure the OpenCensus tracer to use the bridge.\n    octrace.DefaultTracer = opencensus.NewTracer(tracer)\n    // Use otel tracer to create spans...\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Progress Bar Implementation in Go\nDESCRIPTION: Simple example showing how to create and update a basic progress bar that counts to 100 with a delay between updates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/schollz/progressbar/v3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nbar := progressbar.Default(100)\nfor i := 0; i < 100; i++ {\n    bar.Add(1)\n    time.Sleep(40 * time.Millisecond)\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Rule Group in Loki API\nDESCRIPTION: DELETE endpoint to remove a rule group by namespace and group name. Returns 202 on success.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_39\n\nLANGUAGE: bash\nCODE:\n```\nDELETE /loki/api/v1/rules/{namespace}/{groupName}\n\n```\n\n----------------------------------------\n\nTITLE: Parsing RFC 2141 URN Using NewMachine()\nDESCRIPTION: Demonstrates how to parse a URN string using the NewMachine() method. It creates a new parser instance and handles any parsing errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-urn/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/leodido/go-urn\"\n)\n\nfunc main() {\n\tvar uid = \"URN:foo:a123,456\"\n\n    // Parse the input string as a RFC 2141 URN only\n\tu, e := urn.NewMachine().Parse(uid)\n\tif e != nil {\n\t\tfmt.Errorf(err)\n\n\t\treturn\n\t}\n\n\tfmt.Println(u.ID)\n\tfmt.Println(u.SS)\n\n\t// Output:\n\t// foo\n\t// a123,456\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Loki Architecture with Mermaid Diagram\nDESCRIPTION: A mermaid diagram showing the data flow between components in the Loki docker-compose deployment. It illustrates how Grafana and Promtail interact with nginx, how the gateway routes to read/write paths, and how data is stored in Minio.\nSOURCE: https://github.com/grafana/loki/blob/main/production/docker/README.md#2025-04-19_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n    Grafana --> |Query logs| nginx[\"nginx (port: 8080)\"]\n    Promtail -->|Send logs| nginx\n\n    nginx -.-> |read path| QueryFrontend\n    nginx -.-> |write path| Distributor\n\n    subgraph LokiRead[\"loki -target=read\"]\n        QueryFrontend[\"query-frontend\"]\n        Querier[\"querier\"]\n\n        QueryFrontend -.-> Querier\n    end\n\n    subgraph Minio[\"Minio Storage\"]\n        Chunks\n        Indexes\n    end\n\n    subgraph LokiWrite[\"loki -target=write\"]\n        Distributor[\"distributor\"] -.-> Ingester[\"ingester\"]\n        Ingester\n    end\n\n    Querier --> |reads| Chunks & Indexes\n    Ingester --> |writes| Chunks & Indexes\n```\n\n----------------------------------------\n\nTITLE: Blending Colors in Different Color Spaces using Go\nDESCRIPTION: This snippet demonstrates how to blend colors in various color spaces (HSV, LUV, RGB, LAB, HCL) using the go-colorful library. It creates an image showing the blending results and handles potential invalid RGB colors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"fmt\"\nimport \"github.com/lucasb-eyer/go-colorful\"\nimport \"image\"\nimport \"image/draw\"\nimport \"image/png\"\nimport \"os\"\n\nfunc main() {\n    blocks := 10\n    blockw := 40\n    img := image.NewRGBA(image.Rect(0,0,blocks*blockw,200))\n\n    c1, _ := colorful.Hex(\"#fdffcc\")\n    c2, _ := colorful.Hex(\"#242a42\")\n\n    // Use these colors to get invalid RGB in the gradient.\n    //c1, _ := colorful.Hex(\"#EEEF61\")\n    //c2, _ := colorful.Hex(\"#1E3140\")\n\n    for i := 0 ; i < blocks ; i++ {\n        draw.Draw(img, image.Rect(i*blockw,  0,(i+1)*blockw, 40), &image.Uniform{c1.BlendHsv(c2, float64(i)/float64(blocks-1))}, image.Point{}, draw.Src)\n        draw.Draw(img, image.Rect(i*blockw, 40,(i+1)*blockw, 80), &image.Uniform{c1.BlendLuv(c2, float64(i)/float64(blocks-1))}, image.Point{}, draw.Src)\n        draw.Draw(img, image.Rect(i*blockw, 80,(i+1)*blockw,120), &image.Uniform{c1.BlendRgb(c2, float64(i)/float64(blocks-1))}, image.Point{}, draw.Src)\n        draw.Draw(img, image.Rect(i*blockw,120,(i+1)*blockw,160), &image.Uniform{c1.BlendLab(c2, float64(i)/float64(blocks-1))}, image.Point{}, draw.Src)\n        draw.Draw(img, image.Rect(i*blockw,160,(i+1)*blockw,200), &image.Uniform{c1.BlendHcl(c2, float64(i)/float64(blocks-1))}, image.Point{}, draw.Src)\n\n        // This can be used to \"fix\" invalid colors in the gradient.\n        //draw.Draw(img, image.Rect(i*blockw,160,(i+1)*blockw,200), &image.Uniform{c1.BlendHcl(c2, float64(i)/float64(blocks-1)).Clamped()}, image.Point{}, draw.Src)\n    }\n\n    toimg, err := os.Create(\"colorblend.png\")\n    if err != nil {\n        fmt.Printf(\"Error: %v\", err)\n        return\n    }\n    defer toimg.Close()\n\n    png.Encode(toimg, img)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring kube-state-metrics in YAML\nDESCRIPTION: YAML configuration to enable and set the endpoint for kube-state-metrics in the meta-monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubeStateMetrics:\n  enabled: true\n  endpoint: kube-state-metrics.kube-state-metrics.svc.cluster.local:8080\n```\n\n----------------------------------------\n\nTITLE: Configuring Distributor Service in Istio\nDESCRIPTION: Kubernetes service configuration for Loki Distributor with TCP protocol specification for gRPC communication in Istio service mesh.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/istio.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: loki-distributor\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-distributor\nspec:\n  ports:\n  - name: http\n    port: 3100\n    protocol: TCP\n    targetPort: http\n  - name: grpc\n    port: 9095\n    protocol: TCP\n    targetPort: grpc\n    appProtocol: tcp\n  selector:\n    app: loki-distributor\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-distributor\n  sessionAffinity: None\n  type: ClusterIP\n```\n\n----------------------------------------\n\nTITLE: Using errors.Cause for Error Type Switching\nDESCRIPTION: Demonstrates how to use errors.Cause to retrieve the original error and perform type switching for specific error handling. This pattern allows for targeted error handling based on the underlying error type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/errors/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nswitch err := errors.Cause(err).(type) {\ncase *MyError:\n        // handle specifically\ndefault:\n        // unknown error\n}\n```\n\n----------------------------------------\n\nTITLE: Deserializing Span Context from HTTP Request in Go\nDESCRIPTION: Shows how to extract span context from incoming HTTP headers and create a new server span. This is used in HTTP handlers to continue tracing from incoming requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nhttp.HandleFunc(\"/\", func(w http.ResponseWriter, req *http.Request) {\n    var serverSpan opentracing.Span\n    appSpecificOperationName := ...\n    wireContext, err := opentracing.GlobalTracer().Extract(\n        opentracing.HTTPHeaders,\n        opentracing.HTTPHeadersCarrier(req.Header))\n    if err != nil {\n        // Optionally record something about err here\n    }\n\n    // Create the span referring to the RPC client if available.\n    // If wireContext == nil, a root span will be created.\n    serverSpan = opentracing.StartSpan(\n        appSpecificOperationName,\n        ext.RPCServerOption(wireContext))\n\n    defer serverSpan.Finish()\n\n    ctx := opentracing.ContextWithSpan(context.Background(), serverSpan)\n    ...\n})\n```\n\n----------------------------------------\n\nTITLE: Testing Fluent Bit Loki Output Plugin\nDESCRIPTION: Command to test the Fluent Bit Loki output plugin by sending '/var/log' logs to a local Loki instance. The Loki URL can be overridden using the $LOKI_URL environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluent-bit/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ make fluent-bit-test\n```\n\n----------------------------------------\n\nTITLE: Defining Limit Stage Schema in YAML\nDESCRIPTION: Schema configuration for the limit stage showing all available options including rate limits, burst size, label-based limiting, and drop behavior settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/limit.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlimit:\n  # The rate limit in lines per second that Promtail will push to Loki\n  [rate: <int>]\n\n  # The cap in the quantity of burst lines that Promtail will push to Loki\n  [burst: <int>]\n   \n  # Ratelimit each label value independently. If label is not found, log line is not\n  # considered for ratelimiting. Drop must be true if this is set.\n  [by_label_name: <string>]  \n    \n  # When ratelimiting by label is enabled, keep track of this many last used labels\n  [max_distinct_labels: <int> | default = 10000]  \n\n  # When drop is true, log lines that exceed the current rate limit will be discarded.\n  # When drop is false, log lines that exceed the current rate limit will only wait\n  # to enter the back pressure mode. \n  [drop: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Adding Context to an Error using errors.Wrap\nDESCRIPTION: Shows how to use the errors.Wrap function to add context to an error without destroying its original value. This example wraps an error from ioutil.ReadAll with additional context.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/errors/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n_, err := ioutil.ReadAll(r)\nif err != nil {\n        return errors.Wrap(err, \"read failed\")\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Loki Stack with Docker Compose\nDESCRIPTION: Command to start the Loki stack (Promtail, Loki, and Grafana) using docker-compose\nSOURCE: https://github.com/grafana/loki/blob/main/production/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: Labels Stage Configuration in YAML\nDESCRIPTION: Configuration for the labels stage that sets additional labels on log entries sent to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  [ <string>: [<string>] ... ]\n```\n\n----------------------------------------\n\nTITLE: Renaming Internal Labels in Promtail YAML Configuration\nDESCRIPTION: This YAML snippet demonstrates how to persist an internal label by renaming it in Promtail's relabel_configs, ensuring it will be sent to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: namespace\n```\n\n----------------------------------------\n\nTITLE: Configuring Rsyslog Output for Promtail using TCP\nDESCRIPTION: This Rsyslog configuration demonstrates how to send messages to Promtail via TCP, using the RSYSLOG_SyslogProtocol23Format and octet-counted TCP framing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_16\n\nLANGUAGE: rsyslog\nCODE:\n```\n*.* action(type=\"omfwd\" protocol=\"tcp\" target=\"<promtail_host>\" port=\"<promtail_port>\" Template=\"RSYSLOG_SyslogProtocol23Format\" TCP_Framing=\"octet-counted\" KeepAlive=\"on\")\n```\n\n----------------------------------------\n\nTITLE: Promtail GrafanaCloud Configuration\nDESCRIPTION: YAML configuration for connecting Promtail to GrafanaCloud Loki instance\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  serviceName: \"logs-prod-us-central1.grafana.net\"\n  servicePort: 443\n  serviceScheme: https\n  user: <userid>\n  password: <grafancloud apikey>\n```\n\n----------------------------------------\n\nTITLE: Compiling Protocol Buffers in Loki\nDESCRIPTION: Command to recompile protocol buffer definitions using make. This should only be run when protocol buffer definitions have been modified. Requires protoc version 3.15.8 to be installed and available in the system PATH.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/prompb/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake proto\n```\n\n----------------------------------------\n\nTITLE: Publishing and Subscribing to Google Cloud Pub/Sub in Go\nDESCRIPTION: This snippet shows how to publish a message to a Pub/Sub topic and receive messages via a subscription. It demonstrates asynchronous publishing with result handling and message acknowledgment when consuming messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/pubsub/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Publish \"hello world\" on topic1.\ntopic := client.Topic(\"topic1\")\nres := topic.Publish(ctx, &pubsub.Message{\n\tData: []byte(\"hello world\"),\n})\n// The publish happens asynchronously.\n// Later, you can get the result from res:\n...\nmsgID, err := res.Get(ctx)\nif err != nil {\n\tlog.Fatal(err)\n}\n\n// Use a callback to receive messages via subscription1.\nsub := client.Subscription(\"subscription1\")\nerr = sub.Receive(ctx, func(ctx context.Context, m *pubsub.Message) {\n\tfmt.Println(m.Data)\n\tm.Ack() // Acknowledge that we've consumed the message.\n})\nif err != nil {\n\tlog.Println(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Split Queries in Limits Config YAML\nDESCRIPTION: Shows the correct configuration location for split_queries_by_interval in the limits_config section for Loki v2.5.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-5.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\\n  split_queries_by_interval: 10m\n```\n\n----------------------------------------\n\nTITLE: Migrating Data Between Loki Clusters\nDESCRIPTION: Example command for migrating data between different Loki clusters while maintaining the same tenant ID. Specifies source and destination config files, tenant IDs, and time range for migration.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/migrate/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmigrate -source.config.file=/etc/loki-us-west1/config/config.yaml -dest.config.file=/etc/loki-us-central1/config/config.yaml -source.tenant=2289 -dest.tenant=2289 -from=2020-06-16T14:00:00-00:00 -to=2020-07-01T00:00:00-00:00\n```\n\n----------------------------------------\n\nTITLE: Resetting Loki Kafka Development Environment\nDESCRIPTION: This set of commands resets the development environment by stopping and removing containers, clearing local Loki data, and restarting the services.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/kafka/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Stop and remove containers\ndocker-compose down\n\n# Remove local Loki data\nrm -rf /tmp/loki\n\n# Start fresh\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Configuring Out-of-Order Writes in YAML for Loki\nDESCRIPTION: This snippet shows how to configure out-of-order writes in Loki's YAML configuration. It includes examples for disabling out-of-order writes globally and for specific tenants.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_88\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n    unordered_writes: false\n\nruntime_config:\n  file: overrides.yaml\n\n# In overrides.yaml\noverrides:\n  \"tenantA\":\n    unordered_writes: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Options for Different Azure Clouds\nDESCRIPTION: Code example for creating an Azure Compute client factory with options for connecting to sovereign clouds like Azure China.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\noptions := arm.ClientOptions {\n    ClientOptions: azcore.ClientOptions {\n        Cloud: cloud.AzureChina,\n    },\n}\nclientFactory, err := armcompute.NewClientFactory(<subscription ID>, cred, &options)\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Policy for KMS Access\nDESCRIPTION: JSON IAM policy for granting a user permissions to access AWS KMS encryption keys when using server-side encryption. Includes GenerateDataKey, Encrypt, and Decrypt actions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"KMSAccess\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kms:GenerateDataKey\",\n                \"kms:Encrypt\",\n                \"kms:Decrypt\"\n            ],\n            \"Resource\": \"arn:aws:kms:<region>:<account>:key/<KMS key id>\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Context Propagation in HTTP-based Go Clients\nDESCRIPTION: This example demonstrates how to pass options to OpenTelemetry trace context propagation in HTTP-based clients. It shows configuration of an HTTP transport with custom filtering options for OpenTelemetry.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/debug.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nctx := context.Background()\ntrans, err := htransport.NewTransport(ctx,\n    http.DefaultTransport,\n    option.WithScopes(storage.ScopeFullControl),\n)\nif err != nil {\n    log.Fatal(err)\n}\n// An example of passing options to the otelhttp.Transport.\notelOpts := otelhttp.WithFilter(func(r *http.Request) bool {\n    return r.URL.Path != \"/ping\"\n})\nhc := &http.Client{\n    Transport: otelhttp.NewTransport(trans, otelOpts),\n}\nclient, err := storage.NewClient(ctx, option.WithHTTPClient(hc))\n```\n\n----------------------------------------\n\nTITLE: Complex Multi-Condition Drop Configuration\nDESCRIPTION: Example showing how to drop log lines based on multiple conditions using a single drop stage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- drop:\n    expression: \".*debug.*\"\n    longer_than: 1kb\n```\n\n----------------------------------------\n\nTITLE: Installing Monitoring Rules with Mimirtool\nDESCRIPTION: Command to load monitoring rules using mimirtool with cloud Prometheus endpoint credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmimirtool rules load --address=<your_cloud_prometheus_endpoint> --id=<your_instance_id> --key=<your_cloud_access_policy_token> *.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Profiling Options in Loki\nDESCRIPTION: Configuration for runtime profiling options in Loki, including settings for block profiling rate, CPU profile rate, and mutex profile fraction.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_54\n\nLANGUAGE: yaml\nCODE:\n```\n# Sets the value for runtime.SetBlockProfilingRate\n# CLI flag: -profiling.block-profile-rate\n[block_profile_rate: <int> | default = 0]\n\n# Sets the value for runtime.SetCPUProfileRate\n# CLI flag: -profiling.cpu-profile-rate\n[cpu_profile_rate: <int> | default = 0]\n\n# Sets the value for runtime.SetMutexProfileFraction\n# CLI flag: -profiling.mutex-profile-fraction\n[mutex_profile_fraction: <int> | default = 0]\n```\n\n----------------------------------------\n\nTITLE: Configuring Statsite Sink and Emitting Metrics in Go\nDESCRIPTION: This example shows how to configure a Statsite sink as the global metrics sink and emit a key-value pair metric. It demonstrates the setup process and basic metric emission.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/armon/go-metrics/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Configure a statsite sink as the global metrics sink\nsink, _ := metrics.NewStatsiteSink(\"statsite:8125\")\nmetrics.NewGlobal(metrics.DefaultConfig(\"service-name\"), sink)\n\n// Emit a Key/Value pair\nmetrics.EmitKey([]string{\"questions\", \"meaning of life\"}, 42)\n```\n\n----------------------------------------\n\nTITLE: Struct Validation Example in Go\nDESCRIPTION: Demonstrates struct validation using tags with multiple validators including custom ones. Shows validation of various field types including IP addresses and custom messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\ntype Post struct {\n\tTitle    string `valid:\"alphanum,required\"`\n\tMessage  string `valid:\"duck,ascii\"`\n\tMessage2 string `valid:\"animal(dog)\"`\n\tAuthorIP string `valid:\"ipv4\"`\n\tDate     string `valid:\"-\"`\n}\npost := &Post{\n\tTitle:   \"My Example Post\",\n\tMessage: \"duck\",\n\tMessage2: \"dog\",\n\tAuthorIP: \"123.234.54.3\",\n}\n\n// Add your own struct validation tags\ngovalidator.TagMap[\"duck\"] = govalidator.Validator(func(str string) bool {\n\treturn str == \"duck\"\n})\n\n// Add your own struct validation tags with parameter\ngovalidator.ParamTagMap[\"animal\"] = govalidator.ParamValidator(func(str string, params ...string) bool {\n    species := params[0]\n    return str == species\n})\ngovalidator.ParamTagRegexMap[\"animal\"] = regexp.MustCompile(\"^animal\\\\((\\\\w+)\\\\)$\")\n\nresult, err := govalidator.ValidateStruct(post)\nif err != nil {\n\tprintln(\"error: \" + err.Error())\n}\nprintln(result)\n```\n\n----------------------------------------\n\nTITLE: Configuring Baidu Object Storage in Grafana Loki\nDESCRIPTION: YAML configuration for connecting Grafana Loki to Baidu Object Storage (BOS). Includes settings for bucket name, endpoint, and authentication credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n# Name of BOS bucket.\n# CLI flag: -<prefix>.bos.bucket-name\n[bucket_name: <string> | default = \"\"]\n\n# BOS endpoint to connect to.\n# CLI flag: -<prefix>.bos.endpoint\n[endpoint: <string> | default = \"bj.bcebos.com\"]\n\n# Baidu Cloud Engine (BCE) Access Key ID.\n# CLI flag: -<prefix>.bos.access-key-id\n[access_key_id: <string> | default = \"\"]\n\n# Baidu Cloud Engine (BCE) Secret Access Key.\n# CLI flag: -<prefix>.bos.secret-access-key\n[secret_access_key: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruler Remote Write with AWS SigV4 Authentication in YAML\nDESCRIPTION: YAML configuration for Loki's ruler component to sign remote write requests using AWS Signature Verification 4. Specifies region, access keys, and role configuration for authentication with AWS services.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_43\n\nLANGUAGE: yaml\nCODE:\n```\nruler_remote_write_sigv4_config:\n  [region: <string> | default = \"\"]\n\n  [access_key: <string> | default = \"\"]\n\n  [secret_key: <string> | default = \"\"]\n\n  [profile: <string> | default = \"\"]\n\n  [role_arn: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Describing a Kafka Topic Configuration\nDESCRIPTION: Command and output example for describing a specific Kafka topic, showing its partition count, replication factor, and leader/replica configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/kafka/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n TOPIC=new-topic make describe-topic\n\nTopic: new-topic        PartitionCount: 3       ReplicationFactor: 1    Configs: segment.bytes=1073741824\n        Topic: new-topic        Partition: 0    Leader: 1001    Replicas: 1001  Isr: 1001\n        Topic: new-topic        Partition: 1    Leader: 1001    Replicas: 1001  Isr: 1001\n        Topic: new-topic        Partition: 2    Leader: 1001    Replicas: 1001  Isr: 1001\n```\n\n----------------------------------------\n\nTITLE: Initializing kprom Metrics in Go\nDESCRIPTION: Example showing how to initialize and use the kprom metrics with a Kafka client. Creates new metrics with a namespace and attaches them to a client using kgo.WithHooks.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/twmb/franz-go/plugin/kprom/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nmetrics := kprom.NewMetrics(\"namespace\")\ncl, err := kgo.NewClient(\n\tkgo.WithHooks(metrics),\n\t// ...other opts\n)\n```\n\n----------------------------------------\n\nTITLE: Using Docker for Testing Loki Logstash Plugin\nDESCRIPTION: Commands to build and run a Docker container for testing the Loki Logstash output plugin without installing JRuby locally.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t logstash-loki ./\ndocker run -v  $(pwd)/spec:/home/logstash/spec -it --rm --entrypoint /bin/sh logstash-loki\nbundle exec rspec\n```\n\n----------------------------------------\n\nTITLE: Enabling PROXY Protocol Support in Grafana Loki Server Configuration (Go)\nDESCRIPTION: This snippet demonstrates how to enable PROXY protocol support by setting 'Config.ProxyProtocolEnabled' to true before initializing a Server. This configuration enables PROXY protocol for both HTTP and gRPC servers.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/server/PROXYPROTOCOL.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ncfg := &Config{\n    ProxyProtocolEnabled: true,\n    // ...\n}\n\nserver := NewServer(cfg)\n// ...\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Batch Processor in Alloy\nDESCRIPTION: Configures a batch processor to group incoming logs before sending them to the OTLP HTTP exporter.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/alloy/examples/alloy-otel-logs.md#2025-04-19_snippet_1\n\nLANGUAGE: alloy\nCODE:\n```\notelcol.processor.batch \"default\" {\n    output {\n        logs = [otelcol.exporter.otlphttp.default.input]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Limits in YAML\nDESCRIPTION: YAML configuration snippet showing changes to default limit values in Loki 2.4.0. This includes modifications to ingestion rate strategy, stream limits, query parameters, and sample rejection settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-4.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ningestion_rate_strategy: \"global\"\nmax_global_streams_per_user: 5000\nmax_query_length: \"721h\"\nmax_query_parallelism: 32\nmax_streams_per_user: 0\nreject_old_samples: true\nreject_old_samples_max_age: \"168h\"\nper_stream_rate_limit: 3MB\nper_stream_rate_limit_burst: 15MB\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Block Builder Settings in YAML\nDESCRIPTION: Configuration options for the Loki block builder component, including settings for concurrent operations, block sizes, chunk encoding, and job management. These options control how Loki processes and stores data blocks.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nblock_builder:\n  # How many flushes can happen concurrently\n  # CLI flag: -blockbuilder.concurrent-flushes\n  [concurrent_flushes: <int> | default = 1]\n\n  # How many workers to process writes, defaults to number of available cpus\n  # CLI flag: -blockbuilder.concurrent-writers\n  [concurrent_writers: <int> | default = 1]\n\n  # The targeted _uncompressed_ size in bytes of a chunk block When this\n  # threshold is exceeded the head block will be cut and compressed inside the\n  # chunk.\n  # CLI flag: -blockbuilder.chunks-block-size\n  [chunk_block_size: <int> | default = 256KB]\n\n  # A target _compressed_ size in bytes for chunks. This is a desired size not\n  # an exact size, chunks may be slightly bigger or significantly smaller if\n  # they get flushed for other reasons (e.g. chunk_idle_period). A value of 0\n  # creates chunks with a fixed 10 blocks, a non zero value will create chunks\n  # with a variable number of blocks to meet the target size.\n  # CLI flag: -blockbuilder.chunk-target-size\n  [chunk_target_size: <int> | default = 1536KB]\n\n  # The algorithm to use for compressing chunk. (none, gzip, lz4-64k, snappy,\n  # lz4-256k, lz4-1M, lz4, flate, zstd)\n  # CLI flag: -blockbuilder.chunk-encoding\n  [chunk_encoding: <string> | default = \"snappy\"]\n\n  # The maximum duration of a timeseries chunk in memory. If a timeseries runs\n  # for longer than this, the current chunk will be flushed to the store and a\n  # new chunk created.\n  # CLI flag: -blockbuilder.max-chunk-age\n  [max_chunk_age: <duration> | default = 2h]\n\n  backoff_config:\n    # Minimum delay when backing off.\n    # CLI flag: -blockbuilder.backoff..backoff-min-period\n    [min_period: <duration> | default = 100ms]\n\n    # Maximum delay when backing off.\n    # CLI flag: -blockbuilder.backoff..backoff-max-period\n    [max_period: <duration> | default = 10s]\n\n    # Number of times to backoff and retry before failing.\n    # CLI flag: -blockbuilder.backoff..backoff-retries\n    [max_retries: <int> | default = 10]\n\n  # The number of workers to run in parallel to process jobs.\n  # CLI flag: -blockbuilder.worker-parallelism\n  [worker_parallelism: <int> | default = 1]\n\n  # The interval at which to sync job status with the scheduler.\n  # CLI flag: -blockbuilder.sync-interval\n  [sync_interval: <duration> | default = 30s]\n\n  # The interval at which to poll for new jobs.\n  # CLI flag: -blockbuilder.poll-interval\n  [poll_interval: <duration> | default = 30s]\n\n  # Address of the scheduler in the format described here:\n  # https://github.com/grpc/grpc/blob/master/doc/naming.md\n  # CLI flag: -blockbuilder.scheduler-address\n  [scheduler_address: <string> | default = \"\"]\n\n  # The grpc_client block configures the gRPC client used to communicate between\n  # a client and server component in Loki.\n  # The CLI flags prefix for this block configuration is:\n  # blockbuilder.scheduler-grpc-client.\n  [scheduler_grpc_client_config: <grpc_client>]\n```\n\n----------------------------------------\n\nTITLE: Initializing Tanka Environment for Loki Installation\nDESCRIPTION: Commands to create a new Tanka application and environment for Loki deployment. This sets up the necessary directory structure and configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/tanka.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir <application name>\ncd <application name>\ntk init\ntk env add environments/loki --namespace=loki --server=<Kubernetes API server>\n```\n\n----------------------------------------\n\nTITLE: Disabling In-Memory FIFO Caches in Loki\nDESCRIPTION: Configuration to disable the newly enabled in-memory FIFO caches for chunks and query results in Loki. These caches improve performance but can increase memory usage up to 1GB by default.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nchunk_store_config:\n  chunk_cache_config:\n    enable_fifocache: false\nquery_range:\n  results_cache:\n    cache:\n      enable_fifocache: false\n```\n\n----------------------------------------\n\nTITLE: Updating Google Cloud Storage Object Attributes in Go\nDESCRIPTION: This code shows how to update Google Cloud Storage object attributes using the new ObjectAttrsToUpdate struct. It replaces the old method of passing a full ObjectAttrs struct to Update.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_43\n\nLANGUAGE: go\nCODE:\n```\nattrs, err := obj.Update(ctx, storage.ObjectAttrsToUpdate{ContextType: \"text/html\"})\n```\n\n----------------------------------------\n\nTITLE: Configuring Timestamp Stage in YAML\nDESCRIPTION: Schema definition for the timestamp stage in Promtail's pipeline configuration. It specifies options for timestamp source, format, fallback formats, timezone, and failure handling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/timestamp.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntimestamp:\n  # Name from extracted data to use for the timestamp.\n  source: <string>\n\n  # Determines how to parse the time string. Can use\n  # pre-defined formats by name: [ANSIC UnixDate RubyDate RFC822\n  # RFC822Z RFC850 RFC1123 RFC1123Z RFC3339 RFC3339Nano Unix\n  # UnixMs UnixUs UnixNs].\n  format: <string>\n\n  # Fallback formats to try if the format fails to parse the value\n  # Can use pre-defined formats by name: [ANSIC UnixDate RubyDate RFC822\n  # RFC822Z RFC850 RFC1123 RFC1123Z RFC3339 RFC3339Nano Unix\n  # UnixMs UnixUs UnixNs].\n  [fallback_formats: []<string>]\n\n  # IANA Timezone Database string.\n  [location: <string>]\n\n  # Which action should be taken in case the timestamp can't\n  # be extracted or parsed. Valid values are: [skip, fudge].\n  # Defaults to \"fudge\".\n  [action_on_failure: <string>]\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Loki Components with Make and Go\nDESCRIPTION: This code snippet demonstrates various make and go commands for building Loki components, running tests, and performing code maintenance tasks. It includes commands for building specific binaries, running unit and integration tests, and code formatting.\nSOURCE: https://github.com/grafana/loki/blob/main/CLAUDE.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake all                      # build all binaries\nmake loki                     # build loki only\nmake logcli                   # build logcli only\nmake test                     # run all unit tests\nmake test-integration         # run integration tests\ngo test ./...                 # run all tests with Go directly\ngo test -v ./pkg/logql/...    # run tests in specific package\ngo test -run TestName ./pkg/path  # run a specific test\nmake lint                     # run all linters\nmake format                   # format code (gofmt and goimports)\n```\n\n----------------------------------------\n\nTITLE: Configuring Counter Metrics in Promtail\nDESCRIPTION: YAML configuration for defining a counter metric in Promtail, including options for description, source, and action.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntype: Counter\n[description: <string>]\n[prefix: <string>]\n[source: <string>]\n[max_idle_duration: <string>]\nconfig:\n  [match_all: <bool>]\n  [count_entry_bytes: <bool>]\n  [value: <string>]\n  action: <string>\n```\n\n----------------------------------------\n\nTITLE: Reading Kingpin Arguments from a File in Bash\nDESCRIPTION: Demonstrates how to create and use a file containing command-line arguments with Kingpin. This allows for storing configuration in files and referencing them with the @ symbol.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\necho -t=5\\n > args\n```\n\n----------------------------------------\n\nTITLE: Managing Goroutines with Concurrent Executor in Go\nDESCRIPTION: Shows how to use concurrent.Executor to manage goroutine lifecycle with context-based cancellation, periodic task execution, and graceful shutdown capabilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/modern-go/concurrent/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nexecutor := concurrent.NewUnboundedExecutor()\nexecutor.Go(func(ctx context.Context) {\n    everyMillisecond := time.NewTicker(time.Millisecond)\n    for {\n        select {\n        case <-ctx.Done():\n            fmt.Println(\"goroutine exited\")\n            return\n        case <-everyMillisecond.C:\n            // do something\n        }\n    }\n})\ntime.Sleep(time.Second)\nexecutor.StopAndWaitForever()\nfmt.Println(\"executor stopped\")\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki with Helm\nDESCRIPTION: Installs Loki using Helm with custom values in the meta namespace. Uses MinIO as the default storage backend.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values loki-values.yml loki grafana/loki -n meta\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Receiver in YAML\nDESCRIPTION: YAML configuration for the OpenTelemetry receiver to accept logs via gRPC and HTTP protocols on specified ports. This receiver will ingest logs from the Carnivorous Greenhouse application.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/otel-collector-getting-started.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Receivers\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n```\n\n----------------------------------------\n\nTITLE: Enabling Minio Storage in Loki\nDESCRIPTION: Configuration to enable Minio as a storage backend for Loki using Helm values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/configure-storage/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nminio:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Loki on Linux\nDESCRIPTION: This snippet shows how to start Loki on Linux using the local configuration file. It executes the Loki binary with the specified configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./loki-linux-amd64 -config.file=loki-local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Type Checking LValue with Type Assertion in GopherLua\nDESCRIPTION: Example demonstrating how to check if a Lua value is a string using Go's type assertion mechanism and how to access the string value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nlv := L.Get(-1) // get the value at the top of the stack\nif str, ok := lv.(lua.LString); ok {\n    // lv is LString\n    fmt.Println(string(str))\n}\nif lv.Type() != lua.LTString {\n    panic(\"string required.\")\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Log Deletion in Loki API\nDESCRIPTION: POST/PUT endpoint to create a new delete request for the authenticated tenant. Supports parameters for query, start time, end time, and maximum interval.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_44\n\nLANGUAGE: bash\nCODE:\n```\nPOST /loki/api/v1/delete\nPUT /loki/api/v1/delete\n```\n\n----------------------------------------\n\nTITLE: Building Multiple Loki Components\nDESCRIPTION: Example showing how to build multiple Loki binaries (Loki, Promtail, and LogCLI) in a single command using the make utility. This demonstrates chaining make commands for efficient building.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/contributing.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ make loki promtail logcli\n```\n\n----------------------------------------\n\nTITLE: Using Glob Function in Doublestar\nDESCRIPTION: Go function signature for Glob, which returns names of all files matching a pattern. It uses the fs.FS interface and accepts GlobOptions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfunc Glob(fsys fs.FS, pattern string, opts ...GlobOption) ([]string, error)\n```\n\n----------------------------------------\n\nTITLE: Random Seeking with S2 ReadSeeker in Go\nDESCRIPTION: Creates a ReadSeeker that supports random (non-sequential) seeking within S2 compressed data. Requires both a custom index and an input reader that implements the io.Seeker interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n\tdec := s2.NewReader(r)\n\trs, err := dec.ReadSeeker(true, index)\n\trs.Seek(wantOffset, io.SeekStart)\t\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure Active Directory\nDESCRIPTION: Code snippet showing how to create a Blob Storage client that authenticates using Azure Active Directory credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// create a credential for authenticating with Azure Active Directory\ncred, err := azidentity.NewDefaultAzureCredential(nil)\n// TODO: handle err\n\n// create an azblob.Client for the specified storage account that uses the above credential\nclient, err := azblob.NewClient(\"https://MYSTORAGEACCOUNT.blob.core.windows.net/\", cred, nil)\n// TODO: handle err\n```\n\n----------------------------------------\n\nTITLE: Progress Bar for I/O Operations in Go\nDESCRIPTION: Example demonstrating how to use progressbar with I/O operations, specifically for downloading a file while showing progress.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/schollz/progressbar/v3/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nreq, _ := http.NewRequest(\"GET\", \"https://dl.google.com/go/go1.14.2.src.tar.gz\", nil)\nresp, _ := http.DefaultClient.Do(req)\ndefer resp.Body.Close()\n\nf, _ := os.OpenFile(\"go1.14.2.src.tar.gz\", os.O_CREATE|os.O_WRONLY, 0644)\ndefer f.Close()\n\nbar := progressbar.DefaultBytes(\n    resp.ContentLength,\n    \"downloading\",\n)\nio.Copy(io.MultiWriter(f, bar), resp.Body)\n```\n\n----------------------------------------\n\nTITLE: Metrics Stage Configuration in YAML\nDESCRIPTION: Configuration for metrics stage that defines counter, gauge, and histogram metrics from extracted data.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nmetrics:\n  [<string>: [ <counter> | <gauge> | <histogram> ] ...]\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Job with Nomad CLI\nDESCRIPTION: Commands to deploy the Loki microservices job using Nomad. The first command runs the job with default settings, while the second demonstrates how to specify a different Loki version.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnomad run job.nomad.hcl\n```\n\nLANGUAGE: shell\nCODE:\n```\nnomad job run -var=\"version=2.7.5\" job.nomad.hcl\n```\n\n----------------------------------------\n\nTITLE: Documenting Loki Examples in Markdown\nDESCRIPTION: This markdown snippet provides an overview of the Loki examples directory, including references to Grafana Cloud, getting started guides, and specific use cases. It outlines the structure and purpose of the examples provided in the repository.\nSOURCE: https://github.com/grafana/loki/blob/main/examples/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Loki examples\n\nThis directory contains examples and example configuration for Loki and Promtail.\n\n## Hosted logs in Grafana Cloud\n\nYou can use [Grafana Cloud](https://grafana.com/products/cloud/features/#cloud-logs) to avoid installing, maintaining, and scaling your own instance of Grafana Loki. The free forever plan includes 50GB of free logs. [Create an account to get started](https://grafana.com/auth/sign-up/create-user?pg=docs-loki&plcmt=in-text).\n\n## Getting started with Loki\n\nConfiguration files in the `getting-started` directory are used by the [Loki getting started guide](https://grafana.com/docs/loki/latest/get-started/).\n\n## Sending logs from Heroku to Loki\n\nConfiguration files in the `promtail-heroku` directory are used by the [Promtail and Heroku blogpost](https://grafana.com/blog/2022/09/19/how-to-easily-configure-grafana-loki-and-promtail-to-receive-logs-from-heroku/).\n```\n\n----------------------------------------\n\nTITLE: Creating Content Digest from Bytes in Go\nDESCRIPTION: Demonstrates how to create a content identifier by generating a digest from a byte slice. This is commonly used in Content Addressable Storage systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opencontainers/go-digest/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nid := digest.FromBytes([]byte(\"my content\"))\n```\n\n----------------------------------------\n\nTITLE: Example Log Line JSON Input\nDESCRIPTION: Sample JSON log line showing the input format that the pipeline processes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/eventlogmessage.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"event_id\": 1, \"Overwritten\": \"old\", \"message\": \"Message type:\\r\\nOverwritten: new\\r\\nImage: C:\\\\Users\\\\User\\\\promtail.exe\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Kafka Backend for Grafana Loki in YAML\nDESCRIPTION: This snippet defines Kafka-related configuration options for Grafana Loki, including connection settings, authentication, consumer groups, and auto-creation of topics. It specifies default values and corresponding CLI flags for each option.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkafka_config:\n  # The Kafka backend address.\n  # CLI flag: -kafka.address\n  [address: <string> | default = \"localhost:9092\"]\n\n  # The Kafka topic name.\n  # CLI flag: -kafka.topic\n  [topic: <string> | default = \"\"]\n\n  # The Kafka client ID.\n  # CLI flag: -kafka.client-id\n  [client_id: <string> | default = \"\"]\n\n  # The maximum time allowed to open a connection to a Kafka broker.\n  # CLI flag: -kafka.dial-timeout\n  [dial_timeout: <duration> | default = 2s]\n\n  # How long to wait for an incoming write request to be successfully committed\n  # to the Kafka backend.\n  # CLI flag: -kafka.write-timeout\n  [write_timeout: <duration> | default = 10s]\n\n  # The SASL username for authentication to Kafka using the PLAIN mechanism.\n  # Both username and password must be set.\n  # CLI flag: -kafka.sasl-username\n  [sasl_username: <string> | default = \"\"]\n\n  # The SASL password for authentication to Kafka using the PLAIN mechanism.\n  # Both username and password must be set.\n  # CLI flag: -kafka.sasl-password\n  [sasl_password: <string> | default = \"\"]\n\n  # The consumer group used by the consumer to track the last consumed offset.\n  # The consumer group must be different for each ingester zone.When empty, Loki\n  # uses the ingester instance ID.\n  # CLI flag: -kafka.consumer-group\n  [consumer_group: <string> | default = \"\"]\n\n  # How frequently a consumer should commit the consumed offset to Kafka. The\n  # last committed offset is used at startup to continue the consumption from\n  # where it was left.\n  # CLI flag: -kafka.consumer-group-offset-commit-interval\n  [consumer_group_offset_commit_interval: <duration> | default = 1s]\n\n  # How long to retry a failed request to get the last produced offset.\n  # CLI flag: -kafka.last-produced-offset-retry-timeout\n  [last_produced_offset_retry_timeout: <duration> | default = 10s]\n\n  # Enable auto-creation of Kafka topic if it doesn't exist.\n  # CLI flag: -kafka.auto-create-topic-enabled\n  [auto_create_topic_enabled: <boolean> | default = true]\n\n  # When auto-creation of Kafka topic is enabled and this value is positive,\n  # Kafka's num.partitions configuration option is set on Kafka brokers with\n  # this value when Loki component that uses Kafka starts. This configuration\n  # option specifies the default number of partitions that the Kafka broker uses\n  # for auto-created topics. Note that this is a Kafka-cluster wide setting, and\n  # applies to any auto-created topic. If the setting of num.partitions fails,\n  # Loki proceeds anyways, but auto-created topics could have an incorrect\n  # number of partitions.\n  # CLI flag: -kafka.auto-create-topic-default-partitions\n  [auto_create_topic_default_partitions: <int> | default = 1000]\n\n  # The maximum size of a Kafka record data that should be generated by the\n  # producer. An incoming write request larger than this size is split into\n  # multiple Kafka records. We strongly recommend to not change this setting\n  # unless for testing purposes.\n  # CLI flag: -kafka.producer-max-record-size-bytes\n  [producer_max_record_size_bytes: <int> | default = 15983616]\n\n  # The maximum size of (uncompressed) buffered and unacknowledged produced\n  # records sent to Kafka. The produce request fails once this limit is reached.\n  # This limit is per Kafka client. 0 to disable the limit.\n  # CLI flag: -kafka.producer-max-buffered-bytes\n  [producer_max_buffered_bytes: <int> | default = 1073741824]\n\n  # The guaranteed maximum lag before a consumer is considered to have caught up\n  # reading from a partition at startup, becomes ACTIVE in the hash ring and\n  # passes the readiness check. Set -kafka.max-consumer-lag-at-startup to 0 to\n  # disable waiting for maximum consumer lag being honored at startup.\n  # CLI flag: -kafka.max-consumer-lag-at-startup\n  [max_consumer_lag_at_startup: <duration> | default = 15s]\n\n  # Enable collection of the following kafka latency histograms: read-wait,\n  # read-timing, write-wait, write-timing\n  # CLI flag: -kafka.enable-kafka-histograms\n  [enable_kafka_histograms: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Merging Structs with Override Option in Go\nDESCRIPTION: Shows how to merge structs while overriding destination values with source values, even when the destination field is not a zero value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/dario.cat/mergo/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nif err := mergo.Merge(&dst, src, mergo.WithOverride); err != nil {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Text Styles in Go using termenv\nDESCRIPTION: This snippet shows how to apply various text styles using termenv's chainable syntax, including bold, italic, underline, and more.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ns := output.String(\"foobar\")\n\n// Text styles\ns.Bold()\ns.Faint()\ns.Italic()\ns.CrossOut()\ns.Underline()\ns.Overline()\n\n// Reverse swaps current fore- & background colors\ns.Reverse()\n\n// Blinking text\ns.Blink()\n\n// Combine multiple options\ns.Bold().Underline()\n```\n\n----------------------------------------\n\nTITLE: Verifying Docker Container Status\nDESCRIPTION: Optional command to check that all containers for the Loki stack are running properly by listing all Docker containers and their status.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/quick-start.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps -a\n```\n\n----------------------------------------\n\nTITLE: Configuring IAM Role Annotation for S3 Access\nDESCRIPTION: YAML configuration for adding AWS IAM role annotation to the Loki service account for S3 access.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/configure-storage/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nserviceAccount:\n  annotations:\n    \"eks.amazonaws.com/role-arn\": \"arn:aws:iam::<account id>:role/<role name>\"\n```\n\n----------------------------------------\n\nTITLE: Complete Terminfo Usage Example in Go\nDESCRIPTION: A comprehensive example demonstrating terminfo usage for terminal manipulation, including cursor positioning, color rendering, and terminal title setting. It shows how to initialize the terminal, handle cleanup, and display colored characters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xo/terminfo/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// _examples/simple/main.go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"os/signal\"\n\t\"strings\"\n\t\"sync\"\n\t\"syscall\"\n\n\t\"github.com/xo/terminfo\"\n)\n\nfunc main() {\n\t//r := rand.New(nil)\n\n\t// load terminfo\n\tti, err := terminfo.LoadFromEnv()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// cleanup\n\tdefer func() {\n\t\terr := recover()\n\t\ttermreset(ti)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t}()\n\n\tterminit(ti)\n\ttermtitle(ti, \"simple example!\")\n\ttermputs(ti, 3, 3, \"Ctrl-C to exit\")\n\tmaxColors := termcolors(ti)\n\tif maxColors > 256 {\n\t\tmaxColors = 256\n\t}\n\tfor i := 0; i < maxColors; i++ {\n\t\ttermputs(ti, 5+i/16, 5+i%16, ti.Colorf(i, 0, \"█\"))\n\t}\n\n\t// wait for signal\n\tsigs := make(chan os.Signal, 1)\n\tsignal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)\n\t<-sigs\n}\n\n// terminit initializes the special CA mode on the terminal, and makes the\n// cursor invisible.\nfunc terminit(ti *terminfo.Terminfo) {\n\tbuf := new(bytes.Buffer)\n\t// set the cursor invisible\n\tti.Fprintf(buf, terminfo.CursorInvisible)\n\t// enter special mode\n\tti.Fprintf(buf, terminfo.EnterCaMode)\n\t// clear the screen\n\tti.Fprintf(buf, terminfo.ClearScreen)\n\tos.Stdout.Write(buf.Bytes())\n}\n\n// termreset is the inverse of terminit.\nfunc termreset(ti *terminfo.Terminfo) {\n\tbuf := new(bytes.Buffer)\n\tti.Fprintf(buf, terminfo.ExitCaMode)\n\tti.Fprintf(buf, terminfo.CursorNormal)\n\tos.Stdout.Write(buf.Bytes())\n}\n\n// termputs puts a string at row, col, interpolating v.\nfunc termputs(ti *terminfo.Terminfo, row, col int, s string, v ...interface{}) {\n\tbuf := new(bytes.Buffer)\n\tti.Fprintf(buf, terminfo.CursorAddress, row, col)\n\tfmt.Fprintf(buf, s, v...)\n\tos.Stdout.Write(buf.Bytes())\n}\n\n// sl is the status line terminfo.\nvar sl *terminfo.Terminfo\n\n// termtitle sets the window title.\nfunc termtitle(ti *terminfo.Terminfo, s string) {\n\tvar once sync.Once\n\tonce.Do(func() {\n\t\tif ti.Has(terminfo.HasStatusLine) {\n\t\t\treturn\n\t\t}\n\t\t// load the sl xterm if terminal is an xterm or has COLORTERM\n\t\tif strings.Contains(strings.ToLower(os.Getenv(\"TERM\")), \"xterm\") || os.Getenv(\"COLORTERM\") == \"truecolor\" {\n\t\t\tsl, _ = terminfo.Load(\"xterm+sl\")\n\t\t}\n\t})\n\tif sl != nil {\n\t\tti = sl\n\t}\n\tif !ti.Has(terminfo.HasStatusLine) {\n\t\treturn\n\t}\n\tbuf := new(bytes.Buffer)\n\tti.Fprintf(buf, terminfo.ToStatusLine)\n\tfmt.Fprint(buf, s)\n\tti.Fprintf(buf, terminfo.FromStatusLine)\n\tos.Stdout.Write(buf.Bytes())\n}\n\n// termcolors returns the maximum colors available for the terminal.\nfunc termcolors(ti *terminfo.Terminfo) int {\n\tif colors := ti.Num(terminfo.MaxColors); colors > 0 {\n\t\treturn colors\n\t}\n\treturn int(terminfo.ColorLevelBasic)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Contextual Loggers in Go Kit\nDESCRIPTION: Demonstrates how to create and use contextual loggers with Go Kit's log package, allowing for consistent logging across different components.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/log/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n\tvar logger log.Logger\n\tlogger = log.NewLogfmtLogger(log.NewSyncWriter(os.Stderr))\n\tlogger = log.With(logger, \"instance_id\", 123)\n\n\tlogger.Log(\"msg\", \"starting\")\n\tNewWorker(log.With(logger, \"component\", \"worker\")).Run()\n\tNewSlacker(log.With(logger, \"component\", \"slacker\")).Run()\n}\n\n// Output:\n// instance_id=123 msg=starting\n// instance_id=123 component=worker msg=running\n// instance_id=123 component=slacker msg=running\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail for Basic Log Ingestion to Loki\nDESCRIPTION: This YAML configuration shows a basic Promtail setup to send syslog and Apache logs to Loki with static labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n  static_configs:\n  - targets:\n     - localhost\n    labels:\n     job: syslog\n     __path__: /var/log/syslog\n- job_name: apache\n  pipeline_stages:\n  static_configs:\n  - targets:\n     - localhost\n    labels:\n     job: apache\n     __path__: /var/log/apache.log\n```\n\n----------------------------------------\n\nTITLE: Defining RemoteWriteSpec Struct in Go\nDESCRIPTION: Defines the RemoteWriteSpec struct for configuring Loki ruler's remote write functionality. It includes fields for enabling remote write, refresh period, client configuration, and queue specification.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// RemoteWriteSpec defines the configuration for ruler's remote_write connectivity.\ntype RemoteWriteSpec struct {\n    // Enable remote-write functionality.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:booleanSwitch\",displayName=\"Enabled\"\n    Enabled bool `json:\"enabled\"`\n\n    // Minimum period to wait between refreshing remote-write reconfigurations.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"10s\"\n    RefreshPeriod LokiDuration `json:\"refreshPeriod\"`\n\n    // Defines the configuration for remote write client.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"Client\"\n    ClientSpec *RemoteWriteClientSpec `json:\"clientSpec\"`\n\n    // Defines the configuration for remote write client queue.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"Client Queue\"\n    QueueSpec *RemoteWriteClientQueueSpec `json:\"queueSpec\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Series Data with logcli in Loki\nDESCRIPTION: Example of using the logcli tool with the --analyze-labels flag to identify high cardinality label issues. This command helps debug problematic label configurations by showing unique values per label and their distribution across streams.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/bp-labels.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nTotal Streams:  25017\nUnique Labels:  8\n\nLabel Name  Unique Values  Found In Streams\nrequestId   24653          24979\nlogStream   1194           25016\nlogGroup    140            25016\naccountId   13             25016\nlogger      1              25017\nsource      1              25016\ntransport   1              25017\nformat      1              25017\n```\n\n----------------------------------------\n\nTITLE: Value-based Drop Configuration\nDESCRIPTION: Example showing how to drop log lines based on exact value matches of extracted fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n     level:\n     msg:\n- drop:\n    source: \"level\"\n    value:  \"error\"\n```\n\n----------------------------------------\n\nTITLE: Defining RemoteWriteSpec in YAML for Grafana Loki\nDESCRIPTION: RemoteWriteSpec defines the configuration for ruler's remote_write connectivity, including client and queue settings.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nremoteWriteSpec:\n  enabled: true\n  refreshPeriod: 1m\n  client:\n    name: remoteWrite1\n    url: \"https://remote-write-endpoint.com\"\n  queue:\n    capacity: 10000\n    maxShards: 10\n    minShards: 1\n    maxSamplesPerSend: 1000\n    batchSendDeadline: 5s\n```\n\n----------------------------------------\n\nTITLE: Authentication with GoCQL\nDESCRIPTION: Example demonstrating how to configure authentication credentials when connecting to a Cassandra cluster using GoCQL.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gocql/gocql/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncluster := gocql.NewCluster(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\")\ncluster.Authenticator = gocql.PasswordAuthenticator{\n\tUsername: \"user\",\n\tPassword: \"password\"\n}\ncluster.Keyspace = \"example\"\ncluster.Consistency = gocql.Quorum\nsession, _ := cluster.CreateSession()\ndefer session.Close()\n```\n\n----------------------------------------\n\nTITLE: Visualizing Ring UI Component Interaction with Mermaid Sequence Diagram\nDESCRIPTION: A mermaid sequence diagram showing the interaction between browser, querier node, and ingester when accessing the Ring UI component in the Loki cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_4\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant Browser\n    participant Querier Node\n    participant Ingester\n\n    Browser->>Querier Node: GET /ui/\n    Browser->>Querier Node: GET /ui/api/v1/cluster/nodes\n    Querier Node-->>Browser: List of available nodes\n\n    Note over Browser,Querier Node: User clicks on Ring view\n\n    Browser->>Querier Node: GET /ui/api/v1/proxy/querier-1/ring\n\n    Note over Querier Node: Querier fetches ring state\n\n    Querier Node->>Ingester: Get ring status\n    Ingester-->>Querier Node: Complete ring state\n\n    Querier Node-->>Browser: Ring state\n```\n\n----------------------------------------\n\nTITLE: Plugin Status Output Example\nDESCRIPTION: Example output showing a successfully installed and enabled Loki plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nID                  NAME         DESCRIPTION           ENABLED\nac720b8fcfdb        loki         Loki Logging Driver   true\n```\n\n----------------------------------------\n\nTITLE: GCS Storage Configuration Migration Example\nDESCRIPTION: Examples showing the migration from existing GCS configuration to new Thanos-based configuration format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  gcs:\n    bucket_name: example-bucket\n    chunk_buffer_size: 10MB\n    enable_retries: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    gcs:\n      bucket_name: example-bucket\n      chunk_buffer_size: 10MB\n      max_retries: 5\n```\n\n----------------------------------------\n\nTITLE: Defining Logfmt Stage Schema in YAML\nDESCRIPTION: This snippet shows the YAML schema for configuring the logfmt stage in Promtail. It includes options for mapping logfmt fields to extracted labels and specifying a source for parsing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/logfmt.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlogfmt:\n  # Set of key/value pairs for mapping of logfmt fields to extracted labels. The YAML key will be\n  # the key in the extracted data, while the expression will be the YAML value. If the value\n  # is empty, then the logfmt field with the same name is extracted.\n  mapping:\n    [ <string>: <string> ... ]\n\n  # Name from extracted data to parse. If empty, uses the log message.\n  [source: <string>]\n```\n\n----------------------------------------\n\nTITLE: URL Validation in Go\nDESCRIPTION: Demonstrates how to validate a URL string using the IsURL function\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nprintln(govalidator.IsURL(`http://user@pass:domain.com/path/page`))\n```\n\n----------------------------------------\n\nTITLE: Using Locales Package for Internationalization in Go\nDESCRIPTION: This snippet demonstrates how to use the locales package to format dates, times, numbers, and currencies for the en_CA (English Canadian) locale. It also shows how to use plural rules and other locale-specific formatting functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-playground/locales/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/go-playground/locales/currency\"\n\t\"github.com/go-playground/locales/en_CA\"\n)\n\nfunc main() {\n\n\tloc, _ := time.LoadLocation(\"America/Toronto\")\n\tdatetime := time.Date(2016, 02, 03, 9, 0, 1, 0, loc)\n\n\tl := en_CA.New()\n\n\t// Dates\n\tfmt.Println(l.FmtDateFull(datetime))\n\tfmt.Println(l.FmtDateLong(datetime))\n\tfmt.Println(l.FmtDateMedium(datetime))\n\tfmt.Println(l.FmtDateShort(datetime))\n\n\t// Times\n\tfmt.Println(l.FmtTimeFull(datetime))\n\tfmt.Println(l.FmtTimeLong(datetime))\n\tfmt.Println(l.FmtTimeMedium(datetime))\n\tfmt.Println(l.FmtTimeShort(datetime))\n\n\t// Months Wide\n\tfmt.Println(l.MonthWide(time.January))\n\tfmt.Println(l.MonthWide(time.February))\n\tfmt.Println(l.MonthWide(time.March))\n\t// ...\n\n\t// Months Abbreviated\n\tfmt.Println(l.MonthAbbreviated(time.January))\n\tfmt.Println(l.MonthAbbreviated(time.February))\n\tfmt.Println(l.MonthAbbreviated(time.March))\n\t// ...\n\n\t// Months Narrow\n\tfmt.Println(l.MonthNarrow(time.January))\n\tfmt.Println(l.MonthNarrow(time.February))\n\tfmt.Println(l.MonthNarrow(time.March))\n\t// ...\n\n\t// Weekdays Wide\n\tfmt.Println(l.WeekdayWide(time.Sunday))\n\tfmt.Println(l.WeekdayWide(time.Monday))\n\tfmt.Println(l.WeekdayWide(time.Tuesday))\n\t// ...\n\n\t// Weekdays Abbreviated\n\tfmt.Println(l.WeekdayAbbreviated(time.Sunday))\n\tfmt.Println(l.WeekdayAbbreviated(time.Monday))\n\tfmt.Println(l.WeekdayAbbreviated(time.Tuesday))\n\t// ...\n\n\t// Weekdays Short\n\tfmt.Println(l.WeekdayShort(time.Sunday))\n\tfmt.Println(l.WeekdayShort(time.Monday))\n\tfmt.Println(l.WeekdayShort(time.Tuesday))\n\t// ...\n\n\t// Weekdays Narrow\n\tfmt.Println(l.WeekdayNarrow(time.Sunday))\n\tfmt.Println(l.WeekdayNarrow(time.Monday))\n\tfmt.Println(l.WeekdayNarrow(time.Tuesday))\n\t// ...\n\n\tvar f64 float64\n\n\tf64 = -10356.4523\n\n\t// Number\n\tfmt.Println(l.FmtNumber(f64, 2))\n\n\t// Currency\n\tfmt.Println(l.FmtCurrency(f64, 2, currency.CAD))\n\tfmt.Println(l.FmtCurrency(f64, 2, currency.USD))\n\n\t// Accounting\n\tfmt.Println(l.FmtAccounting(f64, 2, currency.CAD))\n\tfmt.Println(l.FmtAccounting(f64, 2, currency.USD))\n\n\tf64 = 78.12\n\n\t// Percent\n\tfmt.Println(l.FmtPercent(f64, 0))\n\n\t// Plural Rules for locale, so you know what rules you must cover\n\tfmt.Println(l.PluralsCardinal())\n\tfmt.Println(l.PluralsOrdinal())\n\n\t// Cardinal Plural Rules\n\tfmt.Println(l.CardinalPluralRule(1, 0))\n\tfmt.Println(l.CardinalPluralRule(1.0, 0))\n\tfmt.Println(l.CardinalPluralRule(1.0, 1))\n\tfmt.Println(l.CardinalPluralRule(3, 0))\n\n\t// Ordinal Plural Rules\n\tfmt.Println(l.OrdinalPluralRule(21, 0)) // 21st\n\tfmt.Println(l.OrdinalPluralRule(22, 0)) // 22nd\n\tfmt.Println(l.OrdinalPluralRule(33, 0)) // 33rd\n\tfmt.Println(l.OrdinalPluralRule(34, 0)) // 34th\n\n\t// Range Plural Rules\n\tfmt.Println(l.RangePluralRule(1, 0, 1, 0)) // 1-1\n\tfmt.Println(l.RangePluralRule(1, 0, 2, 0)) // 1-2\n\tfmt.Println(l.RangePluralRule(5, 0, 8, 0)) // 5-8\n}\n```\n\n----------------------------------------\n\nTITLE: Testing CORS Endpoint with cURL\nDESCRIPTION: Example of testing the CORS endpoint using cURL command and its expected response.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncurl localhost:8080/foo -v\n```\n\nLANGUAGE: bash\nCODE:\n```\n*   Trying ::1...\n* TCP_NODELAY set\n* Connected to localhost (::1) port 8080 (#0)\n> GET /foo HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.59.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Access-Control-Allow-Methods: GET,PUT,PATCH,OPTIONS\n< Access-Control-Allow-Origin: *\n< Date: Fri, 28 Jun 2019 20:13:30 GMT\n< Content-Length: 3\n< Content-Type: text/plain; charset=utf-8\n< \n* Connection #0 to host localhost left intact\nfoo\n```\n\n----------------------------------------\n\nTITLE: Creating Loki Query Frontend Deployment in Kubernetes\nDESCRIPTION: This Deployment definition manages the Loki query frontend pods. It creates two replicas of the frontend component, mounts the ConfigMap as a volume, and configures resource limits and requests for each pod.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/query-frontend.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    name: query-frontend\n  name: query-frontend\n  namespace: <namespace>\nspec:\n  minReadySeconds: 10\n  replicas: 2\n  selector:\n    matchLabels:\n      name: query-frontend\n  template:\n    metadata:\n      labels:\n        name: query-frontend\n    spec:\n      containers:\n        - args:\n            - -config.file=/etc/loki/config.yaml\n            - -log.level=debug\n            - -target=query-frontend\n          image: grafana/loki:latest\n          imagePullPolicy: Always\n          name: query-frontend\n          ports:\n            - containerPort: 3100\n              name: http\n              protocol: TCP\n          resources:\n            limits:\n              memory: 1200Mi\n            requests:\n              cpu: '2'\n              memory: 600Mi\n          volumeMounts:\n            - mountPath: /etc/loki\n              name: loki-frontend\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 30\n      volumes:\n        - configMap:\n            defaultMode: 420\n            name: loki-frontend\n          name: loki-frontend\n```\n\n----------------------------------------\n\nTITLE: Configuring DynamoDB Throughput and Autoscaling in Loki (YAML)\nDESCRIPTION: This YAML configuration sets up DynamoDB throughput and autoscaling options for Loki's table manager. It includes settings for on-demand throughput, read/write capacities, and detailed autoscaling parameters for both active and inactive tables.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_79\n\nLANGUAGE: yaml\nCODE:\n```\n# Enables on demand throughput provisioning for the storage provider (if\n# supported). Applies only to tables which are not autoscaled. Supported by\n# DynamoDB\n# CLI flag: -table-manager.chunk-table.inactive-enable-ondemand-throughput-mode\n[enable_inactive_throughput_on_demand_mode: <boolean> | default = false]\n\n# Table write throughput for inactive tables. Supported by DynamoDB\n# CLI flag: -table-manager.chunk-table.inactive-write-throughput\n[inactive_write_throughput: <int> | default = 1]\n\n# Table read throughput for inactive tables. Supported by DynamoDB\n# CLI flag: -table-manager.chunk-table.inactive-read-throughput\n[inactive_read_throughput: <int> | default = 300]\n\ninactive_write_scale:\n  # Should we enable autoscale for the table.\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.enabled\n  [enabled: <boolean> | default = false]\n\n  # AWS AutoScaling role ARN\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.role-arn\n  [role_arn: <string> | default = \"\"]\n\n  # DynamoDB minimum provision capacity.\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.min-capacity\n  [min_capacity: <int> | default = 3000]\n\n  # DynamoDB maximum provision capacity.\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.max-capacity\n  [max_capacity: <int> | default = 6000]\n\n  # DynamoDB minimum seconds between each autoscale up.\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.out-cooldown\n  [out_cooldown: <int> | default = 1800]\n\n  # DynamoDB minimum seconds between each autoscale down.\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.in-cooldown\n  [in_cooldown: <int> | default = 1800]\n\n  # DynamoDB target ratio of consumed capacity to provisioned capacity.\n  # CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale.target-value\n  [target: <float> | default = 80]\n\ninactive_read_scale:\n  # Should we enable autoscale for the table.\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.enabled\n  [enabled: <boolean> | default = false]\n\n  # AWS AutoScaling role ARN\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.role-arn\n  [role_arn: <string> | default = \"\"]\n\n  # DynamoDB minimum provision capacity.\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.min-capacity\n  [min_capacity: <int> | default = 3000]\n\n  # DynamoDB maximum provision capacity.\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.max-capacity\n  [max_capacity: <int> | default = 6000]\n\n  # DynamoDB minimum seconds between each autoscale up.\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.out-cooldown\n  [out_cooldown: <int> | default = 1800]\n\n  # DynamoDB minimum seconds between each autoscale down.\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.in-cooldown\n  [in_cooldown: <int> | default = 1800]\n\n  # DynamoDB target ratio of consumed capacity to provisioned capacity.\n  # CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale.target-value\n  [target: <float> | default = 80]\n\n# Number of last inactive tables to enable write autoscale.\n# CLI flag: -table-manager.chunk-table.inactive-write-throughput.scale-last-n\n[inactive_write_scale_lastn: <int> | default = 4]\n\n# Number of last inactive tables to enable read autoscale.\n# CLI flag: -table-manager.chunk-table.inactive-read-throughput.scale-last-n\n[inactive_read_scale_lastn: <int> | default = 4]\n```\n\n----------------------------------------\n\nTITLE: Granting Pub/Sub Publisher Role to Log Sink in GCP using gcloud CLI\nDESCRIPTION: These commands retrieve the writer identity of the log sink and create an IAM policy binding to allow the log sink to publish messages to the Pub/Sub topic.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngcloud logging sinks describe \\\n --format='value(writerIdentity)' cloud-logs\n```\n\nLANGUAGE: bash\nCODE:\n```\ngcloud pubsub topics add-iam-policy-binding cloud-logs \\\n--member=serviceAccount:pxxxxxxxxx-xxxxxx@gcp-sa-logging.iam.gserviceaccount.com --role=roles/pubsub.publisher\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Server with OpenTracing Interceptors in Go\nDESCRIPTION: Example showing how to set up a gRPC server with OpenTracing interceptors. This configures both unary and streaming interceptors to automatically trace all incoming RPC requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing-contrib/go-grpc/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// You must have some sort of OpenTracing Tracer instance on hand.\nvar tracer opentracing.Tracer = ...\n...\n\n// Initialize the gRPC server.\ns := grpc.NewServer(\n    ... // other options\n    grpc.UnaryInterceptor(\n        otgrpc.OpenTracingServerInterceptor(tracer)),\n    grpc.StreamInterceptor(\n        otgrpc.OpenTracingStreamServerInterceptor(tracer)))\n\n// All future RPC activity involving `s` will be automatically traced.\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Client with OpenTracing\nDESCRIPTION: Example showing how to set up a gRPC client connection with OpenTracing interceptors. This includes configuration for both unary and streaming RPCs using the OpenTracingClientInterceptor.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// You must have some sort of OpenTracing Tracer instance on hand.\nvar tracer opentracing.Tracer = ...\n...\n\n// Set up a connection to the server peer.\nconn, err := grpc.Dial(\n    address,\n    ... // other options\n    grpc.WithUnaryInterceptor(\n        otgrpc.OpenTracingClientInterceptor(tracer)),\n    grpc.WithStreamInterceptor(\n        otgrpc.OpenTracingStreamClientInterceptor(tracer)))\n\n// All future RPC activity involving `conn` will be automatically traced.\n```\n\n----------------------------------------\n\nTITLE: Client Credentials Authentication in Go\nDESCRIPTION: Implementation of client credentials flow for acquiring an access token using application ID and secret\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\napplicationSecret := \"APPLICATION_SECRET\"\n\nspt, err := adal.NewServicePrincipalToken(\n\t*oauthConfig,\n\tappliationID,\n\tapplicationSecret,\n\tresource,\n\tcallbacks...)\nif err != nil {\n\treturn nil, err\n}\n\n// Acquire a new access token\nerr  = spt.Refresh()\nif (err == nil) {\n    token := spt.Token\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dual Schema for boltdb-shipper Migration in YAML\nDESCRIPTION: Example configuration showing how to set up dual schema configs for migrating to boltdb-shipper and v11 schema. Demonstrates the required settings for both old and new schemas with important parameters like store type, object store, and index period settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2018-04-15\n      store: boltdb\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 168h\n    - from: 2020-10-24\n      store: boltdb-shipper\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n```\n\n----------------------------------------\n\nTITLE: Using 'Replace' Function in 'template' Stage in YAML\nDESCRIPTION: Demonstrates the use of Go's 'Replace' function in the 'template' stage to replace occurrences of 'loki' with 'blokey'.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: app\n    template: '{{ Replace .Value \"loki\" \"blokey\" 1 }}'\n```\n\n----------------------------------------\n\nTITLE: Using CBOR Tags with TagSet in Go\nDESCRIPTION: Explains how to use CBOR tags by creating a TagSet and using it to create custom encoding and decoding modes. It demonstrates registering a tag, creating modes with immutable tags, and using them for marshaling and unmarshaling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n// Use signedCWT struct defined in \"Decoding CWT\" example.\n\n// Create TagSet (safe for concurrency).\ntags := cbor.NewTagSet()\n// Register tag COSE_Sign1 18 with signedCWT type.\ntags.Add(\t\n\tcbor.TagOptions{EncTag: cbor.EncTagRequired, DecTag: cbor.DecTagRequired}, \n\treflect.TypeOf(signedCWT{}), \n\t18)\n\n// Create DecMode with immutable tags.\ndm, _ := cbor.DecOptions{}.DecModeWithTags(tags)\n\n// Unmarshal to signedCWT with tag support.\nvar v signedCWT\nif err := dm.Unmarshal(data, &v); err != nil {\n\treturn err\n}\n\n// Create EncMode with immutable tags.\nem, _ := cbor.EncOptions{}.EncModeWithTags(tags)\n\n// Marshal signedCWT with tag number.\nif data, err := cbor.Marshal(v); err != nil {\n\treturn err\n}\n```\n\n----------------------------------------\n\nTITLE: Invalid Query Example in LogQL\nDESCRIPTION: Example showing an invalid query pattern that lacks an equality matcher, which is now rejected in Loki 2.3.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-3.md#2025-04-19_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n{namespace=~\".*\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring BoltDB Shipper with GCS in Loki\nDESCRIPTION: Example YAML configuration for setting up BoltDB Shipper with Google Cloud Storage in Grafana Loki. This configuration specifies schema settings with a 24-hour index period, GCS bucket storage, and local directories for active index and cache location.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/boltdb-shipper.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2018-04-15\n      store: boltdb-shipper\n      object_store: gcs\n      schema: v11\n      index:\n        prefix: loki_index_\n        period: 24h\n\nstorage_config:\n  gcs:\n    bucket_name: GCS_BUCKET_NAME\n\n  boltdb_shipper:\n    active_index_directory: /loki/index\n    cache_location: /loki/boltdb-cache\n```\n\n----------------------------------------\n\nTITLE: Merging Specific Columns in ASCII Table in Go\nDESCRIPTION: This snippet demonstrates how to merge identical cells in specific columns of an ASCII table. It uses SetAutoMergeCellsByColumnIndex to specify which columns should be merged.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n  []string{\"1/1/2014\", \"Domain name\", \"1234\", \"$10.98\"},\n  []string{\"1/1/2014\", \"January Hosting\", \"1234\", \"$10.98\"},\n  []string{\"1/4/2014\", \"February Hosting\", \"3456\", \"$51.00\"},\n  []string{\"1/4/2014\", \"February Extra Bandwidth\", \"4567\", \"$30.00\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Date\", \"Description\", \"CV2\", \"Amount\"})\ntable.SetFooter([]string{\"\", \"\", \"Total\", \"$146.93\"})\ntable.SetAutoMergeCellsByColumnIndex([]int{2, 3})\ntable.SetRowLine(true)\ntable.AppendBulk(data)\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Log Structure\nDESCRIPTION: Example of the structured JSON log format used for package tracking in the logistics system.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"timestamp\": \"2024-11-22T13:22:56.377884\", \"state\": \"New York\", \"city\": \"Buffalo\", \"package_id\": \"PKG34245\", \"package_type\": \"Documents\", \"package_size\": \"Medium\", \"package_status\": \"error\", \"note\": \"Out for delivery\", \"sender\": {\"name\": \"Sender27\", \"address\": \"144 Elm St, Buffalo, New York\"}, \"receiver\": {\"name\": \"Receiver4\", \"address\": \"260 Cedar Blvd, New York City, New York\"}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Debug Deployment with Jsonnet\nDESCRIPTION: Jsonnet configuration for deploying a debug version of Promtail in Kubernetes. This customizes the image to use the debug version and sets required configuration parameters for connecting to a Loki instance.\nSOURCE: https://github.com/grafana/loki/blob/main/debug/README.md#2025-04-19_snippet_2\n\nLANGUAGE: jsonnet\nCODE:\n```\nlocal promtail = import 'promtail/promtail.libsonnet';\n\n\npromtail + {\n  _images+:: {\n    promtail: 'grafana/promtail-debug:latest',\n  },\n  _config+:: {\n    namespace: 'default',\n\n    promtail_config+: {\n      external_labels+: {\n        cluster: 'some_cluster_name',\n      },\n      scheme: 'https',\n      hostname: 'hostname',\n      username: 'username',\n      password: 'password',\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Specific Log Streams\nDESCRIPTION: Example of querying logs for a specific job stream, showing the basic query structure for retrieving log entries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query '{job=\"loki-ops/consul\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler WAL and Cleaner in YAML\nDESCRIPTION: Specifies Write-Ahead Log (WAL) settings for the Loki ruler, including directory, truncation frequency, and age limits. Also includes WAL cleaner configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_62\n\nLANGUAGE: yaml\nCODE:\n```\nwal:\n  [dir: <string> | default = \"ruler-wal\"]\n  [truncate_frequency: <duration> | default = 1h]\n  [min_age: <duration> | default = 5m]\n  [max_age: <duration> | default = 4h]\n\nwal_cleaner:\n  [min_age: <duration> | default = 12h]\n  [period: <duration> | default = 0s]\n```\n\n----------------------------------------\n\nTITLE: Opening a bbolt Database with Basic Setup\nDESCRIPTION: Complete example showing how to open a bbolt database file with proper error handling and deferred closing in a main function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\tlog \"log\"\n\n\tbolt \"go.etcd.io/bbolt\"\n)\n\nfunc main() {\n\t// Open the my.db data file in your current directory.\n\t// It will be created if it doesn't exist.\n\tdb, err := bolt.Open(\"my.db\", 0600, nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer db.Close()\n\n\t...\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Loki Querier Jobs by Creation Date\nDESCRIPTION: Example LogQL query to filter Loki querier jobs created more than one day ago using template functions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"loki/querier\"} | label_format nowEpoch=`{{(unixEpoch now)}}`,createDateEpoch=`{{unixEpoch (toDate \"2006-01-02\" .createDate)}}` | label_format dateTimeDiff=`{{sub .nowEpoch .createDateEpoch}}` | dateTimeDiff > 86400\n```\n\n----------------------------------------\n\nTITLE: Disabling Analytics Reporting in YAML\nDESCRIPTION: Configuration to disable anonymous usage statistics reporting in Loki v2.5.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-5.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nanalytics:\\n  reporting_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Handling Shared Configuration in Go\nDESCRIPTION: Illustrates how to handle shared configuration between multiple structs using a common config and separate option interfaces.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n// config holds options for all animals.\ntype config struct {\n\tWeight      float64\n\tColor       string\n\tMaxAltitude float64\n}\n\n// DogOption apply Dog specific options.\ntype DogOption interface {\n\tapplyDog(config) config\n}\n\n// BirdOption apply Bird specific options.\ntype BirdOption interface {\n\tapplyBird(config) config\n}\n\n// Option apply options for all animals.\ntype Option interface {\n\tBirdOption\n\tDogOption\n}\n\ntype weightOption float64\n\nfunc (o weightOption) applyDog(c config) config {\n\tc.Weight = float64(o)\n\treturn c\n}\n\nfunc (o weightOption) applyBird(c config) config {\n\tc.Weight = float64(o)\n\treturn c\n}\n\nfunc WithWeight(w float64) Option { return weightOption(w) }\n\ntype furColorOption string\n\nfunc (o furColorOption) applyDog(c config) config {\n\tc.Color = string(o)\n\treturn c\n}\n\nfunc WithFurColor(c string) DogOption { return furColorOption(c) }\n\ntype maxAltitudeOption float64\n\nfunc (o maxAltitudeOption) applyBird(c config) config {\n\tc.MaxAltitude = float64(o)\n\treturn c\n}\n\nfunc WithMaxAltitude(a float64) BirdOption { return maxAltitudeOption(a) }\n\nfunc NewDog(name string, o ...DogOption) Dog    {...}\nfunc NewBird(name string, o ...BirdOption) Bird {...}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Service with BasicService in Go\nDESCRIPTION: An example of implementing a custom service using the BasicService struct. It demonstrates how to create an exampleService that collects messages and can be started, stopped, and observed for state changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/services/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype exampleService struct {\n\t*BasicService\n\n\tlog []string\n\tch  chan string\n}\n\nfunc newExampleServ() *exampleService {\n\ts := &exampleService{\n\t\tch: make(chan string),\n\t}\n    s.BasicService = NewBasicService(nil, s.collect, nil) // StartingFn, RunningFn, StoppingFn\n\treturn s\n}\n\n// used as Running function. When service is stopped, context is canceled, so we react on it.\nfunc (s *exampleService) collect(ctx context.Context) error {\n\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\treturn nil\n\t\tcase msg := <-s.ch:\n\t\t\ts.log = append(s.log, msg)\n\t\t}\n\t}\n}\n\n// External method called by clients of the Service.\nfunc (s *exampleService) Send(msg string) bool {\n\tctx := s.ServiceContext() // provided by BasicService. Not part of Service interface.\n\tif ctx == nil {\n\t\t// Service is not yet started\n\t\treturn false\n\t}\n\tselect {\n\tcase s.ch <- msg:\n\t\treturn true\n\tcase <-ctx.Done():\n\t\t// Service is not running anymore.\n\t\treturn false\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Validator with Required Struct Option\nDESCRIPTION: Shows how to initialize a new validator instance with the WithRequiredStructEnabled option, which will become default behavior in v11+.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-playground/validator/v10/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nvalidate := validator.New(validator.WithRequiredStructEnabled())\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Server with Conntrack Listener in Go\nDESCRIPTION: This snippet shows how to set up a TLS server with connection tracking. It wraps a net.Listener with conntrack, configures TLS with HTTP/2 support, and creates a TLS listener for use with an HTTP server.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mwitkow/go-conntrack/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nlistener, err := net.Listen(\"tcp\", fmt.Sprintf(\":%d\", *port))\nlistener = conntrack.NewListener(listener, \n    conntrack.TrackWithName(\"https\"), \n    conntrack.TrackWithTracing(),\n    conntrack.TrackWithTcpKeepAlive(5 * time.Minutes))\ntlsConfig, err := connhelpers.TlsConfigForServerCerts(*tlsCertFilePath, *tlsKeyFilePath)\ntlsConfig, err = connhelpers.TlsConfigWithHttp2Enabled(tlsConfig)\ntlsListener := tls.NewListener(listener, tlsConfig)\nhttpServer.Serve(listener) \n```\n\n----------------------------------------\n\nTITLE: Initializing Bolt Database in iOS with Objective-C\nDESCRIPTION: This Objective-C code demonstrates how to initialize a Bolt database in an iOS application and exclude it from iCloud backup. It locates the appropriate storage directory and adds attributes to prevent cloud backup of the database file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_27\n\nLANGUAGE: objc\nCODE:\n```\n- (void)demo {\n    NSString* path = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,\n                                                          NSUserDomainMask,\n                                                          YES) objectAtIndex:0];\n\tGoBoltmobiledemoBoltDB * demo = GoBoltmobiledemoNewBoltDB(path);\n\t[self addSkipBackupAttributeToItemAtPath:demo.path];\n\t//Some DB Logic would go here\n\t[demo close];\n}\n\n- (BOOL)addSkipBackupAttributeToItemAtPath:(NSString *) filePathString\n{\n    NSURL* URL= [NSURL fileURLWithPath: filePathString];\n    assert([[NSFileManager defaultManager] fileExistsAtPath: [URL path]]);\n\n    NSError *error = nil;\n    BOOL success = [URL setResourceValue: [NSNumber numberWithBool: YES]\n                                  forKey: NSURLIsExcludedFromBackupKey error: &error];\n    if(!success){\n        NSLog(@\"Error excluding %@ from backup %@\", [URL lastPathComponent], error);\n    }\n    return success;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OTLP/gRPC Exporter Retry Policy in Go\nDESCRIPTION: Adds the 'otlpgrpc.WithRetry' option for configuring the retry policy for transient errors on the OTLP/gRPC exporter. Defines specific gRPC status codes as transient errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_21\n\nLANGUAGE: Go\nCODE:\n```\notlpgrpc.WithRetry()\n```\n\n----------------------------------------\n\nTITLE: Encoding Nested Structs with CBOR Tags\nDESCRIPTION: Example demonstrating how struct tags can be used to reduce CBOR encoding size compared to JSON, using nested structures with omitempty tags.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Example encoding nested struct (with omitempty tag)\n// - encoding/json:  18 byte JSON\n// - fxamacker/cbor:  1 byte CBOR\npackage main\n\nimport (\n\t\"encoding/hex\"\n\t\"encoding/json\"\n\t\"fmt\"\n\n\t\"github.com/fxamacker/cbor/v2\"\n)\n\ntype GrandChild struct {\n\tQuux int `json:\",omitempty\"`\n}\n\ntype Child struct {\n\tBaz int        `json:\",omitempty\"`\n\tQux GrandChild `json:\",omitempty\"`\n}\n\ntype Parent struct {\n\tFoo Child `json:\",omitempty\"`\n\tBar int   `json:\",omitempty\"`\n}\n\nfunc cb() {\n\tresults, _ := cbor.Marshal(Parent{})\n\tfmt.Println(\"hex(CBOR): \" + hex.EncodeToString(results))\n\n\ttext, _ := cbor.Diagnose(results) // Diagnostic Notation\n\tfmt.Println(\"DN: \" + text)\n}\n\nfunc js() {\n\tresults, _ := json.Marshal(Parent{})\n\tfmt.Println(\"hex(JSON): \" + hex.EncodeToString(results))\n\n\ttext := string(results) // JSON\n\tfmt.Println(\"JSON: \" + text)\n}\n\nfunc main() {\n\tcb()\n\tfmt.Println(\"-------------\")\n\tjs()\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Numbers with SI Notation in Go\nDESCRIPTION: Demonstrates the use of humanize.SI() to format numbers using SI notation with appropriate prefixes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nhumanize.SI(0.00000000223, \"M\") // 2.23 nM\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Writer with Snappy Compatibility\nDESCRIPTION: Example of creating an S2 writer with Snappy compatibility enabled. The code shows how to replace the standard Snappy writer with an S2 writer that produces Snappy-compatible output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\n    // Add Index to stream...\n\tenc := s2.NewWriter(w, s2.WriterAddIndex())\n\tio.Copy(enc, r)\n\tenc.Close()\n```\n\n----------------------------------------\n\nTITLE: VSCode Debug Configuration for Loki with Kafka\nDESCRIPTION: This JSON configuration sets up a debug environment in VSCode for running Loki with Kafka integration. It specifies the program, arguments, and build flags.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/kafka/README.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Launch Loki (Kafka)\",\n            \"type\": \"go\",\n            \"request\": \"launch\",\n            \"mode\": \"auto\",\n            \"program\": \"${workspaceFolder}/cmd/loki/main.go\",\n            \"args\": [\n                \"--config.file=../../tools/dev/kafka/loki-local-config.debug.yaml\",\n                \"--log.level=debug\",\n                \"-target=all\"\n            ],\n            \"buildFlags\": \"-mod vendor\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Encoding Struct to JSON using Opcode Sequence in Go\nDESCRIPTION: This snippet demonstrates how a struct is encoded to JSON using an opcode sequence. It shows the creation of opcodes for each struct field and the overall encoding process.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\njson.Marshal(struct{\n    X int `json:\"x\"`\n    Y string `json:\"y\"`\n}{X: 1, Y: \"hello\"})\n```\n\nLANGUAGE: go\nCODE:\n```\ntype opType int\nconst (\n    opStructFieldHead opType = iota\n    opStructFieldInt\n    opStructFieldStirng\n    opStructEnd\n    opEnd\n)\ntype opcode struct {\n    op opType\n    key []byte\n    next *opcode\n}\n```\n\nLANGUAGE: go\nCODE:\n```\nfunc encode(code *opcode, b []byte, p unsafe.Pointer) ([]byte, error) {\n    for {\n        switch code.op {\n        case opStructFieldHead:\n            b = append(b, '{')\n            code = code.next\n        case opStructFieldInt:\n            b = append(b, code.key...)\n            b = appendInt((*int)(unsafe.Pointer(uintptr(p)+code.offset)))\n            code = code.next\n        case opStructFieldString:\n            b = append(b, code.key...)\n            b = appendString((*string)(unsafe.Pointer(uintptr(p)+code.offset)))\n            code = code.next\n        case opStructEnd:\n            b = append(b, '}')\n            code = code.next\n        case opEnd:\n            goto END\n        }\n    }\nEND:\n    return b, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Advanced Group Capture with regexp2 in Go\nDESCRIPTION: Shows how to work with capture groups using FindStringMatch method. Demonstrates accessing the whole match, individual groups, and multiple captures within groups.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dlclark/regexp2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nif m, _ := re.FindStringMatch(`Something to match`); m != nil {\n    // the whole match is always group 0\n    fmt.Printf(\"Group 0: %v\\n\", m.String())\n\n    // you can get all the groups too\n    gps := m.Groups()\n\n    // a group can be captured multiple times, so each cap is separately addressable\n    fmt.Printf(\"Group 1, first capture\", gps[1].Captures[0].String())\n    fmt.Printf(\"Group 1, second capture\", gps[1].Captures[1].String())\n}\n```\n\n----------------------------------------\n\nTITLE: Building Loki Executable\nDESCRIPTION: Make command to build the Loki executable from source code. Must be run from the Loki repository root directory.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/install-from-source.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake loki\n```\n\n----------------------------------------\n\nTITLE: Creating AWS S3 Object Storage Secret with SSE-S3 Encryption\nDESCRIPTION: Command to create a Kubernetes secret for AWS S3 storage with SSE-S3 encryption. This configuration enables server-side encryption with Amazon S3-managed encryption keys.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-s3 \\\n  --from-literal=bucketnames=\"<BUCKET_NAME>\" \\\n  --from-literal=endpoint=\"<AWS_BUCKET_ENDPOINT>\" \\\n  --from-literal=access_key_id=\"<AWS_ACCESS_KEY_ID>\" \\\n  --from-literal=access_key_secret=\"<AWS_ACCESS_KEY_SECRET>\" \\\n  --from-literal=sse_type=\"SSE-S3\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Short Help Flag in Go using Kingpin\nDESCRIPTION: Demonstrates how to configure a short -h help flag for both simple and complex applications using Kingpin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nvar (\n\tapp = kingpin.New(\"chat\", \"A command-line chat application.\")\n  // ...\n)\n\nfunc main() {\n\tapp.HelpFlag.Short('h')\n\tswitch kingpin.MustParse(app.Parse(os.Args[1:])) {\n  // ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking for Exact Error Values\nDESCRIPTION: Demonstrates using errors.Is to check for specific error values within a multierror, showing compatibility with standard error checking patterns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// Assume err is a multierror value\nerr := somefunc()\nif errors.Is(err, os.ErrNotExist) {\n\t// err contains os.ErrNotExist\n}\n```\n\n----------------------------------------\n\nTITLE: TLS Security Configuration in YAML\nDESCRIPTION: TLS security configuration settings including certificate paths, server verification options, and cipher suite settings. Used across multiple components including frontend, ingester, and ruler services.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_82\n\nLANGUAGE: yaml\nCODE:\n```\ntls_cert_path: <string> | default = \"\"\ntls_key_path: <string> | default = \"\"\ntls_ca_path: <string> | default = \"\"\ntls_server_name: <string> | default = \"\"\ntls_insecure_skip_verify: <boolean> | default = false\n```\n\n----------------------------------------\n\nTITLE: API Path Normalization Configuration\nDESCRIPTION: Example demonstrating how to normalize API paths in JSON-formatted logs using source parameter.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/replace.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n     level:\n     msg:\n- replace:\n    expression: \"\\\\S+ - \\\"POST (\\\\S+) .*\"\n    source:     \"msg\"\n    replace: \"/loki/api/v1/push\"\n```\n\n----------------------------------------\n\nTITLE: Automatic Color Downsampling with Writer in Go\nDESCRIPTION: This snippet demonstrates how to use the Colorprofile package to automatically downsample colors in ANSI output. It shows how to create a Writer that can adapt to different color profiles and strip ANSI codes when necessary.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/colorprofile/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nmyFancyANSI := \"\\x1b[38;2;107;80;255mCute \\x1b[1;3mpuppy!!\\x1b[m\"\n\n// Automatically downsample for the terminal at stdout.\nw := colorprofile.NewWriter(os.Stdout, os.Environ())\nfmt.Fprintf(w, myFancyANSI)\n\n// Downsample to 4-bit ANSI.\nw.Profile = colorprofile.ANSI\nfmt.Fprintf(w, myFancyANSI)\n\n// Ascii-fy, no colors.\nw.Profile = colorprofile.Ascii\nfmt.Fprintf(w, myFancyANSI)\n\n// Strip ANSI altogether.\nw.Profile = colorprofile.NoTTY\nfmt.Fprintf(w, myFancyANSI) // not as fancy\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki and Promtail in Jsonnet\nDESCRIPTION: Jsonnet configuration for Loki and Promtail deployment. This includes settings for authentication, storage backend (S3 or GCS), schema configuration, and Promtail client setup.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/tanka.md#2025-04-19_snippet_2\n\nLANGUAGE: jsonnet\nCODE:\n```\nlocal gateway = import 'loki/gateway.libsonnet';\nlocal loki = import 'loki/loki.libsonnet';\nlocal promtail = import 'promtail/promtail.libsonnet';\n\nloki + promtail + gateway {\n  _config+:: {\n    namespace: 'loki',\n    htpasswd_contents: 'loki:$apr1$H4yGiGNg$ssl5/NymaGFRUvxIV1Nyr.',\n\n    // S3 variables -- Remove if not using s3\n    storage_backend: 's3,dynamodb',\n    s3_access_key: 'key',\n    s3_secret_access_key: 'secret access key',\n    s3_address: 'url',\n    s3_bucket_name: 'loki-test',\n    dynamodb_region: 'region',\n\n    // GCS variables -- Remove if not using gcs\n    storage_backend: 'bigtable,gcs',\n    bigtable_instance: 'instance',\n    bigtable_project: 'project',\n    gcs_bucket_name: 'bucket',\n\n    //Update the object_store and from fields\n    loki+: {\n      schema_config: {\n        configs: [{\n          from: 'YYYY-MM-DD',\n          store: 'boltdb-shipper',\n          object_store: 'my-object-storage-backend-type',\n          schema: 'v11',\n          index: {\n            prefix: '%s_index_' % $._config.table_prefix,\n            period: '%dh' % $._config.index_period_hours,\n          },\n        }],\n      },\n    },\n\n    //Update the container_root_path if necessary\n    promtail_config+: {\n      clients: [{\n        scheme:: 'http',\n        hostname:: 'gateway.%(namespace)s.svc' % $._config,\n        username:: 'loki',\n        password:: 'password',\n        container_root_path:: '/var/lib/docker',\n      }],\n    },\n\n    replication_factor: 3,\n    consul_replicas: 1,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Loading S2 Index Manually in Go\nDESCRIPTION: Loads an S2 index from a byte slice, allowing manual parsing and manipulation of index data without using the decoder's built-in functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\n\tvar index s2.Index\n\t_, err = index.Load(idxBytes)\n```\n\n----------------------------------------\n\nTITLE: Port-Forwarding Grafana Service\nDESCRIPTION: Bash command to port-forward the Grafana service to the local machine on port 3000. This allows access to the Grafana UI for log visualization.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nexport POD_NAME=$(kubectl get pods --namespace meta -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\") && \\\nkubectl --namespace meta port-forward $POD_NAME 3000 --address 0.0.0.0\n```\n\n----------------------------------------\n\nTITLE: Using Step or StepString Functions for Grapheme Iteration\nDESCRIPTION: Example showing how to use the StepString function for iterating over grapheme clusters without allocating a new Graphemes object, requiring manual state handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nstr := \"🇩🇪🏳️‍🌈\"\nstate := -1\nvar c string\nfor len(str) > 0 {\n\tc, str, _, state = uniseg.StepString(str, state)\n\tfmt.Printf(\"%x \", []rune(c))\n}\n// [1f1e9 1f1ea] [1f3f3 fe0f 200d 1f308]\n```\n\n----------------------------------------\n\nTITLE: Error Handling in Go Validator\nDESCRIPTION: Shows how to iterate over multiple validation errors returned from the validator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\n  if err != nil {\n    errs := err.(govalidator.Errors).Errors()\n    for _, e := range errs {\n      fmt.Println(e.Error())\n    }\n  }\n```\n\n----------------------------------------\n\nTITLE: Configuring Querier Service in Istio\nDESCRIPTION: Kubernetes service configuration for Loki Querier with TCP protocol specification for gRPC communication in Istio environment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/istio.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: loki-querier\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-querier\n  name: loki-querier\n  namespace: observability\nspec:\n  ports:\n  - appProtocol: http\n    name: http\n    port: 3100\n    protocol: TCP\n    targetPort: http\n  - appProtocol: tcp\n    name: grpc\n    port: 9095\n    protocol: TCP\n    targetPort: grpc\n  selector:\n    app: loki-querier\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-querier\n  type: ClusterIP\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS and Proxy Settings for Loki Client in YAML\nDESCRIPTION: Defines TLS configuration and proxy settings for secure connections to the Loki server.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n[proxy_url: <string>]\n\ntls_config:\n  [ca_file: <string>]\n  [cert_file: <filename>]\n  [key_file: <filename>]\n  [server_name: <string>]\n  [insecure_skip_verify: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Starting Supporting Services for Loki Kafka Integration\nDESCRIPTION: This command starts the supporting services (Kafka, Grafana, Log Generator) using docker-compose. It runs the services in detached mode.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/kafka/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Creating a custom flag normalization function for word separators\nDESCRIPTION: Defines a normalization function that converts various word separators to a canonical form. This allows flags like --my-flag, --my_flag, and --my.flag to be treated as equivalent.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nfunc wordSepNormalizeFunc(f *pflag.FlagSet, name string) pflag.NormalizedName {\n\tfrom := []string{\"-\", \"_\"}\n\tto := \".\"\n\tfor _, sep := range from {\n\t\tname = strings.Replace(name, sep, to, -1)\n\t}\n\treturn pflag.NormalizedName(name)\n}\n\nmyFlagSet.SetNormalizeFunc(wordSepNormalizeFunc)\n```\n\n----------------------------------------\n\nTITLE: Tracer initialization with proper resource cleanup\nDESCRIPTION: Go code example showing how to initialize a Jaeger tracer and properly close it using defer to ensure all buffered spans are flushed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntracer, closer, err := cfg.NewTracer(...)\ndefer closer.Close()\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Helm Chart with Custom Values\nDESCRIPTION: Helm command to install or upgrade the Loki Simple Scalable Helm chart with custom override values. This command deploys Loki to the specified Kubernetes namespace using the configured GCS storage settings.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/docs/examples/oss/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --values {PATH_TO_YOUR_OVERRIDES_YAML_FILE} {YOUR_RELEASE_NAME} grafana/loki-simple-scalable --namespace {KUBERNETES_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Querying Loki Stream Usage\nDESCRIPTION: These PromQL queries are used to identify tenants that are using more than 50% of their current stream limit. This information is used to temporarily increase limits during the migration process.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/zone-ingesters.md#2025-04-19_snippet_2\n\nLANGUAGE: promql\nCODE:\n```\nsum by (tenant)(sum (loki_ingester_memory_streams) by (cluster, namespace, tenant) / on (namespace) group_left max by(namespace) (loki_distributor_replication_factor))\n>\non (tenant) (\nmax by (tenant) (label_replace(loki_overrides{limit_name=\"max_global_streams_per_user\"} / 2.5, \"tenant\", \"$1\", \"user\", \"(.+)\"))\n)\n```\n\nLANGUAGE: promql\nCODE:\n```\n(sum (loki_ingester_memory_streams) by (cluster, namespace, tenant) / on (namespace) group_left max by(namespace) (loki_distributor_replication_factor)\n) / ignoring(tenant) group_left max by (cluster, namespace)(loki_overrides_defaults{limit_name=\"max_global_streams_per_user\"}) > 0.4)\nunless on (tenant) (\n(label_replace(loki_overrides{limit_name=\"max_global_streams_per_user\"},\"tenant\", \"$1\", \"user\", \"(.+)\")))\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Cloud Infrastructure Storage with OKE Workload Identity in Thanos\nDESCRIPTION: YAML configuration for setting up Oracle Cloud Infrastructure Object Storage in Thanos using the OKE workload identity authentication method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\ntype: OCI\nconfig:\n  provider: \"oke-workload-identity\"\n  bucket: \"\"\n  region: \"\"\n```\n\n----------------------------------------\n\nTITLE: Replace Stage Schema Definition in YAML\nDESCRIPTION: Defines the configuration schema for the replace stage, including expression, source, and replace fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/replace.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nreplace:\n  # The RE2 regular expression. Each named capture group will be added to extracted.\n  # Each capture group and named capture group will be replaced with the value given in `replace`\n  expression: <string>\n\n  # Name from extracted data to parse. If empty, uses the log message.\n  # The replaced value will be assigned back to soure key\n  [source: <string>]\n\n  # Value to which the captured group will be replaced. The captured group or the named capture group will be\n  # replaced with this value and the log line will be replaced with new replaced values. An empty value will\n  # remove the captured group from the log line.\n  [replace: <string>]\n```\n\n----------------------------------------\n\nTITLE: Detecting Terminal Type in Go using go-isatty\nDESCRIPTION: This snippet demonstrates how to use the go-isatty package to detect if the standard output is associated with a terminal, Cygwin/MSYS2 terminal, or neither. It imports the necessary packages and uses IsTerminal and IsCygwinTerminal functions to perform the detection.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-isatty/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/mattn/go-isatty\"\n\t\"os\"\n)\n\nfunc main() {\n\tif isatty.IsTerminal(os.Stdout.Fd()) {\n\t\tfmt.Println(\"Is Terminal\")\n\t} else if isatty.IsCygwinTerminal(os.Stdout.Fd()) {\n\t\tfmt.Println(\"Is Cygwin/MSYS2 Terminal\")\n\t} else {\n\t\tfmt.Println(\"Is Not Terminal\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Timestamps and Caller Information to Go Kit Logs\nDESCRIPTION: Shows how to enhance log entries with automatic timestamps and caller information using Go Kit's logging utilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/kit/log/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nvar logger log.Logger\nlogger = log.NewLogfmtLogger(log.NewSyncWriter(os.Stderr))\nlogger = log.With(logger, \"ts\", log.DefaultTimestampUTC, \"caller\", log.DefaultCaller)\n\nlogger.Log(\"msg\", \"hello\")\n\n// Output:\n// ts=2016-01-01T12:34:56Z caller=main.go:15 msg=hello\n```\n\n----------------------------------------\n\nTITLE: Checking Log Volume\nDESCRIPTION: Command to check total log volume for a specific service over the last 24 hours.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nlogcli volume --since 24h '{service_name=\"Delivery World\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingester Service in Istio\nDESCRIPTION: Kubernetes service configuration for Loki Ingester with TCP protocol specification for gRPC ports in Istio mesh.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/istio.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: loki-ingester-(headless)\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-ingester\n  name: loki-ingester-headless\nspec:  \n  clusterIP: None (if headless)\n  ports:\n  - name: http\n    port: 3100\n    protocol: TCP\n    targetPort: http\n  - appProtocol: tcp\n    name: grpc\n    port: 9095\n    protocol: TCP\n    targetPort: grpc\n  selector:\n    app: loki-ingester\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-ingester\n  type: ClusterIP\n```\n\n----------------------------------------\n\nTITLE: Collecting Merged PRs Since Last Release in Shell\nDESCRIPTION: This snippet collects all merged pull requests since the last release (v1.2.0 in this example) and saves them to a JSON file. It uses the GitHub CLI (gh) and jq for processing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/RELEASE.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nfor commit_sha in $(git log --pretty=format:\"%h\" v1.2.0..HEAD); do\n        gh pr list --search \"$commit_sha\" --state merged --json number,title,labels,url\ndone | jq '.[]' | jq --slurp 'unique_by(.number)' > prs.json\n```\n\n----------------------------------------\n\nTITLE: Implementing Streaming Decompression in Go with zstd\nDESCRIPTION: Example of how to set up streaming decompression using the zstd library. This code creates a reader that decompresses zstd-compressed data from an input stream and writes it to an output stream, with proper resource cleanup through defer.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/klauspost/compress/zstd\"\n\nfunc Decompress(in io.Reader, out io.Writer) error {\n    d, err := zstd.NewReader(in)\n    if err != nil {\n        return err\n    }\n    defer d.Close()\n    \n    // Copy content...\n    _, err = io.Copy(out, d)\n    return err\n}\n```\n\n----------------------------------------\n\nTITLE: Tailing a File with Go\nDESCRIPTION: This snippet demonstrates how to use the tail package to continuously read and print lines from a file. It creates a TailFile instance with the Follow option set to true, then iterates over the Lines channel to print each line.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/tail/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nt, err := tail.TailFile(\"/var/log/nginx.log\", tail.Config{Follow: true})\nfor line := range t.Lines {\n    fmt.Println(line.Text)\n}\n```\n\n----------------------------------------\n\nTITLE: Running Benchmarks with Bash Commands\nDESCRIPTION: Commands for running various benchmark operations, including running all benchmarks, listing available queries, running with an interactive UI, and streaming sample logs.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/logql/bench/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run all benchmarks\nmake bench\n\n# List available benchmark queries\nmake list\n\n# Run benchmarks with interactive UI\nmake run\n\n# Run with debug output, you need to tail the logs to see the output `tail -f debug.log`\nmake run-debug\n\n# Stream sample logs from the dataset\nmake stream\n```\n\n----------------------------------------\n\nTITLE: Disabling Legacy Read Target Configuration\nDESCRIPTION: YAML configuration to disable the legacy read target by setting legacyReadTarget flag to false in the values.yaml file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-to-three-scalable-targets/index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nread:\n  legacyReadTarget: false\n```\n\n----------------------------------------\n\nTITLE: Query Streams Endpoints\nDESCRIPTION: Series API endpoints for retrieving lists of streams matching certain selectors.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/series\n```\n\nLANGUAGE: bash\nCODE:\n```\nPOST /loki/api/v1/series\n```\n\n----------------------------------------\n\nTITLE: Conditional Field Logging in Go\nDESCRIPTION: Demonstrates how to conditionally log a field based on environment variables. This can be used to include additional data in non-production environments.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfunc Customer(order *Order) log.Field {\n    if os.Getenv(\"ENVIRONMENT\") == \"dev\" {\n        return log.String(\"customer\", order.Customer.ID)\n    }\n    return log.Noop()\n}\n```\n\n----------------------------------------\n\nTITLE: Dependency Updates and Bug Fixes List\nDESCRIPTION: A comprehensive list of dependency updates, bug fixes, and improvements made to Grafana Loki, including version bumps for various modules, fixes for LogQL parsing, distributor enhancements, and Helm chart improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-3.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- **deps:** Update module github.com/minio/minio-go/v7 to v7.0.77\n- **deps:** Update module github.com/minio/minio-go/v7 to v7.0.80\n- **deps:** Update module github.com/ncw/swift/v2 to v2.0.3\n- **deps:** Update module github.com/prometheus/client_golang to v1.20.5\n- **deps:** Update module github.com/schollz/progressbar/v3 to v3.17.0\n- **deps:** Update module github.com/shirou/gopsutil/v4 to v4.24.10\n- **deps:** Update module github.com/shirou/gopsutil/v4 to v4.24.9\n- **deps:** Update module github.com/shopify/sarama to v1.43.3\n- **deps:** Update module github.com/spf13/afero to v1.11.0\n- **deps:** Update module go.etcd.io/bbolt to v1.3.11\n- **deps:** Update module golang.org/x/net to v0.29.0\n- **deps:** Downgrade grpc to fix regression\n- **deps:** Fix missing dep PartitionRing for Ingester\n- **deps:** nix build, downgrade toolchain to go1.23.1\n- **deps:** Revert \"fix(deps): Update module github.com/shirou/gopsutil/v4 to v4.24.9\"\n- **detected_fields:** Return parsed labels when parsers are passed\n- **detected_fields:** Always return empty array as `null`\n- **docs:** Correct OTLP documentation typo\n- **distributor:** Always write detected_level when enabled, even if unknown\n- **distributor:** Validate partition ring is kafka is enabled\n- **distributor:** Level detection for warning level\n- **explore logs:** Correctly create logfmt string\n- **explore logs:** Allow any level for aggregated metrics\n- **helm:** Add missing `loki.storage.azure.chunkDelimiter` parameter to Helm chart\n- **helm:** Check for `rbac.namespaced` condition before creating roles\n- **helm:** Fix persistence configuration for Memcached\n- **helm:** Fix wrong port name referenced for ingress NetworkPolicy\n- **helm:** Various fixes and enhancements for bloom components\n- **ingester:** Report PSRL error message correctly\n- **ingester:** Wait for OwnedStreams service in Ingester startup\n- **lambda-promtail:** Add s3 principal to iam policy attached to sqs in lambda-promtail terraform code\n- **logcli:** Check for errors before checking for `exists` when fetching data\n- **logcli:** Create new tail response for every line\n- **logql:** Fix panic in json parsing when using empty array index\n- **logql:** Update JSONExpressionParser to not unescape extracted values if it is JSON object\n- **logql:** Allow rename of structured metadata labels\n- **logql:** Renamed label should use ParsedLabel category\n- **logql:** Skipping label if it contains special symbol\n- **mixin:** Remove pod label from disk usage aggregation\n- **mixins:** Fix loki-resources-overview panel layout\n- **mixins:** Add backend path section in loki-operational for single scalable deployment\n- **mixins:** Disk space utilization panels with latest KSM versions\n- **mixins:** Retention dashboards fix metric name\n- **otlp:** Enable service detection for otlp endpoint\n- **operator:** Add 1x.pico OpenShift UI dropdown menu\n- **operator:** Add missing groupBy label for all rules on OpenShift\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway Secret for Loki Operator\nDESCRIPTION: Creates a gateway secret for the Loki Operator, required for deploying the lokistack-gateway component.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n openshift-logging create secret generic test1 \\\n  --from-literal=clientID=\"<CLIENT_ID>\" \\\n  --from-literal=clientSecret=\"<CLIENT_SECRET>\" \\\n  --from-literal=issuerCAPath=\"<ISSUER_CA_PATH>\"\n```\n\n----------------------------------------\n\nTITLE: Prometheus Metrics Endpoint in Loki API\nDESCRIPTION: The metrics endpoint exposes Prometheus metrics for monitoring Loki's performance and behavior.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nGET /metrics\n```\n\n----------------------------------------\n\nTITLE: Visualizing Block Builder Component Diagram using Mermaid\nDESCRIPTION: This diagram illustrates the relationships between various components of the Block Builder system, including Kafka, Block Scheduler, Block Builders, and Object Storage. It shows the flow of data and communication between different parts of the system.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/blockbuilder/architecture.md#2025-04-19_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TB\n    subgraph Kafka\n        KP[Kafka Partitions]\n    end\n\n    subgraph Block Scheduler\n        S[Scheduler]\n        Q[Job Queue]\n        PC[Partition Controller]\n        \n        subgraph Transport Layer\n            GA[gRPC Adapter]\n            SH[Scheduler Handler]\n        end\n    end\n\n    subgraph Block Builders\n        BB1[Block Builder 1]\n        BB2[Block Builder 2]\n        BB3[Block Builder N]\n        \n        subgraph Builder Transport\n            BT[Builder Transport]\n        end\n    end\n\n    subgraph Storage\n        OS[Object Storage]\n    end\n\n    KP --> PC\n    PC --> S\n    S <--> Q\n    S --> SH\n    SH <--> GA\n    GA <--> BT\n    BT <--> BB1\n    BT <--> BB2\n    BT <--> BB3\n    BB1 --> OS\n    BB2 --> OS\n    BB3 --> OS\n```\n\n----------------------------------------\n\nTITLE: Checking logcli Version\nDESCRIPTION: Command to verify the installed version of logcli.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nlogcli –version\n```\n\n----------------------------------------\n\nTITLE: Docker Stage Pipeline Example in YAML\nDESCRIPTION: Example of a complete pipeline configuration using the Docker stage to parse Docker log files.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/docker.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- docker: {}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Go Kit Logger with Logfmt Format\nDESCRIPTION: Shows how to create a basic logger using Go Kit's log package with logfmt output format.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/log/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nw := log.NewSyncWriter(os.Stderr)\nlogger := log.NewLogfmtLogger(w)\nlogger.Log(\"question\", \"what is the meaning of life?\", \"answer\", 42)\n\n// Output:\n// question=\"what is the meaning of life?\" answer=42\n```\n\n----------------------------------------\n\nTITLE: Disabling Memcached in Single Binary Mode\nDESCRIPTION: Configuration to disable Memcached deployments for chunks and results cache in Single Binary mode, reverting to in-memory caching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-to-6x/index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nchunksCache:\n  enabled: false\nresultsCache:\n  enabled: false\n```\n\n----------------------------------------\n\nTITLE: Initializing procfs and Reading System Statistics in Go\nDESCRIPTION: Example of how to create a new procfs filesystem instance pointing to /proc and read system statistics from it. This is the basic pattern for retrieving data from the /proc filesystem.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfs, err := procfs.NewFS(\"/proc\")\nstats, err := fs.Stat()\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Index Gateway in YAML\nDESCRIPTION: Configuration options for the Loki index gateway server, which serves index queries without requiring constant interaction with the object store. Includes mode selection between simple and ring operation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\n# Defines in which mode the index gateway server will operate (default to\n# 'simple'). It supports two modes:\n# - 'simple': an index gateway server instance is responsible for handling,\n# storing and returning requests for all indices for all tenants.\n# - 'ring': an index gateway server instance is responsible for a subset of\n# tenants instead of all tenants.\n# CLI flag: -index-gateway.mode\n[mode: <string> | default = \"simple\"]\n```\n\n----------------------------------------\n\nTITLE: Applying Terraform with Variables for GCP Log Export Configuration\nDESCRIPTION: Example of applying Terraform configuration with variables passed via command line. This specifies credentials file, zone, region, project, and log name for the GCP log export setup.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/gcplog/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nterraform apply \\\n-var=\"credentials_file=./permissions.json\" \\\n-var=\"zone=us-central1-b\" \\\n-var=\"region=us-central1\" \\\n-var=\"project=grafanalabs-dev\" \\\n-var=\"logname=cloud-logs\"\n```\n\n----------------------------------------\n\nTITLE: IP Address Matching in LogQL Label Filter\nDESCRIPTION: Illustrates the use of the ip() function with an IPv6 range in a LogQL label filter after parsing log lines with logfmt.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"}\n\t\t| logfmt\n\t\t| remote_addr = ip(\"2001:db8::1-2001:db8::8\")\n\t\t| level = \"error\"\n```\n\n----------------------------------------\n\nTITLE: Defining Loki Query Frontend Service in Kubernetes\nDESCRIPTION: This Service definition exposes the Loki query frontend deployment within the Kubernetes cluster. It's configured with headless service (ClusterIP: None) and publishNotReadyAddresses to support the GRPC pull model.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/query-frontend.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n  labels:\n    name: query-frontend\n  name: query-frontend\n  namespace: <namespace>\nspec:\n  ports:\n    - name: query-frontend-http\n      port: 3100\n      protocol: TCP\n      targetPort: 3100\n  selector:\n    name: query-frontend\n  sessionAffinity: None\n  type: ClusterIP\n  ClusterIP: None\n  publishNotReadyAddresses: true\n```\n\n----------------------------------------\n\nTITLE: Implementing and Using a Circuit Breaker in Go\nDESCRIPTION: This snippet demonstrates how to create a circuit breaker with specified error threshold, success threshold, and timeout. It then shows how to use the breaker in a loop to run a function that communicates with an external service, handling different result scenarios.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/eapache/go-resiliency/breaker/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nb := breaker.New(3, 1, 5*time.Second)\n\nfor {\n\tresult := b.Run(func() error {\n\t\t// communicate with some external service and\n\t\t// return an error if the communication failed\n\t\treturn nil\n\t})\n\n\tswitch result {\n\tcase nil:\n\t\t// success!\n\tcase breaker.ErrBreakerOpen:\n\t\t// our function wasn't run because the breaker was open\n\tdefault:\n\t\t// some other error\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Rules with GitHub Actions\nDESCRIPTION: This YAML snippet demonstrates how to use the Cortex rules action in GitHub Actions to lint and deploy Loki rules. It includes steps for linting rules and syncing them to a Loki staging environment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- name: Lint Loki rules\n  uses: grafana/cortex-rules-action@master\n  env:\n    ACTION: check\n    RULES_DIR: <source_dir_of_rules> # Example: logs/recording_rules/,logs/alerts/\n    BACKEND: loki\n\n- name: Deploy rules to Loki staging\n  uses: grafana/cortex-rules-action@master\n  env:\n    CORTEX_ADDRESS: <loki_ingress_addr>\n    CORTEX_TENANT_ID: fake\n    ACTION: sync\n    RULES_DIR: <source_dir_of_rules> # Example: logs/recording_rules/,logs/alerts/\n    BACKEND: loki\n```\n\n----------------------------------------\n\nTITLE: Demonstrating BitSet Operations in Go\nDESCRIPTION: This example demonstrates various operations of the BitSet library, including setting and testing bits, chaining operations, and performing set intersections.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bitset/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\n\t\"github.com/willf/bitset\"\n)\n\nfunc main() {\n\tfmt.Printf(\"Hello from BitSet!\\n\")\n\tvar b bitset.BitSet\n\t// play some Go Fish\n\tfor i := 0; i < 100; i++ {\n\t\tcard1 := uint(rand.Intn(52))\n\t\tcard2 := uint(rand.Intn(52))\n\t\tb.Set(card1)\n\t\tif b.Test(card2) {\n\t\t\tfmt.Println(\"Go Fish!\")\n\t\t}\n\t\tb.Clear(card1)\n\t}\n\n\t// Chaining\n\tb.Set(10).Set(11)\n\n\tfor i, e := b.NextSet(0); e; i, e = b.NextSet(i + 1) {\n\t\tfmt.Println(\"The following bit is set:\", i)\n\t}\n\tif b.Intersection(bitset.New(100).Set(10)).Count() == 1 {\n\t\tfmt.Println(\"Intersection works.\")\n\t} else {\n\t\tfmt.Println(\"Intersection doesn't work???\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Registering ECS Task Definition\nDESCRIPTION: Command to register the ECS task definition with AWS\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\naws ecs register-task-definition --region us-east-2 --cli-input-json  file://ecs-task.json\n```\n\n----------------------------------------\n\nTITLE: Using ReadSeeker with Custom Index in Go\nDESCRIPTION: Creates a ReadSeeker from an S2 decoder with a provided custom index, allowing forward-only seeking. Since a custom index is specified, the input reader doesn't need to implement io.Seeker.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n\tdec := s2.NewReader(r)\n\trs, err := dec.ReadSeeker(false, index)\n\trs.Seek(wantOffset, io.SeekStart)\t\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry OTLP gRPC Timeout in Go\nDESCRIPTION: Example showing the configuration of timeout for the OTLP/gRPC exporter using the newly added WithTimeout option. This allows controlling the timeout for exporting data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_31\n\nLANGUAGE: Go\nCODE:\n```\nimport (\n    \"time\"\n    \"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlpgrpc\"\n)\n\n// Configure OTLP exporter with timeout\nexporter, err := otlptrace.New(\n    context.Background(),\n    otlpgrpc.NewClient(\n        otlpgrpc.WithEndpoint(\"otel-collector:4317\"),\n        otlpgrpc.WithTimeout(10 * time.Second),\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Declared Type Option in Go\nDESCRIPTION: Demonstrates how to implement an option for a declared type using the Option interface pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype myTypeOption struct {\n\tMyType MyType\n}\n\nfunc (o myTypeOption) apply(c config) config {\n\tc.MyType = o.MyType\n    return c\n}\n\n// WithMyType sets T to have include MyType.\nfunc WithMyType(t MyType) Option {\n\treturn myTypeOption{t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing the discovery.Config Interface in Go\nDESCRIPTION: The core interface required to implement a service discovery mechanism in Prometheus. It includes the Config interface for registration and DiscovererOptions for configuring the discoverer with logging, metrics, and HTTP client options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/discovery/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype Config interface {\n\t// Name returns the name of the discovery mechanism.\n\tName() string\n\n\t// NewDiscoverer returns a Discoverer for the Config\n\t// with the given DiscovererOptions.\n\tNewDiscoverer(DiscovererOptions) (Discoverer, error)\n}\n\ntype DiscovererOptions struct {\n\tLogger *slog.Logger\n\n\t// A registerer for the Discoverer's metrics.\n\tRegisterer prometheus.Registerer\n\t\n\tHTTPClientOptions []config.HTTPClientOption\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Code Generation Helper File for vfsgen in Go\nDESCRIPTION: Example of a Go file that can be used with go generate to create the static filesystem implementation. It uses build tags to control when it's used.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\n//go:build ignore\n\npackage main\n\nimport (\n\t\"log\"\n\n\t\"example.com/project/data\"\n\t\"github.com/shurcooL/vfsgen\"\n)\n\nfunc main() {\n\terr := vfsgen.Generate(data.Assets, vfsgen.Options{\n\t\tPackageName:  \"data\",\n\t\tBuildTags:    \"!dev\",\n\t\tVariableName: \"Assets\",\n\t})\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with DefaultAzureCredential in Go\nDESCRIPTION: This example demonstrates how to authenticate a client from the armresources module using DefaultAzureCredential.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncred, err := azidentity.NewDefaultAzureCredential(nil)\nif err != nil {\n  // handle error\n}\n\nclient := armresources.NewResourceGroupsClient(\"subscription ID\", cred, nil)\n```\n\n----------------------------------------\n\nTITLE: Counting Characters in a String using GraphemeClusterCount\nDESCRIPTION: Example demonstrating how to count the number of grapheme clusters in a string using the GraphemeClusterCount function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nn := uniseg.GraphemeClusterCount(\"🇩🇪🏳️‍🌈\")\nfmt.Println(n)\n// 2\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: Command to add the Grafana chart repository to Helm which contains the Loki Helm chart.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\n----------------------------------------\n\nTITLE: Installing Docker Loki Driver\nDESCRIPTION: Command to install the Grafana Loki Docker driver plugin. Supports both arm64 and amd64 architectures.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker plugin install grafana/loki-docker-driver:3.3.2-arm64 --alias loki --grant-all-permissions\n```\n\n----------------------------------------\n\nTITLE: Applying Completed Fluent Bit Configuration\nDESCRIPTION: Copy the completed Fluent Bit configuration file and restart the container if stuck or needing help.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncp loki-fundamentals/completed/fluent-bit.conf loki-fundamentals/fluent-bit.conf\ndocker restart loki-fundamentals-fluent-bit-1\n```\n\n----------------------------------------\n\nTITLE: Buffered Loki Output Configuration\nDESCRIPTION: Fluent Bit configuration for Loki output with buffering enabled using dque.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_9\n\nLANGUAGE: properties\nCODE:\n```\n[Output]\n    Name grafana-loki\n    Match *\n    Url http://localhost:3100/loki/api/v1/push\n    Buffer true\n    DqueSegmentSize 8096\n    DqueDir /tmp/flb-storage/buffer\n    DqueName loki.0\n```\n\n----------------------------------------\n\nTITLE: Basic Structured Logging with Go Kit\nDESCRIPTION: Shows how to set up a basic structured logger using Go Kit's log package, writing logfmt-formatted logs to stderr.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/kit/log/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nw := log.NewSyncWriter(os.Stderr)\nlogger := log.NewLogfmtLogger(w)\nlogger.Log(\"question\", \"what is the meaning of life?\", \"answer\", 42)\n\n// Output:\n// question=\"what is the meaning of life?\" answer=42\n```\n\n----------------------------------------\n\nTITLE: Creating ObjectBucketClaim for OpenShift Data Foundation\nDESCRIPTION: YAML to create an ObjectBucketClaim in the OpenShift Logging namespace. This claim requests a bucket from OpenShift Data Foundation to be used for Loki storage.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: objectbucket.io/v1alpha1\nkind: ObjectBucketClaim\nmetadata:\n  name: loki-bucket-odf\n  namespace: openshift-logging\nspec:\n  generateBucketName: loki-bucket-odf\n```\n\n----------------------------------------\n\nTITLE: Configuring Delta to Cumulative Processor in YAML\nDESCRIPTION: YAML configuration for the Delta to Cumulative processor. The configuration allows setting max_stale duration for removing stale series and max_streams to limit the number of tracked streams.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/open-telemetry/opentelemetry-collector-contrib/processor/deltatocumulativeprocessor/README.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nprocessors:\n    deltatocumulative:\n        # how long until a series not receiving new samples is removed\n        [ max_stale: <duration> | default = 5m ]\n \n        # upper limit of streams to track. new streams exceeding this limit\n        # will be dropped\n        [ max_streams: <int> | default = 9223372036854775807 (max int) ]\n\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Operator CRDs\nDESCRIPTION: Installs the Custom Resource Definitions (CRDs) for Loki Operator into the cluster. This creates the lokistacks.loki.grafana.com CRD.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake install\n```\n\n----------------------------------------\n\nTITLE: Configuring Bloom Filter Building in Grafana Loki\nDESCRIPTION: YAML configuration for Loki's bloom planner and builder servers, responsible for building bloom filters. Includes settings for planning intervals, task queuing, retention policies, and builder properties.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n# Flag to enable or disable the usage of the bloom-planner and bloom-builder\n# components.\n# CLI flag: -bloom-build.enabled\n[enabled: <boolean> | default = false]\n\nplanner:\n  # Interval at which to re-run the bloom creation planning.\n  # CLI flag: -bloom-build.planner.interval\n  [planning_interval: <duration> | default = 8h]\n\n  # Newest day-table offset (from today, inclusive) to build blooms for. 0 start\n  # building from today, 1 from yesterday and so on. Increase to lower cost by\n  # not re-writing data to object storage too frequently since recent data\n  # changes more often at the cost of not having blooms available as quickly.\n  # CLI flag: -bloom-build.planner.min-table-offset\n  [min_table_offset: <int> | default = 0]\n\n  # Oldest day-table offset (from today, inclusive) to build blooms for. 1 till\n  # yesterday, 2 till day before yesterday and so on. This can be used to lower\n  # cost by not trying to build blooms for older data which doesn't change. This\n  # can be optimized by aligning it with the maximum\n  # `reject_old_samples_max_age` setting of any tenant.\n  # CLI flag: -bloom-build.planner.max-table-offset\n  [max_table_offset: <int> | default = 1]\n\n  retention:\n    # Enable bloom retention.\n    # CLI flag: -bloom-build.planner.retention.enabled\n    [enabled: <boolean> | default = false]\n\n  queue:\n    # Maximum number of tasks to queue per tenant.\n    # CLI flag: -bloom-build.planner.queue.max-tasks-per-tenant\n    [max_queued_tasks_per_tenant: <int> | default = 30000]\n\n    # Whether to store tasks on disk.\n    # CLI flag: -bloom-build.planner.queue.store-tasks-on-disk\n    [store_tasks_on_disk: <boolean> | default = false]\n\n    # Directory to store tasks on disk.\n    # CLI flag: -bloom-build.planner.queue.tasks-disk-directory\n    [tasks_disk_directory: <string> | default = \"/tmp/bloom-planner-queue\"]\n\n    # Whether to clean the tasks directory on startup.\n    # CLI flag: -bloom-build.planner.queue.clean-tasks-directory\n    [clean_tasks_directory: <boolean> | default = false]\n\nbuilder:\n  # The grpc_client block configures the gRPC client used to communicate between\n  # a client and server component in Loki.\n  # The CLI flags prefix for this block configuration is:\n  # bloom-build.builder.grpc\n  [grpc_config: <grpc_client>]\n\n  # Hostname (and port) of the bloom planner\n  # CLI flag: -bloom-build.builder.planner-address\n  [planner_address: <string> | default = \"\"]\n\n  backoff_config:\n    # Minimum delay when backing off.\n    # CLI flag: -bloom-build.builder.backoff.backoff-min-period\n    [min_period: <duration> | default = 100ms]\n\n    # Maximum delay when backing off.\n    # CLI flag: -bloom-build.builder.backoff.backoff-max-period\n    [max_period: <duration> | default = 10s]\n\n    # Number of times to backoff and retry before failing.\n    # CLI flag: -bloom-build.builder.backoff.backoff-retries\n    [max_retries: <int> | default = 10]\n```\n\n----------------------------------------\n\nTITLE: Producing Messages to a Kafka Topic\nDESCRIPTION: Example of using the make producer command to send messages to a specified Kafka topic, showing the interactive prompt for message input.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/kafka/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nTOPIC=new-topic make producer\n\nProducing messages to topic new-topic...\nWrite a message and press Enter\n>hello world !\n>\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository and Starting Observability Stack\nDESCRIPTION: Clone the demo application repository and start the observability stack using Docker Compose.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone -b fluentbit-official  https://github.com/grafana/loki-fundamentals.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose -f loki-fundamentals/docker-compose.yml up -d\n```\n\n----------------------------------------\n\nTITLE: Formatting Tokens with Style in Go\nDESCRIPTION: Code showing how to apply formatting to the tokens using the selected formatter and style.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nerr := formatter.Format(w, style, iterator)\n```\n\n----------------------------------------\n\nTITLE: Managing Dependencies in Loki Project\nDESCRIPTION: Commands for adding or updating dependencies using Go modules, and tidying up the go.mod and go.sum files.\nSOURCE: https://github.com/grafana/loki/blob/main/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Pick the latest tagged release.\ngo get example.com/some/module/pkg\n\n# Pick a specific version.\ngo get example.com/some/module/pkg@vX.Y.Z\n\ngo mod tidy\ngo mod vendor\ngit add go.mod go.sum vendor\ngit commit\n```\n\n----------------------------------------\n\nTITLE: Using Deflate Packages as Drop-in Replacements in Go\nDESCRIPTION: Shows how to replace standard Go compression library imports with optimized alternatives from the klauspost/compress package. These replacements offer approximately 2x the speed of standard library packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// old import       | new import\n// compress/gzip  | github.com/klauspost/compress/gzip\n// compress/zlib  | github.com/klauspost/compress/zlib\n// archive/zip    | github.com/klauspost/compress/zip\n// compress/flate | github.com/klauspost/compress/flate\n```\n\n----------------------------------------\n\nTITLE: Basic Password Masking Configuration\nDESCRIPTION: Example showing how to mask password information in log lines using the replace stage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/replace.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- replace:\n    expression: \"password (\\\\S+)\"\n    replace: \"****\"\n```\n\n----------------------------------------\n\nTITLE: Data Obfuscation Configuration\nDESCRIPTION: Configuration for obfuscating sensitive data like SSN, IP addresses, emails, and credit card numbers using hashing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/replace.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- replace:\n    # SSN\n    expression: '([0-9]{3}-[0-9]{2}-[0-9]{4})'\n    replace: '*SSN*{{ .Value | Hash \"salt\" }}*'\n- replace:\n    # IP4\n    expression: '(\\d{1,3}[.]\\d{1,3}[.]\\d{1,3}[.]\\d{1,3})'\n    replace: '*IP4*{{ .Value | Hash \"salt\" }}*'    \n- replace:\n    # email\n    expression: '([\\w\\.=-]+@[\\w\\.-]+\\.[\\w]{2,64})'\n    replace: '*email*{{ .Value | Hash \"salt\" }}*'  \n- replace:\n    # creditcard\n    expression: '((?:\\d[ -]*?){13,16})'\n    replace: '*creditcard*{{ .Value | Hash \"salt\" }}*'\n```\n\n----------------------------------------\n\nTITLE: Defining Regex Pipeline Stage Schema in YAML\nDESCRIPTION: This snippet shows the YAML schema for configuring the regex stage in Promtail's pipeline. It specifies the required 'expression' field for the RE2 regular expression and an optional 'source' field to specify the data to parse.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/regex.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nregex:\n  # The RE2 regular expression. Each capture group must be named.\n  expression: <string>\n\n  # Name from extracted data to parse. If empty, uses the log message.\n  [source: <string>]\n```\n\n----------------------------------------\n\nTITLE: Initializing and Rendering Basic ASCII Table in Go\nDESCRIPTION: This snippet demonstrates how to create a basic ASCII table using the tablewriter library. It sets up the table header, appends data rows, and renders the output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n    []string{\"A\", \"The Good\", \"500\"},\n    []string{\"B\", \"The Very very Bad Man\", \"288\"},\n    []string{\"C\", \"The Ugly\", \"120\"},\n    []string{\"D\", \"The Gopher\", \"800\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Name\", \"Sign\", \"Rating\"})\n\nfor _, v := range data {\n    table.Append(v)\n}\ntable.Render() // Send output\n```\n\n----------------------------------------\n\nTITLE: Configuring Consul Service with Connect and Traefik Integration\nDESCRIPTION: HCL configuration for registering a Loki distributor service with Consul, including Connect integration, health checks, and Traefik routing configuration for secure access.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\n    service {\n      name = \"loki-distributor\"\n      port = \"http\"\n\n      meta {\n        alloc_id  = NOMAD_ALLOC_ID\n        component = \"distributor\"\n      }\n\n      tags = [\n        \"traefik.enable=true\",\n        \"traefik.consulcatalog.connect=true\",\n\n        \"traefik.http.routers.loki-distributor.entrypoints=https\",\n        \"traefik.http.routers.loki-distributor.rule=Host(`loki-distributor.service.consul`)\",\n        \"traefik.http.middlewares.loki-distributor.basicauth.users=promtail:$$apr1$$wnih40yf$$vcxJYiqcEQLknQAZcpy/I1\",\n        \"traefik.http.routers.loki-distirbutor.middlewares=loki-distributor@consulcatalog\",\n\n        \"traefik.http.routers.loki-distributor-ring.entrypoints=https\",\n        \"traefik.http.routers.loki-distributor-ring.rule=Host(`loki-distributor.service.consul`) && Path(`/distributor/ring`)\",\n        \"traefik.http.middlewares.loki-distributor-ring.basicauth.users=devops:$apr1$bNIZL02A$QrOgT3NAOx.koXWnqfXbo0\",\n        \"traefik.http.routers.loki-distributor-ring.middlewares=loki-distributor-ring@consulcatalog\",\n      ]\n\n      check {\n        name     = \"Loki distributor\"\n        port     = \"health\"\n        type     = \"http\"\n        path     = \"/ready\"\n        interval = \"20s\"\n        timeout  = \"1s\"\n      }\n\n      connect {\n        sidecar_service {\n          proxy {\n            local_service_port = 80\n\n            expose {\n              path {\n                path            = \"/metrics\"\n                protocol        = \"http\"\n                local_path_port = 80\n                listener_port   = \"http\"\n              }\n\n              path {\n                path            = \"/ready\"\n                protocol        = \"http\"\n                local_path_port = 80\n                listener_port   = \"health\"\n              }\n            }\n          }\n        }\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Basic Radix Tree Operations in Go\nDESCRIPTION: Demonstrates basic usage of the iradix package including creating a new tree, inserting values, and finding longest prefix matches. Shows core functionality of the immutable radix tree implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-immutable-radix/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Create a tree\nr := iradix.New()\nr, _, _ = r.Insert([]byte(\"foo\"), 1)\nr, _, _ = r.Insert([]byte(\"bar\"), 2)\nr, _, _ = r.Insert([]byte(\"foobar\"), 2)\n\n// Find the longest prefix match\nm, _, _ := r.Root().LongestPrefix([]byte(\"foozip\"))\nif string(m) != \"foo\" {\n    panic(\"should be foo\")\n}\n```\n\n----------------------------------------\n\nTITLE: Using DrainScanner for Heroku Drain Message Processing in Go\nDESCRIPTION: Example handler showing how to use the DrainScanner for processing unstructured Heroku drain messages. This scanner is specifically designed for applications acting as Heroku drains where structured data is not required.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/heroku/x/logplex/encoding/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\ts := NewDrainScanner(r.Body)\n\n\tfor s.Scan() {\n\t\tlog.Printf(\"%+v\", scanner.Message())\n\t}\n\n\tif s.Err() != nil {\n\t\tlog.Printf(\"err: %v\", s.Err())\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Example Docker Log Entry JSON Format\nDESCRIPTION: Sample JSON-formatted Docker log entry showing the standard structure with log content, stream type, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/docker.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Basic Variable Fuzzing in Go\nDESCRIPTION: Demonstrates how to use GoFuzz to populate a single integer variable with a random value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/gofuzz/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nf := fuzz.New()\nvar myInt int\nf.Fuzz(&myInt) // myInt gets a random value.\n```\n\n----------------------------------------\n\nTITLE: Streaming Content Verification with io.Reader in Go\nDESCRIPTION: Demonstrates how to verify content from an io.Reader using a Verifier object, useful for handling streams of data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opencontainers/go-digest/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nrd := getContent()\nverifier := id.Verifier()\nio.Copy(verifier, rd)\n\nif !verifier.Verified() {\n  return errors.New(\"the content has changed!\")\n}\n```\n\n----------------------------------------\n\nTITLE: Boolean Vector Comparison in LogQL\nDESCRIPTION: Similar to the previous query, but uses the 'bool' modifier to return 1 or 0 instead of filtering in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: logql\nCODE:\n```\nsum without(app) (count_over_time({app=\"foo\"}[1m])) > bool sum without(app) (count_over_time({app=\"bar\"}[1m]))\n```\n\n----------------------------------------\n\nTITLE: Configuring Labelallow Stage in Promtail Pipeline\nDESCRIPTION: An example of how to configure the labelallow stage in a Promtail pipeline. It demonstrates allowing only 'kubernetes_pod_name' and 'kubernetes_container_name' labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labelallow.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes_sd_configs:\n - role: pod \npipeline_stages:\n- docker: {}    \n- labelallow:\n    - kubernetes_pod_name\n    - kubernetes_container_name\n```\n\n----------------------------------------\n\nTITLE: Azure Workload Identity Federation Configuration for LokiStack in YAML\nDESCRIPTION: This YAML configuration shows the required fields for Azure object storage when using short-lived token authentication via Workload Identity Federation, replacing the account key with client ID, tenant ID, and subscription ID.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  environment:     # The Azure Storage account environment\n  container:       # The Azure Storage account container\n  account_name:    # The Azure Storage account name\n  client_id:       # The Azure Workload Identity's Client ID\n  tenant_id:       # The Azure Account's Tenant ID holding the workload identity for LokiStack\n  subscription_id: # The Azure Account's Subscription ID holding the workload identity for LokiStack\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontend Worker in Loki\nDESCRIPTION: Configuration block for the frontend worker component that handles query execution from the query-frontend.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n[frontend_worker: <frontend_worker>]\n```\n\n----------------------------------------\n\nTITLE: Defining Discoverer Interface in Go for Prometheus Service Discovery\nDESCRIPTION: This code snippet defines the Discoverer interface that all service discovery mechanisms must implement in Prometheus. It includes the Run method that initializes the discovery process and sends target groups through a channel.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/discovery/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype Discoverer interface {\n\tRun(ctx context.Context, up chan<- []*targetgroup.Group)\n}\n```\n\n----------------------------------------\n\nTITLE: Using Batch Transactions for Performance Optimization\nDESCRIPTION: Example of using DB.Batch() to combine multiple updates into larger transactions for better performance when multiple goroutines are making changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nerr := db.Batch(func(tx *bolt.Tx) error {\n\t...\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic gRPC Status Error in Go\nDESCRIPTION: Demonstrates how to create a simple gRPC status error using the status package. This example returns a NotFound error with a custom message.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gogo/status/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nreturn status.Error(codes.NotFound, \"no such user\")\n```\n\n----------------------------------------\n\nTITLE: Installing Meta-Monitoring Stack with Helm\nDESCRIPTION: Helm commands to add the Grafana repo, update it, and install the meta-monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\nhelm install meta-monitoring grafana/meta-monitoring -n meta -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Tenant Retention Configuration\nDESCRIPTION: YAML configuration example showing how to set different retention periods for different tenants using overrides.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/bloom-filters.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\noverrides:\n    \"A\":\n        retention_period: 30d\n    \"B\":\n        retention_period: 30d\n        retention_stream:\n            - selector: '{namespace=\"prod\"}'\n              priority: 1\n              period: 40d\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingest Limits Frontend Client in YAML for Loki\nDESCRIPTION: YAML configuration block for ingest limits frontend client settings in Loki, including gRPC connection pool configuration and health check options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\ningest_limits_frontend_client:\n  # Configures client gRPC connections to limits service.\n  # The CLI flags prefix for this block configuration is:\n  # ingest-limits-frontend-client\n  [grpc_client_config: <grpc_client>]\n\n  # Configures client gRPC connections pool to limits service.\n  pool_config:\n    # How frequently to clean up clients for ingest-limits-frontend that have\n    # gone away.\n    # CLI flag: -ingest-limits-frontend-client.client-cleanup-period\n    [client_cleanup_period: <duration> | default = 15s]\n\n    # Run a health check on each ingest-limits-frontend client during periodic\n    # cleanup.\n    # CLI flag: -ingest-limits-frontend-client.health-check-ingest-limits\n    [health_check_ingest_limits: <boolean> | default = true]\n\n    # Timeout for the health check.\n    # CLI flag: -ingest-limits-frontend-client.remote-timeout\n    [remote_timeout: <duration> | default = 1s]\n```\n\n----------------------------------------\n\nTITLE: Configuring Queue Hierarchy Levels in Loki YAML\nDESCRIPTION: YAML configuration example showing how to set the maximum queue hierarchy levels for Loki's query scheduler, which controls the depth of the queue tree for query fairness.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/query-fairness/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nquery_scheduler:\n  max_queue_hierarchy_levels: 2 # defaults to 3\n```\n\n----------------------------------------\n\nTITLE: Using HashiCorp Vault for Static S3 Credentials (HCL)\nDESCRIPTION: HCL template to retrieve static S3 credentials from HashiCorp Vault. It uses Vault's template syntax to fetch access key and secret key from a specific path.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\ntemplate {\n  data = <<-EOH\n  {{ with secret \"secret/minio/loki\" }}\n  S3_ACCESS_KEY_ID={{ .Data.data.access_key }}\n  S3_SECRET_ACCESS_KEY={{ .Data.data.secret_key }}\n  {{- end }}\n  EOH\n\n  destination = \"secrets/s3.env\"\n  env         = true\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Log Level in Loki API\nDESCRIPTION: This endpoint allows viewing and changing the log level of a Loki process at runtime, useful for debugging during incidents.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nGET /log_level\nPOST /log_level\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying Loki Operator on Kind\nDESCRIPTION: Commands to build, push and deploy the Loki Operator container image to a kind cluster using a personal registry\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nmake oci-build oci-push deploy REGISTRY_BASE=$YOUR_REPO_ORG VERSION=latest\n```\n\n----------------------------------------\n\nTITLE: Implementing Consul KV Store Operations in Go\nDESCRIPTION: Demonstrates connecting to Consul, creating a client, and performing basic key-value operations using the Consul API. Shows how to put and get values from Consul's KV store.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/consul/api/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\tcapi \"github.com/hashicorp/consul/api\"\n)\n\nfunc main() {\n\t// Get a new client\n\tclient, err := capi.NewClient(capi.DefaultConfig())\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Get a handle to the KV API\n\tkv := client.KV()\n\n\t// PUT a new KV pair\n\tp := &capi.KVPair{Key: \"REDIS_MAXCLIENTS\", Value: []byte(\"1000\")}\n\t_, err = kv.Put(p, nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Lookup the pair\n\tpair, _, err := kv.Get(\"REDIS_MAXCLIENTS\", nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Printf(\"KV: %v %s\\n\", pair.Key, pair.Value)\n}\n```\n\n----------------------------------------\n\nTITLE: Basic JSON Output Structure Example\nDESCRIPTION: Example showing the JSON structure output from the pack stage, demonstrating how labels are embedded into the log line.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/pack.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"container\": \"myapp\",\n  \"pod\": \"pod-3223f\",\n  \"_entry\": \"original log message\"\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Metrics Changes in Loki\nDESCRIPTION: Shell command to compare metrics changes between versions using the diff-metrics.sh tool. The script identifies modifications in metric names and definitions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release/document-metrics-configurations-changes.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ OLD_VERSION=X.Y.Z ./tools/diff-metrics.sh\n```\n\n----------------------------------------\n\nTITLE: Loading Sprig FuncMap in Go Templates\nDESCRIPTION: Example showing how to import and initialize Sprig's function map with Go's template package. The function map must be set before loading the templates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/sprig/v3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  \"github.com/Masterminds/sprig/v3\"\n  \"html/template\"\n)\n\n// This example illustrates that the FuncMap *must* be set before the\n// templates themselves are loaded.\ntpl := template.Must(\n  template.New(\"base\").Funcs(sprig.FuncMap()).ParseGlob(\"*.html\")\n)\n```\n\n----------------------------------------\n\nTITLE: Basic HttpRouter Setup in Go\nDESCRIPTION: A simple example demonstrating how to initialize an HttpRouter, define route handlers for GET requests, and start an HTTP server. It shows both a simple index route and a route with a named parameter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/julienschmidt/httprouter/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n    \"log\"\n\n    \"github.com/julienschmidt/httprouter\"\n)\n\nfunc Index(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {\n    fmt.Fprint(w, \"Welcome!\\n\")\n}\n\nfunc Hello(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {\n    fmt.Fprintf(w, \"hello, %s!\\n\", ps.ByName(\"name\"))\n}\n\nfunc main() {\n    router := httprouter.New()\n    router.GET(\"/\", Index)\n    router.GET(\"/hello/:name\", Hello)\n\n    log.Fatal(http.ListenAndServe(\":8080\", router))\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Carnivorous Greenhouse with Docker Compose in Bash\nDESCRIPTION: This command starts the Carnivorous Greenhouse application using Docker Compose. It relies on the loki-fundamentals_loki docker network, so the observability stack must be started first.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/alloy/examples/alloy-otel-logs.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose -f loki-fundamentals/greenhouse/docker-compose-micro.yml up -d --build\n```\n\n----------------------------------------\n\nTITLE: Executing Series Query with k6-loki\nDESCRIPTION: Demonstrates how to query for series matching a specific pattern over a 10-minute window.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nexport default () => {\n  client.seriesQuery(`match[]={app=~\"loki-.*\"}`, \"10m\");\n}\n```\n\n----------------------------------------\n\nTITLE: Performing Read-Only Transactions in bbolt\nDESCRIPTION: Example of using DB.View() to start a read-only transaction which provides a consistent view of the database for retrieving data without the ability to make modifications.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nerr := db.View(func(tx *bolt.Tx) error {\n\t...\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Simplified Docker Log Parsing Configuration\nDESCRIPTION: These YAML snippets demonstrate simplified configurations for parsing Docker and CRI logs, which can be extended to extract additional labels as needed.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/labels.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n    - docker:\n\n# or\n\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n    - cri:\n\n# Extended example\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n    - docker:\n    - regex:\n        expr: '.*level=(?P<level>[a-zA-Z]+).*'\n        labels:\n          level:\n```\n\n----------------------------------------\n\nTITLE: Managing Promtail Service with Systemctl Commands\nDESCRIPTION: Bash commands for managing the Promtail service using systemctl, including reloading systemd configuration, enabling the service for automatic startup, and starting the service.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl daemon-reload\nsystemctl enable promtail.service\nsystemctl start promtail.service\n```\n\n----------------------------------------\n\nTITLE: Visualizing Loki Cluster Architecture with Mermaid Diagram\nDESCRIPTION: A mermaid diagram showing the architecture of the Loki cluster with multiple nodes, each containing UI Frontend, API Server, Proxy Handler, and ckit Node components connected to a reverse proxy.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TB\n    LB[Reverse Proxy /ui/]\n\n    subgraph Cluster[Loki Cluster]\n        subgraph Node1[Node 1]\n            UI1[UI Frontend]\n            API1[API Server]\n            PROXY1[Proxy Handler]\n            CKIT1[ckit Node]\n        end\n\n        subgraph Node2[Node 2]\n            UI2[UI Frontend]\n            API2[API Server]\n            PROXY2[Proxy Handler]\n            CKIT2[ckit Node]\n        end\n\n        subgraph Node3[Node 3]\n            UI3[UI Frontend]\n            API3[API Server]\n            PROXY3[Proxy Handler]\n            CKIT3[ckit Node]\n        end\n    end\n\n    LB --> Node1\n    LB --> Node2\n    LB --> Node3\n\n    CKIT1 --- CKIT2\n    CKIT2 --- CKIT3\n    CKIT3 --- CKIT1\n```\n\n----------------------------------------\n\nTITLE: Deploying Specific Loki Version with Nomad\nDESCRIPTION: Command to deploy a specific version of Loki by overriding the default version variable when running the Nomad job.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnomad job run -var=\"version=2.7.5\" job.nomad.hcl\n```\n\n----------------------------------------\n\nTITLE: Comparing JSON Documents in Go\nDESCRIPTION: Example demonstrating how to compare JSON documents for structural equality using the jsonpatch.Equal function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/evanphx/json-patch.v4/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\tjsonpatch \"github.com/evanphx/json-patch\"\n)\n\nfunc main() {\n\toriginal := []byte(`{\"name\": \"John\", \"age\": 24, \"height\": 3.21}`)\n\tsimilar := []byte(`\n\t\t{\n\t\t\t\"age\": 24,\n\t\t\t\"height\": 3.21,\n\t\t\t\"name\": \"John\"\n\t\t}\n\t`)\n\tdifferent := []byte(`{\"name\": \"Jane\", \"age\": 20, \"height\": 3.37}`)\n\n\tif jsonpatch.Equal(original, similar) {\n\t\tfmt.Println(`\"original\" is structurally equal to \"similar\"`)\n\t}\n\n\tif !jsonpatch.Equal(original, different) {\n\t\tfmt.Println(`\"original\" is _not_ structurally equal to \"different\"`)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Loki and Promtail Containers in Windows\nDESCRIPTION: Docker run commands for Windows environment with local path mounting\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/docker.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name loki -v <local-path>:/mnt/config -p 3100:3100 grafana/loki:3.4.1 --config.file=/mnt/config/loki-config.yaml\ndocker run -v <local-path>:/mnt/config -v /var/log:/var/log --link loki grafana/promtail:3.4.1 --config.file=/mnt/config/promtail-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Testing Logrus Log Messages\nDESCRIPTION: Shows how to use Logrus's built-in testing facilities to assert the presence of log messages in unit tests using the test hook.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nimport(\n  \"github.com/sirupsen/logrus\"\n  \"github.com/sirupsen/logrus/hooks/test\"\n  \"github.com/stretchr/testify/assert\"\n  \"testing\"\n)\n\nfunc TestSomething(t*testing.T){\n  logger, hook := test.NewNullLogger()\n  logger.Error(\"Helloerror\")\n\n  assert.Equal(t, 1, len(hook.Entries))\n  assert.Equal(t, logrus.ErrorLevel, hook.LastEntry().Level)\n  assert.Equal(t, \"Helloerror\", hook.LastEntry().Message)\n\n  hook.Reset()\n  assert.Nil(t, hook.LastEntry())\n}\n```\n\n----------------------------------------\n\nTITLE: Providing Consul KV Rules to Loki Ruler (HCL)\nDESCRIPTION: HCL template to provide Loki alert rules from Consul KV to the Loki ruler container. It uses the 'safeTree' function to retrieve and format the rules.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_9\n\nLANGUAGE: hcl\nCODE:\n```\ntemplate {\n  data = <<-EOF\n  {{- range safeTree \"configs/loki-rules\" }}\n  ---\n  {{ .Value | indent 2 }}\n  {{ end -}}\n  EOF\n\n  destination   = \"local/rules/fake/rules.yml\"\n  change_mode   = \"signal\"\n  change_signal = \"SIGINT\"\n}\n```\n\n----------------------------------------\n\nTITLE: Applying ANSI 16 Colors in Go with Lip Gloss\nDESCRIPTION: Shows how to use ANSI 16 color codes with Lip Gloss for terminal styling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nlipgloss.Color(\"5\")  // magenta\nlipgloss.Color(\"9\")  // red\nlipgloss.Color(\"12\") // light blue\n```\n\n----------------------------------------\n\nTITLE: Installing ADAL Package with Go\nDESCRIPTION: Command to install the Azure Active Directory authentication library for Go\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/Azure/go-autorest/autorest/adal\n```\n\n----------------------------------------\n\nTITLE: Running Loki with List Targets Flag in Bash\nDESCRIPTION: Command to run Loki Docker container and list all available targets for the specific Loki version.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/deployment-modes.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run docker.io/grafana/loki:3.2.1 -config.file=/etc/loki/local-config.yaml -list-targets\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespaces\nDESCRIPTION: Creates the meta and prod namespaces in Kubernetes. The meta namespace will host Loki, Grafana, and Alloy, while prod namespace will contain the sample application.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace meta && kubectl create namespace prod\n```\n\n----------------------------------------\n\nTITLE: Testing GCS Object Storage Access in Kubernetes\nDESCRIPTION: This snippet shows how to exec into a sidecar container in Kubernetes and test access to the GCS bucket using the Thanos tools command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nkubectl exec -it -n <namespace> <prometheus with sidecar pod name> -c <sidecar container name> -- /bin/sh\n```\n\nLANGUAGE: sh\nCODE:\n```\nthanos tools bucket ls --objstore.config=\"${OBJSTORE_CONFIG}\"\n```\n\n----------------------------------------\n\nTITLE: Managing io.ReadCloser with run.Group in Go\nDESCRIPTION: This snippet illustrates how to use run.Group with an io.ReadCloser. It sets up a scanner to read from the connection and adds it to the group, ensuring proper closure of the connection.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oklog/run/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar conn io.ReadCloser = ...\ng.Add(func() error {\n\ts := bufio.NewScanner(conn)\n\tfor s.Scan() {\n\t\tprintln(s.Text())\n\t}\n\treturn s.Err()\n}, func(error) {\n\tconn.Close()\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Rule Evaluation in YAML\nDESCRIPTION: This YAML configuration enables remote rule evaluation for the Loki ruler, specifying the evaluation mode and query frontend address.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/scalability.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nruler:\n  evaluation:\n    mode: remote\n    query_frontend:\n      address: dns:///<query-frontend-service>:<grpc-port>\n```\n\n----------------------------------------\n\nTITLE: Implementing Durable Queue Operations in Go\nDESCRIPTION: Demonstrates core queue operations including initialization, enqueuing, dequeuing, and error handling. Shows how to create custom item types, handle queue persistence, and work with blocked operations. Includes proper queue closure and type assertion patterns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/joncrlsn/dque/README.md#2025-04-19_snippet_0\n\nLANGUAGE: golang\nCODE:\n```\npackage dque_test\n\nimport (\n    \"log\"\n\n    \"github.com/joncrlsn/dque\"\n)\n\n// Item is what we'll be storing in the queue.  It can be any struct\n// as long as the fields you want stored are public.\ntype Item struct {\n    Name string\n    Id   int\n}\n\n// ItemBuilder creates a new item and returns a pointer to it.\n// This is used when we load a segment of the queue from disk.\nfunc ItemBuilder() interface{} {\n    return &Item{}\n}\n\nfunc main() {\n    ExampleDQue_main()\n}\n\n// ExampleQueue_main() show how the queue works\nfunc ExampleDQue_main() {\n    qName := \"item-queue\"\n    qDir := \"/tmp\"\n    segmentSize := 50\n\n    // Create a new queue with segment size of 50\n    q, err := dque.New(qName, qDir, segmentSize, ItemBuilder)\n    ...\n\n    // Add an item to the queue\n    err := q.Enqueue(&Item{\"Joe\", 1})\n    ...\n\n    // Properly close a queue\n    q.Close()\n\n    // You can reconsitute the queue from disk at any time\n    q, err = dque.Open(qName, qDir, segmentSize, ItemBuilder)\n    ...\n\n    // Peek at the next item in the queue\n    var iface interface{}\n    if iface, err = q.Peek(); err != nil {\n        if err != dque.ErrEmpty {\n            log.Fatal(\"Error peeking at item \", err)\n        }\n    }\n\n    // Dequeue the next item in the queue\n    if iface, err = q.Dequeue(); err != nil {\n        if err != dque.ErrEmpty {\n            log.Fatal(\"Error dequeuing item \", err)\n        }\n    }\n\n    // Dequeue the next item in the queue and block until one is available\n    if iface, err = q.DequeueBlock(); err != nil {\n        log.Fatal(\"Error dequeuing item \", err)\n    }\n\n    // Assert type of the response to an Item pointer so we can work with it\n    item, ok := iface.(*Item)\n    if !ok {\n        log.Fatal(\"Dequeued object is not an Item pointer\")\n    }\n\n    doSomething(item)\n}\n\nfunc doSomething(item *Item) {\n    log.Println(\"Dequeued\", item)\n}\n```\n\n----------------------------------------\n\nTITLE: Running Loki Operator Locally\nDESCRIPTION: Starts the Loki Operator locally on the machine, allowing it to recognize the LokiStack CRD instance and create Loki components.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake run\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-Detection in Loki Scrape Config\nDESCRIPTION: Demonstrates a simplified YAML configuration for Loki that uses automatic log format detection. This configuration shows how to enable auto-detection in the pipeline stages, which could automatically handle common formats like Docker and CRI logs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/labels.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n    - auto:\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Retry Behavior\nDESCRIPTION: Shows a YAML configuration for setting up Promtail's retry behavior when sending logs to Loki fails. This config specifies the backoff settings for retries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nclients:\n  - url: INGESTER-URL\n    backoff_config:\n      min_period: 100ms\n      max_period: 10s\n      max_retries: 10\n```\n\n----------------------------------------\n\nTITLE: Mixing and Reusing Colors in Go\nDESCRIPTION: Examples of creating and combining color objects with different attributes\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// Create a new color object\nc := color.New(color.FgCyan).Add(color.Underline)\nc.Println(\"Prints cyan text with an underline.\")\n\n// Or just add them to New()\nd := color.New(color.FgCyan, color.Bold)\nd.Printf(\"This prints bold cyan %s\\n\", \"too!.\")\n\n// Mix up foreground and background colors, create new mixes!\nred := color.New(color.FgRed)\n\nboldRed := red.Add(color.Bold)\nboldRed.Println(\"This will print text in bold red.\")\n\nwhiteBackground := red.Add(color.BgWhite)\nwhiteBackground.Println(\"Red text with white background.\")\n\n// Mix with RGB color codes\ncolor.RGB(255, 128, 0).AddBgRGB(0, 0, 0).Println(\"orange with black background\")\n\ncolor.BgRGB(255, 128, 0).AddRGB(255, 255, 255).Println(\"orange background with white foreground\")\n```\n\n----------------------------------------\n\nTITLE: Analyzing Label Series in Loki\nDESCRIPTION: Command to analyze and print all labels and their unique values, useful for identifying high-cardinality labels in the index.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nlogcli series '{cluster=\"vinson\"}' --analyze-labels\n```\n\n----------------------------------------\n\nTITLE: Executing Labels Query with k6-loki\nDESCRIPTION: Demonstrates how to query for all label names over a 10-minute time window.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport default () => {\n  client.labelsQuery(\"10m\");\n}\n```\n\n----------------------------------------\n\nTITLE: Tenant Stage Schema Definition in YAML\nDESCRIPTION: Defines the schema for configuring the tenant stage in Promtail, showing the available options for setting tenant IDs via label, source, or value.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/tenant.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntenant:\n  # Either label, source or value config option is required, but not all (they\n  # are mutually exclusive).\n\n  # Name from labels to whose value should be set as tenant ID.\n  [ label: <string> ]\n\n  # Name from extracted data to whose value should be set as tenant ID.\n  [ source: <string> ]\n\n  # Value to use to set the tenant ID when this stage is executed. Useful\n  # when this stage is included within a conditional pipeline with \"match\".\n  [ value: <string> ]\n```\n\n----------------------------------------\n\nTITLE: Basic Rate Limiting Configuration\nDESCRIPTION: Simple configuration example showing how to set up basic rate limiting with specified rate and burst values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/limit.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- limit:\n    rate: 10\n    burst: 10\n```\n\n----------------------------------------\n\nTITLE: Defining Development Mode FileSystem in Go with Build Tags\nDESCRIPTION: Example showing how to define a development mode filesystem that reads directly from disk, controlled by the 'dev' build tag.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\n//go:build dev\n\npackage data\n\nimport \"net/http\"\n\n// Assets contains project assets.\nvar Assets http.FileSystem = http.Dir(\"assets\")\n```\n\n----------------------------------------\n\nTITLE: Basic Struct Merging Example in Go\nDESCRIPTION: A complete example showing how to merge two structs, where zero-value fields in the destination are filled with values from the source struct.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/dario.cat/mergo/README.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"dario.cat/mergo\"\n)\n\ntype Foo struct {\n\tA string\n\tB int64\n}\n\nfunc main() {\n\tsrc := Foo{\n\t\tA: \"one\",\n\t\tB: 2,\n\t}\n\tdest := Foo{\n\t\tA: \"two\",\n\t}\n\tmergo.Merge(&dest, src)\n\tfmt.Println(dest)\n\t// Will print\n\t// {two 2}\n}\n```\n\n----------------------------------------\n\nTITLE: Inspecting Basic Loki Segment Information\nDESCRIPTION: Demonstrates how to use the segment-inspect tool to view basic information about a Loki WAL segment, including file size, series size, index size, stream count, tenant count, and timestamp information.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/segment-inspect/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ ./segment-inspect 01J2F010G82AWFGAEC3WGKC84P\n\nSegment file: 01J2F010G82AWFGAEC3WGKC84P\nCompressed Filesize: 2.0 MB\nSeries Size: 1.8 MB\nIndex Size: 255 kB\nStream count: 865\nTenant count: 7\nFrom: 2024-07-10 18:55:47.006697 UTC\nTo: 2024-07-10 18:55:51.454554 UTC\nDuration: 4.447857915s\n```\n\n----------------------------------------\n\nTITLE: Defining Component with Clock Interface in Go\nDESCRIPTION: Demonstrates how to define a Component struct with a Clock interface for testing purposes. This allows for easy mocking of time-related operations in tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/coder/quartz\"\n\ntype Component struct {\n\t...\n\n\t// for testing\n\tclock quartz.Clock\n}\n```\n\n----------------------------------------\n\nTITLE: Using Loki Volume Command\nDESCRIPTION: The volume command returns aggregate volumes for series matching the provided label selectors. It works with TSDB index format and supports time range specification, result limiting, and label-based aggregation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli volume [<flags>] <query>\n\nRun a volume query.\n\nThe \"volume\" command will take the provided label selector(s) and return aggregate volumes for series matching those volumes. This only works\nagainst Loki instances using the TSDB index format.\n\nBy default we look over the last hour of data; use --since to modify or provide specific start and end times with --from and --to\nrespectively.\n\nNotice that when using --from and --to then ensure to use RFC3339Nano time format, but without timezone at the end. The local timezone will be\nadded automatically or if using --timezone flag.\n\nExample:\n\n  logcli volume\n     --timezone=UTC\n     --from=\"2021-01-19T10:00:00Z\"\n     --to=\"2021-01-19T20:00:00Z\"\n     'my-query'\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n  -q, --quiet                 Suppress query metadata\n      --stats                 Show query statistics\n  -o, --output=default        Specify output mode [default, raw, jsonl]. raw suppresses log labels and timestamp.\n  -z, --timezone=Local        Specify the timezone to use when formatting output timestamps [Local, UTC]\n      --cpuprofile=\"\"         Specify the location for writing a CPU profile.\n      --memprofile=\"\"         Specify the location for writing a memory profile.\n      --stdin                 Take input logs from stdin\n      --addr=\"http://localhost:3100\"\n                              Server address. Can also be set using LOKI_ADDR env var.\n      --username=\"\"           Username for HTTP basic auth. Can also be set using LOKI_USERNAME env var.\n      --password=\"\"           Password for HTTP basic auth. Can also be set using LOKI_PASSWORD env var.\n      --ca-cert=\"\"            Path to the server Certificate Authority. Can also be set using LOKI_CA_CERT_PATH env var.\n      --tls-skip-verify       Server certificate TLS skip verify. Can also be set using LOKI_TLS_SKIP_VERIFY env var.\n      --cert=\"\"               Path to the client certificate. Can also be set using LOKI_CLIENT_CERT_PATH env var.\n      --key=\"\"                Path to the client certificate key. Can also be set using LOKI_CLIENT_KEY_PATH env var.\n      --org-id=\"\"             adds X-Scope-OrgID to API requests for representing tenant ID. Useful for requesting tenant data when bypassing\n                              an auth gateway. Can also be set using LOKI_ORG_ID env var.\n      --query-tags=\"\"         adds X-Query-Tags http header to API requests. This header value will be part of `metrics.go` statistics.\n                              Useful for tracking the query. Can also be set using LOKI_QUERY_TAGS env var.\n      --bearer-token=\"\"       adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN env var.\n      --bearer-token-file=\"\"  adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN_FILE env var.\n      --retries=0             How many times to retry each query when getting an error response from Loki. Can also be set using\n                              LOKI_CLIENT_RETRIES env var.\n      --min-backoff=0         Minimum backoff time between retries. Can also be set using LOKI_CLIENT_MIN_BACKOFF env var.\n      --max-backoff=0         Maximum backoff time between retries. Can also be set using LOKI_CLIENT_MAX_BACKOFF env var.\n      --auth-header=\"Authorization\"\n                              The authorization header used. Can also be set using LOKI_AUTH_HEADER env var.\n      --proxy-url=\"\"          The http or https proxy to use when making requests. Can also be set using LOKI_HTTP_PROXY_URL env var.\n      --compress              Request that Loki compress returned data in transit. Can also be set using LOKI_HTTP_COMPRESSION env var.\n      --since=1h              Lookback window.\n      --from=FROM             Start looking for logs at this absolute time (inclusive)\n      --to=TO                 Stop looking for logs at this absolute time (exclusive)\n      --limit=30              Limit on number of series to return volumes for.\n      --targetLabels=TARGETLABELS ...\n                              List of labels to aggregate results into.\n      --aggregateByLabels     Whether to aggregate results by label name only.\n\nArgs:\n  <query>  eg '{foo=\"bar\",baz=~\".*blip\"}'\n```\n\n----------------------------------------\n\nTITLE: Configuring LokiStack with Retention Settings in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure a LokiStack custom resource with retention settings. It includes global and per-tenant retention limits, as well as stream-specific rules with priorities and selectors.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/retention_support.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: loki.grafana.com/v1beta1\nkind: LokiStack\nmetadata:\n  name: lokistack-dev\nspec:\n  size: 1x.extra-small\n  storage:\n    secret:\n      name: test\n      type: s3\n  storageClassName: gp3-csi\n  retention: \n    deleteDelay: \n  limits:\n    global:\n      retentionLimits:\n        periodDays: 31\n        stream:\n          - selector:\n              name: namespace\n              type: equal\n              value: dev\n            priority: 1\n            periodDays: 1\n    tenants:\n      tenanta:\n        retentionLimits:\n          periodDays: 7\n          stream:\n            - selector:\n                name: namespace\n                type: equal\n                value: prod\n              priority: 2\n              periodDays: 14\n            - selector:\n                name: container\n                type: equal\n                value: loki\n              priority: 1\n              periodDays: 3\n      tenantb:\n        retentionLimits:\n          periodDays:\n          stream:\n            - selector:\n                name: container\n                type: equal\n                value: nginx\n              priority: 1\n              periodDays: 1\n```\n\n----------------------------------------\n\nTITLE: Analyzing Performance Profiles with Go Tool\nDESCRIPTION: Commands for analyzing CPU and memory profiles generated by the benchmark suite using the Go tool pprof.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/logql/bench/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngo tool pprof -http=:8080 cpu.prof\ngo tool pprof -http=:8080 mem.prof\n```\n\n----------------------------------------\n\nTITLE: Using go-hclog with Standard Library Logger in Go\nDESCRIPTION: Demonstrates how to wrap an hclog.Logger to use it with Go's standard library log.Logger interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nstdLogger := appLogger.StandardLogger(&hclog.StandardLoggerOptions{\n\tInferLevels: true,\n})\n// Printf() is provided by stdlib log.Logger interface, not hclog.Logger\nstdLogger.Printf(\"[DEBUG] %+v\", stdLogger)\n```\n\n----------------------------------------\n\nTITLE: Make Duration Parameter Required\nDESCRIPTION: Makes the 'Duration' parameter required in lease operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.parameters.LeaseDuration\n  transform: >\n    $.required = true;\n```\n\n----------------------------------------\n\nTITLE: LogQL Query Example with Trace ID\nDESCRIPTION: Example LogQL query demonstrating how to search for a specific trace ID across a production cluster for the past 24 hours.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/bloom-filters.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"prod\"} | traceID=\"3c0e3dcd33e7\"\n```\n\n----------------------------------------\n\nTITLE: Updating Labeled Timer Metric in Go\nDESCRIPTION: Updates the labeled timer metric with a specific action value and the time elapsed since the start of the action.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-metrics/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ncontainerActions.WithValues(\"create\").UpdateSince(start)\n```\n\n----------------------------------------\n\nTITLE: Implementing PROXY Protocol with HTTP Server in Go\nDESCRIPTION: Example code demonstrating how to integrate the PROXY protocol with a standard HTTP server. It wraps the TCP listener with a proxyproto.Listener that includes a timeout for reading the PROXY protocol header.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pires/go-proxyproto/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"net\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/pires/go-proxyproto\"\n)\n\nfunc main() {\n\tserver := http.Server{\n\t\tAddr: \":8080\",\n\t}\n\n\tln, err := net.Listen(\"tcp\", server.Addr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tproxyListener := &proxyproto.Listener{\n\t\tListener:          ln,\n\t\tReadHeaderTimeout: 10 * time.Second,\n\t}\n\tdefer proxyListener.Close()\n\n\tserver.Serve(proxyListener)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Colored Table with Merged Cells in Go\nDESCRIPTION: This example demonstrates creating a table with colored cells, merged cells, and custom header, footer, and column colors using the tablewriter package. It also shows how to set individual cell colors that take precedence over column colors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n\t[]string{\"Test1Merge\", \"HelloCol2 - 1\", \"HelloCol3 - 1\", \"HelloCol4 - 1\"},\n\t[]string{\"Test1Merge\", \"HelloCol2 - 2\", \"HelloCol3 - 2\", \"HelloCol4 - 2\"},\n\t[]string{\"Test1Merge\", \"HelloCol2 - 3\", \"HelloCol3 - 3\", \"HelloCol4 - 3\"},\n\t[]string{\"Test2Merge\", \"HelloCol2 - 4\", \"HelloCol3 - 4\", \"HelloCol4 - 4\"},\n\t[]string{\"Test2Merge\", \"HelloCol2 - 5\", \"HelloCol3 - 5\", \"HelloCol4 - 5\"},\n\t[]string{\"Test2Merge\", \"HelloCol2 - 6\", \"HelloCol3 - 6\", \"HelloCol4 - 6\"},\n\t[]string{\"Test2Merge\", \"HelloCol2 - 7\", \"HelloCol3 - 7\", \"HelloCol4 - 7\"},\n\t[]string{\"Test3Merge\", \"HelloCol2 - 8\", \"HelloCol3 - 8\", \"HelloCol4 - 8\"},\n\t[]string{\"Test3Merge\", \"HelloCol2 - 9\", \"HelloCol3 - 9\", \"HelloCol4 - 9\"},\n\t[]string{\"Test3Merge\", \"HelloCol2 - 10\", \"HelloCol3 -10\", \"HelloCol4 - 10\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Col1\", \"Col2\", \"Col3\", \"Col4\"})\ntable.SetFooter([]string{\"\", \"\", \"Footer3\", \"Footer4\"})\ntable.SetBorder(false)\n\ntable.SetHeaderColor(tablewriter.Colors{tablewriter.Bold, tablewriter.BgGreenColor},\n\ttablewriter.Colors{tablewriter.FgHiRedColor, tablewriter.Bold, tablewriter.BgBlackColor},\n\ttablewriter.Colors{tablewriter.BgRedColor, tablewriter.FgWhiteColor},\n\ttablewriter.Colors{tablewriter.BgCyanColor, tablewriter.FgWhiteColor})\n\ntable.SetColumnColor(tablewriter.Colors{tablewriter.Bold, tablewriter.FgHiBlackColor},\n\ttablewriter.Colors{tablewriter.Bold, tablewriter.FgHiRedColor},\n\ttablewriter.Colors{tablewriter.Bold, tablewriter.FgHiBlackColor},\n\ttablewriter.Colors{tablewriter.Bold, tablewriter.FgBlackColor})\n\ntable.SetFooterColor(tablewriter.Colors{}, tablewriter.Colors{},\n\ttablewriter.Colors{tablewriter.Bold},\n\ttablewriter.Colors{tablewriter.FgHiRedColor})\n\ncolorData1 := []string{\"TestCOLOR1Merge\", \"HelloCol2 - COLOR1\", \"HelloCol3 - COLOR1\", \"HelloCol4 - COLOR1\"}\ncolorData2 := []string{\"TestCOLOR2Merge\", \"HelloCol2 - COLOR2\", \"HelloCol3 - COLOR2\", \"HelloCol4 - COLOR2\"}\n\nfor i, row := range data {\n\tif i == 4 {\n\t\ttable.Rich(colorData1, []tablewriter.Colors{tablewriter.Colors{}, tablewriter.Colors{tablewriter.Normal, tablewriter.FgCyanColor}, tablewriter.Colors{tablewriter.Bold, tablewriter.FgWhiteColor}, tablewriter.Colors{}})\n\t\ttable.Rich(colorData2, []tablewriter.Colors{tablewriter.Colors{tablewriter.Normal, tablewriter.FgMagentaColor}, tablewriter.Colors{}, tablewriter.Colors{tablewriter.Bold, tablewriter.BgRedColor}, tablewriter.Colors{tablewriter.FgHiGreenColor, tablewriter.Italic, tablewriter.BgHiCyanColor}})\n\t}\n\ttable.Append(row)\n}\n\ntable.SetAutoMergeCells(true)\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Implementing OSC52 Clipboard Operations in Go\nDESCRIPTION: This example demonstrates how to use the go-osc52 library to perform various clipboard operations including copying to system clipboard, copying to primary clipboard (X11), querying the clipboard, clearing the clipboard, and using the fmt.Stringer interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aymanbagabas/go-osc52/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  \"os\"\n  \"fmt\"\n\n  \"github.com/aymanbagabas/go-osc52/v2\"\n)\n\nfunc main() {\n  s := \"Hello World!\"\n\n  // Copy `s` to system clipboard\n  osc52.New(s).WriteTo(os.Stderr)\n\n  // Copy `s` to primary clipboard (X11)\n  osc52.New(s).Primary().WriteTo(os.Stderr)\n\n  // Query the clipboard\n  osc52.Query().WriteTo(os.Stderr)\n\n  // Clear system clipboard\n  osc52.Clear().WriteTo(os.Stderr)\n\n  // Use the fmt.Stringer interface to copy `s` to system clipboard\n  fmt.Fprint(os.Stderr, osc52.New(s))\n\n  // Or to primary clipboard\n  fmt.Fprint(os.Stderr, osc52.New(s).Primary())\n}\n```\n\n----------------------------------------\n\nTITLE: GeoIP City Database Pipeline Configuration Example\nDESCRIPTION: Example configuration showing regex extraction of IP address followed by GeoIP lookup using the City database type.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/geoip.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^(?P<ip>\\S+) .*\"\n- geoip:\n    db: \"/path/to/GeoIP2-City.mmdb\"\n    source: \"ip\"\n    db_type: \"city\"\n```\n\n----------------------------------------\n\nTITLE: Exporting Google App Engine Error Logs with GCP Log Filter\nDESCRIPTION: A log filter query to export Google App Engine logs with severity level ERROR or higher. This filter targets the 'gae_app' resource type and filters by severity.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/gcplog/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nresource.type=\"gae_app\" AND\nseverity>=ERROR\n```\n\n----------------------------------------\n\nTITLE: Defining Ruler Configuration Structure in Kubernetes\nDESCRIPTION: RulerConfig CRD schema that defines the desired state and status of the Loki ruler component. Includes fields for metadata, spec, and status.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_27\n\nLANGUAGE: kubernetes\nCODE:\n```\nmetadata:\n  type: Kubernetes meta/v1.ObjectMeta\nspec:\n  type: RulerConfigSpec\nstatus:\n  type: RulerConfigStatus\n```\n\n----------------------------------------\n\nTITLE: Creating NewConfig Function in Go\nDESCRIPTION: Shows how to implement a newConfig function that sets default values and applies options to create a configured config struct.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// newConfig returns an appropriately configured config.\nfunc newConfig(options ...Option) config {\n\t// Set default values for config.\n\tconfig := config{/* [...] */}\n\tfor _, option := range options {\n\t\tconfig = option.apply(config)\n\t}\n\t// Perform any validation here.\n\treturn config\n}\n```\n\n----------------------------------------\n\nTITLE: Helm Command for Enabling Loki Tracing\nDESCRIPTION: Helm upgrade command to enable Jaeger tracing for Loki components\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/troubleshooting.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade --install loki loki/loki --set \"loki.tracing.enabled=true\"\n  --set \"read.extraEnv[0].name=JAEGER_AGENT_HOST\"    --set \"read.extraEnv[0].value=<JAEGER_AGENT_HOST>\"\n  --set \"write.extraEnv[0].name=JAEGER_AGENT_HOST\"   --set \"write.extraEnv[0].value=<JAEGER_AGENT_HOST>\"\n  --set \"backend.extraEnv[0].name=JAEGER_AGENT_HOST\" --set \"backend.extraEnv[0].value=<JAEGER_AGENT_HOST>\"\n  --set \"gateway.extraEnv[0].name=JAEGER_AGENT_HOST\" --set \"gateway.extraEnv[0].value=<JAEGER_AGENT_HOST>\"\n```\n\n----------------------------------------\n\nTITLE: Loading Rules for Self-managed Prometheus\nDESCRIPTION: Commands to copy and reload rules in a self-managed Prometheus instance.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/meta-monitoring/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# For Prometheus\ncp rules.yaml alerts.yaml /etc/prometheus/rules/\n# Then reload Prometheus configuration\ncurl -X POST http://prometheus:9090/-/reload\n```\n\n----------------------------------------\n\nTITLE: Configuring Logrotate with Rename-Create Method\nDESCRIPTION: Configuration example for logrotate using the recommended rename-create method for Apache2 logs, rotating weekly with 1GB max size.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/logrotation/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/log/apache2/*.log {\n        weekly\n        maxsize 1G\n        create\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Log Stream Series\nDESCRIPTION: Command to print all log streams matching a specific selector, showing label combinations for the query.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nlogcli series -q --match='{namespace=\"loki\",container_name=\"loki\"}'\n```\n\n----------------------------------------\n\nTITLE: Defining Schema for 'template' Stage in YAML\nDESCRIPTION: Shows the YAML schema for configuring the 'template' stage in a Promtail pipeline. It specifies the 'source' and 'template' fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntemplate:\n  # Name from extracted data to parse. If key in extract data doesn't exist, an\n  # entry for it will be created.\n  source: <string>\n\n  # Go template string to use. In additional to normal template\n  # functions, ToLower, ToUpper, Replace, Trim, TrimLeft, TrimRight,\n  # TrimPrefix, TrimSuffix, and TrimSpace are available as functions.\n  template: <string>\n```\n\n----------------------------------------\n\nTITLE: Nesting Traces in Go\nDESCRIPTION: Demonstrates how to create nested traces for hierarchical operations. This allows for measuring both the overall operation time and the time spent in specific sub-operations, with different thresholds for logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/utils/trace/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc doSomething() {\n    rootTrace := trace.New(\"rootOperation\")\n    defer rootTrace.LogIfLong(100 * time.Millisecond)\n    \n    func() {\n        nestedTrace := rootTrace.Nest(\"nested\", Field{Key: \"nestedFieldKey1\", Value: \"nestedFieldValue1\"})\n        defer nestedTrace.LogIfLong(50 * time.Millisecond)\n        // do nested operation\n    }()\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Route Variables\nDESCRIPTION: Example of accessing URL variables in request handlers using mux.Vars().\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc ArticlesCategoryHandler(w http.ResponseWriter, r *http.Request) {\n    vars := mux.Vars(r)\n    w.WriteHeader(http.StatusOK)\n    fmt.Fprintf(w, \"Category: %v\\n\", vars[\"category\"])\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Logstash Environment for Plugin Development\nDESCRIPTION: Commands to clone the Logstash repository, check out a specific version, and set up the environment variables and dependencies needed for plugin development.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:elastic/logstash.git\ncd logstash\ngit checkout tags/v7.16.1\nexport LOGSTASH_PATH=\"$(pwd)\"\nexport GEM_PATH=\"$LOGSTASH_PATH/vendor/bundle/jruby/2.5.0\"\nexport GEM_HOME=\"$LOGSTASH_PATH/vendor/bundle/jruby/2.5.0\"\n./gradlew assemble\ncd ..\nruby -S bundle config set --local path \"$LOGSTASH_PATH/vendor/bundle\"\nruby -S bundle install\nruby -S bundle exec rake vendor\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Keys in Bolt Database (Go)\nDESCRIPTION: Shows how to use a Cursor to iterate over keys in a Bolt database bucket. It demonstrates moving through the keys sequentially and printing key-value pairs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\ndb.View(func(tx *bolt.Tx) error {\n\t// Assume bucket exists and has keys\n\tb := tx.Bucket([]byte(\"MyBucket\"))\n\n\tc := b.Cursor()\n\n\tfor k, v := c.First(); k != nil; k, v = c.Next() {\n\t\tfmt.Printf(\"key=%s, value=%s\\n\", k, v)\n\t}\n\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Making HTTP Range Query with Actor Path in Loki\nDESCRIPTION: Example of a curl command that invokes the Loki HTTP endpoint for range queries, passing both the X-Scope-OrgID tenant identifier and the X-Loki-Actor-Path to control query fairness allocation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/query-fairness/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s http://localhost:3100/loki/api/v1/query_range?xxx \\\n    -H 'X-Scope-OrgID: grafana' \\\n    -H 'X-Loki-Actor-Path: joe'\n```\n\n----------------------------------------\n\nTITLE: Basic Flock Usage Example\nDESCRIPTION: Example demonstrating how to create a file lock, attempt to acquire it in a non-blocking way, and release it after use. The TryLock() method returns a boolean indicating if the lock was acquired and any potential error.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gofrs/flock/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/gofrs/flock\"\n\nfileLock := flock.New(\"/var/lock/go-lock.lock\")\n\nlocked, err := fileLock.TryLock()\n\nif err != nil {\n\t// handle locking error\n}\n\nif locked {\n\t// do work\n\tfileLock.Unlock()\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Docker Pipeline Stage in Promtail Configuration (YAML)\nDESCRIPTION: Configuration snippet showing how to add the docker pipeline stage to Promtail's scrape_configs when upgrading to Loki 2.2.0. This is necessary for scrape_configs that were previously missing pipeline_stages definitions but were relying on the default docker behavior.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n  - docker: {}\n```\n\n----------------------------------------\n\nTITLE: Label Count Validation Error Properties\nDESCRIPTION: Configuration and response properties for the max_label_names_per_series error that occurs when samples exceed the maximum allowed label count.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/request-validation-rate-limits.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                | Value             |\n|-------------------------|-------------------|\n| Enforced by             | `distributor`     |\n| Outcome                 | Request rejected  |\n| Retryable               | **No**            |\n| Sample discarded        | **Yes**           |\n| Configurable per tenant | Yes               |\n| HTTP status code        | `400 Bad Request` |\n```\n\n----------------------------------------\n\nTITLE: Marshaling and Unmarshaling YAML with Person Struct in Go\nDESCRIPTION: This snippet demonstrates how to marshal a Person struct to YAML and then unmarshal it back into a struct using the sigs.k8s.io/yaml package. It showcases the use of JSON struct tags for YAML field naming.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"sigs.k8s.io/yaml\"\n)\n\ntype Person struct {\n\tName string `json:\"name\"` // Affects YAML field names too.\n\tAge  int    `json:\"age\"`\n}\n\nfunc main() {\n\t// Marshal a Person struct to YAML.\n\tp := Person{\"John\", 30}\n\ty, err := yaml.Marshal(p)\n\tif err != nil {\n\t\tfmt.Printf(\"err: %v\\n\", err)\n\t\treturn\n\t}\n\tfmt.Println(string(y))\n\t/* Output:\n\tage: 30\n\tname: John\n\t*/\n\n\t// Unmarshal the YAML back into a Person struct.\n\tvar p2 Person\n\terr = yaml.Unmarshal(y, &p2)\n\tif err != nil {\n\t\tfmt.Printf(\"err: %v\\n\", err)\n\t\treturn\n\t}\n\tfmt.Println(p2)\n\t/* Output:\n\t{John 30}\n\t*/\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Filesystem Storage Client for Grafana Loki using YAML\nDESCRIPTION: This snippet shows the configuration for a filesystem storage client in Grafana Loki using Thanos-based object storage. It specifies the directory path for storing chunks.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/thanos-storage-configs.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    filesystem:\n      dir: /var/loki/chunks\n```\n\n----------------------------------------\n\nTITLE: Launching the Loki Overrides Exporter\nDESCRIPTION: Shell command to launch an instance of the overrides-exporter module in Loki with the runtime configuration file and necessary parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/overrides-exporter.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nloki -target=overrides-exporter -runtime-config.file=runtime.yaml -config.file=basic_schema_config.yaml -server.http-listen-port=8080\n```\n\n----------------------------------------\n\nTITLE: Enabling Logging for Azure Identity in Go\nDESCRIPTION: This code snippet demonstrates how to enable and configure logging for Azure Identity credentials to aid in debugging authentication issues. It sets up a listener to print log output to stdout and configures logging to include only azidentity credential logs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport azlog \"github.com/Azure/azure-sdk-for-go/sdk/azcore/log\"\n\n// print log output to stdout\nazlog.SetListener(func(event azlog.Event, s string) {\n    fmt.Println(s)\n})\n\n// include only azidentity credential logs\nazlog.SetEvents(azidentity.EventAuthentication)\n```\n\n----------------------------------------\n\nTITLE: Serializing Span Context for HTTP Request in Go\nDESCRIPTION: Demonstrates how to inject span context into HTTP headers for cross-service tracing. This is used when making outbound HTTP requests to propagate trace information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc makeSomeRequest(ctx context.Context) ... {\n    if span := opentracing.SpanFromContext(ctx); span != nil {\n        httpClient := &http.Client{}\n        httpReq, _ := http.NewRequest(\"GET\", \"http://myservice/\", nil)\n\n        // Transmit the span's TraceContext as HTTP headers on our\n        // outbound request.\n        opentracing.GlobalTracer().Inject(\n            span.Context(),\n            opentracing.HTTPHeaders,\n            opentracing.HTTPHeadersCarrier(httpReq.Header))\n\n        resp, err := httpClient.Do(httpReq)\n        ...\n    }\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Applying Basic Styles in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to create a new style with Lip Gloss, setting bold text, foreground and background colors, padding, and width.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/charmbracelet/lipgloss\"\n\nvar style = lipgloss.NewStyle().\n    Bold(true).\n    Foreground(lipgloss.Color(\"#FAFAFA\")).\n    Background(lipgloss.Color(\"#7D56F4\")).\n    PaddingTop(2).\n    PaddingLeft(4).\n    Width(22)\n\nfmt.Println(style.Render(\"Hello, kitty\"))\n```\n\n----------------------------------------\n\nTITLE: Testing Individual Function with Goleak in Go\nDESCRIPTION: Example showing how to verify no goroutine leaks exist at the end of a single test function using goleak.VerifyNone().\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/goleak/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc TestA(t *testing.T) {\n\tdefer goleak.VerifyNone(t)\n\n\t// test logic here.\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging for Azure SDK in Go\nDESCRIPTION: This snippet demonstrates how to enable and configure logging for the Azure SDK in Go, specifically for the azidentity module. It shows how to set a custom log listener and filter log events.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport azlog \"github.com/Azure/azure-sdk-for-go/sdk/azcore/log\"\n\n// print log output to stdout\nazlog.SetListener(func(event azlog.Event, s string) {\n    fmt.Println(s)\n})\n\n// include only azidentity credential logs\nazlog.SetEvents(azidentity.EventAuthentication)\n```\n\n----------------------------------------\n\nTITLE: Importing Doublestar Package in Go\nDESCRIPTION: Go code snippet showing how to import the doublestar package in your Go program.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/bmatcuk/doublestar/v4\"\n```\n\n----------------------------------------\n\nTITLE: Conditional Error Return\nDESCRIPTION: Shows how to use ErrorOrNil to return an error only if actual errors were accumulated, otherwise returning nil.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nvar result *multierror.Error\n\n// ... accumulate errors here\n\n// Return the `error` only if errors were added to the multierror, otherwise\n// return nil since there are no errors.\nreturn result.ErrorOrNil()\n```\n\n----------------------------------------\n\nTITLE: Configuring Registry Size in GopherLua\nDESCRIPTION: Example demonstrating how to configure the initial, maximum, and growth step size of the registry for a new Lua state to optimize memory usage.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState(lua.Options{\n   RegistrySize: 1024 * 20,         // this is the initial size of the registry\n   RegistryMaxSize: 1024 * 80,      // this is the maximum size that the registry can grow to. If set to `0` (the default) then the registry will not auto grow\n   RegistryGrowStep: 32,            // this is how much to step up the registry by each time it runs out of space. The default is `32`.\n})\ndefer L.Close()\n```\n\n----------------------------------------\n\nTITLE: Loki Compactor Configuration Warning for Retention\nDESCRIPTION: An admonition warning users to be careful when enabling retention in Loki, recommending object versioning in storage and providing guidance on configuring retention without enforcing it.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/logs-deletion.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< admonition type=\"warning\" >}}\nBe very careful when enabling retention. It is strongly recommended that you also enable versioning on your objects in object storage to allow you to recover from accidental misconfiguration of a retention setting. If you want to enable deletion but not not want to enforce retention, configure the `retention_period` setting with a value of `0s`.\n{{< /admonition >}}\n```\n\n----------------------------------------\n\nTITLE: Authorization Code Authentication in Go\nDESCRIPTION: Implementation of authorization code flow for web applications\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nspt, err := adal.NewServicePrincipalTokenFromAuthorizationCode(\n\t*oauthConfig,\n\tapplicationID,\n\tclientSecret,\n        authorizationCode,\n        redirectURI,\n\tresource,\n\tcallbacks...)\n\nerr  = spt.Refresh()\nif (err == nil) {\n    token := spt.Token\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Multi-step Trace in Go\nDESCRIPTION: Creates a trace with multiple steps, allowing for more granular latency measurement within an operation. Each step can include custom fields to provide additional context about that specific part of the operation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/utils/trace/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc doSomething() {\n    opTrace := trace.New(\"operation\")\n    defer opTrace.LogIfLong(100 * time.Millisecond)\n    // do step 1\n    opTrace.Step(\"step1\", Field{Key: \"stepFieldKey1\", Value: \"stepFieldValue1\"})\n    // do step 2\n    opTrace.Step(\"step2\")\n}\n```\n\n----------------------------------------\n\nTITLE: Bloom Shipper Configuration\nDESCRIPTION: Experimental bloom filter configuration including working directory, page size limits, download settings and caching parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_73\n\nLANGUAGE: yaml\nCODE:\n```\nbloom_shipper:\n  working_directory: <string> | default = \"/data/blooms\"\n  max_query_page_size: <int> | default = 64MiB\n  download_parallelism: <int> | default = 8\n  blocks_cache:\n    soft_limit: <int> | default = 32GiB\n    hard_limit: <int> | default = 64GiB\n    ttl: <duration> | default = 24h\n```\n\n----------------------------------------\n\nTITLE: Opening a File from Generated FileSystem in Go\nDESCRIPTION: Example of opening a file from the generated assets filesystem, showing how to use the standard http.FileSystem interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nfile, err := assets.Open(\"/some/file.txt\")\nif err != nil {\n\treturn err\n}\ndefer file.Close()\n```\n\n----------------------------------------\n\nTITLE: Installing or Upgrading Loki Deployment\nDESCRIPTION: Helm commands to install or upgrade the Loki deployment using the values.yaml file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-microservices/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values values.yaml loki grafana/loki\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --values values.yaml loki grafana/loki\n```\n\n----------------------------------------\n\nTITLE: LogCLI Configuration\nDESCRIPTION: Command to configure LogCLI by setting the Loki address environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport LOKI_ADDR=http://localhost:3100\n```\n\n----------------------------------------\n\nTITLE: Configuring IBM Cloud Object Storage for Loki in YAML\nDESCRIPTION: Defines configuration options for connecting to IBM Cloud Object Storage (COS) backend. It includes settings for endpoint, region, access keys, HTTP configuration, and retry behavior.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\n# Set this to `true` to force the request to use path-style addressing.\n# CLI flag: -<prefix>.cos.force-path-style\n[forcepathstyle: <boolean> | default = false]\n\n# Comma separated list of bucket names to evenly distribute chunks over.\n# CLI flag: -<prefix>.cos.buckets\n[bucketnames: <string> | default = \"\"]\n\n# COS Endpoint to connect to.\n# CLI flag: -<prefix>.cos.endpoint\n[endpoint: <string> | default = \"\"]\n\n# COS region to use.\n# CLI flag: -<prefix>.cos.region\n[region: <string> | default = \"\"]\n\n# COS HMAC Access Key ID.\n# CLI flag: -<prefix>.cos.access-key-id\n[access_key_id: <string> | default = \"\"]\n\n# COS HMAC Secret Access Key.\n# CLI flag: -<prefix>.cos.secret-access-key\n[secret_access_key: <string> | default = \"\"]\n\nhttp_config:\n  # The maximum amount of time an idle connection will be held open.\n  # CLI flag: -<prefix>.cos.http.idle-conn-timeout\n  [idle_conn_timeout: <duration> | default = 1m30s]\n\n  # If non-zero, specifies the amount of time to wait for a server's response\n  # headers after fully writing the request.\n  # CLI flag: -<prefix>.cos.http.response-header-timeout\n  [response_header_timeout: <duration> | default = 0s]\n\n# Configures back off when cos get Object.\nbackoff_config:\n  # Minimum backoff time when cos get Object.\n  # CLI flag: -<prefix>.cos.min-backoff\n  [min_period: <duration> | default = 100ms]\n\n  # Maximum backoff time when cos get Object.\n  # CLI flag: -<prefix>.cos.max-backoff\n  [max_period: <duration> | default = 3s]\n\n  # Maximum number of times to retry when cos get Object.\n  # CLI flag: -<prefix>.cos.max-retries\n  [max_retries: <int> | default = 5]\n\n# IAM API key to access COS.\n```\n\n----------------------------------------\n\nTITLE: GCS Token Authentication Configuration\nDESCRIPTION: YAML configuration for Google Cloud Storage using short-lived token authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  audience:   # The audience configured for Loki's k8s serviceacount\n  bucketname: # The GCS bucket name\n  key.json:   # The serviceacount json file for type external_account\n```\n\n----------------------------------------\n\nTITLE: Generating TLS Certificates with Vault PKI and Nomad Templates\nDESCRIPTION: HCL configuration for dynamically generating TLS certificates using Vault PKI engine and Nomad's template functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_8\n\nLANGUAGE: hcl\nCODE:\n```\n      dynamic \"template\" {\n        for_each = local.certs\n        content {\n          data = <<-EOH\n          {{- with secret \"pki/issue/internal\" \"ttl=10d\" \"common_name=loki-<component_name>.service.consul\" (env \"attr.unique.network.ip-address\" | printf \"ip_sans=%s\") -}}\n          {{ .Data.${template.value} }}\n          {{- end -}}\n          EOH\n\n          destination = \"secrets/certs/${template.key}.pem\"\n          change_mode = \"restart\"\n          splay       = \"5m\"\n        }\n      }\n```\n\n----------------------------------------\n\nTITLE: Opening a Subset of Lua Builtin Modules in Go\nDESCRIPTION: Shows how to selectively load only specific Lua standard libraries when initializing the Lua state. This is useful for security purposes to avoid enabling modules with access to local files or system calls.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n    L := lua.NewState(lua.Options{SkipOpenLibs: true})\n    defer L.Close()\n    for _, pair := range []struct {\n        n string\n        f lua.LGFunction\n    }{\n        {lua.LoadLibName, lua.OpenPackage}, // Must be first\n        {lua.BaseLibName, lua.OpenBase},\n        {lua.TabLibName, lua.OpenTable},\n    } {\n        if err := L.CallByParam(lua.P{\n            Fn:      L.NewFunction(pair.f),\n            NRet:    0,\n            Protect: true,\n        }, lua.LString(pair.n)); err != nil {\n            panic(err)\n        }\n    }\n    if err := L.DoFile(\"main.lua\"); err != nil {\n        panic(err)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Running Services in Loki API\nDESCRIPTION: The services endpoint returns a list of all running services and their current states, including New, Starting, Running, Stopping, Terminated, and Failed.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nGET /services\n```\n\n----------------------------------------\n\nTITLE: Complete LokiStack Configuration with OpenShift Data Foundation\nDESCRIPTION: Full YAML configuration for a LokiStack instance using OpenShift Data Foundation storage. This configuration specifies the storage secret, TLS configuration, and tenant mode for OpenShift logging.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: loki.grafana.com/v1\nkind: LokiStack\nmetadata:\n  name: logging-loki\n  namespace: openshift-logging\nspec:\n  storage:\n    secret:\n      name: lokistack-dev-odf\n      type: s3\n    tls:\n      caName: openshift-service-ca.crt\n  tenants:\n    mode: openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Testing Package-wide Goroutine Leaks in Go\nDESCRIPTION: Implementation of TestMain to verify no goroutine leaks exist across an entire test package using goleak.VerifyTestMain().\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/goleak/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc TestMain(m *testing.M) {\n\tgoleak.VerifyTestMain(m)\n}\n```\n\n----------------------------------------\n\nTITLE: Merging Structs with Pointer Overriding in Go\nDESCRIPTION: Demonstrates how to merge structs when dealing with pointer fields, using WithoutDereference option to override destination pointers with source pointers.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/dario.cat/mergo/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"dario.cat/mergo\"\n)\n\ntype Foo struct {\n\tA *string\n\tB int64\n}\n\nfunc main() {\n\tfirst := \"first\"\n\tsecond := \"second\"\n\tsrc := Foo{\n\t\tA: &first,\n\t\tB: 2,\n\t}\n\n\tdest := Foo{\n\t\tA: &second,\n\t\tB: 1,\n\t}\n\n\tmergo.Merge(&dest, src, mergo.WithOverride, mergo.WithoutDereference)\n}\n```\n\n----------------------------------------\n\nTITLE: Using Default Mode for CBOR Encoding and Decoding in Go\nDESCRIPTION: Demonstrates the default mode API for encoding and decoding CBOR data, including marshaling, unmarshaling, and creating encoders and decoders. It also shows new functions added in v2.7.0 and v2.5.0 for handling remaining bytes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// API matches encoding/json for Marshal, Unmarshal, Encode, Decode, etc.\nb, err = cbor.Marshal(v)        // encode v to []byte b\nerr = cbor.Unmarshal(b, &v)     // decode []byte b to v\ndecoder = cbor.NewDecoder(r)    // create decoder with io.Reader r\nerr = decoder.Decode(&v)        // decode a CBOR data item to v\n\n// v2.7.0 added MarshalToBuffer() and UserBufferEncMode interface.\nerr = cbor.MarshalToBuffer(v, b) // encode v to b instead of using built-in buf pool.\n\n// v2.5.0 added new functions that return remaining bytes.\n\n// UnmarshalFirst decodes first CBOR data item and returns remaining bytes.\nrest, err = cbor.UnmarshalFirst(b, &v)   // decode []byte b to v\n\n// DiagnoseFirst translates first CBOR data item to text and returns remaining bytes.\ntext, rest, err = cbor.DiagnoseFirst(b)  // decode []byte b to Diagnostic Notation text\n\n// NOTE: Unmarshal returns ExtraneousDataError if there are remaining bytes,\n// but new funcs UnmarshalFirst and DiagnoseFirst do not.\n```\n\n----------------------------------------\n\nTITLE: Rendering Styles in Go with Lip Gloss\nDESCRIPTION: Shows different ways to render styled text using Lip Gloss, including the Render method and Stringer interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\nstyle := lipgloss.NewStyle().Bold(true).SetString(\"Hello,\")\nfmt.Println(style.Render(\"kitty.\")) // Hello, kitty.\nfmt.Println(style.Render(\"puppy.\")) // Hello, puppy.\n\nvar style = lipgloss.NewStyle().SetString(\"你好，猫咪。\").Bold(true)\nfmt.Println(style) // 你好，猫咪。\n```\n\n----------------------------------------\n\nTITLE: Alternative Configuration for Docker Log Parsing\nDESCRIPTION: This YAML configuration shows an alternative approach to parsing Docker logs, combining multiple regex extractions into a single stage for improved performance.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/labels.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: system\n  pipeline_stages:\n    - json:\n        timestamp:\n          source: time\n          format: FIXME\n        labels:\n          stream:\n        output: log\n    - regex:\n        expr: '.*level=(?P<level>[a-zA-Z]+).*msg=(?P<message>[a-zA-Z]+).*'\n        labels:\n          level:\n          log:\n            source: message\n        output: message\n```\n\n----------------------------------------\n\nTITLE: Using Hierarchical Actor Paths for Query Fairness in Loki\nDESCRIPTION: Examples showing how to enqueue queries several levels deep in Loki's hierarchical scheduler queues by using the pipe delimiter in the X-Loki-Actor-Path header value.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/query-fairness/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s http://localhost:3100/loki/api/v1/query_range?xxx \\\n    -H 'X-Scope-OrgID: grafana' \\\n    -H 'X-Loki-Actor-Path: users|joe'\n\ncurl -s http://localhost:3100/loki/api/v1/query_range?xxx \\\n    -H 'X-Scope-OrgID: grafana' \\\n    -H 'X-Loki-Actor-Path: apps|logcli'\n```\n\n----------------------------------------\n\nTITLE: Loki Index Statistics API Response (JSON)\nDESCRIPTION: This snippet demonstrates the JSON response structure from the Loki index statistics API. It includes counts for streams, chunks, entries, and total bytes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"streams\": 100,\n  \"chunks\": 1000,\n  \"entries\": 5000,\n  \"bytes\": 100000\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Applying JSON Patches in Go\nDESCRIPTION: Example showing how to create and apply JSON patches using specific operations like replace and remove.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/evanphx/json-patch.v4/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\tjsonpatch \"github.com/evanphx/json-patch\"\n)\n\nfunc main() {\n\toriginal := []byte(`{\"name\": \"John\", \"age\": 24, \"height\": 3.21}`)\n\tpatchJSON := []byte(`[\n\t\t{\"op\": \"replace\", \"path\": \"/name\", \"value\": \"Jane\"},\n\t\t{\"op\": \"remove\", \"path\": \"/height\"}\n\t]`)\n\n\tpatch, err := jsonpatch.DecodePatch(patchJSON)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tmodified, err := patch.Apply(original)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Printf(\"Original document: %s\\n\", original)\n\tfmt.Printf(\"Modified document: %s\\n\", modified)\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Import Path for JWT Library v5.0.0 in Go\nDESCRIPTION: Shows the new import path for version 5.0.0 of the golang-jwt/jwt library. This change is necessary for users upgrading to the latest version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n\"github.com/golang-jwt/jwt/v5\"\n```\n\n----------------------------------------\n\nTITLE: Disabling and Enabling Colors in Go\nDESCRIPTION: Examples of programmatically controlling color output globally and for specific instances\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nvar flagNoColor = flag.Bool(\"no-color\", false, \"Disable color output\")\n\nif *flagNoColor {\n\tcolor.NoColor = true // disables colorized output\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ObjectStorageSecretSpec with CredentialMode in Go\nDESCRIPTION: This Go code extends the ObjectStorageSecretSpec structure to include the CredentialMode field, which allows users to specify or override the desired credential mode for object storage authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// ObjectStorageSecretSpec is a secret reference containing name only, no namespace.\ntype ObjectStorageSecretSpec struct {\n...\n    // CredentialMode can be used to set the desired credential mode for authenticating with the object storage.\n    // If this is not set, then the operator tries to infer the credential mode from the provided secret and its\n    // own configuration.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    CredentialMode CredentialMode `json:\"credentialMode,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Labeled Timer Metric in Go\nDESCRIPTION: Defines a new labeled timer metric for container actions. It specifies the metric name, description, and label key for different types of actions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-metrics/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncontainerActions = ns.NewLabeledTimer(\"container_actions\", \"The number of milliseconds it takes to process each container action\", \"action\")\n```\n\n----------------------------------------\n\nTITLE: GeoIP2 City Database Lookup Example in Go\nDESCRIPTION: A complete example showing how to open a GeoIP2 City database, look up an IP address, and retrieve geolocation information including city names, subdivisions, country data, time zone, and coordinates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oschwald/geoip2-golang/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net\"\n\n\t\"github.com/oschwald/geoip2-golang\"\n)\n\nfunc main() {\n\tdb, err := geoip2.Open(\"GeoIP2-City.mmdb\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer db.Close()\n\t// If you are using strings that may be invalid, check that ip is not nil\n\tip := net.ParseIP(\"81.2.69.142\")\n\trecord, err := db.City(ip)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Printf(\"Portuguese (BR) city name: %v\\n\", record.City.Names[\"pt-BR\"])\n\tif len(record.Subdivisions) > 0 {\n\t\tfmt.Printf(\"English subdivision name: %v\\n\", record.Subdivisions[0].Names[\"en\"])\n\t}\n\tfmt.Printf(\"Russian country name: %v\\n\", record.Country.Names[\"ru\"])\n\tfmt.Printf(\"ISO country code: %v\\n\", record.Country.IsoCode)\n\tfmt.Printf(\"Time zone: %v\\n\", record.Location.TimeZone)\n\tfmt.Printf(\"Coordinates: %v, %v\\n\", record.Location.Latitude, record.Location.Longitude)\n\t// Output:\n\t// Portuguese (BR) city name: Londres\n\t// English subdivision name: England\n\t// Russian country name: Великобритания\n\t// ISO country code: GB\n\t// Time zone: Europe/London\n\t// Coordinates: 51.5142, -0.0931\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Cumulative Arguments with Custom Values in Kingpin\nDESCRIPTION: Example of creating a custom Value type for handling IP address lists in Kingpin. Demonstrates how to consume multiple positional arguments by implementing the IsCumulative interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype ipList []net.IP\n\nfunc (i *ipList) Set(value string) error {\n  if ip := net.ParseIP(value); ip == nil {\n    return fmt.Errorf(\"'%s' is not an IP address\", value)\n  } else {\n    *i = append(*i, ip)\n    return nil\n  }\n}\n\nfunc (i *ipList) String() string {\n  return \"\"\n}\n\nfunc (i *ipList) IsCumulative() bool {\n  return true\n}\n\nfunc IPList(s Settings) (target *[]net.IP) {\n  target = new([]net.IP)\n  s.SetValue((*ipList)(target))\n  return\n}\n```\n\n----------------------------------------\n\nTITLE: LZ4 Compression/Decompression Example in Go\nDESCRIPTION: Example demonstrating how to compress and decompress a string using LZ4 with pipes and goroutines in Go. Shows basic usage of Writer and Reader implementations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pierrec/lz4/v4/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// Compress and uncompress an input string.\ns := \"hello world\"\nr := strings.NewReader(s)\n\n// The pipe will uncompress the data from the writer.\npr, pw := io.Pipe()\nzw := lz4.NewWriter(pw)\nzr := lz4.NewReader(pr)\n\ngo func() {\n\t// Compress the input string.\n\t_, _ = io.Copy(zw, r)\n\t_ = zw.Close() // Make sure the writer is closed\n\t_ = pw.Close() // Terminate the pipe\n}()\n\n_, _ = io.Copy(os.Stdout, zr)\n\n// Output:\n// hello world\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Chunk and Index Write Cache\nDESCRIPTION: This YAML configuration snippet shows how to configure the chunk and index write cache in Loki's configuration file. It specifies the Memcached host, service, and caching parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/caching.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nchunk_store_config:\n  chunk_cache_config:\n    memcached:\n      batch_size: 256\n      parallelism: 10\n    memcached_client:\n      host: <chunk cache memcached host>\n      service: <port name of memcached service>\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruler WAL Cleaner in YAML\nDESCRIPTION: YAML configuration for the ruler WAL cleaner period. This shows the proper configuration format after the CLI flag was renamed from ruler.wal-cleaer.period to ruler.wal-cleaner.period to fix a typo.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nruler:\n  wal_cleaner:\n    period: 5s\n```\n\n----------------------------------------\n\nTITLE: Defining Output Stage Schema in YAML\nDESCRIPTION: Specifies the schema for the 'output' stage in a Promtail pipeline configuration. The 'source' field indicates which extracted data to use for the log entry.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/output.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\noutput:\n  # Name from extracted data to use for the log entry.\n  source: <string>\n```\n\n----------------------------------------\n\nTITLE: Converting Objx Values to Native Go Types\nDESCRIPTION: Example of extracting a value as an integer from an objx.Map using the Int method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nm.Get(\"code\").Int()\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Initial UI Load HTTP Requests\nDESCRIPTION: HTTP requests made during the initial UI load, showing how the frontend loads and discovers available nodes in the Loki cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET /ui/\nGET /ui/api/v1/cluster/nodes\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Jaeger Exporter in Go\nDESCRIPTION: Example showing the configuration of the Jaeger exporter with the newly added option for maximum UDP packet size. This option helps prevent dropped span batches when they exceed the UDP packet size limit.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_30\n\nLANGUAGE: Go\nCODE:\n```\nimport \"go.opentelemetry.io/otel/exporters/jaeger\"\n\n// Configure Jaeger exporter with maximum packet size\nexporter, err := jaeger.New(\n    jaeger.WithAgentEndpoint(jaeger.WithAgentHost(\"localhost\"), jaeger.WithAgentPort(\"6831\")),\n    jaeger.WithMaxPacketSize(65000),  // Set maximum UDP packet size\n)\n```\n\n----------------------------------------\n\nTITLE: Passing Logger to Application Object in Go\nDESCRIPTION: Shows how to pass the initialized logger to an application object and start the application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\napp := createTheAppObject(logger)\napp.Run()\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Replica Loki Deployment in YAML\nDESCRIPTION: YAML configuration for deploying a single replica of Loki using the Helm chart. This setup includes Loki, Loki Canary, Loki Gateway, and MinIO for object storage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  commonConfig:\n    replication_factor: 1\n  schemaConfig:\n    configs:\n      - from: \"2024-04-01\"\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: loki_index_\n          period: 24h\n  pattern_ingester:\n      enabled: true\n  limits_config:\n    allow_structured_metadata: true\n    volume_enabled: true\n  ruler:\n    enable_api: true\n\nminio:\n  enabled: true\n      \ndeploymentMode: SingleBinary\n\nsingleBinary:\n  replicas: 1\n\n# Zero out replica counts of other deployment modes\nbackend:\n  replicas: 0\nread:\n  replicas: 0\nwrite:\n  replicas: 0\n\ningester:\n  replicas: 0\nquerier:\n  replicas: 0\nqueryFrontend:\n  replicas: 0\nqueryScheduler:\n  replicas: 0\ndistributor:\n  replicas: 0\ncompactor:\n  replicas: 0\nindexGateway:\n  replicas: 0\nbloomCompactor:\n  replicas: 0\nbloomGateway:\n  replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Implementing Digest Methods for xxHash in Go\nDESCRIPTION: This snippet defines the key methods for the Digest type, which implements hash.Hash64. It includes methods for writing byte slices and strings, as well as calculating the final hash value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/internal/xxhash/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc (*Digest) Write([]byte) (int, error)\nfunc (*Digest) WriteString(string) (int, error)\nfunc (*Digest) Sum64() uint64\n```\n\n----------------------------------------\n\nTITLE: Extracting Specific Error Types\nDESCRIPTION: Shows how to use errors.As to extract a specific error type from a multierror value, demonstrating integration with standard error handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// Assume err is a multierror value\nerr := somefunc()\n\n// We want to know if \"err\" has a \"RichErrorType\" in it and extract it.\nvar errRich RichErrorType\nif errors.As(err, &errRich) {\n\t// It has it, and now errRich is populated.\n}\n```\n\n----------------------------------------\n\nTITLE: Proposed Overlapping Blocks Design for Loki\nDESCRIPTION: ASCII diagram illustrating how blocks may have overlapping timestamps after the ordering constraint is removed, requiring more complex query handling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/2021-01-Ordering-Constraint-Removal.md#2025-04-19_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nFigure 3\n\nstart       end\nts1         ts3          ts0        ts2\n--------------           --------------\n|            |           |            |\n|            | --------> |            |\n|            |           |            |\n|            |           |            |\n--------------           --------------\n```\n\n----------------------------------------\n\nTITLE: Defining Core xxHash Functions in Go\nDESCRIPTION: This snippet shows the main API functions provided by the xxhash package. It includes functions for hashing byte slices and strings, as well as a Digest struct for incremental hashing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/internal/xxhash/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc Sum64(b []byte) uint64\nfunc Sum64String(s string) uint64\ntype Digest struct{ ... }\n    func New() *Digest\n```\n\n----------------------------------------\n\nTITLE: Configuring Histogram Metrics in Promtail\nDESCRIPTION: YAML configuration for defining a histogram metric in Promtail, including options for description, source, and buckets.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/metrics.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntype: Histogram\n[description: <string>]\n[prefix: <string>]\n[source: <string>]\n[max_idle_duration: <string>]\nconfig:\n  [value: <string>]\n  buckets:\n    - <int>\n```\n\n----------------------------------------\n\nTITLE: Customizing Table Formatting in Go Tablewriter\nDESCRIPTION: This example demonstrates how to customize table formatting using the tablewriter package. It shows how to set various options like NoWhiteSpace, TablePadding, and other formatting options to create a compact table layout.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n    {\"node1.example.com\", \"Ready\", \"compute\", \"1.11\"},\n    {\"node2.example.com\", \"Ready\", \"compute\", \"1.11\"},\n    {\"node3.example.com\", \"Ready\", \"compute\", \"1.11\"},\n    {\"node4.example.com\", \"NotReady\", \"compute\", \"1.11\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Name\", \"Status\", \"Role\", \"Version\"})\ntable.SetAutoWrapText(false)\ntable.SetAutoFormatHeaders(true)\ntable.SetHeaderAlignment(ALIGN_LEFT)\ntable.SetAlignment(ALIGN_LEFT)\ntable.SetCenterSeparator(\"\")\ntable.SetColumnSeparator(\"\")\ntable.SetRowSeparator(\"\")\ntable.SetHeaderLine(false)\ntable.SetBorder(false)\ntable.SetTablePadding(\"\\t\") // pad with tabs\ntable.SetNoWhiteSpace(true)\ntable.AppendBulk(data) // Add Bulk Data\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Azure AD App Registration with Secret\nDESCRIPTION: Azure CLI commands to register an application with a secret credential and create a service principal\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz ad app create \\\n   --display-name example-app \\\n   --homepage https://example-app/home \\\n   --identifier-uris https://example-app/app \\\n   --password secret\n```\n\n----------------------------------------\n\nTITLE: Building Fluent Bit Loki Output Plugin\nDESCRIPTION: Command to build the Fluent Bit output plugin library file for Loki. This creates the 'out_grafana_loki.so' file in the root directory of Loki source code.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluent-bit/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ make fluent-bit-plugin\n```\n\n----------------------------------------\n\nTITLE: Configuring Jaeger Client with Environment Variables in Go\nDESCRIPTION: Shows how to use the FromEnv() function to configure the Jaeger client using environment variables. This allows for easier configuration in containerized environments.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nconfig.FromEnv()\n```\n\n----------------------------------------\n\nTITLE: Initializing SugaredLogger in Go\nDESCRIPTION: Example showing how to use the SugaredLogger for contexts where performance is important but not critical. Demonstrates both structured and printf-style logging patterns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nlogger, _ := zap.NewProduction()\ndefer logger.Sync() // flushes buffer, if any\nsugar := logger.Sugar()\nsugar.Infow(\"failed to fetch URL\",\n  // Structured context as loosely typed key-value pairs.\n  \"url\", url,\n  \"attempt\", 3,\n  \"backoff\", time.Second,\n)\nsugar.Infof(\"Failed to fetch URL: %s\", url)\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Validation and Policy Rules in YAML\nDESCRIPTION: Example of policy-based label enforcement configuration that allows defining mandatory labels for different policies. This enables stream validation based on policy-specific label requirements.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_47\n\nLANGUAGE: yaml\nCODE:\n```\npolicy_enforced_labels: \n  policy1: \n    - label1 \n    - label2 \n  policy2: \n    - label3 \n    - label4\n  '*':\n    - label5\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry Collector OTLP HTTP Exporter Configuration\nDESCRIPTION: Configuration for the OpenTelemetry Collector's OTLP HTTP exporter to send logs to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nexporters:\n  otlphttp:\n    endpoint: http://<loki-addr>:3100/otlp\n```\n\n----------------------------------------\n\nTITLE: Writing Typed Numeric Columns to Parquet Buffer in Go\nDESCRIPTION: Example showing efficient writing of strongly typed numeric columns (int64 and float32) to a parquet GenericBuffer using type-specific writers. Includes length validation between columns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct { ID int64; Value float32 }\n\nfunc writeColumns(buffer *parquet.GenericBuffer[RowType], ids []int64, values []float32) error {\n    if len(ids) != len(values) {\n        return fmt.Errorf(\"number of ids and values mismatch: ids=%d values=%d\", len(ids), len(values))\n    }\n    columns := buffer.ColumnBuffers()\n    if err := columns[0].(parquet.Int64Writer).WriteInt64s(ids); err != nil {\n        return err\n    }\n    if err := columns[1].(parquet.FloatWriter).WriteFloats(values); err != nil {\n        return err\n    }\n    return nil\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Pointers to Base Types in Go\nDESCRIPTION: Shows the correct way to create and assign pointers to base types in Go using a separate variable declaration, which is needed when working with JSON serialization to distinguish between empty and null values.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nv := \"foo\"\ns := struct {\n  S *string\n}{ S: &v }\n```\n\n----------------------------------------\n\nTITLE: Installing Promtail via Helm\nDESCRIPTION: Commands and configuration for installing Promtail using Helm in a Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/installation.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  clients:\n    - url: http://loki-gateway/loki/api/v1/push\n      tenant_id: 1\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --values values.yaml --install promtail grafana/promtail\n```\n\n----------------------------------------\n\nTITLE: Unpacking OTEL_RESOURCE_ATTRIBUTES in Go Resource Detector\nDESCRIPTION: This Go code snippet shows how to include the WithFromEnv option when initializing the resource detector. This option allows the detector to unpack the OTEL_RESOURCE_ATTRIBUTES environment variable, incorporating the Kubernetes attributes set in the Pod spec.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/contrib/detectors/gcp/README.md#2025-04-19_snippet_2\n\nLANGUAGE: golang\nCODE:\n```\n// Detect your resources\nres, err := resource.New(ctx,\n    resource.WithDetectors(gcp.NewDetector()),\n    resource.WithTelemetrySDK(),\n    resource.WithFromEnv(), // unpacks OTEL_RESOURCE_ATTRIBUTES\n    // Add your own custom attributes to identify your application\n    resource.WithAttributes(\n        semconv.ServiceNameKey.String(\"my-application\"),\n        semconv.ServiceNamespaceKey.String(\"my-company-frontend-team\"),\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Expected JSON Response from Fluentd Logs Query\nDESCRIPTION: Sample JSON output expected when querying Loki for logs with the job label 'fluentd', showing a syslog entry processed by Fluentd.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"stream\": {\n      \"job\": \"fluentd\"\n    },\n    \"values\": [\n      [\n        \"1588336950379591919\",\n        \"log=\\\"May  1 14:42:30 ibuprofen avahi-daemon[859]: New relevant interface vethb503225.IPv6 for mDNS.\\\"\"\n      ],\n      ...\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Function to Open URL in Browser Window\nDESCRIPTION: The OpenURL function opens a new browser window pointing to the specified URL.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/browser/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc OpenURL(url string) error\n```\n\n----------------------------------------\n\nTITLE: Using Presets for CBOR Encoding Options in Go\nDESCRIPTION: Shows how to use preset encoding options for different CBOR serialization formats, including Core Deterministic Encoding, Preferred Unsorted Encoding, Canonical CBOR, and FIDO2 CTAP2 Canonical CBOR.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// EncOptions is a struct of encoder settings.\nfunc CoreDetEncOptions() EncOptions              // RFC 8949 Core Deterministic Encoding\nfunc PreferredUnsortedEncOptions() EncOptions    // RFC 8949 Preferred Serialization\nfunc CanonicalEncOptions() EncOptions            // RFC 7049 Canonical CBOR\nfunc CTAP2EncOptions() EncOptions                // FIDO2 CTAP2 Canonical CBOR\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Range and Limits in YAML\nDESCRIPTION: Shows the deprecated and new location for split_queries_by_interval configuration in Loki 2.5.0\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nquery_range:\n  split_queries_by_interval: 10m\n\nlimits_config:\n  split_queries_by_interval: 10m\n```\n\n----------------------------------------\n\nTITLE: Customized Progress Bar Configuration in Go\nDESCRIPTION: Advanced example showing various customization options including colors, width, description, and theme settings for the progress bar.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/schollz/progressbar/v3/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nbar := progressbar.NewOptions(1000,\n    progressbar.OptionSetWriter(ansi.NewAnsiStdout()),\n    progressbar.OptionEnableColorCodes(true),\n    progressbar.OptionShowBytes(true),\n    progressbar.OptionSetWidth(15),\n    progressbar.OptionSetDescription(\"[cyan][1/3][reset] Writing moshable file...\"),\n    progressbar.OptionSetTheme(progressbar.Theme{\n        Saucer:        \"[green]=[reset]\",\n        SaucerHead:    \"[green]>[reset]\",\n        SaucerPadding: \" \",\n        BarStart:      \"[\",\n        BarEnd:        \"]\",\n    }))\nfor i := 0; i < 1000; i++ {\n    bar.Add(1)\n    time.Sleep(5 * time.Millisecond)\n}\n```\n\n----------------------------------------\n\nTITLE: Converting to Linear RGB in Go\nDESCRIPTION: This snippet shows how to convert a color to linear RGB using the go-colorful library. It demonstrates the fast and almost precise method for the transformation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nr, g, b := colorful.Hex(\"#FF0000\").FastLinearRgb()\n```\n\n----------------------------------------\n\nTITLE: Running Fluent Bit with Loki Plugin Locally\nDESCRIPTION: This command runs Fluent Bit locally with the Loki output plugin, specifying the path to the plugin library and a configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nfluent-bit -e /path/to/built/out_grafana_loki.so -c fluent-bit.conf\n```\n\n----------------------------------------\n\nTITLE: Setting Dialer Name in Context for Outbound Connections in Go\nDESCRIPTION: This snippet shows how to set a custom dialer name for a specific HTTP request using context. It uses the ctxhttp package to make an HTTP GET request with the custom dialer name.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mwitkow/go-conntrack/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncallCtx := conntrack.DialNameToContext(parentCtx, \"google\")\nctxhttp.Get(callCtx, http.DefaultClient, \"https://www.google.com\")\n```\n\n----------------------------------------\n\nTITLE: Example Loki Gateway Service Output\nDESCRIPTION: Sample console output showing the Loki Gateway service with its external IP address that will be used for writing to and querying Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_17\n\nLANGUAGE: console\nCODE:\n```\n  NAME                             TYPE           CLUSTER-IP       EXTERNAL-IP                                                               PORT(S)              AGE\nloki-gateway                     LoadBalancer   10.100.201.74    12345678975675456-1433434453245433545656563.eu-west-2.elb.amazonaws.com   80:30707/TCP         46m\n```\n\n----------------------------------------\n\nTITLE: Configuring Thanos Storage in Common Section\nDESCRIPTION: Alternative configuration approach using the common storage section for Thanos storage client settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n   use_thanos_objstore: true # enable the new storage clients\ncommon:\n  storage:\n    object_store:\n      gcs:\n        bucket_name: \"example-bucket\"\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: Adds the Grafana Helm repository to the local Helm configuration and updates the repository cache.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts && helm repo update\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Scheduler Pod Placement Logs\nDESCRIPTION: Scheduler logs showing attempts to place a Loki querier pod (querier-burst-6b5f6db455-5zvkm) across different nodes in a GKE cluster. Common failure reasons include mismatched node selectors, insufficient CPU/memory, and taint tolerations.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_7\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.964368       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-dhh8\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.964342       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\n```\n\n----------------------------------------\n\nTITLE: Randomizing Stream Count for Loki Log Generation\nDESCRIPTION: This snippet shows how to randomize the number of streams per batch when pushing logs to Loki, creating a more realistic testing scenario. It uses a helper function to generate a random integer for the stream count.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/log-generation.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport default () => {\n   let streams = randomInt(2, 8);\n   client.pushParameterized(streams, 500 * KB, 1 * MB);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Ruler Alertmanager Integration in YAML\nDESCRIPTION: Specifies Alertmanager URLs, discovery options, and related settings for the Loki ruler to send notifications. Includes configuration for Alertmanager client authentication and TLS.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_60\n\nLANGUAGE: yaml\nCODE:\n```\n[alertmanager_url: <string> | default = \"\"]\n[enable_alertmanager_discovery: <boolean> | default = false]\n[alertmanager_refresh_interval: <duration> | default = 1m]\n[enable_alertmanager_v2: <boolean> | default = true]\n[alert_relabel_configs: <relabel_config...>]\n[notification_queue_capacity: <int> | default = 10000]\n[notification_timeout: <duration> | default = 10s]\n\nalertmanager_client:\n  [<tls_config>]\n  [basic_auth_username: <string> | default = \"\"]\n  [basic_auth_password: <string> | default = \"\"]\n  [type: <string> | default = \"Bearer\"]\n  [credentials: <string> | default = \"\"]\n  [credentials_file: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Identifying a Language by Filename in Go\nDESCRIPTION: Code snippet demonstrating how to detect a programming language from a filename using Chroma's lexers.Match function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nlexer := lexers.Match(\"foo.go\")\n```\n\n----------------------------------------\n\nTITLE: Initializing HTTP DefaultTransport with IE Proxy Function in Go\nDESCRIPTION: This snippet demonstrates how to set up the default HTTP transport to use the proxy function obtained from ieproxy. It uses the GetProxyFunc() method to get a proxy function compatible with net/http.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-ieproxy/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc init() {\n\thttp.DefaultTransport.(*http.Transport).Proxy = ieproxy.GetProxyFunc()\n}\n```\n\n----------------------------------------\n\nTITLE: Using User-Specified Buffer for CBOR Encoding in Go\nDESCRIPTION: Shows how to use a user-specified buffer for CBOR encoding instead of the built-in buffer pool, introduced in v2.7.0. This feature extends the EncMode interface with MarshalToBuffer() method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nem, err := myEncOptions.UserBufferEncMode() // create UserBufferEncMode mode\n\nvar buf bytes.Buffer\nerr = em.MarshalToBuffer(v, &buf) // encode v to provided buf\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Messagediff in Go\nDESCRIPTION: Demonstrates the basic usage of messagediff library to compare two structs and get their differences. Shows how to use PrettyDiff function to get a human-readable diff output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/d4l3k/messagediff/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"gopkg.in/d4l3k/messagediff.v1\"\n\ntype someStruct struct {\n    A, b int\n    C []int\n}\n\nfunc main() {\n    a := someStruct{1, 2, []int{1}}\n    b := someStruct{1, 3, []int{1, 2}}\n    diff, equal := messagediff.PrettyDiff(a, b)\n    /*\n        diff =\n        `added: .C[1] = 2\n        modified: .b = 3`\n\n        equal = false\n    */\n}\n```\n\n----------------------------------------\n\nTITLE: GeoIP Labelallow Pipeline Configuration\nDESCRIPTION: Example showing how to filter GeoIP labels using the labelallow stage to keep only specific geographical information.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/geoip.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^(?P<ip>\\S+) .*\"\n- geoip:\n    db: \"/path/to/GeoCity.mmdb\"\n    source: \"ip\"\n    db_type: \"city\"\n- labelallow:\n  - geoip_city_name\n  - geoip_country_name\n  - geoip_location_latitude\n  - geoip_location_longitude\n```\n\n----------------------------------------\n\nTITLE: Setting Table Caption in Go Tablewriter\nDESCRIPTION: This example shows how to set a caption for a table using the tablewriter package. The caption text wraps with the total width of the rendered table.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n    []string{\"A\", \"The Good\", \"500\"},\n    []string{\"B\", \"The Very very Bad Man\", \"288\"},\n    []string{\"C\", \"The Ugly\", \"120\"},\n    []string{\"D\", \"The Gopher\", \"800\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Name\", \"Sign\", \"Rating\"})\ntable.SetCaption(true, \"Movie ratings.\")\n\nfor _, v := range data {\n    table.Append(v)\n}\ntable.Render() // Send output\n```\n\n----------------------------------------\n\nTITLE: Connecting to Redis via URL in Go-Redis\nDESCRIPTION: Demonstrates how to connect to Redis using a connection URI that follows the Redis URI specification. This approach simplifies configuration by encoding connection parameters in a single string.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/redis/go-redis/v9\"\n)\n\nfunc ExampleClient() *redis.Client {\n    url := \"redis://user:password@localhost:6379/0?protocol=3\"\n    opts, err := redis.ParseURL(url)\n    if err != nil {\n        panic(err)\n    }\n\n    return redis.NewClient(opts)\n}\n\n```\n\n----------------------------------------\n\nTITLE: Sorting Rows with parquet.GenericBuffer in Go\nDESCRIPTION: Demonstrates how to use parquet.GenericBuffer to sort rows before writing them to a parquet file. The example shows creating a buffer with sorting configuration, adding rows, sorting them, and writing the sorted result to a file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct { FirstName, LastName string }\n\nbuffer := parquet.NewGenericBuffer[RowType](\n    parquet.SortingRowGroupConfig(\n        parquet.SortingColumns(\n            parquet.Ascending(\"LastName\"),\n            parquet.Ascending(\"FistName\"),\n        ),\n    ),\n)\n\nbuffer.Write([]RowType{\n    {FirstName: \"Luke\", LastName: \"Skywalker\"},\n    {FirstName: \"Han\", LastName: \"Solo\"},\n    {FirstName: \"Anakin\", LastName: \"Skywalker\"},\n})\n\nsort.Sort(buffer)\n\nwriter := parquet.NewGenericWriter[RowType](output)\n_, err := parquet.CopyRows(writer, buffer.Rows())\nif err != nil {\n    ...\n}\nif err := writer.Close(); err != nil {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Running Bigtable Integration Tests Against Production in Go\nDESCRIPTION: Command to run Bigtable integration tests against a production environment instead of the default emulator. Requires specifying project ID, cluster name, and instance name flags.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/bigtable/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo test -test.run=\"TestIntegration_*\" -v \\\n    -it.use-prod \\\n    -it.project=\"your-project-id\" \\\n    -it.cluster=\"your-test-cluster\" \\\n    -it.instance=\"your-test-instance\"\n```\n\n----------------------------------------\n\nTITLE: Using ANSI 256 Colors in Go with Lip Gloss\nDESCRIPTION: Demonstrates the application of ANSI 256 color codes for more diverse color options in terminal styling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nlipgloss.Color(\"86\")  // aqua\nlipgloss.Color(\"201\") // hot pink\nlipgloss.Color(\"202\") // orange\n```\n\n----------------------------------------\n\nTITLE: Handling Unidentified Languages in Go\nDESCRIPTION: Code showing how to handle cases where a language cannot be identified by using a fallback lexer.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nif lexer == nil {\n  lexer = lexers.Fallback\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Kingpin Subcommands in Go\nDESCRIPTION: Example of how to define nested subcommands in Kingpin with separate flags and positional arguments per subcommand, and how to handle command parsing in the main function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nvar (\n  deleteCommand     = kingpin.Command(\"delete\", \"Delete an object.\")\n  deleteUserCommand = deleteCommand.Command(\"user\", \"Delete a user.\")\n  deleteUserUIDFlag = deleteUserCommand.Flag(\"uid\", \"Delete user by UID rather than username.\")\n  deleteUserUsername = deleteUserCommand.Arg(\"username\", \"Username to delete.\")\n  deletePostCommand = deleteCommand.Command(\"post\", \"Delete a post.\")\n)\n\nfunc main() {\n  switch kingpin.Parse() {\n  case deleteUserCommand.FullCommand():\n  case deletePostCommand.FullCommand():\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Encoding Nested Go Struct to CBOR Using Struct Tags\nDESCRIPTION: Demonstrates how to use struct tags to reduce the encoded size of structs in CBOR. The example shows encoding a 3-level nested Go struct to 1 byte CBOR, compared to 18 bytes in JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n// Example encoding nested struct (with omitempty tag)\n// - encoding/json:  18 byte JSON\n// - fxamacker/cbor:  1 byte CBOR\npackage main\n\nimport (\n\t\"encoding/hex\"\n\t\"encoding/json\"\n\t\"fmt\"\n\n\t\"github.com/fxamacker/cbor/v2\"\n)\n\ntype GrandChild struct {\n\tQuux int `json:\",omitempty\"`\n}\n\ntype Child struct {\n\tBaz int        `json:\",omitempty\"`\n\tQux GrandChild `json:\",omitempty\"`\n}\n\ntype Parent struct {\n\tFoo Child `json:\",omitempty\"`\n\tBar int   `json:\",omitempty\"`\n}\n\nfunc cb() {\n\tresults, _ := cbor.Marshal(Parent{})\n\tfmt.Println(\"hex(CBOR): \" + hex.EncodeToString(results))\n\n\ttext, _ := cbor.Diagnose(results) // Diagnostic Notation\n\tfmt.Println(\"DN: \" + text)\n}\n\nfunc js() {\n\tresults, _ := json.Marshal(Parent{})\n\tfmt.Println(\"hex(JSON): \" + hex.EncodeToString(results))\n\n\ttext := string(results) // JSON\n\tfmt.Println(\"JSON: \" + text)\n}\n\nfunc main() {\n\tcb()\n\tfmt.Println(\"-------------\")\n\tjs()\n}\n```\n\n----------------------------------------\n\nTITLE: Time-based Drop Configuration\nDESCRIPTION: Example showing how to drop old log lines based on their timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n     time:\n     msg:\n- timestamp:\n    source: time\n    format: RFC3339\n- drop:\n    older_than: 24h\n    drop_counter_reason: \"line_too_old\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging for Stream Sharding in Loki\nDESCRIPTION: YAML configuration to enable both automatic stream sharding and debug logging for troubleshooting. Note that enabling logging may impact ingestion performance.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/automatic-stream-sharding.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  shard_streams:\n    enabled: true\n    logging_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring File-based Service Discovery in JSON for Loki\nDESCRIPTION: This JSON structure defines the format for file-based service discovery in Loki. It specifies targets and labels, including file paths and additional custom labels for log streams.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_39\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"targets\": [ \"localhost\" ],\n    \"labels\": {\n      \"__path__\": \"<string>\", ...\n      \"<labelname>\": \"<labelvalue>\", ...\n    }\n  },\n  ...\n]\n```\n\n----------------------------------------\n\nTITLE: Deploying Grafana with Helm\nDESCRIPTION: Installs Grafana using Helm with custom values including datasource configuration for Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values grafana-values.yml grafana grafana/grafana --namespace meta\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndatasources:\n  datasources.yaml:\n        apiVersion: 1\n        datasources:\n        - name: Loki\n          type: loki\n          access: proxy\n          orgId: 1\n          url: http://loki-gateway.meta.svc.cluster.local:80\n          basicAuth: false\n          isDefault: false\n          version: 1\n          editable: false\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Swift HTTP Settings in Loki\nDESCRIPTION: HTTP configuration settings for Swift storage, including TLS certificate path. This snippet shows how to configure TLS certificate validation for Swift HTTP connections.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_75\n\nLANGUAGE: yaml\nCODE:\n```\nhttp:\n  # Path to the CA certificates to validate server certificate against. If not\n  # set, the host's root CA certificates are used.\n  # CLI flag: -<prefix>.swift.http.tls-ca-path\n  [tls_ca_path: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Metrics Memory Usage Test Program in Go\nDESCRIPTION: A Go program used to benchmark memory usage of the metrics package. It initializes a new metrics registry and then sleeps for 600 seconds to allow memory measurements to be taken.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/memory.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"metrics\"\n\t\"time\"\n)\n\nfunc main() {\n\tfmt.Sprintf(\"foo\")\n\tmetrics.NewRegistry()\n\ttime.Sleep(600e9)\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Model for Bubble Tea Application\nDESCRIPTION: Creates and returns the initial model for the application, setting up the initial state with a list of choices and an empty selection map.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc initialModel() model {\n\treturn model{\n\t\t// Our to-do list is a grocery list\n\t\tchoices:  []string{\"Buy carrots\", \"Buy celery\", \"Buy kohlrabi\"},\n\n\t\t// A map which indicates which choices are selected. We're using\n\t\t// the  map like a mathematical set. The keys refer to the indexes\n\t\t// of the `choices` slice, above.\n\t\tselected: make(map[int]struct{}),\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Deprecating only a flag's shorthand\nDESCRIPTION: Demonstrates deprecating just the shorthand form of a flag. The long form remains available while the shorthand is hidden from help text and triggers a warning when used.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n// deprecate a flag shorthand by specifying its flag name and a usage message\nflags.MarkShorthandDeprecated(\"noshorthandflag\", \"please use --noshorthandflag only\")\n```\n\n----------------------------------------\n\nTITLE: Metric API Usage - OpenTelemetry Go SDK\nDESCRIPTION: Example of using the updated global MeterProvider functions in the otel package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\nMeter() // Get metric.Meter from global provider\nGetMeterProvider() // Get global metric.MeterProvider\nSetMeterProvider() // Set global metric.MeterProvider\n```\n\n----------------------------------------\n\nTITLE: Using Afero's MemMapFs Backend in Go\nDESCRIPTION: This snippet demonstrates how to use Afero's MemMapFs backend, which provides a fully atomic memory-backed filesystem.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nmm := afero.NewMemMapFs()\nmm.MkdirAll(\"src/a\", 0755)\n```\n\n----------------------------------------\n\nTITLE: Using Decimal Library for Financial Calculations in Go\nDESCRIPTION: This example demonstrates the usage of the shopspring/decimal library for precise financial calculations. It calculates the subtotal, pre-tax amount, taxes, and total for a purchase with a given price, quantity, fee, and tax rate. The example showcases basic operations like multiplication, addition, subtraction, and division with decimal values.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shopspring/decimal/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/shopspring/decimal\"\n)\n\nfunc main() {\n\tprice, err := decimal.NewFromString(\"136.02\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tquantity := decimal.NewFromInt(3)\n\n\tfee, _ := decimal.NewFromString(\".035\")\n\ttaxRate, _ := decimal.NewFromString(\".08875\")\n\n\tsubtotal := price.Mul(quantity)\n\n\tpreTax := subtotal.Mul(fee.Add(decimal.NewFromFloat(1)))\n\n\ttotal := preTax.Mul(taxRate.Add(decimal.NewFromFloat(1)))\n\n\tfmt.Println(\"Subtotal:\", subtotal)                      // Subtotal: 408.06\n\tfmt.Println(\"Pre-tax:\", preTax)                         // Pre-tax: 422.3421\n\tfmt.Println(\"Taxes:\", total.Sub(preTax))                // Taxes: 37.482861375\n\tfmt.Println(\"Total:\", total)                            // Total: 459.824961375\n\tfmt.Println(\"Tax rate:\", total.Sub(preTax).Div(preTax)) // Tax rate: 0.08875\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Function to Call from Lua in Go\nDESCRIPTION: Demonstrates how to create a Go function that can be called from Lua code. This example implements a 'Double' function that takes a number, multiplies it by 2, and returns the result.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc Double(L *lua.LState) int {\n    lv := L.ToInt(1)             /* get argument */\n    L.Push(lua.LNumber(lv * 2)) /* push result */\n    return 1                     /* number of results */\n}\n\nfunc main() {\n    L := lua.NewState()\n    defer L.Close()\n    L.SetGlobal(\"double\", L.NewFunction(Double)) /* Original lua_setglobal uses stack... */\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Subsystem Logger with go-hclog in Go\nDESCRIPTION: Demonstrates how to create a new logger for a subsystem that inherits the parent logger's name.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nsubsystemLogger := appLogger.Named(\"transport\")\nsubsystemLogger.Info(\"we are transporting something\")\n```\n\n----------------------------------------\n\nTITLE: Token-based Pagination for Registry Repositories\nDESCRIPTION: Example showing how to implement token-based pagination when listing Registry Repositories using the V2 API.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc ListRepositoriesV2(ctx context.Context, client *godo.Client, registryName string) ([]*godo.RepositoryV2, error) {\n    // create a list to hold our registries\n    list := []*godo.RepositoryV2{}\n\n    // create options. initially, these will be blank\n    opt := &godo.TokenListOptions{}\n    for {\n        repositories, resp, err := client.Registry.ListRepositoriesV2(ctx, registryName, opt)\n        if err != nil {\n            return nil, err\n        }\n\n        // append the current page's registries to our list\n        list = append(list, repositories...)\n\n        // if we are at the last page, break out the for loop\n        if resp.Links == nil || resp.Links.IsLastPage() {\n            break\n        }\n\n        // grab the next page token\n        nextPageToken, err := resp.Links.NextPageToken()\n        if err != nil {\n            return nil, err\n        }\n\n        // provide the next page token for the next request\n        opt.Token = nextPageToken\n    }\n\n    return list, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Loki Enterprise Access Token\nDESCRIPTION: Commands to extract the token generated by the tokengen job, which is required for connecting Grafana to Grafana Enterprise Logs.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/docs/examples/enterprise/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport POD_NAME=$(kubectl get pods --namespace {KUBERNETES_NAMESPACE} -l \"job-name=enterprise-logs-tokengen\" -o jsonpath=\"{.items[0].metadata.name}\")\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --namespace {KUBERNETES_NAMESPACE} logs $POD_NAME loki | grep Token\n```\n\n----------------------------------------\n\nTITLE: Replacing encoding/json import with go-json\nDESCRIPTION: Code diff showing how to replace the standard encoding/json import with go-json.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n-import \"encoding/json\"\n+import \"github.com/goccy/go-json\"\n```\n\n----------------------------------------\n\nTITLE: Installing GoValidator Package in Go\nDESCRIPTION: Commands to install the govalidator package using go get. It includes options for getting the latest version or a specific release using gopkg.in.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/asaskevich/govalidator\n```\n\nLANGUAGE: bash\nCODE:\n```\ngo get gopkg.in/asaskevich/govalidator.v10\n```\n\n----------------------------------------\n\nTITLE: Log Export Commands\nDESCRIPTION: Commands for exporting log query results to files with parallel processing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./inventory\n```\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query \\\n     --timezone=UTC \\\n     --output=jsonl \\\n     --parallel-duration=\"12h\" \\\n     --parallel-max-workers=\"4\" \\\n     --part-path-prefix=\"./inventory/inv\" \\\n     --since=24h \\\n     '{service_name=\"Delivery World\"}'\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Best Compression Mode in S2 (Markdown)\nDESCRIPTION: Compares compression ratios and speeds for default, better, and best compression modes in S2 across different file types. The best mode prioritizes compression ratio over speed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n```\n* enwik10\nDefault... 10000000000 -> 4759950115 [47.60%]; 1.03s, 9263.0MB/s\nBetter...  10000000000 -> 4084706676 [40.85%]; 2.16s, 4415.4MB/s\nBest...    10000000000 -> 3615520079 [36.16%]; 42.259s, 225.7MB/s\n\n* github-june-2days-2019.json\nDefault... 6273951764 -> 1041700255 [16.60%]; 431ms, 13882.3MB/s\nBetter...  6273951764 -> 945841238 [15.08%]; 547ms, 10938.4MB/s\nBest...    6273951764 -> 826392576 [13.17%]; 9.455s, 632.8MB/s\n\n* nyc-taxi-data-10M.csv\nDefault... 3325605752 -> 1093516949 [32.88%]; 324ms, 9788.7MB/s\nBetter...  3325605752 -> 885394158 [26.62%]; 491ms, 6459.4MB/s\nBest...    3325605752 -> 773681257 [23.26%]; 8.29s, 412.0MB/s\n\n* 10gb.tar\nDefault... 10065157632 -> 5915541066 [58.77%]; 1.028s, 9337.4MB/s\nBetter...  10065157632 -> 5453844650 [54.19%]; 1.597s, 4862.7MB/s\nBest...    10065157632 -> 5192495021 [51.59%]; 32.78s, 308.2MB/\n\n* consensus.db.10gb\nDefault... 10737418240 -> 4549762344 [42.37%]; 882ms, 12118.4MB/s\nBetter...  10737418240 -> 4438535064 [41.34%]; 1.533s, 3500.9MB/s\nBest...    10737418240 -> 4210602774 [39.21%]; 42.96s, 254.4MB/s\n```\n```\n\n----------------------------------------\n\nTITLE: Exposing Metrics via HTTP in Go\nDESCRIPTION: Shows how to expose all metrics along with expvars at /debug/metrics using the Exp function from the exp package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/rcrowley/go-metrics/exp\"\n\nexp.Exp(metrics.DefaultRegistry)\n```\n\n----------------------------------------\n\nTITLE: Advanced Redis Commands with Go-Redis\nDESCRIPTION: Demonstrates various advanced Redis commands using go-redis, including SetNX with TTL, Sort with options, ZRangeByScoreWithScores, ZInterStore with weights, Eval for Lua scripting, and custom commands using Do().\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n// SET key value EX 10 NX\nset, err := rdb.SetNX(ctx, \"key\", \"value\", 10*time.Second).Result()\n\n// SET key value keepttl NX\nset, err := rdb.SetNX(ctx, \"key\", \"value\", redis.KeepTTL).Result()\n\n// SORT list LIMIT 0 2 ASC\nvals, err := rdb.Sort(ctx, \"list\", &redis.Sort{Offset: 0, Count: 2, Order: \"ASC\"}).Result()\n\n// ZRANGEBYSCORE zset -inf +inf WITHSCORES LIMIT 0 2\nvals, err := rdb.ZRangeByScoreWithScores(ctx, \"zset\", &redis.ZRangeBy{\n    Min: \"-inf\",\n    Max: \"+inf\",\n    Offset: 0,\n    Count: 2,\n}).Result()\n\n// ZINTERSTORE out 2 zset1 zset2 WEIGHTS 2 3 AGGREGATE SUM\nvals, err := rdb.ZInterStore(ctx, \"out\", &redis.ZStore{\n    Keys: []string{\"zset1\", \"zset2\"},\n    Weights: []int64{2, 3}\n}).Result()\n\n// EVAL \"return {KEYS[1],ARGV[1]}\" 1 \"key\" \"hello\"\nvals, err := rdb.Eval(ctx, \"return {KEYS[1],ARGV[1]}\", []string{\"key\"}, \"hello\").Result()\n\n// custom command\nres, err := rdb.Do(ctx, \"set\", \"key\", \"value\").Result()\n```\n\n----------------------------------------\n\nTITLE: Retrieving OpenShift Data Foundation Access Credentials\nDESCRIPTION: Commands to retrieve access key and secret from the Secret created by an ObjectBucketClaim. These credentials are needed for S3-compatible authentication to OpenShift Data Foundation.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_11\n\nLANGUAGE: console\nCODE:\n```\nACCESS_KEY_ID=$(kubectl get -n openshift-logging secret loki-bucket-odf -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)\nSECRET_ACCESS_KEY=$(kubectl get -n openshift-logging secret loki-bucket-odf -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)\n```\n\n----------------------------------------\n\nTITLE: String Trimming in Go Templates\nDESCRIPTION: Various trim functions for removing characters from strings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_15\n\nLANGUAGE: template\nCODE:\n```\n{{ .ip | trim }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ trim \"   hello    \" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ .path | trimAll \"/\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ trimAll \"$\" \"$5.00\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{  .path | trimPrefix \"/\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ trimPrefix \"-\" \"-hello\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{  .path | trimSuffix \"/\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ trimSuffix \"-\" \"hello-\" }}\n```\n\n----------------------------------------\n\nTITLE: YAML Marshaling and Unmarshaling Example in Go\nDESCRIPTION: Demonstrates basic YAML processing in Go including struct unmarshaling, marshaling, and map handling. Shows how to define struct tags for YAML parsing and handle both structured and unstructured data formats.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/goyaml.v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n        \"fmt\"\n        \"log\"\n\n        \"gopkg.in/yaml.v2\"\n)\n\nvar data = `\na: Easy!\nb:\n  c: 2\n  d: [3, 4]\n`\n\n// Note: struct fields must be public in order for unmarshal to\n// correctly populate the data.\ntype T struct {\n        A string\n        B struct {\n                RenamedC int   `yaml:\"c\"`\n                D        []int `yaml:\",flow\"`\n        }\n}\n\nfunc main() {\n        t := T{}\n    \n        err := yaml.Unmarshal([]byte(data), &t)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- t:\\n%v\\n\\n\", t)\n    \n        d, err := yaml.Marshal(&t)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- t dump:\\n%s\\n\\n\", string(d))\n    \n        m := make(map[interface{}]interface{})\n    \n        err = yaml.Unmarshal([]byte(data), &m)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- m:\\n%v\\n\\n\", m)\n    \n        d, err = yaml.Marshal(&m)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- m dump:\\n%s\\n\\n\", string(d))\n}\n```\n\nLANGUAGE: yaml\nCODE:\n```\n--- t:\n{Easy! {2 [3 4]}}\n\n--- t dump:\na: Easy!\nb:\n  c: 2\n  d: [3, 4]\n\n\n--- m:\nmap[a:Easy! b:map[c:2 d:[3 4]]]\n\n--- m dump:\na: Easy!\nb:\n  c: 2\n  d:\n  - 3\n  - 4\n```\n\n----------------------------------------\n\nTITLE: Enabling ANSI Processing on Windows with termenv\nDESCRIPTION: This code snippet demonstrates how to enable ANSI processing for terminal applications on Windows using termenv. It's safe to include on non-Windows systems or when stdout is not a terminal.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nrestoreConsole, err := termenv.EnableVirtualTerminalProcessing(termenv.DefaultOutput())\nif err != nil {\n    panic(err)\n}\ndefer restoreConsole()\n```\n\n----------------------------------------\n\nTITLE: Username Password Authentication in Go\nDESCRIPTION: Implementation of username/password authentication flow for acquiring an access token\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nspt, err := adal.NewServicePrincipalTokenFromUsernamePassword(\n\t*oauthConfig,\n\tapplicationID,\n\tusername,\n\tpassword,\n\tresource,\n\tcallbacks...)\n\nif (err == nil) {\n    token := spt.Token\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling automatic flag sorting in help output\nDESCRIPTION: Demonstrates how to disable the default behavior of sorting flags alphabetically in help text. This allows maintaining a specific order when displaying flags.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\nflags.BoolP(\"verbose\", \"v\", false, \"verbose output\")\nflags.String(\"coolflag\", \"yeaah\", \"it's really cool flag\")\nflags.Int(\"usefulflag\", 777, \"sometimes it's very useful\")\nflags.SortFlags = false\nflags.PrintDefaults()\n```\n\n----------------------------------------\n\nTITLE: Running k6 test script for Loki\nDESCRIPTION: Command to execute the k6 test script that will validate Loki's functionality by writing and querying logs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n./k6 run aws-test.js\n```\n\n----------------------------------------\n\nTITLE: Local Color Control in Go\nDESCRIPTION: Examples of enabling and disabling colors for specific color instances\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nc := color.New(color.FgCyan)\nc.Println(\"Prints cyan text\")\n\nc.DisableColor()\nc.Println(\"This is printed without any color\")\n\nc.EnableColor()\nc.Println(\"This prints again cyan...\")\n```\n\n----------------------------------------\n\nTITLE: Basic JMESPath Search in Go\nDESCRIPTION: Demonstrates the basic usage of jmespath.Search to query nested JSON data. Shows how to unmarshal JSON data and extract a specific array element using a JMESPath expression.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jmespath/go-jmespath/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/jmespath/go-jmespath\"\n\nvar jsondata = []byte(`{\"foo\": {\"bar\": {\"baz\": [0, 1, 2, 3, 4]}}}`)\nvar data interface{}\nerr := json.Unmarshal(jsondata, &data)\nresult, err := jmespath.Search(\"foo.bar.baz[2]\", data)\nresult = 2\n```\n\n----------------------------------------\n\nTITLE: Metric and Instant Queries\nDESCRIPTION: Advanced LogCLI queries for metrics and instant values with aggregations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query --since 24h 'sum(count_over_time({state=\"California\"}[1h]))'\n```\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query --since 24h  'sum(count_over_time({state=\"California\"}| json | package_type= \"Documents\" [1h]))'\n```\n\nLANGUAGE: bash\nCODE:\n```\nlogcli instant-query 'sum(count_over_time({state=\"California\"}[5m]))'\n```\n\n----------------------------------------\n\nTITLE: Using Custom Renderers in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to use custom renderers for specific outputs, particularly useful in server-client situations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_20\n\nLANGUAGE: go\nCODE:\n```\nfunc myLittleHandler(sess ssh.Session) {\n    // Create a renderer for the client.\n    renderer := lipgloss.NewRenderer(sess)\n\n    // Create a new style on the renderer.\n    style := renderer.NewStyle().Background(lipgloss.AdaptiveColor{Light: \"63\", Dark: \"228\"})\n\n    // Render. The color profile and dark background state will be correctly detected.\n    io.WriteString(sess, style.Render(\"Heyyyyyyy\"))\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Option Interface in Go\nDESCRIPTION: Illustrates how to create an Option interface for configuring options in a type-safe manner.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\ntype Option interface {\n\tapply(config) config\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fluentd for Loki in Kubernetes\nDESCRIPTION: This configuration sets up Fluentd to send logs to the 'application' endpoint of Loki. It includes authentication and TLS settings for secure communication in a Kubernetes environment.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n<match **>\n  @type loki\n  # ...\n  bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token\n  ca_cert /run/secrets/kubernetes.io/serviceaccount/service-ca.crt\n  url https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/application\n</match>\n```\n\n----------------------------------------\n\nTITLE: Configuring Nomad Network in Bridge Mode for Consul Connect\nDESCRIPTION: HCL configuration for setting up Loki components in bridge network mode with ports for HTTP, health checks, and gRPC communication.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\n    network {\n      mode = \"bridge\"\n\n      port \"http\" {}\n      port \"health\" {}\n      port \"grpc\" {}\n    }\n```\n\n----------------------------------------\n\nTITLE: Updating AKS Cluster\nDESCRIPTION: Command to update an existing AKS cluster to enable workload identity and OIDC issuer\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz aks update \\\n  --resource-group <MY_RESOURCE_GROUP_NAME> \\\n  --name <MY_AKS_CLUSTER_NAME> \\\n  --enable-workload-identity \\\n  --enable-oidc-issuer\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Cloud Infrastructure Storage with Raw Provider in Thanos\nDESCRIPTION: YAML configuration for setting up Oracle Cloud Infrastructure Object Storage in Thanos using the raw authentication method with explicit credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ntype: OCI\nconfig:\n  provider: \"raw\"\n  bucket: \"\"\n  compartment_ocid: \"\"\n  tenancy_ocid: \"\"\n  user_ocid: \"\"\n  region: \"\"\n  fingerprint: \"\"\n  privatekey: \"\"\n  passphrase: \"\"         // Optional passphrase to encrypt the private API Signing key\n```\n\n----------------------------------------\n\nTITLE: Channel Select Operations in Lua\nDESCRIPTION: Examples of using channel.select in Lua to handle multiple channel operations. Shows different patterns for receiving and sending data through channels with handler functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_23\n\nLANGUAGE: lua\nCODE:\n```\nlocal idx, recv, ok = channel.select(\n  {\"|<-\", ch1},\n  {\"|<-\", ch2}\n)\nif not ok then\n    print(\"closed\")\nelseif idx == 1 then -- received from ch1\n    print(recv)\nelseif idx == 2 then -- received from ch2\n    print(recv)\nend\n\nchannel.select(\n  {\"|<-\", ch1, function(ok, data)\n    print(ok, data)\n  end},\n  {\"<-|\", ch2, \"value\", function(data)\n    print(data)\n  end},\n  {\"default\", function()\n    print(\"default action\")\n  end}\n)\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for LogQL Simulator Interface\nDESCRIPTION: Main HTML structure defining the LogQL simulator interface with sections for log source input, query input, and results display. Includes radio buttons for selecting log formats and a share button.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<main class=\"logql-analyzer\">\n    <section class=\"logs-source panel-container\">\n        <div class=\"logs-source__header\">\n            <div class=\"examples\">\n                <span>Log line format:</span>\n                <span class=\"example\">\n                    <input type=\"radio\" class=\"example-select\" name=\"example\" id=\"logfmt-example\" checked>\n                    <label for=\"logfmt-example\">logfmt</label>\n                </span>\n                <span class=\"example\">\n                    <input type=\"radio\" class=\"example-select\" name=\"example\" id=\"json-parser-example\">\n                    <label for=\"json-parser-example\">JSON</label>\n                </span>\n                <span class=\"example\">\n                    <input type=\"radio\" class=\"example-select\" name=\"example\" id=\"pattern-parser-example\">\n                    <label for=\"pattern-parser-example\">Unstructured text</label>\n                </span>\n            </div>\n            <div class=\"share-section\">\n                <span class=\"share-link-copied-notification hide\" id=\"share-link-copied-notification\">\n                    <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                    Link copied to clipboard.\n                </span>\n                <button class=\"primary-button\" id=\"share-button\">\n                    <i class=\"fa fa-link\" aria-hidden=\"true\"></i>\n                    Share\n                </button>\n            </div>\n        </div>\n        <div class=\"panel-header\">\n            {job=\"analyze\"}\n        </div>\n        <textarea id=\"logs-source-input\" class=\"logs-source__input\"></textarea>\n    </section>\n    <section class=\"query panel-container\">\n        <div class=\"panel-header\">\n            Query:\n        </div>\n        <div class=\"query-container\">\n            <div class=\"input-box\">\n                <span class=\"prefix\">{job=\"analyze\"} </span>\n                <input id=\"query-input\" class=\"query_input\">\n            </div>\n            <button class=\"query_submit primary-button\">Run query</button>\n        </div>\n        <div class=\"query-error\" id=\"query-error\"></div>\n    </section>\n    <section class=\"results panel-container hide\" id=\"results\">\n    </section>\n</main>\n```\n\n----------------------------------------\n\nTITLE: Running Stream Generator for Local Development\nDESCRIPTION: Example of running the Stream Generator for local development using the provided docker-compose setup.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/stream-generator/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --network=host \\\n  grafana/stream-metadata-generator \\\n  --tenants.total=2 \\\n  --tenants.streams.total=500 \\\n  --tenants.qps=50 \\\n  --kafka.address=localhost:9092 \\\n  --kafka.topic=loki \\\n  --kafka.sasl.enabled=true \\\n  --kafka.sasl.mechanism=PLAIN \\\n  --kafka.sasl.username=loki \\\n  --kafka.sasl.password=secret123 \\\n  --stream-metadata-generator.store=inmemory\n```\n\n----------------------------------------\n\nTITLE: OpenStack Swift Storage Configuration in YAML\nDESCRIPTION: Configuration settings for OpenStack Swift storage backend including authentication credentials, connection timeouts, and HTTP settings. Includes parameters for application credentials, domain settings, project configuration, and connection retry policies.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_81\n\nLANGUAGE: yaml\nCODE:\n```\napplication_credential_id: <string> | default = \"\"\napplication_credential_name: <string> | default = \"\"\napplication_credential_secret: <string> | default = \"\"\nauth_version: <int> | default = 0\nauth_url: <string> | default = \"\"\nusername: <string> | default = \"\"\nuser_domain_name: <string> | default = \"\"\nuser_domain_id: <string> | default = \"\"\nuser_id: <string> | default = \"\"\npassword: <string> | default = \"\"\ndomain_id: <string> | default = \"\"\ndomain_name: <string> | default = \"\"\nproject_id: <string> | default = \"\"\nproject_name: <string> | default = \"\"\nproject_domain_id: <string> | default = \"\"\nproject_domain_name: <string> | default = \"\"\nregion_name: <string> | default = \"\"\ncontainer_name: <string> | default = \"\"\nmax_retries: <int> | default = 3\nconnect_timeout: <duration> | default = 10s\nrequest_timeout: <duration> | default = 5s\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda-promtail Stack with CloudFormation\nDESCRIPTION: This bash command creates a CloudFormation stack for Lambda-promtail using the template-eventbridge.yaml file. It configures various parameters including the Loki write address, authentication details, and S3 bucket information.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naws cloudformation create-stack \\\n  --stack-name lambda-promtail-stack \\\n  --template-body file://template-eventbridge.yaml \\\n  --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \\\n  --region us-east-2 \\\n  --parameters ParameterKey=WriteAddress,ParameterValue=https://your-loki-url/loki/api/v1/push ParameterKey=Username,ParameterValue=<basic-auth-username> ParameterKey=Password,ParameterValue=<basic-auth-pw> ParameterKey=BearerToken,ParameterValue=<bearer-token> ParameterKey=LambdaPromtailImage,ParameterValue=<ecr-repo>:<tag> ParameterKey=ExtraLabels,ParameterValue=\"name1,value1,name2,value2\" ParameterKey=TenantID,ParameterValue=<value> ParameterKey=SkipTlsVerify,ParameterValue=\"false\" ParameterKey=EventSourceS3Bucket,ParameterValue=<S3 where target logs are stored>\n```\n\n----------------------------------------\n\nTITLE: Configuring Schema for Parquet Readers\nDESCRIPTION: Example showing how to explicitly declare the expected schema when creating a Parquet reader, which is useful when dealing with files from untrusted sources or when schema evolution needs to be handled.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nschema := parquet.SchemaOf(new(RowType))\nreader := parquet.NewReader(file, schema)\n...\n```\n\n----------------------------------------\n\nTITLE: Using Resource Configuration in Go OpenTelemetry SDK\nDESCRIPTION: Example showing the transition from deprecated resource.WithoutBuiltin() to the recommended resource.New() method. This change is part of the removed features in the OpenTelemetry Go SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_25\n\nLANGUAGE: Go\nCODE:\n```\n// Old (removed) approach\nresource.WithoutBuiltin()\n\n// New recommended approach\nresource.New()\n```\n\n----------------------------------------\n\nTITLE: Adding Timestamps and Caller Information to Go Kit Logger\nDESCRIPTION: Shows how to enhance a Go Kit logger with automatic timestamp and caller information for each log entry.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/log/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nvar logger log.Logger\nlogger = log.NewLogfmtLogger(log.NewSyncWriter(os.Stderr))\nlogger = log.With(logger, \"ts\", log.DefaultTimestampUTC, \"caller\", log.DefaultCaller)\n\nlogger.Log(\"msg\", \"hello\")\n\n// Output:\n// ts=2016-01-01T12:34:56Z caller=main.go:15 msg=hello\n```\n\n----------------------------------------\n\nTITLE: Creating a New Client in azblob\nDESCRIPTION: Creates a new Azure Blob Storage client using the azblob module by providing a storage account URL, credentials, and optional client options. The nil parameter indicates default options should be used.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/migrationguide.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// new code\nclient, err := azblob.NewClient(\"<my storage account URL>\", cred, nil)\n```\n\n----------------------------------------\n\nTITLE: Defining RoleSpec in YAML for Grafana Loki\nDESCRIPTION: RoleSpec describes a set of permissions to interact with a tenant in Grafana Loki, including resources, tenants, and permissions.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nroleSpec:\n  name: editor\n  resources:\n    - logs\n    - rules\n  tenants:\n    - tenant1\n    - tenant2\n  permissions:\n    - read\n    - write\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki in SingleBinary Mode with Persistent Storage\nDESCRIPTION: This configuration disables MinIO storage and sets up Loki in SingleBinary mode with 3 replicas and a 30Gi persistent volume using gp2 storage class. It also zeros out replica counts for all other deployment modes to ensure resources are only allocated to the SingleBinary deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n# Disable minio storage\nminio:\n  enabled: false\n\ndeploymentMode: SingleBinary\n\nsingleBinary:\n  replicas: 3\n  persistence:\n    storageClass: gp2\n    accessModes:\n      - ReadWriteOnce\n    size: 30Gi\n\n# Zero out replica counts of other deployment modes\nbackend:\n  replicas: 0\nread:\n  replicas: 0\nwrite:\n  replicas: 0\n\ningester:\n  replicas: 0\nquerier:\n  replicas: 0\nqueryFrontend:\n  replicas: 0\nqueryScheduler:\n  replicas: 0\ndistributor:\n  replicas: 0\ncompactor:\n  replicas: 0\nindexGateway:\n  replicas: 0\nbloomCompactor:\n  replicas: 0\nbloomGateway:\n  replicas: 0\n```\n\n----------------------------------------\n\nTITLE: Creating OpenShift Data Foundation Storage Secret for Loki\nDESCRIPTION: Command to create a Kubernetes secret for OpenShift Data Foundation storage. This secret uses the retrieved bucket properties and credentials to enable Loki to access the ODF storage.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_12\n\nLANGUAGE: console\nCODE:\n```\nkubectl create -n openshift-logging secret generic lokistack-dev-odf \\\n--from-literal=access_key_id=\"${ACCESS_KEY_ID}\" \\\n--from-literal=access_key_secret=\"${SECRET_ACCESS_KEY}\" \\\n--from-literal=bucketnames=\"${BUCKET_NAME}\" \\\n--from-literal=endpoint=\"https://${BUCKET_HOST}:${BUCKET_PORT}\"\n```\n\n----------------------------------------\n\nTITLE: Mapping Between Maps and Structs in Go\nDESCRIPTION: Shows how to map a map[string]interface{} to a struct and vice versa using Mergo, following the same restrictions as in Merge().\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/dario.cat/mergo/README.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nif err := mergo.Map(&dst, srcMap); err != nil {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Test Data on Linux/macOS\nDESCRIPTION: Command to create a test file containing random data using dd on Linux or macOS systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndd if=/dev/urandom of=/tmp/testdata bs=2048 count=10\n```\n\n----------------------------------------\n\nTITLE: Configuring ASCII Table with Custom Settings in Go\nDESCRIPTION: This example shows how to create an ASCII table without borders, add a footer, and use bulk data append. It demonstrates various configuration options of the tablewriter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n    []string{\"1/1/2014\", \"Domain name\", \"2233\", \"$10.98\"},\n    []string{\"1/1/2014\", \"January Hosting\", \"2233\", \"$54.95\"},\n    []string{\"1/4/2014\", \"February Hosting\", \"2233\", \"$51.00\"},\n    []string{\"1/4/2014\", \"February Extra Bandwidth\", \"2233\", \"$30.00\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Date\", \"Description\", \"CV2\", \"Amount\"})\ntable.SetFooter([]string{\"\", \"\", \"Total\", \"$146.93\"}) // Add Footer\ntable.SetBorder(false)                                // Set Border to false\ntable.AppendBulk(data)                                // Add Bulk Data\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Creating EKS Cluster with eksctl\nDESCRIPTION: Creates a managed EKS cluster named loki-promtail using the eksctl command line tool\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\neksctl create cluster --name loki-promtail --managed\n```\n\n----------------------------------------\n\nTITLE: Prometheus Configuration for Loki Metrics Collection\nDESCRIPTION: YAML configuration for Prometheus to collect metrics from all Loki components using Consul service discovery. It includes relabeling to add instance and component labels.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- job_name: \"loki\"\n  consul_sd_configs:\n    - services:\n        - \"loki-compactor\"\n        - \"loki-ruler\"\n        - \"loki-distributor\"\n        - \"loki-ingestor\"\n        - \"loki-querier\"\n        - \"loki-index-gateway\"\n        - \"loki-query-frontend\"\n        - \"loki-query-scheduler\"\n  relabel_configs:\n    - source_labels: [\"__meta_consul_service_metadata_alloc_id\"]\n      target_label: \"instance\"\n    - source_labels: [\"__meta_consul_service_metadata_component\"]\n      target_label: \"component\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Slog-GoKit Logger Integration\nDESCRIPTION: Example demonstrating how to create an slog Logger that chains log calls to a go-kit Logger, including level configuration and group logging functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/tjhop/slog-gokit/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"log/slog\"\n\t\"os\"\n\n\t\"github.com/go-kit/log\"\n\tslgk \"github.com/tjhop/slog-gokit\"\n)\n\nfunc main() {\n\t// Take an existing go-kit/log Logger:\n\tgklogger := log.NewLogfmtLogger(os.Stderr)\n\n\t// Create an slog Logger that chains log calls to the go-kit/log Logger:\n\tslogger := slog.New(slgk.NewGoKitHandler(gklogger, nil))\n\tslogger.WithGroup(\"example_group\").With(\"foo\", \"bar\").Info(\"hello world\")\n\n\t// The slog Logger produces logs at slog.LevelInfo by default.\n\t// Optionally create an slog.Leveler to dynamically adjust the level of\n\t// the slog Logger.\n\tlvl := &slog.LevelVar{}\n\tlvl.Set(slog.LevelDebug)\n\tslogger = slog.New(slgk.NewGoKitHandler(gklogger, lvl))\n\tslogger.WithGroup(\"example_group\").With(\"foo\", \"bar\").Info(\"hello world\")\n}\n```\n\n----------------------------------------\n\nTITLE: Sharing Lua Byte Code Between LStates\nDESCRIPTION: Shows how to compile Lua code once and share the byte code between multiple Lua states to save memory. This example includes functions to compile Lua code and execute the compiled code in different states.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_21\n\nLANGUAGE: go\nCODE:\n```\n// CompileLua reads the passed lua file from disk and compiles it.\nfunc CompileLua(filePath string) (*lua.FunctionProto, error) {\n    file, err := os.Open(filePath)\n    defer file.Close()\n    if err != nil {\n        return nil, err\n    }\n    reader := bufio.NewReader(file)\n    chunk, err := parse.Parse(reader, filePath)\n    if err != nil {\n        return nil, err\n    }\n    proto, err := lua.Compile(chunk, filePath)\n    if err != nil {\n        return nil, err\n    }\n    return proto, nil\n}\n\n// DoCompiledFile takes a FunctionProto, as returned by CompileLua, and runs it in the LState. It is equivalent\n// to calling DoFile on the LState with the original source file.\nfunc DoCompiledFile(L *lua.LState, proto *lua.FunctionProto) error {\n    lfunc := L.NewFunctionFromProto(proto)\n    L.Push(lfunc)\n    return L.PCall(0, lua.MultRet, nil)\n}\n\n// Example shows how to share the compiled byte code from a lua script between multiple VMs.\nfunc Example() {\n    codeToShare := CompileLua(\"mylua.lua\")\n    a := lua.NewState()\n    b := lua.NewState()\n    c := lua.NewState()\n    DoCompiledFile(a, codeToShare)\n    DoCompiledFile(b, codeToShare)\n    DoCompiledFile(c, codeToShare)\n}\n```\n\n----------------------------------------\n\nTITLE: Length-based Drop Configuration\nDESCRIPTION: Example showing how to drop log lines that exceed a specified length.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- drop:\n    longer_than: 8kb\n    drop_counter_reason: \"line_too_long\"\n```\n\n----------------------------------------\n\nTITLE: Setting up a Log Router in GCP using gcloud CLI\nDESCRIPTION: This command creates a log sink to forward cloud logs to the previously created Pub/Sub topic. It includes a log filter to specify which types of logs should be sent to the destination topic.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ gcloud logging sinks create cloud-logs pubsub.googleapis.com/projects/my-project/topics/cloud-logs \\\n--log-filter='resource.type=(\"gcs_bucket\")' \\\n--description=\"Cloud logs\"\n```\n\n----------------------------------------\n\nTITLE: Conditional Tenant ID Override\nDESCRIPTION: Example demonstrating how to conditionally override tenant ID based on log labels using match stages and fixed values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/tenant.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_stages:\n  - json:\n      expressions:\n        app:\n        message:\n  - labels:\n      app:\n  - match:\n      selector: '{app=\"api\"}'\n      stages:\n        - tenant:\n            value: \"team-api\"\n  - output:\n      source: message\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"app\":\"api\",\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackSpec Struct in Go\nDESCRIPTION: LokiStackSpec defines the desired state of LokiStack. It includes fields for management state, size, hash ring, storage, replication, rules, limits, and more.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackSpec struct {\n    ManagementState  ManagementStateType  `json:\"managementState,omitempty\"`\n    Size             LokiStackSizeType    `json:\"size\"`\n    HashRing         *HashRingSpec        `json:\"hashRing,omitempty\"`\n    Storage          ObjectStorageSpec    `json:\"storage\"`\n    StorageClassName string               `json:\"storageClassName\"`\n    Proxy            *ClusterProxy        `json:\"proxy,omitempty\"`\n    ReplicationFactor int32               `json:\"replicationFactor,omitempty\"`\n    Replication      *ReplicationSpec     `json:\"replication,omitempty\"`\n    Rules            *RulesSpec           `json:\"rules,omitempty\"`\n    Limits           *LimitsSpec          `json:\"limits,omitempty\"`\n    Template         *LokiTemplateSpec    `json:\"template,omitempty\"`\n    Tenants          *TenantsSpec         `json:\"tenants,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Between Different Parquet Schemas\nDESCRIPTION: Example showing how to convert between different versions of a Parquet schema using the parquet.Convert function, which is useful for handling schema evolution in applications that need to work with files created at different points in time.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype RowTypeV1 struct { ID int64; FirstName string }\ntype RowTypeV2 struct { ID int64; FirstName, LastName string }\n\nsource := parquet.SchemaOf(RowTypeV1{})\ntarget := parquet.SchemaOf(RowTypeV2{})\n\nconversion, err := parquet.Convert(target, source)\nif err != nil {\n    ...\n}\n\ntargetRowGroup := parquet.ConvertRowGroup(sourceRowGroup, conversion)\n...\n```\n\n----------------------------------------\n\nTITLE: Verifying IMDS Availability on Azure VM\nDESCRIPTION: This command verifies if the Managed Identity endpoint is available on an Azure Virtual Machine by sending a request to the IMDS endpoint. The command requests an access token for the Azure Resource Manager and requires the Metadata header.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl 'http://169.254.169.254/metadata/identity/oauth2/token?resource=https://management.core.windows.net&api-version=2018-02-01' -H \"Metadata: true\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Virtual Hub BGP Connections Client in Go\nDESCRIPTION: Code to create a specific Azure Network client for managing Virtual Hub BGP connections using the previously initialized client factory.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nclient := clientFactory.NewVirtualHubBgpConnectionsClient()\n```\n\n----------------------------------------\n\nTITLE: Parsing RFC5424 Syslog Messages in Go\nDESCRIPTION: Code example demonstrating how to parse a RFC5424 formatted Syslog message using the library. Creates a new parser and processes a byte slice containing a Syslog message.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-syslog/v4/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ni := []byte(`<165>4 2018-10-11T22:14:15.003Z mymach.it e - 1 [ex@32473 iut=\"3\"] An application event log entry...`)\np := rfc5424.NewParser()\nm, e := p.Parse(i)\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Compute Client Factory\nDESCRIPTION: Code snippet showing how to initialize a client factory for Azure Compute using a subscription ID and credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nclientFactory, err := armcompute.NewClientFactory(<subscription ID>, cred, nil)\n```\n\n----------------------------------------\n\nTITLE: Port-Forwarding Alloy Service\nDESCRIPTION: Bash command to port-forward the Alloy service to the local machine on port 12345. This allows access to the Alloy UI for viewing the log collection pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport POD_NAME=$(kubectl get pods --namespace meta -l \"app.kubernetes.io/name=alloy-logs,app.kubernetes.io/instance=k8s\" -o jsonpath=\"{.items[0].metadata.name}\") && \\\nkubectl --namespace meta port-forward $POD_NAME 12345 --address 0.0.0.0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Online and Possible CPU Counts in Go\nDESCRIPTION: This snippet demonstrates how to use the numcpus package to get the number of online and possible CPUs in a system. It imports the necessary packages, calls the GetOnline() and GetPossible() functions, and prints the results or any errors encountered.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/tklauser/numcpus/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/tklauser/numcpus\"\n)\n\nfunc main() {\n\tonline, err := numcpus.GetOnline()\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"GetOnline: %v\\n\", err)\n\t}\n\tfmt.Printf(\"online CPUs: %v\\n\", online)\n\n\tpossible, err := numcpus.GetPossible()\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"GetPossible: %v\\n\", err)\n\t}\n\tfmt.Printf(\"possible CPUs: %v\\n\", possible)\n}\n```\n\n----------------------------------------\n\nTITLE: Running Grafana Docker Container\nDESCRIPTION: Command to run Grafana container for visualizing Loki logs\nSOURCE: https://github.com/grafana/loki/blob/main/production/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -ti -p 3000:3000 grafana/grafana:master\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Loki 3.0 Release Notes\nDESCRIPTION: YAML frontmatter defining the title, description, and weight of the Loki 3.0 release notes page.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-0.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: v3.0\ndescription: Version 3.0 release notes.\nweight: 550\n---\n```\n\n----------------------------------------\n\nTITLE: Object Store Configuration\nDESCRIPTION: Configuration block for object storage backend options including Azure, filesystem, GCS, S3 and Swift storage configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_70\n\nLANGUAGE: yaml\nCODE:\n```\nobject_store:\n  <thanos_object_store_config>\n  named_stores:\n    azure: <map of string to NamedAzureStorageConfig>\n    filesystem: <map of string to NamedFilesystemStorageConfig>\n    gcs: <map of string to NamedGCSStorageConfig>\n    s3: <map of string to NamedS3StorageConfig>\n    swift: <map of string to NamedSwiftStorageConfig>\n```\n\n----------------------------------------\n\nTITLE: Implementing Hierarchical Queue Structure in Go\nDESCRIPTION: Code snippet demonstrating the recursive structure of the proposed hierarchical queues. It defines interfaces and types for the queue system including RequestQueue (top level), RootQueue (for tenants), and LeafQueue (for nested levels).\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/lids/0003-QueryFairnessInScheduler.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype Request interface{}\n\ntype Queue interface {\n    Deqeue(actor []string) Request\n    Enqueue(r Request, actor []string) error\n}\n\n// RequestQueue implements Queue\ntype RequestQueue struct {\n    queriers   map[string]*querier\n    rootQueues map[string]*RootQueue\n}\n\n// RootQueue implements Queue\ntype RootQueue struct {\n    queriers map[string]*querier\n    leafs    map[string]*LeafQueue\n    ch       chan Request\n}\n\n// LeafQueue implements Queue\ntype LeafQueue struct {\n    leafs map[string]*LeafQueue\n    ch    chan Request\n}\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry Collector Basic Auth Configuration\nDESCRIPTION: Extended configuration including basic authentication for the OTLP HTTP exporter.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nextensions:\n  basicauth/otlp:\n    client_auth:\n      username: username\n      password: password\n\nexporters:\n  otlphttp:\n    auth:\n      authenticator: basicauth/otlp\n    endpoint: http://<loki-addr>:3100/otlp\n\nservice:\n  extensions: [basicauth/otlp]\n  pipelines:\n    logs:\n      receivers: [...]\n      processors: [...]\n      exporters: [..., otlphttp]\n```\n\n----------------------------------------\n\nTITLE: Declaring Go Module Dependencies for Grafana Loki\nDESCRIPTION: This snippet lists the explicit Go module dependencies for the Grafana Loki project. It includes the module names, version requirements, and import paths for each dependency.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\n## explicit; go 1.18\ngithub.com/DataDog/sketches-go/ddsketch\ngithub.com/DataDog/sketches-go/ddsketch/encoding\ngithub.com/DataDog/sketches-go/ddsketch/mapping\ngithub.com/DataDog/sketches-go/ddsketch/pb/sketchpb\ngithub.com/DataDog/sketches-go/ddsketch/stat\ngithub.com/DataDog/sketches-go/ddsketch/store\n# github.com/DmitriyVTitov/size v1.5.0\n## explicit; go 1.14\ngithub.com/DmitriyVTitov/size\n# github.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.25.0\n## explicit; go 1.21\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp\n# github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.51.0\n## explicit; go 1.22\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric\n# github.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.51.0\n## explicit; go 1.22\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping\n# github.com/IBM/go-sdk-core/v5 v5.19.1\n## explicit; go 1.23.0\ngithub.com/IBM/go-sdk-core/v5/core\n# github.com/IBM/ibm-cos-sdk-go v1.12.2\n## explicit; go 1.23.0\ngithub.com/IBM/ibm-cos-sdk-go/aws\ngithub.com/IBM/ibm-cos-sdk-go/aws/arn\ngithub.com/IBM/ibm-cos-sdk-go/aws/awserr\ngithub.com/IBM/ibm-cos-sdk-go/aws/awsutil\ngithub.com/IBM/ibm-cos-sdk-go/aws/client\ngithub.com/IBM/ibm-cos-sdk-go/aws/client/metadata\ngithub.com/IBM/ibm-cos-sdk-go/aws/corehandlers\ngithub.com/IBM/ibm-cos-sdk-go/aws/credentials\ngithub.com/IBM/ibm-cos-sdk-go/aws/credentials/endpointcreds\ngithub.com/IBM/ibm-cos-sdk-go/aws/credentials/ibmiam\ngithub.com/IBM/ibm-cos-sdk-go/aws/credentials/ibmiam/token\ngithub.com/IBM/ibm-cos-sdk-go/aws/credentials/ibmiam/tokenmanager\ngithub.com/IBM/ibm-cos-sdk-go/aws/credentials/processcreds\ngithub.com/IBM/ibm-cos-sdk-go/aws/defaults\ngithub.com/IBM/ibm-cos-sdk-go/aws/endpoints\ngithub.com/IBM/ibm-cos-sdk-go/aws/request\ngithub.com/IBM/ibm-cos-sdk-go/aws/session\ngithub.com/IBM/ibm-cos-sdk-go/aws/signer\ngithub.com/IBM/ibm-cos-sdk-go/aws/signer/ibmiam\ngithub.com/IBM/ibm-cos-sdk-go/aws/signer/v4\ngithub.com/IBM/ibm-cos-sdk-go/internal/ini\ngithub.com/IBM/ibm-cos-sdk-go/internal/s3shared\ngithub.com/IBM/ibm-cos-sdk-go/internal/s3shared/arn\ngithub.com/IBM/ibm-cos-sdk-go/internal/s3shared/s3err\ngithub.com/IBM/ibm-cos-sdk-go/internal/sdkio\ngithub.com/IBM/ibm-cos-sdk-go/internal/sdkmath\ngithub.com/IBM/ibm-cos-sdk-go/internal/sdkrand\ngithub.com/IBM/ibm-cos-sdk-go/internal/shareddefaults\ngithub.com/IBM/ibm-cos-sdk-go/internal/strings\ngithub.com/IBM/ibm-cos-sdk-go/internal/sync/singleflight\ngithub.com/IBM/ibm-cos-sdk-go/private/checksum\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol/json/jsonutil\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol/query\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol/query/queryutil\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol/rest\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol/restxml\ngithub.com/IBM/ibm-cos-sdk-go/private/protocol/xml/xmlutil\ngithub.com/IBM/ibm-cos-sdk-go/service/s3\ngithub.com/IBM/ibm-cos-sdk-go/service/s3/s3iface\n# github.com/IBM/sarama v1.45.1\n## explicit; go 1.21\ngithub.com/IBM/sarama\n# github.com/Masterminds/goutils v1.1.1\n## explicit\ngithub.com/Masterminds/goutils\n# github.com/Masterminds/semver/v3 v3.3.1\n## explicit; go 1.21\ngithub.com/Masterminds/semver/v3\n# github.com/Masterminds/sprig/v3 v3.3.0\n## explicit; go 1.21\ngithub.com/Masterminds/sprig/v3\n# github.com/Microsoft/go-winio v0.6.2\n## explicit; go 1.21\ngithub.com/Microsoft/go-winio\ngithub.com/Microsoft/go-winio/internal/fs\ngithub.com/Microsoft/go-winio/internal/socket\ngithub.com/Microsoft/go-winio/internal/stringbuffer\ngithub.com/Microsoft/go-winio/pkg/guid\n# github.com/NYTimes/gziphandler v1.1.1\n## explicit; go 1.11\ngithub.com/NYTimes/gziphandler\n# github.com/Workiva/go-datastructures v1.1.5\n## explicit; go 1.15\ngithub.com/Workiva/go-datastructures/rangetree\ngithub.com/Workiva/go-datastructures/slice\n# github.com/alecthomas/chroma/v2 v2.16.0\n## explicit; go 1.22\ngithub.com/alecthomas/chroma/v2\ngithub.com/alecthomas/chroma/v2/formatters\ngithub.com/alecthomas/chroma/v2/formatters/html\ngithub.com/alecthomas/chroma/v2/formatters/svg\ngithub.com/alecthomas/chroma/v2/lexers\ngithub.com/alecthomas/chroma/v2/quick\ngithub.com/alecthomas/chroma/v2/styles\n# github.com/alecthomas/kingpin/v2 v2.4.0\n## explicit; go 1.17\ngithub.com/alecthomas/kingpin/v2\n# github.com/alecthomas/units v0.0.0-20240927000941-0f3dac36c52b\n## explicit; go 1.15\ngithub.com/alecthomas/units\n# github.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302\n## explicit\ngithub.com/alicebob/gopher-json\n# github.com/alicebob/miniredis/v2 v2.34.0\n## explicit; go 1.17\ngithub.com/alicebob/miniredis/v2\ngithub.com/alicebob/miniredis/v2/fpconv\ngithub.com/alicebob/miniredis/v2/geohash\ngithub.com/alicebob/miniredis/v2/hyperloglog\ngithub.com/alicebob/miniredis/v2/metro\ngithub.com/alicebob/miniredis/v2/proto\ngithub.com/alicebob/miniredis/v2/server\ngithub.com/alicebob/miniredis/v2/size\n# github.com/aliyun/aliyun-oss-go-sdk v3.0.2+incompatible\n## explicit\ngithub.com/aliyun/aliyun-oss-go-sdk/oss\n# github.com/andybalholm/brotli v1.1.1\n## explicit; go 1.13\ngithub.com/andybalholm/brotli\ngithub.com/andybalholm/brotli/matchfinder\n# github.com/apache/arrow-go/v18 v18.2.0\n## explicit; go 1.23.0\ngithub.com/apache/arrow-go/v18/arrow\ngithub.com/apache/arrow-go/v18/arrow/array\ngithub.com/apache/arrow-go/v18/arrow/bitutil\ngithub.com/apache/arrow-go/v18/arrow/csv\ngithub.com/apache/arrow-go/v18/arrow/decimal\ngithub.com/apache/arrow-go/v18/arrow/decimal128\ngithub.com/apache/arrow-go/v18/arrow/decimal256\ngithub.com/apache/arrow-go/v18/arrow/encoded\ngithub.com/apache/arrow-go/v18/arrow/endian\ngithub.com/apache/arrow-go/v18/arrow/float16\ngithub.com/apache/arrow-go/v18/arrow/internal/debug\ngithub.com/apache/arrow-go/v18/arrow/internal/flatbuf\ngithub.com/apache/arrow-go/v18/arrow/memory\ngithub.com/apache/arrow-go/v18/arrow/memory/internal/cgoalloc\ngithub.com/apache/arrow-go/v18/arrow/memory/mallocator\ngithub.com/apache/arrow-go/v18/internal/bitutils\ngithub.com/apache/arrow-go/v18/internal/hashing\ngithub.com/apache/arrow-go/v18/internal/json\ngithub.com/apache/arrow-go/v18/internal/utils\n# github.com/armon/go-metrics v0.4.1\n## explicit; go 1.12\ngithub.com/armon/go-metrics\ngithub.com/armon/go-metrics/prometheus\n# github.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2\n## explicit; go 1.13\ngithub.com/asaskevich/govalidator\n# github.com/atotto/clipboard v0.1.4\n## explicit\ngithub.com/atotto/clipboard\n# github.com/aws/aws-sdk-go v1.55.6\n## explicit; go 1.19\ngithub.com/aws/aws-sdk-go/aws\ngithub.com/aws/aws-sdk-go/aws/arn\ngithub.com/aws/aws-sdk-go/aws/auth/bearer\ngithub.com/aws/aws-sdk-go/aws/awserr\ngithub.com/aws/aws-sdk-go/aws/awsutil\ngithub.com/aws/aws-sdk-go/aws/client\ngithub.com/aws/aws-sdk-go/aws/client/metadata\ngithub.com/aws/aws-sdk-go/aws/corehandlers\ngithub.com/aws/aws-sdk-go/aws/credentials\ngithub.com/aws/aws-sdk-go/aws/credentials/ec2rolecreds\ngithub.com/aws/aws-sdk-go/aws/credentials/endpointcreds\ngithub.com/aws/aws-sdk-go/aws/credentials/processcreds\ngithub.com/aws/aws-sdk-go/aws/credentials/ssocreds\ngithub.com/aws/aws-sdk-go/aws/credentials/stscreds\ngithub.com/aws/aws-sdk-go/aws/crr\ngithub.com/aws/aws-sdk-go/aws/csm\ngithub.com/aws/aws-sdk-go/aws/defaults\ngithub.com/aws/aws-sdk-go/aws/ec2metadata\ngithub.com/aws/aws-sdk-go/aws/endpoints\ngithub.com/aws/aws-sdk-go/aws/request\ngithub.com/aws/aws-sdk-go/aws/session\ngithub.com/aws/aws-sdk-go/aws/signer/v4\ngithub.com/aws/aws-sdk-go/internal/context\ngithub.com/aws/aws-sdk-go/internal/ini\ngithub.com/aws/aws-sdk-go/internal/s3shared\ngithub.com/aws/aws-sdk-go/internal/s3shared/arn\ngithub.com/aws/aws-sdk-go/internal/s3shared/s3err\ngithub.com/aws/aws-sdk-go/internal/sdkio\ngithub.com/aws/aws-sdk-go/internal/sdkmath\ngithub.com/aws/aws-sdk-go/internal/sdkrand\ngithub.com/aws/aws-sdk-go/internal/sdkuri\ngithub.com/aws/aws-sdk-go/internal/shareddefaults\ngithub.com/aws/aws-sdk-go/internal/strings\ngithub.com/aws/aws-sdk-go/internal/sync/singleflight\ngithub.com/aws/aws-sdk-go/private/checksum\ngithub.com/aws/aws-sdk-go/private/protocol\ngithub.com/aws/aws-sdk-go/private/protocol/ec2query\ngithub.com/aws/aws-sdk-go/private/protocol/eventstream\ngithub.com/aws/aws-sdk-go/private/protocol/eventstream/eventstreamapi\ngithub.com/aws/aws-sdk-go/private/protocol/json/jsonutil\ngithub.com/aws/aws-sdk-go/private/protocol/jsonrpc\ngithub.com/aws/aws-sdk-go/private/protocol/query\ngithub.com/aws/aws-sdk-go/private/protocol/query/queryutil\ngithub.com/aws/aws-sdk-go/private/protocol/rest\ngithub.com/aws/aws-sdk-go/private/protocol/restjson\ngithub.com/aws/aws-sdk-go/private/protocol/restxml\ngithub.com/aws/aws-sdk-go/private/protocol/xml/xmlutil\ngithub.com/aws/aws-sdk-go/service/dynamodb\ngithub.com/aws/aws-sdk-go/service/dynamodb/dynamodbiface\ngithub.com/aws/aws-sdk-go/service/ec2\ngithub.com/aws/aws-sdk-go/service/ec2/ec2iface\ngithub.com/aws/aws-sdk-go/service/lightsail\ngithub.com/aws/aws-sdk-go/service/s3\ngithub.com/aws/aws-sdk-go/service/s3/s3iface\ngithub.com/aws/aws-sdk-go/service/sso\ngithub.com/aws/aws-sdk-go/service/sso/ssoiface\ngithub.com/aws/aws-sdk-go/service/ssooidc\ngithub.com/aws/aws-sdk-go/service/sts\ngithub.com/aws/aws-sdk-go/service/sts/stsiface\n# github.com/aws/aws-sdk-go-v2 v1.36.2\n```\n\n----------------------------------------\n\nTITLE: Analyzing Label Distribution with LogCLI\nDESCRIPTION: Enhanced series query that analyzes label distribution, showing unique values and stream counts for each label.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nlogcli series '{}' --analyze-labels\n```\n\n----------------------------------------\n\nTITLE: Emitting Metrics to StatHat in Go\nDESCRIPTION: Demonstrates how to periodically emit metrics to StatHat using the Stathat function from the stathat package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/rcrowley/go-metrics/stathat\"\n\ngo stathat.Stathat(metrics.DefaultRegistry, 10e9, \"example@example.com\")\n```\n\n----------------------------------------\n\nTITLE: Creating a New Server Instance\nDESCRIPTION: Example of provisioning a new server using the Compute service client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/gophercloud/gophercloud/v2/openstack/compute/v2/servers\"\n\nfunc main() {\n    // [...]\n\n    server, err := servers.Create(context.TODO(), computeClient, servers.CreateOpts{\n        Name:      \"My new server!\",\n        FlavorRef: \"flavor_id\",\n        ImageRef:  \"image_id\",\n    }).Extract()\n\n    // [...]\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki Log Storage with curl\nDESCRIPTION: Bash commands to first push a test log entry to Loki and then query it back to verify storage functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Content-Type: application/json\" -XPOST -s \"http://localhost:3100/loki/api/v1/push\" --data-raw \"{\\\"streams\\\": [{\\\"stream\\\": {\\\"job\\\": \\\"test\\\"}, \\\"values\\\": [[\\\"$(date +%s)000000000\\\", \\\"fizzbuzz\\\"]]}]}\"\ncurl \"http://localhost:3100/loki/api/v1/query_range\" --data-urlencode 'query={job=\"test\"}' --data-urlencode 'step=300' | jq .data.result\n```\n\n----------------------------------------\n\nTITLE: Simple Pack Stage Example\nDESCRIPTION: Basic example showing how to configure the pack stage to embed the container label into the log line.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/pack.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npack:\n  labels:\n    - container\n```\n\n----------------------------------------\n\nTITLE: Calling a Go Function from Lua\nDESCRIPTION: Shows how to use a Go function that has been registered with the Lua state. This example calls the 'double' function previously registered in Go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_11\n\nLANGUAGE: lua\nCODE:\n```\nprint(double(20)) -- > \"40\"\n```\n\n----------------------------------------\n\nTITLE: Adding Jaeger client dependency with TOML configuration\nDESCRIPTION: Example of how to specify Jaeger client dependency with version constraint in a TOML dependency management file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[constraint]]\n  name = \"github.com/uber/jaeger-client-go\"\n  version = \"2.17\"\n```\n\n----------------------------------------\n\nTITLE: Updating Producer Memory Usage for zstd Encoding in Go\nDESCRIPTION: Improves memory usage of the zstd encoder in the producer by implementing custom pool management.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nfeat(producer): improve memory usage of zstd encoder by using our own pool management\n```\n\n----------------------------------------\n\nTITLE: Marking a flag as hidden\nDESCRIPTION: Shows how to mark a flag as hidden so it won't appear in help text. The flag remains fully functional but is not documented in the auto-generated help output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n// hide a flag by specifying its name\nflags.MarkHidden(\"secretFlag\")\n```\n\n----------------------------------------\n\nTITLE: Running Loki Index Audit Command\nDESCRIPTION: Command to execute the audit process using lokitool. It requires specifying the period of the index being audited, the path to the YAML configuration file, and the path to the specific index file to audit.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/tool/audit/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./lokitool audit index --period=19856 --config.file=configfile.yaml --index.file=index/loki_env_tsdb_index_19856/12345/1715707992714992001-compactor-1715199977885-1815707796275-g8003361.tsdb.gz\n```\n\n----------------------------------------\n\nTITLE: Retrieving OpenShift Data Foundation Bucket Properties\nDESCRIPTION: Commands to retrieve bucket properties from the ConfigMap created by an ObjectBucketClaim. These properties include the bucket host, name, and port needed for S3-compatible access.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_10\n\nLANGUAGE: console\nCODE:\n```\nBUCKET_HOST=$(kubectl get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_HOST}')\nBUCKET_NAME=$(kubectl get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_NAME}')\nBUCKET_PORT=$(kubectl get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_PORT}')\n```\n\n----------------------------------------\n\nTITLE: Custom Type Merging with Transformers in Go\nDESCRIPTION: Demonstrates how to use custom transformers with Mergo to handle special types like time.Time that need custom merging logic.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/dario.cat/mergo/README.md#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"dario.cat/mergo\"\n    \"reflect\"\n    \"time\"\n)\n\ntype timeTransformer struct {\n}\n\nfunc (t timeTransformer) Transformer(typ reflect.Type) func(dst, src reflect.Value) error {\n\tif typ == reflect.TypeOf(time.Time{}) {\n\t\treturn func(dst, src reflect.Value) error {\n\t\t\tif dst.CanSet() {\n\t\t\t\tisZero := dst.MethodByName(\"IsZero\")\n\t\t\t\tresult := isZero.Call([]reflect.Value{})\n\t\t\t\tif result[0].Bool() {\n\t\t\t\t\tdst.Set(src)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t}\n\treturn nil\n}\n\ntype Snapshot struct {\n\tTime time.Time\n\t// ...\n}\n\nfunc main() {\n\tsrc := Snapshot{time.Now()}\n\tdest := Snapshot{}\n\tmergo.Merge(&dest, src, mergo.WithTransformers(timeTransformer{}))\n\tfmt.Println(dest)\n\t// Will print\n\t// { 2018-01-12 01:15:00 +0000 UTC m=+0.000000001 }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Health Check Handler in Go\nDESCRIPTION: Simple HTTP handler implementation for health check endpoint that returns JSON response.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n// endpoints.go\npackage main\n\nfunc HealthCheckHandler(w http.ResponseWriter, r *http.Request) {\n    // A very simple health check.\n    w.Header().Set(\"Content-Type\", \"application/json\")\n    w.WriteHeader(http.StatusOK)\n\n    // In the future we could report back on the status of our DB, or our cache\n    // (e.g. Redis) by performing a simple PING, and include them in the response.\n    io.WriteString(w, `{\"alive\": true}`)\n}\n\nfunc main() {\n    r := mux.NewRouter()\n    r.HandleFunc(\"/health\", HealthCheckHandler)\n\n    log.Fatal(http.ListenAndServe(\"localhost:8080\", r))\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Identity Verification in Go-Redis\nDESCRIPTION: Shows how to disable the client identification phase when connecting to Redis. This option allows bypassing the automatic client library name and version reporting to the Redis server.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nrdb := redis.NewClient(&redis.Options{\n    Addr:            \"localhost:6379\",\n    Password:        \"\",\n    DB:              0,\n    DisableIdentity: true, // Disable set-info on connect\n})\n```\n\n----------------------------------------\n\nTITLE: Querying Terminal Color Scheme in Go\nDESCRIPTION: These snippets demonstrate how to query the terminal's color scheme using termenv, including foreground and background colors, and detecting dark themes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// Returns terminal's foreground color\ncolor := output.ForegroundColor()\n\n// Returns terminal's background color\ncolor := output.BackgroundColor()\n\n// Returns whether terminal uses a dark-ish background\ndarkTheme := output.HasDarkBackground()\n```\n\n----------------------------------------\n\nTITLE: Label-Based Rate Limiting Configuration\nDESCRIPTION: Advanced configuration showing how to implement rate limiting based on specific label values, with namespace-specific throttling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/limit.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- limit:\n    rate: 10\n    burst: 10\n    drop: true\n    by_label_name: \"namespace\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Stateless Gzip Compressor with Bufio Writer in Go\nDESCRIPTION: Example code for creating a stateless gzip compressor with a buffered writer to control memory usage. This approach is useful when running many concurrent compressors with limited activity, reducing memory footprint to the buffer size.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// replace 'ioutil.Discard' with your output.\ngzw, err := gzip.NewWriterLevel(ioutil.Discard, gzip.StatelessCompression)\nif err != nil {\n\treturn err\n}\ndefer gzw.Close()\n\nw := bufio.NewWriterSize(gzw, 4096)\ndefer w.Flush()\n\n// Write to 'w'\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda Promtail with CloudFormation\nDESCRIPTION: AWS CLI command to create CloudFormation stack for Lambda Promtail deployment. Includes parameters for write address, authentication, and image.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naws cloudformation create-stack --stack-name lambda-promtail --template-body file://template.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --region us-east-2 --parameters ParameterKey=WriteAddress,ParameterValue=https://logs-prod-us-central1.grafana.net/loki/api/v1/push ParameterKey=Username,ParameterValue=<user> ParameterKey=Password,ParameterValue=<password> ParameterKey=LambdaPromtailImage,ParameterValue=<repo:tag>\n```\n\n----------------------------------------\n\nTITLE: Configuring Baidu BOS in YAML\nDESCRIPTION: This snippet shows the YAML configuration for Baidu Cloud Object Storage (BOS), including bucket, endpoint, and access credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ntype: BOS\nconfig:\n  bucket: \"\"\n  endpoint: \"\"\n  access_key: \"\"\n  secret_key: \"\"\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Meta-Monitoring Helm Chart\nDESCRIPTION: Commands for adding the Grafana Helm repository and installing the meta-monitoring chart.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\nhelm install meta-monitoring grafana/meta-monitoring -n meta -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Using Go-Autorest's 'to' Helper Package for Pointers\nDESCRIPTION: Demonstrates the use of the 'to' helper package which simplifies creating pointers to Go base types, making the code more concise when working with structures that require pointers for JSON serialization.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ns := struct {\n  S *string\n}{ S: to.StringPtr(\"foo\") }\n```\n\n----------------------------------------\n\nTITLE: Docker Daemon Log Rotation Configuration\nDESCRIPTION: Example configuration for Docker daemon log rotation settings, setting maximum log file size and number of log files.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/logrotation/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"log-driver\": \"local\",\n  \"log-opts\": {\n    \"max-size\": \"10m\",\n    \"max-file\": \"10\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Attaching ECS Task Execution Policy\nDESCRIPTION: Command to attach the AmazonECSTaskExecutionRolePolicy to the created IAM role\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naws iam attach-role-policy --role-name ecsTaskExecutionRole --policy-arn \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n```\n\n----------------------------------------\n\nTITLE: Parsing RFC 2141 URN Using Parse() Function\nDESCRIPTION: Shows how to use the Parse() function to parse a URN string. It uses a boolean return value to indicate parsing success.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-urn/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/leodido/go-urn\"\n)\n\nfunc main() {\n\tvar uid = \"URN:foo:a123,456\"\n\n    // Parse the input string as a RFC 2141 URN only\n\tu, ok := urn.Parse([]byte(uid))\n\tif !ok {\n\t\tpanic(\"error parsing urn\")\n\t}\n\n\tfmt.Println(u.ID)\n\tfmt.Println(u.SS)\n\n\t// Output:\n\t// foo\n\t// a123,456\n}\n```\n\n----------------------------------------\n\nTITLE: Context-Based JSON Marshaling Interface Example - Go\nDESCRIPTION: Demonstrates the interface definitions for context-aware JSON marshaling and unmarshaling operations. These interfaces allow passing context through JSON operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype MarshalerContext interface {\n  MarshalJSON(context.Context) ([]byte, error)\n}\n\ntype UnmarshalerContext interface {\n  UnmarshalJSON(context.Context, []byte) error\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Colors and Styles to Text in Go using termenv\nDESCRIPTION: This snippet demonstrates how to apply various colors and styles to text using termenv, including hex colors, ANSI colors, and combining foreground and background colors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ns := output.String(\"Hello World\")\n\n// Supports hex values\n// Will automatically degrade colors on terminals not supporting RGB\ns.Foreground(output.Color(\"#abcdef\"))\n// but also supports ANSI colors (0-255)\ns.Background(output.Color(\"69\"))\n// ...or the color.Color interface\ns.Foreground(output.FromColor(color.RGBA{255, 128, 0, 255}))\n\n// Combine fore- & background colors\ns.Foreground(output.Color(\"#ffffff\")).Background(output.Color(\"#0000ff\"))\n\n// Supports the fmt.Stringer interface\nfmt.Println(s)\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Float16 Package in Go\nDESCRIPTION: Demonstrates how to install the float16 package and perform basic conversions between float32 and float16. It also shows how to use the PrecisionFromfloat32 function for efficient precision checking.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/x448/float16/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n// Convert float32 to float16\npi := float32(math.Pi)\npi16 := float16.Fromfloat32(pi)\n\n// Convert float16 to float32\npi32 := pi16.Float32()\n\n// PrecisionFromfloat32() is faster than the overhead of calling a function.\n// This example only converts if there's no data loss and input is not a subnormal.\nif float16.PrecisionFromfloat32(pi) == float16.PrecisionExact {\n    pi16 := float16.Fromfloat32(pi)\n}\n```\n\n----------------------------------------\n\nTITLE: Label Format Regular Expression\nDESCRIPTION: Regular expression pattern defining valid label names in Loki. Labels must contain ASCII letters, digits, underscores and colons, matching this specific pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\n[a-zA-Z_:][a-zA-Z0-9_:]*\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Cloud Infrastructure Storage with Instance Principal in Thanos\nDESCRIPTION: YAML configuration for setting up Oracle Cloud Infrastructure Object Storage in Thanos using the instance principal authentication method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ntype: OCI\nconfig:\n  provider: \"instance-principal\"\n  bucket: \"\"\n  compartment_ocid: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Prefix with Thanos\nDESCRIPTION: Example showing how to configure object storage prefix using the new Thanos client format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n   use_thanos_objstore: true # enable the new storage clients\n   object_store:\n      storage_prefix: \"prefix\"\n```\n\n----------------------------------------\n\nTITLE: Calling Lua Functions from Go\nDESCRIPTION: Shows how to call Lua functions from Go code and retrieve their return values. This example loads a Lua file, calls a global function with parameters, and processes the returned value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState()\ndefer L.Close()\nif err := L.DoFile(\"double.lua\"); err != nil {\n    panic(err)\n}\nif err := L.CallByParam(lua.P{\n    Fn: L.GetGlobal(\"double\"),\n    NRet: 1,\n    Protect: true,\n    }, lua.LNumber(10)); err != nil {\n    panic(err)\n}\nret := L.Get(-1) // returned value\nL.Pop(1)  // remove received value\n```\n\n----------------------------------------\n\nTITLE: AppArmor Security Denial Logs\nDESCRIPTION: Security logs showing AppArmor denying ptrace operations for containerd processes, indicating security policy enforcement.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_1\n\nLANGUAGE: log\nCODE:\n```\nAVC apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36674 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\n```\n\n----------------------------------------\n\nTITLE: Basic Colorstring Usage Example\nDESCRIPTION: Demonstrates how to use the colorstring library to print colored text to console. The example shows printing 'Hello World!' with 'Hello' in blue and 'World!' in red.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/colorstring/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncolorstring.Println(\"[blue]Hello [red]World!\")\n```\n\n----------------------------------------\n\nTITLE: Using Custom White Reference Points in Go\nDESCRIPTION: This snippet demonstrates how to use custom white reference points when working with colors in the go-colorful library. It shows how to create and convert colors using a specific white reference.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nc := colorful.LabWhiteRef(0.507850, 0.040585,-0.370945, colorful.D50)\nl, a, b := c.LabWhiteRef(colorful.D50)\n```\n\n----------------------------------------\n\nTITLE: Using a Custom Module in Lua\nDESCRIPTION: Demonstrates how to use a Go-implemented Lua module from Lua code. This example requires the module, calls its functions, and accesses its properties.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_16\n\nLANGUAGE: lua\nCODE:\n```\nlocal m = require(\"mymodule\")\nm.myfunc()\nprint(m.name)\n```\n\n----------------------------------------\n\nTITLE: Basic Router Setup in Go\nDESCRIPTION: Basic implementation of URL path routing using gorilla/mux router.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n    r := mux.NewRouter()\n    r.HandleFunc(\"/\", HomeHandler)\n    r.HandleFunc(\"/products\", ProductsHandler)\n    r.HandleFunc(\"/articles\", ArticlesHandler)\n    http.Handle(\"/\", r)\n}\n```\n\n----------------------------------------\n\nTITLE: Monitoring Bolt Database Stats in Go\nDESCRIPTION: This goroutine-based code captures database statistics at 10-second intervals, computes the difference between snapshots, and outputs the results as JSON to stderr. This is useful for continuous monitoring of database performance and operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_23\n\nLANGUAGE: go\nCODE:\n```\ngo func() {\n\t// Grab the initial stats.\n\tprev := db.Stats()\n\n\tfor {\n\t\t// Wait for 10s.\n\t\ttime.Sleep(10 * time.Second)\n\n\t\t// Grab the current stats and diff them.\n\t\tstats := db.Stats()\n\t\tdiff := stats.Sub(&prev)\n\n\t\t// Encode stats to JSON and print to STDERR.\n\t\tjson.NewEncoder(os.Stderr).Encode(diff)\n\n\t\t// Save stats for the next loop.\n\t\tprev = stats\n\t}\n}()\n```\n\n----------------------------------------\n\nTITLE: Using Bloom Filters for Column Filtering in Parquet Files\nDESCRIPTION: Shows how to use bloom filters when reading parquet files to quickly eliminate column chunks that don't contain the searched value, improving performance of point lookups by avoiding unnecessary data scans.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nvar candidateChunks []parquet.ColumnChunk\n\nfor _, rowGroup := range file.RowGroups() {\n    columnChunk := rowGroup.ColumnChunks()[columnIndex]\n    bloomFilter := columnChunk.BloomFilter()\n\n    if bloomFilter != nil {\n        if ok, err := bloomFilter.Check(value); err != nil {\n            ...\n        } else if !ok {\n            // Bloom filters may return false positives, but never return false\n            // negatives, we know this column chunk does not contain the value.\n            continue\n        }\n    }\n\n    candidateChunks = append(candidateChunks, columnChunk)\n}\n```\n\n----------------------------------------\n\nTITLE: New Default Ingester Configuration in Loki\nDESCRIPTION: The new default configuration for Loki's ingester as of version 2.4.0, showing changes to max_transfer_retries and WAL settings. The WAL is now enabled by default and chunk transfers are disabled.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ningester:\n  max_transfer_retries: 0\n  wal:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Frontend Service in Istio\nDESCRIPTION: Kubernetes service configuration for Loki Query Frontend with Istio-specific settings including grpclb port naming, TCP protocol specification, and publishNotReadyAddresses flag.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/istio.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: loki-query-frontend\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-query-frontend\nspec:\n  ports:\n  - appProtocol: http\n    name: http\n    port: 3100\n    protocol: TCP\n    targetPort: http\n  - appProtocol: tcp\n    name: grpclb\n    port: 9095\n    protocol: TCP\n    targetPort: grpc\n  publishNotReadyAddresses: true\n  selector:\n    app: loki-query-frontend\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/name: loki-query-frontend\n  type: ClusterIP\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with Cassandra Storage (Deprecated)\nDESCRIPTION: YAML configuration for setting up Loki with Cassandra as both chunks and indexes storage backend. Note that this configuration is deprecated but maintained for reference purposes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  cassandra:\n    addresses: <comma-separated-IPs-or-hostnames>\n    keyspace: <keyspace>\n    auth: <true|false>\n    username: <username> # only applicable when auth=true\n    password: <password> # only applicable when auth=true\n\nschema_config:\n  configs:\n    - from: 2020-07-01\n      store: cassandra\n      object_store: cassandra\n      schema: v11\n      index:\n        prefix: index_\n        period: 168h\n      chunks:\n        prefix: chunk_\n        period: 168h\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Log Input\nDESCRIPTION: Example JSON log entry that would be processed by the pipeline, containing log message, stream identifier, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labels.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Binary Deployment Mode in Loki v6\nDESCRIPTION: Configuration setting required for running Loki in Single Binary mode after upgrading to v6.x.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-to-6x/index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndeploymentMode: SingleBinary\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Exponential Histogram Aggregations in Go OpenTelemetry SDK\nDESCRIPTION: Adds support for exponential histogram aggregations in the SDK metric package. Histograms can now be configured as exponential using a view with ExponentialHistogram as the aggregation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_13\n\nLANGUAGE: Go\nCODE:\n```\nAdd support for exponential histogram aggregations.\nA histogram can be configured as an exponential histogram using a view with `\"go.opentelemetry.io/otel/sdk/metric\".ExponentialHistogram` as the aggregation.\n```\n\n----------------------------------------\n\nTITLE: Creating an Objx Map from JSON in Go\nDESCRIPTION: Example showing how to create an objx.Map instance from a JSON string. The FromJSON function returns both the map and an error, while MustFromJSON will panic if an error occurs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nm, err := objx.FromJSON(json)\n```\n\n----------------------------------------\n\nTITLE: Simple Source-based Drop Configuration\nDESCRIPTION: Example showing how to drop log lines based on the presence of specific extracted data fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- drop:\n    source: [\"level\",\"msg\"]\n```\n\n----------------------------------------\n\nTITLE: Authentication Using clouds.yaml Configuration\nDESCRIPTION: Example of authenticating with OpenStack using credentials from a clouds.yaml file to create provider and service clients.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\n\t\"github.com/gophercloud/gophercloud/v2/openstack\"\n\t\"github.com/gophercloud/gophercloud/v2/openstack/config\"\n\t\"github.com/gophercloud/gophercloud/v2/openstack/config/clouds\"\n)\n\nfunc main() {\n\tctx := context.Background()\n\n\tauthOptions, endpointOptions, tlsConfig, err := clouds.Parse()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tproviderClient, err := config.NewProviderClient(ctx, authOptions, config.WithTLSConfig(tlsConfig))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tcomputeClient, err := openstack.NewComputeV2(providerClient, endpointOptions)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// use the computeClient\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Using Middleware with Gorilla Mux in Go\nDESCRIPTION: This snippet shows how to create and use middleware with Gorilla Mux. It includes examples of a simple logging middleware and a more complex authentication middleware.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc loggingMiddleware(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        // Do stuff here\n        log.Println(r.RequestURI)\n        // Call the next handler, which can be another middleware in the chain, or the final handler.\n        next.ServeHTTP(w, r)\n    })\n}\n\nr := mux.NewRouter()\nr.HandleFunc(\"/\", handler)\nr.Use(loggingMiddleware)\n```\n\nLANGUAGE: go\nCODE:\n```\n// Define our struct\ntype authenticationMiddleware struct {\n\ttokenUsers map[string]string\n}\n\n// Initialize it somewhere\nfunc (amw *authenticationMiddleware) Populate() {\n\tamw.tokenUsers[\"00000000\"] = \"user0\"\n\tamw.tokenUsers[\"aaaaaaaa\"] = \"userA\"\n\tamw.tokenUsers[\"05f717e5\"] = \"randomUser\"\n\tamw.tokenUsers[\"deadbeef\"] = \"user0\"\n}\n\n// Middleware function, which will be called for each request\nfunc (amw *authenticationMiddleware) Middleware(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        token := r.Header.Get(\"X-Session-Token\")\n\n        if user, found := amw.tokenUsers[token]; found {\n        \t// We found the token in our map\n        \tlog.Printf(\"Authenticated user %s\\n\", user)\n        \t// Pass down the request to the next middleware (or final handler)\n        \tnext.ServeHTTP(w, r)\n        } else {\n        \t// Write an error and stop the handler chain\n        \thttp.Error(w, \"Forbidden\", http.StatusForbidden)\n        }\n    })\n}\n\nr := mux.NewRouter()\nr.HandleFunc(\"/\", handler)\n\namw := authenticationMiddleware{tokenUsers: make(map[string]string)}\namw.Populate()\n\nr.Use(amw.Middleware)\n```\n\n----------------------------------------\n\nTITLE: Logging Metrics to Syslog in Go\nDESCRIPTION: Shows how to periodically log metrics in a parseable form to syslog using the Syslog function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nw, _ := syslog.Dial(\"unixgram\", \"/dev/log\", syslog.LOG_INFO, \"metrics\")\ngo metrics.Syslog(metrics.DefaultRegistry, 60e9, w)\n```\n\n----------------------------------------\n\nTITLE: Building Loki Using Make (Bash)\nDESCRIPTION: Alternative method for building Loki on Unix systems using make, which adds additional arguments to the go build command.\nSOURCE: https://github.com/grafana/loki/blob/main/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Build binary\n$ make loki\n\n# Run executable\n$ ./cmd/loki/loki -config.file=./cmd/loki/loki-local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Refactoring filepath.Walk to filepath.WalkDir in Go\nDESCRIPTION: Bug fix that refactors the use of filepath.Walk to filepath.WalkDir for improved performance and functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/internal/ini/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nfilepath.WalkDir\n```\n\n----------------------------------------\n\nTITLE: Configuring File-based Service Discovery in YAML for Loki\nDESCRIPTION: This YAML configuration defines settings for file-based service discovery in Loki. It specifies patterns for files from which target groups are extracted and the refresh interval for re-reading these files.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_40\n\nLANGUAGE: yaml\nCODE:\n```\nfiles:\n  [ - <filename_pattern> ... ]\n\n[ refresh_interval: <duration> | default = 5m ]\n```\n\n----------------------------------------\n\nTITLE: Using vfsgendev with Go Generate\nDESCRIPTION: Example showing how to use the vfsgendev command with a go generate directive to generate code from a specified source filesystem.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_8\n\nLANGUAGE: Go\nCODE:\n```\n//go:generate vfsgendev -source=\"example.com/project/data\".Assets\n```\n\n----------------------------------------\n\nTITLE: Implementing CRI Stage in Promtail Pipeline\nDESCRIPTION: Demonstrates how to implement the 'cri' stage in a Promtail pipeline configuration. This simple example shows the minimal required configuration for the CRI stage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/cri.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- cri: {}\n```\n\n----------------------------------------\n\nTITLE: Comparing Unstructured and Structured Logging in Go\nDESCRIPTION: Demonstrates the difference between unstructured logging using the standard library and structured logging using Go Kit's log package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/log/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Unstructured\nlog.Printf(\"HTTP server listening on %s\", addr)\n\n// Structured\nlogger.Log(\"transport\", \"HTTP\", \"addr\", addr, \"msg\", \"listening\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Table Manager in Loki\nDESCRIPTION: Configuration block for the table manager component that handles data retention policies.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n[table_manager: <table_manager>]\n```\n\n----------------------------------------\n\nTITLE: Logging Image Pull Operation in Go\nDESCRIPTION: This code snippet shows logging of an image pull operation in a Kubernetes environment. It includes the image name, pull duration, and resulting image details such as ID and size.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_24\n\nLANGUAGE: go\nCODE:\n```\ntime=\"2024-05-07T11:59:38.116062821Z\" level=info msg=\"Pulled image \\\"us.gcr.io/hosted-grafana/hgrun:0.1.452\\\" with image id \\\"sha256:9fb1bce3e4a228f50768d21842cd7d7fafc1d586eaa0326c9d3c86d79a36868a\\\", repo tag \\\"us.gcr.io/hosted-grafana/hgrun:0.1.452\\\", repo digest \\\"us.gcr.io/hosted-grafana/hgrun@sha256:b492dbbbee9faf9dba63c9fd89e6f9e148239765454c6a54c4284a2828dec153\\\", size \\\"19109699\\\" in 781.210092ms\"\n```\n\n----------------------------------------\n\nTITLE: Injecting Baggage via HTTP Header in Curl\nDESCRIPTION: Demonstrates how to inject baggage key-value pairs into a trace using a special HTTP header with curl.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncurl -H \"jaeger-baggage: key1=value1, key2=value2\" http://myhost.com\n```\n\n----------------------------------------\n\nTITLE: Configuring CRI Stage Schema in YAML\nDESCRIPTION: Defines the schema for the 'cri' stage in Promtail's pipeline configuration. It includes optional parameters for managing partial lines and buffer sizes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/cri.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncri:\n  # Max buffer size to hold partial lines.\n  [max_partial_lines: <int> | default = 100]\n\n  # Max line size to hold a single partial line, if max_partial_line_size_truncate is true. Example: 262144.\n  [max_partial_line_size: <int> | default = 0]\n\n  # Allows to pretruncate partial lines before storing in partial buffer.\n  [max_partial_line_size_truncate: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Creating Google Cloud Storage Secret for Loki\nDESCRIPTION: Command to create a Kubernetes secret for Google Cloud Storage authentication. This secret contains the bucket name and service account key file needed for Loki to authenticate with GCS.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-gcs \\\n  --from-literal=bucketname=\"<BUCKET_NAME>\" \\\n  --from-file=key.json=\"<PATH/TO/KEY.JSON>\"\n```\n\n----------------------------------------\n\nTITLE: Exporting Container Client Methods\nDESCRIPTION: Directive to remove pager methods and export various generated methods in the ContainerClient to provide more flexibility for custom implementations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n  - from: zz_container_client.go\n    where: $\n    transform: >\n      return $.\n        replace(/func \\(client \\*ContainerClient\\) NewListBlobFlatSegmentPager\\(.+\\/\\/\\ listBlobFlatSegmentCreateRequest creates the ListBlobFlatSegment request/s, `//\\n// listBlobFlatSegmentCreateRequest creates the ListBlobFlatSegment request`).\n        replace(/\\(client \\*ContainerClient\\) listBlobFlatSegmentCreateRequest\\(/, `(client *ContainerClient) ListBlobFlatSegmentCreateRequest(`).\n        replace(/\\(client \\*ContainerClient\\) listBlobFlatSegmentHandleResponse\\(/, `(client *ContainerClient) ListBlobFlatSegmentHandleResponse(`);\n```\n\n----------------------------------------\n\nTITLE: Creating AWS S3 Object Storage Secret with SSE-KMS Encryption\nDESCRIPTION: Command to create a Kubernetes secret for AWS S3 storage with SSE-KMS encryption. This includes additional fields for KMS key ID and encryption context to enable server-side encryption.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-s3 \\\n  --from-literal=bucketnames=\"<BUCKET_NAME>\" \\\n  --from-literal=endpoint=\"<AWS_BUCKET_ENDPOINT>\" \\\n  --from-literal=access_key_id=\"<AWS_ACCESS_KEY_ID>\" \\\n  --from-literal=access_key_secret=\"<AWS_ACCESS_KEY_SECRET>\" \\\n  --from-literal=sse_type=\"SSE-KMS\" \\\n  --from-literal=sse_kms_key_id=\"<AWS_SSE_KMS_KEY_ID>\" \\\n  --from-literal=sse_kms_encryption_context=\"<OPTIONAL_AWS_SSE_KMS_ENCRYPTION_CONTEXT_JSON>\"\n```\n\n----------------------------------------\n\nTITLE: Device Code Authentication in Go\nDESCRIPTION: Implementation of device code flow for interactive authentication scenarios\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/adal/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\noauthClient := &http.Client{}\n\n// Acquire the device code\ndeviceCode, err := adal.InitiateDeviceAuth(\n\toauthClient,\n\t*oauthConfig,\n\tapplicationID,\n\tresource)\nif err != nil {\n\treturn nil, fmt.Errorf(\"Failed to start device auth flow: %s\", err)\n}\n\n// Display the authentication message\nfmt.Println(*deviceCode.Message)\n\n// Wait here until the user is authenticated\ntoken, err := adal.WaitForUserCompletion(oauthClient, deviceCode)\nif err != nil {\n\treturn nil, fmt.Errorf(\"Failed to finish device auth flow: %s\", err)\n}\n\nspt, err := adal.NewServicePrincipalTokenFromManualToken(\n\t*oauthConfig,\n\tapplicationID,\n\tresource,\n\t*token,\n\tcallbacks...)\n\nif (err == nil) {\n    token := spt.Token\n}\n```\n\n----------------------------------------\n\nTITLE: Function to Open File in Browser Window\nDESCRIPTION: The OpenFile function opens a new browser window to display the content of the file at the specified path.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/browser/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc OpenFile(path string) error\n```\n\n----------------------------------------\n\nTITLE: Formatting Floats without Trailing Zeros in Go\nDESCRIPTION: Shows how to use humanize.Ftoa() to format float64 values without unnecessary trailing zeros.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfmt.Printf(\"%f\", 2.24)                // 2.240000\nfmt.Printf(\"%s\", humanize.Ftoa(2.24)) // 2.24\nfmt.Printf(\"%f\", 2.0)                 // 2.000000\nfmt.Printf(\"%s\", humanize.Ftoa(2.0))  // 2\n```\n\n----------------------------------------\n\nTITLE: Using ReadSeeker with S2 Compression in Go\nDESCRIPTION: Creates a ReadSeeker from an S2 decoder that reads the index from the stream, allowing forward seeking within the compressed data. Requires the input reader to support the io.Seeker interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n\tdec := s2.NewReader(r)\n\trs, err := dec.ReadSeeker(false, nil)\n\trs.Seek(wantOffset, io.SeekStart)\t\n```\n\n----------------------------------------\n\nTITLE: Defining Ruler Struct in Go\nDESCRIPTION: Defines the Ruler struct, which is the main custom resource for Loki ruler configuration. It includes metadata, spec, and status fields.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n//+kubebuilder:object:root=true\n//+kubebuilder:subresource:status\n\n// Ruler is the Schema for the lokirulers API\ntype Ruler struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n\n    Spec   RulerSpec   `json:\"spec,omitempty\"`\n    Status RulerStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Service State Diagram\nDESCRIPTION: A text-based diagram illustrating the different states of a service and their transitions. It shows the flow from New to Starting, Running, Stopping, and finally to Terminated or Failed states.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/services/README.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   ┌────────────────────────────────────────────────────────────────────┐\n   │                                                                    │\n   │                                                                    ▼\n┌─────┐      ┌──────────┐      ┌─────────┐     ┌──────────┐      ┌────────────┐\n│ New │─────▶│ Starting │─────▶│ Running │────▶│ Stopping │───┬─▶│ Terminated │\n└─────┘      └──────────┘      └─────────┘     └──────────┘   │  └────────────┘\n                   │                                          │\n                   │                                          │\n                   │                                          │   ┌────────┐\n                   └──────────────────────────────────────────┴──▶│ Failed │\n                                                                  └────────┘\n```\n\n----------------------------------------\n\nTITLE: Using Standard Go JSON Unmarshal Method\nDESCRIPTION: Example showing how to use the standard Go encoding/json package's Unmarshal method. This serves as a reference for comparison with the JSON-Iterator approach.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/json-iterator/go/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport \"encoding/json\"\njson.Unmarshal(input, &data)\n```\n\n----------------------------------------\n\nTITLE: Listing Rules in Loki API (Prometheus-compatible)\nDESCRIPTION: GET endpoint to list alerting and recording rules that are currently loaded. Supports optional filtering by type, file, rule_group, and rule_name parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\nGET /prometheus/api/v1/rules?type={alert|record}&file={}&rule_group={}&rule_name={}\n```\n\n----------------------------------------\n\nTITLE: Implementing Webhook Handler in Go\nDESCRIPTION: Go function implementing the webhook handler to process pod binding requests and inject topology labels as annotations.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc (wh *mutatingWebhook) Handle(ctx context.Context, request admission.Request) admission.Response {\n  binding := &v1.Binding{}\n\n  // Decode the /bind request\n  err := wh.decoder.DecodeRaw(request.Object, binding)\n  if err != nil {...}\n\n\n  if err := retry.RetryOnConflict(retry.DefaultRetry, func() error {\n     // 1. Read the current Pod specification\n     key := client.ObjectKey{Namespace: binding.ObjectMeta.Namespace, Name: binding.ObjectMeta.Name}\n     pod := &v1.Pod{}\n     if err := wh.client.Get(ctx, key, pod); err != nil {...}\n     // get the topology keys from the pods where the pod.spec.topologySpreadConstraints.topologyKey is set\n     kv, err := getTopologyKeyValue(ctx, wh.client, binding.Target.Name, pod.spec.topologySpreadConstraints.topologyKey)\n     if err != nil {...}\n     if pod.Annotations == nil {\n        pod.Annotations = make(map[string]string)\n     }\n     // 2. Add topology keys to the Pod's annotations\n     for k, v := range kv {\n        if k == topologyKey {\n          pod.Annotations[k] = v\n        }\n     }\n     // 3. Update the Pod\n     return wh.client.Update(ctx, pod)\n  }); err != nil {...}\n}\n```\n\n----------------------------------------\n\nTITLE: Installing bbolt via Go Modules\nDESCRIPTION: Commands to install the bbolt library and command line utility using Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ go get go.etcd.io/bbolt@latest\n```\n\nLANGUAGE: sh\nCODE:\n```\n$ go run go.etcd.io/bbolt/cmd/bbolt@latest\n```\n\nLANGUAGE: sh\nCODE:\n```\n$ go install go.etcd.io/bbolt/cmd/bbolt@latest\n```\n\n----------------------------------------\n\nTITLE: Defining Core Bucket Interface in Go\nDESCRIPTION: Defines the main Bucket interface that provides read and write access to object storage. Includes methods for uploading, deleting and naming objects.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Bucket provides read and write access to an object storage bucket.\n// NOTE: We assume strong consistency for write-read flow.\ntype Bucket interface {\n\tio.Closer\n\tBucketReader\n\n\tProvider() ObjProvider\n\n\t// Upload the contents of the reader as an object into the bucket.\n\t// Upload should be idempotent.\n\tUpload(ctx context.Context, name string, r io.Reader) error\n\n\t// Delete removes the object with the given name.\n\t// If object does not exist in the moment of deletion, Delete should throw error.\n\tDelete(ctx context.Context, name string) error\n\n\t// Name returns the bucket name for the provider.\n\tName() string\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing an In-Memory Cache with Go Generics\nDESCRIPTION: Example demonstrating how to create and use the go-generics-cache library. Shows both a basic context-bound cache and a specialized Number cache with increment/decrement operations and expiration times.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Code-Hex/go-generics-cache/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\tcache \"github.com/Code-Hex/go-generics-cache\"\n)\n\nfunc main() {\n\tctx, cancel := context.WithCancel(context.Background())\n\tdefer cancel()\n\n\t// use simple cache algorithm without options.\n\tc := cache.NewContext[string, int](ctx)\n\tc.Set(\"a\", 1)\n\tgota, aok := c.Get(\"a\")\n\tgotb, bok := c.Get(\"b\")\n\tfmt.Println(gota, aok) // 1 true\n\tfmt.Println(gotb, bok) // 0 false\n\n\t// Create a cache for Number constraint. key as string, value as int.\n\tnc := cache.NewNumber[string, int]()\n\tnc.Set(\"age\", 26, cache.WithExpiration(time.Hour))\n\n\tincremented := nc.Increment(\"age\", 1)\n\tfmt.Println(incremented) // 27\n\n\tdecremented := nc.Decrement(\"age\", 1)\n\tfmt.Println(decremented) // 26\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Helm Testing Cluster for Grafana Loki with k3d\nDESCRIPTION: Commands to create an empty Helm cluster and install enterprise logs using make commands. This creates a minimal test environment specifically for validating Helm charts without additional dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/k3d/environments/helm-cluster/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake helm-cluster\nmake helm-install-enterprise-logs\n```\n\n----------------------------------------\n\nTITLE: Future Timestamp Validation Error Properties\nDESCRIPTION: Configuration and response properties for the too_far_in_future error that occurs when sample timestamps exceed the allowed grace period.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/request-validation-rate-limits.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                | Value             |\n|-------------------------|-------------------|\n| Enforced by             | `distributor`     |\n| Outcome                 | Request rejected  |\n| Retryable               | **No**            |\n| Sample discarded        | **Yes**           |\n| Configurable per tenant | Yes               |\n| HTTP status code        | `400 Bad Request` |\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Docker Containers\nDESCRIPTION: Commands to pull Loki and Promtail Docker container images from Docker Hub using version tags.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/release-note.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ docker pull \"grafana/loki:${DRONE_TAG_NO_V}\"\n$ docker pull \"grafana/promtail:${DRONE_TAG_NO_V}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring System-wide Logger with go-hclog in Go\nDESCRIPTION: Shows how to configure the system-wide logger to use hclog, allowing standard library log calls to be captured by hclog.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n// log the standard logger from 'import \"log\"'\nlog.SetOutput(appLogger.StandardWriter(&hclog.StandardLoggerOptions{InferLevels: true}))\nlog.SetPrefix(\"\")\nlog.SetFlags(0)\n\nlog.Printf(\"[DEBUG] %d\", 42)\n```\n\n----------------------------------------\n\nTITLE: Using HTTP Request Pipeline in Go-Autorest\nDESCRIPTION: Demonstrates the typical pattern for using go-autorest's HTTP request pipeline with its three phases: Prepare for building requests, Send for executing requests with various options, and Respond for handling responses.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nreq, err := Prepare(&http.Request{},\n  token.WithAuthorization())\n\nresp, err := Send(req,\n  WithLogging(logger),\n  DoErrorIfStatusCode(http.StatusInternalServerError),\n  DoCloseIfError(),\n  DoRetryForAttempts(5, time.Second))\n\nerr = Respond(resp,\n\t\tByDiscardingBody(),\n  ByClosing())\n```\n\n----------------------------------------\n\nTITLE: Implementing Expirable LRU Cache in Go\nDESCRIPTION: This snippet shows how to create and use an expirable LRU cache with a TTL of 10ms and a maximum of 5 keys. It demonstrates adding a key-value pair, retrieving it before and after expiration, and adding a new key after the previous one has expired.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/golang-lru/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/hashicorp/golang-lru/v2/expirable\"\n)\n\nfunc main() {\n\t// make cache with 10ms TTL and 5 max keys\n\tcache := expirable.NewLRU[string, string](5, nil, time.Millisecond*10)\n\n\n\t// set value under key1.\n\tcache.Add(\"key1\", \"val1\")\n\n\t// get value under key1\n\tr, ok := cache.Get(\"key1\")\n\n\t// check for OK value\n\tif ok {\n\t\tfmt.Printf(\"value before expiration is found: %v, value: %q\\n\", ok, r)\n\t}\n\n\t// wait for cache to expire\n\ttime.Sleep(time.Millisecond * 12)\n\n\t// get value under key1 after key expiration\n\tr, ok = cache.Get(\"key1\")\n\tfmt.Printf(\"value after expiration is found: %v, value: %q\\n\", ok, r)\n\n\t// set value under key2, would evict old entry because it is already expired.\n\tcache.Add(\"key2\", \"val2\")\n\n\tfmt.Printf(\"Cache len: %d\\n\", cache.Len())\n\t// Output:\n\t// value before expiration is found: true, value: \"val1\"\n\t// value after expiration is found: false, value: \"\"\n\t// Cache len: 1\n}\n```\n\n----------------------------------------\n\nTITLE: Using 'on' Keyword in LogQL\nDESCRIPTION: Shows how to use the 'on' keyword to calculate the ratio of machine-specific log counts to the total count in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_11\n\nLANGUAGE: logql\nCODE:\n```\nsum by(machine) (count_over_time({app=\"foo\"}[1m])) / on() sum(count_over_time({app=\"foo\"}[1m]))\n```\n\n----------------------------------------\n\nTITLE: Initializing Google Cloud Storage Client with JSON Key File in Go\nDESCRIPTION: Creates a new Google Cloud Storage client using a JSON key file for authentication. This method provides more control over the authorization process.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nclient, err := storage.NewClient(ctx, option.WithCredentialsFile(\"path/to/keyfile.json\"))\n```\n\n----------------------------------------\n\nTITLE: Building Promtail with Journal Support on Ubuntu (Bash)\nDESCRIPTION: Instructions for building Promtail with systemd journal support on Ubuntu, which requires installing systemd headers.\nSOURCE: https://github.com/grafana/loki/blob/main/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt install -y libsystemd-dev\n$ go build --tags=promtail_journal_enabled ./clients/cmd/promtail\n```\n\n----------------------------------------\n\nTITLE: Implementing Natural String Sorting using natsort in Go\nDESCRIPTION: This code snippet demonstrates how to use the natsort package to sort a list of strings containing alphanumeric values. It imports the necessary packages, defines a list of strings, sorts them using natsort.Sort(), and prints the sorted result.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/facette/natsort/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"fmt\"\n    \"strings\"\n\n    \"facette.io/natsort\"\n)\n\nfunc main() {\n    list := []string{\n        \"1000X Radonius Maximus\",\n        \"10X Radonius\",\n        \"200X Radonius\",\n        \"20X Radonius\",\n        \"20X Radonius Prime\",\n        \"30X Radonius\",\n        \"40X Radonius\",\n        \"Allegia 50 Clasteron\",\n        \"Allegia 500 Clasteron\",\n        \"Allegia 50B Clasteron\",\n        \"Allegia 51 Clasteron\",\n        \"Allegia 6R Clasteron\",\n        \"Alpha 100\",\n        \"Alpha 2\",\n        \"Alpha 200\",\n        \"Alpha 2A\",\n        \"Alpha 2A-8000\",\n        \"Alpha 2A-900\",\n        \"Callisto Morphamax\",\n        \"Callisto Morphamax 500\",\n        \"Callisto Morphamax 5000\",\n        \"Callisto Morphamax 600\",\n        \"Callisto Morphamax 6000 SE\",\n        \"Callisto Morphamax 6000 SE2\",\n        \"Callisto Morphamax 700\",\n        \"Callisto Morphamax 7000\",\n        \"Xiph Xlater 10000\",\n        \"Xiph Xlater 2000\",\n        \"Xiph Xlater 300\",\n        \"Xiph Xlater 40\",\n        \"Xiph Xlater 5\",\n        \"Xiph Xlater 50\",\n        \"Xiph Xlater 500\",\n        \"Xiph Xlater 5000\",\n        \"Xiph Xlater 58\",\n    }\n\n    natsort.Sort(list)\n\n    fmt.Println(strings.Join(list, \"\\n\"))\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Authenticating Swift Connection in Go\nDESCRIPTION: This snippet demonstrates how to create a connection to Swift object storage, authenticate with it, and list containers. It shows the basic setup for Swift client in a Go application using the ncw/swift/v2 package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/ncw/swift/v2\"\n\n// Create a connection\nc := swift.Connection{\nUserName: \"user\",\nApiKey:   \"key\",\nAuthUrl:  \"auth_url\",\nDomain:   \"domain\", // Name of the domain (v3 auth only)\nTenant:   \"tenant\", // Name of the tenant (v2 auth only)\n}\n// Authenticate\nerr := c.Authenticate()\nif err != nil {\npanic(err)\n}\n// List all the containers\ncontainers, err := c.ContainerNames(nil)\nfmt.Println(containers)\n// etc...\n```\n\n----------------------------------------\n\nTITLE: Time Sharding Configuration Example\nDESCRIPTION: Configuration setting for enabling per-tenant time sharding for long out-of-order log ingestion. Splits incoming log streams using a __time_shard__ synthetic label with 1h intervals.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nshard_streams:\n  time_sharding_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with IBM COS Single Store\nDESCRIPTION: YAML configuration for setting up Loki with IBM Cloud Object Storage (COS) as the storage backend. Includes TSDB shipper configuration and COS-specific settings like bucket names, endpoints, and authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/storage.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nschema_config:\n  configs:\n    - from: 2020-10-01\n      index:\n        period: 24h\n        prefix: loki_index_\n      object_store: cos\n      schema: v13\n      store: tsdb\n\nstorage_config:\n  tsdb_shipper:\n   active_index_directory: /loki/index\n   cache_location: /loki/index_cache\n  cos:\n    bucketnames: <bucket1, bucket2>\n    endpoint: <endpoint>\n    api_key: <api_key_to_authenticate_with_cos>\n    region: <region>\n    service_instance_id: <cos_service_instance_id>\n    auth_endpoint: <iam_endpoint_for_authentication>\n```\n\n----------------------------------------\n\nTITLE: Using GoUtils Random Function with Error Handling in Go\nDESCRIPTION: Shows how to use the Random function from GoUtils with proper error handling. This example demonstrates handling invalid parameters that trigger error returns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/goutils/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/Masterminds/goutils\"\n)\n\nfunc main() {\n\n    // EXAMPLE 2: A goutils function which returns an error\n    rand1, err1 := goutils.Random (-1, 0, 0, true, true)  \n\n    if err1 != nil {\n        fmt.Println(err1) // Prints out error message because -1 was entered as the first parameter in goutils.Random(...)\n    } else {\n        fmt.Println(rand1)\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Unmarshaling and Marshaling YAML in Go with yaml.v3 Package\nDESCRIPTION: This example demonstrates how to use the yaml.v3 package to unmarshal YAML data into Go structs and maps, and then marshal those structures back to YAML. It shows struct field tagging for customizing the output format and handling nested structures.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/yaml.v3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n        \"fmt\"\n        \"log\"\n\n        \"gopkg.in/yaml.v3\"\n)\n\nvar data = `\na: Easy!\nb:\n  c: 2\n  d: [3, 4]\n`\n\n// Note: struct fields must be public in order for unmarshal to\n// correctly populate the data.\ntype T struct {\n        A string\n        B struct {\n                RenamedC int   `yaml:\"c\"`\n                D        []int `yaml:\",flow\"`\n        }\n}\n\nfunc main() {\n        t := T{}\n    \n        err := yaml.Unmarshal([]byte(data), &t)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- t:\\n%v\\n\\n\", t)\n    \n        d, err := yaml.Marshal(&t)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- t dump:\\n%s\\n\\n\", string(d))\n    \n        m := make(map[interface{}]interface{})\n    \n        err = yaml.Unmarshal([]byte(data), &m)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- m:\\n%v\\n\\n\", m)\n    \n        d, err = yaml.Marshal(&m)\n        if err != nil {\n                log.Fatalf(\"error: %v\", err)\n        }\n        fmt.Printf(\"--- m dump:\\n%s\\n\\n\", string(d))\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Go-Colorable Package\nDESCRIPTION: Command to install the go-colorable package using go get\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-colorable/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ go get github.com/mattn/go-colorable\n```\n\n----------------------------------------\n\nTITLE: Applying True Color in Go with Lip Gloss\nDESCRIPTION: Shows how to use 24-bit True Color values for precise color control in terminal styling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nlipgloss.Color(\"#0000FF\") // good ol' 100% blue\nlipgloss.Color(\"#04B575\") // a green\nlipgloss.Color(\"#3C3C3C\") // a dark gray\n```\n\n----------------------------------------\n\nTITLE: Configuring Relabel Action in YAML for Loki\nDESCRIPTION: This YAML snippet defines the configuration for a relabel action in Loki. It specifies the action to be performed based on regex matching, with a default action of 'replace'.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\n# Action to perform based on regex matching.\n[ action: <relabel_action> | default = replace ]\n```\n\n----------------------------------------\n\nTITLE: Updating Loki YAML Configuration\nDESCRIPTION: Example of YAML configuration changes required for Loki 1.5.0, showing the removal of deprecated fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nchunk_store_config:\n  max_look_back_period: 0s # DURATION VALUES MUST HAVE A UNIT EVEN IF THEY ARE ZERO\n\ntable_manager:\n  retention_deletes_enabled: false\n  retention_period: 0s # DURATION VALUES MUST HAVE A UNIT EVEN IF THEY ARE ZERO\n```\n\n----------------------------------------\n\nTITLE: Downloading a Blob from Azure Storage\nDESCRIPTION: Example showing how to download a blob from a public storage container using anonymous access and save it to a local file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// this example accesses a public blob via anonymous access, so no credentials are required\nclient, err := azblob.NewClientWithNoCredential(\"https://azurestoragesamples.blob.core.windows.net/\", nil)\n// TODO: handle error\n\n// create or open a local file where we can download the blob\nfile, err := os.Create(\"cloud.jpg\")\n// TODO: handle error\ndefer file.Close()\n\n// download the blob\n_, err = client.DownloadFile(context.TODO(), \"samples\", \"cloud.jpg\", file, nil)\n// TODO: handle error\n```\n\n----------------------------------------\n\nTITLE: Installing sockaddr CLI Utility in Go\nDESCRIPTION: This command installs the sockaddr CLI utility, which exposes nearly all of the functionality of the go-sockaddr library and can be used as an administrative or testing tool.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-sockaddr/README.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n$ go install github.com/hashicorp/go-sockaddr/cmd/sockaddr@latest\n```\n\n----------------------------------------\n\nTITLE: Prefix Scan in Bolt Database (Go)\nDESCRIPTION: Demonstrates how to perform a prefix scan on keys in a Bolt database bucket. It uses Seek() and bytes.HasPrefix() to iterate over keys with a specific prefix.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\ndb.View(func(tx *bolt.Tx) error {\n\t// Assume bucket exists and has keys\n\tc := tx.Bucket([]byte(\"MyBucket\")).Cursor()\n\n\tprefix := []byte(\"1234\")\n\tfor k, v := c.Seek(prefix); k != nil && bytes.HasPrefix(k, prefix); k, v = c.Next() {\n\t\tfmt.Printf(\"key=%s, value=%s\\n\", k, v)\n\t}\n\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Measuring Method Execution Time in Go\nDESCRIPTION: This snippet demonstrates how to profile the runtime of a method using the metrics package. It uses the MeasureSince function to record the duration of the SlowMethod execution.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/armon/go-metrics/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc SlowMethod() {\n    // Profiling the runtime of a method\n    defer metrics.MeasureSince([]string{\"SlowMethod\"}, time.Now())\n}\n```\n\n----------------------------------------\n\nTITLE: Map Validation Example in Go\nDESCRIPTION: Shows how to validate maps using template-based validation rules. Validates nested maps with various field types and validation rules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nvar mapTemplate = map[string]interface{}{\n\t\"name\":\"required,alpha\",\n\t\"family\":\"required,alpha\",\n\t\"email\":\"required,email\",\n\t\"cell-phone\":\"numeric\",\n\t\"address\":map[string]interface{}{\n\t\t\"line1\":\"required,alphanum\",\n\t\t\"line2\":\"alphanum\",\n\t\t\"postal-code\":\"numeric\",\n\t},\n}\n\nvar inputMap = map[string]interface{}{\n\t\"name\":\"Bob\",\n\t\"family\":\"Smith\",\n\t\"email\":\"foo@bar.baz\",\n\t\"address\":map[string]interface{}{\n\t\t\"line1\":\"\",\n\t\t\"line2\":\"\",\n\t\t\"postal-code\":\"\",\n\t},\n}\n\nresult, err := govalidator.ValidateMap(inputMap, mapTemplate)\nif err != nil {\n\tprintln(\"error: \" + err.Error())\n}\nprintln(result)\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Configuration Updates\nDESCRIPTION: Various Helm chart configuration improvements including client_max_body_size configuration, service annotations, environment variables, and persistence options for memcached.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-3.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nclient_max_body_size: ${size}\nextraEnvFrom: []\nkubeVersionOverride: \"\"\npersistence:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Socket Package Version History Documentation\nDESCRIPTION: A structured changelog detailing version history, API changes, improvements, bug fixes and compatibility requirements across multiple releases of the socket package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mdlayher/socket/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# CHANGELOG\n\n## v0.5.1\n\n- [Improvement]: revert `go.mod` to Go 1.20 to [resolve an issue around Go\n  module version upgrades](https://github.com/mdlayher/socket/issues/13).\n\n## v0.5.0\n\n**This is the first release of package socket that only supports Go 1.21+.\nUsers on older versions of Go must use v0.4.1.**\n\n- [Improvement]: drop support for older versions of Go.\n- [New API]: add `socket.Conn` wrappers for various `Getsockopt` and\n  `Setsockopt` system calls.\n\n## v0.4.1\n\n- [Bug Fix] [commit](https://github.com/mdlayher/socket/commit/2a14ceef4da279de1f957c5761fffcc6c87bbd3b):\n  ensure `socket.Conn` can be used with non-socket file descriptors by handling\n  `ENOTSOCK` in the constructor.\n\n## v0.4.0\n\n**This is the first release of package socket that only supports Go 1.18+.\nUsers on older versions of Go must use v0.3.0.**\n\n- [Improvement]: drop support for older versions of Go so we can begin using\n  modern versions of `x/sys` and other dependencies.\n\n## v0.3.0\n\n**This is the last release of package socket that supports Go 1.17 and below.**\n\n- [New API/API change] [PR](https://github.com/mdlayher/socket/pull/8):\n  numerous `socket.Conn` methods now support context cancelation. Future\n  releases will continue adding support as needed.\n  - New `ReadContext` and `WriteContext` methods.\n  - `Connect`, `Recvfrom`, `Recvmsg`, `Sendmsg`, and `Sendto` methods now accept\n    a context.\n  - `Sendto` parameter order was also fixed to match the underlying syscall.\n\n## v0.2.3\n\n- [New API] [commit](https://github.com/mdlayher/socket/commit/a425d96e0f772c053164f8ce4c9c825380a98086):\n  `socket.Conn` has new `Pidfd*` methods for wrapping the `pidfd_*(2)` family of\n  system calls.\n\n## v0.2.2\n\n- [New API] [commit](https://github.com/mdlayher/socket/commit/a2429f1dfe8ec2586df5a09f50ead865276cd027):\n  `socket.Conn` has new `IoctlKCM*` methods for wrapping `ioctl(2)` for `AF_KCM`\n  operations.\n\n## v0.2.1\n\n- [New API] [commit](https://github.com/mdlayher/socket/commit/b18ddbe9caa0e34552b4409a3aa311cb460d2f99):\n  `socket.Conn` has a new `SetsockoptPacketMreq` method for wrapping\n  `setsockopt(2)` for `AF_PACKET` socket options.\n\n## v0.2.0\n\n- [New API] [commit](https://github.com/mdlayher/socket/commit/6e912a68523c45e5fd899239f4b46c402dd856da):\n  `socket.FileConn` can be used to create a `socket.Conn` from an existing\n  `os.File`, which may be provided by systemd socket activation or another\n  external mechanism.\n- [API change] [commit](https://github.com/mdlayher/socket/commit/66d61f565188c23fe02b24099ddc856d538bf1a7):\n  `socket.Conn.Connect` now returns the `unix.Sockaddr` value provided by\n  `getpeername(2)`, since we have to invoke that system call anyway to verify\n  that a connection to a remote peer was successfully established.\n- [Bug Fix] [commit](https://github.com/mdlayher/socket/commit/b60b2dbe0ac3caff2338446a150083bde8c5c19c):\n  check the correct error from `unix.GetsockoptInt` in the `socket.Conn.Connect`\n  method. Thanks @vcabbage!\n\n## v0.1.2\n\n- [Bug Fix]: `socket.Conn.Connect` now properly checks the `SO_ERROR` socket\n  option value after calling `connect(2)` to verify whether or not a connection\n  could successfully be established. This means that `Connect` should now report\n  an error for an `AF_INET` TCP connection refused or `AF_VSOCK` connection\n  reset by peer.\n- [New API]: add `socket.Conn.Getpeername` for use in `Connect`, but also for\n  use by external callers.\n\n## v0.1.1\n\n- [New API]: `socket.Conn` now has `CloseRead`, `CloseWrite`, and `Shutdown`\n  methods.\n- [Improvement]: internal rework to more robustly handle various errors.\n\n## v0.1.0\n\n- Initial unstable release. Most functionality has been developed and ported\nfrom package [`netlink`](https://github.com/mdlayher/netlink).\n```\n\n----------------------------------------\n\nTITLE: Basic XXHash API Functions in Go\nDESCRIPTION: Core API functions for computing xxHash values, including direct hashing of bytes and strings, and creating new digest instances.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/cespare/xxhash/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc Sum64(b []byte) uint64\nfunc Sum64String(s string) uint64\ntype Digest struct{ ... }\n    func New() *Digest\n```\n\n----------------------------------------\n\nTITLE: Using Border Shorthand in Go with Lip Gloss\nDESCRIPTION: Shows how to use shorthand functions for defining borders in Lip Gloss styles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n// Add a thick border to the top and bottom\nlipgloss.NewStyle().\n    Border(lipgloss.ThickBorder(), true, false)\n\n// Add a double border to the top and left sides. Rules are set clockwise\n// from top.\nlipgloss.NewStyle().\n    Border(lipgloss.DoubleBorder(), true, false, false, true)\n```\n\n----------------------------------------\n\nTITLE: Initializing Kotel Meter with Kafka Client\nDESCRIPTION: Example showing how to set up kotel metrics with a Kafka client. It initializes a meter provider, creates a kotel meter with options, sets up the kotel service with the meter, and creates a Kafka client with the kotel hooks.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/twmb/franz-go/plugin/kotel/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// Initialize meter provider.\nmeterProvider, err := initMeterProvider()\n\n// Create a new kotel meter.\nmeterOpts := []kotel.MeterOpt{kotel.MeterProvider(meterProvider)}\nmeter := kotel.NewMeter(meterOpts...)\n\n// Pass the meter to NewKotel hook.\nkotelOps := []kotel.Opt{\n\tkotel.WithMeter(meter),\n}\n\n// Create a new kotel service.\nkotelService := kotel.NewKotel(kotelOps...)\n\n// Create a new Kafka client.\ncl, err := kgo.NewClient(\n\t// Pass in the kotel hook.\n\tkgo.WithHooks(kotelService.Hooks()...),\n\t// ...other opts.\n)\n```\n\n----------------------------------------\n\nTITLE: Updating Promtail Config for BasicAuth (YAML)\nDESCRIPTION: YAML configuration for Promtail to use BasicAuth when pushing logs to Loki. It sets the Loki URL and includes BasicAuth credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nclients:\n  - url: https://loki.service.consul/loki/api/v1/push\n    basic_auth:\n      username: promtail\n      password_file: password123\n```\n\n----------------------------------------\n\nTITLE: Creating and Submitting Pull Requests\nDESCRIPTION: Commands for creating a commit and pushing changes to your fork to open a pull request. These steps show how to track changes, commit them with a meaningful message, and push to your fork.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/contributing.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git add .\n$ git commit -m \"docs: fix spelling error\"\n$ git push -u fork HEAD\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Helm Values Configuration\nDESCRIPTION: Helm values configuration for deploying Fluent Bit in Kubernetes with Loki output.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n    outputs: |\n        [OUTPUT]\n            Name        loki\n            Match       *\n            Host        YourHost.Company.net\n            port        443\n            tls         on\n            tls.verify  on\n            http_user   XXX\n            http_passwd XXX\n            Labels agent=fluend-bit\n```\n\n----------------------------------------\n\nTITLE: Analyzing Kubernetes Pod Scheduling Failures for Loki Querier in GKE\nDESCRIPTION: Kubernetes scheduler logs showing repeated pod scheduling failures for a Loki querier pod across multiple nodes in a GKE cluster. The primary reasons for scheduling failures include node selector mismatches, insufficient CPU and memory resources, and pod taint incompatibilities.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_2\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.984182       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-7jmw\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.984157       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.984017       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-6qq6\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.983998       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.983898       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-hg-n2s8-6-1dd39c-3bfd06e9-tjd7\" error:=\"[pod node selector does not match the node label, pod does not tolerate taints on the node, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.983857       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.983625       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-xv96\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.983611       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.983494       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-97ds\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.983481       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.983395       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-qmgr\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.983370       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.983153       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-n56x\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.983128       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.982977       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-m294\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.982957       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.982779       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-dd5b\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory, insufficient pods]\"\nI0507 12:02:27.982756       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.982476       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-5rdf\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.982456       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.982240       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-4kpb\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.982218       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.982082       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-h9bx\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.982056       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.981917       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-q6f2\" error:=\"[pod node selector does not match the node label, insufficient memory, insufficient cpu]\"\nI0507 12:02:27.981888       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.981639       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-hg-n2s8-6-1dd39c-3bfd06e9-4hrn\" error:=\"[pod node selector does not match the node label, pod does not tolerate taints on the node]\"\nI0507 12:02:27.981618       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.981517       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-cvf5\" error:=\"[pod node selector does not match the node label, insufficient memory, insufficient cpu]\"\nI0507 12:02:27.981489       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.981269       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-r94w\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.981238       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.980922       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-lw2b\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.980893       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.980636       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-995l\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.980611       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.980489       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-lv5d\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.980467       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.980082       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-psgn\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.980064       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.979950       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-cache-n2hc8-1-1d-61155fd9-hww7\" error:=\"[pod node selector does not match the node label, pod does not tolerate taints on the node, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.979933       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.979864       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-g9gd\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.979836       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.979580       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-sskn\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.979556       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.979425       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-dhmp\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.979400       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Init Method for Bubble Tea Model\nDESCRIPTION: Defines the Init method for the model, which is called when the program starts. In this case, it returns nil as no initial commands are needed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc (m model) Init() tea.Cmd {\n    // Just return `nil`, which means \"no I/O right now, please.\"\n    return nil\n}\n```\n\n----------------------------------------\n\nTITLE: Block-Based Compression with Zstd in Go\nDESCRIPTION: Shows how to compress individual blocks of data using the EncodeAll method of a reusable zstd encoder. This approach is optimized for small blocks and can run without allocations after warmup when properly reused.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nimport \"github.com/klauspost/compress/zstd\"\n\n// Create a writer that caches compressors.\n// For this operation type we supply a nil Reader.\nvar encoder, _ = zstd.NewWriter(nil)\n\n// Compress a buffer. \n// If you have a destination buffer, the allocation in the call can also be eliminated.\nfunc Compress(src []byte) []byte {\n    return encoder.EncodeAll(src, make([]byte, 0, len(src)))\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Cluster Status Request Flow with Sequence Diagram\nDESCRIPTION: A sequence diagram showing the request flow when a user views cluster status, including how a node queries its peers for status and returns a consolidated response.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sequence\nCODE:\n```\nBrowser->Node 1: GET /ui/api/v1/cluster/nodes\nNode 1->Node 2: Fetch status\nNode 1->Node 3: Fetch status\nNode 2-->Node 1: Status response\nNode 3-->Node 1: Status response\nNode 1-->Browser: Combined cluster state\n```\n\n----------------------------------------\n\nTITLE: Current Monotonic Block Order in Loki\nDESCRIPTION: ASCII diagram showing the current block structure with monotonically increasing timestamps, where each block contains data for a strictly sequential time range.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/2021-01-Ordering-Constraint-Removal.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nFigure 2\n\nstart       end\nts0         ts1          ts2        ts3\n--------------           --------------\n|            |           |            |\n|            | --------> |            |\n|            |           |            |\n|            |           |            |\n--------------           --------------\n```\n\n----------------------------------------\n\nTITLE: Rendering Lists with Lip Gloss in Go\nDESCRIPTION: Shows how to use the Lip Gloss list sub-package to create and style lists. Includes creating simple and nested lists, customizing enumerators, and styling list items.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_26\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/charmbracelet/lipgloss/list\"\n```\n\nLANGUAGE: go\nCODE:\n```\nl := list.New(\"A\", \"B\", \"C\")\n```\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println(l)\n\n// • A\n// • B\n// • C\n```\n\nLANGUAGE: go\nCODE:\n```\nl := list.New(\n    \"A\", list.New(\"Artichoke\"),\n    \"B\", list.New(\"Baking Flour\", \"Bananas\", \"Barley\", \"Bean Sprouts\"),\n    \"C\", list.New(\"Cashew Apple\", \"Cashews\", \"Coconut Milk\", \"Curry Paste\", \"Currywurst\"),\n    \"D\", list.New(\"Dill\", \"Dragonfruit\", \"Dried Shrimp\"),\n    \"E\", list.New(\"Eggs\"),\n    \"F\", list.New(\"Fish Cake\", \"Furikake\"),\n    \"J\", list.New(\"Jicama\"),\n    \"K\", list.New(\"Kohlrabi\"),\n    \"L\", list.New(\"Leeks\", \"Lentils\", \"Licorice Root\"),\n)\n```\n\nLANGUAGE: go\nCODE:\n```\nenumeratorStyle := lipgloss.NewStyle().Foreground(lipgloss.Color(\"99\")).MarginRight(1)\nitemStyle := lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\")).MarginRight(1)\n\nl := list.New(\n    \"Glossier\",\n    \"Claire's Boutique\",\n    \"Nyx\",\n    \"Mac\",\n    \"Milk\",\n    ).\n    Enumerator(list.Roman).\n    EnumeratorStyle(enumeratorStyle).\n    ItemStyle(itemStyle)\n```\n\nLANGUAGE: go\nCODE:\n```\nl := list.New(\"Duck\", \"Duck\", \"Duck\", \"Duck\", \"Goose\", \"Duck\", \"Duck\")\n\nfunc DuckDuckGooseEnumerator(l list.Items, i int) string {\n    if l.At(i).Value() == \"Goose\" {\n        return \"Honk →\"\n    }\n    return \"\"\n}\n\nl = l.Enumerator(DuckDuckGooseEnumerator)\n```\n\nLANGUAGE: go\nCODE:\n```\nl := list.New()\n\nfor i := 0; i < repeat; i++ {\n    l.Item(\"Lip Gloss\")\n}\n```\n\n----------------------------------------\n\nTITLE: Example Pipeline Configuration with JSON and Eventlogmessage Stages\nDESCRIPTION: Example showing how to combine JSON and eventlogmessage stages in a pipeline configuration to process Windows Event Log messages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/eventlogmessage.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      message:\n      Overwritten:\n- eventlogmessage:\n    source: message\n    overwrite_existing: true\n```\n\n----------------------------------------\n\nTITLE: Regex-based Drop Configuration\nDESCRIPTION: Example showing how to drop log lines matching a specific regex pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- drop:\n    expression: \".*debug.*\"\n```\n\n----------------------------------------\n\nTITLE: Installing Fluentd Loki Plugin\nDESCRIPTION: Command to install the Grafana Loki plugin for Fluentd using fluent-gem package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentd/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfluent-gem install fluent-plugin-grafana-loki\n```\n\n----------------------------------------\n\nTITLE: Case Conversion and URL Encoding in Go Templates\nDESCRIPTION: Functions for converting case and encoding/decoding URLs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_17\n\nLANGUAGE: template\nCODE:\n```\n{ .request_method | upper }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ upper  \"hello\"}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ .request_url | urlencode }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ urlencode  .request_url}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ .request_url | urldecode }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ urldecode  .request_url}}\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Release with Helm in Shell\nDESCRIPTION: This shell command installs the latest released version of the Loki Helm chart with a custom configuration file. It creates a namespace if it doesn't exist.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/scenarios/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhelm install --create-namespace loki-release grafana/loki -f ${scenario}-values.yaml\n```\n\n----------------------------------------\n\nTITLE: Implementing buffer reuse for JSON encoding\nDESCRIPTION: Go code demonstrating how to implement buffer reuse using sync.Pool to improve encoding performance.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype buffer struct {\n    data []byte\n}\n\nvar bufPool = sync.Pool{\n    New: func() interface{} {\n        return &buffer{data: make([]byte, 0, 1024)}\n    },\n}\n\nbuf := bufPool.Get().(*buffer)\ndata := encode(buf.data) // reuse buf.data\n\nnewBuf := make([]byte, len(data))\ncopy(newBuf, buf)\n\nbuf.data = data\nbufPool.Put(buf)\n```\n\n----------------------------------------\n\nTITLE: Initializing Global Tracer in Go\nDESCRIPTION: Demonstrates how to set up a global tracer using the OpenTracing API. This should be done as early as possible in the application's main function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/opentracing/opentracing-go\"\nimport \".../some_tracing_impl\"\n\nfunc main() {\n    opentracing.SetGlobalTracer(\n        // tracing impl specific:\n        some_tracing_impl.New(...),\n    )\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: New Structs in Azure SDK for Go\nDESCRIPTION: New structs added to the SDK for representing virtual machine images, community gallery resources, and shared gallery resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n// New structs\nSystemData\nVMImagesInEdgeZoneListResult\nVirtualMachineImagesClientListByEdgeZoneOptions\nVirtualMachineImagesClientListByEdgeZoneResponse\nCommunityGalleryImageList\nCommunityGalleryImageVersionList\nCommunityGalleryImageVersionsClientListOptions\nCommunityGalleryImageVersionsClientListResponse\nCommunityGalleryImagesClientListOptions\nCommunityGalleryImagesClientListResponse\nCopyCompletionError\nSharedGalleryDataDiskImage\nSharedGalleryDiskImage\nSharedGalleryImageVersionStorageProfile\nSharedGalleryOSDiskImage\nUserArtifactSettings\n```\n\n----------------------------------------\n\nTITLE: Creating S2 Decoder After Manual Stream Positioning in Go\nDESCRIPTION: Creates an S2 decoder after manually positioning a stream at a compressed offset, explicitly ignoring the stream identifier which would normally be at the beginning.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\n\tdec := s2.NewReader(r, s2.ReaderIgnoreStreamIdentifier())\n```\n\n----------------------------------------\n\nTITLE: Referencing GCS Secret in LokiStack Configuration\nDESCRIPTION: YAML snippet to reference a Google Cloud Storage secret in the LokiStack storage configuration. This configuration tells the Loki Operator to use the referenced secret for GCS authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  storage:\n    secret:\n      name: lokistack-dev-gcs\n      type: gcs\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda-Promtail with Terraform (Docker Image)\nDESCRIPTION: Terraform command to deploy lambda-promtail using a Docker image from ECR. It configures the lambda function with various parameters including write address, authentication, and labels.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nterraform apply -var \"lambda_promtail_image=<ecr-repo>:<tag>\" -var \"write_address=https://your-loki-url/loki/api/v1/push\" -var \"password=<basic-auth-pw>\" -var \"username=<basic-auth-username>\" -var 'bearer_token=<bearer-token>' -var 'extra_labels=\"name1,value1,name2,value2\"' -var 'drop_labels=\"name1,name2\"' -var \"tenant_id=<value>\" -var 'skip_tls_verify=\"false\"'\n```\n\n----------------------------------------\n\nTITLE: Applying Block-Level Formatting in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to apply block-level formatting such as padding and margins to styled text.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n// Padding\nvar style = lipgloss.NewStyle().\n    PaddingTop(2).\n    PaddingRight(4).\n    PaddingBottom(2).\n    PaddingLeft(4)\n\n// Margins\nvar style = lipgloss.NewStyle().\n    MarginTop(2).\n    MarginRight(4).\n    MarginBottom(2).\n    MarginLeft(4)\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Trust Relationship Policy\nDESCRIPTION: JSON policy document defining the trust relationship between AWS IAM role and LokiStack's Kubernetes ServiceAccount.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Effect\": \"Allow\",\n     \"Principal\": {\n       \"Federated\": \"arn:aws:iam::${AWS_ACCOUNT_ID}:oidc-provider/${OIDC_PROVIDER}\"\n     },\n     \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n     \"Condition\": {\n       \"StringEquals\": {\n         \"${OIDC_PROVIDER}:sub\": [\n           \"system:serviceaccount:${LOKISTACK_NS}:${LOKISTACK_NAME}\"\n           \"system:serviceaccount:${LOKISTACK_NS}:${LOKISTACK_NAME}-ruler\"\n         ]\n       }\n     }\n   }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Event Log Collection in Promtail YAML\nDESCRIPTION: This YAML configuration demonstrates how to set up Promtail to read from the Windows event log, including specifying the event log name, xpath query, and relabeling options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: windows\n  windows_events:\n    use_incoming_timestamp: false\n    bookmark_path: \"./bookmark.xml\"\n    eventlog_name: \"Application\"\n    xpath_query: '*'\n    labels:\n      job: windows\n  relabel_configs:\n    - source_labels: ['computer']\n      target_label: 'host'\n```\n\n----------------------------------------\n\nTITLE: AWS S3 Short-lived Token Configuration\nDESCRIPTION: YAML configuration for AWS S3 storage using short-lived token authentication. Specifies bucket names, region, and IAM role ARN.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  bucketnames: # A comma-separated list of bucket names\n  region:      # A valid AWS region, e.g. us-east-1\n  role_arn:    # The AWS IAM Role associated with a trust relationship to Lokistack's serviceaccount\n```\n\n----------------------------------------\n\nTITLE: Implementing Item Interface in Go for List Bubble\nDESCRIPTION: Defines the Item interface used for items that appear in the list. It includes a FilterValue method used for filtering against the item.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbles/list/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Item is an item that appears in the list.\ntype Item interface {\n\t// FilterValue is the value we use when filtering against this item when\n\t// we're filtering the list.\n\tFilterValue() string\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating Azure SDK Client with Environment-based Authorizer in Go\nDESCRIPTION: This snippet demonstrates how to create an Azure SDK client (VirtualNetworks) and authenticate it using an authorizer created from environment variables or Azure Managed Service Identity. It shows the basic setup for making authenticated API calls to Azure services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/autorest/azure/auth/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/Azure/go-autorest/autorest/azure/auth\"\n\n// create a VirtualNetworks client\nvnetClient := network.NewVirtualNetworksClient(\"<subscriptionID>\")\n\n// create an authorizer from env vars or Azure Managed Service Idenity\nauthorizer, err := auth.NewAuthorizerFromEnvironment()\nif err != nil {\n    handle(err)\n}\n\nvnetClient.Authorizer = authorizer\n\n// call the VirtualNetworks CreateOrUpdate API\nvnetClient.CreateOrUpdate(context.Background(),\n// ...\n```\n\n----------------------------------------\n\nTITLE: Deploying Specific Loki Version\nDESCRIPTION: Command to deploy a specific version of Loki by setting the version variable from the command line.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-simple/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnomad job run -var=\"version=2.7.5\" job.nomad.hcl\n```\n\n----------------------------------------\n\nTITLE: Renaming Loki Canary Metrics\nDESCRIPTION: List of metric name changes for Loki Canary to comply with standards for counter names.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_22\n\nLANGUAGE: nohighlight\nCODE:\n```\nloki_canary_total_entries               ->      loki_canary_entries_total\nloki_canary_out_of_order_entries        ->      loki_canary_out_of_order_entries_total\nloki_canary_websocket_missing_entries   ->      loki_canary_websocket_missing_entries_total\nloki_canary_missing_entries             ->      loki_canary_missing_entries_total\nloki_canary_unexpected_entries          ->      loki_canary_unexpected_entries_total\nloki_canary_duplicate_entries           ->      loki_canary_duplicate_entries_total\nloki_canary_ws_reconnects               ->      loki_canary_ws_reconnects_total\nloki_canary_response_latency            ->      loki_canary_response_latency_seconds\n```\n\n----------------------------------------\n\nTITLE: Accessing Controller in Sarama Client Interface\nDESCRIPTION: Adds a Controller() method to the Client interface, allowing access to the Kafka cluster controller. This feature was added in version 1.17.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_16\n\nLANGUAGE: Go\nCODE:\n```\ncontroller, err := client.Controller()\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Swift in YAML\nDESCRIPTION: This snippet demonstrates the YAML configuration for OpenStack Swift, including authentication options, container settings, and HTTP client configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ntype: SWIFT\nconfig:\n  auth_version: 0\n  auth_url: \"\"\n  username: \"\"\n  user_domain_name: \"\"\n  user_domain_id: \"\"\n  user_id: \"\"\n  password: \"\"\n  domain_id: \"\"\n  domain_name: \"\"\n  application_credential_id: \"\"\n  application_credential_name: \"\"\n  application_credential_secret: \"\"\n  project_id: \"\"\n  project_name: \"\"\n  project_domain_id: \"\"\n  project_domain_name: \"\"\n  region_name: \"\"\n  container_name: \"\"\n  large_object_chunk_size: 1073741824\n  large_object_segments_container_name: \"\"\n  retries: 3\n  connect_timeout: 10s\n  timeout: 5m\n  use_dynamic_large_objects: false\n  http_config:\n    idle_conn_timeout: 1m30s\n    response_header_timeout: 2m\n    insecure_skip_verify: false\n    tls_handshake_timeout: 10s\n    expect_continue_timeout: 1s\n    max_idle_conns: 100\n    max_idle_conns_per_host: 100\n    max_conns_per_host: 0\n    tls_config:\n      ca_file: \"\"\n      cert_file: \"\"\n      key_file: \"\"\n      server_name: \"\"\n      insecure_skip_verify: false\n    disable_compression: false\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Using Custom CBOR Encoding Modes in Go\nDESCRIPTION: Demonstrates how to create and use custom encoding modes with specific options. It shows how to modify preset options, create an immutable encoding mode, and use it for marshaling and encoding.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// Create encoding mode.\nopts := cbor.CoreDetEncOptions()   // use preset options as a starting point\nopts.Time = cbor.TimeUnix          // change any settings if needed\nem, err := opts.EncMode()          // create an immutable encoding mode\n\n// Reuse the encoding mode. It is safe for concurrent use.\n\n// API matches encoding/json.\nb, err := em.Marshal(v)            // encode v to []byte b\nencoder := em.NewEncoder(w)        // create encoder with io.Writer w\nerr := encoder.Encode(v)           // encode v to io.Writer w\n```\n\n----------------------------------------\n\nTITLE: Using JMESPath Literals for Special Field Names\nDESCRIPTION: Illustrates how to use JMESPath literals to parse JSON fields with special characters in their names, such as '@' or '.'.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/json.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n      output: log\n      stream: '\"grpc.stream\"'\n      timestamp: time\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"grpc.stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Rendering Table to String in Go\nDESCRIPTION: This example shows how to render a table into a string using the strings.Builder type, which implements the io.Writer interface. This is useful when you need to capture the table output as a string instead of writing it directly to stdout.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"strings\"\n    \"fmt\"\n\n    \"github.com/olekukonko/tablewriter\"\n)\n\nfunc main() {\n    tableString := &strings.Builder{}\n    table := tablewriter.NewWriter(tableString)\n\n    /*\n     * Code to fill the table\n     */\n\n    table.Render()\n\n    fmt.Println(tableString.String())\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Compactor and Limits in Loki YAML\nDESCRIPTION: This snippet defines the configuration options for the compactor component and global/per-tenant limits in Loki. It includes placeholders for detailed configurations of these components, which are important for performance optimization and resource management.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n[compactor: <compactor>]\n\ncompactor_grpc_client:\n  [<grpc_client>]\n\n[limits_config: <limits_config>]\n```\n\n----------------------------------------\n\nTITLE: Detecting Terminal Color Profile in Go\nDESCRIPTION: This snippet demonstrates how to detect the terminal's color profile using the Colorprofile package. It uses the Detect function to determine the color profile and provides a comment based on the detected profile.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/colorprofile/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/charmbracelet/colorprofile\"\n\n// Detect the color profile. If you're planning on writing to stderr you'd want\n// to use os.Stderr instead.\np := colorprofile.Detect(os.Stdout, os.Environ())\n\n// Comment on the profile.\nfmt.Printf(\"You know, your colors are quite %s.\", func() string {\n    switch p {\n    case colorprofile.TrueColor:\n        return \"fancy\"\n    case colorprofile.ANSI256:\n        return \"1990s fancy\"\n    case colorprofile.ANSI:\n        return \"normcore\"\n    case colorprofile.Ascii:\n        return \"ancient\"\n    case colorprofile.NoTTY:\n        return \"naughty!\"\n    }\n    return \"...IDK\" // this should never happen\n}())\n```\n\n----------------------------------------\n\nTITLE: Evaluating Boolean Conditions in CEL\nDESCRIPTION: This snippet demonstrates how to construct boolean conditions in CEL, including logical operators and property access. It shows a complex condition for checking account balance and overdraft protection.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cel.dev/expr/README.md#2025-04-19_snippet_0\n\nLANGUAGE: c\nCODE:\n```\naccount.balance >= transaction.withdrawal\n    || (account.overdraftProtection\n    && account.overdraftLimit >= transaction.withdrawal  - account.balance)\n```\n\n----------------------------------------\n\nTITLE: Verifying Content Digest in Go\nDESCRIPTION: Shows how to verify if content matches an existing digest by comparing hash values. Used to detect if content has changed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opencontainers/go-digest/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nif id != digest.FromBytes([]byte(\"my content\")) {\n  return errors.New(\"the content has changed!\")\n}\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image with Fluent Bit Loki Plugin\nDESCRIPTION: Command to build a Docker image with the Fluent Bit Loki plugin pre-installed.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluent-bit/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ make fluent-bit-image\n```\n\n----------------------------------------\n\nTITLE: Flushing In-Memory Chunks in Loki API\nDESCRIPTION: Triggers a flush of all in-memory chunks held by the ingesters to the backing store, mainly used for local testing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nPOST /flush\n```\n\n----------------------------------------\n\nTITLE: Importing OpenTelemetry Exporters in Go\nDESCRIPTION: Shows the updated import paths for OpenTelemetry exporters after deprecations. Uses OTLP HTTP or gRPC exporters instead of the deprecated Jaeger exporter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_14\n\nLANGUAGE: Go\nCODE:\n```\nimport (\n  \"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp\"\n  // or\n  \"go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc\"\n)\n```\n\n----------------------------------------\n\nTITLE: Using Complete Adaptive Colors in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to specify exact color values for both light and dark backgrounds across different color profiles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nlipgloss.CompleteAdaptiveColor{\n    Light: CompleteColor{TrueColor: \"#d7ffae\", ANSI256: \"193\", ANSI: \"11\"},\n    Dark:  CompleteColor{TrueColor: \"#d75fee\", ANSI256: \"163\", ANSI: \"5\"},\n}\n```\n\n----------------------------------------\n\nTITLE: MD5 Performance Benchmarks - Go\nDESCRIPTION: Benchmark comparisons between standard crypto/md5 package, 8-lane AVX2, and 16-lane AVX512 implementations showing throughput and memory allocation metrics.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/md5-simd/README.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBenchmarkCryptoMd5-4                     687.66 MB/s           0 B/op          0 allocs/op\nBenchmarkBlock8-4                       4144.80 MB/s           0 B/op          0 allocs/op\nBenchmarkBlock16-4                      8228.88 MB/s           0 B/op          0 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Implementing FilepathGlob Function in Go\nDESCRIPTION: Function signature for finding files matching a pattern. Returns matched filenames or error. Acts as a drop-in replacement for path/filepath.Glob().\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nfunc FilepathGlob(pattern string, opts ...GlobOption) (matches []string, err error)\n```\n\n----------------------------------------\n\nTITLE: Accessing Error List with Type Assertion\nDESCRIPTION: Demonstrates how to access the underlying list of errors using type assertion to check if an error is a multierror.Error instance.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nif err := something(); err != nil {\n\tif merr, ok := err.(*multierror.Error); ok {\n\t\t// Use merr.Errors\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: GeoIP Labeldrop Pipeline Configuration\nDESCRIPTION: Example showing how to filter GeoIP labels using the labeldrop stage to exclude specific geographical information.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/geoip.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^(?P<ip>\\S+) .*\"\n- geoip:\n    db: \"/path/to/GeoCity.mmdb\"\n    source: \"ip\"\n    db_type: \"city\"\n- labeldrop:\n  - geoip_postal_code\n  - geoip_subdivision_code\n```\n\n----------------------------------------\n\nTITLE: Range Scanning Radix Tree in Go\nDESCRIPTION: Shows how to perform range scanning operations on the radix tree, including creating a tree with multiple entries and iterating over a specific key range using lexicographical ordering.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-immutable-radix/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Create a tree\nr := iradix.New()\nr, _, _ = r.Insert([]byte(\"001\"), 1)\nr, _, _ = r.Insert([]byte(\"002\"), 2)\nr, _, _ = r.Insert([]byte(\"005\"), 5)\nr, _, _ = r.Insert([]byte(\"010\"), 10)\nr, _, _ = r.Insert([]byte(\"100\"), 10)\n\n// Range scan over the keys that sort lexicographically between [003, 050)\nit := r.Root().Iterator()\nit.SeekLowerBound([]byte(\"003\"))\nfor key, _, ok := it.Next(); ok; key, _, ok = it.Next() {\n  if key >= \"050\" {\n      break\n  }\n  fmt.Println(key)\n}\n// Output:\n//  005\n//  010\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda-Promtail with CloudFormation\nDESCRIPTION: AWS CLI command to create a CloudFormation stack for lambda-promtail. It uses a template file and specifies various parameters for configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\naws cloudformation create-stack --stack-name lambda-promtail-stack --template-body file://template.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --region us-east-2 --parameters ParameterKey=WriteAddress,ParameterValue=https://your-loki-url/loki/api/v1/push ParameterKey=Username,ParameterValue=<basic-auth-username> ParameterKey=Password,ParameterValue=<basic-auth-pw> ParameterKey=BearerToken,ParameterValue=<bearer-token> ParameterKey=LambdaPromtailImage,ParameterValue=<ecr-repo>:<tag> ParameterKey=ExtraLabels,ParameterValue=\"name1,value1,name2,value2\" ParameterKey=TenantID,ParameterValue=<value> ParameterKey=SkipTlsVerify,ParameterValue=\"false\"\n```\n\n----------------------------------------\n\nTITLE: Replacing RegisterGlobal Option in Jaeger Exporter\nDESCRIPTION: The RegisterGlobal Option in the Jaeger exporter is replaced with an InstallNewPipeline constructor function. This new function builds an exporter with default SDK options and registers it with the global package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_39\n\nLANGUAGE: Go\nCODE:\n```\nNewExportPipeline()\n```\n\nLANGUAGE: Go\nCODE:\n```\nInstallNewPipeline()\n```\n\n----------------------------------------\n\nTITLE: Updating KV Package in OpenTelemetry Go SDK\nDESCRIPTION: The go.opentelemetry.io/otel/api/kv/value package was merged into the parent go.opentelemetry.io/otel/api/kv package. This change replaces various value types with their kv counterparts.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_40\n\nLANGUAGE: Go\nCODE:\n```\nkv.BoolValue\nkv.Int64Value\nkv.Uint64Value\nkv.Float64Value\nkv.Int32Value\nkv.Uint32Value\nkv.Float32Value\nkv.StringValue\nkv.IntValue\nkv.UintValue\nkv.ArrayValue\n```\n\n----------------------------------------\n\nTITLE: Wrapping Global Tracer with Span Profiler in Go\nDESCRIPTION: Demonstrates how to wrap the global OpenTracing tracer with the Span Profiler. This allows for automatic profiling of root spans in the application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/spanprofiler/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/opentracing/opentracing-go\"\n    \"github.com/grafana/dskit/spanprofiler\"\n)\n\nfunc main() {\n    // Initialize your OpenTracing tracer\n    tracer := opentracing.GlobalTracer()\n    // Wrap it with the tracer-profiler \n    wrappedTracer := spanprofiler.NewTracer(tracer)\n    // Use the wrapped tracer in your application\n    opentracing.SetGlobalTracer(wrappedTracer)\n\n    // Or, as an oneliner:\n    // opentracing.SetGlobalTracer(spanprofiler.NewTracer(opentracing.GlobalTracer()))\n\n    // Your application logic here\n}\n```\n\n----------------------------------------\n\nTITLE: Type Validation in Go\nDESCRIPTION: Shows how to validate variable types using IsType function, including primitive types and pointers\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nprintln(govalidator.IsType(\"Bob\", \"string\"))\nprintln(govalidator.IsType(1, \"int\"))\ni := 1\nprintln(govalidator.IsType(&i, \"*int\"))\n```\n\n----------------------------------------\n\nTITLE: Declaring Afero Backend in Go\nDESCRIPTION: This snippet demonstrates how to declare a package variable and set it to a pointer to a filesystem using Afero.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar AppFs = afero.NewMemMapFs()\n\nor\n\nvar AppFs = afero.NewOsFs()\n```\n\n----------------------------------------\n\nTITLE: Using HashiCorp Vault for Dynamic AWS S3 Credentials (HCL)\nDESCRIPTION: HCL template to retrieve dynamic AWS S3 credentials from HashiCorp Vault using the AWS secret engine. It fetches temporary access key and secret key.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_5\n\nLANGUAGE: hcl\nCODE:\n```\ntemplate {\n  data = <<-EOH\n  {{ with secret \"aws/creds/loki\" -}}\n  S3_ACCESS_KEY_ID={{ .Data.access_key }}\n  S3_SECRET_ACCESS_KEY={{ .Data.secret_key }}\n  {{- end }}\n  EOH\n\n  destination = \"secrets/s3.env\"\n  env         = true\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Loki Repository\nDESCRIPTION: Instructions for cloning the Loki repository into your GOPATH and adding your fork as a remote. This is the first step required to contribute to the Loki project.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/contributing.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/grafana/loki.git $GOPATH/src/github.com/grafana/loki\n$ cd $GOPATH/src/github.com/grafana/loki\n$ git remote add fork <FORK_URL>\n```\n\n----------------------------------------\n\nTITLE: Complex Source and Regex Drop Configuration\nDESCRIPTION: Example showing how to drop log lines by matching regex patterns against concatenated source fields.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n     level:\n     msg:\n- drop:\n    source:     [\"level\",\"msg\"]\n    separator:   \"#\"\n    expression:  \"(error|ERROR)#.*\\/loki\\/api\\/push.*\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Loki Log Entries\nDESCRIPTION: These log entries showcase various operations performed by Loki's log management system, including file tailing, watcher events, and position updates. They provide insights into the internal workings of Loki's log processing pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.295545284Z caller=filetarget.go:326 level=info component=logs logs_config=default msg=\"removing directory from watcher\" directory=/var/log/pods/hosted-grafana_.something-grafana-fdfdc64bb-srrx6_0ecafb81-c168-4bc4-99e3-e8b2315a09b8/hgrun\nts=2024-04-16T15:10:43.295472158Z caller=tailer.go:207 level=info component=logs logs_config=default component=tailer msg=\"skipping update of position for a file which does not currently exist\" path=/var/log/pods/hosted-grafana_.something-grafana-fdfdc64bb-srrx6_0ecafb81-c168-4bc4-99e3-e8b2315a09b8/hosted-grafana-security/0.log\nts=2024-04-16T15:10:43.295436643Z caller=tailer.go:245 level=info component=logs logs_config=default component=tailer msg=\"stopped tailing file\" path=/var/log/pods/hosted-grafana_.something-grafana-fdfdc64bb-srrx6_0ecafb81-c168-4bc4-99e3-e8b2315a09b8/grafana/0.log\nts=2024-04-16T15:10:43.295422636Z caller=tailer.go:118 level=info component=logs logs_config=default component=tailer msg=\"position timer: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-fdfdc64bb-srrx6_0ecafb81-c168-4bc4-99e3-e8b2315a09b8/grafana/0.log\nts=2024-04-16T15:10:43.295411202Z caller=tailer.go:155 level=info component=logs logs_config=default component=tailer msg=\"tail routine: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-fdfdc64bb-srrx6_0ecafb81-c168-4bc4-99e3-e8b2315a09b8/grafana/0.log\nts=2024-04-16T15:10:43.295395484Z caller=tailer.go:164 level=info component=logs logs_config=default component=tailer msg=\"tail routine: tail channel closed, stopping tailer\" path=/var/log/pods/hosted-grafana_.something-grafana-fdfdc64bb-srrx6_0ecafb81-c168-4bc4-99e3-e8b2315a09b8/grafana/0.log reason=null\n```\n\n----------------------------------------\n\nTITLE: Running Logstash Loki Plugin with Docker\nDESCRIPTION: Docker command to run Logstash with the Loki output plugin pre-installed, using a local configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v `pwd`/loki-test.conf:/home/logstash/ --rm grafana/logstash-output-loki:1.0.1 -f loki-test.conf\n```\n\n----------------------------------------\n\nTITLE: Exporting Google HTTP Load Balancer Error Logs with GCP Log Filter\nDESCRIPTION: A log filter query to export Google HTTP Load Balancer logs with HTTP status codes 500 or higher. This filter targets the 'http_load_balancer' resource type and filters by status code.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/gcplog/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nresource.type=\"http_load_balancer\" AND\nhttpRequest.status>=500\n```\n\n----------------------------------------\n\nTITLE: Optimizing Parquet Reads with Page-Level Access in Go\nDESCRIPTION: Demonstrates how to efficiently read parquet data using low-level APIs that access column pages directly. The example shows both general value reading and type-specific optimizations for improved performance.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\npages := column.Pages()\ndefer func() {\n    checkErr(pages.Close())\n}()\n\nfor {\n    p, err := pages.ReadPage()\n    if err != nil {\n        ... // io.EOF when there are no more pages\n    }\n\n    switch page := p.Values().(type) {\n    case parquet.Int32Reader:\n        values := make([]int32, page.NumValues())\n        _, err := page.ReadInt32s(values)\n        ...\n    case parquet.Int64Reader:\n        values := make([]int64, page.NumValues())\n        _, err := page.ReadInt64s(values)\n        ...\n    default:\n        values := make([]parquet.Value, page.NumValues())\n        _, err := page.ReadValues(values)\n        ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing CacheOnReadFs in Afero (Go)\nDESCRIPTION: Creates a composite filesystem that lazily copies accessed files from the base layer into the overlay. Subsequent reads within the cache duration will be served from the overlay, improving performance for frequently accessed files.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\nbase := afero.NewOsFs()\nlayer := afero.NewMemMapFs()\nufs := afero.NewCacheOnReadFs(base, layer, 100 * time.Second)\n```\n\n----------------------------------------\n\nTITLE: Kubernetes-Aware Loki Output Configuration\nDESCRIPTION: Fluent Bit configuration for Loki with automatic Kubernetes labels extraction.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_11\n\nLANGUAGE: properties\nCODE:\n```\n[Output]\n    Name grafana-loki\n    Match *\n    Url http://localhost:3100/loki/api/v1/push\n    BatchWait 1s\n    BatchSize 30720 # (30KiB)\n    AutoKubernetesLabels true\n    RemoveKeys key1,key2\n```\n\n----------------------------------------\n\nTITLE: Optimizing JSON Decoding with NUL Character in Go\nDESCRIPTION: This snippet demonstrates how to optimize JSON decoding by using a NUL character as a termination indicator, reducing the need for constant length checks.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfor {\n    switch buf[cursor] {\n    case ' ', '\\n', '\\r', '\\t':\n    case '\\000':\n        return nil\n    }\n    cursor++\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Go Workspace for Loki Development\nDESCRIPTION: Commands to set up a Go workspace for Loki development, allowing the use of local dependencies across multiple modules.\nSOURCE: https://github.com/grafana/loki/blob/main/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone <FORK_URL>\n$ go work init     # Init your go.work file\n$ go work use -r . # Recursively add sub-modules in the use clause of your go.work file\n```\n\n----------------------------------------\n\nTITLE: Configuring Logfmt Stage for Log Line Parsing in YAML\nDESCRIPTION: This example demonstrates how to configure the logfmt stage to parse a log line directly. It maps specific fields from the logfmt input to extracted labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/logfmt.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- logfmt:\n    mapping:\n      timestamp: time\n      app:\n      duration:\n      unknown:\n```\n\n----------------------------------------\n\nTITLE: Building the Loki Migrate Tool\nDESCRIPTION: Commands for building the migrate tool or creating a migrate Docker image. These make commands compile the migrate tool for direct use or package it into a container.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/migrate/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake migrate\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake migrate-image\n```\n\n----------------------------------------\n\nTITLE: Static Member Support Implementation\nDESCRIPTION: Implementation of KIP-345 for static membership support in consumer groups\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nKIP-345: support static membership\n```\n\n----------------------------------------\n\nTITLE: Bloom Filter Basic Configuration\nDESCRIPTION: Basic YAML configuration for enabling bloom filters, including build settings, gateway configuration, and default tenant settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/bloom-filters.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbloom_build:\n  enabled: true\n  planner:\n    planning_interval: 6h\n  builder:\n    planner_address: bloom-planner.<namespace>.svc.cluster.local.:9095\n\nbloom_gateway:\n  enabled: true\n  client:\n    addresses: dnssrvnoa+_bloom-gateway-grpc._tcp.bloom-gateway-headless.<namespace>.svc.cluster.local\n\nlimits_config:\n  bloom_creation_enabled: true\n  bloom_split_series_keyspace_by: 1024\n  bloom_gateway_enable_filtering: true\n```\n\n----------------------------------------\n\nTITLE: Generating Static FileSystem Implementation with vfsgen in Go\nDESCRIPTION: Code showing how to use vfsgen.Generate to create a static implementation of the provided filesystem. This generates a Go file with the virtual filesystem implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nerr := vfsgen.Generate(fs, vfsgen.Options{})\nif err != nil {\n\tlog.Fatalln(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Terminating a Running Lua State with Context\nDESCRIPTION: Shows how to use Go's context package to control the execution of Lua code. This example demonstrates setting a timeout context to terminate a Lua script that would otherwise run too long.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState()\ndefer L.Close()\nctx, cancel := context.WithTimeout(context.Background(), 1*time.Second)\ndefer cancel()\n// set the context to our LState\nL.SetContext(ctx)\nerr := L.DoString(`\n  local clock = os.clock\n  function sleep(n)  -- seconds\n    local t0 = clock()\n    while clock() - t0 <= n do end\n  end\n  sleep(3)\n`)\n// err.Error() contains \"context deadline exceeded\"\n```\n\n----------------------------------------\n\nTITLE: Importing Loki Module\nDESCRIPTION: JavaScript code showing how to import the k6 Loki module\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport loki from 'k6/x/loki';\n```\n\n----------------------------------------\n\nTITLE: Deploying Lambda-Promtail with Terraform (CloudWatch Log Group)\nDESCRIPTION: Terraform command to deploy lambda-promtail using CloudWatch log groups as the source. It sets various configuration options like write address, authentication, log groups, and labels.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nterraform apply -var \"write_address=https://your-loki-url/loki/api/v1/push\" -var \"password=<basic-auth-pw>\" -var \"username=<basic-auth-username>\" -var 'bearer_token=<bearer-token>' -var 'log_group_names=[\"log-group-01\", \"log-group-02\"]' -var 'extra_labels=\"name1,value1,name2,value2\"' -var 'drop_labels=\"name1,name2\"' -var \"tenant_id=<value>\" -var 'skip_tls_verify=\"false\"'\n```\n\n----------------------------------------\n\nTITLE: Debugging Empty Profile After Delta Computation in Loki\nDESCRIPTION: These log entries indicate instances where a profile becomes empty after delta computation for a specific tenant and metric. This information is crucial for debugging and optimizing Loki's data processing pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/ingester-logfmt.txt#2025-04-19_snippet_1\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-17T09:52:46.36477128Z caller=head.go:216 level=debug tenant=987678 msg=\"profile is empty after delta computation\" metricName=memory\nts=2024-04-17T09:52:46.364726948Z caller=head.go:216 level=debug tenant=987678 msg=\"profile is empty after delta computation\" metricName=memory\n```\n\n----------------------------------------\n\nTITLE: Handling Config Values in Go\nDESCRIPTION: Fixes issues with merging and parsing of config values, particularly for max_attempts and duration_seconds fields.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/internal/ini/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\n// Example config:\n// max_attempts = 3\n// duration_seconds = 300\n```\n\n----------------------------------------\n\nTITLE: Generating Random Colors in Go using go-colorful\nDESCRIPTION: This snippet shows how to generate random colors in Go using the go-colorful library. It demonstrates creating random blue shades, dark colors, light colors, and using built-in functions for warm and happy colors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nrandom_blue := colorful.Hcl(180.0+rand.Float64()*50.0, 0.2+rand.Float64()*0.8, 0.3+rand.Float64()*0.7)\nrandom_dark := colorful.Hcl(rand.Float64()*360.0, rand.Float64(), rand.Float64()*0.4)\nrandom_light := colorful.Hcl(rand.Float64()*360.0, rand.Float64(), 0.6+rand.Float64()*0.4)\n\ncolorful.WarmColor()\ncolorful.HappyColor()\ncolorful.FastWarmColor()\ncolorful.FastHappyColor()\n```\n\n----------------------------------------\n\nTITLE: JSON Log Parsing in Loki\nDESCRIPTION: Example of parsing JSON-formatted Spring Boot application logs. Shows filtering for INFO level messages and formatting output.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\"timestamp\":\"2022-04-26T08:53:59.61Z\",\"level\":\"INFO\",\"class\":\"org.springframework.boot.SpringApplication\",\"method\":\"logStartupProfileInfo\",\"file\":\"SpringApplication.java\",\"line\":663,\"thread\":\"restartedMain\",\"message\":\"The following profiles are active: no-schedulers,json-logging\"}\n{\"timestamp\":\"2022-04-26T08:53:59.645Z\",\"level\":\"DEBUG\",\"class\":\"org.springframework.boot.logging.DeferredLog\",\"method\":\"logTo\",\"file\":\"DeferredLog.java\",\"line\":255,\"thread\":\"restartedMain\",\"message\":\"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable\"}\n```\n\nLANGUAGE: logql\nCODE:\n```\n| json | level=\"INFO\" | line_format \"{{.message}}\"\n```\n\n----------------------------------------\n\nTITLE: Accessing TracerProvider from Span in Go\nDESCRIPTION: Adds 'TracerProvider()' method to the 'go.opentelemetry.io/otel/trace.Span' interface to obtain a TracerProvider from a given span that uses the same trace processing pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_24\n\nLANGUAGE: Go\nCODE:\n```\nfunc (s Span) TracerProvider() trace.TracerProvider\n```\n\n----------------------------------------\n\nTITLE: Running Loki on Windows\nDESCRIPTION: This snippet demonstrates how to start Loki on Windows using the local configuration file. It runs the Loki executable with the specified configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n.\\loki-windows-amd64.exe --config.file=loki-local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Using homedir.Dir() and homedir.Expand() functions in Go\nDESCRIPTION: Examples of the two main functions provided by the go-homedir library: Dir() retrieves the user's home directory, and Expand() replaces the tilde character in a path with the full home directory path.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/go-homedir/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhomedir.Dir()\n```\n\nLANGUAGE: markdown\nCODE:\n```\nhomedir.Expand()\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackSpec Struct in Go\nDESCRIPTION: Defines the LokiStackSpec struct representing the desired state of LokiStack. It includes fields for management state, size, storage, replication factor, rules, limits, and more.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackSpec struct {\n  ManagementState ManagementStateType\n  Size LokiStackSizeType\n  Storage ObjectStorageSpec\n  StorageClassName string\n  ReplicationFactor int32\n  Rules RulesSpec\n  Limits LimitsSpec\n  Template LokiTemplateSpec\n  Tenants TenantsSpec\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Target Sync Period in Promtail\nDESCRIPTION: Configuration for controlling how frequently Promtail rescans directories and files to discover new ones or stop watching removed ones. This is part of the target_config section.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_48\n\nLANGUAGE: yaml\nCODE:\n```\n# Period to resync directories being watched and files being tailed to discover\n# new ones or stop watching removed ones.\nsync_period: \"10s\"\n```\n\n----------------------------------------\n\nTITLE: PermissionType Enum Definition\nDESCRIPTION: Defines the permission types for LokiStack Gateway RBAC, including read and write access to tenants.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_20\n\nLANGUAGE: go\nCODE:\n```\ntype PermissionType string\n\nconst (\n    Read  PermissionType = \"read\"  // Read gives access to read data from a tenant\n    Write PermissionType = \"write\" // Write gives access to write data to a tenant\n)\n```\n\n----------------------------------------\n\nTITLE: Sending ApiVersionsRequest on Broker Connection\nDESCRIPTION: Modifies Sarama to send an ApiVersionsRequest when opening a connection to a broker.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_12\n\nLANGUAGE: Go\nCODE:\n```\nfeat: send ApiVersionsRequest on broker open\n```\n\n----------------------------------------\n\nTITLE: Saving Key/Value Pair in Bolt Database Bucket (Go)\nDESCRIPTION: Shows how to save a key/value pair to a specific bucket in a Bolt database. It sets the value of the 'answer' key to '42' in the 'MyBucket' bucket.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ndb.Update(func(tx *bolt.Tx) error {\n\tb := tx.Bucket([]byte(\"MyBucket\"))\n\terr := b.Put([]byte(\"answer\"), []byte(\"42\"))\n\treturn err\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Sampling Endpoint in Jaeger Go Client\nDESCRIPTION: Shows how to set the sampling endpoint URL for the Jaeger client using an environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nJAEGER_SAMPLING_ENDPOINT\n```\n\n----------------------------------------\n\nTITLE: Validating Semantic Versions Against Constraints in Go\nDESCRIPTION: This snippet demonstrates how to validate a semantic version against a constraint in Go. It shows creating a constraint, parsing a version, and validating the version against the constraint, including handling errors and processing validation messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/semver/v3/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nc, err := semver.NewConstraint(\"<= 1.2.3, >= 1.4\")\nif err != nil {\n    // Handle constraint not being parseable.\n}\n\nv, err := semver.NewVersion(\"1.3\")\nif err != nil {\n    // Handle version not being parseable.\n}\n\n// Validate a version against a constraint.\na, msgs := c.Validate(v)\n// a is false\nfor _, m := range msgs {\n    fmt.Println(m)\n\n    // Loops over the errors which would read\n    // \"1.3 is greater than 1.2.3\"\n    // \"1.3 is less than 1.4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Match Stage Schema in YAML\nDESCRIPTION: Defines the schema for configuring the match stage in Promtail's pipeline. It includes options for specifying selectors, actions, and nested stages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/match.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatch:\n  # LogQL stream selector and line filter expressions.\n  selector: <string>\n\n  # Names the pipeline. When defined, creates an additional label in\n  # the pipeline_duration_seconds histogram, where the value is\n  # concatenated with job_name using an underscore.\n  [pipeline_name: <string>]\n\n  # Determines what action is taken when the selector matches the log\n  # line. Defaults to keep. When set to drop, entries will be dropped\n  # and no later metrics will be recorded.\n  # Stages must be not defined when dropping entries.\n  [action: <string> | default = \"keep\"]\n  \n  # If you specify `action: drop` the metric `logentry_dropped_lines_total` \n  # will be incremented for every line dropped.  By default the reason\n  # label will be `match_stage` however you can optionally specify a custom value \n  # to be used in the `reason` label of that metric here.\n  [drop_counter_reason: <string> | default = \"match_stage\"]\n\n  # Nested set of pipeline stages only if the selector\n  # matches the labels of the log entries:\n  stages:\n    [<stages>...]\n```\n\n----------------------------------------\n\nTITLE: Creating Logger with Fixed Key-Value Pairs in Go using go-hclog\nDESCRIPTION: Shows how to create a logger with predefined key-value pairs that will be included in all log messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nrequestID := \"5fb446b6-6eba-821d-df1b-cd7501b6a363\"\nrequestLogger := subsystemLogger.With(\"request\", requestID)\nrequestLogger.Info(\"we are transporting a request\")\n```\n\n----------------------------------------\n\nTITLE: Label Name Length Validation Error Properties\nDESCRIPTION: Configuration and response properties for the label_name_too_long error that occurs when label names exceed the maximum allowed length.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/request-validation-rate-limits.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                | Value             |\n|-------------------------|-------------------|\n| Enforced by             | `distributor`     |\n| Outcome                 | Request rejected  |\n| Retryable               | **No**            |\n| Sample discarded        | **Yes**           |\n| Configurable per tenant | Yes               |\n| HTTP status code        | `400 Bad Request` |\n```\n\n----------------------------------------\n\nTITLE: Initializing Google Cloud Storage Client with Custom Credentials in Go\nDESCRIPTION: Creates a new Google Cloud Storage client using custom auth.Credentials. This approach offers the most flexibility in managing authorization for Google Cloud services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ncreds := ...\nclient, err := storage.NewClient(ctx, option.WithAuthCredentials(creds))\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Task for Loki Distributor\nDESCRIPTION: HCL configuration for the Loki distributor Docker task, including container configuration and port definitions.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\n    task \"distributor\" {\n      driver       = \"docker\"\n      user         = \"nobody\"\n      kill_timeout = \"90s\"\n\n      config {\n        image = \"grafana/loki:${var.versions.loki}\"\n        ports = [\n          \"http\",\n          \"health\", # do not forget to publish health port\n          \"grpc\",\n        ]\n```\n\n----------------------------------------\n\nTITLE: Assigning Storage Permissions to Azure Managed Identity using Azure CLI\nDESCRIPTION: This shell command assigns the 'Storage Blob Data Contributor' role to the Azure Managed Identity, granting the necessary permissions for LokiStack to access Azure Storage containers.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\naz role assignment create \\\n  --assignee \"$MANAGED_IDENTITY_ID\" \\\n  --role \"Storage Blob Data Contributor\" \\\n  --scope \"/subscriptions/$SUBSCRIPTION_ID\"\n```\n\n----------------------------------------\n\nTITLE: Running Stream Generator with Default Settings\nDESCRIPTION: Basic example of running the Stream Generator Docker container with default settings.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/stream-generator/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 9090:9090 grafana/stream-generator\n```\n\n----------------------------------------\n\nTITLE: Creating Minio Object Storage Secret for Loki\nDESCRIPTION: Command to create a Kubernetes secret for Minio storage authentication. This secret contains the bucket name, endpoint, and access credentials needed for Loki to connect to a Minio server.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_8\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-minio \\\n  --from-literal=bucketnames=\"<BUCKET_NAME>\" \\\n  --from-literal=endpoint=\"<MINIO_BUCKET_ENDPOINT>\" \\\n  --from-literal=access_key_id=\"<MINIO_ACCESS_KEY_ID>\" \\\n  --from-literal=access_key_secret=\"<MINIO_ACCESS_KEY_SECRET>\"\n```\n\n----------------------------------------\n\nTITLE: Coalescing Tokens for Performance in Go\nDESCRIPTION: Snippet demonstrating how to improve performance by coalescing runs of identical token types into a single token.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nlexer = chroma.Coalesce(lexer)\n```\n\n----------------------------------------\n\nTITLE: Integrating Log Rotation with Zap and Lumberjack in Go\nDESCRIPTION: This code snippet shows how to integrate the lumberjack log rotation package with Zap. It sets up a zapcore.WriteSyncer using lumberjack.Logger for log file rotation and creates a Zap logger with custom configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/FAQ.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nw := zapcore.AddSync(&lumberjack.Logger{\n  Filename:   \"/var/log/myapp/foo.log\",\n  MaxSize:    500, // megabytes\n  MaxBackups: 3,\n  MaxAge:     28, // days\n})\ncore := zapcore.NewCore(\n  zapcore.NewJSONEncoder(zap.NewProductionEncoderConfig()),\n  w,\n  zap.InfoLevel,\n)\nlogger := zap.New(core)\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudflare Log Pulling in Promtail\nDESCRIPTION: Configuration block for setting up Promtail to pull HTTP log messages from Cloudflare using the Logpull API. It specifies required fields like api_token and zone_id, along with optional fields like fields_type and labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n- job_name: cloudflare\n  cloudflare:\n    api_token: REDACTED\n    zone_id: REDACTED\n    fields_type: all\n    labels:\n      job: cloudflare-foo.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Endpoints via Environment Variables in Go\nDESCRIPTION: Adds support for configuring endpoints using environment variables and the AWS shared configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/internal/ini/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\n// Example usage:\n// AWS_ENDPOINT_URL_SERVICE_ID=https://custom-endpoint.com\n```\n\n----------------------------------------\n\nTITLE: Sorting Semantic Versions in Go\nDESCRIPTION: Example of how to parse and sort a collection of semantic versions using the standard library's sort package and the semver package's Collection type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/semver/v3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nraw := []string{\"1.2.3\", \"1.0\", \"1.3\", \"2\", \"0.4.2\",}\nvs := make([]*semver.Version, len(raw))\nfor i, r := range raw {\n    v, err := semver.NewVersion(r)\n    if err != nil {\n        t.Errorf(\"Error parsing version: %s\", err)\n    }\n\n    vs[i] = v\n}\n\nsort.Sort(semver.Collection(vs))\n```\n\n----------------------------------------\n\nTITLE: Using Sprig Template Functions Example\nDESCRIPTION: Demonstrates how to use Sprig's template functions within Go templates, showing function chaining with the upper and repeat functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/sprig/v3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ \"hello!\" | upper | repeat 5 }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Labeldrop with Replace Stage in YAML\nDESCRIPTION: An example pipeline configuration that demonstrates the use of the labeldrop stage in combination with a replace stage. It shows how to manipulate log lines and drop specific labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labeldrop.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- replace:\n    expression: \"(.*)\"\n    replace: \"pod_name:{{ .kubernetes_pod_name }} {{ .Value }}\"\n- labeldrop:\n    - kubernetes_pod_name\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Backup Handler for Bolt Database in Go\nDESCRIPTION: This code creates an HTTP handler function to backup a Bolt database. It sets appropriate headers for content type, filename, and length before writing the database content to the response writer. This enables hot backups without blocking other database operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_21\n\nLANGUAGE: go\nCODE:\n```\nfunc BackupHandleFunc(w http.ResponseWriter, req *http.Request) {\n\terr := db.View(func(tx *bolt.Tx) error {\n\t\tw.Header().Set(\"Content-Type\", \"application/octet-stream\")\n\t\tw.Header().Set(\"Content-Disposition\", `attachment; filename=\"my.db\"`)\n\t\tw.Header().Set(\"Content-Length\", strconv.Itoa(int(tx.Size())))\n\t\t_, err := tx.WriteTo(w)\n\t\treturn err\n\t})\n\tif err != nil {\n\t\thttp.Error(w, err.Error(), http.StatusInternalServerError)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Using RGB Colors in Go\nDESCRIPTION: Examples of using 24-bit RGB color codes for foreground and background colors\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ncolor.RGB(255, 128, 0).Println(\"foreground orange\")\ncolor.RGB(230, 42, 42).Println(\"foreground red\")\n\ncolor.BgRGB(255, 128, 0).Println(\"background orange\")\ncolor.BgRGB(230, 42, 42).Println(\"background red\")\n```\n\n----------------------------------------\n\nTITLE: Viewing Loki Deployment Pod Status\nDESCRIPTION: Example output showing the status of all Loki components pods after a successful deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_16\n\nLANGUAGE: console\nCODE:\n```\nNAME                                    READY   STATUS    RESTARTS   AGE\nloki-canary-crqpg                       1/1     Running   0          10m\nloki-canary-hm26p                       1/1     Running   0          10m\nloki-canary-v9wv9                       1/1     Running   0          10m\nloki-chunks-cache-0                     2/2     Running   0          10m\nloki-compactor-0                        1/1     Running   0          10m\nloki-distributor-78ccdcc9b4-9wlhl       1/1     Running   0          10m\nloki-distributor-78ccdcc9b4-km6j2       1/1     Running   0          10m\nloki-distributor-78ccdcc9b4-ptwrb       1/1     Running   0          10m\nloki-gateway-5f97f78755-hm6mx           1/1     Running   0          10m\nloki-index-gateway-0                    1/1     Running   0          10m\nloki-index-gateway-1                    1/1     Running   0          10m\nloki-ingester-zone-a-0                  1/1     Running   0          10m\nloki-ingester-zone-b-0                  1/1     Running   0          10m\nloki-ingester-zone-c-0                  1/1     Running   0          10m\nloki-querier-89d4ff448-4vr9b            1/1     Running   0          10m\nloki-querier-89d4ff448-7nvrf            1/1     Running   0          10m\nloki-querier-89d4ff448-q89kh            1/1     Running   0          10m\nloki-query-frontend-678899db5-n5wc4     1/1     Running   0          10m\nloki-query-frontend-678899db5-tf69b     1/1     Running   0          10m\nloki-query-scheduler-7d666bf759-9xqb5   1/1     Running   0          10m\nloki-query-scheduler-7d666bf759-kpb5q   1/1     Running   0          10m\nloki-results-cache-0                    2/2     Running   0          10m\nloki-ruler-0                            1/1     Running   0          10m\n```\n\n----------------------------------------\n\nTITLE: Testing Inactivity Timer\nDESCRIPTION: Test case demonstrating how to test the inactivity timer implementation using Quartz's trapping functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_20\n\nLANGUAGE: go\nCODE:\n```\nfunc TestInactivityTimer_Late(t *testing.T) {\n\tctx, cancel := context.WithTimeout(10*time.Second)\n\tdefer cancel()\n\tmClock := quartz.NewMock(t)\n\ttrap := mClock.Trap.Until(\"inner\")\n\tdefer trap.Close()\n\n\tit := &InactivityTimer{\n\t\tactivity: mClock.Now(),\n\t\tclock: mClock,\n\t}\n\tit.Start()\n\n\tw := mClock.Advance(10*time.Minute)\n\tc := trap.Wait(ctx)\n\tmClock.Advance(3*time.Millisecond)\n\tc.Release()\n\tw.MustWait(ctx)\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Fuzzy Matching Example with Highlighted Output in Go\nDESCRIPTION: Demonstrates basic usage of the fuzzy matching library by finding matches for a pattern in a string slice and highlighting the matched characters in bold in the terminal output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sahilm/fuzzy/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/sahilm/fuzzy\"\n)\n\nfunc main() {\n\tconst bold = \"\\033[1m%s\\033[0m\"\n\tpattern := \"mnr\"\n\tdata := []string{\"game.cpp\", \"moduleNameResolver.ts\", \"my name is_Ramsey\"}\n\n\tmatches := fuzzy.Find(pattern, data)\n\n\tfor _, match := range matches {\n\t\tfor i := 0; i < len(match.Str); i++ {\n\t\t\tif contains(i, match.MatchedIndexes) {\n\t\t\t\tfmt.Print(fmt.Sprintf(bold, string(match.Str[i])))\n\t\t\t} else {\n\t\t\t\tfmt.Print(string(match.Str[i]))\n\t\t\t}\n\t\t}\n\t\tfmt.Println()\n\t}\n}\n\nfunc contains(needle int, haystack []int) bool {\n\tfor _, i := range haystack {\n\t\tif needle == i {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Static Bash Completion Options in Go using Kingpin\nDESCRIPTION: Demonstrates how to add static hint options for bash completion to a CLI flag. This allows suggesting predefined options while still allowing custom input.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\napp := kingpin.New(\"completion\", \"My application with bash completion.\")\napp.Flag(\"port\", \"Provide a port to connect to\").\n    Required().\n    HintOptions(\"80\", \"443\", \"8080\").\n    IntVar(&c.port)\n```\n\n----------------------------------------\n\nTITLE: Configuring zstd Decoder with WithDecodeAllCapLimit (Go)\nDESCRIPTION: Example of using the WithDecodeAllCapLimit option added in version 1.15.10 to configure the zstd decoder. This option sets a capacity limit for the DecodeAll function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nzstd.WithDecodeAllCapLimit(limit)\n```\n\n----------------------------------------\n\nTITLE: Converting Retryable HTTP Client to Standard HTTP Client in Go\nDESCRIPTION: Shows how to create a retryablehttp.Client with custom settings and convert it to a standard *http.Client. This allows for broader application of retry functionality with minimal effort.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-retryablehttp/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nretryClient := retryablehttp.NewClient()\nretryClient.RetryMax = 10\n\nstandardClient := retryClient.StandardClient() // *http.Client\n```\n\n----------------------------------------\n\nTITLE: Running Local Documentation Preview with Make\nDESCRIPTION: Command to generate a local preview of the Loki documentation using Docker or Podman. This creates a Hugo server at localhost:3002 where you can review your changes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake docs\n```\n\n----------------------------------------\n\nTITLE: Implementing CORS Support with HttpRouter GlobalOPTIONS Handler in Go\nDESCRIPTION: This snippet shows how to configure automatic responses to OPTIONS requests to support CORS preflight requests. It uses the Router.GlobalOPTIONS handler to set appropriate CORS headers and return a 204 No Content status.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/julienschmidt/httprouter/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nrouter.GlobalOPTIONS = http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    if r.Header.Get(\"Access-Control-Request-Method\") != \"\" {\n        // Set CORS headers\n        header := w.Header()\n        header.Set(\"Access-Control-Allow-Methods\", r.Header.Get(\"Allow\"))\n        header.Set(\"Access-Control-Allow-Origin\", \"*\")\n    }\n\n    // Adjust status code to 204\n    w.WriteHeader(http.StatusNoContent)\n})\n```\n\n----------------------------------------\n\nTITLE: Creating Default Azure Credential in Go\nDESCRIPTION: Code to create a default Azure credential for authentication with Azure services. This uses the azidentity package to handle authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncred, err := azidentity.NewDefaultAzureCredential(nil)\n```\n\n----------------------------------------\n\nTITLE: Multiple Drop Stages Configuration\nDESCRIPTION: Example showing how to use multiple drop stages to create OR conditions for dropping log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/drop.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- json:\n    expressions:\n     time:\n     msg:\n- timestamp:\n    source: time\n    format: RFC3339\n- drop:\n    older_than: 24h\n- drop:\n    longer_than: 8kb\n- drop:\n    source: \"msg\"\n    expression: \".*trace.*\"\n```\n\n----------------------------------------\n\nTITLE: Representing Ring Data Structure in JSON\nDESCRIPTION: JSON structure representing the Loki ring state, including tokens and ingesters with their states, addresses, and heartbeat information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tokens\": [\n    {\n      \"token\": \"123456\",\n      \"ingester\": \"ingester-1\",\n      \"state\": \"ACTIVE\",\n      \"timestamp\": \"2024-02-04T12:00:00Z\"\n    },\n    // ... more tokens\n  ],\n  \"ingesters\": {\n    \"ingester-1\": {\n      \"state\": \"ACTIVE\",\n      \"tokens\": [\"123456\", \"789012\"],\n      \"address\": \"ingester-1:3100\",\n      \"last_heartbeat\": \"2024-02-04T12:00:00Z\"\n    }\n    // ... more ingesters\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Descheduler Pod Eviction Logs\nDESCRIPTION: Log entries showing descheduler operation including node utilization checks, pod eviction attempts, and reasons for non-evictable pods. Includes CPU, memory and pod count metrics for cluster nodes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_0\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:04:17.597069       1 descheduler.go:169] \"Number of evicted pods\" totalEvicted=0\nI0507 12:04:17.597049       1 profile.go:356] \"Total number of pods evicted\" extension point=\"Balance\" evictedPods=0\nI0507 12:04:17.596431       1 nodeutilization.go:204] \"Node is underutilized\" node=\"gke-dev-eu-west-3-main-n2s8-1-1dd39c-d1c92061-4z2l\" usage={\"cpu\":\"984m\",\"memory\":\"611Mi\",\"pods\":\"16\"} usagePercentage={\"cpu\":12.44,\"memory\":2.15,\"pods\":25}\nI0507 12:04:17.596411       1 nodeutilization.go:207] \"Node is overutilized\" node=\"gke-dev-eu-west-3-main-n2s8-1-1dd39c-d1c92061-nxkm\" usage={\"cpu\":\"7813m\",\"memory\":\"23232Mi\",\"pods\":\"64\"} usagePercentage={\"cpu\":98.77,\"memory\":81.8,\"pods\":100}\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki Deployment\nDESCRIPTION: Command to check the status of Loki pods running in the namespace, confirming successful deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n loki\n```\n\n----------------------------------------\n\nTITLE: Implementing File Logging in Bubble Tea (Go)\nDESCRIPTION: This code snippet demonstrates how to implement file logging in a Bubble Tea application. It checks for a DEBUG environment variable, creates a log file, and defers closing the file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nif len(os.Getenv(\"DEBUG\")) > 0 {\n\tf, err := tea.LogToFile(\"debug.log\", \"debug\")\n\tif err != nil {\n\t\tfmt.Println(\"fatal:\", err)\n\t\tos.Exit(1)\n\t}\n\tdefer f.Close()\n}\n```\n\n----------------------------------------\n\nTITLE: Prometheus Alert for Maxed Out Loki Autoscaler\nDESCRIPTION: A YAML configuration defining a Prometheus alert that triggers when the HPA has been running at maximum replicas for an extended period (3 hours), indicating potential underprovisioning.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/autoscaling_queriers.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nname: LokiAutoscalerMaxedOut\nexpr: kube_horizontalpodautoscaler_status_current_replicas{namespace=~\"loki-cluster\"} == kube_horizontalpodautoscaler_spec_max_replicas{namespace=~\"loki-cluster\"}\nfor: 3h\nlabels:\n  severity: warning\nannotations:\n  description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} has been running at max replicas for longer than 3h; this can indicate underprovisioning.\n  summary: HPA has been running at max replicas for an extended time\n```\n\n----------------------------------------\n\nTITLE: Defining BucketReader Interface in Go\nDESCRIPTION: Defines the BucketReader interface for read-only access to object storage. Includes methods for iterating through objects, getting object contents and checking existence.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// BucketReader provides read access to an object storage bucket.\ntype BucketReader interface {\n\t// Iter calls f for each entry in the given directory (not recursive.). The argument to f is the full\n\t// object name including the prefix of the inspected directory.\n\n\t// Entries are passed to function in sorted order.\n\tIter(ctx context.Context, dir string, f func(name string) error, options ...IterOption) error\n\n\t// IterWithAttributes calls f for each entry in the given directory similar to Iter.\n\t// In addition to Name, it also includes requested object attributes in the argument to f.\n\t//\n\t// Attributes can be requested using IterOption.\n\t// Not all IterOptions are supported by all providers, requesting for an unsupported option will fail with ErrOptionNotSupported.\n\tIterWithAttributes(ctx context.Context, dir string, f func(attrs IterObjectAttributes) error, options ...IterOption) error\n\n\t// SupportedIterOptions returns a list of supported IterOptions by the underlying provider.\n\tSupportedIterOptions() []IterOptionType\n\n\t// Get returns a reader for the given object name.\n\tGet(ctx context.Context, name string) (io.ReadCloser, error)\n\n\t// GetRange returns a new range reader for the given object name and range.\n\tGetRange(ctx context.Context, name string, off, length int64) (io.ReadCloser, error)\n\n\t// Exists checks if the given object exists in the bucket.\n\tExists(ctx context.Context, name string) (bool, error)\n\n\t// IsObjNotFoundErr returns true if error means that object is not found. Relevant to Get operations.\n\tIsObjNotFoundErr(err error) bool\n\n\t// IsAccessDeniedErr returns true if access to object is denied.\n\tIsAccessDeniedErr(err error) bool\n\n\t// Attributes returns information about the specified object.\n\tAttributes(ctx context.Context, name string) (ObjectAttributes, error)\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with DigitalOcean API\nDESCRIPTION: Example of creating a new DigitalOcean client using a Personal Access Token (PAT) for authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"github.com/digitalocean/godo\"\n)\n\nfunc main() {\n    client := godo.NewFromToken(\"my-digitalocean-api-token\")\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Distributor Ring Status in Loki API\nDESCRIPTION: Displays a web page with the distributor hash ring status, including state, health, and last heartbeat time of each distributor.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nGET /distributor/ring\n```\n\n----------------------------------------\n\nTITLE: Boolean Configuration Values for Loki Logger\nDESCRIPTION: Defines the accepted string values for boolean configuration parameters in the Loki logging driver. Includes both true and false value representations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/configuration.md#2025-04-19_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n\"1\", \"t\", \"T\", \"true\", \"TRUE\", \"True\"\n\"0\", \"f\", \"F\", \"false\", \"FALSE\", \"False\"\n```\n\n----------------------------------------\n\nTITLE: Serving Static Files with HTTP FileServer in Go\nDESCRIPTION: Example of how to use the generated assets filesystem with http.FileServer to serve static files over HTTP.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\nhttp.Handle(\"/assets/\", http.FileServer(assets))\n```\n\n----------------------------------------\n\nTITLE: Implementing RPC Client with Codec in Go\nDESCRIPTION: Example of setting up an RPC client using the codec library for custom serialization.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-msgpack/codec/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nconn, err = net.Dial(\"tcp\", \"localhost:5555\")\nrpcCodec := codec.GoRpc.ClientCodec(conn, h)\n//OR rpcCodec := codec.MsgpackSpecRpc.ClientCodec(conn, h)\nclient := rpc.NewClientWithCodec(rpcCodec)\n```\n\n----------------------------------------\n\nTITLE: Installing the Clipboard Paste Utility\nDESCRIPTION: Command to install the gopaste utility which allows pasting clipboard content from the command line. Includes an example of saving clipboard content to a file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/atotto/clipboard/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ go get github.com/atotto/clipboard/cmd/gopaste\n$ # example:\n$ gopaste > document.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Tenant Limits Override in Loki runtime.yaml\nDESCRIPTION: Example YAML configuration for overriding tenant limits in Loki. This configuration sets custom ingestion rate and maximum streams/chunks values for a specific tenant.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/overrides-exporter.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\noverrides:\n  \"tenant_1\":\n    ingestion_rate_mb: 10\n    max_streams_per_user: 100000\n    max_chunks_per_query: 100000\n```\n\n----------------------------------------\n\nTITLE: Applying Complete Colors in Go with Lip Gloss\nDESCRIPTION: Shows how to specify exact color values for different color profiles without automatic degradation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nlipgloss.CompleteColor{TrueColor: \"#0000FF\", ANSI256: \"86\", ANSI: \"5\"}\n```\n\n----------------------------------------\n\nTITLE: Defining Labeldrop Stage Schema in YAML\nDESCRIPTION: The schema for the labeldrop stage in Promtail's pipeline configuration. It specifies an array of strings representing the labels to be dropped.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labeldrop.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlabeldrop:\n  - [<string>]\n  ...\n```\n\n----------------------------------------\n\nTITLE: Converting Colors Between Color Spaces in Go\nDESCRIPTION: Shows how to convert a color object back to various color space representations including hexadecimal, HSV, XYZ, xyY, Lab, Luv, and HCL.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nhex := c.Hex()\nh, s, v := c.Hsv()\nx, y, z := c.Xyz()\nx, y, Y := c.Xyy()\nl, a, b := c.Lab()\nl, u, v := c.Luv()\nh, c, l := c.Hcl()\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Fprint Functions in Go\nDESCRIPTION: Examples of creating custom formatted print functions for specific writers\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nblue := color.New(color.FgBlue).FprintfFunc()\nblue(myWriter, \"important notice: %s\", stars)\n\n// Mix up with multiple attributes\nsuccess := color.New(color.Bold, color.FgGreen).FprintlnFunc()\nsuccess(myWriter, \"Don't forget this...\")\n```\n\n----------------------------------------\n\nTITLE: Testing Loki Deployment with k6\nDESCRIPTION: JavaScript test script for k6 to validate Loki deployment by writing and querying logs. It pushes logs of various sizes and performs instant and range queries to verify functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nimport {sleep, check} from 'k6';\nimport loki from 'k6/x/loki';\n\n/**\n* URL used for push and query requests\n* Path is automatically appended by the client\n* @constant {string}\n*/\n\nconst username = '<USERNAME>';\nconst password = '<PASSWORD>';\nconst external_ip = '<EXTERNAL-IP>';\n\nconst credentials = `${username}:${password}`;\n\nconst BASE_URL = `http://${credentials}@${external_ip}`;\n\n/**\n* Helper constant for byte values\n* @constant {number}\n*/\nconst KB = 1024;\n\n/**\n* Helper constant for byte values\n* @constant {number}\n*/\nconst MB = KB * KB;\n\n/**\n* Instantiate config and Loki client\n*/\n\nconst conf = new loki.Config(BASE_URL);\nconst client = new loki.Client(conf);\n\n/**\n* Define test scenario\n*/\nexport const options = {\n  vus: 10,\n  iterations: 10,\n};\n\nexport default () => {\n  // Push request with 10 streams and uncompressed logs between 800KB and 2MB\n  var res = client.pushParameterized(10, 800 * KB, 2 * MB);\n  // Check for successful write\n  check(res, { 'successful write': (res) => res.status == 204 });\n\n  // Pick a random log format from label pool\n  let format = randomChoice(conf.labels[\"format\"]);\n\n  // Execute instant query with limit 1\n  res = client.instantQuery(`count_over_time({format=\"${format}\"}[1m])`, 1)\n  // Check for successful read\n  check(res, { 'successful instant query': (res) => res.status == 200 });\n\n  // Execute range query over last 5m and limit 1000\n  res = client.rangeQuery(`{format=\"${format}\"}`, \"5m\", 1000)\n  // Check for successful read\n  check(res, { 'successful range query': (res) => res.status == 200 });\n\n  // Wait before next iteration\n  sleep(1);\n}\n\n/**\n* Helper function to get random item from array\n*/\nfunction randomChoice(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pending PVCs and Pods for Recovery in Kubernetes\nDESCRIPTION: Commands to delete pending PVCs and pods to allow Kubernetes to recreate them in functioning zones. This procedure targets specific Loki components (ingester, ruler, index-gateway).\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl delete pvc storage-lokistack-dev-ingester-1 -n openshift-logging\nkubectl delete pvc wal-lokistack-dev-ingester-1 -n openshift-logging\nkubectl delete pod lokistack-dev-ingester-1 -n openshift-logging\n\nkubectl delete pvc storage-lokistack-dev-ruler-1 -n openshift-logging\nkubectl delete pvc wal-lokistack-dev-ruler-1 -n openshift-logging\nkubectl delete pod lokistack-dev-ruler-1 -n openshift-logging\n\nkubectl delete pvc storage-lokistack-dev-index-gateway-1 -n openshift-logging\nkubectl delete pod lokistack-dev-index-gateway-1 -n openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Using PathMatch Function in Doublestar\nDESCRIPTION: Go function signature for PathMatch, which is similar to Match but uses the system's path separator automatically.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc PathMatch(pattern, name string) (bool, error)\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Simple Scalable Jsonnet Library\nDESCRIPTION: Command to install the Jsonnet library for Loki Simple Scalable Deployment (SSD) using jb (Jsonnet Bundler).\nSOURCE: https://github.com/grafana/loki/blob/main/production/ksonnet/loki-simple-scalable/example/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njb install github.com/grafana/loki/production/ksonnet/loki-simple-scalable@main\n```\n\n----------------------------------------\n\nTITLE: Fluent Bit Output Configuration\nDESCRIPTION: Example Fluent Bit output configuration generated from the container log configuration\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: conf\nCODE:\n```\n[OUTPUT]\n    Name grafana-loki\n    Match awsfirelens*\n    Url https://<userid>:<grafancloud apikey>@logs-prod-us-central1.grafana.net/loki/api/v1/push\n    Labels {job=\"firelens\"}\n    RemoveKeys container_id,ecs_task_arn\n    LabelKeys container_name,ecs_task_definition,source,ecs_cluster\n    LineFormat key_value\n```\n\n----------------------------------------\n\nTITLE: Creating an Azure Compute Service Client\nDESCRIPTION: Code snippet demonstrating how to create a specific client (AvailabilitySetsClient) from the client factory to access Azure Compute APIs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nclient := clientFactory.NewAvailabilitySetsClient()\n```\n\n----------------------------------------\n\nTITLE: Type Changes in Azure SDK for Go\nDESCRIPTION: Changes to type definitions in various structs, such as CloudServiceExtensionProperties fields changing from pointer types to interface types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// Type changes\nCloudServiceExtensionProperties.Settings: *string -> interface{}\nCloudServiceExtensionProperties.ProtectedSettings: *string -> interface{}\n\n// GalleryProperties.ProvisioningState: *GalleryPropertiesProvisioningState -> *GalleryProvisioningState\nVirtualMachineScaleSetIdentity.UserAssignedIdentities: map[string]*VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue -> map[string]*UserAssignedIdentitiesValue\n```\n\n----------------------------------------\n\nTITLE: Emitting Metrics to Graphite in Go\nDESCRIPTION: Demonstrates how to periodically emit metrics to Graphite using the Graphite client from the go-metrics-graphite package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/cyberdelia/go-metrics-graphite\"\n\naddr, _ := net.ResolveTCPAddr(\"tcp\", \"127.0.0.1:2003\")\ngo graphite.Graphite(metrics.DefaultRegistry, 10e9, \"metrics\", addr)\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Existing Keys in 'template' Stage in YAML\nDESCRIPTION: Shows how to use multiple existing keys ('level', 'app', 'module') in the 'template' stage to create a complex string value.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: app\n    template: '{{ .level }} for app {{ ToUpper .Value }} in module {{.module}}'\n```\n\n----------------------------------------\n\nTITLE: Configuring and Using Codec Handles in Go\nDESCRIPTION: Example of creating and configuring codec handles for Binc and Msgpack formats, including setting up custom extensions and creating encoders/decoders.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-msgpack/codec/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar (\n  bh codec.BincHandle\n  mh codec.MsgpackHandle\n)\n\nmh.MapType = reflect.TypeOf(map[string]interface{}(nil))\n\n// configure extensions\n// e.g. for msgpack, define functions and enable Time support for tag 1\n// mh.AddExt(reflect.TypeOf(time.Time{}), 1, myMsgpackTimeEncodeExtFn, myMsgpackTimeDecodeExtFn)\n\n// create and use decoder/encoder\nvar (\n  r io.Reader\n  w io.Writer\n  b []byte\n  h = &bh // or mh to use msgpack\n)\n\ndec = codec.NewDecoder(r, h)\ndec = codec.NewDecoderBytes(b, h)\nerr = dec.Decode(&v) \n\nenc = codec.NewEncoder(w, h)\nenc = codec.NewEncoderBytes(&b, h)\nerr = enc.Encode(v)\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki UI Service with YAML\nDESCRIPTION: YAML configuration for the Loki UI service, including node name, network settings, clustering parameters, and peer discovery options.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nui:\n  node_name: <string>           # Name for this node in the cluster\n  advertise_addr: <string>      # IP address to advertise\n  interface_names: <[]string>   # Network interfaces to use\n  rejoin_interval: <duration>   # How often to rejoin cluster\n  cluster_name: <string>        # Cluster identifier\n  discovery:\n    join_peers: <[]string>      # Initial peers to join\n```\n\n----------------------------------------\n\nTITLE: Using shorthand flag notation with P functions\nDESCRIPTION: Examples of defining flags with one-letter shorthand options using the P-suffix functions. These allow flags to be specified with single-dash notation on the command line.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nvar ip = flag.IntP(\"flagname\", \"f\", 1234, \"help message\")\nvar flagvar bool\nfunc init() {\n\tflag.BoolVarP(&flagvar, \"boolname\", \"b\", true, \"help message\")\n}\nflag.VarP(&flagVal, \"varname\", \"v\", \"help message\")\n```\n\n----------------------------------------\n\nTITLE: Basic Docker Stage Configuration Schema in YAML\nDESCRIPTION: The minimal YAML configuration schema for the Docker pipeline stage. This stage requires no additional configuration options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/docker.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndocker: {}\n```\n\n----------------------------------------\n\nTITLE: Providing Default Values when Accessing Objx Maps in Go\nDESCRIPTION: Shows how to specify a default value when accessing a map entry that might not exist or might be of the wrong type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nGet(\"code\").Int(-1)\n```\n\n----------------------------------------\n\nTITLE: Storing Loki Rules in Consul KV with Terraform (HCL)\nDESCRIPTION: Terraform configuration to store Loki alert rules in Consul KV. It uses dynamic blocks to iterate over local files and create Consul KV entries.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_8\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"consul_keys\" \"loki-rules\" {\n  dynamic \"key\" {\n    for_each = fileset(\"${path.module}/loki-rules\", \"**\")\n    content {\n      path   = \"configs/loki-rules/${trimsuffix(key.value, \".yml\")}\"\n      value  = file(\"${file.module}/loki-rules/${key.value}\")\n      delete = true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Expected JSON Response from Loki Query\nDESCRIPTION: Sample JSON output expected when querying Loki for logs with the job label 'test'.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"stream\": {\n      \"job\": \"test\"\n    },\n    \"values\": [\n      [\n        \"1588337198000000000\",\n        \"fizzbuzz\"\n      ]\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Building Stream Generator Docker Image\nDESCRIPTION: Command to build the Docker image for the Stream Generator from the root of the Loki repository.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/stream-generator/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t grafana/stream-generator -f tools/stream-generator/Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Defining Loki Label Mapping\nDESCRIPTION: JSON configuration for mapping log fields to Loki labels, used by the Fluent Bit Loki output plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n\"service\": \"service_name\",\n\"instance_id\": \"instance_id\"\n}\n```\n\n----------------------------------------\n\nTITLE: Import Grouping Pattern in Go Files\nDESCRIPTION: Example demonstrating the required import grouping pattern for Go files in the Jaeger project, which groups standard library imports, external project imports, and internal project imports.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\t\"fmt\"\n\n\t\"github.com/uber/jaeger-lib/metrics\"\n\t\"go.uber.org/zap\"\n\n\t\"github.com/uber/jaeger-client-go/config\"\n)\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Trace in Go\nDESCRIPTION: Creates a new trace for an operation with a custom field and logs it if the operation takes longer than 100ms. The trace measures the time spent in the operation and can include custom fields for additional context.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/utils/trace/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc doSomething() {\n    opTrace := trace.New(\"operation\", Field{Key: \"fieldKey1\", Value: \"fieldValue1\"})\n    defer opTrace.LogIfLong(100 * time.Millisecond)\n    // do something\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing termenv Output in Go\nDESCRIPTION: This snippet shows how to create a new termenv Output object using the standard output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\noutput := termenv.NewOutput(os.Stdout)\n```\n\n----------------------------------------\n\nTITLE: Working with Pointer Types in Go-Autorest\nDESCRIPTION: Illustrates the challenge of working with pointers to base types in Go structures that map to JSON, and how this approach fails when trying to use inline string values directly.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ns := struct {\n  S *string\n}{ S: &\"foo\" }\n```\n\n----------------------------------------\n\nTITLE: Importing and Using SASLprep in Go\nDESCRIPTION: This snippet demonstrates how to import the stringprep library and use the SASLprep profile to prepare a string. It showcases the basic usage of the library for string preparation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xdg-go/stringprep/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nimport \"github.com/xdg-go/stringprep\"\n\nprepped := stringprep.SASLprep.Prepare(\"TrustNô1\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruler Storage with Thanos\nDESCRIPTION: Configuration example for ruler storage using the new Thanos storage client format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n   use_thanos_objstore: true # enable the new storage clients\nruler_storage:\n   backend: gcs\n   gcs:\n      bucket_name: \"example-bucket\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Colorable Logger with Logrus in Go\nDESCRIPTION: Example showing how to set up logrus logger with colorable output support. The code configures logrus to force colors and use a colorable stdout writer, enabling proper color display on Windows systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-colorable/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nlogrus.SetFormatter(&logrus.TextFormatter{ForceColors: true})\nlogrus.SetOutput(colorable.NewColorableStdout())\n\nlogrus.Info(\"succeeded\")\nlogrus.Warn(\"not correct\")\nlogrus.Error(\"something error\")\nlogrus.Fatal(\"panic\")\n```\n\n----------------------------------------\n\nTITLE: Standard Time-based Select Pattern in Go\nDESCRIPTION: Common pattern for handling tickers with context cancellation in Go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\nt := time.NewTicker(duration)\nfor {\n\tselect {\n\tcase <-ctx.Done():\n\t\treturn ctx.Err()\n\tcase <-t.C:\n\t\terr := do()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Slice Iteration in Go\nDESCRIPTION: Demonstrates using Each function to iterate over a slice and perform operations on each element\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ndata := []interface{}{1, 2, 3, 4, 5}\nvar fn govalidator.Iterator = func(value interface{}, index int) {\n\tprintln(value.(int))\n}\ngovalidator.Each(data, fn)\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Operations in Go Templates\nDESCRIPTION: Functions for performing regular expression operations in templates.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_20\n\nLANGUAGE: template\nCODE:\n```\n{{ count \"a|b\" \"abab\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ count \"o\" \"foo\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{job=\"xyzlog\"} | line_format `{{ __line__ | count \"XYZ\"}}`\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ regexReplaceAll \"(a*)bc\" .some_label \"${1}a\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ regexReplaceAllLiteral \"(ts=)\" .timestamp \"timestamp=\" }}\n```\n\n----------------------------------------\n\nTITLE: Using SelfRef for Span Continuation in Go\nDESCRIPTION: Illustrates how to use the SelfRef feature to continue a span with externally provided span context in Go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nspan := tracer.StartSpan(\n    \"continued_span\",\n    jaeger.SelfRef(yourSpanContext),\n)\n...\ndefer span.Finish()\n```\n\n----------------------------------------\n\nTITLE: Vault Kubernetes Auth Lease Revocation Log Format\nDESCRIPTION: Standard log format for Vault's lease revocation events in Kubernetes authentication. Each entry includes timestamp, log level, operation type and lease ID containing cluster/environment information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_10\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:55:05.163Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-eu-west-3/login/hb18acdffb62d3f20f74b9296c2d10b04669006ddacd6a588a9234a87ed99e9ff\n```\n\n----------------------------------------\n\nTITLE: Running Validator Benchmarks in Go\nDESCRIPTION: A series of benchmark tests for the go-playground/validator library, measuring performance across various validation scenarios. The tests cover field validation, array and map diving, custom types, struct-level validation, and complex struct validation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-playground/validator/v10/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ngo version go1.23.3 darwin/arm64\ngoos: darwin\ngoarch: arm64\ncpu: Apple M3 Max\npkg: github.com/go-playground/validator/v10\nBenchmarkFieldSuccess-16                                                42461943                27.88 ns/op            0 B/op          0 allocs/op\nBenchmarkFieldSuccessParallel-16                                        486632887                2.289 ns/op           0 B/op          0 allocs/op\nBenchmarkFieldFailure-16                                                 9566167               121.3 ns/op           200 B/op          4 allocs/op\nBenchmarkFieldFailureParallel-16                                        17551471                83.68 ns/op          200 B/op          4 allocs/op\nBenchmarkFieldArrayDiveSuccess-16                                        7602306               155.6 ns/op            97 B/op          5 allocs/op\nBenchmarkFieldArrayDiveSuccessParallel-16                               20664610                59.80 ns/op           97 B/op          5 allocs/op\nBenchmarkFieldArrayDiveFailure-16                                        4659756               252.9 ns/op           301 B/op         10 allocs/op\nBenchmarkFieldArrayDiveFailureParallel-16                                8010116               152.9 ns/op           301 B/op         10 allocs/op\nBenchmarkFieldMapDiveSuccess-16                                          2834575               421.2 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveSuccessParallel-16                                  7179700               171.8 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveFailure-16                                          3081728               384.4 ns/op           376 B/op         13 allocs/op\nBenchmarkFieldMapDiveFailureParallel-16                                  6058137               204.0 ns/op           377 B/op         13 allocs/op\nBenchmarkFieldMapDiveWithKeysSuccess-16                                  2544975               464.8 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveWithKeysSuccessParallel-16                          6661954               181.4 ns/op           288 B/op         14 allocs/op\nBenchmarkFieldMapDiveWithKeysFailure-16                                  2435484               490.7 ns/op           553 B/op         16 allocs/op\nBenchmarkFieldMapDiveWithKeysFailureParallel-16                          4249617               282.0 ns/op           554 B/op         16 allocs/op\nBenchmarkFieldCustomTypeSuccess-16                                      14943525                77.35 ns/op           32 B/op          2 allocs/op\nBenchmarkFieldCustomTypeSuccessParallel-16                              64051954                20.61 ns/op           32 B/op          2 allocs/op\nBenchmarkFieldCustomTypeFailure-16                                      10721384               107.1 ns/op           184 B/op          3 allocs/op\nBenchmarkFieldCustomTypeFailureParallel-16                              18714495                69.77 ns/op          184 B/op          3 allocs/op\nBenchmarkFieldOrTagSuccess-16                                            4063124               294.3 ns/op            16 B/op          1 allocs/op\nBenchmarkFieldOrTagSuccessParallel-16                                   31903756                41.22 ns/op           18 B/op          1 allocs/op\nBenchmarkFieldOrTagFailure-16                                            7748558               146.8 ns/op           216 B/op          5 allocs/op\nBenchmarkFieldOrTagFailureParallel-16                                   13139854                92.05 ns/op          216 B/op          5 allocs/op\nBenchmarkStructLevelValidationSuccess-16                                16808389                70.25 ns/op           16 B/op          1 allocs/op\nBenchmarkStructLevelValidationSuccessParallel-16                        90686955                14.47 ns/op           16 B/op          1 allocs/op\nBenchmarkStructLevelValidationFailure-16                                 5818791               200.2 ns/op           264 B/op          7 allocs/op\nBenchmarkStructLevelValidationFailureParallel-16                        11115874               107.5 ns/op           264 B/op          7 allocs/op\nBenchmarkStructSimpleCustomTypeSuccess-16                                7764956               151.9 ns/op            32 B/op          2 allocs/op\nBenchmarkStructSimpleCustomTypeSuccessParallel-16                       52316265                30.37 ns/op           32 B/op          2 allocs/op\nBenchmarkStructSimpleCustomTypeFailure-16                                4195429               277.2 ns/op           416 B/op          9 allocs/op\nBenchmarkStructSimpleCustomTypeFailureParallel-16                        7305661               164.6 ns/op           432 B/op         10 allocs/op\nBenchmarkStructFilteredSuccess-16                                        6312625               186.1 ns/op           216 B/op          5 allocs/op\nBenchmarkStructFilteredSuccessParallel-16                               13684459                93.42 ns/op          216 B/op          5 allocs/op\nBenchmarkStructFilteredFailure-16                                        6751482               171.2 ns/op           216 B/op          5 allocs/op\nBenchmarkStructFilteredFailureParallel-16                               14146070                86.93 ns/op          216 B/op          5 allocs/op\nBenchmarkStructPartialSuccess-16                                         6544448               177.3 ns/op           224 B/op          4 allocs/op\nBenchmarkStructPartialSuccessParallel-16                                13951946                88.73 ns/op          224 B/op          4 allocs/op\nBenchmarkStructPartialFailure-16                                         4075833               287.5 ns/op           440 B/op          9 allocs/op\nBenchmarkStructPartialFailureParallel-16                                 7490805               161.3 ns/op           440 B/op          9 allocs/op\nBenchmarkStructExceptSuccess-16                                          4107187               281.4 ns/op           424 B/op          8 allocs/op\nBenchmarkStructExceptSuccessParallel-16                                 15979173                80.86 ns/op          208 B/op          3 allocs/op\nBenchmarkStructExceptFailure-16                                          4434372               264.3 ns/op           424 B/op          8 allocs/op\nBenchmarkStructExceptFailureParallel-16                                  8081367               154.1 ns/op           424 B/op          8 allocs/op\nBenchmarkStructSimpleCrossFieldSuccess-16                                6459542               183.4 ns/op            56 B/op          3 allocs/op\nBenchmarkStructSimpleCrossFieldSuccessParallel-16                       41013781                37.95 ns/op           56 B/op          3 allocs/op\nBenchmarkStructSimpleCrossFieldFailure-16                                4034998               292.1 ns/op           272 B/op          8 allocs/op\nBenchmarkStructSimpleCrossFieldFailureParallel-16                       11348446               115.3 ns/op           272 B/op          8 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldSuccess-16                     4448528               267.7 ns/op            64 B/op          4 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldSuccessParallel-16            26813619                48.33 ns/op           64 B/op          4 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldFailure-16                     3090646               384.5 ns/op           288 B/op          9 allocs/op\nBenchmarkStructSimpleCrossStructCrossFieldFailureParallel-16             9870906               129.5 ns/op           288 B/op          9 allocs/op\nBenchmarkStructSimpleSuccess-16                                         10675562               109.5 ns/op             0 B/op          0 allocs/op\nBenchmarkStructSimpleSuccessParallel-16                                 131159784                8.932 ns/op           0 B/op          0 allocs/op\nBenchmarkStructSimpleFailure-16                                          4094979               286.6 ns/op           416 B/op          9 allocs/op\nBenchmarkStructSimpleFailureParallel-16                                  7606663               157.9 ns/op           416 B/op          9 allocs/op\nBenchmarkStructComplexSuccess-16                                         2073470               576.0 ns/op           224 B/op          5 allocs/op\nBenchmarkStructComplexSuccessParallel-16                                 7821831               161.3 ns/op           224 B/op          5 allocs/op\nBenchmarkStructComplexFailure-16                                          576358              2001 ns/op            3042 B/op         48 allocs/op\nBenchmarkStructComplexFailureParallel-16                                 1000000              1171 ns/op            3041 B/op         48 allocs/op\nBenchmarkOneof-16                                                       22503973                52.82 ns/op            0 B/op          0 allocs/op\nBenchmarkOneofParallel-16                                                8538474               140.4 ns/op             0 B/op          0 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Handling etcd client errors in Go\nDESCRIPTION: Example of how to handle different types of errors returned by the etcd client, including context errors and gRPC errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/etcd/client/v3/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nresp, err := cli.Put(ctx, \"\", \"\")\nif err != nil {\n\tswitch err {\n\tcase context.Canceled:\n\t\tlog.Fatalf(\"ctx is canceled by another routine: %v\", err)\n\tcase context.DeadlineExceeded:\n\t\tlog.Fatalf(\"ctx is attached with a deadline is exceeded: %v\", err)\n\tcase rpctypes.ErrEmptyKey:\n\t\tlog.Fatalf(\"client-side error: %v\", err)\n\tdefault:\n\t\tlog.Fatalf(\"bad cluster endpoints, which are not etcd servers: %v\", err)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Debugging Dataplane Updates in Go\nDESCRIPTION: This code snippet shows the debug logging for applying dataplane updates in Felix. It includes steps like refreshing IP sets state and applying updates to the dataplane.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nfelix/int_dataplane.go 1807: Applying dataplane updates\nfelix/int_dataplane.go 1773: Refreshing IP sets state\n```\n\n----------------------------------------\n\nTITLE: Swift Storage Configuration\nDESCRIPTION: OpenStack Swift object storage configuration including authentication and endpoint settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_74\n\nLANGUAGE: yaml\nCODE:\n```\nauth_version: <int> | default = 0\nauth_url: <string> | default = \"\"\ninternal: <boolean> | default = false\nusername: <string> | default = \"\"\nuser_domain_name: <string> | default = \"\"\nuser_domain_id: <string> | default = \"\"\nuser_id: <string> | default = \"\"\npassword: <string> | default = \"\"\ndomain_id: <string> | default = \"\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Google Cloud Storage Client with Default Credentials in Go\nDESCRIPTION: Creates a new Google Cloud Storage client using default application credentials. This method allows the application to run in various environments without explicit configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nclient, err := storage.NewClient(ctx)\n```\n\n----------------------------------------\n\nTITLE: Configuring Destinations in values.yaml\nDESCRIPTION: YAML configuration for setting up Prometheus and Loki endpoints with authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndestinations:\n  - name: prometheus\n    type: prometheus\n    url: https://<PROMETHEUS-ENDPOINT>/api/prom/push\n    auth:\n      type: basic\n      usernameKey: username\n      passwordKey: password\n    secret:\n        create: false\n        name: metrics\n        namespace: meta\n\n  - name: loki\n    type: loki\n    url: https://<LOKI-ENDPOINT>/loki/api/v1/push\n    auth:\n      type: basic\n      usernameKey: username\n      passwordKey: password\n    secret:\n        create: false\n        name: logs\n        namespace: meta\n```\n\n----------------------------------------\n\nTITLE: Implementing Decolorize Stage in Promtail Pipeline YAML\nDESCRIPTION: An example of how to use the 'decolorize' stage in a Promtail pipeline configuration. This stage removes ANSI color codes from log lines.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/decolorize.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- decolorize:\n```\n\n----------------------------------------\n\nTITLE: Configuring Conntrack Listener for HTTP Server in Go\nDESCRIPTION: This example demonstrates how to wrap a net.Listener with conntrack to enable connection tracking, tracing, and TCP keep-alive for an HTTP server. It sets a custom listener name and configures TCP keep-alive duration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mwitkow/go-conntrack/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nlistener, err := net.Listen(\"tcp\", fmt.Sprintf(\":%d\", *port))\nlistener = conntrack.NewListener(listener, \n    conntrack.TrackWithName(\"http\"), \n    conntrack.TrackWithTracing(),\n    conntrack.TrackWithTcpKeepAlive(5 * time.Minutes))\nhttpServer.Serve(listener) \n```\n\n----------------------------------------\n\nTITLE: Initializing and Using MD5-SIMD Hash in Go\nDESCRIPTION: Basic usage example of the md5-simd package showing how to create a server, initialize a hash object, write data to it, and retrieve the digest. The code demonstrates the standard pattern for using the package in Go applications.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/md5-simd/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n    // Create server\n    server := md5simd.NewServer()\n    defer server.Close()\n\n    // Create hashing object (conforming to hash.Hash)\n    md5Hash := server.NewHash()\n    defer md5Hash.Close()\n\n    // Write one (or more) blocks\n    md5Hash.Write(block)\n    \n    // Return digest\n    digest := md5Hash.Sum([]byte{})\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Monitoring Helm Chart\nDESCRIPTION: Command to deploy the Kubernetes Monitoring Helm chart with custom values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm install meta-loki grafana/k8s-monitoring \\\n --namespace meta \\\n -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana's Helm Chart Repository\nDESCRIPTION: Bash command to add Grafana's chart repository to Helm for installing Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\n----------------------------------------\n\nTITLE: Running Promtail with Kafka Consumer Configuration\nDESCRIPTION: Command and output showing how to run Promtail in dry-run mode with a Kafka configuration file, displaying the logs as it connects to Kafka and consumes messages from the specified topic.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/kafka/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngo run ../../clients/cmd/promtail/main.go --dry-run --config.file ../../clients/cmd/promtail/promtail-kafka.yaml\n\nClients configured:\n----------------------\nurl: http://localhost:3100/loki/api/v1/push\nbatchwait: 1s\nbatchsize: 1048576\nfollow_redirects: false\nbackoff_config:\n  min_period: 500ms\n  max_period: 5m0s\n  max_retries: 10\ntimeout: 10s\ntenant_id: \"\"\n\nlevel=info ts=2021-11-02T10:44:14.137894Z caller=server.go:260 http=[::]:9080 grpc=[::]:59237 msg=\"server listening on addresses\"\nlevel=info ts=2021-11-02T10:44:14.138059Z caller=main.go:119 msg=\"Starting Promtail\" version=\"(version=, branch=, revision=)\"\nlevel=info ts=2021-11-02T10:44:14.139308Z caller=target_syncer.go:133 msg=\"new topics received\" topics=[promtail]\nlevel=info ts=2021-11-02T10:44:14.139337Z caller=consumer.go:50 msg=\"starting consumer\" topics=[promtail]\nlevel=info ts=2021-11-02T10:44:14.153164Z caller=consumer.go:92 msg=\"consuming topic\" details=\"member_id=sarama-8cfa484d-2a04-458a-a0c0-4506c7a0969f generation_id=5 topic=promtail partition=1 initial_offset=12\"\nlevel=info ts=2021-11-02T10:44:14.153673Z caller=consumer.go:92 msg=\"consuming topic\" details=\"member_id=sarama-8cfa484d-2a04-458a-a0c0-4506c7a0969f generation_id=5 topic=promtail partition=0 initial_offset=13\"\nlevel=info ts=2021-11-02T10:44:14.153927Z caller=consumer.go:92 msg=\"consuming topic\" details=\"member_id=sarama-8cfa484d-2a04-458a-a0c0-4506c7a0969f generation_id=5 topic=promtail partition=2 initial_offset=10\"\n\n2021-11-02T11:47:08.849115+0100{group=\"some_group\", job=\"kafka\", partition=\"1\", topic=\"promtail\"}       hello world !\n```\n\n----------------------------------------\n\nTITLE: Excluding IP Range in LogQL Line Filter\nDESCRIPTION: Shows how to use the ip() function with an IP range to exclude matching log lines in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"} != ip(\"192.168.4.5-192.168.4.20\")\n```\n\n----------------------------------------\n\nTITLE: Setting Terminal Window Title with ANSI Escape Sequence\nDESCRIPTION: Uses ANSI escape sequence to set the terminal window title to \"Test\". The sequence '\\033]2;Test\\007' instructs the terminal emulator to change the window title. The command also includes a sleep of 10 seconds to maintain the title change temporarily.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033]2;Test\\007\" && sleep 10\n```\n\n----------------------------------------\n\nTITLE: Configuring detection limit in mimetype for Go\nDESCRIPTION: Shows how to increase or remove the byte limit for MIME type detection, which can be useful for files with signatures towards the end.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gabriel-vasile/mimetype/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nmimetype.SetLimit(1024*1024) // Set limit to 1MB.\n// or\nmimetype.SetLimit(0) // No limit, whole file content used.\nmimetype.DetectFile(\"file.doc\")\n```\n\n----------------------------------------\n\nTITLE: Using helper functions to get flag values from a FlagSet\nDESCRIPTION: Demonstrates using the GetInt helper method to retrieve a flag value from a FlagSet, along with error handling. This approach avoids manual pointer handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\ni, err := flagset.GetInt(\"flagname\")\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Account with Azure CLI\nDESCRIPTION: Azure CLI command to create a new storage account with Standard locally redundant storage (LRS) in the West US region.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz storage account create --name MyStorageAccount --resource-group MyResourceGroup --location westus --sku Standard_LRS\n```\n\n----------------------------------------\n\nTITLE: Building RFC5424 Syslog Messages in Go\nDESCRIPTION: Code example showing how to construct a valid Syslog message using the builder API. Demonstrates setting message properties and checking validity of the constructed message.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-syslog/v4/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nmsg := &rfc5424.SyslogMessage{}\nmsg.SetTimestamp(\"not a RFC3339MICRO timestamp\")\nmsg.Valid() // Not yet a valid message (try msg.Valid())\nmsg.SetPriority(191)\nmsg.SetVersion(1)\nmsg.Valid() // Now it is minimally valid\n```\n\n----------------------------------------\n\nTITLE: Complete k6 Load Test Example\nDESCRIPTION: Example JavaScript implementation of a k6 load test using the Loki client\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport loki from 'k6/x/loki';\n\nconst timeout = 5000; // ms\nconst conf = loki.Config(\"http://localhost:3100\", timeout);\nconst client = loki.Client(conf);\n\nexport default () => {\n   client.pushParameterized(2, 512*1024, 1024*1024);\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Push-based Pub/Sub Subscription using Terraform\nDESCRIPTION: This Terraform configuration creates a push-based subscription for the Pub/Sub topic. GCP will use this subscription to send log entries to a web server that Promtail listens on.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: terraform\nCODE:\n```\n// Subscription\nvariable \"push_endpoint_url\" {\n  type        = string\n  description = \"Public URL where Promtail is hosted.\"\n}\n\nresource \"google_pubsub_subscription\" \"main\" {\n  name  = \"cloud-logs\"\n  topic = google_pubsub_topic.main.name\n  push_config {\n    push_endpoint = var.push_endpoint_url\n    attributes = {\n      x-goog-version = \"v1\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Type Ratios\nDESCRIPTION: Example configuration for setting up different ratios for various query types in a test scenario.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst queryTypeRatioConfig = [\n  {\n    ratio: 0.1,\n    item: readLabels\n  },\n  {\n    ratio: 0.15,\n    item: readLabelValues\n  },\n  {\n    ratio: 0.05,\n    item: readSeries\n  },\n  {\n    ratio: 0.5,\n    item: readRange\n  },\n  {\n    ratio: 0.2,\n    item: readInstant\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Pre-compiled JMESPath Queries in Go\nDESCRIPTION: Demonstrates how to pre-compile JMESPath queries for improved performance when running the same query multiple times.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jmespath/go-jmespath/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar jsondata = []byte(`{\"foo\": \"bar\"}`)\nvar data interface{}\nerr := json.Unmarshal(jsondata, &data)\nprecompiled, err := Compile(\"foo\")\nif err != nil{\n    // ... handle the error\n}\nresult, err := precompiled.Search(data)\nresult = \"bar\"\n```\n\n----------------------------------------\n\nTITLE: Registering and Building URLs with Gorilla Mux in Go\nDESCRIPTION: This snippet demonstrates how to register named routes and build URLs using Gorilla Mux. It shows how to handle path variables, host variables, and query parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nr := mux.NewRouter()\nr.HandleFunc(\"/articles/{category}/{id:[0-9]+}\", ArticleHandler).\n  Name(\"article\")\n\nurl, err := r.Get(\"article\").URL(\"category\", \"technology\", \"id\", \"42\")\n```\n\n----------------------------------------\n\nTITLE: Unsetting Rules in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to unset specific style rules in Lip Gloss.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\nvar style = lipgloss.NewStyle().\n    Bold(true).                        // make it bold\n    UnsetBold().                       // jk don't make it bold\n    Background(lipgloss.Color(\"227\")). // yellow background\n    UnsetBackground()                  // never mind\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Enterprise Helm Chart\nDESCRIPTION: Command to install or upgrade the Loki Enterprise Helm chart with custom override values, specifying the release name and namespace.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/docs/examples/enterprise/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install --values {PATH_TO_YOUR_OVERRIDES_YAML_FILE} {YOUR_RELEASE_NAME} grafana/loki-simple-scalable --namespace {KUBERNETES_NAMESPACE}\n```\n\n----------------------------------------\n\nTITLE: Creating Bigtable Test Cluster Using CBT\nDESCRIPTION: Command to create a Bigtable instance and cluster for testing purposes using the CBT tool. Creates a single-node cluster in us-central1-b with SSD storage.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/bigtable/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Creates a one node cluster in us-central1 with SSD storage\ncbt createinstance <instance-name> <display-name> <cluster-name> us-central1-b 1 SSD\n```\n\n----------------------------------------\n\nTITLE: Creating Separate Index for S2 Stream\nDESCRIPTION: Code demonstrating how to create a separate index for an S2 stream. The example shows using CloseIndex() instead of Close() to get the index for independent storage and later use.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_12\n\nLANGUAGE: Go\nCODE:\n```\n    // Get index for separate storage... \n\tenc := s2.NewWriter(w)\n\tio.Copy(enc, r)\n\tindex, err := enc.CloseIndex()\n```\n\n----------------------------------------\n\nTITLE: Using Logger in Application Run Method\nDESCRIPTION: Demonstrates how to use the logger within an application's Run method to log information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc (app *appObject) Run() {\n    app.logger.Info(\"starting up\", \"timestamp\", time.Now())\n\n    // ... app code ...\n```\n\n----------------------------------------\n\nTITLE: Initializing Root Logger in Go Main Function\nDESCRIPTION: Demonstrates how to create and initialize a root logger in the main function of a Go application using a hypothetical 'logimpl' implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n    // ... other setup code ...\n\n    // Create the \"root\" logger.  We have chosen the \"logimpl\" implementation,\n    // which takes some initial parameters and returns a logr.Logger.\n    logger := logimpl.New(param1, param2)\n\n    // ... other setup code ...\n```\n\n----------------------------------------\n\nTITLE: Viewing Logs for All Services in Docker Compose\nDESCRIPTION: This command displays logs for all services defined in the docker-compose file. It follows the log output in real-time.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/kafka/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose logs -f\n```\n\n----------------------------------------\n\nTITLE: Configuring AutoRest for Azure Blob SDK Generation\nDESCRIPTION: Base configuration for the AutoRest code generator, specifying the input file, output settings, and various options for generating the Azure Blob Storage SDK for Golang.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ngo: true\nclear-output-folder: false\nversion: \"^3.0.0\"\nlicense-header: MICROSOFT_MIT_NO_VERSION\ninput-file: \"https://raw.githubusercontent.com/Azure/azure-rest-api-specs/a32d0b2423d19835246bb2ef92941503bfd5e734/specification/storage/data-plane/Microsoft.BlobStorage/preview/2021-12-02/blob.json\"\ncredential-scope: \"https://storage.azure.com/.default\"\noutput-folder: ../generated\nfile-prefix: \"zz_\"\nopenapi-type: \"data-plane\"\nverbose: true\nsecurity: AzureKey\nmodelerfour:\n  group-parameters: false\n  seal-single-value-enum-by-default: true\n  lenient-model-deduplication: true\nexport-clients: true\nuse: \"@autorest/go@4.0.0-preview.61\"\n```\n\n----------------------------------------\n\nTITLE: Converting Bytes to Human-Readable Size in Go\nDESCRIPTION: Demonstrates how to use the humanize.Bytes() function to convert a byte count into a human-readable string representation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfmt.Printf(\"That file is %s.\", humanize.Bytes(82854982)) // That file is 83 MB.\n```\n\n----------------------------------------\n\nTITLE: Initializing BasePathFs in Afero (Go)\nDESCRIPTION: Creates a new BasePathFs instance that restricts all operations to a given path within an Fs. Operations on this Fs will have the base path prepended before calling the source Fs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nbp := afero.NewBasePathFs(afero.NewOsFs(), \"/base/path\")\n```\n\n----------------------------------------\n\nTITLE: Converting Value to Lowercase with 'template' Stage in YAML\nDESCRIPTION: Illustrates the use of the 'ToLower' function in the 'template' stage to convert the value of the 'app' key to lowercase.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/template.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- template:\n    source: app\n    template: '{{ ToLower .Value }}'\n```\n\n----------------------------------------\n\nTITLE: Basic CPU Information Example in Go\nDESCRIPTION: Complete Go example demonstrating how to use the cpuid package to print basic CPU information including name, cores, features, cache sizes, and testing for specific CPU features.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/cpuid/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t. \"github.com/klauspost/cpuid/v2\"\n)\n\nfunc main() {\n\t// Print basic CPU information:\n\tfmt.Println(\"Name:\", CPU.BrandName)\n\tfmt.Println(\"PhysicalCores:\", CPU.PhysicalCores)\n\tfmt.Println(\"ThreadsPerCore:\", CPU.ThreadsPerCore)\n\tfmt.Println(\"LogicalCores:\", CPU.LogicalCores)\n\tfmt.Println(\"Family\", CPU.Family, \"Model:\", CPU.Model, \"Vendor ID:\", CPU.VendorID)\n\tfmt.Println(\"Features:\", strings.Join(CPU.FeatureSet(), \",\"))\n\tfmt.Println(\"Cacheline bytes:\", CPU.CacheLine)\n\tfmt.Println(\"L1 Data Cache:\", CPU.Cache.L1D, \"bytes\")\n\tfmt.Println(\"L1 Instruction Cache:\", CPU.Cache.L1I, \"bytes\")\n\tfmt.Println(\"L2 Cache:\", CPU.Cache.L2, \"bytes\")\n\tfmt.Println(\"L3 Cache:\", CPU.Cache.L3, \"bytes\")\n\tfmt.Println(\"Frequency\", CPU.Hz, \"hz\")\n\n\t// Test if we have these specific features:\n\tif CPU.Supports(SSE, SSE2) {\n\t\tfmt.Println(\"We have Streaming SIMD 2 Extensions\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Repositories\nDESCRIPTION: Command to update all Helm repositories to ensure latest versions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Implementing Label Pool for Dynamic Queries\nDESCRIPTION: Shows how to configure and use a label pool for generating dynamic queries with specific label cardinality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst labelCardinality = {\n  \"app\": 5,\n  \"namespace\": 2,\n};\nconst conf = new loki.Config(BASE_URL, 10000, 1.0, labelCardinality);\nconst client = new loki.Client(conf);\n\nfunction randomChoice(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nexport default() => {\n  let app = randomChoice(conf.labels.app);\n  let namespace = randomChoice(conf.labels.namespace);\n  client.rangeQuery(`{app=\"${app}\", namespace=\"${namespace}\"} | logfmt | level=\"error\"`, \"15m\");\n}\n```\n\n----------------------------------------\n\nTITLE: Simple Sampling Configuration Example\nDESCRIPTION: Demonstrates a basic sampling configuration that samples 10% of log entries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/sampling.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- sampling:\n    rate: 0.1\n```\n\n----------------------------------------\n\nTITLE: Profiling Individual Spans in Go\nDESCRIPTION: Shows how to use spanprofiler.StartSpanFromContext to profile specific spans. This method allows for granular control over which spans are profiled, especially useful for spans in detached goroutines.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/spanprofiler/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc YourOperationName(ctx context.Background()) {\n    // Start a span and enable profiling for it\n    span, ctx := spanprofiler.StartSpanFromContext(ctx, \"YourOperationName\", tracer)\n    defer span.Finish() // Finish the span when done\n\n    // Use the span in your application logic\n}\n```\n\n----------------------------------------\n\nTITLE: Adding uint32 to Bloom Filter in Go\nDESCRIPTION: This snippet demonstrates how to add a uint32 value to the Bloom filter. It converts the integer to a byte slice using binary encoding before adding it to the filter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bloom/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ni := uint32(100)\nn1 := make([]byte, 4)\nbinary.BigEndian.PutUint32(n1, i)\nfilter.Add(n1)\n```\n\n----------------------------------------\n\nTITLE: Pattern Match Filter in LogQL\nDESCRIPTION: Uses the line match pattern operator to filter log lines matching a specific pattern in the 'distributor' service in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: logql\nCODE:\n```\n{service_name=`distributor`} |> `<_> caller=http.go:194 level=debug <_> msg=\"POST /push.v1.PusherService/Push <_>`\n```\n\n----------------------------------------\n\nTITLE: Starting Query Scheduler with Docker\nDESCRIPTION: This command starts the Loki query scheduler as a Docker container, listening on specific HTTP and gRPC ports.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/scalability.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run grafana/loki:latest -config.file=/etc/loki/config.yaml -target=query-scheduler -server.http-listen-port=8009 -server.grpc-listen-port=9009\n```\n\n----------------------------------------\n\nTITLE: Installing etcd/clientv3 using Go modules\nDESCRIPTION: Command to install the etcd/clientv3 package using Go modules. Note that as of the documentation's writing, etcd 3.5.0 was not yet released, so a pre-release version is used.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/etcd/client/v3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get go.etcd.io/etcd/client/v3@v3.5.0-pre\n```\n\n----------------------------------------\n\nTITLE: Reading Sys Files in Go\nDESCRIPTION: Example of reading single value files from /sys filesystem using utility function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n    data, err := util.SysReadFile(\"/sys/class/power_supply/BAT0/capacity\")\n```\n\n----------------------------------------\n\nTITLE: Adding ARM Cross-Tenant Authentication Support in Go\nDESCRIPTION: Demonstrates how to enable ARM cross-tenant authentication by setting the AuxiliaryTenants field of arm.ClientOptions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\noptions := arm.ClientOptions{\n    AuxiliaryTenants: []string{\"tenant1\", \"tenant2\"}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Event Hubs in Promtail\nDESCRIPTION: Example configuration for setting up Promtail to read messages from Azure Event Hubs. It includes required fields like fully_qualified_namespace, connection_string, and event_hubs, along with optional labels and relabeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- job_name: azure_event_hubs\n  azure_event_hubs:\n    group_id: \"mygroup\"\n    fully_qualified_namespace: my-namespace.servicebus.windows.net:9093\n    connection_string: \"my-connection-string\"\n    event_hubs:\n      - event-hub-name\n    labels:\n      job: azure_event_hub\n  relabel_configs:\n    - action: replace\n      source_labels:\n        - __azure_event_hubs_category\n      target_label: category\n```\n\n----------------------------------------\n\nTITLE: Basic Struct Merging in Go with Mergo\nDESCRIPTION: Demonstrates the basic usage of Mergo to merge two structs, where the source struct's non-zero values are merged into the destination struct.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/dario.cat/mergo/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nif err := mergo.Merge(&dst, src); err != nil {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Applying JSON Merge Patches in Go\nDESCRIPTION: Example demonstrating how to create a merge patch from two JSON documents and apply it to a third document using the jsonpatch library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/evanphx/json-patch.v4/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\tjsonpatch \"github.com/evanphx/json-patch\"\n)\n\nfunc main() {\n\toriginal := []byte(`{\"name\": \"John\", \"age\": 24, \"height\": 3.21}`)\n\ttarget := []byte(`{\"name\": \"Jane\", \"age\": 24}`)\n\n\tpatch, err := jsonpatch.CreateMergePatch(original, target)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\talternative := []byte(`{\"name\": \"Tina\", \"age\": 28, \"height\": 3.75}`)\n\tmodifiedAlternative, err := jsonpatch.MergePatch(alternative, patch)\n\n\tfmt.Printf(\"patch document:   %s\\n\", patch)\n\tfmt.Printf(\"updated alternative doc: %s\\n\", modifiedAlternative)\n}\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry Resource Comparison (Go)\nDESCRIPTION: Example demonstrating the proper way to compare OpenTelemetry Resource types using Equal and Equivalent methods instead of direct comparison.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// Use Resource.Equal() or Resource.Equivalent() instead of direct comparison\nresource1.Equal(resource2)\nresource1.Equivalent(resource2)\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Project ID for Metric Exporter in Go\nDESCRIPTION: This snippet demonstrates how to set up the Google Cloud Project ID for the metric exporter using an environment variable and the WithProjectID option.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nprojectID := os.Getenv(\"GOOGLE_CLOUD_PROJECT\")\nopts := []mexporter.Option{\n    mexporter.WithProjectID(projectID),\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Key from Bolt Database Bucket (Go)\nDESCRIPTION: Shows how to delete a key from a specific bucket in a Bolt database. It removes the 'answer' key from the 'MyBucket' bucket.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\ndb.Update(func (tx *bolt.Tx) error {\n    b := tx.Bucket([]byte(\"MyBucket\"))\n    err := b.Delete([]byte(\"answer\"))\n    return err\n})\n```\n\n----------------------------------------\n\nTITLE: CPU Feature Detection with Command Line Flags in Go\nDESCRIPTION: Go example showing how to use command line flags with the cpuid package. This demonstrates the requirement to call Flags() before flag.Parse() and Detect() afterward to incorporate flag settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/cpuid/v2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/klauspost/cpuid/v2\"\n)\n\nfunc main() {\n\tcpuid.Flags()\n\tflag.Parse()\n\tcpuid.Detect()\n\n\t// Test if we have these specific features:\n\tif cpuid.CPU.Supports(cpuid.SSE, cpuid.SSE2) {\n\t\tfmt.Println(\"We have Streaming SIMD 2 Extensions\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing APIError.Error() Method for Unwrapped Status in Go\nDESCRIPTION: Fixes the (*APIError).Error() method for cases with unwrapped Status in the gax-go library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* **v2/apierror:** fix (*APIError).Error() for unwrapped Status ([#351](https://github.com/googleapis/gax-go/issues/351)) ([22c16e7](https://github.com/googleapis/gax-go/commit/22c16e7bff5402bdc4c25063771cdd01c650b500)), refs [#350](https://github.com/googleapis/gax-go/issues/350)\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Repository\nDESCRIPTION: Command to update the chart repository to ensure you have the latest version of charts.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Calculating Monospace String Width\nDESCRIPTION: Example showing how to calculate the width of a string when displayed in a monospace font using the StringWidth function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nwidth := uniseg.StringWidth(\"🇩🇪🏳️‍🌈!\")\nfmt.Println(width)\n// 5\n```\n\n----------------------------------------\n\nTITLE: Logging Grafana Container Startup in Go\nDESCRIPTION: This snippet shows a log entry for a Grafana container starting within a Kubernetes pod. It includes details such as the pod name, container ID, and event type.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_22\n\nLANGUAGE: go\nCODE:\n```\nI0507 11:59:38.195145    2791 kubelet.go:2421] \"SyncLoop (PLEG): event for pod\" pod=\"hosted-grafana/victor-grafana-7b7bb568cc-grflq\" event={\"ID\":\"1803645b-5526-41b4-bf88-271be4827277\",\"Type\":\"ContainerStarted\",\"Data\":\"a63e882bf89caa0e0f3027fc2c068801b36e5b3386b4d4f2570cb4f4d77298f4\"}\n```\n\n----------------------------------------\n\nTITLE: Logging Metrics to Standard Error in Go\nDESCRIPTION: Demonstrates how to periodically log metrics in human-readable form to standard error using the Log function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ngo metrics.Log(metrics.DefaultRegistry, 5 * time.Second, log.New(os.Stderr, \"metrics: \", log.Lmicroseconds))\n```\n\n----------------------------------------\n\nTITLE: Creating a Pub/Sub Topic in GCP using gcloud CLI\nDESCRIPTION: This command creates a new Pub/Sub topic in Google Cloud Platform to store log messages. The topic will act as a queue for persisting log messages that can be read by Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ gcloud pubsub topics create $TOPIC_ID\n```\n\n----------------------------------------\n\nTITLE: Iterating Through BigQuery Tables in Go\nDESCRIPTION: This snippet demonstrates the new way to iterate through BigQuery tables after API changes. It replaces the ListTables method with a new Tables method that returns an iterator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_36\n\nLANGUAGE: go\nCODE:\n```\nit := ds.Tables(ctx)\nfor {\n    table, err := it.Next()\n    if err == iterator.Done {\n        break\n    }\n    if err != nil {\n        // TODO: Handle error.\n    }\n    // TODO: use table.\n}\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Role using AWS CLI\nDESCRIPTION: Bash command to create an IAM role named 'LokiServiceAccountRole' using the AWS CLI, based on the previously defined trust policy document.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naws iam create-role --role-name LokiServiceAccountRole --assume-role-policy-document file://trust-policy.json\n```\n\n----------------------------------------\n\nTITLE: Adding Reverse Scan Support in Bigtable Go Client\nDESCRIPTION: Adds support for reverse scans in the Bigtable Go client library and emulator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/bigtable/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\n* **bigtable:** Add support for reverse scans ([#8755](https://github.com/googleapis/google-cloud-go/issues/8755)) ([244d135](https://github.com/googleapis/google-cloud-go/commit/244d1357cb1b6ce3b971d367693f6cb6090018d4))\n* **bigtable/bttest:** Support reverse scans ([#8198](https://github.com/googleapis/google-cloud-go/issues/8198)) ([b8f164f](https://github.com/googleapis/google-cloud-go/commit/b8f164fcdf2be3a6fcf7918b3703e224801cc513))\n```\n\n----------------------------------------\n\nTITLE: Configuring Rate Limits in Promtail\nDESCRIPTION: Configuration options for setting global limits in Promtail. These settings control rate limiting, maximum number of active streams, and maximum line size to help prevent out-of-memory errors.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_47\n\nLANGUAGE: yaml\nCODE:\n```\n# When true, enforces rate limiting on this instance of Promtail.\n[readline_rate_enabled: <bool> | default = false]\n\n# The rate limit in log lines per second that this instance of Promtail may push to Loki.\n[readline_rate: <int> | default = 10000]\n\n# The cap in the quantity of burst lines that this instance of Promtail may push\n# to Loki.\n[readline_burst: <int> | default = 10000]\n\n# When true, exceeding the rate limit causes this instance of Promtail to discard\n# log lines, rather than sending them to Loki. When false, exceeding the rate limit\n# causes this instance of Promtail to temporarily hold off on sending the log lines and retry later.\n[readline_rate_drop: <bool> | default = true]\n\n# Limits the max number of active streams.\n# Limiting the number of streams is useful as a mechanism to limit memory usage by Promtail, which helps\n# to avoid OOM scenarios.\n# 0 means it is disabled.\n[max_streams: <int> | default = 0]\n\n# Maximum log line byte size allowed without dropping. Example: 256kb, 2M. 0 to disable.\n# If disabled, targets may apply default buffer size safety limits. If a target implements\n# a default limit, this will be documented under the `scrape_configs` entry.\n[max_line_size: <int> | default = 0]\n# Whether to truncate lines that exceed max_line_size. No effect if max_line_size is disabled\n[max_line_size_truncate: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Defining RelabelConfig in YAML for Grafana Loki\nDESCRIPTION: RelabelConfig allows dynamic rewriting of the label set, applied to samples before ingestion. It defines metric_relabel_configs and alert_relabel_configs sections of Prometheus configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nrelabelConfig:\n  sourceLabels:\n    - label1\n    - label2\n  separator: \";\"\n  targetLabel: newLabel\n  regex: \".*\"\n  modulus: 100\n  replacement: \"$1\"\n  action: replace\n```\n\n----------------------------------------\n\nTITLE: Disabling Recommended OTLP Attributes in OpenShift Logging Mode\nDESCRIPTION: YAML configuration for disabling recommended attributes in OpenShift logging mode. This configuration reduces the default set to only include required attributes, which should be used in conjunction with custom attribute mapping.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/open-telemetry.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# [...]\nspec:\n  tenants:\n    mode: openshift-logging\n    openshift:\n      otlp:\n        disableRecommendedAttributes: true # Set this to remove recommended attributes\n```\n\n----------------------------------------\n\nTITLE: Cloning Grafana Loki Repository\nDESCRIPTION: Command to clone the Grafana Loki repository to the specified GOPATH directory.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/install-from-source.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/grafana/loki $GOPATH/src/github.com/grafana/loki\n```\n\n----------------------------------------\n\nTITLE: Executing Label Values Query with k6-loki\nDESCRIPTION: Shows how to query for all values of a specific label over a 10-minute period.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/query-scenario.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport default () => {\n  client.labelValuesQuery(\"app\", \"10m\");\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Out-of-Order Log Entries\nDESCRIPTION: Illustrates how out-of-order log entries are rejected within the same stream when timestamps are not sequential.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/bp-configure.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n{job=\"syslog\"} 00:00:00 i'm a syslog!\n{job=\"syslog\"} 00:00:02 i'm a syslog!\n{job=\"syslog\"} 00:00:01 i'm a syslog!  <- Rejected out of order!\n```\n\n----------------------------------------\n\nTITLE: HTTP Call Error Implementation\nDESCRIPTION: Defines CallErr struct for handling HTTP call errors with verbose error reporting capabilities. Includes request and response objects for detailed debugging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/AzureAD/microsoft-authentication-library-for-go/apps/errors/error_design.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype CallErr struct {\n    Req  *http.Request\n    Resp *http.Response\n    Err  error\n}\n\nfunc (e CallErr) Error() string {\n    return e.Err.Error()\n}\n\nfunc (e CallErr) Verbose() string {\n    e.Resp.Request = nil // This brings in a bunch of TLS stuff we don't need\n    e.Resp.TLS = nil     // Same\n    return fmt.Sprintf(\"%s:\\nRequest:\\n%s\\nResponse:\\n%s\", e.Err, prettyConf.Sprint(e.Req), prettyConf.Sprint(e.Resp))\n}\n```\n\n----------------------------------------\n\nTITLE: Slow Field Name Lookup Process in JSON Decoding\nDESCRIPTION: The code shows the typical field lookup process during JSON decoding which was identified as a performance bottleneck. It uses a map lookup to find the appropriate decoder for each field name.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nfieldName := decodeKey(buf, cursor) // \"a\" or \"b\" or \"c\"\ndecoder, exists := fieldToDecoderMap[fieldName] // so slow\nif exists {\n    decoder(buf, cursor)\n} else {\n    skipValue(buf, cursor)\n}\n```\n\n----------------------------------------\n\nTITLE: Struct Pointer Fuzzing with Nil Chance\nDESCRIPTION: Example of fuzzing a struct containing multiple string pointers with customized nil probability.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/gofuzz/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nf := fuzz.New().NilChance(.5)\nvar fancyStruct struct {\n  A, B, C, D *string\n}\nf.Fuzz(&fancyStruct) // About half the pointers should be set.\n```\n\n----------------------------------------\n\nTITLE: Deprecating a flag with a usage message\nDESCRIPTION: Shows how to mark a flag as deprecated with a message directing users to an alternative. The flag will still function but will be hidden from help text and print a warning when used.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\n// deprecate a flag by specifying its name and a usage message\nflags.MarkDeprecated(\"badflag\", \"please use --good-flag instead\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Metrics Namespace in Go\nDESCRIPTION: Creates a new metrics namespace for the Docker engine's daemon package. It specifies the namespace, subsystem, and constant labels for version and commit information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-metrics/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nns := metrics.NewNamespace(\"engine\", \"daemon\", metrics.Labels{\n        \"version\": dockerversion.Version,\n        \"commit\":  dockerversion.GitCommit,\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Connection Retries in Graylog Output\nDESCRIPTION: Adds optional connection retries to the Graylog output plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\n\"outputs.graylog\" Implement optional connection retries\n```\n\n----------------------------------------\n\nTITLE: Configuring Logrotate with Copy-Truncate Method\nDESCRIPTION: Configuration example for logrotate using the copy-truncate method for Apache2 logs, rotating weekly with 1GB max size.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/logrotation/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/log/apache2/*.log {\n        weekly\n        maxsize 1G\n        copytruncate\n}\n```\n\n----------------------------------------\n\nTITLE: Duplicate Label Validation Error Properties\nDESCRIPTION: Configuration and response properties for the duplicate_label_names error that occurs when samples contain duplicate label names.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/request-validation-rate-limits.md#2025-04-19_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                | Value             |\n|-------------------------|-------------------|\n| Enforced by             | `distributor`     |\n| Outcome                 | Request rejected  |\n| Retryable               | **No**            |\n| Sample discarded        | **Yes**           |\n| Configurable per tenant | No                |\n| HTTP status code        | `400 Bad Request` |\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Print Functions in Go\nDESCRIPTION: Examples of creating custom print functions for convenience\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// Create a custom print function for convenience\nred := color.New(color.FgRed).PrintfFunc()\nred(\"Warning\")\nred(\"Error: %s\", err)\n\n// Mix up multiple attributes\nnotice := color.New(color.Bold, color.FgGreen).PrintlnFunc()\nnotice(\"Don't forget this...\")\n```\n\n----------------------------------------\n\nTITLE: Building the Lokitool Binary\nDESCRIPTION: Command to build the lokitool binary from source, which is required before running any audit commands.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/tool/audit/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo build ./cmd/lokitool\n```\n\n----------------------------------------\n\nTITLE: Using PathMatchUnvalidated Function in Doublestar\nDESCRIPTION: Go function signature for PathMatchUnvalidated, which is similar to MatchUnvalidated but uses the system's path separator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfunc PathMatchUnvalidated(pattern, name string) bool\n```\n\n----------------------------------------\n\nTITLE: MurmurHash3 Benchmark Results (Go 1.3)\nDESCRIPTION: Comprehensive benchmark results for the MurmurHash3 implementation, showing performance measurements for various input sizes for both 32-bit and 128-bit variants. The table includes operations per second and throughput in MB/s.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spaolacci/murmur3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nBenchmark32_1        500000000     7.69 ns/op      130.00 MB/s\nBenchmark32_2        200000000     8.83 ns/op      226.42 MB/s\nBenchmark32_4        500000000     7.99 ns/op      500.39 MB/s\nBenchmark32_8        200000000     9.47 ns/op      844.69 MB/s\nBenchmark32_16       100000000     12.1 ns/op     1321.61 MB/s\nBenchmark32_32       100000000     18.3 ns/op     1743.93 MB/s\nBenchmark32_64        50000000     30.9 ns/op     2071.64 MB/s\nBenchmark32_128       50000000     57.6 ns/op     2222.96 MB/s\nBenchmark32_256       20000000      116 ns/op     2188.60 MB/s\nBenchmark32_512       10000000      226 ns/op     2260.59 MB/s\nBenchmark32_1024       5000000      452 ns/op     2263.73 MB/s\nBenchmark32_2048       2000000      891 ns/op     2296.02 MB/s\nBenchmark32_4096       1000000     1787 ns/op     2290.92 MB/s\nBenchmark32_8192        500000     3593 ns/op     2279.68 MB/s\nBenchmark128_1       100000000     26.1 ns/op       38.33 MB/s\nBenchmark128_2       100000000     29.0 ns/op       69.07 MB/s\nBenchmark128_4        50000000     29.8 ns/op      134.17 MB/s\nBenchmark128_8        50000000     31.6 ns/op      252.86 MB/s\nBenchmark128_16      100000000     26.5 ns/op      603.42 MB/s\nBenchmark128_32      100000000     28.6 ns/op     1117.15 MB/s\nBenchmark128_64       50000000     35.5 ns/op     1800.97 MB/s\nBenchmark128_128      50000000     50.9 ns/op     2515.50 MB/s\nBenchmark128_256      20000000     76.9 ns/op     3330.11 MB/s\nBenchmark128_512      20000000      135 ns/op     3769.09 MB/s\nBenchmark128_1024     10000000      250 ns/op     4094.38 MB/s\nBenchmark128_2048      5000000      477 ns/op     4290.75 MB/s\nBenchmark128_4096      2000000      940 ns/op     4353.29 MB/s\nBenchmark128_8192      1000000     1838 ns/op     4455.47 MB/s\n```\n\n----------------------------------------\n\nTITLE: Setting up the Zap Repository in Go Workspace\nDESCRIPTION: Commands to fork, clone, and set up the Zap repository in the correct location within a Go workspace. Establishes proper remote connections to track upstream changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p $GOPATH/src/go.uber.org\ncd $GOPATH/src/go.uber.org\ngit clone git@github.com:your_github_username/zap.git\ncd zap\ngit remote add upstream https://github.com/uber-go/zap.git\ngit fetch upstream\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Single Binary Mode in YAML\nDESCRIPTION: Minimum required YAML configuration for upgrading from grafana/loki chart to v3.0 while maintaining filesystem storage mode.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-from-2x/index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  commonConfig:\n    replication_factor: 1\n  storage:\n    type: 'filesystem'\n```\n\n----------------------------------------\n\nTITLE: Creating and Using Memberlist in Go\nDESCRIPTION: Example of creating a memberlist instance, joining an existing cluster, and listing cluster members. This snippet demonstrates the basic usage of the memberlist library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/memberlist/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n/* Create the initial memberlist from a safe configuration.\n   Please reference the godoc for other default config types.\n   http://godoc.org/github.com/hashicorp/memberlist#Config\n*/\nlist, err := memberlist.Create(memberlist.DefaultLocalConfig())\nif err != nil {\n\tpanic(\"Failed to create memberlist: \" + err.Error())\n}\n\n// Join an existing cluster by specifying at least one known member.\nn, err := list.Join([]string{\"1.2.3.4\"})\nif err != nil {\n\tpanic(\"Failed to join cluster: \" + err.Error())\n}\n\n// Ask for members of the cluster\nfor _, member := range list.Members() {\n\tfmt.Printf(\"Member: %s %s\\n\", member.Name, member.Addr)\n}\n\n// Continue doing whatever you need, memberlist will maintain membership\n// information in the background. Delegates can be used for receiving\n// events when members join or leave.\n```\n\n----------------------------------------\n\nTITLE: Loki Labels Command Usage\nDESCRIPTION: Shows the usage pattern for the labels command which finds values for specified labels. Includes time window options and connection configuration flags.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli labels [<flags>] [<label>]\n\nFind values for a given label.\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n      --since=1h              Lookback window.\n      --from=FROM             Start looking for labels at this absolute time (inclusive)\n      --to=TO                 Stop looking for labels at this absolute time (exclusive)\n```\n\n----------------------------------------\n\nTITLE: Fixing Field Case for SignedOID and SignedTID\nDESCRIPTION: Directive to correct the casing of the SignedOid and SignedTid fields to SignedOID and SignedTID respectively in models.go for proper acronym handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: zz_models.go\n  where: $\n  transform: >\n    return $.\n      replace(/SignedOid\\s+\\*string/g, `SignedOID *string`).\n      replace(/SignedTid\\s+\\*string/g, `SignedTID *string`);\n```\n\n----------------------------------------\n\nTITLE: Adding Generic Atomic Pointer Type in Go\nDESCRIPTION: This snippet mentions the addition of a generic 'atomic.Pointer[T]' type for atomic operations on pointers of any type, available for Go 1.18 or higher. It's part of the changes introduced in version 1.10.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- Add generic `atomic.Pointer[T]` type for atomic operations on pointers of any\n  type. This is present only for Go 1.18 or higher, and is a drop-in for\n  replacement for the standard library's `sync/atomic.Pointer` type.\n```\n\n----------------------------------------\n\nTITLE: Downloading ECS Task Definition\nDESCRIPTION: Command to download the ECS task definition template\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://raw.githubusercontent.com/grafana/loki/main/docs/sources/send-data/promtail/cloud/ecs/ecs-task.json > ecs-task.json\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Binary Executable\nDESCRIPTION: Commands to download, extract, and set up the Loki binary executable for Linux AMD64 architecture, including making the file executable.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/release-note.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -O -L \"https://github.com/grafana/loki/releases/download/${DRONE_TAG}/loki-linux-amd64.zip\"\n# extract the binary\n$ unzip \"loki-linux-amd64.zip\"\n# make sure it is executable\n$ chmod a+x \"loki-linux-amd64\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Minio for Local Development\nDESCRIPTION: Creates a Minio deployment in the default namespace for local development, including its deployment, service, PVC, and secret.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -k config/overlays/development/minio\n```\n\n----------------------------------------\n\nTITLE: Querying Static Log Files\nDESCRIPTION: Commands for exporting logs to a file and querying static log files using LogCLI with JSON parsing.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nlogcli query \\\n     --timezone=UTC \\\n     --parallel-duration=\"12h\" \\\n     --parallel-max-workers=\"4\" \\\n     --part-path-prefix=\"./inventory/inv\" \\\n     --since=24h \\\n     --merge-parts \\\n     --output=raw \\\n     '{service_name=\"Delivery World\"}' > ./inventory/complete.log\n```\n\nLANGUAGE: bash\nCODE:\n```\ncat ./inventory/complete.log |  logcli --stdin query '{service_name=\"Delivery World\"} | json | package_status=\"critical\"'\n```\n\nLANGUAGE: bash\nCODE:\n```\ncat ./inventory/complete.log | logcli --stdin query '{service_name=\"Delivery World\"} | package_status=\"critical\"'\n```\n\n----------------------------------------\n\nTITLE: Map Fuzzing with Controlled Elements\nDESCRIPTION: Shows how to fuzz a map with specified number of elements and nil chance settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/gofuzz/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nf := fuzz.New().NilChance(0).NumElements(1, 1)\nvar myMap map[ComplexKeyType]string\nf.Fuzz(&myMap) // myMap will have exactly one element.\n```\n\n----------------------------------------\n\nTITLE: Example YAML Configuration Schema\nDESCRIPTION: Shows the basic YAML configuration structure used by the factory method to instantiate object storage clients.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntype: <PROVIDER_TYPE>\nconfig:\n  <PROVIDER_TYPE specific options>\n```\n\n----------------------------------------\n\nTITLE: Installing Hedged HTTP Client Package\nDESCRIPTION: Command to install the hedgedhttp package using Go modules. Requires Go version 1.16 or higher.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/cristalhq/hedgedhttp/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/cristalhq/hedgedhttp\n```\n\n----------------------------------------\n\nTITLE: Advancing Clock to Specific Time in Go\nDESCRIPTION: Demonstrates how to advance the mock clock to a specific time, regardless of scheduled events. This is useful for complex time-based scenarios in tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ndesired := time.Minute // time to advance\nfor desired > 0 {\n\tp, ok := mClock.Peek()\n\tif !ok || p > desired {\n\t\tmClock.Advance(desired).MustWait(ctx)\n\t\tbreak\n\t}\n\tmClock.Advance(p).MustWait(ctx)\n\tdesired -= p\n}\n```\n\n----------------------------------------\n\nTITLE: Ingester Flush Configuration\nDESCRIPTION: Configuration to enable flush-on-shutdown and debug logging for loki-distributed ingesters during migration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ningester:\n  replicas: 3\n  extraArgs:\n    - '-ingester.flush-on-shutdown=true'\n    - '-log.level=debug'\n```\n\n----------------------------------------\n\nTITLE: Packed Container Output Example\nDESCRIPTION: Example JSON output showing how the container label is embedded into the log line.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/pack.md#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"container\": \"myapp\",\n  \"_entry\": \"original log message\"\n}\n```\n\n----------------------------------------\n\nTITLE: Shell Script for Identifying Leaking Tests\nDESCRIPTION: Bash script to identify which specific tests are causing goroutine leaks by running each test individually and reporting failures.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/goleak/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Create a test binary which will be used to run each test individually\n$ go test -c -o tests\n\n# Run each test individually, printing \".\" for successful tests, or the test name\n# for failing tests.\n$ for test in $(go test -list . | grep -E \"^(Test|Example)\"); do ./tests -test.run \"^$test\\$\" &>/dev/null && echo -n \".\" || echo -e \"\\n$test failed\"; done\n```\n\n----------------------------------------\n\nTITLE: Custom Validator Function Signature in GoValidator\nDESCRIPTION: Updated signature for custom validator functions in GoValidator, including a context parameter for dependent validation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/asaskevich/govalidator\"\n\n// old signature\nfunc(i interface{}) bool\n\n// new signature\nfunc(i interface{}, o interface{}) bool\n```\n\n----------------------------------------\n\nTITLE: Installing JWT-Go Package\nDESCRIPTION: Command to install the jwt-go package as a dependency in a Go program using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get -u github.com/golang-jwt/jwt/v5\n```\n\n----------------------------------------\n\nTITLE: Parsing Data Size String in Golang\nDESCRIPTION: Demonstrates how to manually parse a human-readable data size string into a ByteSize value using the UnmarshalText method. This is useful when working with user input or configuration files that specify data sizes in a readable format.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/c2h5oh/datasize/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nvar v datasize.ByteSize\nerr := v.UnmarshalText([]byte(\"100 mb\"))\n```\n\n----------------------------------------\n\nTITLE: Installing BitSet Library via Go Get\nDESCRIPTION: This command installs the BitSet library using the go get command, which downloads and installs the package from the specified GitHub repository.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bitset/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/willf/bitset\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterLogging Instance for Fluentd\nDESCRIPTION: YAML configuration for creating a ClusterLogging instance in the openshift-logging namespace using Fluentd as the log collector.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_without_gateway.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: logging.openshift.io/v1\nkind: ClusterLogging\nmetadata:\n  name: instance\n  namespace: openshift-logging\nspec:\n  collection:\n    logs:\n      type: fluentd\n      fluentd: {}\n```\n\n----------------------------------------\n\nTITLE: Using AdvanceNext with Mock Clock in Go\nDESCRIPTION: Shows how to use AdvanceNext to move the clock to the next event without knowing the exact time, useful for testing with variable intervals.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nd, w := mClock.AdvanceNext()\nw.MustWait(ctx)\n// d contains the duration we advanced\n```\n\n----------------------------------------\n\nTITLE: Using s2sx Command-Line Tool for Self-Extracting Archives\nDESCRIPTION: Command-line usage example for s2sx tool which creates self-extracting archives. The tool compresses files with various options including platform targeting, multi-threading, and tar extraction capabilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUsage: s2sx [options] file1 file2\n\nCompresses all files supplied as input separately.\nIf files have '.s2' extension they are assumed to be compressed already.\nOutput files are written as 'filename.s2sx' and with '.exe' for windows targets.\nIf output is big, an additional file with \".more\" is written. This must be included as well.\nBy default output files will be overwritten.\n\nWildcards are accepted: testdir/*.txt will compress all files in testdir ending with .txt\nDirectories can be wildcards as well. testdir/*/*.txt will match testdir/subdir/b.txt\n\nOptions:\n  -arch string\n        Destination architecture (default \"amd64\")\n  -c    Write all output to stdout. Multiple input files will be concatenated\n  -cpu int\n        Compress using this amount of threads (default 32)\n  -help\n        Display help\n  -max string\n        Maximum executable size. Rest will be written to another file. (default \"1G\")\n  -os string\n        Destination operating system (default \"windows\")\n  -q    Don't write any output to terminal, except errors\n  -rm\n        Delete source file(s) after successful compression\n  -safe\n        Do not overwrite output files\n  -untar\n        Untar on destination\n```\n\n----------------------------------------\n\nTITLE: Skipping Remaining Bytes to Reach Exact Offset in Go\nDESCRIPTION: Skips unneeded bytes in the decompressed stream to reach the exact desired offset after repositioning the compressed stream to a block start position.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\n\terr = dec.Skip(wantOffset - uncompressedOffset)\n```\n\n----------------------------------------\n\nTITLE: Mathematical Operations in Go Templates\nDESCRIPTION: Various mathematical functions for use in templates.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_19\n\nLANGUAGE: template\nCODE:\n```\n{{ add 3 2 5 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ addf 3.5 2 5 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ ceil 123.001 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ div 10 2}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ divf 10 2 4}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ \"3.5\" | float64 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ floor 123.9999 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ \"3\" | int }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ max 1 2 3 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ maxf 1 2.5 3 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ min 1 2 3 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ minf 1 2.5 3 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ mul 5 2 3}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ mulf 5.5 2 2.5 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ mod 10 3}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ round 123.555555 3 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ round 123.88571428571 5 .2 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ sub 5 2 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ subf  5.5 2 1.5 }}\n```\n\n----------------------------------------\n\nTITLE: English Pluralization in Go\nDESCRIPTION: Shows how to use the english.PluralWord() and english.Plural() functions for simple English pluralization.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nenglish.PluralWord(1, \"object\", \"\") // object\nenglish.PluralWord(42, \"object\", \"\") // objects\nenglish.PluralWord(2, \"bus\", \"\") // buses\nenglish.PluralWord(99, \"locus\", \"loci\") // loci\n\nenglish.Plural(1, \"object\", \"\") // 1 object\nenglish.Plural(42, \"object\", \"\") // 42 objects\nenglish.Plural(2, \"bus\", \"\") // 2 buses\nenglish.Plural(99, \"locus\", \"loci\") // 99 loci\n```\n\n----------------------------------------\n\nTITLE: AppArmor Security Audit Logs\nDESCRIPTION: Security audit logs showing AppArmor DENIED operations for ptrace requests from containerd processes. Shows repeated denial patterns for read operations from pidof command.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_5\n\nLANGUAGE: log\nCODE:\n```\naudit: type=1400 audit(1715083181.923:144): apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36641 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\nAVC apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36641 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\n```\n\n----------------------------------------\n\nTITLE: Loki Label Mapping Configuration\nDESCRIPTION: JSON configuration file defining how to map record fields to Loki labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"kubernetes\": {\n    \"container_name\": \"container\",\n    \"pod_name\": \"pod\",\n    \"namespace_name\": \"namespace\",\n    \"labels\" : {\n        \"team\": \"team\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Role for ECS Tasks\nDESCRIPTION: Commands to create and configure the ecsTaskExecutionRole with required permissions for ECS tasks\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://raw.githubusercontent.com/grafana/loki/main/docs/sources/send-data/promtail/cloud/ecs/ecs-role.json > ecs-role.json\naws iam create-role --role-name ecsTaskExecutionRole  --assume-role-policy-document file://ecs-role.json\n```\n\n----------------------------------------\n\nTITLE: Updating Span RecordError in Go\nDESCRIPTION: Change to Span RecordError functionality to record an exception event in compliance with semantic convention specification.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_32\n\nLANGUAGE: Go\nCODE:\n```\nSpan.RecordError(err)\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group\nDESCRIPTION: Command to create a new resource group in Azure using the Azure CLI\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name <INSERT-NAME> -location <INSERT-AZURE-REGION>\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Container Operation Logs\nDESCRIPTION: System logs showing container removals, pod status updates, and errors related to container operations in a Kubernetes cluster. Includes ImagePullBackOff errors, CrashLoopBackOff conditions, and AppArmor security denials.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_4\n\nLANGUAGE: log\nCODE:\n```\nI0507 11:59:42.041815    4589 scope.go:117] \"RemoveContainer\" containerID=\"b22ba3d04cca58dd06227978cad02c4d11287b17e97aa2c9ed2a324204455fdf\"\nI0507 11:59:41.978947    4736 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-lw2b\" status=\"Running\"\nE0507 11:59:41.965110    4731 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"overrides-exporter\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/kubernetes-dev/enterprise-logs:callum-shard-firstlast-08\\\\\\\"\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Using Promtail with Custom Configuration\nDESCRIPTION: Demonstrates how to use Promtail with a custom configuration file for processing piped log data. This command reads from stdin and uses a specified config file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/troubleshooting/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncat my.log | promtail --config.file promtail.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for GO SDK Testing\nDESCRIPTION: Shell script for setting up environment variables needed for Google Cloud GO SDK testing. These variables include project IDs, key file paths, database names, and other configuration settings for various Google Cloud services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n#### START GO SDK Test Variables\n# Developers Console project's ID (e.g. bamboo-shift-455) for the general project.\nexport GCLOUD_TESTS_GOLANG_PROJECT_ID=your-project\n\n# Developers Console project's ID (e.g. bamboo-shift-455) for the Bigtable project.\nexport GCLOUD_TESTS_GOLANG_SECONDARY_BIGTABLE_PROJECT_ID=your-bigtable-optional-secondary-project\n\n# The path to the JSON key file of the general project's service account.\nexport GCLOUD_TESTS_GOLANG_KEY=~/directory/your-project-abcd1234.json\n\n# Comma separated list of developer's Datastore databases. If not provided, \n# default database i.e. empty string is used.\nexport GCLOUD_TESTS_GOLANG_DATASTORE_DATABASES=your-database-1,your-database-2\n\n# Developers Console project's ID (e.g. doorway-cliff-677) for the Firestore project.\nexport GCLOUD_TESTS_GOLANG_FIRESTORE_PROJECT_ID=your-firestore-project\n\n# Comma separated list of developer's Firestore databases. If not provided, default database is used.\nexport GCLOUD_TESTS_GOLANG_FIRESTORE_DATABASES=your-database-1,your-database-2\n\n# The path to the JSON key file of the Firestore project's service account.\nexport GCLOUD_TESTS_GOLANG_FIRESTORE_KEY=~/directory/your-firestore-project-abcd1234.json\n\n# The full name of the keyring for the tests, in the form \"projects/P/locations/L/keyRings/R\".\n# The creation of this is described below.\nexport MY_KEYRING=my-golang-sdk-test\nexport MY_LOCATION=global\nexport GCLOUD_TESTS_GOLANG_KEYRING=projects/$GCLOUD_TESTS_GOLANG_PROJECT_ID/locations/$MY_LOCATION/keyRings/$MY_KEYRING\n\n# API key for using the Translate API.\nexport GCLOUD_TESTS_API_KEY=abcdefghijk123456789\n\n# Compute Engine zone. (https://cloud.google.com/compute/docs/regions-zones)\nexport GCLOUD_TESTS_GOLANG_ZONE=your-chosen-region\n#### END GO SDK Test Variables\n```\n\n----------------------------------------\n\nTITLE: Analyzing Loki Ingester Service Push Request Logs\nDESCRIPTION: These log entries detail POST requests to Loki's ingester service Push endpoint. They include timestamp, trace ID, organization ID, HTTP method, endpoint, status code, and request duration. This information is useful for monitoring ingester performance and troubleshooting.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/ingester-logfmt.txt#2025-04-19_snippet_0\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-17T09:52:46.364803306Z caller=http.go:194 level=debug traceID=1ee220e024eb5b0a orgID=12372 msg=\"POST /ingester.v1.IngesterService/Push (200) 1.368313ms\"\nts=2024-04-17T09:52:46.364804708Z caller=http.go:194 level=debug traceID=2f549a41e3a5eb00 orgID=12372 msg=\"POST /ingester.v1.IngesterService/Push (200) 1.619763ms\"\nts=2024-04-17T09:52:46.364730588Z caller=http.go:194 level=debug traceID=116a1a427c28ef7c orgID=12372 msg=\"POST /ingester.v1.IngesterService/Push (200) 944.101µs\"\n```\n\n----------------------------------------\n\nTITLE: Complete Example of Using Objx to Parse JSON in Go\nDESCRIPTION: A comprehensive example showing how to create an objx.Map from JSON and extract both required and optional values with defaults.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// Use MustFromJSON to make an objx.Map from some JSON\nm := objx.MustFromJSON(`{\"name\": \"Mat\", \"age\": 30}`)\n\n// Get the details\nname := m.Get(\"name\").Str()\nage := m.Get(\"age\").Int()\n\n// Get their nickname (or use their name if they don't have one)\nnickname := m.Get(\"nickname\").Str(name)\n```\n\n----------------------------------------\n\nTITLE: Bitmap Field Lookup Algorithm in go-json\nDESCRIPTION: The algorithm for looking up fields using the bitmap optimization technique. It performs bitwise operations against a pre-built bitmap to efficiently determine if a field exists without using map lookups.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nvar curBit int8 = math.MaxInt8 // 11111111\n\nc := char(buf, cursor)\nbit := bitmap[keyIdx][c]\ncurBit &= bit\nif curBit == 0 {\n    // not found field\n}\n```\n\n----------------------------------------\n\nTITLE: String Truncation in Go Templates\nDESCRIPTION: The trunc function truncates a string to a specified length.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_16\n\nLANGUAGE: template\nCODE:\n```\n{{ .path | trunc 2 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ trunc 5 \"hello world\"}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ trunc -5 \"hello world\"}}\n```\n\n----------------------------------------\n\nTITLE: Starting Consul Server in Dev Mode\nDESCRIPTION: Launches a Consul server in development mode with a specified node name.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/consul/api/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nconsul agent -dev -node machine\n```\n\n----------------------------------------\n\nTITLE: Configuring Index Gateway Ring in Loki\nDESCRIPTION: This YAML configuration block defines the ring to be used by index gateway servers and clients when running in 'ring' mode. It includes settings for kvstore backends (Consul, etcd, memberlist), heartbeat timings, replication, and instance registration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_40\n\nLANGUAGE: yaml\nCODE:\n```\n# Defines the ring to be used by the index gateway servers and clients in case\n# the servers are configured to run in 'ring' mode. In case this isn't\n# configured, this block supports inheriting configuration from the common ring\n# section.\nring:\n  kvstore:\n    # Backend storage to use for the ring. Supported values are: consul, etcd,\n    # inmemory, memberlist, multi.\n    # CLI flag: -index-gateway.ring.store\n    [store: <string> | default = \"consul\"]\n\n    # The prefix for the keys in the store. Should end with a /.\n    # CLI flag: -index-gateway.ring.prefix\n    [prefix: <string> | default = \"collectors/\"]\n\n    # Configuration for a Consul client. Only applies if the selected kvstore is\n    # consul.\n    # The CLI flags prefix for this block configuration is: index-gateway.ring\n    [consul: <consul>]\n\n    # Configuration for an ETCD v3 client. Only applies if the selected kvstore\n    # is etcd.\n    # The CLI flags prefix for this block configuration is: index-gateway.ring\n    [etcd: <etcd>]\n\n    multi:\n      # Primary backend storage used by multi-client.\n      # CLI flag: -index-gateway.ring.multi.primary\n      [primary: <string> | default = \"\"]\n\n      # Secondary backend storage used by multi-client.\n      # CLI flag: -index-gateway.ring.multi.secondary\n      [secondary: <string> | default = \"\"]\n\n      # Mirror writes to secondary store.\n      # CLI flag: -index-gateway.ring.multi.mirror-enabled\n      [mirror_enabled: <boolean> | default = false]\n\n      # Timeout for storing value to secondary store.\n      # CLI flag: -index-gateway.ring.multi.mirror-timeout\n      [mirror_timeout: <duration> | default = 2s]\n\n  # Period at which to heartbeat to the ring. 0 = disabled.\n  # CLI flag: -index-gateway.ring.heartbeat-period\n  [heartbeat_period: <duration> | default = 15s]\n\n  # The heartbeat timeout after which compactors are considered unhealthy within\n  # the ring. 0 = never (timeout disabled).\n  # CLI flag: -index-gateway.ring.heartbeat-timeout\n  [heartbeat_timeout: <duration> | default = 1m]\n\n  # File path where tokens are stored. If empty, tokens are not stored at\n  # shutdown and restored at startup.\n  # CLI flag: -index-gateway.ring.tokens-file-path\n  [tokens_file_path: <string> | default = \"\"]\n\n  # True to enable zone-awareness and replicate blocks across different\n  # availability zones.\n  # CLI flag: -index-gateway.ring.zone-awareness-enabled\n  [zone_awareness_enabled: <boolean> | default = false]\n\n  # Deprecated: How many index gateway instances are assigned to each tenant.\n  # Use -index-gateway.shard-size instead. The shard size is also a per-tenant\n  # setting.\n  # CLI flag: -replication-factor\n  [replication_factor: <int> | default = 3]\n\n  # Instance ID to register in the ring.\n  # CLI flag: -index-gateway.ring.instance-id\n  [instance_id: <string> | default = \"<hostname>\"]\n\n  # Name of network interface to read address from.\n  # CLI flag: -index-gateway.ring.instance-interface-names\n  [instance_interface_names: <list of strings> | default = [<private network interfaces>]]\n\n  # Port to advertise in the ring (defaults to server.grpc-listen-port).\n  # CLI flag: -index-gateway.ring.instance-port\n  [instance_port: <int> | default = 0]\n\n  # IP address to advertise in the ring.\n  # CLI flag: -index-gateway.ring.instance-addr\n  [instance_addr: <string> | default = \"\"]\n\n  # The availability zone where this instance is running. Required if\n  # zone-awareness is enabled.\n  # CLI flag: -index-gateway.ring.instance-availability-zone\n  [instance_availability_zone: <string> | default = \"\"]\n\n  # Enable using a IPv6 instance address.\n  # CLI flag: -index-gateway.ring.instance-enable-ipv6\n  [instance_enable_ipv6: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Explicitly Specifying a Language in Go\nDESCRIPTION: Code showing how to explicitly select a language by its Chroma syntax ID using the lexers.Get function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nlexer := lexers.Get(\"go\")\n```\n\n----------------------------------------\n\nTITLE: Debug Log Entry Pattern for Skipped IPTables Chains\nDESCRIPTION: Standard debug log format showing Felix skipping expected IPTables chains. Each entry includes timestamp, process ID, source file, chain name, IP version, and table name.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_10\n\nLANGUAGE: log\nCODE:\n```\n2024-05-08 15:23:56.401 [DEBUG][615489] felix/table.go 677: Skipping expected chain chainName=\"cali-pro-_NnrQ8SadG8nKhTI0RI\" ipVersion=0x4 table=\"filter\"\n```\n\n----------------------------------------\n\nTITLE: Defining the causer Interface for Error Cause Retrieval\nDESCRIPTION: Defines the causer interface, which allows errors to be unwrapped to retrieve their original cause. This interface is used by the errors.Cause function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/errors/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype causer interface {\n        Cause() error\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Container Runtime\nDESCRIPTION: Command to check the container runtime interface (CRI) being used on Kubernetes nodes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/logrotation/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get nodes -o wide\n```\n\n----------------------------------------\n\nTITLE: Docker Container Configuration with Logging Labels\nDESCRIPTION: A Docker run command that demonstrates how to start a container with the necessary labels for Promtail log collection. It shows how to configure container labels for integration with the Promtail scrape configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/hack/boilerplate.go.txt#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run docker container with label 'logging=promtail'\ndocker run --label logging=promtail --label logging.jobname=dockerlogs alpine\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Scheduler Pod Placement Failure Logs\nDESCRIPTION: Log entries showing repeated attempts to schedule a Loki querier pod across multiple nodes in a GKE cluster. The pod fails to be scheduled due to various constraints including insufficient CPU/memory resources, mismatched node selectors, and pod taints.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_3\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.979237       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-ml9j\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.979212       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GCS Object Storage in Thanos\nDESCRIPTION: YAML configuration for setting up Google Cloud Storage as an object storage backend in Thanos. Includes bucket name, service account, and HTTP configuration options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntype: GCS\nconfig:\n  bucket: \"\"\n  service_account: \"\"\n  use_grpc: false\n  grpc_conn_pool_size: 0\n  http_config:\n    idle_conn_timeout: 0s\n    response_header_timeout: 0s\n    insecure_skip_verify: false\n    tls_handshake_timeout: 0s\n    expect_continue_timeout: 0s\n    max_idle_conns: 0\n    max_idle_conns_per_host: 0\n    max_conns_per_host: 0\n    tls_config:\n      ca_file: \"\"\n      cert_file: \"\"\n      key_file: \"\"\n      server_name: \"\"\n      insecure_skip_verify: false\n    disable_compression: false\n  chunk_size_bytes: 0\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Enterprise Logs Image for Migration\nDESCRIPTION: YAML configuration to specify the Grafana Enterprise Logs image repository and tag for enabling the backend target functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-to-three-scalable-targets/index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenterprise:\n  image:\n    repository: \"grafana/enterprise-logs\"\n    tag: \"main-96f32b9f\"\n```\n\n----------------------------------------\n\nTITLE: Defining Provider Client Options in Go\nDESCRIPTION: Added RequestOpts.OmitHeaders to the provider client to allow omitting specific headers from requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nRequestOpts.OmitHeaders\n```\n\n----------------------------------------\n\nTITLE: Running Version Update Script in Bash\nDESCRIPTION: Command to run the version update script that automatically updates all version references in documents, examples, and jsonnet files. The script uses the new version value set in the LOKI_NEW_VERSION environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release/update-version-numbers.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nLOKI_NEW_VERSION=$VERSION ./tools/release_update_tags.sh\n```\n\n----------------------------------------\n\nTITLE: Fetching CA Certificate for Loki Distributor\nDESCRIPTION: Command to fetch the CA certificate from the lokistack-dev-gateway-ca-bundle ConfigMap.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_without_gateway.md#2025-04-19_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n openshift-logging get cm lokistack-dev-gateway-ca-bundle -o jsonpath=\"{.data.service-ca\\.crt}\" > <FILE_NAME>\n```\n\n----------------------------------------\n\nTITLE: Importing Additional Dependencies in Go\nDESCRIPTION: This snippet shows the import paths for various additional dependencies used in the Grafana Loki project, including JSON patch, fsnotify, and YAML libraries.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_12\n\nLANGUAGE: Go\nCODE:\n```\n# gopkg.in/evanphx/json-patch.v4 v4.12.0\n## explicit\ngopkg.in/evanphx/json-patch.v4\n# gopkg.in/fsnotify/fsnotify.v1 v1.4.7\n## explicit\ngopkg.in/fsnotify/fsnotify.v1\n# gopkg.in/inf.v0 v0.9.1\n## explicit\ngopkg.in/inf.v0\n# gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7\n## explicit\ngopkg.in/tomb.v1\n# gopkg.in/yaml.v2 v2.4.0\n## explicit; go 1.15\ngopkg.in/yaml.v2\n# gopkg.in/yaml.v3 v3.0.1\n## explicit\ngopkg.in/yaml.v3\n# gotest.tools v2.2.0+incompatible\n## explicit\ngotest.tools/assert\ngotest.tools/assert/cmp\ngotest.tools/internal/difflib\ngotest.tools/internal/format\ngotest.tools/internal/source\n# k8s.io/api v0.32.3\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Monitoring Helm Chart\nDESCRIPTION: Command to install the Kubernetes Monitoring Helm chart using a custom values file. This sets up log collection for the Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhelm install --values ./k8s-monitoring-values.yml k8s grafana/k8s-monitoring -n meta\n```\n\n----------------------------------------\n\nTITLE: Generating Current Manifest with Helm Template in Shell\nDESCRIPTION: This shell command generates a manifest file for the local version of the Loki Helm chart using a custom configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/scenarios/README.md#2025-04-19_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nhelm template loki-release production/helm/loki -f ${scenario}-values.yaml > current-manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Using WrapString for Word Wrapping in Go\nDESCRIPTION: Example of using the wordwrap package to wrap a string with a specified line length. This demonstrates the basic usage where 'foo bar baz' is wrapped at 3 characters per line.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/go-wordwrap/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nwrapped := wordwrap.WrapString(\"foo bar baz\", 3)\nfmt.Println(wrapped)\n```\n\n----------------------------------------\n\nTITLE: Testing with Messagediff in Go\nDESCRIPTION: Shows how to use messagediff in Go test files to compare expected and actual values, providing detailed difference information in test failure messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/d4l3k/messagediff/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"gopkg.in/d4l3k/messagediff.v1\"\n\n...\n\ntype someStruct struct {\n    A, b int\n    C []int\n}\n\nfunc TestSomething(t *testing.T) {\n    want := someStruct{1, 2, []int{1}}\n    got := someStruct{1, 3, []int{1, 2}}\n    if diff, equal := messagediff.PrettyDiff(want, got); !equal {\n        t.Errorf(\"Something() = %#v\\n%s\", got, diff)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Adaptive Colors in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to specify different colors for light and dark backgrounds, which are automatically selected based on the terminal's background.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nlipgloss.AdaptiveColor{Light: \"236\", Dark: \"248\"}\n```\n\n----------------------------------------\n\nTITLE: Examining StartContainer Operation in containerd\nDESCRIPTION: Log message showing the initiation of a container start operation in containerd. The log includes a timestamp, log level, and the container ID being started.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\ntime=\"2024-05-07T11:59:38.694650245Z\" level=info msg=\"StartContainer for \\\"eeccb21da13bfae40b1a01984522c7a8f8dcb65dba3cc1cc2f2ba73381d9eaef\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Option Pattern for Mock Clock in Go\nDESCRIPTION: Demonstrates the recommended pattern for injecting a mock clock using the Option pattern, which keeps the production code clean while allowing easy testing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ntype Option func(*Thing)\n\n// WithTestClock is used in tests to inject a mock Clock\nfunc WithTestClock(clk quartz.Clock) Option {\n\treturn func(t *Thing) {\n\t\tt.clock = clk\n\t}\n}\n\nfunc NewThing(<required args>, opts ...Option) *Thing {\n\tt := &Thing{\n\t\t...\n\t\tclock: quartz.NewReal()\n\t}\n\tfor _, o := range opts {\n\t  o(t)\n\t}\n\treturn t\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingest Limits Frontend in YAML for Loki\nDESCRIPTION: YAML configuration block for ingest limits frontend settings in Loki, including recheck period, number of partitions, and cache TTL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n# The period to recheck per tenant ingestion rate limit configuration.\n# CLI flag: -ingest-limits-frontend.recheck-period\n[recheck_period: <duration> | default = 10s]\n\n# The number of partitions to use for the ring.\n# CLI flag: -ingest-limits-frontend.num-partitions\n[num_partitions: <int> | default = 64]\n\n# The TTL for the assigned partitions cache. 0 disables the cache.\n# CLI flag: -ingest-limits-frontend.assigned-partitions-cache-ttl\n[assigned_partitions_cache_ttl: <duration> | default = 1m]\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackSizeType Enum in Go\nDESCRIPTION: LokiStackSizeType is an enum declaring the type for Loki cluster scale outs. It includes various sizes such as demo, extra-small, medium, pico, and small.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackSizeType string\n\nconst (\n    SizeOneXDemo        LokiStackSizeType = \"1x.demo\"\n    SizeOneXExtraSmall   LokiStackSizeType = \"1x.extra-small\"\n    SizeOneXMedium       LokiStackSizeType = \"1x.medium\"\n    SizeOneXPico         LokiStackSizeType = \"1x.pico\"\n    SizeOneXSmall        LokiStackSizeType = \"1x.small\"\n)\n```\n\n----------------------------------------\n\nTITLE: Creating AWS Storage Secret for OpenShift\nDESCRIPTION: Command to create storage secret with AWS credentials and custom region settings\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nREGION=us-west-1 ./hack/deploy-aws-storage-secret.sh <BUCKET_NAME>\n```\n\n----------------------------------------\n\nTITLE: Ruler Status Configuration\nDESCRIPTION: RulerConfigStatus definition for tracking the health conditions of the ruler configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_29\n\nLANGUAGE: kubernetes\nCODE:\n```\nconditions:\n  type: []Kubernetes meta/v1.Condition\n```\n\n----------------------------------------\n\nTITLE: Cancelling Log Deletion Requests in Loki API\nDESCRIPTION: DELETE endpoint to cancel a delete request for the authenticated tenant. Requires request_id parameter and optional force parameter.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_50\n\nLANGUAGE: bash\nCODE:\n```\nDELETE /loki/api/v1/delete\n```\n\n----------------------------------------\n\nTITLE: Finding PRs with Specific Semver Labels Using jq\nDESCRIPTION: These commands use jq to filter the collected PRs (from prs.json) based on their semver labels, helping determine the type of version bump required.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/RELEASE.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\njq 'map(select(contains({labels: [{name: \"semver:major\"}]}) ))' prs.json\n```\n\nLANGUAGE: shell\nCODE:\n```\njq 'map(select(contains({labels: [{name: \"semver:minor\"}]}) ))' prs.json\n```\n\n----------------------------------------\n\nTITLE: Static File Server Implementation\nDESCRIPTION: Example of serving static files using gorilla/mux with proper timeout configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n    var dir string\n\n    flag.StringVar(&dir, \"dir\", \".\", \"the directory to serve files from. Defaults to the current dir\")\n    flag.Parse()\n    r := mux.NewRouter()\n\n    // This will serve files under http://localhost:8000/static/<filename>\n    r.PathPrefix(\"/static/\").Handler(http.StripPrefix(\"/static/\", http.FileServer(http.Dir(dir))))\n\n    srv := &http.Server{\n        Handler:      r,\n        Addr:         \"127.0.0.1:8000\",\n        // Good practice: enforce timeouts for servers you create!\n        WriteTimeout: 15 * time.Second,\n        ReadTimeout:  15 * time.Second,\n    }\n\n    log.Fatal(srv.ListenAndServe())\n}\n```\n\n----------------------------------------\n\nTITLE: Azure Storage Static Credentials Configuration in YAML\nDESCRIPTION: This YAML configuration shows the required fields for Azure object storage when using static credentials, including environment, container, account name, and account key.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  environment:  # The Azure Storage account environment\n  container:    # The Azure Storage account container\n  account_name: # The Azure Storage account name\n  account_key:  # The Azure Storage account key\n```\n\n----------------------------------------\n\nTITLE: Using MustWait for Mock Clock Events in Go\nDESCRIPTION: Shows a shorthand method for advancing the clock and waiting for events to complete, which is useful for concise test writing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nmClock.Advance(time.Second).MustWait(ctx)\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki Deployment\nDESCRIPTION: Bash command to check the status of Loki pods in the Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-monolithic/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n loki\n```\n\n----------------------------------------\n\nTITLE: Setting API Version for ARM Clients in Go\nDESCRIPTION: Demonstrates how to set a custom API version for ARM clients using the ClientOptions.APIVersion field.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\noptions := arm.ClientOptions{\n    APIVersion: \"2021-01-01\"\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Ordinal Numbers in Go\nDESCRIPTION: Illustrates the use of humanize.Ordinal() function to convert a number into its ordinal form.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfmt.Printf(\"You're my %s best friend.\", humanize.Ordinal(193)) // You are my 193rd best friend.\n```\n\n----------------------------------------\n\nTITLE: Defining EntryMiddleware and EntryHandler Interfaces in Go\nDESCRIPTION: These interfaces are used to construct a pipeline for processing log entries in Promtail. EntryMiddleware wraps EntryHandlers, while EntryHandler processes individual log entries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/labels.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype EntryMiddleware interface {\n    Wrap(next EntryHandler) EntryHandler\n}\n\ntype EntryHandler interface {\n    Handle(labels model.LabelSet, time time.Time, entry string) error\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudflare Log Scraping in Promtail\nDESCRIPTION: Configuration block for pulling logs from the Cloudflare Logpull API. Specifies the API token to use for authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\n# The Cloudflare API token to use. (Required)\n```\n\n----------------------------------------\n\nTITLE: Installing go-localereader via Go Modules\nDESCRIPTION: Command to install the go-localereader library using Go's package manager. This will add the library to your Go modules dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-localereader/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ go get github.com/mattn/go-localereader\n```\n\n----------------------------------------\n\nTITLE: Custom Error Messages in Go Validator\nDESCRIPTION: Demonstrates how to add custom error messages to validation rules using the tilde separator in struct tags.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\ntype Ticket struct {\n  Id        int64     `json:\"id\"`\n  FirstName string    `json:\"firstname\" valid:\"required~First name is blank\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Using Go Default HTTP Client Reference\nDESCRIPTION: Example showing the default http.Client usage pattern that is referenced in the documentation. This demonstrates the standard but potentially problematic approach of using shared HTTP client instances.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-cleanhttp/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nhttp.DefaultClient\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Pipeline in azblob\nDESCRIPTION: Shows how to configure the HTTP pipeline in azblob using the ClientOptions parameter during client creation, replacing the explicit pipeline creation pattern used in azure-storage-blob-go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/migrationguide.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// new code\nclient, err := azblob.NewClient(account, cred, &azblob.ClientOptions{\n\tClientOptions: azcore.ClientOptions{\n\t\t// configure HTTP pipeline options here\n\t},\n})\n```\n\n----------------------------------------\n\nTITLE: Struct Definitions with GoValidator Tags\nDESCRIPTION: Examples of struct definitions using GoValidator tags, demonstrating different validation scenarios for struct fields.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// this struct definition will fail govalidator.ValidateStruct() (and the field values do not matter):\ntype exampleStruct struct {\n  Name  string ``\n  Email string `valid:\"email\"`\n}\n\n// this, however, will only fail when Email is empty or an invalid email address:\ntype exampleStruct2 struct {\n  Name  string `valid:\"-\"`\n  Email string `valid:\"email\"`\n}\n\n// lastly, this will only fail when Email is an invalid email address but not when it's empty:\ntype exampleStruct2 struct {\n  Name  string `valid:\"-\"`\n  Email string `valid:\"email,optional\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Slice Mapping in Go\nDESCRIPTION: Shows how to transform slice elements using Map function\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\ndata := []interface{}{1, 2, 3, 4, 5}\nvar fn govalidator.ResultIterator = func(value interface{}, index int) interface{} {\n\treturn value.(int) * 3\n}\n_ = govalidator.Map(data, fn) // result = []interface{}{1, 6, 9, 12, 15}\n```\n\n----------------------------------------\n\nTITLE: Enabling Experimental Resource Semantic Conventions in OpenTelemetry Go SDK\nDESCRIPTION: Sets the OTEL_GO_X_RESOURCE environment variable to 'true' to enable experimental resource semantic conventions in the OpenTelemetry Go SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/internal/x/README.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_GO_X_RESOURCE=true\n```\n\n----------------------------------------\n\nTITLE: Redirecting Stdlib Logger to Go Kit Logger\nDESCRIPTION: Shows how to redirect the standard library's logger output to a Go Kit logger, allowing integration of legacy code using the stdlib logger with structured logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/kit/log/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\t\"os\"\n\tstdlog \"log\"\n\tkitlog \"github.com/go-kit/kit/log\"\n)\n\nfunc main() {\n\tlogger := kitlog.NewJSONLogger(kitlog.NewSyncWriter(os.Stdout))\n\tstdlog.SetOutput(kitlog.NewStdlibAdapter(logger))\n\tstdlog.Print(\"I sure like pie\")\n}\n\n// Output:\n// {\"msg\":\"I sure like pie\",\"ts\":\"2016/01/01 12:34:56\"}\n```\n\n----------------------------------------\n\nTITLE: Running the Consul Example\nDESCRIPTION: Executes the Go program that interacts with Consul.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/consul/api/README.md#2025-04-19_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngo run .\n```\n\n----------------------------------------\n\nTITLE: Setting no-option default values for flags\nDESCRIPTION: Demonstrates setting a NoOptDefVal for a flag, which is used when the flag is specified without a value. This changes how flags are processed on the command line.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nvar ip = flag.IntP(\"flagname\", \"f\", 1234, \"help message\")\nflag.Lookup(\"flagname\").NoOptDefVal = \"4321\"\n```\n\n----------------------------------------\n\nTITLE: Converting Strfmt Date and Time Types in Go\nDESCRIPTION: Shows how to convert Strfmt Date and DateTime types to time.Time, and Duration to time.Duration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/strfmt/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntime.Time(Time{})\ntime.Duration(Duration{})\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Loki Basic Authentication\nDESCRIPTION: Command to create a Kubernetes secret from the .htpasswd file for Loki's basic authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic loki-basic-auth --from-file=.htpasswd -n loki\n```\n\n----------------------------------------\n\nTITLE: Debugging Health Reporter State in Go\nDESCRIPTION: This snippet shows the debug logging of a health reporter's state in Felix. It includes information about the reporter's name, health reports, timeout, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfelix/health.go 196: Checking state of reporter reporter=&health.reporterState{name:\"async_calc_graph\", reports:health.HealthReport{Live:true, Ready:true, Detail:\"\"}, timeout:20000000000, latest:health.HealthReport{Live:true, Ready:true, Detail:\"\"}, timestamp:time.Time{wall:0xc1870422c183b4f6, ext:583520381062423, loc:(*time.Location)(0x4ce3aa0)}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Storage with Inline Service Account in YAML\nDESCRIPTION: This snippet demonstrates how to configure Google Cloud Storage using an inline service account in YAML format. It includes the bucket name and the full service account JSON.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ntype: GCS\nconfig:\n  bucket: \"thanos\"\n  service_account: |-\n    {\n      \"type\": \"service_account\",\n      \"project_id\": \"project\",\n      \"private_key_id\": \"abcdefghijklmnopqrstuvwxyz12345678906666\",\n      \"private_key\": \"-----BEGIN PRIVATE KEY-----\\...\\n-----END PRIVATE KEY-----\\n\",\n      \"client_email\": \"project@thanos.iam.gserviceaccount.com\",\n      \"client_id\": \"123456789012345678901\",\n      \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n      \"token_uri\": \"https://oauth2.googleapis.com/token\",\n      \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n      \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/thanos%40gitpods.iam.gserviceaccount.com\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Container Startup Error Logs\nDESCRIPTION: Log entries showing container startup failures in Kubernetes cluster. Contains various error types including CrashLoopBackOff and ImagePullBackOff errors, along with pod status updates and container removal events.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_46\n\nLANGUAGE: log\nCODE:\n```\nI0507 11:59:30.770697    4739 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-78dr\" status=\"Running\"\nE0507 11:59:30.604771    4586 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with CrashLoopBackOff: \\\"back-off 5m0s restarting failed container=grafana pod=dev05devuseast0test-grafana-6cb68b9788-v8dgd_hosted-grafana(59ef7574-134f-4888-826e-9a22062f29f8)\\\"\"\nE0507 11:59:30.363662    4601 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/hosted-grafana/hosted-grafana-pro:11.1.0-ephemeral-85282-20418-1\\\\\\\"\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Handling Empty Response Bodies in Go\nDESCRIPTION: Improvement to not parse empty response bodies (NoContent responses) in the object storage package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nobjectstorage: Do not parse NoContent responses\n```\n\n----------------------------------------\n\nTITLE: Configuring Namespaces\nDESCRIPTION: YAML configuration for specifying which namespaces to monitor.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nnamespaces:\n    - loki\n```\n\n----------------------------------------\n\nTITLE: Parsing Logfmt Format - Basic Example\nDESCRIPTION: Example of parsing a logfmt formatted log line without parameters to extract all key-value pairs\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_10\n\nLANGUAGE: logfmt\nCODE:\n```\nat=info method=GET path=/ host=grafana.net fwd=\"124.133.124.161\" service=8ms status=200\n```\n\n----------------------------------------\n\nTITLE: Installing mimetype package in Go\nDESCRIPTION: Command to install the mimetype package using Go's package management system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gabriel-vasile/mimetype/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/gabriel-vasile/mimetype\n```\n\n----------------------------------------\n\nTITLE: Creating a Pull-based Pub/Sub Subscription using Terraform\nDESCRIPTION: This Terraform configuration creates a pull-based subscription for the Pub/Sub topic. Promtail will use this subscription to consume log messages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: terraform\nCODE:\n```\n// Subscription\nresource \"google_pubsub_subscription\" \"main\" {\n  name  = \"cloud-logs\"\n  topic = google_pubsub_topic.main.name\n}\n```\n\n----------------------------------------\n\nTITLE: Inheriting Styles in Go with Lip Gloss\nDESCRIPTION: Shows how styles can inherit rules from other styles, with only unset rules being inherited.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nvar styleA = lipgloss.NewStyle().\n    Foreground(lipgloss.Color(\"229\")).\n    Background(lipgloss.Color(\"63\"))\n\n// Only the background color will be inherited here, because the foreground\n// color will have been already set:\nvar styleB = lipgloss.NewStyle().\n    Foreground(lipgloss.Color(\"201\")).\n    Inherit(styleA)\n```\n\n----------------------------------------\n\nTITLE: Updating Context Span Storage in Go OpenTelemetry\nDESCRIPTION: Unified storage of local and remote Spans in context.Context, using just the current Span. SpanContext can now self-identify as remote or not.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_34\n\nLANGUAGE: Go\nCODE:\n```\nctx := trace.ContextWithRemoteSpanContext(context.Background(), spanContext)\n```\n\n----------------------------------------\n\nTITLE: Basic HTTP Client Creation\nDESCRIPTION: Example showing the basic but insufficient approach of creating a new HTTP client. While this creates a new client instance, it still uses the shared DefaultTransport.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-cleanhttp/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n&http.Client{}\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Timeout\nDESCRIPTION: YAML configuration example for setting query timeout in logcli config file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nlimits_config:\n  query_timeout: 10m\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Identity Module in Go\nDESCRIPTION: This command installs the Azure Identity module using Go modules for dependency management.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get -u github.com/Azure/azure-sdk-for-go/sdk/azidentity\n```\n\n----------------------------------------\n\nTITLE: PDC Container Configuration Command Arguments in Kubernetes\nDESCRIPTION: Command line arguments for a Private Datasource Connect (PDC) container in Kubernetes showing network proxy configuration, authentication settings, and service endpoints. The configuration includes SOCKS proxy settings, SSH server configuration, distributor settings, and certificate management.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_45\n\nLANGUAGE: shell\nCODE:\n```\n-proxy.auth.ca-keys-dir=/var/run/secrets/pdc-certs -proxy.socks-server.addr=:10443 -proxy.ssh-server.addr=:2222 -proxy.use-socks-username-for-routing -proxy.api.http-address=:9182 -proxy.check-connpool-address-in-ring -memberlist.join=dns+gossip-ring.pdc.svc.cluster.local:7946 -api.http-address=:11443 -distributor.enabled=true -distributor.addr=:10444 -distributor.use-socks-username-for-routing -gateway.enabled=true -gateway.addr=:2244 -log.level=debug -certs.ca-private-key-file=/var/run/secrets/pdc-certs/ca.key -certs.ca-cert-file=/var/run/secrets/pdc-certs/ca.crt -certs.ca-pub-file=/var/run/secrets/pdc-certs/ca.pub -certs.cluster=local-k8s -shard-size=3 -graceful-shutdown-period=30s -enable-multiple-networks\n```\n\n----------------------------------------\n\nTITLE: Referencing GitHub Workflow for Backport Automation\nDESCRIPTION: The path to the GitHub workflow file that handles the automated backporting process. This file contains the CI job configuration that automates the backport PR creation when appropriate labels are added.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release/backport-commits.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n.github/workflows/backport.yml\n```\n\n----------------------------------------\n\nTITLE: Using termenv Template Helpers in Go\nDESCRIPTION: This snippet demonstrates how to use termenv's template helper functions to style text within Go templates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n// load template helpers\nf := output.TemplateFuncs()\ntpl := template.New(\"tpl\").Funcs(f)\n\n// apply bold style in a template\nbold := `{{ Bold \"Hello World\" }}`\n\n// examples for colorized templates\ncol := `{{ Color \"#ff0000\" \"#0000ff\" \"Red on Blue\" }}`\nfg := `{{ Foreground \"#ff0000\" \"Red Foreground\" }}`\nbg := `{{ Background \"#0000ff\" \"Blue Background\" }}`\n\n// wrap styles\nwrap := `{{ Bold (Underline \"Hello World\") }}`\n\n// parse and render\ntpl, err = tpl.Parse(bold)\n\nvar buf bytes.Buffer\ntpl.Execute(&buf, nil)\nfmt.Println(&buf)\n```\n\n----------------------------------------\n\nTITLE: Verifying Loki Operator CRD Installation\nDESCRIPTION: Checks if the lokistacks.loki.grafana.com CRD has been successfully created in the cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crd lokistacks.loki.grafana.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Server to Bind to Local Interface\nDESCRIPTION: YAML configuration for Loki server to bind HTTP endpoints to localhost (127.0.0.1) for security.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  http_listen_address: 127.0.0.1\n  http_listen_port: 80\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Service Start Output\nDESCRIPTION: This snippet shows the output of the Docker Compose command, listing the services that were started for the Carnivorous Greenhouse application.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n ✔ Container greenhouse-db-1                 Started                                                         \n ✔ Container greenhouse-websocket_service-1  Started \n ✔ Container greenhouse-bug_service-1        Started\n ✔ Container greenhouse-user_service-1       Started\n ✔ Container greenhouse-plant_service-1      Started\n ✔ Container greenhouse-simulation_service-1 Started\n ✔ Container greenhouse-main_app-1           Started\n```\n\n----------------------------------------\n\nTITLE: Renaming XML Property for Object Replication Metadata\nDESCRIPTION: Directive to rename the ObjectReplicationMetadata property to OrMetadata in the BlobItemInternal definition to match XML serialization requirements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.definitions\n  transform: >\n    $.BlobItemInternal.properties[\"OrMetadata\"] = $.BlobItemInternal.properties[\"ObjectReplicationMetadata\"];\n    delete $.BlobItemInternal.properties[\"ObjectReplicationMetadata\"];\n```\n\n----------------------------------------\n\nTITLE: Logging Output from Grafana Loki File Target Manager\nDESCRIPTION: Log entries showing file target management operations, including file watching, tailing, and cleanup of container log files. Contains timestamps, log levels, component information, and detailed operational messages.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_16\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:42.800648554Z caller=filetargetmanager.go:397 level=info component=logs logs_config=default msg=\"Removing target\" key=\"/var/log/pods/*bbadc1a8-4cdf-46a4-bbf4-16a0c08b10d1/grafana/*.log:{app=\\\"grafana\\\", conprof=\\\"true\\\", container=\\\"grafana\\\", instanceId=\\\"i1010\\\", job=\\\"hosted-grafana/grafana\\\", name=\\\"grafana\\\", namespace=\\\"hosted-grafana\\\", org=\\\"org11\\\", plan=\\\"free\\\", pod=\\\"org11-grafana-55fdb5b7bc-npz4b\\\", pod_template_hash=\\\"55fdb5b7bc\\\", resource_version=\\\"167301760\\\", slug=\\\"org11\\\", stackId=\\\"111111\\\"}\" [truncated for brevity]\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Storage Account\nDESCRIPTION: Command to create a storage account in Azure for Loki data\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naz storage account create \\\n    --name <NAME> \\\n    --location <REGION> \\\n    --sku Standard_ZRS \\\n    --encryption-services blob \\\n    --resource-group <MY_RESOURCE_GROUP_NAME>\n```\n\n----------------------------------------\n\nTITLE: Type Checking with Objx Values in Go\nDESCRIPTION: Shows how to use the IsStr method to check if a retrieved value is a string before working with it.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nif m.Get(\"code\").IsStr() { // Your code... }\n```\n\n----------------------------------------\n\nTITLE: Getting and Setting Interface{} Values with Type Checking in Go using reflect2\nDESCRIPTION: Shows how to use reflect2 to get and set interface{} values with type checking. This example demonstrates setting a value of type int.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/modern-go/reflect2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvalType := reflect2.TypeOf(1)\ni := 1\nj := 10\nvalType.Set(&i, &j)\n// i will be 10\n```\n\n----------------------------------------\n\nTITLE: Placing Text in Whitespace with Lip Gloss in Go\nDESCRIPTION: Demonstrates how to place text blocks within specified dimensions of whitespace using Lip Gloss functions. Shows horizontal, vertical, and corner positioning.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_23\n\nLANGUAGE: go\nCODE:\n```\n// Center a paragraph horizontally in a space 80 cells wide. The height of\n// the block returned will be as tall as the input paragraph.\nblock := lipgloss.PlaceHorizontal(80, lipgloss.Center, fancyStyledParagraph)\n\n// Place a paragraph at the bottom of a space 30 cells tall. The width of\n// the text block returned will be as wide as the input paragraph.\nblock := lipgloss.PlaceVertical(30, lipgloss.Bottom, fancyStyledParagraph)\n\n// Place a paragraph in the bottom right corner of a 30x80 cell space.\nblock := lipgloss.Place(30, 80, lipgloss.Right, lipgloss.Bottom, fancyStyledParagraph)\n```\n\n----------------------------------------\n\nTITLE: Capacity Check Debug Log Entry in JSON\nDESCRIPTION: This JSON represents a debug log entry for checking server capacity in Grafana Loki. It includes fields for request ID, log level, pool configuration, build status, server metrics, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"5qEIzErDfiALVPAN\",\"level\":\"debug\",\"max-pool\":4,\"min-pool\":0,\"msg\":\"check capacity\",\"pending-builds\":0,\"running-builds\":0,\"server-buffer\":0,\"server-capacity\":0,\"server-count\":0,\"time\":\"2024-04-16T14:50:22Z\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Label Cardinality for Loki Log Generation\nDESCRIPTION: This snippet demonstrates how to configure label cardinality when setting up the Loki client. It specifies the number of distinct values for various labels, affecting the total number of unique streams generated.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/log-generation.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport loki from 'k6/x/loki';\n\nconst cardinality = {\n   \"app\": 1,\n   \"namespace\": 2,\n   \"language\": 2,\n   \"pod\": 5,\n};\nconst conf = loki.Config(\"http://localhost:3100\", 5000, 1.0, cardinality);\nconst client = loki.Client(conf);\n```\n\n----------------------------------------\n\nTITLE: Pod Specification with Init Container\nDESCRIPTION: Kubernetes pod specification showing implementation using an init container to handle topology information.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: ingester\n  annotations: \n    topology.kubernetes.io/zone: zone-a \nspec:\n  topologySpreadConstraints:\n  - maxSkew: 1\n    topologyKey: topology.kubernetes.io/zone\n    whenUnsatisfiable: DoNotSchedule\n    labelSelector:\n      matchLabels:\n        ingester: pod\n  initContainers:\n  - name: init-envval\n    image: busybox:1.28\n    command: ['sh', '-c', \"until cat /etc/podinfo/annotations; do echo waiting for toppologykey; sleep 2; done\"]\n    volumeMounts:\n      - name: podinfo\n        mountPath: /etc/podinfo\n  containers:\n  - name: ingester\n    env:\n    - name: ZONE\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.annotations['topology.kubernetes.io/zone']\n  volumes:\n    - name: podinfo\n      downwardAPI:\n        items:\n          - path: \"annotations\"\n            fieldRef:\n              fieldPath: metadata.annotations['topology.kubernetes.io/zone']\n```\n\n----------------------------------------\n\nTITLE: Using AfterFunc with Mock Clock in Go\nDESCRIPTION: Shows how to use AfterFunc with a mock clock and advance time to trigger the function. This allows testing of time-based callbacks without actual delays.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfired := false\n\ntmr := mClock.AfterFunc(time.Second, func() {\n  fired = true\n})\nmClock.Advance(time.Second)\n```\n\n----------------------------------------\n\nTITLE: Adding openSUSE Repository for Loki\nDESCRIPTION: This snippet demonstrates how to add the openSUSE repository for Loki packages. It adds the repository URL and refreshes the package list using zypper.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/local.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo zypper ar https://download.opensuse.org/repositories/security:/logging/openSUSE_Leap_15.1/security:logging.repo\nsudo zypper ref\n```\n\n----------------------------------------\n\nTITLE: Example for Cancelling a Deletion Request\nDESCRIPTION: Example cURL command to cancel a specific deletion request.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_51\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X DELETE \\\n  '<compactor_addr>/loki/api/v1/delete?request_id=<request_id>' \\\n  -H 'X-Scope-OrgID: <tenant-id>'\n```\n\n----------------------------------------\n\nTITLE: Drop Labels Expression - Basic JSON Example\nDESCRIPTION: Demonstrates dropping specific labels from JSON log data using the drop expression. Shows how level and method='GET' labels are removed from the processed output.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\"level\": \"info\", \"method\": \"GET\", \"path\": \"/\", \"host\": \"grafana.net\", \"status\": \"200\"}\n```\n\n----------------------------------------\n\nTITLE: Using Tags with Mock Clock in Go\nDESCRIPTION: Shows how to use tags to distinguish between different clock calls in multi-goroutine scenarios, allowing for more precise control and assertions in complex tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\ntrap := mClock.Trap.Now(\"foo\") // traps any calls that contain \"foo\"\ndefer trap.Close()\n\nfoo := make(chan time.Time)\ngo func(){\n\tfoo <- mClock.Now(\"foo\", \"bar\")\n}()\nbaz := make(chan time.Time)\ngo func(){\n\tbaz <- mClock.Now(\"baz\")\n}()\ncall := trap.MustWait(ctx)\nmClock.Advance(time.Second).MustWait(ctx)\ncall.Release()\n// call.Tags contains []string{\"foo\", \"bar\"}\n\ngotFoo := <-foo // 1s after start\ngotBaz := <-baz // ?? never trapped, so races with Advance()\n```\n\n----------------------------------------\n\nTITLE: Displaying Ceph PGMap State Metrics in Telegraf\nDESCRIPTION: Demonstrates the change in how Ceph PGMap state metrics are represented in Telegraf before and after version 1.3. The new format uses a single 'count' field with a 'state' tag for better organization and querying.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG-1.13.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nTelegraf < 1.3:\n\n# field_name             value\nactive+clean             123\nactive+clean+scrubbing   3\n\nTelegraf >= 1.3:\n\n# field_name    value       tag\ncount           123         state=active+clean\ncount           3           state=active+clean+scrubbing\n```\n\n----------------------------------------\n\nTITLE: Using Traps with Mock Clock in Go\nDESCRIPTION: Shows how to use traps to intercept and control specific clock calls, allowing for detailed inspection and manipulation of time-based operations in tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nfunc TestTrap(t *testing.T) {\n\tctx, cancel := context.WithTimeout(10*time.Second)\n\tdefer cancel()\n\tmClock := quartz.NewMock(t)\n\ttrap := mClock.Trap().AfterFunc()\n\tdefer trap.Close() // stop trapping AfterFunc calls\n\n\tcount := 0\n\tgo mClock.AfterFunc(time.Hour, func(){\n\t\tcount++\n\t})\n\tcall := trap.MustWait(ctx)\n\tcall.Release()\n\tif call.Duration != time.Hour {\n\t\tt.Fatal(\"wrong duration\")\n\t}\n\n\t// Now that the async call to AfterFunc has occurred, we can advance the clock to trigger it\n\tmClock.Advance(call.Duration).MustWait(ctx)\n\tif count != 1 {\n\t\tt.Fatal(\"wrong count\")\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Pushing Git Tag for Release\nDESCRIPTION: Commands for creating a signed Git tag with the version number and changelog, then pushing it to the repository.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/klog/v2/RELEASE.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit tag -s $VERSION\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit push $VERSION\n```\n\n----------------------------------------\n\nTITLE: Thread-safe Metric Registration in Go\nDESCRIPTION: Shows how to use GetOrRegister for thread-safe metric registration, and demonstrates the importance of unregistering short-lived meters and timers to prevent memory leaks.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nt := metrics.GetOrRegisterTimer(\"account.create.latency\", nil)\nt.Time(func() {})\nt.Update(47)\n\n// Will call Stop() on the Meter to allow for garbage collection\nmetrics.Unregister(\"quux\")\n// Or similarly for a Timer that embeds a Meter\nmetrics.Unregister(\"bang\")\n```\n\n----------------------------------------\n\nTITLE: Defining Certificate Type Mapping in HCL\nDESCRIPTION: HCL code for defining certificate type mappings to be used in template generation for mTLS.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\nlocals {\n  certs = {\n    \"CA\"   = \"issuing_ca\",\n    \"cert\" = \"certificate\",\n    \"key\"  = \"private_key\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RulesSpec and LokiStack API Extensions in Go\nDESCRIPTION: This code snippet defines the Go structs necessary for extending the LokiStack API to support the Ruler component. It includes RulesSpec for enabling/disabling the ruler and selecting rules, as well as extensions to LokiStackSpec, LokiTemplateSpec, and LokiStackComponentStatus.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// RulesSpec defines the spec for the ruler component.\ntype RulesSpec struct {\n    // Enabled defines a flag to enable/disable the ruler component\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:booleanSwitch\",displayName=\"Enable\"\n    Enabled bool `json:\"enabled\"`\n\n    // A selector to select which Loki rules to mount for loading alerting/recording\n    // rules from.\n    //\n    // +optional\n    // +kubebuilder:validation:optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Selector\"\n    Selector *metav1.LabelSelector `json:\"selector,omitempty\"`\n\n    // Namespaces to be selected for AlertingRules/RecordingRules discovery. If unspecified, only\n    // the same namespace as the LokiStack object is in is used.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Namespace Selector\"\n    NamespaceSelector *metav1.LabelSelector `json:\"namespaceSelector,omitempty\"`\n}\n\n// LokiStackSpec defines the desired state of LokiStack\ntype LokiStackSpec struct {\n...\n    // Rules defines the spec for the ruler component\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:advanced\",displayName=\"Rules\"\n    Rules *RulesSpec `json:\"rules,omitempty\"`\n...\n}\n\n// LokiTemplateSpec defines the template of all requirements to configure\n// scheduling of all Loki components to be deployed.\ntype LokiTemplateSpec struct {\n...\n    // Ruler defines the ruler component spec.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Ruler pods\"\n    Ruler *LokiComponentSpec `json:\"ruler,omitempty\"`\n}\n\n// LokiStackComponentStatus defines the map of per pod status per LokiStack component.\n// Each component is represented by a separate map of v1.Phase to a list of pods.\ntype LokiStackComponentStatus struct {\n...\n    // Ruler is a map to the per pod status of the lokistack ruler statefulset.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=status,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:podStatuses\",displayName=\"Ruler\",order=6\n    Ruler PodStatusMap `json:\"ruler,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Running Loki Manually with Kafka Configuration\nDESCRIPTION: This command runs Loki directly from source code with a specific Kafka configuration. It uses debug logging and targets all components.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/kafka/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./cmd/loki/main.go --config.file=tools/dev/kafka/loki-local-config.debug.yaml --log.level=debug -target=all\n```\n\n----------------------------------------\n\nTITLE: Setting Sampling Priority Programmatically in Go\nDESCRIPTION: Shows how to set the sampling priority for a span and its children using the OpenTracing API in Go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/opentracing/opentracing-go\"\n    \"github.com/opentracing/opentracing-go/ext\"\n)\n\nspan := opentracing.SpanFromContext(ctx)\next.SamplingPriority.Set(span, 1)\n```\n\n----------------------------------------\n\nTITLE: Importing Gophercloud Package in Go\nDESCRIPTION: Shows how to import the Gophercloud package in Go code.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/gophercloud/gophercloud/v2\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Tracing in Promtail\nDESCRIPTION: Configuration for enabling tracing with Jaeger in Promtail. Currently limited to configuration through environment variables.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_49\n\nLANGUAGE: yaml\nCODE:\n```\n# When true,\n[enabled: <boolean> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Installing go-json package using Go modules\nDESCRIPTION: Command to install the go-json package using Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/goccy/go-json\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Status and Container Events\nDESCRIPTION: Collection of system logs showing container lifecycle events, image pull failures, and pod status changes. Includes errors related to container startup failures, image pull backoffs, and container removal operations.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_31\n\nLANGUAGE: log\nCODE:\n```\nI0507 11:59:37.134905    4734 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-5rdf\" status=\"Running\"\nE0507 11:59:37.041999    4589 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/hosted-grafana/hosted-grafana-pro:10.0.2\\\\\\\"\\\"\" pod=\"hosted-grafana/johan6-grafana-796656fd69-6rfnm\" podUID=\"f6fe6c71-2a0e-4797-bd0c-2b508d1287fe\"\n```\n\n----------------------------------------\n\nTITLE: Using Afero in Place of OS Package in Go\nDESCRIPTION: This snippet shows how to use Afero's filesystem abstraction in place of the standard OS package functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nAppFs.Open(\"/tmp/foo\")\n```\n\n----------------------------------------\n\nTITLE: Kafka Log Management Operations\nDESCRIPTION: This snippet contains various log entries from Kafka's log management system. It includes operations such as rolling new log segments, writing producer snapshots, deleting old segments, and adjusting log start offsets. These operations are part of Kafka's routine maintenance to manage log retention and storage efficiency.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n[2024-05-07 10:55:53,434] INFO [ProducerStateManager partition=ingest-3] Wrote producer snapshot at offset 184233903 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:53,432] INFO [LocalLog partition=ingest-3, dir=/bitnami/kafka/data] Rolled new log segment at offset 184233903 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:53,251] INFO [UnifiedLog partition=cortex-dev-01-aggregations-offsets-0, dir=/bitnami/kafka/data] Incremented log start offset to 2142693 due to leader offset increment (kafka.log.UnifiedLog)\n[2024-05-07 10:55:53,040] INFO Deleted producer state snapshot /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447969.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:53,040] INFO Deleted producer state snapshot /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447957.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:53,038] INFO Deleted time index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447969.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,038] INFO Deleted offset index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447969.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,038] INFO Deleted log /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447969.log.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,038] INFO Deleted time index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447957.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,038] INFO Deleted offset index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447957.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,038] INFO Deleted log /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-1/00000000000000447957.log.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,038] INFO [LocalLog partition=mimir-dev-09-aggregations-offsets-1, dir=/bitnami/kafka/data] Deleting segment files LogSegment(baseOffset=447957, size=948, lastModifiedTime=1715059232052, largestRecordTimestamp=Some(1715059232002)),LogSegment(baseOffset=447969, size=948, lastModifiedTime=1715059424352, largestRecordTimestamp=Some(1715059424301)) (kafka.log.LocalLog$)\n[2024-05-07 10:55:53,034] INFO Deleted producer state snapshot /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448165.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:53,033] INFO Deleted time index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448165.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,033] INFO Deleted offset index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448165.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,033] INFO Deleted log /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448165.log.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,032] INFO [LocalLog partition=mimir-dev-09-aggregations-offsets-0, dir=/bitnami/kafka/data] Deleting segment files LogSegment(baseOffset=448165, size=948, lastModifiedTime=1715059402054, largestRecordTimestamp=Some(1715059402004)) (kafka.log.LocalLog$)\n[2024-05-07 10:55:53,032] INFO Deleted producer state snapshot /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448153.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:53,030] INFO Deleted time index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448153.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,030] INFO Deleted offset index /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448153.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,030] INFO Deleted log /bitnami/kafka/data/mimir-dev-09-aggregations-offsets-0/00000000000000448153.log.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:53,030] INFO [LocalLog partition=mimir-dev-09-aggregations-offsets-0, dir=/bitnami/kafka/data] Deleting segment files LogSegment(baseOffset=448153, size=948, lastModifiedTime=1715059202091, largestRecordTimestamp=Some(1715059202040)) (kafka.log.LocalLog$)\n[2024-05-07 10:55:52,850] INFO [ProducerStateManager partition=ingest-6] Wrote producer snapshot at offset 182088575 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,848] INFO [LocalLog partition=ingest-6, dir=/bitnami/kafka/data] Rolled new log segment at offset 182088575 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,846] INFO [ProducerStateManager partition=ingest-6] Wrote producer snapshot at offset 182088575 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,844] INFO [LocalLog partition=ingest-6, dir=/bitnami/kafka/data] Rolled new log segment at offset 182088575 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,480] INFO [ProducerStateManager partition=ingest-11] Wrote producer snapshot at offset 66190192 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,477] INFO [LocalLog partition=ingest-11, dir=/bitnami/kafka/data] Rolled new log segment at offset 66190192 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,367] INFO [ProducerStateManager partition=ingest-7] Wrote producer snapshot at offset 180832086 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,365] INFO [LocalLog partition=ingest-7, dir=/bitnami/kafka/data] Rolled new log segment at offset 180832086 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,308] INFO [ProducerStateManager partition=ingest-12] Wrote producer snapshot at offset 36659198 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,305] INFO [LocalLog partition=ingest-12, dir=/bitnami/kafka/data] Rolled new log segment at offset 36659198 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,303] INFO [ProducerStateManager partition=ingest-12] Wrote producer snapshot at offset 36659198 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,301] INFO [LocalLog partition=ingest-12, dir=/bitnami/kafka/data] Rolled new log segment at offset 36659198 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,192] INFO [ProducerStateManager partition=ingest-10] Wrote producer snapshot at offset 121932238 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,189] INFO [LocalLog partition=ingest-10, dir=/bitnami/kafka/data] Rolled new log segment at offset 121932238 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,186] INFO [ProducerStateManager partition=ingest-10] Wrote producer snapshot at offset 121932238 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:52,184] INFO [LocalLog partition=ingest-10, dir=/bitnami/kafka/data] Rolled new log segment at offset 121932238 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:52,053] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-3, dir=/bitnami/kafka/data] Incremented log start offset to 51170 due to segment deletion (kafka.log.UnifiedLog)\n[2024-05-07 10:55:52,047] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-3, dir=/bitnami/kafka/data] Deleting segment LogSegment(baseOffset=51158, size=948, lastModifiedTime=1715059560415, largestRecordTimestamp=Some(1715059560369)) due to retention size 102400 breach. Log size after deletion will be 102542. (kafka.log.UnifiedLog)\n[2024-05-07 10:55:52,047] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-3, dir=/bitnami/kafka/data] Deleting segment LogSegment(baseOffset=51146, size=948, lastModifiedTime=1715059380417, largestRecordTimestamp=Some(1715059380370)) due to retention size 102400 breach. Log size after deletion will be 103490. (kafka.log.UnifiedLog)\n[2024-05-07 10:55:52,043] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-2, dir=/bitnami/kafka/data] Deleting segments due to log start offset 39847 breach: LogSegment(baseOffset=39823, size=948, lastModifiedTime=1715059620420, largestRecordTimestamp=Some(1715059620372)),LogSegment(baseOffset=39835, size=948, lastModifiedTime=1715059800918, largestRecordTimestamp=Some(1715059800870)) (kafka.log.UnifiedLog)\n[2024-05-07 10:55:51,881] INFO [ProducerStateManager partition=ingest-5] Wrote producer snapshot at offset 183097322 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:51,878] INFO [LocalLog partition=ingest-5, dir=/bitnami/kafka/data] Rolled new log segment at offset 183097322 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:51,713] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-1, dir=/bitnami/kafka/data] Incremented log start offset to 45157 due to segment deletion (kafka.log.UnifiedLog)\n[2024-05-07 10:55:51,709] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-1, dir=/bitnami/kafka/data] Deleting segment LogSegment(baseOffset=45145, size=948, lastModifiedTime=1715059875915, largestRecordTimestamp=Some(1715059875870)) due to retention size 102400 breach. Log size after deletion will be 102542. (kafka.log.UnifiedLog)\n[2024-05-07 10:55:51,709] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-1, dir=/bitnami/kafka/data] Deleting segment LogSegment(baseOffset=45133, size=948, lastModifiedTime=1715059695414, largestRecordTimestamp=Some(1715059695369)) due to retention size 102400 breach. Log size after deletion will be 103490. (kafka.log.UnifiedLog)\n[2024-05-07 10:55:51,703] INFO [UnifiedLog partition=mimir-dev-15-aggregations-offsets-0, dir=/bitnami/kafka/data] Deleting segments due to log start offset 45366 breach: LogSegment(baseOffset=45342, size=948, lastModifiedTime=1715059155914, largestRecordTimestamp=Some(1715059155868)),LogSegment(baseOffset=45354, size=948, lastModifiedTime=1715059335414, largestRecordTimestamp=Some(1715059335369)) (kafka.log.UnifiedLog)\n```\n\n----------------------------------------\n\nTITLE: Starting Loki Docker Container for Testing\nDESCRIPTION: Command to start a Loki instance using Docker for testing purposes, exposing port 3100.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 3100:3100 grafana/loki:latest\n```\n\n----------------------------------------\n\nTITLE: Defining Application Object with Logger in Go\nDESCRIPTION: Illustrates how to define an application object struct that includes a logr.Logger field.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype appObject struct {\n    // ... other fields ...\n    logger logr.Logger\n    // ... other fields ...\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing XID Components in Go\nDESCRIPTION: This code shows how to access individual components of an XID, including the machine identifier, process ID, timestamp, and counter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rs/xid/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nguid.Machine()\nguid.Pid()\nguid.Time()\nguid.Counter()\n```\n\n----------------------------------------\n\nTITLE: Using OSC52 with SSH in Go\nDESCRIPTION: This example shows how to use OSC52 clipboard operations over SSH using gliderlabs/ssh library. It includes terminal type detection for screen and tmux to apply appropriate sequence modifications.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aymanbagabas/go-osc52/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar sshSession ssh.Session\nseq := osc52.New(\"Hello awesome!\")\n// Check if term is screen or tmux\npty, _, _ := s.Pty()\nif pty.Term == \"screen\" {\n  seq = seq.Screen()\n} else if isTmux {\n  seq = seq.Tmux()\n}\nseq.WriteTo(sshSession.Stderr())\n```\n\n----------------------------------------\n\nTITLE: Testing Health Check Handler in Go\nDESCRIPTION: Unit test implementation for the health check handler using httptest package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n// endpoints_test.go\npackage main\n\nimport (\n    \"net/http\"\n    \"net/http/httptest\"\n    \"testing\"\n)\n\nfunc TestHealthCheckHandler(t *testing.T) {\n    // Create a request to pass to our handler. We don't have any query parameters for now, so we'll\n    // pass 'nil' as the third parameter.\n    req, err := http.NewRequest(\"GET\", \"/health\", nil)\n    if err != nil {\n        t.Fatal(err)\n    }\n\n    // We create a ResponseRecorder (which satisfies http.ResponseWriter) to record the response.\n    rr := httptest.NewRecorder()\n    handler := http.HandlerFunc(HealthCheckHandler)\n\n    // Our handlers satisfy http.Handler, so we can call their ServeHTTP method\n    // directly and pass in our Request and ResponseRecorder.\n    handler.ServeHTTP(rr, req)\n\n    // Check the status code is what we expect.\n    if status := rr.Code; status != http.StatusOK {\n        t.Errorf(\"handler returned wrong status code: got %v want %v\",\n            status, http.StatusOK)\n    }\n\n    // Check the response body is what we expect.\n    expected := `{\"alive\": true}`\n    if rr.Body.String() != expected {\n        t.Errorf(\"handler returned unexpected body: got %v want %v\",\n            rr.Body.String(), expected)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Upgrade Commands for Single Binary Mode\nDESCRIPTION: Console commands for upgrading Loki from grafana/loki chart to v3.0, including repository update and statefulset deletion steps.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-from-2x/index.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo update grafana\nkubectl -n loki delete statefulsets.apps loki\nhelm upgrade loki grafana/loki \\\n  --values values.yaml \\\n  --namespace loki\n```\n\n----------------------------------------\n\nTITLE: Referencing Azure Secret in LokiStack Configuration\nDESCRIPTION: YAML snippet to reference an Azure secret in the LokiStack storage configuration. This configuration tells the Loki Operator to use the referenced secret for Azure storage authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  storage:\n    secret:\n      name: lokistack-dev-azure\n      type: azure\n```\n\n----------------------------------------\n\nTITLE: Failed Grafana Health Check Logs\nDESCRIPTION: Log entries showing repeated failed health check attempts to Grafana's health API endpoint on localhost:3000, indicating connection issues\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_26\n\nLANGUAGE: log\nCODE:\n```\nts=2024-05-07T11:59:36.616408464Z level=error caller=http_client.go:56 app=hgrun hgrun_version=0.1.453-62-g2605e8595 msg=\"request failed\" error=\"Get \\\"http://127.0.0.1:3000/api/health\\\": dial tcp 127.0.0.1:3000: connect: connection refused\" method=GET url=http://127.0.0.1:3000/api/health\n```\n\n----------------------------------------\n\nTITLE: Converting Color to Lab Space in Go\nDESCRIPTION: Example showing how to convert colors to Lab color space using LinearRgb conversion. This code demonstrates the standard conversion path which may be slower but more accurate.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ncol := // Get your color somehow\nl, a, b := XyzToLab(LinearRgbToXyz(col.LinearRgb()))\n```\n\n----------------------------------------\n\nTITLE: Installing vfsgendev CLI Tool with Go\nDESCRIPTION: Command to install the vfsgendev command-line tool which simplifies vfsgen usage by eliminating the need for a separate generation helper file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_7\n\nLANGUAGE: Bash\nCODE:\n```\ngo get -u github.com/shurcooL/vfsgen/cmd/vfsgendev\n```\n\n----------------------------------------\n\nTITLE: Verifying LokiStack Instance in OpenShift\nDESCRIPTION: This command retrieves the YAML configuration of the LokiStack instance named 'lokistack-dev' in the 'openshift-logging' namespace to check its conditions field.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n openshift-logging get lokistack lokistack-dev -o yaml\n```\n\n----------------------------------------\n\nTITLE: Logstash Filter for Kubernetes Metadata\nDESCRIPTION: Logstash filter configuration to extract Kubernetes metadata fields and convert them into Loki labels.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: conf\nCODE:\n```\nfilter {\n  if [kubernetes] {\n    mutate {\n      add_field => {\n        \"container_name\" => \"%{[kubernetes][container][name]}\"\n        \"namespace\" => \"%{[kubernetes][namespace]}\"\n        \"pod\" => \"%{[kubernetes][pod][name]}\"\n      }\n      replace => { \"host\" => \"%{[kubernetes][node][name]}\"}\n    }\n  }\n  mutate {\n    remove_field => [\"tags\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Policy for Thanos Testing\nDESCRIPTION: Expanded JSON IAM policy that includes additional permissions for running Thanos e2e tests. Adds CreateBucket and DeleteBucket permissions to the deployment policy.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Statement\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListBucket\",\n                \"s3:GetObject\",\n                \"s3:DeleteObject\",\n                \"s3:PutObject\",\n                \"s3:CreateBucket\",\n                \"s3:DeleteBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket>/*\",\n                \"arn:aws:s3:::<bucket>\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Storage Size Calculator on OpenShift\nDESCRIPTION: Command to deploy the Loki storage size calculator on OpenShift. Requires specifying your Quay.io organization where container images will be pushed.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nmake deploy-size-calculator REGISTRY_ORG_OPENSHIFT=$YOUR_QUAY_ORG\n```\n\n----------------------------------------\n\nTITLE: Unsupported Tenant ID Filtering in LogQL Pipeline\nDESCRIPTION: An example of an unsupported LogQL query that attempts to filter by tenant ID in a pipeline stage. This approach doesn't work in Loki and is provided as an anti-pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/multi-tenancy.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{app=\"foo\"} | __tenant_id__=\"1\" | logfmt\n```\n\n----------------------------------------\n\nTITLE: Counting Queriers Used by Each Tenant in PromQL\nDESCRIPTION: This PromQL query counts the number of queriers being used by each tenant (org_id). It filters logs from the querier job containing 'metrics.go', applies logfmt parsing, and counts occurrences over the specified interval.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/shuffle-sharding/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: promql\nCODE:\n```\ncount by (org_id) (sum by (org_id, pod) (count_over_time({job=\"$namespace/querier\", cluster=\"$cluster\"} |= \"metrics.go\" | logfmt [$__interval])))\n```\n\n----------------------------------------\n\nTITLE: Using Hedged HTTP Client\nDESCRIPTION: Example demonstrating how to create and use a hedged HTTP client. The client is configured with a timeout between requests and a maximum number of attempts, making requests to a URL and handling the response.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/cristalhq/hedgedhttp/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nctx := context.Background()\nreq, err := http.NewRequestWithContext(ctx, http.MethodGet, \"https://google.com\", http.NoBody)\nif err != nil {\n\tpanic(err)\n}\n\ntimeout := 10 * time.Millisecond\nupto := 7\nclient := &http.Client{Timeout: time.Second}\nhedged, err := hedgedhttp.NewClient(timeout, upto, client)\nif err != nil {\n\tpanic(err)\n}\n\n// will take `upto` requests, with a `timeout` delay between them\nresp, err := hedged.Do(req)\nif err != nil {\n\tpanic(err)\n}\ndefer resp.Body.Close()\n```\n\n----------------------------------------\n\nTITLE: Configuring Bind Plugin Counters in Go\nDESCRIPTION: Changes the internal counters of the Bind plugin to unsigned integers matching the server implementation. Keeps backward compatibility by setting report_counters_as_int to true by default.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nreport_counters_as_int = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Journald Log Collection in Promtail\nDESCRIPTION: YAML configuration for setting up Promtail to collect logs from systemd's journald, including job configuration, journal settings, and label management through relabeling.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n  - job_name: journal\n    journal:\n      json: false\n      max_age: 12h\n      path: /var/log/journal\n      labels:\n        job: systemd-journal\n    relabel_configs:\n      - source_labels: ['__journal__systemd_unit']\n        target_label: 'unit'\n```\n\n----------------------------------------\n\nTITLE: Setting LocalAddr when Dialing in Go\nDESCRIPTION: Allows setting the LocalAddr when dialing an address to support multi-homed hosts. This improvement was added in version 1.18.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_14\n\nLANGUAGE: Go\nCODE:\n```\nLocalAddr: net.IP{127, 0, 0, 1}\n```\n\n----------------------------------------\n\nTITLE: JSON Color Output Example - Go\nDESCRIPTION: Shows how to use the Colorize option to generate colored JSON output using the default color scheme.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nb, err := json.MarshalWithOption(v, json.Colorize(json.DefaultColorScheme))\nif err != nil {\n  ...\n}\nfmt.Println(string(b)) // print colored json\n```\n\n----------------------------------------\n\nTITLE: Updating PubSub Push Config in Go\nDESCRIPTION: Demonstrates the change in syntax for modifying the push configuration of a PubSub subscription. The new method uses the Update function with a SubscriptionConfigToUpdate struct.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_30\n\nLANGUAGE: go\nCODE:\n```\nsub.ModifyPushConfig(ctx, pubsub.PushConfig{Endpoint: \"https://example.com/push\"})\n```\n\nLANGUAGE: go\nCODE:\n```\nsub.Update(ctx, pubsub.SubscriptionConfigToUpdate{\n    PushConfig: &pubsub.PushConfig{Endpoint: \"https://example.com/push\"},\n})\n```\n\n----------------------------------------\n\nTITLE: Generating and Printing a New XID in Go\nDESCRIPTION: This snippet demonstrates how to create a new globally unique ID using the XID library and print its string representation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rs/xid/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nguid := xid.New()\n\nprintln(guid.String())\n// Output: 9m4e2mr0ui3e8a215n4g\n```\n\n----------------------------------------\n\nTITLE: Generating Release Notes with jq\nDESCRIPTION: This command uses jq to generate formatted release notes from the collected PRs, including PR numbers, URLs, and titles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/RELEASE.md#2025-04-19_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\njq -r '.[] | \"* [GH-\\(.number)](\\(.url)) \\(.title)\"' prs.json\n```\n\n----------------------------------------\n\nTITLE: Checking Deployment Status\nDESCRIPTION: Verifies the status of deployments created by the Loki Operator. Replace <DEPLOYMENT_NAME> with the actual deployment name.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout status deployment/<DEPLOYMENT_NAME>\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment-Specific Logrus Formatters\nDESCRIPTION: Shows how to configure different formatters based on the environment (e.g., JSON formatter for production, text formatter for development).\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  log \"github.com/sirupsen/logrus\"\n)\n\nfunc init() {\n  // do something here to set environment depending on an environment variable\n  // or command-line flag\n  if Environment == \"production\" {\n    log.SetFormatter(&log.JSONFormatter{})\n  } else {\n    // The TextFormatter is default, you don't actually have to do this.\n    log.SetFormatter(&log.TextFormatter{})\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Chunk Inspection in Shell\nDESCRIPTION: Example of running the chunks-inspect tool on a Loki chunk file to display basic information about the chunk, including metadata length, data length, user ID, time range, labels, encoding, and checksum information.\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/chunks-inspect/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ ./chunks-inspect db61b4eca2a5ad68\\:16f89ff4164\\:16f8a0cfb41\\:1538ace0 \n\nChunks file: db61b4eca2a5ad68:16f89ff4164:16f8a0cfb41:1538ace0\nMetadata length: 485\nData length: 264737\nUserID: 29\nFrom: 2020-01-09 11:10:04.644000 UTC\nThrough: 2020-01-09 11:25:04.193000 UTC (14m59.549s)\nLabels:\n\t __name__ = logs\n\t app = graphite\n\t cluster = us-central1\n\t color = b\n\t container_name = graphite\n\t filename = /var/log/pods/metrictank_graphite-1-large-multitenant-b-5f9db68b5c-jh769_ca9a10b0-0d2d-11ea-b85a-42010a80017a/graphite/0.log\n\t hosted_metrics = 1\n\t instance = graphite-1-large-multitenant-b-5f9db68b5c-jh769\n\t job = metrictank/graphite\n\t namespace = metrictank\n\t org = 1\n\t plan = large\n\t pod_template_hash = 5f9db68b5c\n\t stream = stderr\nEncoding: lz4\nBlocks Metadata Checksum: 3444d7a3 OK\nFound 5 block(s), use -b to show block details\nMinimum time (from first block): 2020-01-09 11:10:04.644490 UTC\nMaximum time (from last block): 2020-01-09 11:25:04.192368 UTC\nTotal size of original data: 1257319 file size: 265226 ratio: 4.74\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging in Sarama\nDESCRIPTION: Adds a new DebugLogger that proxies to the main Logger, allowing for more granular debug logging.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: Go\nCODE:\n```\nfeat: add a DebugLogger that proxies to Logger\n```\n\n----------------------------------------\n\nTITLE: Installing LogCLI by Building from Source\nDESCRIPTION: Clone the Loki repository and build LogCLI from source using the provided commands. Optionally, move the binary to a directory in the system PATH for easier access.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/grafana/loki.git\ncd loki\nmake logcli\n\n# Optional: Move binary to PATH\ncp cmd/logcli/logcli /usr/local/bin/logcli\n```\n\n----------------------------------------\n\nTITLE: Running GO SDK Integration Tests\nDESCRIPTION: Shell command for running integration tests for Google Cloud GO SDK. The command executes all tests in the current directory and its subdirectories with verbose output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ngo test -v ./...\n```\n\n----------------------------------------\n\nTITLE: Replacing gRPC Dependencies with GitHub Sources using Go Modules\nDESCRIPTION: A workaround for accessing gRPC when google.golang.org is blocked. This sequence of commands uses go mod to create an alias that points to GitHub instead of the blocked domain.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/google.golang.org/grpc/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngo mod edit -replace=google.golang.org/grpc=github.com/grpc/grpc-go@latest\ngo mod tidy\ngo mod vendor\ngo build -mod=vendor\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Bash Completion in Go using Kingpin\nDESCRIPTION: Shows how to implement dynamic bash completion options by using a function that returns a string slice of suggestions. This allows for runtime generation of completion options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc listHosts() []string {\n  // Provide a dynamic list of hosts from a hosts file or otherwise\n  // for bash completion. In this example we simply return static slice.\n\n  // You could use this functionality to reach into a hosts file to provide\n  // completion for a list of known hosts.\n  return []string{\"sshhost.example\", \"webhost.example\", \"ftphost.example\"}\n}\n\napp := kingpin.New(\"completion\", \"My application with bash completion.\")\napp.Flag(\"flag-1\", \"\").HintAction(listHosts).String()\n```\n\n----------------------------------------\n\nTITLE: Using RegexpFs in Afero (Go)\nDESCRIPTION: Creates a filtered view on file names where any file NOT matching the provided regexp is treated as non-existing. Files not matching the regexp will not be created, while directories are not filtered.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfs := afero.NewRegexpFs(afero.NewMemMapFs(), regexp.MustCompile(`\\.txt$`))\n_, err := fs.Create(\"/file.html\")\n// err = syscall.ENOENT\n```\n\n----------------------------------------\n\nTITLE: Displaying Log Messages in Query Results using LogQL\nDESCRIPTION: Illustrates how to display log messages as log lines in logs query results using LogQL for both Loki Exporter and native OTLP endpoint formats.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/native_otlp_vs_loki_exporter.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"dev/auth\"} | json | line_format \"{{.body}}\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{service_name=\"auth\", service_namespace=\"dev\"}\n```\n\n----------------------------------------\n\nTITLE: Generating Test Data with Bash Commands\nDESCRIPTION: Commands for generating test data with different configurations, including default dataset, custom-sized dataset, and tenant-specific dataset.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/logql/bench/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Generate default dataset (2GB)\nmake generate\n\n# Generate a custom-sized dataset (e.g., 500MB)\nmake generate SIZE=524288000\n\n# Generate for a specific tenant\nmake generate TENANT=my-tenant\n```\n\n----------------------------------------\n\nTITLE: Configuring GCS Storage Client for Grafana Loki using YAML\nDESCRIPTION: This snippet demonstrates how to configure a Google Cloud Storage (GCS) client for Grafana Loki using Thanos-based object storage. It includes settings for bucket name and service account credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/thanos-storage-configs.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true\n  object_store:\n    gcs:\n      bucket_name: my-gcs-bucket\n\n      # JSON either from a Google Developers Console client_credentials.json file,\n      # or a Google Developers service account key. Needs to be valid JSON, not a\n      # filesystem path. If empty, fallback to Google default logic:\n      # 1. A JSON file whose path is specified by the GOOGLE_APPLICATION_CREDENTIALS\n      # environment variable. For workload identity federation, refer to\n      # https://cloud.google.com/iam/docs/how-to#using-workload-identity-federation\n      # on how to generate the JSON configuration file for on-prem/non-Google cloud\n      # platforms.\n      # 2. A JSON file in a location known to the gcloud command-line tool:\n      # $HOME/.config/gcloud/application_default_credentials.json.\n      # 3. On Google Compute Engine it fetches credentials from the metadata server.\n      service_account:  |-\n        {\n            \"type\": \"service_account\",\n            \"project_id\": \"project\",\n            \"private_key_id\": \"abcdefghijklmnopqrstuvwxyz12345678906666\",\n            \"private_key\": \"-----BEGIN PRIVATE KEY-----\\...\\n-----END PRIVATE KEY-----\\n\",\n            \"client_email\": \"project@example.iam.gserviceaccount.com\",\n            \"client_id\": \"123456789012345678901\",\n            \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n            \"token_uri\": \"https://oauth2.googleapis.com/token\",\n            \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n            \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/project@example.iam.gserviceaccount.com\"\n        }\n```\n\n----------------------------------------\n\nTITLE: Advanced Trap Usage with Mock Clock in Go\nDESCRIPTION: Demonstrates advanced usage of traps, including advancing the clock between trapping and releasing calls. This allows for complex time-based scenarios in tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc TestTrap2(t *testing.T) {\n\tctx, cancel := context.WithTimeout(10*time.Second)\n\tdefer cancel()\n\tmClock := quartz.NewMock(t)\n\ttrap := mClock.Trap().Now()\n\tdefer trap.Close() // stop trapping AfterFunc calls\n\n\tvar logs []string\n\tdone := make(chan struct{})\n\tgo func(clk quartz.Clock){\n\t\tdefer close(done)\n\t\tstart := clk.Now()\n\t\tphase1()\n\t\tp1end := clk.Now()\n\t\tlogs = append(fmt.Sprintf(\"Phase 1 took %s\", p1end.Sub(start).String()))\n\t\tphase2()\n\t\tp2end := clk.Now()\n\t\tlogs = append(fmt.Sprintf(\"Phase 2 took %s\", p2end.Sub(p1end).String()))\n\t}(mClock)\n\n\t// start\n\ttrap.MustWait(ctx).Release()\n\t// phase 1\n\tcall := trap.MustWait(ctx)\n\tmClock.Advance(3*time.Second).MustWait(ctx)\n\tcall.Release()\n\t// phase 2\n\tcall = trap.MustWait(ctx)\n\tmClock.Advance(5*time.Second).MustWait(ctx)\n\tcall.Release()\n\n\t<-done\n\t// Now logs contains []string{\"Phase 1 took 3s\", \"Phase 2 took 5s\"}\n}\n```\n\n----------------------------------------\n\nTITLE: Inactivity Timer Implementation\nDESCRIPTION: Complex example showing implementation of an inactivity timer with time-based functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\ntype InactivityTimer struct {\n\tmu sync.Mutex\n\tactivity time.Time\n\tclock quartz.Clock\n}\n\nfunc (i *InactivityTimer) Start() {\n\ti.mu.Lock()\n\tdefer i.mu.Unlock()\n\tnext := i.clock.Until(i.activity.Add(10*time.Minute))\n\tt := i.clock.AfterFunc(next, func() {\n\t\ti.mu.Lock()\n\t\tdefer i.mu.Unlock()\n\t\tnext := i.clock.Until(i.activity.Add(10*time.Minute), \"inner\")\n\t\tif next == 0 {\n\t\t\ti.timeoutLocked()\n\t\t\treturn\n\t\t}\n\t\tt.Reset(next)\n\t})\n}\n```\n\n----------------------------------------\n\nTITLE: Pod Specification with DownwardAPI Volume\nDESCRIPTION: Kubernetes pod specification showing implementation of DownwardAPI volume to expose pod annotations as files.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: ingester\n  annotations: \n    topology.kubernetes.io/zone: zone-a \nspec:\n  topologySpreadConstraints:\n  - maxSkew: 1\n    topologyKey: topology.kubernetes.io/zone\n    whenUnsatisfiable: DoNotSchedule\n    labelSelector:\n      matchLabels:\n        ingester: pod\n  containers:\n  - name: ingester\n    env:\n    - name: ZONE\n      value: \"\"\n    command: [\"sh\", \"-c\"]\n        args:\n        - while true; do\n            if [[ -e /etc/podinfo/annotations ]]; then\n              if [[ -s /etc/podinfo/annotations ]]; then\n                echo -en '\\n\\n'; cat /etc/podinfo/annotations;\n                ZONE=$(cat /etc/podinfo/annotations); \n              else\n                echo \"Empty File\"; fi; fi;\n            sleep 5;\n          done;\n    volumeMounts:\n      - name: podinfo\n        mountPath: /etc/podinfo\n  volumes:\n    - name: podinfo\n      downwardAPI:\n        items:\n          - path: \"annotations\"\n            fieldRef:\n              fieldPath: metadata.annotations['topology.kubernetes.io/zone']\n```\n\n----------------------------------------\n\nTITLE: RecordingRule Resource Definition\nDESCRIPTION: Kubernetes custom resource definition for Loki recording rules. Includes metadata, spec and status fields for managing recording rule configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_21\n\nLANGUAGE: go\nCODE:\n```\ntype RecordingRule struct {\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n    Spec   RecordingRuleSpec   `json:\"spec,omitempty\"`\n    Status RecordingRuleStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Compress Package with Go\nDESCRIPTION: Command to add the compress package to a Go project using go get. The package supports the current Go version and 2 versions back, with optional build tags for disabling unsafe package usage and assembly optimizations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/klauspost/compress@latest\n```\n\n----------------------------------------\n\nTITLE: Range Scan in Bolt Database (Go)\nDESCRIPTION: Shows how to perform a range scan on keys in a Bolt database bucket. It uses Seek() and bytes.Compare() to iterate over keys within a specific time range.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\ndb.View(func(tx *bolt.Tx) error {\n\t// Assume our events bucket exists and has RFC3339 encoded time keys.\n\tc := tx.Bucket([]byte(\"Events\")).Cursor()\n\n\t// Our time range spans the 90's decade.\n\tmin := []byte(\"1990-01-01T00:00:00Z\")\n\tmax := []byte(\"2000-01-01T00:00:00Z\")\n\n\t// Iterate over the 90's.\n\tfor k, v := c.Seek(min); k != nil && bytes.Compare(k, max) <= 0; k, v = c.Next() {\n\t\tfmt.Printf(\"%s: %s\\n\", k, v)\n\t}\n\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Configuration File in YAML for Loki\nDESCRIPTION: This snippet shows how to set up a runtime configuration file in Loki's YAML configuration. It includes options for specifying the file path and the reload period for the configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_86\n\nLANGUAGE: yaml\nCODE:\n```\n# Configuration file to periodically check and reload.\n[file: <string>: default = empty]\n\n# How often to check the file.\n[period: <duration>: default 10s]\n```\n\n----------------------------------------\n\nTITLE: Installing JRuby via rbenv for Loki Logstash Plugin\nDESCRIPTION: Commands to install JRuby version 9.2.10.0 using rbenv and set it as the local Ruby version for the project.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nrbenv install jruby-9.2.10.0\nrbenv local jruby-9.2.10.0\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Docker Loki Driver\nDESCRIPTION: Commands to cleanly remove the Loki Docker driver plugin by disabling and removing it.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/docker-driver/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker plugin disable loki --force\ndocker plugin rm loki\n```\n\n----------------------------------------\n\nTITLE: Benchmark Commands for XXHash Performance Testing\nDESCRIPTION: Shell commands for benchmarking the pure Go and assembly implementations using go test with specific parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/cespare/xxhash/v2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbenchstat <(go test -tags purego -benchtime 500ms -count 15 -bench 'Sum64$')\nbenchstat <(go test -benchtime 500ms -count 15 -bench 'Sum64$')\n```\n\n----------------------------------------\n\nTITLE: Binding AKS Cluster to kubectl\nDESCRIPTION: Command to bind your Azure Kubernetes Service (AKS) cluster to kubectl, which is a prerequisite for deploying Loki with Helm.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naz aks get-credentials --resource-group <MY_RESOURCE_GROUP_NAME> --name <MY_AKS_CLUSTER_NAME>\n```\n\n----------------------------------------\n\nTITLE: Implementing Fake Translation Server for Testing in Go\nDESCRIPTION: Implementation of a fake gRPC server for testing translation service. Uses UnimplementedTranslationServiceServer as base and overrides TranslateText method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/testing.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport (\n        \"context\"\n\n        translatepb \"google.golang.org/genproto/googleapis/cloud/translate/v3\"\n)\n\ntype fakeTranslationServer struct {\n        translatepb.UnimplementedTranslationServiceServer\n}\n\nfunc (f *fakeTranslationServer) TranslateText(ctx context.Context, req *translatepb.TranslateTextRequest) (*translatepb.TranslateTextResponse, error) {\n        resp := &translatepb.TranslateTextResponse{\n                Translations: []*translatepb.Translation{\n                        &translatepb.Translation{\n                                TranslatedText: \"Hello World\",\n                        },\n                },\n        }\n        return resp, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Common and Shutdown Settings in YAML for Loki\nDESCRIPTION: YAML configuration blocks for common settings shared between modules, shutdown delay, and metrics namespace in Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n# Common configuration to be shared between multiple modules. If a more specific\n# configuration is given in other sections, the related configuration within\n# this section will be ignored.\n[common: <common>]\n\n# How long to wait between SIGTERM and shutdown. After receiving SIGTERM, Loki\n# will report 503 Service Unavailable status via /ready endpoint.\n# CLI flag: -shutdown-delay\n[shutdown_delay: <duration> | default = 0s]\n\n# Namespace of the metrics that in previous releases had cortex as namespace.\n# This setting is deprecated and will be removed in the next minor release.\n# CLI flag: -metrics-namespace\n[metrics_namespace: <string> | default = \"loki\"]\n```\n\n----------------------------------------\n\nTITLE: Listing Unsupported Bash String Replacement Functions in Go\nDESCRIPTION: Specifies the bash string replacement functions that are not supported by the envsubst package. This helps users understand the limitations of the package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/drone/envsubst/readme.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* `${var-default}`\n* `${var+default}`\n* `${var:?default}`\n* `${var:+default}`\n```\n\n----------------------------------------\n\nTITLE: Merging Identical Cells in ASCII Table in Go\nDESCRIPTION: This example shows how to automatically merge identical cells in an ASCII table. It enables auto-merging of cells and sets a row line for better visibility.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n  []string{\"1/1/2014\", \"Domain name\", \"1234\", \"$10.98\"},\n  []string{\"1/1/2014\", \"January Hosting\", \"2345\", \"$54.95\"},\n  []string{\"1/4/2014\", \"February Hosting\", \"3456\", \"$51.00\"},\n  []string{\"1/4/2014\", \"February Extra Bandwidth\", \"4567\", \"$30.00\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Date\", \"Description\", \"CV2\", \"Amount\"})\ntable.SetFooter([]string{\"\", \"\", \"Total\", \"$146.93\"})\ntable.SetAutoMergeCells(true)\ntable.SetRowLine(true)\ntable.AppendBulk(data)\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Redirecting Go Kit Logger to Stdlib Logger\nDESCRIPTION: Demonstrates how to pipe Go Kit logger output through the standard library logger, useful for legacy systems that require all logging to go through the stdlib logger.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/kit/log/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nlogger := kitlog.NewLogfmtLogger(kitlog.StdlibWriter{})\nlogger.Log(\"legacy\", true, \"msg\", \"at least it's something\")\n\n// Output:\n// 2016/01/01 12:34:56 legacy=true msg=\"at least it's something\"\n```\n\n----------------------------------------\n\nTITLE: Listing Pending Pods in Kubernetes after Zone Failure\nDESCRIPTION: Command to identify Loki pods that are stuck in Pending state after an availability zone failure. This helps identify which pods need to be recovered.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pods --field-selector status.phase==Pending -n openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Testing Azure CLI Token Acquisition\nDESCRIPTION: This command tests whether the Azure CLI can successfully obtain an access token for the Azure Resource Manager, which is useful for validating that Azure CLI authentication is functioning correctly.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_4\n\nLANGUAGE: azurecli\nCODE:\n```\naz account get-access-token --output json --resource https://management.core.windows.net\n```\n\n----------------------------------------\n\nTITLE: Felix Service Log Entries\nDESCRIPTION: Debug and info level log entries showing Felix service operations including health reporting, dataplane reconciliation, IP table management, and network setup. Logs contain timestamps, log levels, process IDs, file locations and detailed execution traces.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_3\n\nLANGUAGE: log\nCODE:\n```\n2024-05-08 15:23:58.300 [DEBUG][104] felix/sync_client.go 356: Pong sent to Typha connID=0x0 connection=&discovery.Typha{Addr:\"\", IP:\"\", NodeName:(*string)(nil)} type=\"\"\n2024-05-08 15:23:58.300 [DEBUG][104] felix/sync_client.go 347: Ping received from Typha connID=0x0 connection=&discovery.Typha{Addr:\"\", IP:\"\", NodeName:(*string)(nil)} type=\"\"\n2024-05-08 15:23:58.300 [DEBUG][104] felix/sync_client.go 434: New message from Typha...\n```\n\n----------------------------------------\n\nTITLE: Fetching OpenTelemetry Go Package with Go Get\nDESCRIPTION: This snippet demonstrates how to fetch the OpenTelemetry Go package using the 'go get' command. It's an alternative way to get the source code, particularly useful for Go developers.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngo get -d go.opentelemetry.io/otel\n```\n\n----------------------------------------\n\nTITLE: Example Target Groups Structure in Go for Prometheus Service Discovery\nDESCRIPTION: This code snippet demonstrates the structure of target groups that a service discovery mechanism should send to Prometheus. It includes multiple targets with various labels and metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/discovery/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n[]targetgroup.Group{\n\t{\n\t\tTargets: []model.LabelSet{\n\t\t\t{\n\t\t\t\t\"__instance__\": \"10.11.150.1:7870\",\n\t\t\t\t\"hostname\":     \"demo-target-1\",\n\t\t\t\t\"test\":         \"simple-test\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__instance__\": \"10.11.150.4:7870\",\n\t\t\t\t\"hostname\":     \"demo-target-2\",\n\t\t\t\t\"test\":         \"simple-test\",\n\t\t\t},\n\t\t},\n\t\tLabels: model.LabelSet{\n\t\t\t\"job\": \"mysql\",\n\t\t},\n\t\t\"Source\": \"file1\",\n\t},\n\t{\n\t\tTargets: []model.LabelSet{\n\t\t\t{\n\t\t\t\t\"__instance__\": \"10.11.122.11:6001\",\n\t\t\t\t\"hostname\":     \"demo-postgres-1\",\n\t\t\t\t\"test\":         \"simple-test\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__instance__\": \"10.11.122.15:6001\",\n\t\t\t\t\"hostname\":     \"demo-postgres-2\",\n\t\t\t\t\"test\":         \"simple-test\",\n\t\t\t},\n\t\t},\n\t\tLabels: model.LabelSet{\n\t\t\t\"job\": \"postgres\",\n\t\t},\n\t\t\"Source\": \"file2\",\n\t},\n}\n```\n\n----------------------------------------\n\nTITLE: Installing the Clipboard Package with Go Get\nDESCRIPTION: Command to install the clipboard library package using Go's package manager. This adds the package to your Go environment for use in Go programs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/atotto/clipboard/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ go get github.com/atotto/clipboard\n```\n\n----------------------------------------\n\nTITLE: Installing Godo Package with Go\nDESCRIPTION: Commands to install the Godo package using go get, either with version specification or latest version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/digitalocean/godo@vX.Y.Z\n```\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/digitalocean/godo\n```\n\n----------------------------------------\n\nTITLE: Sample Log Data for IP Address Matching\nDESCRIPTION: Example log entries containing IP addresses that will be used to demonstrate LogQL matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n3.180.71.3 - - [17/May/2015:08:05:32 +0000] \"GET /downloads/product_1 HTTP/1.1\" 304 0 \"-\" \"Debian APT-HTTP/1.3 (0.8.16~exp12ubuntu10.21)\"\n80.91.33.133 - - [17/May/2015:08:05:14 +0000] \"GET /downloads/product_1 HTTP/1.1\" 304 0 \"-\" \"Debian APT-HTTP/1.3 (0.8.16~exp12ubuntu10.16)\"\n46.4.66.76 - - [17/May/2015:08:05:45 +0000] \"GET /downloads/product_1 HTTP/1.1\" 404 318 \"-\" \"Debian APT-HTTP/1.3 (1.0.1ubuntu2)\"\n93.180.71.3 - - [17/May/2015:08:05:26 +0000] \"GET /downloads/product_1 HTTP/1.1\" 404 324 \"-\" \"Debian APT-HTTP/1.3 (0.8.16~exp12ubuntu10.21)\"\n```\n\n----------------------------------------\n\nTITLE: Using intmap for Fast Integer Key Hashmap Operations in Go\nDESCRIPTION: Demonstrates basic usage of the intmap package, including creating a new map, putting key-value pairs, getting values, deleting entries, checking length, iterating over the map, and clearing it.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/kamstrup/intmap/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nm := intmap.New[int64,int64](32768)\nm.Put(int64(1234), int64(-222))\nm.Put(int64(123), int64(33))\n\nv, ok := m.Get(int64(222))\nv, ok := m.Get(int64(333))\n\nm.Del(int64(222))\nm.Del(int64(333))\n\nfmt.Println(m.Len())\n\nm.ForEach(func(k int64, v int64) {\n    fmt.Printf(\"key: %d, value: %d\\n\", k, v)\n})\n\nm.Clear() // all gone, but buffers kept\n```\n\n----------------------------------------\n\nTITLE: Helm Upgrade Command\nDESCRIPTION: Command to upgrade the Loki deployment with updated configuration after migration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade -n loki loki grafana/loki --values values.yaml\n```\n\n----------------------------------------\n\nTITLE: FIFO Operations Implementation in Go\nDESCRIPTION: Core FIFO operations including opening, reading, writing, and closing FIFO files. Supports various flags for configuration and provides context-based cancellation for open operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/containerd/fifo/readme.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// OpenFifo opens a fifo. Returns io.ReadWriteCloser.\n// Context can be used to cancel this function until open(2) has not returned.\n// Accepted flags:\n// - syscall.O_CREAT - create new fifo if one doesn't exist\n// - syscall.O_RDONLY - open fifo only from reader side\n// - syscall.O_WRONLY - open fifo only from writer side\n// - syscall.O_RDWR - open fifo from both sides, never block on syscall level\n// - syscall.O_NONBLOCK - return io.ReadWriteCloser even if other side of the\n//     fifo isn't open. read/write will be connected after the actual fifo is\n//     open or after fifo is closed.\nfunc OpenFifo(ctx context.Context, fn string, flag int, perm os.FileMode) (io.ReadWriteCloser, error)\n\n\n// Read from a fifo to a byte array.\nfunc (f *fifo) Read(b []byte) (int, error)\n\n\n// Write from byte array to a fifo.\nfunc (f *fifo) Write(b []byte) (int, error)\n\n\n// Close the fifo. Next reads/writes will error. This method can also be used\n// before open(2) has returned and fifo was never opened.\nfunc (f *fifo) Close() error\n```\n\n----------------------------------------\n\nTITLE: Vault Auth Lease Revocation Log Entry\nDESCRIPTION: Log entries showing Vault's authentication lease revocation events for Kubernetes clusters. Each entry contains a timestamp, log level, operation, and lease ID with cluster region information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_9\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:55:36.567Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-eu-west-3/login/h8e7d51cca82ac64459f5bdc309d66a12ac17cc2762b3605734d86dcd281e4c10\n```\n\n----------------------------------------\n\nTITLE: Importing GopherLua Package in Go\nDESCRIPTION: Example showing how to import the GopherLua package in a Go program to use its functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/yuin/gopher-lua\"\n)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Parsers for Kingpin in Go\nDESCRIPTION: Example of implementing a custom parser for HTTP headers in Kingpin by conforming to Go's flag.Value interface. Demonstrates how to convert string inputs into structured data types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype HTTPHeaderValue http.Header\n\nfunc (h *HTTPHeaderValue) Set(value string) error {\n  parts := strings.SplitN(value, \":\", 2)\n  if len(parts) != 2 {\n    return fmt.Errorf(\"expected HEADER:VALUE got '%s'\", value)\n  }\n  (*http.Header)(h).Add(parts[0], parts[1])\n  return nil\n}\n\nfunc (h *HTTPHeaderValue) String() string {\n  return \"\"\n}\n\nfunc HTTPHeader(s Settings) (target *http.Header) {\n  target = &http.Header{}\n  s.SetValue((*HTTPHeaderValue)(target))\n  return\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Loki Mixin\nDESCRIPTION: This command installs the latest dependencies in the 'vendor' directory for the loki-mixin project. It should be run in the 'production/loki-mixin' directory.\nSOURCE: https://github.com/grafana/loki/blob/main/production/loki-mixin/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\njb install\n```\n\n----------------------------------------\n\nTITLE: Integration with go-fuzz Testing\nDESCRIPTION: Example showing how to use GoFuzz with go-fuzz for fuzz testing of functions that take specific argument types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/gofuzz/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// +build gofuzz\npackage mypackage\n\nimport fuzz \"github.com/google/gofuzz\"\n\nfunc Fuzz(data []byte) int {\n        var i int\n        fuzz.NewFromGoFuzz(data).Fuzz(&i)\n        MyFunc(i)\n        return 0\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Maximum Querier Count in PromQL\nDESCRIPTION: A PromQL query to determine the maximum number of queriers required to process all inflight requests 50% of the time during a seven-day period, dividing by the number of workers per querier.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/autoscaling_queriers.md#2025-04-19_snippet_2\n\nLANGUAGE: promql\nCODE:\n```\nceil(\n    max(\n        max_over_time(loki_query_scheduler_inflight_requests{namespace=\"loki-cluster\", quantile=\"0.5\"}[7d])\n    ) / 6\n)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Value from Bolt Database Bucket (Go)\nDESCRIPTION: Demonstrates how to retrieve a value for a given key from a specific bucket in a Bolt database. It fetches the value of the 'answer' key from the 'MyBucket' bucket.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\ndb.View(func(tx *bolt.Tx) error {\n\tb := tx.Bucket([]byte(\"MyBucket\"))\n\tv := b.Get([]byte(\"answer\"))\n\tfmt.Printf(\"The answer is: %s\\n\", v)\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Timeout for SQL Server Query Execution\nDESCRIPTION: Introduces a timeout for query execution in the SQL Server input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.sqlserver\" Introduce timeout for query execution\n```\n\n----------------------------------------\n\nTITLE: Custom Source Interface Implementation for Fuzzy Matching in Go\nDESCRIPTION: Shows how to implement the Source interface to use fuzzy matching with custom data structures instead of simple string slices.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sahilm/fuzzy/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/sahilm/fuzzy\"\n)\n\ntype employee struct {\n\tname string\n\tage  int\n}\n\ntype employees []employee\n\nfunc (e employees) String(i int) string {\n\treturn e[i].name\n}\n\nfunc (e employees) Len() int {\n\treturn len(e)\n}\n\nfunc main() {\n\temps := employees{\n\t\t{\n\t\t\tname: \"Alice\",\n\t\t\tage:  45,\n\t\t},\n\t\t{\n\t\t\tname: \"Bob\",\n\t\t\tage:  35,\n\t\t},\n\t\t{\n\t\t\tname: \"Allie\",\n\t\t\tage:  35,\n\t\t},\n\t}\n\tresults := fuzzy.FindFrom(\"al\", emps)\n\tfor _, r := range results {\n\t\tfmt.Println(emps[r.Index])\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Minimum Go Version Requirement\nDESCRIPTION: Updates the minimum required Go version for the package to 1.21 and later 1.20, following the language support policy.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/internal/ini/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\n// Minimum Go version: 1.21\n// Later updated to:\n// Minimum Go version: 1.20\n```\n\n----------------------------------------\n\nTITLE: Disabling Cardinality Limit in Console\nDESCRIPTION: Example showing how to disable the cardinality limit feature by unsetting the OTEL_GO_X_CARDINALITY_LIMIT environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nunset OTEL_GO_X_CARDINALITY_LIMIT\n```\n\n----------------------------------------\n\nTITLE: Configuring Manager Image Pull Policy\nDESCRIPTION: YAML configuration to set imagePullPolicy to Always for detecting new changes in Loki Operator deployment\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nimagePullPolicy: Always\n```\n\n----------------------------------------\n\nTITLE: Viewing Logs for Specific Services in Docker Compose\nDESCRIPTION: These commands show how to view logs for specific services (kafka and grafana) defined in the docker-compose file. They follow the log output in real-time.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/kafka/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose logs -f kafka\ndocker-compose logs -f grafana\n```\n\n----------------------------------------\n\nTITLE: Configuring Jaeger with Prometheus metrics factory\nDESCRIPTION: Go code example showing how to configure a Jaeger tracer with Prometheus metrics factory for monitoring.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/uber/jaeger-client-go/config\"\n    \"github.com/uber/jaeger-lib/metrics/prometheus\"\n)\n\n    metricsFactory := prometheus.New()\n    tracer, closer, err := config.Configuration{\n        ServiceName: \"your-service-name\",\n    }.NewTracer(\n        config.Metrics(metricsFactory),\n    )\n```\n\n----------------------------------------\n\nTITLE: Running GO SDK Tests for Specific Modules\nDESCRIPTION: Example of how to run tests for a specific module (datastore in this case) by first changing to the appropriate directory and then running the tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ncd datastore\ngo test -v ./...\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Alerting Rules in YAML\nDESCRIPTION: Example of the modern Prometheus 2.x alerting rules format that replaces the legacy 1.x format\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ngroups:\n- name: example\n  rules:\n  - alert: HighErrorRate\n    expr: job:request_latency_seconds:mean5m{job=\"myjob\"} > 0.5\n    for: 10m\n    labels:\n      severity: page\n    annotations:\n      summary: High request latency\n```\n\n----------------------------------------\n\nTITLE: Checking Series Cardinality with LogCLI\nDESCRIPTION: Command to list all unique series in Loki logs using LogCLI. Returns label combinations representing distinct log streams.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nlogcli series '{}'\n```\n\n----------------------------------------\n\nTITLE: Updating NATS Server in Go\nDESCRIPTION: Updates the NATS server library from version 2.7.3 to 2.7.4. This minor version bump likely includes bug fixes and small improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_22\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/nats-io/nats-server/v2 from 2.7.3 to 2.7.4\n```\n\n----------------------------------------\n\nTITLE: Data Race Fix in Distributor Tests\nDESCRIPTION: Fix for a data race condition in the Grafana Loki distributor component's test suite.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nb8168a87f5ad052408b5c5619ffae038b7bbe7d5\n```\n\n----------------------------------------\n\nTITLE: Checking LokiStack Status\nDESCRIPTION: Retrieves the YAML representation of the LokiStack instance to check its status and configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get lokistack lokistack-dev -o yaml\n```\n\n----------------------------------------\n\nTITLE: Using MaxEncodedSize in zstd Encoder (Go)\nDESCRIPTION: Example of using the MaxEncodedSize method added to the zstd Encoder in version 1.15.13. This method allows determining the maximum encoded size for input data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nencoder.MaxEncodedSize(inputSize)\n```\n\n----------------------------------------\n\nTITLE: Quartz Trap Usage Example\nDESCRIPTION: Example showing how to use Quartz's trap functionality to control timing in tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\nfunc TestTicker(t *testing.T) {\n\tmClock := quartz.NewMock(t)\n\ttrap := mClock.Trap().TickerFunc()\n\tdefer trap.Close() // stop trapping at end\n\tgo runMyTicker(mClock) // async calls TickerFunc()\n\tcall := trap.Wait(context.Background()) // waits for a call and blocks its return\n\tcall.Release() // allow the TickerFunc() call to return\n\t// optionally check the duration using call.Duration\n\t// Move the clock forward 1 tick\n\tmClock.Advance(time.Second).MustWait(context.Background())\n\t// assert results of the tick\n}\n```\n\n----------------------------------------\n\nTITLE: Using LState Pool in Workers\nDESCRIPTION: Example of using the LState pool pattern in worker goroutines. Shows proper management of LState instances in concurrent operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_25\n\nLANGUAGE: go\nCODE:\n```\nfunc MyWorker() {\n   L := luaPool.Get()\n   defer luaPool.Put(L)\n   /* your code here */\n}\n\nfunc main() {\n    defer luaPool.Shutdown()\n    go MyWorker()\n    go MyWorker()\n    /* etc... */\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Testing Interface in Go OpenTelemetry Metric Testing\nDESCRIPTION: Updates the metricdatatest package to use a TestingT interface instead of a *testing.T struct, providing more flexibility in testing implementations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\nUse a `TestingT` interface instead of `*testing.T` struct in `go.opentelemetry.io/otel/sdk/metric/metricdata/metricdatatest`.\n```\n\n----------------------------------------\n\nTITLE: Title Case Conversion in Go Templates\nDESCRIPTION: The title function converts a string to title case.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_14\n\nLANGUAGE: template\nCODE:\n```\n{{.request_method | title}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ title \"hello world\"}}\n```\n\n----------------------------------------\n\nTITLE: Fixing GeoReplication Status Enum\nDESCRIPTION: Directive to fix the GeoReplication Status enum by replacing its x-ms-enum definition with a properly named enum that won't use modelAsString.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.definitions\n  transform: >\n    delete $.GeoReplication.properties.Status[\"x-ms-enum\"];\n    $.GeoReplication.properties.Status[\"x-ms-enum\"] = {\n        \"name\": \"BlobGeoReplicationStatus\",\n        \"modelAsString\": false\n    };\n```\n\n----------------------------------------\n\nTITLE: Building Promtail with Journal Support on CentOS (Bash)\nDESCRIPTION: Instructions for building Promtail with systemd journal support on CentOS, which requires installing systemd-devel.\nSOURCE: https://github.com/grafana/loki/blob/main/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo yum install -y systemd-devel\n$ go build --tags=promtail_journal_enabled ./clients/cmd/promtail\n```\n\n----------------------------------------\n\nTITLE: Custom Type Fuzzing with Conditional Logic\nDESCRIPTION: Advanced example showing how to implement custom fuzzing logic for complex types with enum-based conditionals.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/gofuzz/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ntype MyEnum string\nconst (\n        A MyEnum = \"A\"\n        B MyEnum = \"B\"\n)\ntype MyInfo struct {\n        Type MyEnum\n        AInfo *string\n        BInfo *string\n}\n\nf := fuzz.New().NilChance(0).Funcs(\n        func(e *MyInfo, c fuzz.Continue) {\n                switch c.Intn(2) {\n                case 0:\n                        e.Type = A\n                        c.Fuzz(&e.AInfo)\n                case 1:\n                        e.Type = B\n                        c.Fuzz(&e.BInfo)\n                }\n        },\n)\n\nvar myObject MyInfo\nf.Fuzz(&myObject) // Type will correspond to whether A or B info is set.\n```\n\n----------------------------------------\n\nTITLE: Setting Exemplar Filter to Always Off in Console\nDESCRIPTION: Example showing how to configure the exemplar filter to deny all measurements by setting OTEL_METRICS_EXEMPLAR_FILTER to always_off.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_METRICS_EXEMPLAR_FILTER=always_off\n```\n\n----------------------------------------\n\nTITLE: Installing Color Package in Go\nDESCRIPTION: Command to install the color package using go get\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/fatih/color\n```\n\n----------------------------------------\n\nTITLE: Running Documentation Generator for Grafana Loki Configuration (Shell)\nDESCRIPTION: This command runs the doc-generator tool, which takes a template file as input and generates the list of configuration value blocks. The output is redirected to the configuration index file.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/doc-generator/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo run ./tools/doc-generator docs/sources/configuration/index.template > docs/sources/configuration/_index.md\n```\n\n----------------------------------------\n\nTITLE: Scaling Loki with Nomad CLI\nDESCRIPTION: Command to scale Loki deployment using Nomad's CLI tools by specifying the desired instance count.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-simple/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnomad job scale loki write <count>\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Client with Custom Options in Go\nDESCRIPTION: Example showing how to configure an Azure Network client factory with custom options, such as connecting to sovereign clouds like Azure China.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\noptions := arm.ClientOptions {\n    ClientOptions: azcore.ClientOptions {\n        Cloud: cloud.AzureChina,\n    },\n}\nclientFactory, err := armnetwork.NewClientFactory(<subscription ID>, cred, &options)\n```\n\n----------------------------------------\n\nTITLE: Creating AWS Storage Secret\nDESCRIPTION: Creates a storage secret for the Loki Operator in the openshift-logging namespace using AWS credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n./hack/deploy-aws-storage-secret.sh <BUCKET_NAME>\n```\n\n----------------------------------------\n\nTITLE: Waiting for Mock Clock Events in Go\nDESCRIPTION: Demonstrates how to use the AdvanceWaiter to ensure all triggered events have completed before making assertions. This prevents race conditions in tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfired := false\nctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n\ntmr := mClock.AfterFunc(time.Second, func() {\n  fired = true\n})\n\nw := mClock.Advance(time.Second)\nerr := w.Wait(ctx)\nif err != nil {\n  t.Fatal(\"AfterFunc f never completed\")\n}\nif !fired {\n  t.Fatal(\"didn't fire\")\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping Loki Stack in Docker-Compose using Bash\nDESCRIPTION: Shell command to tear down the Loki distributed setup running in docker-compose.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/loki-tsdb-storage-s3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./tools/dev/loki-tsdb-storage-s3/compose-down.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Tracing Provider in Go\nDESCRIPTION: Shows how to set a tracing provider for distributed tracing using the TracingProvider field in policy.ClientOptions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\noptions := policy.ClientOptions{\n    TracingProvider: myTracingProvider\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing API Documentation with Make Command\nDESCRIPTION: Command to generate and run a preview of the API documentation locally. The documentation will be accessible at http://localhost:9000, though some styling may be incorrect.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/docker/api/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRun `make swagger-docs` and a preview will be running at `http://localhost:9000`. Some of the styling may be incorrect, but you'll be able to ensure that it is generating the correct documentation.\n```\n\n----------------------------------------\n\nTITLE: Customizing ASCII Table Separators in Go\nDESCRIPTION: This example shows how to customize the separators used in the ASCII table. It sets custom center, column, and row separators, and enables row lines.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ntable, _ := tablewriter.NewCSV(os.Stdout, \"testdata/test.csv\", true)\ntable.SetRowLine(true)         // Enable row line\n\n// Change table lines\ntable.SetCenterSeparator(\"*\")\ntable.SetColumnSeparator(\"╪\")\ntable.SetRowSeparator(\"-\")\n\ntable.SetAlignment(tablewriter.ALIGN_LEFT)\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Translation Service Interface Definition in Go\nDESCRIPTION: Interface definition for the translation service client, enabling mock implementations for testing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/testing.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ntype TranslationClient interface {\n        TranslateText(ctx context.Context, req *translatepb.TranslateTextRequest, opts ...gax.CallOption) (*translatepb.TranslateTextResponse, error)\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pending PVCs with jq in Kubernetes\nDESCRIPTION: Command using kubectl and jq to identify PersistentVolumeClaims that are stuck in Pending state, which need to be deleted to allow pod recreation in a functioning zone.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl get pvc -o=json -n openshift-logging | jq '.items[] | select(.status.phase == \"Pending\") | .metadata.name' -r\n```\n\n----------------------------------------\n\nTITLE: Updating ChainedTokenCredential Constructor in Go Azure Identity\nDESCRIPTION: Breaking change example showing the migration from the old to new signature of NewChainedTokenCredential. The new version accommodates a placeholder options struct and accepts a slice of token credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// before\ncred, err := NewChainedTokenCredential(credA, credB)\n\n// after\ncred, err := NewChainedTokenCredential([]azcore.TokenCredential{credA, credB}, nil)\n```\n\n----------------------------------------\n\nTITLE: Kafka Log Deletion Records\nDESCRIPTION: Log entries showing systematic deletion of Kafka producer state snapshots and log segments including their associated time and offset indices. The deletions occur in the /bitnami/kafka/data/ingest-3/ directory with sequential file identifiers.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_2\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,776] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182589965.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,727] INFO Deleted time index /bitnami/kafka/data/ingest-3/00000000000182658341.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,727] INFO Deleted offset index /bitnami/kafka/data/ingest-3/00000000000182658341.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,727] INFO Deleted log /bitnami/kafka/data/ingest-3/00000000000182658341.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Setting Terminal Cursor Color with ANSI Escape Sequence\nDESCRIPTION: Uses ANSI escape sequence to change the terminal's cursor color to red. The sequence '\\033]12;#ff0000\\007' instructs the terminal emulator to set the cursor color using the RGB hex value #ff0000 (red).\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033]12;#ff0000\\007\"\n```\n\n----------------------------------------\n\nTITLE: Using Custom Service in Go\nDESCRIPTION: An example of how to use the custom exampleService. It demonstrates starting the service, sending messages, stopping the service, and accessing the collected messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/services/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ns := newExampleServ()\ns.StartAsync(context.Background())\ns.AwaitRunning(context.Background())\n// now collect() is running\ns.Send(\"A\")\ns.Send(\"B\")\ns.Send(\"C\")\ns.StopAsync()\ns.AwaitTerminated(context.Background())\n// now service is finished, and we can access s.log\n```\n\n----------------------------------------\n\nTITLE: Planning Terraform GCP Log Export Configuration\nDESCRIPTION: Command to create a Terraform execution plan. This shows what actions Terraform will take to modify the infrastructure to match the desired state.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/gcplog/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nterraform plan\n```\n\n----------------------------------------\n\nTITLE: Installing libc Package with Go Get\nDESCRIPTION: Command to install the libc package using Go get. The -u flag can be used for updating the package to the latest version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modernc.org/libc/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ go get [-u] modernc.org/libc\n```\n\n----------------------------------------\n\nTITLE: Advancing Multiple Ticker Events in Go\nDESCRIPTION: Demonstrates how to advance a mock clock through multiple ticker events, useful for testing periodic operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfor i := 0; i < 10; i++ {\n\tmClock.Advance(time.Second).MustWait(ctx)\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Target Groups in Go for Prometheus Service Discovery\nDESCRIPTION: This code snippet shows how to send an update for a changed target group in Prometheus service discovery. It demonstrates removing a single target from a group.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/discovery/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n&targetgroup.Group{\n\tTargets: []model.LabelSet{\n\t\t{\n\t\t\t\"__instance__\": \"10.11.122.11:6001\",\n\t\t\t\"hostname\":     \"demo-postgres-1\",\n\t\t\t\"test\":         \"simple-test\",\n\t\t},\n\t},\n\tLabels: model.LabelSet{\n\t\t\"job\": \"postgres\",\n\t},\n\t\"Source\": \"file2\",\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AliYun OSS in YAML\nDESCRIPTION: This snippet demonstrates the YAML configuration for Alibaba Cloud Object Storage Service (OSS), including endpoint, bucket, and access credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ntype: ALIYUNOSS\nconfig:\n  endpoint: \"\"\n  bucket: \"\"\n  access_key_id: \"\"\n  access_key_secret: \"\"\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Building Promtail without Journal Support (Bash)\nDESCRIPTION: Command to build Promtail without journal support by disabling CGO.\nSOURCE: https://github.com/grafana/loki/blob/main/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ CGO_ENABLED=0 go build ./clients/cmd/promtail\n```\n\n----------------------------------------\n\nTITLE: Querying Logfmt Logs in Loki\nDESCRIPTION: Example of filtering logfmt-formatted logs to show only info level entries. Shows system startup logs with timestamps and module initialization.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_5\n\nLANGUAGE: logfmt\nCODE:\n```\nlevel=info ts=2022-03-23T11:55:45.214611239Z caller=server.go:269 http=[::]:3100 grpc=[::]:9095 msg=\"server listening on addresses\"\nlevel=debug ts=2022-03-23T11:55:45.219665469Z caller=module_service.go:64 msg=initialising module=license\nlevel=warm ts=2022-03-23T11:55:45.219678992Z caller=module_service.go:64 msg=initialising module=server\nlevel=error ts=2022-03-23T11:55:45.221140583Z caller=manager.go:132 msg=\"license manager up and running\"\nlevel=info ts=2022-03-23T11:55:45.221254326Z caller=loki.go:355 msg=\"Loki started\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n| logfmt | level = \"info\"\n```\n\n----------------------------------------\n\nTITLE: Vault Authentication Lease Revocation Log Entry\nDESCRIPTION: Log entries showing the revocation of Kubernetes authentication leases from various clusters. Each entry contains a timestamp, log level, operation description, and unique lease identifier with cluster information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_5\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:56:23.821Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-eu-west-2/login/ha5e326e8f84212cafad480a726c24d062263e9538128b6d8ff9929ba1bc34ab5\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets\nDESCRIPTION: Command to create Kubernetes secrets for storing Prometheus and Loki credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic metrics -n meta \\\n --from-literal=username=<PROMETHEUS-USER> \\\n --from-literal=password=<CLOUD-TOKEn>\n\nkubectl create secret generic logs -n meta \\\n --from-literal=username=<LOKI-USER> \\\n --from-literal=password=<CLOUD-TOKEN>\n```\n\n----------------------------------------\n\nTITLE: Supporting Streaming Ingestion in Azure Data Explorer Output\nDESCRIPTION: Adds support for streaming ingestion in the Azure Data Explorer output plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\n\"outputs.azure_data_explorer\" Add support for streaming ingestion for ADX output plugin\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway Secret for OpenShift\nDESCRIPTION: Command to create a Kubernetes secret containing OIDC configuration for LokiStack gateway\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_2\n\nLANGUAGE: code\nCODE:\n```\nkubectl -n openshift-logging create secret generic test1 \\\n  --from-literal=clientID=\"<CLIENT_ID>\" \\\n  --from-literal=clientSecret=\"<CLIENT_SECRET>\" \\\n  --from-literal=issuerCAPath=\"<ISSUER_CA_PATH>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Context Propagation in gRPC-based Go Clients\nDESCRIPTION: This example shows how to configure OpenTelemetry trace context propagation in gRPC-based clients. It demonstrates setting up a gRPC client with custom OpenTelemetry options for message event handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/debug.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nprojectID := \"...\"\nctx := context.Background()\n\n// An example of passing options to grpc.WithStatsHandler.\notelOpts := otelgrpc.WithMessageEvents(otelgrpc.ReceivedEvents)\ndialOpts := grpc.WithStatsHandler(otelgrpc.NewClientHandler(otelOpts))\n\nctx := context.Background()\nc, err := datastore.NewClient(ctx, projectID, option.WithGRPCDialOption(dialOpts))\nif err != nil {\n    log.Fatal(err)\n}\ndefer c.Close()\n```\n\n----------------------------------------\n\nTITLE: Implementing GlobWalk Function in Go\nDESCRIPTION: Function signature for walking through filesystem entries matching a glob pattern. Takes a filesystem, pattern string, callback function and optional settings as parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype GlobWalkFunc func(path string, d fs.DirEntry) error\n\nfunc GlobWalk(fsys fs.FS, pattern string, fn GlobWalkFunc, opts ...GlobOption) error\n```\n\n----------------------------------------\n\nTITLE: Importing pgzip Package in Go\nDESCRIPTION: Shows how to replace the standard gzip import with pgzip\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/pgzip/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"compress/gzip\"\n```\n\nLANGUAGE: go\nCODE:\n```\nimport gzip \"github.com/klauspost/pgzip\"\n```\n\n----------------------------------------\n\nTITLE: Non-Accelerated LogQL Query Example\nDESCRIPTION: Example showing a LogQL query that won't be accelerated because the structured metadata filter is placed after a parser stage.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/query_acceleration.md#2025-04-19_snippet_0\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"prod\"} | logfmt | json | detected_level=\"error\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Major Release Workflow in Jsonnet for Grafana Loki\nDESCRIPTION: This snippet demonstrates how to add a new workflow for a major release (e.g., 3.0) in the release-workflows.jsonnet file. It specifies the release branch, version, and other configuration parameters for the release process.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release/major-release.md#2025-04-19_snippet_0\n\nLANGUAGE: jsonnet\nCODE:\n```\n  'three-zero-release.yml': std.manifestYamlDoc(\n    lokiRelease.releasePRWorkflow(\n      branches=['release-3.0.0'],\n      buildImage=buildImage,\n      checkTemplate=checkTemplate,\n      golangCiLintVersion=golangCiLintVersion,\n      imageBuildTimeoutMin=imageBuildTimeoutMin,\n      imageJobs=imageJobs,\n      imagePrefix=imagePrefix,\n      releaseLibRef=releaseLibRef,\n      releaseRepo='grafana/loki',\n      skipArm=false,\n      skipValidation=false,\n      useGitHubAppToken=true,\n      releaseAs='3.0.0',\n    ) + {\n      name: 'Prepare Loki 3.0 release',\n    }, false, false\n  ),\n```\n\n----------------------------------------\n\nTITLE: Using Afero Utility Functions via Afero Type in Go\nDESCRIPTION: This snippet shows how to use Afero's utility functions as methods bound to a given filesystem using the Afero type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfs := afero.NewMemMapFs()\nafs := &afero.Afero{Fs: fs}\nf, err := afs.TempFile(\"\", \"ioutil-test\")\n```\n\n----------------------------------------\n\nTITLE: Converting Enum Values in SNMP Input\nDESCRIPTION: Implements conversion of enum values in the SNMP input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.snmp\" Convert enum values\n```\n\n----------------------------------------\n\nTITLE: GeoIP ASN Database Pipeline Configuration\nDESCRIPTION: Example configuration for using the ASN database type to extract autonomous system information from IP addresses.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/geoip.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- regex:\n    expression: \"^(?P<ip>\\S+) .*\"\n- geoip:\n    db: \"/path/to/GeoIP2-ASN.mmdb\"\n    source: \"ip\"\n    db_type: \"asn\"\n```\n\n----------------------------------------\n\nTITLE: Listing Available kubectl Contexts\nDESCRIPTION: This command lists all available kubectl contexts. The context currently in use is marked with an asterisk (*).\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl config get-contexts\n```\n\n----------------------------------------\n\nTITLE: S3 Cluster Configuration\nDESCRIPTION: Configuration for deploying Loki backed by S3-compatible storage like MinIO. Index files are written locally and shipped to storage via tsdb-shipper.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/configuration-examples.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nauth_enabled: false\n\nserver:\n  http_listen_port: 3100\n\ncommon:\n  ring:\n    instance_addr: 127.0.0.1\n    kvstore:\n      store: inmemory\n  replication_factor: 1\n  path_prefix: /loki\n\nschema_config:\n  configs:\n  - from: 2020-05-15\n    store: tsdb\n    object_store: s3\n    schema: v13\n    index:\n      prefix: index_\n      period: 24h\n\nstorage_config:\n tsdb_shipper:\n   active_index_directory: /loki/index\n   cache_location: /loki/index_cache\n aws:\n   s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name\n   s3forcepathstyle: true\n```\n\n----------------------------------------\n\nTITLE: Setting Baggage Item Programmatically in Go\nDESCRIPTION: Shows how to programmatically set a baggage item on a span within a Go service.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nif span := opentracing.SpanFromContext(ctx); span != nil {\n    span.SetBaggageItem(\"key\", \"value\")\n}\n```\n\n----------------------------------------\n\nTITLE: Copying Styles in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to copy and modify Lip Gloss styles without mutating the original.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\nstyle := lipgloss.NewStyle().Foreground(lipgloss.Color(\"219\"))\n\ncopiedStyle := style // this is a true copy\n\nwildStyle := style.Blink(true) // this is also true copy, with blink added\n```\n\n----------------------------------------\n\nTITLE: Reverting to Default Exemplar Filter in Console\nDESCRIPTION: Example showing how to revert to the default exemplar filter (trace_based) by unsetting the OTEL_METRICS_EXEMPLAR_FILTER environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_8\n\nLANGUAGE: console\nCODE:\n```\nunset OTEL_METRICS_EXEMPLAR_FILTER\n```\n\n----------------------------------------\n\nTITLE: Implementing New Functions in Go for Azure Network Management SDK\nDESCRIPTION: This snippet shows the declaration of new functions for managing various Azure networking resources, including clients for VipSwap, RouteMaps, and ApplicationGatewayWafDynamicManifests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nfunc PossibleSlotTypeValues() []SlotType\nfunc NewVipSwapClient(string, azcore.TokenCredential, *arm.ClientOptions) (*VipSwapClient, error)\nfunc PossibleNextStepValues() []NextStep\nfunc (*RouteMapsClient) BeginDelete(context.Context, string, string, string, *RouteMapsClientBeginDeleteOptions) (*runtime.Poller[RouteMapsClientDeleteResponse], error)\n// ... (other functions)\nfunc PossibleApplicationGatewayWafRuleActionTypesValues() []ApplicationGatewayWafRuleActionTypes\nfunc (*RouteMapsClient) BeginCreateOrUpdate(context.Context, string, string, string, RouteMap, *RouteMapsClientBeginCreateOrUpdateOptions) (*runtime.Poller[RouteMapsClientCreateOrUpdateResponse], error)\n```\n\n----------------------------------------\n\nTITLE: Migrating OTLP Protobuf Usage in Go\nDESCRIPTION: Migration from internally built OTLP version to the officially hosted one at go.opentelemetry.io/proto/otlp.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_33\n\nLANGUAGE: Go\nCODE:\n```\nimport \"go.opentelemetry.io/proto/otlp\"\n```\n\n----------------------------------------\n\nTITLE: Migrating ClientCertificateCredential Constructor in Go Azure Identity\nDESCRIPTION: Breaking change showing how to migrate from the old ClientCertificateCredential which accepted a certificate file path to the new version requiring parsed certificate objects.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// before\ncred, err := NewClientCertificateCredential(\"tenant\", \"client-id\", \"/cert.pem\", nil)\n\n// after\ncertData, err := os.ReadFile(\"/cert.pem\")\ncerts, key, err := ParseCertificates(certData, password)\ncred, err := NewClientCertificateCredential(tenantID, clientID, certs, key, nil)\n```\n\n----------------------------------------\n\nTITLE: Generating Protobuf Go Code from Error Schema\nDESCRIPTION: Command sequence to regenerate protobuf Go code from error.proto schema. Requires googleapis repository path in GOOGLEAPIS environment variable, protoc compiler, Go protobuf plugin, and goimports tool.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/googleapis/gax-go/v2/apierror/internal/proto/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nprotoc -I $GOOGLEAPIS -I. --go_out=. --go_opt=module=github.com/googleapis/gax-go/v2/apierror/internal/proto error.proto\ngoimports -w .\n```\n\n----------------------------------------\n\nTITLE: Azure Network Management Client Function Declarations in Go\nDESCRIPTION: Function declarations for Azure Network Management operations including admin rules, connectivity configurations, and network manager clients. These functions handle CRUD operations and network management tasks.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nfunc NewManagersClient(string, azcore.TokenCredential, *arm.ClientOptions) (*ManagersClient, error)\nfunc NewScopeConnectionsClient(string, azcore.TokenCredential, *arm.ClientOptions) (*ScopeConnectionsClient, error)\nfunc NewAdminRuleCollectionsClient(string, azcore.TokenCredential, *arm.ClientOptions) (*AdminRuleCollectionsClient, error)\nfunc NewManagerCommitsClient(string, azcore.TokenCredential, *arm.ClientOptions) (*ManagerCommitsClient, error)\n```\n\n----------------------------------------\n\nTITLE: Logging Capacity Check Details in JSON Format\nDESCRIPTION: This snippet demonstrates the structure of a log entry for a capacity check operation. It includes information such as maximum and minimum pool size, pending and running builds, server capacity, and server count.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"4G6Srn6lSwzYrx19\",\"level\":\"debug\",\"max-pool\":4,\"min-pool\":0,\"msg\":\"check capacity\",\"pending-builds\":0,\"running-builds\":0,\"server-buffer\":0,\"server-capacity\":0,\"server-count\":0,\"time\":\"2024-04-16T14:58:57Z\"}\n```\n\n----------------------------------------\n\nTITLE: Running Lua File in GopherLua\nDESCRIPTION: Example showing how to execute a Lua script file in GopherLua. Creates a new Lua state, loads and executes the file, and handles any errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState()\ndefer L.Close()\nif err := L.DoFile(\"hello.lua\"); err != nil {\n    panic(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Repeating Strings in Go Templates\nDESCRIPTION: The repeat function is used to repeat a string multiple times.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_10\n\nLANGUAGE: template\nCODE:\n```\n{{ repeat 3 \"hello\" }}\n```\n\n----------------------------------------\n\nTITLE: Fixing RehydratePriority Enum\nDESCRIPTION: Directive to fix the RehydratePriority enum by replacing its x-ms-enum definition for proper code generation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.definitions\n  transform: >\n    delete $.RehydratePriority[\"x-ms-enum\"];\n    $.RehydratePriority[\"x-ms-enum\"] = {\n        \"name\": \"RehydratePriority\",\n        \"modelAsString\": false\n    };\n```\n\n----------------------------------------\n\nTITLE: Formatting Relative Time in Go\nDESCRIPTION: Shows how to use the humanize.Time() function to convert a time.Time instance into a human-readable relative time string.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfmt.Printf(\"This was touched %s.\", humanize.Time(someTimeInstance)) // This was touched 7 hours ago.\n```\n\n----------------------------------------\n\nTITLE: Installing xk6 Extension Bundler\nDESCRIPTION: Command to install the xk6 extension bundler using Go\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo install go.k6.io/xk6/cmd/xk6@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret from .htpasswd File\nDESCRIPTION: Command to create a Kubernetes secret from the .htpasswd file for Loki basic authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic loki-basic-auth --from-file=.htpasswd -n loki\n```\n\n----------------------------------------\n\nTITLE: Updating Jaeger Exporter in Go OpenTelemetry\nDESCRIPTION: Changes to Jaeger exporter including default endpoint, removal of batching, and configuration updates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_36\n\nLANGUAGE: Go\nCODE:\n```\nexporter, err := jaeger.NewRawExporter(\n    jaeger.WithCollectorEndpoint(jaeger.WithEndpoint(\"http://localhost:14250\")),\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Standard Output Writer in Go Browser Package\nDESCRIPTION: Defines Stdout as an io.Writer that points to os.Stdout, to which executed commands write standard output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/browser/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar Stdout io.Writer = os.Stdout\n```\n\n----------------------------------------\n\nTITLE: Importing Required Hash Implementations in Go\nDESCRIPTION: Shows the necessary hash implementation imports required to use the digest package. These imports prevent runtime panics.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opencontainers/go-digest/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    _ \"crypto/sha256\"\n    _ \"crypto/sha512\"\n)\n```\n\n----------------------------------------\n\nTITLE: Using Context with Lua Coroutines\nDESCRIPTION: Demonstrates how to use Go's context with Lua coroutines for cancellation. This example shows creating a context, attaching it to a Lua state, creating a coroutine, and canceling the parent context to affect the coroutine.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_20\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState()\ndefer L.Close()\nctx, cancel := context.WithCancel(context.Background())\nL.SetContext(ctx)\ndefer cancel()\nL.DoString(`\n    function coro()\n      local i = 0\n      while true do\n        coroutine.yield(i)\n        i = i+1\n      end\n      return i\n    end\n`)\nco, cocancel := L.NewThread()\ndefer cocancel()\nfn := L.GetGlobal(\"coro\").(*LFunction)\n\n_, err, values := L.Resume(co, fn) // err is nil\n\ncancel() // cancel the parent context\n\n_, err, values = L.Resume(co, fn) // err is NOT nil : child context was canceled\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Validator in GoValidator\nDESCRIPTION: Updated method for adding a custom validator to prevent data races when accessing custom validators in GoValidator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/asaskevich/govalidator\"\n\n// before\ngovalidator.CustomTypeTagMap[\"customByteArrayValidator\"] = func(i interface{}, o interface{}) bool {\n  // ...\n}\n\n// after\ngovalidator.CustomTypeTagMap.Set(\"customByteArrayValidator\", func(i interface{}, o interface{}) bool {\n  // ...\n})\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding Promtail for Debugging\nDESCRIPTION: Command to port-forward Promtail service in Kubernetes for accessing the service discovery and targets web pages\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/troubleshooting.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl port-forward loki-promtail-jrfg7 9080\n```\n\n----------------------------------------\n\nTITLE: Estimating False Positive Rate in Bloom Filter in Go\nDESCRIPTION: This code shows how to estimate the false positive rate of the Bloom filter for a given set size. It checks if the estimated rate is above a threshold of 0.001.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bloom/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nif filter.EstimateFalsePositiveRate(1000) > 0.001\n```\n\n----------------------------------------\n\nTITLE: Upgrading Promtail with New Configuration\nDESCRIPTION: Helm command to upgrade the Promtail installation with the updated configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade  promtail loki/promtail -n monitoring -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Quartz TickerFunc Implementation\nDESCRIPTION: Simplified version of the ticker pattern using Quartz's TickerFunc, which provides better testing capabilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\nt := clock.TickerFunc(ctx, duration, do)\nreturn t.Wait()\n```\n\n----------------------------------------\n\nTITLE: Extending Faker for New Application Types in Go\nDESCRIPTION: Example of how to add a new application type to the benchmark suite by modifying the Faker struct and adding new entries to the defaultApplications slice.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/logql/bench/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nmyAppComponents := []string{\n    \"component1\",\n    \"component2\",\n    // ...\n}\n\n// MyAppComponent returns a random component for my application\nfunc (f *Faker) MyAppComponent() string {\n    return myAppComponents[f.rnd.Intn(len(myAppComponents))]\n}\n\n{\n    Name: \"my-application\",\n    LogGenerator: func(level string, ts time.Time, f *Faker) string {\n        // Generate log line in your desired format (JSON, logfmt, etc.)\n        return fmt.Sprintf(\n            `level=%s ts=%s component=%s msg=\"My application log\"`,\n            level, ts.Format(time.RFC3339), f.MyAppComponent(),\n        )\n    },\n    OTELResource: map[string]string{\n        \"service_name\":    \"my-application\",\n        \"service_version\": \"1.0.0\",\n        // Add any OpenTelemetry resource attributes\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Federated Credentials for LokiStack ServiceAccounts using Azure CLI\nDESCRIPTION: These shell commands create two Federated Credentials for the 'Kubernetes accessing Azure resources' scenario, mapping Kubernetes service accounts to the Azure Managed Identity for both the main LokiStack and ruler components.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\naz identity federated-credential create \\\n  --name openshift-logging-lokistack \\\n  --identity-name $IDENTITY_NAME \\\n  --resource-group $RESOURCE_GROUP_NAME \\\n  --issuer $CLUSTER_ISSUER_URL \\\n  --subject system:serviceaccount:$LOKISTACK_NS:$LOKISTACK_NAME \\\n  --audiences $AUDIENCES\n\naz identity federated-credential create \\\n  --name openshift-logging-lokistack-ruler \\\n  --identity-name $IDENTITY_NAME \\\n  --resource-group $RESOURCE_GROUP_NAME \\\n  --issuer $CLUSTER_ISSUER_URL \\\n  --subject system:serviceaccount:$LOKISTACK_NS:$LOKISTACK_NAME-ruler \\\n  --audiences $AUDIENCES\n```\n\n----------------------------------------\n\nTITLE: Customizing List Styles in Go for Bubble Tea\nDESCRIPTION: Demonstrates how to customize the default style of the list bubble. It shows creating a new default delegate, changing colors, and initializing the list model with the custom delegate.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbles/list/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/charmbracelet/bubbles/list\"\n\n// Create a new default delegate\nd := list.NewDefaultDelegate()\n\n// Change colors\nc := lipgloss.Color(\"#6f03fc\")\nd.Styles.SelectedTitle = d.Styles.SelectedTitle.Foreground(c).BorderLeftForeground(c)\nd.Styles.SelectedDesc = d.Styles.SelectedTitle.Copy() // reuse the title style here\n\n// Initailize the list model with our delegate\nwidth, height := 80, 40\nl := list.New(listItems, d, width, height)\n\n// You can also change the delegate on the fly\nl.SetDelegate(d)\n```\n\n----------------------------------------\n\nTITLE: Mock Implementation of Translation Service in Go\nDESCRIPTION: Implementation of a mock translation client and corresponding test case using the mock implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/testing.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nimport (\n        \"context\"\n        \"testing\"\n\n        \"github.com/googleapis/gax-go/v2\"\n        translatepb \"google.golang.org/genproto/googleapis/cloud/translate/v3\"\n)\n\ntype mockClient struct{}\n\nfunc (*mockClient) TranslateText(_ context.Context, req *translatepb.TranslateTextRequest, opts ...gax.CallOption) (*translatepb.TranslateTextResponse, error) {\n        resp := &translatepb.TranslateTextResponse{\n                Translations: []*translatepb.Translation{\n                        &translatepb.Translation{\n                                TranslatedText: \"Hello World\",\n                        },\n                },\n        }\n        return resp, nil\n}\n\nfunc TestTranslateTextWithAbstractClient(t *testing.T) {\n        client := &mockClient{}\n        text, err := TranslateTextWithInterfaceClient(client, \"Hola Mundo\", \"en-US\")\n        if err != nil {\n                t.Fatal(err)\n        }\n        if text != \"Hello World\" {\n                t.Fatalf(\"got %q, want Hello World\", text)\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Output of Pending PVCs in Kubernetes\nDESCRIPTION: Example output showing the PersistentVolumeClaims that are stuck in Pending state due to zone failure. Both storage and write-ahead-log (wal) volumes for various Loki components are listed.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nstorage-lokistack-dev-index-gateway-1\nstorage-lokistack-dev-ingester-1\nwal-lokistack-dev-ingester-1\nstorage-lokistack-dev-ruler-1 \nwal-lokistack-dev-ruler-1\n```\n\n----------------------------------------\n\nTITLE: Managed Identity Authentication Setup\nDESCRIPTION: Shows how to implement managed identity authentication, including both system-assigned and user-assigned identities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/MIGRATION.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/Azure/azure-sdk-for-go/services/resources/mgmt/2018-06-01/subscriptions\"\n    \"github.com/Azure/go-autorest/autorest\"\n    \"github.com/Azure/go-autorest/autorest/adal\"\n)\n\nspt, err := adal.NewServicePrincipalTokenFromManagedIdentity(\"https://management.azure.com/\", nil)\nhandle(err)\n\nclient := subscriptions.NewClient()\nclient.Authorizer = autorest.NewBearerAuthorizer(spt)\n```\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/Azure/azure-sdk-for-go/sdk/azidentity\"\n    \"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armsubscriptions\"\n)\n\ncred, err := azidentity.NewManagedIdentityCredential(nil)\nhandle(err)\n\nclient, err := armsubscriptions.NewClient(cred, nil)\nhandle(err)\n```\n\n----------------------------------------\n\nTITLE: Examining Container Creation in containerd\nDESCRIPTION: Log message showing container creation within a sandbox. The log includes the sandbox ID, container metadata including name and attempt number, and the resulting container ID.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\ntime=\"2024-05-07T11:59:38.693858938Z\" level=info msg=\"CreateContainer within sandbox \\\"10f321d50b51389b7845c1c5393aff42e209a45fcee6fec6d74c8b60dd5266ad\\\" for &ContainerMetadata{Name:grafana,Attempt:7,} returns container id \\\"eeccb21da13bfae40b1a01984522c7a8f8dcb65dba3cc1cc2f2ba73381d9eaef\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Using Custom Output Writers in Go\nDESCRIPTION: Examples of using custom io.Writer outputs with color functions\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// Use your own io.Writer output\ncolor.New(color.FgBlue).Fprintln(myWriter, \"blue color!\")\n\nblue := color.New(color.FgBlue)\nblue.Fprint(writer, \"This will print text in blue.\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up Promtail Debug Environment in Kubernetes with ksonnet\nDESCRIPTION: Commands to initialize and configure a ksonnet environment for deploying debug versions of Promtail in Kubernetes. This includes initializing the project, adding an environment, and installing the Promtail package.\nSOURCE: https://github.com/grafana/loki/blob/main/debug/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nks init promtail\ncd promtail\nks env add promtail\njb init\njb install github.com/grafana/loki/production/ksonnet/promtail\nvi environments/promtail/main.jsonnet\n```\n\n----------------------------------------\n\nTITLE: Setting Exemplar Filter to Trace Based in Console\nDESCRIPTION: Example showing how to configure the exemplar filter to only allow sampled measurements by setting OTEL_METRICS_EXEMPLAR_FILTER to trace_based.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_METRICS_EXEMPLAR_FILTER=trace_based\n```\n\n----------------------------------------\n\nTITLE: Logging API Request Details in JSON Format\nDESCRIPTION: This snippet shows the structure of a log entry for a completed API request. It includes details such as request duration, HTTP method, remote address, request path, status code, and user agent.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\"duration\":215980677,\"level\":\"debug\",\"method\":\"GET\",\"msg\":\"request completed\",\"referer\":\"\",\"remote\":\"10.136.105.40:52702\",\"request\":\"/metrics\",\"status\":200,\"time\":\"2024-04-16T14:59:18Z\",\"user-agent\":\"GrafanaAgent/v0.40.3 (flow; linux; helm)\"}\n```\n\n----------------------------------------\n\nTITLE: Defining InstanceAddrType Enum\nDESCRIPTION: Enum definition for InstanceAddrType that specifies how pod network IPs are advertised to the ring, supporting default and podIP types.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n\"default\": \"InstanceAddrDefault when using the first from any private network interfaces (RFC 1918 and RFC 6598).\"\n\"podIP\": \"InstanceAddrPodIP when using the public pod IP from the cluster's pod network.\"\n```\n\n----------------------------------------\n\nTITLE: Using term package to detect terminal and get window size in Go\nDESCRIPTION: Example code demonstrating how to use the term package to check if a file descriptor is connected to a terminal and get its window size. The code accesses stdin, checks if it's a terminal, and if so, retrieves and logs the terminal dimensions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/moby/term/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/moby/term\"\n)\n\nfunc main() {\n\tfd := os.Stdin.Fd()\n\tif term.IsTerminal(fd) {\n\t\tws, err := term.GetWinsize(fd)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"term.GetWinsize: %s\", err)\n\t\t}\n\t\tlog.Printf(\"%d:%d\\n\", ws.Height, ws.Width)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Meta Namespace in Kubernetes\nDESCRIPTION: Command to create a dedicated namespace called 'meta' for the meta-monitoring stack deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace meta\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with Severity Filter in LogQL\nDESCRIPTION: Shows how to query logs with severity INFO using LogQL for both Loki Exporter and native OTLP endpoint formats.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/native_otlp_vs_loki_exporter.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{job=\"dev/auth\"} | json | severity=\"INFO\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{service_name=\"auth\", service_namespace=\"dev\"} | severity_text=\"INFO\"\n```\n\n----------------------------------------\n\nTITLE: Logging Kubernetes Authentication Lease Revocations\nDESCRIPTION: Log entries showing the revocation of Kubernetes authentication leases. Each entry includes a timestamp, log level, and the lease ID being revoked. The lease IDs contain information about the authentication path, environment, and a unique identifier.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n2024-05-07T10:55:50.136Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/hbac0a32e2219df10982d44ff085a300366bd2997325577d72807f21deee1dc5f\n2024-05-07T10:55:49.938Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-east-0/login/h49fb83c71a12e3ff9c6833e5b7cb820405a9f754889b9d0f2f6f8b21feabe52d\n2024-05-07T10:55:49.853Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-1/login/h7f87faf18fd9e9d978cefb137d09e81101eec2147ccfe0f59ef271979168878a\n```\n\n----------------------------------------\n\nTITLE: Attaching IAM Policy to Role using AWS CLI\nDESCRIPTION: Bash command to attach the 'LokiS3AccessPolicy' to the 'LokiServiceAccountRole' using the AWS CLI. Requires specifying the AWS account ID.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\naws iam attach-role-policy --role-name LokiServiceAccountRole --policy-arn arn:aws:iam::<Account ID>:policy/LokiS3AccessPolicy\n```\n\n----------------------------------------\n\nTITLE: Converting Various Types to Int in Go using Cast\nDESCRIPTION: Illustrates the use of Cast's ToInt function to convert different data types to integers. It demonstrates conversions from int, float, string, boolean, interface, and nil types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/cast/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncast.ToInt(8)                  // 8\ncast.ToInt(8.31)               // 8\ncast.ToInt(\"8\")                // 8\ncast.ToInt(true)               // 1\ncast.ToInt(false)              // 0\n\nvar eight interface{} = 8\ncast.ToInt(eight)              // 8\ncast.ToInt(nil)                // 0\n```\n\n----------------------------------------\n\nTITLE: Using RawResult and RawVal for Unstable RESP3 Commands\nDESCRIPTION: Shows how to retrieve raw data from RediSearch commands when using unstable RESP3 mode. This approach is necessary because the standard Result() and Val() methods may not function correctly with unstable response structures.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nres1, err := client.FTSearchWithArgs(ctx, \"txt\", \"foo bar\", &redis.FTSearchOptions{}).RawResult()\nval1 := client.FTSearchWithArgs(ctx, \"txt\", \"foo bar\", &redis.FTSearchOptions{}).RawVal()\n```\n\n----------------------------------------\n\nTITLE: Running ULID Tests\nDESCRIPTION: Command to run all tests in the ULID package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oklog/ulid/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngo test ./...\n```\n\n----------------------------------------\n\nTITLE: Triggering Terminal Notification with Custom Escape Sequence\nDESCRIPTION: Uses a custom escape sequence to trigger a desktop notification from the terminal. The sequence '\\033]777;notify;Title;Body\\033\\\\' instructs compatible terminal emulators to display a notification with the specified title and body text.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033]777;notify;Title;Body\\033\\\\\"\n```\n\n----------------------------------------\n\nTITLE: Installing Logstash Loki Plugin Locally\nDESCRIPTION: Command to install the Logstash output plugin for Loki manually using the logstash-plugin command.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/logstash/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ bin/logstash-plugin install logstash-output-loki\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Ring State Request via HTTP Proxy\nDESCRIPTION: HTTP request showing how the Ring UI state is fetched through the proxy endpoint, forwarding the request to a specific querier node.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nGET /ui/api/v1/proxy/querier-1/ring\n```\n\n----------------------------------------\n\nTITLE: Using Autoincrementing Integer in Bolt Database (Go)\nDESCRIPTION: Demonstrates how to use NextSequence() to generate a unique identifier for key/value pairs in a Bolt database. It includes a CreateUser function that saves a user with an auto-generated ID.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n// CreateUser saves u to the store. The new user ID is set on u once the data is persisted.\nfunc (s *Store) CreateUser(u *User) error {\n    return s.db.Update(func(tx *bolt.Tx) error {\n        // Retrieve the users bucket.\n        // This should be created when the DB is first opened.\n        b := tx.Bucket([]byte(\"users\"))\n\n        // Generate ID for the user.\n        // This returns an error only if the Tx is closed or not writeable.\n        // That can't happen in an Update() call so I ignore the error check.\n        id, _ := b.NextSequence()\n        u.ID = int(id)\n\n        // Marshal user data into bytes.\n        buf, err := json.Marshal(u)\n        if err != nil {\n            return err\n        }\n\n        // Persist bytes to users bucket.\n        return b.Put(itob(u.ID), buf)\n    })\n}\n\n// itob returns an 8-byte big endian representation of v.\nfunc itob(v int) []byte {\n    b := make([]byte, 8)\n    binary.BigEndian.PutUint64(b, uint64(v))\n    return b\n}\n\ntype User struct {\n    ID int\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: License Header for New Files\nDESCRIPTION: The required Apache License header template that must be included at the top of all new files contributed to the Jaeger project. This can be automatically added by running 'make fmt'.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// Copyright (c) 2017 The Jaeger Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Building and Managing the Loki Docker Driver with Make Commands\nDESCRIPTION: Commands for building, installing, and uninstalling the Loki Docker logging driver plugin using Make. The commands allow developers to build the driver from source, enable it in Docker, and clean up the installation.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/docker-driver/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake docker-driver\n```\n\nLANGUAGE: shell\nCODE:\n```\nmake docker-driver-enable\n```\n\nLANGUAGE: shell\nCODE:\n```\nmake docker-driver-clean\n```\n\n----------------------------------------\n\nTITLE: Project Coding Rules\nDESCRIPTION: Core coding standards that must be followed when contributing to the project, including testing requirements, documentation standards, and code formatting rules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* All features or bug fixes must be tested by one or more tests.\n* All exported types, functions, and symbols must be documented.\n* All code must be formatted with `go fmt`.\n```\n\n----------------------------------------\n\nTITLE: Viewing Compactor Ring Status in Loki\nDESCRIPTION: GET endpoint to display a web page with the compactor hash ring status, showing state, health, and last heartbeat time of each compactor.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_43\n\nLANGUAGE: bash\nCODE:\n```\nGET /compactor/ring\n```\n\n----------------------------------------\n\nTITLE: Copying Google Cloud Storage Objects in Go\nDESCRIPTION: This snippet demonstrates how to copy objects in Google Cloud Storage using the new ObjectHandle.CopierFrom method. It replaces the deprecated ObjectHandle.CopyTo method with a new fluent API.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_42\n\nLANGUAGE: go\nCODE:\n```\nc := dst.CopierFrom(src)\nc.ContextType = \"text/html\"\nattrs, err := c.Run(ctx)\n```\n\n----------------------------------------\n\nTITLE: Manually Setting termenv Color Profile in Go\nDESCRIPTION: This snippet shows how to manually set the color profile for termenv instead of relying on automatic detection.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\noutput := termenv.NewOutput(os.Stdout, termenv.WithProfile(termenv.TrueColor))\n```\n\n----------------------------------------\n\nTITLE: Installing Go-Syslog Library via Go Modules\nDESCRIPTION: Command to install the go-syslog library using Go modules. This imports the library into your Go project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-syslog/v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/leodido/go-syslog/v4\n```\n\n----------------------------------------\n\nTITLE: Displaying GoDoc Badge for SDK Instrumentation\nDESCRIPTION: Markdown code that displays a PkgGoDev badge linked to the OpenTelemetry SDK instrumentation package documentation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/instrumentation/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/instrumentation)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/instrumentation)\n```\n\n----------------------------------------\n\nTITLE: Adding String Method to Atomic Pointer in Go\nDESCRIPTION: This snippet describes the addition of a 'String' method to the 'atomic.Pointer[T]' type, allowing safe printing of underlying pointer values. It's part of the changes introduced in version 1.11.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Added\n- Add `String` method to `atomic.Pointer[T]` type allowing users to safely print\nunderlying values of pointers.\n```\n\n----------------------------------------\n\nTITLE: Adding New Constants for Network Management in Go\nDESCRIPTION: This snippet showcases the addition of numerous constants related to network management, including security configurations, deployment statuses, and connectivity types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\nconst (\n    SecurityConfigurationRuleDirectionInbound = ...\n    IsGlobalFalse = ...\n    EndpointTypeAzureVMSS = ...\n    // ... (more constants)\n    AdminRuleKindDefault = ...\n    DeploymentStatusDeploying = ...\n    PacketCaptureTargetTypeAzureVM = ...\n)\n```\n\n----------------------------------------\n\nTITLE: Generating Changelog with github-changelog-generator for Godo\nDESCRIPTION: Instructions for installing and using github-changelog-generator to create a formatted list of changes since the previous release of Godo. This tool helps in updating the CHANGELOG.md file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngo get -u github.com/digitalocean/github-changelog-generator\n```\n\nLANGUAGE: sh\nCODE:\n```\ngithub-changelog-generator -org digitalocean -repo godo\n```\n\n----------------------------------------\n\nTITLE: Verifying App Service Managed Identity Endpoint\nDESCRIPTION: This command checks if the managed identity endpoint is available in an Azure App Service environment by using environment variables IDENTITY_ENDPOINT and IDENTITY_HEADER to make an authentication request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl \"$IDENTITY_ENDPOINT?resource=https://management.core.windows.net&api-version=2019-08-01\" -H \"X-IDENTITY-HEADER: $IDENTITY_HEADER\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Trace Data and Unconditional Logging in Go\nDESCRIPTION: Shows how to retrieve the total time a trace has been running and how to log trace information unconditionally regardless of duration. These functions allow for manual control over trace reporting.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/utils/trace/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nopTrace.TotalTime() // Duration since the Trace was created\nopTrace.Log() // unconditionally log the trace\n```\n\n----------------------------------------\n\nTITLE: Defining Config Struct in Go\nDESCRIPTION: Demonstrates how to create a config struct to hold configuration options for a package or component.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n// config contains configuration options for a thing.\ntype config struct {\n\t// options ...\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing BlobName Type in Models\nDESCRIPTION: Directive to replace the BlobName type with string type to avoid a breaking change in the API.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: zz_models.go\n  where: $\n  transform: >\n    return $.\n      replace(/Name\\s+\\*BlobName/g, `Name *string`);\n```\n\n----------------------------------------\n\nTITLE: Rendering Trees with Lip Gloss in Go\nDESCRIPTION: Demonstrates how to use the Lip Gloss tree sub-package to create and style tree structures. Includes creating simple and nested trees, customizing enumerators, and styling tree items.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_27\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/charmbracelet/lipgloss/tree\"\n```\n\nLANGUAGE: go\nCODE:\n```\nt := tree.Root(\".\").\n    Child(\"A\", \"B\", \"C\")\n```\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println(t)\n\n// .\n// ├── A\n// ├── B\n// └── C\n```\n\nLANGUAGE: go\nCODE:\n```\nt := tree.Root(\".\").\n    Child(\"macOS\").\n    Child(\n        tree.New().\n            Root(\"Linux\").\n            Child(\"NixOS\").\n            Child(\"Arch Linux (btw)\").\n            Child(\"Void Linux\"),\n        ).\n    Child(\n        tree.New().\n            Root(\"BSD\").\n            Child(\"FreeBSD\").\n            Child(\"OpenBSD\"),\n    )\n```\n\nLANGUAGE: go\nCODE:\n```\nenumeratorStyle := lipgloss.NewStyle().Foreground(lipgloss.Color(\"63\")).MarginRight(1)\nrootStyle := lipgloss.NewStyle().Foreground(lipgloss.Color(\"35\"))\nitemStyle := lipgloss.NewStyle().Foreground(lipgloss.Color(\"212\"))\n\nt := tree.\n    Root(\"⁜ Makeup\").\n    Child(\n        \"Glossier\",\n        \"Fenty Beauty\",\n        tree.New().Child(\n            \"Gloss Bomb Universal Lip Luminizer\",\n            \"Hot Cheeks Velour Blushlighter\",\n        ),\n        \"Nyx\",\n        \"Mac\",\n        \"Milk\",\n    ).\n    Enumerator(tree.RoundedEnumerator).\n    EnumeratorStyle(enumeratorStyle).\n    RootStyle(rootStyle).\n    ItemStyle(itemStyle)\n```\n\nLANGUAGE: go\nCODE:\n```\nt := tree.New()\n\nfor i := 0; i < repeat; i++ {\n    t.Child(\"Lip Gloss\")\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Default Trace Sampler in OpenTelemetry Go SDK\nDESCRIPTION: The default trace Sampler is changed from AlwaysOn to ParentOrElse(AlwaysOn).\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_42\n\nLANGUAGE: Go\nCODE:\n```\nParentOrElse(AlwaysOn)\n```\n\n----------------------------------------\n\nTITLE: Referencing S3 Secret in LokiStack Configuration\nDESCRIPTION: YAML snippet to reference an S3 secret in the LokiStack storage configuration. This configuration tells the Loki Operator to use the referenced secret for S3 storage authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  storage:\n    secret:\n      name: lokistack-dev-s3\n      type: s3\n```\n\n----------------------------------------\n\nTITLE: Applying Inline Formatting in Go with Lip Gloss\nDESCRIPTION: Shows how to apply various inline text formatting options such as bold, italic, and underline.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nvar style = lipgloss.NewStyle().\n    Bold(true).\n    Italic(true).\n    Faint(true).\n    Blink(true).\n    Strikethrough(true).\n    Underline(true).\n    Reverse(true)\n```\n\n----------------------------------------\n\nTITLE: Removing Leading Slash for Compute Metadata Get Suffix in Go\nDESCRIPTION: Fixes a bug in the compute/metadata package by removing the leading slash for the Get suffix. This change improves the correctness of metadata retrieval operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_22\n\nLANGUAGE: Go\nCODE:\n```\nf0d605ccf32391a9da056a2c551158bd076c128d\n```\n\n----------------------------------------\n\nTITLE: Setting User-Agent String in Go\nDESCRIPTION: Starting with version 1.2.0, Gophercloud sends its actual version in the user-agent string in the format 'gophercloud/v1.2.0'. This replaces the previous hardcoded string 'gophercloud/2.0.0'.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\ngophercloud/v1.2.0\n```\n\n----------------------------------------\n\nTITLE: Generating Semantic Conventions in OpenTelemetry Go\nDESCRIPTION: Shell commands to generate new versions of the semconv package based on OpenTelemetry Semantic Conventions. Uses the TAG environment variable to specify the release version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/RELEASING.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nexport TAG=\"v1.30.0\" # Change to the release version you are generating.\nmake semconv-generate # Uses the exported TAG.\n```\n\n----------------------------------------\n\nTITLE: Scaling Loki Components with Nomad\nDESCRIPTION: Commands for scaling Loki components either by modifying the job file or using the Nomad CLI to directly scale specific components.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-distributed/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnomad run job.nomad.hcl\n```\n\nLANGUAGE: shell\nCODE:\n```\nnomad job scale loki distributor <count>\n```\n\n----------------------------------------\n\nTITLE: Cloning xk6-loki Repository\nDESCRIPTION: Commands to clone and navigate to the xk6-loki repository\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/grafana/xk6-loki\ncd xk6-loki\n```\n\n----------------------------------------\n\nTITLE: Configuring Consul Client for Loki Compactor in YAML\nDESCRIPTION: Defines configuration options for a Consul client used by the Loki compactor. It includes settings for hostname, ACL token, timeouts, and rate limiting for Consul operations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\n# Hostname and port of Consul.\n# CLI flag: -<prefix>.consul.hostname\n[host: <string> | default = \"localhost:8500\"]\n\n# ACL Token used to interact with Consul.\n# CLI flag: -<prefix>.consul.acl-token\n[acl_token: <string> | default = \"\"]\n\n# HTTP timeout when talking to Consul\n# CLI flag: -<prefix>.consul.client-timeout\n[http_client_timeout: <duration> | default = 20s]\n\n# Enable consistent reads to Consul.\n# CLI flag: -<prefix>.consul.consistent-reads\n[consistent_reads: <boolean> | default = false]\n\n# Rate limit when watching key or prefix in Consul, in requests per second. 0\n# disables the rate limit.\n# CLI flag: -<prefix>.consul.watch-rate-limit\n[watch_rate_limit: <float> | default = 1]\n\n# Burst size used in rate limit. Values less than 1 are treated as 1.\n# CLI flag: -<prefix>.consul.watch-burst-size\n[watch_burst_size: <int> | default = 1]\n\n# Maximum duration to wait before retrying a Compare And Swap (CAS) operation.\n# CLI flag: -<prefix>.consul.cas-retry-delay\n[cas_retry_delay: <duration> | default = 1s]\n```\n\n----------------------------------------\n\nTITLE: GCS Workload Identity Configuration\nDESCRIPTION: JSON configuration for GCS workload identity federation showing external account setup.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"type\": \"external_account\",\n   \"audience\": \"//iam.googleapis.com/projects/123456789/locations/global/workloadIdentityPools/test-pool/providers/test-provider\",\n   \"subject_token_type\": \"urn:ietf:params:oauth:token-type:jwt\",\n   \"token_url\": \"https://sts.googleapis.com/v1/token\",\n   \"service_account_impersonation_url\": \"https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/test-service-account-42ssv@test-project.iam.gserviceaccount.com:generateAccessToken\",\n   \"credential_source\": {\n      \"file\": \"/var/run/secrets/storage/serviceaccount/token\",\n      \"format\": {\n         \"type\": \"text\"\n      }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Slice Filtering and Counting in Go\nDESCRIPTION: Demonstrates filtering and counting slice elements using Filter and Count functions\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ndata := []interface{}{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\nvar fn govalidator.ConditionIterator = func(value interface{}, index int) bool {\n\treturn value.(int)%2 == 0\n}\n_ = govalidator.Filter(data, fn) // result = []interface{}{2, 4, 6, 8, 10}\n_ = govalidator.Count(data, fn) // result = 5\n```\n\n----------------------------------------\n\nTITLE: Platform-Specific Test Script\nDESCRIPTION: Example showing how to write platform-specific test cases with different expected outputs for Windows versus other platforms.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fsnotify/fsnotify/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwatch /\ntouch /file\n\nOutput:\n    # Tested if nothing else matches\n    create    /file\n\n    # Windows-specific test.\n    windows:\n        write  /file\n```\n\n----------------------------------------\n\nTITLE: Updating LokiStack Size in Kubernetes\nDESCRIPTION: This YAML snippet shows how to increase the size of a LokiStack deployment in Kubernetes to handle higher ingestion rates. It sets the size to '1x.medium'.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsize: 1x.medium\n```\n\n----------------------------------------\n\nTITLE: Calculating Object Size in Go using size Package\nDESCRIPTION: Demonstrates usage of the size package to calculate memory consumption of a struct containing various data types including integers, strings, booleans, slices, and arrays. The example shows how the package handles different field types and memory alignment.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/DmitriyVTitov/size/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t// Use latest tag.\n\t\"github.com/DmitriyVTitov/size\"\n)\n\nfunc main() {\n\ta := struct {\n\t\ta int\n\t\tb string\n\t\tc bool\n\t\td int32\n\t\te []byte\n\t\tf [3]int64\n\t}{\n\t\ta: 10,                    // 8 bytes\n\t\tb: \"Text\",                // 16 (string itself) + 4 = 20 bytes\n\t\tc: true,                  // 1 byte\n\t\td: 25,                    // 4 bytes\n\t\te: []byte{'c', 'd', 'e'}, // 24 (slice itself) + 3 = 27 bytes\n\t\tf: [3]int64{1, 2, 3},     // 3 * 8 = 24 bytes\n\t} // 84 + 3 (padding) = 87 bytes\n\n\tfmt.Println(size.Of(a))\n}\n\n// Output: 87\n```\n\n----------------------------------------\n\nTITLE: Network Debug Information\nDESCRIPTION: Debug log entries showing network-related information including IPv4 source checking and link layer headers.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_47\n\nLANGUAGE: log\nCODE:\n```\nll header: 00000000: 42 01 0a 80 00 17 42 01 0a 80 00 01 08 00\nIPv4: martian source 10.132.141.91 from 10.132.141.80, on dev eth0\nXMT: Solicit on eth0, interval 130040ms.\n```\n\n----------------------------------------\n\nTITLE: Container Configuration Error Log\nDESCRIPTION: Detailed container configuration and startup error for PDC (Private Data Connect) service showing configuration parameters and failure due to missing image with Never pull policy.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_48\n\nLANGUAGE: json\nCODE:\n```\ncontainer &Container{\n  Name:pdc,\n  Image:us.gcr.io/hosted-grafana/pdc:0.1.415,\n  Args:[-proxy.auth.ca-keys-dir=/var/run/secrets/pdc-certs -proxy.socks-server.addr=:10443 -proxy.ssh-server.addr=:2222 -proxy.use-socks-username-for-routing -proxy.api.http-address=:9182 -proxy.check-connpool-address-in-ring -memberlist.join=dns+gossip-ring.pdc.svc.cluster.local:7946 -api.http-address=:11443 -distributor.enabled=true -distributor.addr=:10444 -distributor.use-socks-username-for-routing -gateway.enabled=true -gateway.addr=:2244 -log.level=debug -certs.ca-private-key-file=/var/run/secrets/pdc-certs/ca.key -certs.ca-cert-file=/var/run/secrets/pdc-certs/ca.crt -certs.ca-pub-file=/var/run/secrets/pdc-certs/ca.pub -certs.cluster=local-k8s -shard-size=3 -graceful-shutdown-period=30s -enable-multiple-networks],\n  Ports:[...],\n  Resources:ResourceRequirements{...}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple CPU Input Plugins in TOML\nDESCRIPTION: Example configuration demonstrating how to specify multiple instances of the same plugin type (CPU) with different settings. One instance collects system-wide CPU metrics while the other collects per-CPU metrics but drops the cpu_time metric.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG-1.13.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[[inputs.cpu]]\n  percpu = false\n  totalcpu = true\n\n[[inputs.cpu]]\n  percpu = true\n  totalcpu = false\n  drop = [\"cpu_time\"]\n```\n\n----------------------------------------\n\nTITLE: Loki Log Entries - File Monitoring and Error Handling\nDESCRIPTION: Log entries from Loki showing file target management, log tailing operations, and logfmt parsing errors. Contains timestamps, component information, error messages, and file paths being monitored in a Kubernetes environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_18\n\nLANGUAGE: logfmt\nCODE:\n```\nts=2024-04-16T15:10:42.713174528Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-7b5df5b97b-chz7b_c41f2190-4e4f-4361-b8ff-56c9a1e1bcf9/grafana/0.log ...\"\n```\n\n----------------------------------------\n\nTITLE: Using New gRPC Client Creation\nDESCRIPTION: Updated gRPC client creation using grpc.NewClient with dns resolver in idle mode.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nimport \"google.golang.org/grpc\"\n\n// Creating new gRPC client\nclient := grpc.NewClient() // Now creates client in idle mode with dns resolver\n```\n\n----------------------------------------\n\nTITLE: Inserting Colors into Regular Strings in Go\nDESCRIPTION: Examples of mixing colored and non-colored strings using Sprint functions\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n// Create SprintXxx functions to mix strings with other non-colorized strings:\nyellow := color.New(color.FgYellow).SprintFunc()\nred := color.New(color.FgRed).SprintFunc()\nfmt.Printf(\"This is a %s and this is %s.\\n\", yellow(\"warning\"), red(\"error\"))\n\ninfo := color.New(color.FgWhite, color.BgGreen).SprintFunc()\nfmt.Printf(\"This %s rocks!\\n\", info(\"package\"))\n\n// Use helper functions\nfmt.Println(\"This\", color.RedString(\"warning\"), \"should be not neglected.\")\nfmt.Printf(\"%v %v\\n\", color.GreenString(\"Info:\"), \"an important message.\")\n\n// Windows supported too! Just don't forget to change the output to color.Output\nfmt.Fprintf(color.Output, \"Windows support: %s\", color.GreenString(\"PASS\"))\n```\n\n----------------------------------------\n\nTITLE: Using Afero Utility Functions Directly in Go\nDESCRIPTION: This snippet demonstrates how to use Afero's utility functions directly, passing the filesystem as the first parameter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfs := new(afero.MemMapFs)\nf, err := afero.TempFile(fs,\"\", \"ioutil-test\")\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Minio Deployment\nDESCRIPTION: Removes the Minio deployment and associated resources from the cluster during cleanup.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -k config/overlays/development/minio\n```\n\n----------------------------------------\n\nTITLE: Word Segmentation using FirstWordInString\nDESCRIPTION: Example demonstrating how to perform word segmentation using the FirstWordInString function, which is more efficient when only word boundaries are needed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nstr := \"Hello, world!\"\nstate := -1\nvar c string\nfor len(str) > 0 {\n\tc, str, state = uniseg.FirstWordInString(str, state)\n\tfmt.Printf(\"(%s)\\n\", c)\n}\n// (Hello)\n// (,)\n// ( )\n// (world)\n// (!)\n```\n\n----------------------------------------\n\nTITLE: Error Type Checking Example\nDESCRIPTION: Shows how to check for specific error types using Go's errors.As() function with CallErr type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/AzureAD/microsoft-authentication-library-for-go/apps/errors/error_design.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar callErr CallErr\nif errors.As(err, &callErr) {\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Import SSH Key to AWS\nDESCRIPTION: Imports an SSH public key to AWS for EC2 instance access\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naws ec2 import-key-pair --key-name \"promtail-ec2\" --public-key-material fileb://~/.ssh/id_rsa.pub\n```\n\n----------------------------------------\n\nTITLE: Applying Terraform GCP Log Export Configuration\nDESCRIPTION: Command to apply the changes required to reach the desired state of the configuration. This creates the necessary GCP resources for log exporting.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/gcplog/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nterraform apply\n```\n\n----------------------------------------\n\nTITLE: Replacing Snappy Import in Go Applications\nDESCRIPTION: Instructions for replacing the original Snappy package import with the improved implementation. Users need to change their import statements to use this alternative library while maintaining compatibility.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/snappy/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/golang/snappy\n```\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/klauspost/compress/snappy\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Top-Level Buckets in Bolt Database (Go)\nDESCRIPTION: Demonstrates how to iterate over all existing top-level buckets in a Bolt database using the Tx.ForEach() function. It prints the name of each bucket.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\ndb.View(func(tx *bolt.Tx) error {\n\ttx.ForEach(func(name []byte, b *bolt.Bucket) error {\n\t\tfmt.Println(string(name))\n\t\treturn nil\n\t})\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Parsing command line flags\nDESCRIPTION: Call to parse the command line into previously defined flags. This must be called after flags are defined and before they are accessed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nflag.Parse()\n```\n\n----------------------------------------\n\nTITLE: JSON structure for translation entries in universal-translator\nDESCRIPTION: This snippet demonstrates the basic structure of a JSON object used for defining translations in the universal-translator library. It includes fields for locale, key, translation text, type, rule, and override flag.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-playground/universal-translator/README.md#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"locale\": \"en\",\n    \"key\": \"days-left\",\n    \"trans\": \"You have {0} day left.\",\n    \"type\": \"Cardinal\",\n    \"rule\": \"One\",\n    \"override\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Installing ULID Package in Go\nDESCRIPTION: Command to install the ULID package using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oklog/ulid/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/oklog/ulid\n```\n\n----------------------------------------\n\nTITLE: Upgrading Meta-Monitoring Stack Configuration\nDESCRIPTION: Helm command to upgrade the meta-monitoring stack configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade meta-monitoring grafana/meta-monitoring -n meta -f values.yaml \n```\n\n----------------------------------------\n\nTITLE: Parsing and Using Base2 Bytes in Go with alecthomas/units\nDESCRIPTION: This snippet demonstrates how to use the alecthomas/units package to parse a string representing Base2 byte values (like \"1KB\") and how to use the built-in unit constants (like Mebibyte) for byte calculations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/units/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nn, err := ParseBase2Bytes(\"1KB\")\n// n == 1024\nn = units.Mebibyte * 512\n```\n\n----------------------------------------\n\nTITLE: Exemplar Filter Configuration (Go)\nDESCRIPTION: Example showing how to disable exemplar recording and configure exemplar filters in the metrics SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nsdk.WithExemplarFilter(exemplar.AlwaysOffFilter)\n```\n\n----------------------------------------\n\nTITLE: Creating Loki Directory in Linux\nDESCRIPTION: Commands to create and navigate to a new Loki directory for installation files\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/docker.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir loki\ncd loki\n```\n\n----------------------------------------\n\nTITLE: Defining Go Module Dependencies for Grafana Loki\nDESCRIPTION: This snippet lists the Go module dependencies for the Grafana Loki project, including their versions and import paths. It covers a wide range of libraries from cloud providers like Google Cloud and Azure, as well as various utility and authentication packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n# cel.dev/expr v0.19.2\n## explicit; go 1.21.1\ncel.dev/expr\n# cloud.google.com/go v0.120.0\n## explicit; go 1.23.0\ncloud.google.com/go\ncloud.google.com/go/civil\ncloud.google.com/go/internal\ncloud.google.com/go/internal/detect\ncloud.google.com/go/internal/optional\ncloud.google.com/go/internal/pubsub\ncloud.google.com/go/internal/trace\ncloud.google.com/go/internal/version\n# cloud.google.com/go/auth v0.16.0\n## explicit; go 1.23.0\ncloud.google.com/go/auth\ncloud.google.com/go/auth/credentials\ncloud.google.com/go/auth/credentials/internal/externalaccount\ncloud.google.com/go/auth/credentials/internal/externalaccountuser\ncloud.google.com/go/auth/credentials/internal/gdch\ncloud.google.com/go/auth/credentials/internal/impersonate\ncloud.google.com/go/auth/credentials/internal/stsexchange\ncloud.google.com/go/auth/grpctransport\ncloud.google.com/go/auth/httptransport\ncloud.google.com/go/auth/internal\ncloud.google.com/go/auth/internal/compute\ncloud.google.com/go/auth/internal/credsfile\ncloud.google.com/go/auth/internal/jwt\ncloud.google.com/go/auth/internal/transport\ncloud.google.com/go/auth/internal/transport/cert\n# cloud.google.com/go/auth/oauth2adapt v0.2.8\n## explicit; go 1.23.0\ncloud.google.com/go/auth/oauth2adapt\n# cloud.google.com/go/bigtable v1.37.0\n## explicit; go 1.23.0\ncloud.google.com/go/bigtable\ncloud.google.com/go/bigtable/admin/apiv2/adminpb\ncloud.google.com/go/bigtable/apiv2/bigtablepb\ncloud.google.com/go/bigtable/bttest\ncloud.google.com/go/bigtable/internal\ncloud.google.com/go/bigtable/internal/option\n# cloud.google.com/go/compute/metadata v0.6.0\n## explicit; go 1.21\ncloud.google.com/go/compute/metadata\n# cloud.google.com/go/iam v1.5.0\n## explicit; go 1.23.0\ncloud.google.com/go/iam\ncloud.google.com/go/iam/apiv1/iampb\n# cloud.google.com/go/longrunning v0.6.6\n## explicit; go 1.23.0\ncloud.google.com/go/longrunning\ncloud.google.com/go/longrunning/autogen\ncloud.google.com/go/longrunning/autogen/longrunningpb\n# cloud.google.com/go/monitoring v1.24.1\n## explicit; go 1.23.0\ncloud.google.com/go/monitoring/apiv3/v2\ncloud.google.com/go/monitoring/apiv3/v2/monitoringpb\ncloud.google.com/go/monitoring/internal\n# cloud.google.com/go/pubsub v1.49.0\n## explicit; go 1.23.0\ncloud.google.com/go/pubsub\ncloud.google.com/go/pubsub/apiv1\ncloud.google.com/go/pubsub/apiv1/pubsubpb\ncloud.google.com/go/pubsub/internal\ncloud.google.com/go/pubsub/internal/distribution\ncloud.google.com/go/pubsub/internal/scheduler\n# cloud.google.com/go/storage v1.51.0\n## explicit; go 1.23.0\ncloud.google.com/go/storage\ncloud.google.com/go/storage/experimental\ncloud.google.com/go/storage/internal\ncloud.google.com/go/storage/internal/apiv2\ncloud.google.com/go/storage/internal/apiv2/storagepb\n# dario.cat/mergo v1.0.1\n## explicit; go 1.13\ndario.cat/mergo\n# github.com/Azure/azure-pipeline-go v0.2.3\n## explicit; go 1.14\ngithub.com/Azure/azure-pipeline-go/pipeline\n# github.com/Azure/azure-sdk-for-go/sdk/azcore v1.17.0\n## explicit; go 1.18\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/arm\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/arm/internal/resource\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/arm/policy\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/cloud\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/exported\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/log\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/pollers\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/pollers/async\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/pollers/body\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/pollers/fake\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/pollers/loc\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/pollers/op\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/internal/shared\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/log\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/policy\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/runtime\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/streaming\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/to\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore/tracing\n# github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.2\n## explicit; go 1.18\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/internal\n# github.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0\n## explicit; go 1.18\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/diag\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/errorinfo\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/exported\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/log\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/poller\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/temporal\ngithub.com/Azure/azure-sdk-for-go/sdk/internal/uuid\n# github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5 v5.7.0\n## explicit; go 1.18\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5\n# github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4 v4.3.0\n## explicit; go 1.18\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4\n# github.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.3.2\n## explicit; go 1.18\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/appendblob\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/blob\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/bloberror\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/blockblob\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/container\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/base\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/exported\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/shared\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/pageblob\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/sas\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob/service\n# github.com/Azure/azure-storage-blob-go v0.15.0 => github.com/MasslessParticle/azure-storage-blob-go v0.14.1-0.20240322194317-344980fda573\n## explicit; go 1.15\ngithub.com/Azure/azure-storage-blob-go/azblob\n# github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1\n## explicit; go 1.16\ngithub.com/Azure/go-ansiterm\ngithub.com/Azure/go-ansiterm/winterm\n# github.com/Azure/go-autorest v14.2.0+incompatible\n## explicit\ngithub.com/Azure/go-autorest\n# github.com/Azure/go-autorest/autorest v0.11.30\n## explicit; go 1.15\ngithub.com/Azure/go-autorest/autorest\ngithub.com/Azure/go-autorest/autorest/azure\n# github.com/Azure/go-autorest/autorest/adal v0.9.24\n## explicit; go 1.15\ngithub.com/Azure/go-autorest/autorest/adal\n# github.com/Azure/go-autorest/autorest/azure/auth v0.5.13\n## explicit; go 1.15\ngithub.com/Azure/go-autorest/autorest/azure/auth\n# github.com/Azure/go-autorest/autorest/azure/cli v0.4.6\n## explicit; go 1.15\ngithub.com/Azure/go-autorest/autorest/azure/cli\n# github.com/Azure/go-autorest/autorest/date v0.3.0\n## explicit; go 1.12\ngithub.com/Azure/go-autorest/autorest/date\n# github.com/Azure/go-autorest/logger v0.2.1\n## explicit; go 1.12\ngithub.com/Azure/go-autorest/logger\n# github.com/Azure/go-autorest/tracing v0.6.0\n## explicit; go 1.12\ngithub.com/Azure/go-autorest/tracing\n# github.com/AzureAD/microsoft-authentication-library-for-go v1.3.3\n## explicit; go 1.18\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/cache\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/confidential\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/errors\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/base\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/base/internal/storage\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/exported\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/json\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/json/types/time\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/local\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops/accesstokens\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops/authority\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops/internal/comm\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops/internal/grant\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops/wstrust\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/oauth/ops/wstrust/defs\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/options\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/shared\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/version\ngithub.com/AzureAD/microsoft-authentication-library-for-go/apps/public\n# github.com/Code-Hex/go-generics-cache v1.5.1\n## explicit; go 1.18\ngithub.com/Code-Hex/go-generics-cache\ngithub.com/Code-Hex/go-generics-cache/policy/clock\ngithub.com/Code-Hex/go-generics-cache/policy/fifo\ngithub.com/Code-Hex/go-generics-cache/policy/internal/policyutil\ngithub.com/Code-Hex/go-generics-cache/policy/lfu\ngithub.com/Code-Hex/go-generics-cache/policy/lru\ngithub.com/Code-Hex/go-generics-cache/policy/mru\ngithub.com/Code-Hex/go-generics-cache/policy/simple\n# github.com/DataDog/sketches-go v1.4.7\n```\n\n----------------------------------------\n\nTITLE: Logging Container Creation in Kubernetes\nDESCRIPTION: Log entry showing the creation of a container named 'grafana' within a sandbox environment in Kubernetes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\ntime=\"2024-05-07T11:59:38.671307647Z\" level=info msg=\"CreateContainer within sandbox \\\"10f321d50b51389b7845c1c5393aff42e209a45fcee6fec6d74c8b60dd5266ad\\\" for container &ContainerMetadata{Name:grafana,Attempt:7,}\"\n```\n\n----------------------------------------\n\nTITLE: Labels Endpoint - HTTP GET\nDESCRIPTION: Endpoint to retrieve the list of known labels within a given time span.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/labels\n```\n\n----------------------------------------\n\nTITLE: Developer Certificate of Origin Text Block\nDESCRIPTION: The full text of the Developer Certificate of Origin (DCO) version 1.1 that contributors must agree to when submitting code. This certification ensures contributors have the right to submit their code under the project's open source license.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/distribution/reference/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\n----------------------------------------\n\nTITLE: Adding WithProducer Option in Go OpenTelemetry Prometheus Exporter\nDESCRIPTION: Adds a WithProducer option to the Prometheus exporter to allow registering producers on the exporter's manual reader. This restores functionality that was previously available.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\nAdd `WithProducer` option in `go.opentelemetry.op/otel/exporters/prometheus` to restore the ability to register producers on the prometheus exporter's manual reader.\n```\n\n----------------------------------------\n\nTITLE: Using ANSI Compressor in Go\nDESCRIPTION: Shows how to implement the ANSI compressor which eliminates unnecessary or redundant ANSI sequences to optimize output. This can improve efficiency when multiple ANSI commands are used consecutively.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/ansi/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/muesli/ansi/compressor\"\n\nw := compressor.Writer{Forward: os.Stdout}\nw.Write([]byte(\"\\x1b[31mHello, world!\\x1b[0m\"))\nw.Close()\n```\n\n----------------------------------------\n\nTITLE: Defining Azure Function App Log Records in JSON\nDESCRIPTION: This JSON structure defines an array of log records from Azure Function Apps. Each record contains metadata about the function execution, including timestamps, resource identifiers, and detailed properties such as app name, host information, and event details.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/pkg/promtail/targets/azureeventhubs/testdata/function_app_logs_message.txt#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"records\": [\n\t{ \"time\": \"2023-03-08T12:06:46Z\",\n\t\"resourceId\": \"AZURE-FUNC-APP\",\n\t\"category\": \"FunctionAppLogs\",\n\t\"operationName\": \"Microsoft.Web/sites/functions/log\",\n\t\"level\": \"Informational\",\n\t\"location\": \"My Location\",\n\t\"properties\": {\n\t'appName':'',\n\t'roleInstance':'123123123123',\n\t'message':'Loading functions metadata',\n\t'category':'Host.Startup',\n\t'hostVersion':'X.XX.X.X',\n\t'hostInstanceId':'myInstance',\n\t'level':'Information',\n\t'levelId':2,\n\t'processId':155,\n\t'eventId':3143,\n\t'eventName':'FunctionMetadataManagerLoadingFunctionsMetadata'\n\t}\n\t},\n\t{ \"time\": \"2023-03-08T12:06:47Z\",\n\t\"resourceId\": \"AZURE-FUNC-APP-2\",\n\t\"category\": \"FunctionAppLogs\",\n\t\"operationName\": \"Microsoft.Web/sites/functions/log\",\n\t\"level\": \"Informational\",\n\t\"location\": \"My Location\",\n\t\"properties\": {\n\t'appName':'',\n\t'roleInstance':'123123123123',\n\t'message':'Loading functions metadata',\n\t'category':'Host.Startup',\n\t'hostVersion':'X.XX.X.X',\n\t'hostInstanceId':'myInstance',\n\t'level':'Information',\n\t'levelId':2,\n\t'processId':155,\n\t'eventId':3143,\n\t'eventName':'FunctionMetadataManagerLoadingFunctionsMetadata'\n\t}\n\t}\n]}\n```\n\n----------------------------------------\n\nTITLE: Manual Timing Example\nDESCRIPTION: Example showing manual timing approach using time.Since() to measure function execution time.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/felixge/fgprof/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nstart := time.Start()\nslowNetworkRequest()\nfmt.Printf(\"slowNetworkRequest: %s\\n\", time.Since(start))\n// ...\n```\n\n----------------------------------------\n\nTITLE: Declaring New Type Aliases in Go for Azure Network Management SDK\nDESCRIPTION: This snippet demonstrates the declaration of new type aliases for various Azure networking concepts, providing more specific and meaningful types for different components.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\ntype DdosSettingsProtectionMode string\ntype ApplicationGatewayWafRuleActionTypes string\ntype ApplicationGatewayClientRevocationOptions string\ntype NextStep string\ntype ActionType string\ntype SlotType string\ntype IsWorkloadProtected string\ntype RouteMapMatchCondition string\ntype ApplicationGatewayWafRuleStateTypes string\ntype ApplicationGatewayTierTypes string\ntype CustomIPPrefixType string\ntype RouteMapActionType string\ntype ExpressRoutePortsBillingType string\ntype ApplicationGatewayRuleSetStatusOptions string\ntype Geo string\ntype VnetLocalRouteOverrideCriteria string\n```\n\n----------------------------------------\n\nTITLE: Combining JSON Merge Patches in Go\nDESCRIPTION: Example showing how to combine multiple JSON merge patches into a single patch document.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/evanphx/json-patch.v4/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\tjsonpatch \"github.com/evanphx/json-patch\"\n)\n\nfunc main() {\n\toriginal := []byte(`{\"name\": \"John\", \"age\": 24, \"height\": 3.21}`)\n\n\tnameAndHeight := []byte(`{\"height\":null,\"name\":\"Jane\"}`)\n\tageAndEyes := []byte(`{\"age\":4.23,\"eyes\":\"blue\"}`)\n\n\tcombinedPatch, err := jsonpatch.MergeMergePatches(nameAndHeight, ageAndEyes)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\twithoutCombinedPatch, err := jsonpatch.MergePatch(original, nameAndHeight)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\twithoutCombinedPatch, err = jsonpatch.MergePatch(withoutCombinedPatch, ageAndEyes)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\twithCombinedPatch, err := jsonpatch.MergePatch(original, combinedPatch)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tif jsonpatch.Equal(withCombinedPatch, withoutCombinedPatch) {\n\t\tfmt.Println(\"Both JSON documents are structurally the same!\")\n\t}\n\n\tfmt.Printf(\"combined merge patch: %s\", combinedPatch)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating MockBrokerListener for TLS Testing in Go\nDESCRIPTION: Introduces a NewMockBrokerListener helper function for testing TLS connections. This improvement was added in version 1.16.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_17\n\nLANGUAGE: Go\nCODE:\n```\nbroker := sarama.NewMockBrokerListener(t, 0, tlsListener)\n```\n\n----------------------------------------\n\nTITLE: Initializing Cloud Package Clients with gRPC Interceptor in Go\nDESCRIPTION: Demonstrates how to initialize Cloud package clients with a gRPC interceptor for tracing after the removal of trace.EnableGRPCTracing. This example uses the PubSub client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_33\n\nLANGUAGE: go\nCODE:\n```\nc, err := pubsub.NewClient(ctx, \"project-id\", option.WithGRPCDialOption(grpc.WithUnaryInterceptor(tc.GRPCClientInterceptor())))\nif err != nil {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Type by Name in Go using reflect2\nDESCRIPTION: Demonstrates how to use reflect2.TypeByName to retrieve a type by its fully qualified name. This function works similarly to Java's Class.forName.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/modern-go/reflect2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// given package is github.com/your/awesome-package\ntype MyStruct struct {\n\t// ...\n}\n\n// will return the type\nreflect2.TypeByName(\"awesome-package.MyStruct\")\n// however, if the type has not been used\n// it will be eliminated by compiler, so we can not get it in runtime\n```\n\n----------------------------------------\n\nTITLE: Installing Flock Package with Go Get\nDESCRIPTION: Command to install the flock package using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gofrs/flock/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/gofrs/flock\n```\n\n----------------------------------------\n\nTITLE: Sample Code Snippet - Storage Range Reader\nDESCRIPTION: Example showing how to read last N bytes of a file using negative range in Google Cloud Storage\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_27\n\nLANGUAGE: go\nCODE:\n```\nobj.NewRangeReader(ctx, -10, -1)\n```\n\n----------------------------------------\n\nTITLE: Using CancelReader in Go\nDESCRIPTION: This snippet demonstrates how to use CancelReader to create a cancelable reader from a file, set up a cancellation after a timeout, and handle the cancellation in a read loop.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/cancelreader/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nr, err := cancelreader.NewReader(file)\nif err != nil {\n    // handle error\n    ...\n}\n\n// cancel after five seconds\ngo func() {\n    time.Sleep(5 * time.Second)\n    r.Cancel()\n}()\n\n// keep reading\nfor {\n    var buf [1024]byte\n    _, err := r.Read(buf[:])\n\n    if errors.Is(err, cancelreader.ErrCanceled) {\n        fmt.Println(\"canceled!\")\n        break\n    }\n    if err != nil {\n        // handle other errors\n        ...\n    }\n\n    // handle data\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Nix Develop and Make Commands with Grafana Loki\nDESCRIPTION: Example showing how to use Nix develop to create a shell with the correct PATH configuration and then run Makefile commands. This ensures that the versions of tools used match those defined in the Nix configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/nix/README.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nnix develop\nmake lint\n```\n\n----------------------------------------\n\nTITLE: Using ReaderIgnoreCRC in s2 Compression (Go)\nDESCRIPTION: Example of using the ReaderIgnoreCRC option added to s2 compression in version 1.15.6. This option allows ignoring CRC checks when reading compressed data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ns2.ReaderIgnoreCRC()\n```\n\n----------------------------------------\n\nTITLE: Adding IsEmpty Method to Instrument Type in Go\nDESCRIPTION: The IsEmpty method is added to the Instrument type in go.opentelemetry.io/otel/sdk/metric. This method is used to check if an Instrument instance is a zero-value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\n// IsEmpty method added to Instrument type\nfunc (i Instrument) IsEmpty() bool {\n  // Implementation not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Go Module Dependencies List\nDESCRIPTION: Lists all external Go module dependencies with their versions and import paths. Each module is explicitly versioned and includes sub-packages that are imported by the project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n# github.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e\n## explicit; go 1.19\ngithub.com/xo/terminfo\n# github.com/yuin/gopher-lua v1.1.1\n## explicit; go 1.17\ngithub.com/yuin/gopher-lua\ngithub.com/yuin/gopher-lua/ast\ngithub.com/yuin/gopher-lua/parse\ngithub.com/yuin/gopher-lua/pm\n```\n\n----------------------------------------\n\nTITLE: Converting Pygments Lexers to Chroma in Shell\nDESCRIPTION: Shell command demonstrating how to convert a Pygments lexer to Chroma's XML format using the included Python script.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\npython3 _tools/pygments2chroma_xml.py \\\n  pygments.lexers.jvm.KotlinLexer \\\n  > lexers/embedded/kotlin.xml\n```\n\n----------------------------------------\n\nTITLE: Updating gRPC Server Interceptor for Tracing in Go\nDESCRIPTION: Shows the change in how to set up a gRPC server interceptor for tracing. The new method uses the GRPCServerInterceptor function from an initialized trace.Client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_31\n\nLANGUAGE: go\nCODE:\n```\ns := grpc.NewServer(grpc.UnaryInterceptor(trace.GRPCServerInterceptor(tc)))\n```\n\nLANGUAGE: go\nCODE:\n```\ns := grpc.NewServer(grpc.UnaryInterceptor(tc.GRPCServerInterceptor()))\n```\n\n----------------------------------------\n\nTITLE: Verifying LokiStack Instance in Kubernetes\nDESCRIPTION: This command retrieves the YAML configuration of the LokiStack instance named 'lokistack-dev' to check its conditions field.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl get lokistack lokistack-dev -o yaml\n```\n\n----------------------------------------\n\nTITLE: Building the Loki Logstash Output Plugin\nDESCRIPTION: Command to build the Loki Logstash output plugin as a Ruby gem file that can be installed in Logstash.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngem build logstash-output-loki.gemspec\n```\n\n----------------------------------------\n\nTITLE: Logfmt Example Log Data\nDESCRIPTION: Sample logfmt-formatted log entries demonstrating typical Grafana Enterprise Logs output with timestamps, log levels, and various metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nlevel=info ts=2022-03-23T11:55:29.846163306Z caller=main.go:112 msg=\"Starting Grafana Enterprise Logs\"\nlevel=debug ts=2022-03-23T11:55:29.846226372Z caller=main.go:113 version=v1.3.0 branch=HEAD Revision=e071a811 LokiVersion=v2.4.2 LokiRevision=525040a3\nlevel=warn ts=2022-03-23T11:55:45.213901602Z caller=added_modules.go:198 msg=\"found valid license\" cluster=enterprise-logs-test-fixture\n```\n\n----------------------------------------\n\nTITLE: Executing Delta Profile with Go Tool\nDESCRIPTION: Example command showing how to generate a delta profile using the standard Go profiling tools over a 30-second interval.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/pyroscope-go/godeltaprof/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo tool pprof http://localhost:6060/debug/pprof/heap?seconds=30\n```\n\n----------------------------------------\n\nTITLE: Configuring Bloom Gateway in Grafana Loki\nDESCRIPTION: YAML configuration for the Loki bloom gateway server, which handles queries for filtering chunks. Includes settings for worker concurrency, connection pools, task handling and client configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\n# Flag to enable or disable the bloom gateway component globally.\n# CLI flag: -bloom-gateway.enabled\n[enabled: <boolean> | default = false]\n\nclient:\n  # Configures the behavior of the connection pool.\n  pool_config:\n    # How frequently to update the list of servers.\n    # CLI flag: -bloom-gateway-client.pool.check-interval\n    [check_interval: <duration> | default = 15s]\n\n  # The grpc_client block configures the gRPC client used to communicate between\n  # a client and server component in Loki.\n  # The CLI flags prefix for this block configuration is:\n  # bloom-gateway-client.grpc\n  [grpc_client_config: <grpc_client>]\n\n  # Comma separated addresses list in DNS Service Discovery format:\n  # https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes\n  # CLI flag: -bloom-gateway-client.addresses\n  [addresses: <string> | default = \"\"]\n\n# Number of workers to use for filtering chunks concurrently. Usually set to 1x\n# number of CPU cores.\n# CLI flag: -bloom-gateway.worker-concurrency\n[worker_concurrency: <int> | default = 4]\n\n# Number of blocks processed concurrently on a single worker. Usually set to 2x\n# number of CPU cores.\n# CLI flag: -bloom-gateway.block-query-concurrency\n[block_query_concurrency: <int> | default = 8]\n\n# Maximum number of outstanding tasks per tenant.\n# CLI flag: -bloom-gateway.max-outstanding-per-tenant\n[max_outstanding_per_tenant: <int> | default = 1024]\n\n# How many tasks are multiplexed at once.\n# CLI flag: -bloom-gateway.num-multiplex-tasks\n[num_multiplex_tasks: <int> | default = 512]\n```\n\n----------------------------------------\n\nTITLE: Updating Fluent Bit Output Plugin Name (Shell)\nDESCRIPTION: Configuration change for Fluent Bit output plugin when upgrading to Loki 2.1.0. The plugin has been renamed from 'loki' to 'grafana-loki' due to naming conflicts with the official Fluent Bit Loki output plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\n[Output]\n    Name loki\n```\n\nLANGUAGE: shell\nCODE:\n```\n[Output]\n    Name grafana-loki\n```\n\n----------------------------------------\n\nTITLE: Helper Function for SCRAM Client Message Exchange\nDESCRIPTION: A placeholder function that would be implemented to send client messages to a server and receive responses in a real application. In this example, it simply returns an empty string.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xdg-go/scram/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc sendClientMsg(s string) string {\n    // A real implementation would send this to a server and read a reply.\n    return \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding IgnoreValue Option in Go OpenTelemetry Metric Testing\nDESCRIPTION: Adds an IgnoreValue option to the metricdatatest package to allow ignoring values when comparing metrics during testing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: Go\nCODE:\n```\nAdd `IgnoreValue` option in `go.opentelemetry.io/otel/sdk/metric/metricdata/metricdatatest` to allow ignoring values when comparing metrics.\n```\n\n----------------------------------------\n\nTITLE: Removing All Targets in a Group in Go for Prometheus Service Discovery\nDESCRIPTION: This code snippet illustrates how to send an update when all targets in a group have been removed in Prometheus service discovery. It shows an empty target group with only the source identifier.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/discovery/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n&targetgroup.Group{\n\tTargets:  nil,\n\t\"Source\": \"file2\",\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Operator with Custom Image Registry\nDESCRIPTION: This command deploys the Loki Operator using a custom image from a specified registry. It's useful for testing local changes from a repository fork. The REGISTRY_BASE parameter should be set to the user's image registry organization.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/prologue/quickstart.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake quickstart REGISTRY_BASE=quay.io/my-company-org\n```\n\n----------------------------------------\n\nTITLE: Function to Open Reader Content in Browser Window\nDESCRIPTION: The OpenReader function consumes the contents of an io.Reader and presents the results in a new browser window.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/browser/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc OpenReader(r io.Reader) error\n```\n\n----------------------------------------\n\nTITLE: Configuring Rsyslog Output for Promtail using UDP\nDESCRIPTION: This Rsyslog configuration shows how to send messages to Promtail via UDP, using the RSYSLOG_SyslogProtocol23Format.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/scraping.md#2025-04-19_snippet_17\n\nLANGUAGE: rsyslog\nCODE:\n```\n*.* action(type=\"omfwd\" protocol=\"udp\" target=\"<promtail_host>\" port=\"<promtail_port>\" Template=\"RSYSLOG_SyslogProtocol23Format\")\n```\n\n----------------------------------------\n\nTITLE: Using URL Path Decorators with Go-Autorest Prepare Function\nDESCRIPTION: Shows how to use decorators with the Prepare function to build a URL path by chaining WithBaseURL and WithPath decorators, resulting in a complete URL with all path components.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nreq, err := Prepare(&http.Request{},\n  WithBaseURL(\"https://microsoft.com/\"),\n  WithPath(\"a\"),\n  WithPath(\"b\"),\n  WithPath(\"c\"))\n```\n\n----------------------------------------\n\nTITLE: Logging Logfmt Decoding Error in Loki\nDESCRIPTION: This log entry shows an error occurring during the decoding of a log entry in logfmt format. It specifies the error type and position of the syntax error.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.854830425Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 95 on line 1: unexpected '\\\"'\"\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: Commands to add Grafana's Helm chart repository and update it.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/install-microservices/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Measuring Text Block Dimensions in Go with Lip Gloss\nDESCRIPTION: Shows how to measure the width and height of rendered text blocks using Lip Gloss functions. Includes styling and rendering a block, then getting its dimensions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_22\n\nLANGUAGE: go\nCODE:\n```\n// Render a block of text.\nvar style = lipgloss.NewStyle().\n    Width(40).\n    Padding(2)\nvar block string = style.Render(someLongString)\n\n// Get the actual, physical dimensions of the text block.\nwidth := lipgloss.Width(block)\nheight := lipgloss.Height(block)\n\n// Here's a shorthand function.\nw, h := lipgloss.Size(block)\n```\n\n----------------------------------------\n\nTITLE: Type Checking LValue for Table in GopherLua\nDESCRIPTION: Example showing how to check if a Lua value is a table using Go's type assertion and how to access the table properties.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nlv := L.Get(-1) // get the value at the top of the stack\nif tbl, ok := lv.(*lua.LTable); ok {\n    // lv is LTable\n    fmt.Println(L.ObjLen(tbl))\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Loki Gateway Service\nDESCRIPTION: Command to get information about services in the Loki namespace, particularly to locate the Loki gateway service that exposes Loki to the internet.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc -n loki\n```\n\n----------------------------------------\n\nTITLE: Building k6 with Extension\nDESCRIPTION: Command to build k6 with the xk6-loki extension\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k6/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake k6\n```\n\n----------------------------------------\n\nTITLE: Passing Cancelable Context to DNS Lookup in Compute Metadata Package\nDESCRIPTION: Enhances the compute/metadata package by passing a cancelable context to DNS lookup operations. This improvement allows for better control over DNS resolution timeouts.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_26\n\nLANGUAGE: Go\nCODE:\n```\n// Code not provided in the original text\n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Secrets for Loki Enterprise\nDESCRIPTION: Command to apply the enterprise-secrets.yaml file that contains GCP service account credentials and Grafana Enterprise Logs license key to the Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/docs/examples/enterprise/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f enterprise-secrets.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Tag Validator in Go\nDESCRIPTION: Shows how to add a custom validator to the TagMap for struct validation. The example adds a 'duck' validator that checks if a string equals 'duck'.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\ngovalidator.TagMap[\"duck\"] = govalidator.Validator(func(str string) bool {\n\treturn str == \"duck\"\n})\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown and ASCII Tables with Lip Gloss in Go\nDESCRIPTION: Demonstrates how to generate tables in Markdown or ASCII style using Lip Gloss table helpers. Shows border configurations for each style.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_25\n\nLANGUAGE: go\nCODE:\n```\ntable.New().Border(lipgloss.MarkdownBorder()).BorderTop(false).BorderBottom(false)\n```\n\nLANGUAGE: go\nCODE:\n```\ntable.New().Border(lipgloss.ASCIIBorder())\n```\n\n----------------------------------------\n\nTITLE: Implementing Bolt Database Wrapper for Mobile Use in Go\nDESCRIPTION: This code creates a wrapper struct for Bolt database with methods for initializing, accessing the file path, and closing the database. It's designed to work with gomobile for use in Android and iOS applications.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_25\n\nLANGUAGE: go\nCODE:\n```\nfunc NewBoltDB(filepath string) *BoltDB {\n\tdb, err := bolt.Open(filepath+\"/demo.db\", 0600, nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\treturn &BoltDB{db}\n}\n\ntype BoltDB struct {\n\tdb *bolt.DB\n\t...\n}\n\nfunc (b *BoltDB) Path() string {\n\treturn b.db.Path()\n}\n\nfunc (b *BoltDB) Close() {\n\tb.db.Close()\n}\n```\n\n----------------------------------------\n\nTITLE: Installing pgzip Package in Go\nDESCRIPTION: Command to install the pgzip package and its dependencies using go get\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/pgzip/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ngo get github.com/klauspost/pgzip/...\n```\n\n----------------------------------------\n\nTITLE: CloudFormation Subscription Filter Configuration\nDESCRIPTION: CloudFormation template section for configuring subscription filter to route logs from CloudWatch to Lambda Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/lambda-promtail/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nMainLambdaPromtailSubscriptionFilter:\n  Type: AWS::Logs::SubscriptionFilter\n  Properties:\n    DestinationArn: !GetAtt LambdaPromtailFunction.Arn\n    FilterPattern: \"\"\n    LogGroupName: \"/aws/lambda/some-lamda-log-group\"\n```\n\n----------------------------------------\n\nTITLE: Tagging Convention for Clock Calls in Go\nDESCRIPTION: Demonstrates the recommended tagging convention for clock method calls, which helps prevent test breakage due to code changes introducing new components or methods.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\nfunc (c *Component) Method() {\n\tnow := c.clock.Now(\"Component\", \"Method\")\n}\n```\n\nLANGUAGE: go\nCODE:\n```\nfunc (c *Component) Method() {\n\tstart := c.clock.Now(\"Component\", \"Method\", \"start\")\n\t...\n\tend := c.clock.Now(\"Component\", \"Method\", \"end\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring LokiStack with Swift Storage\nDESCRIPTION: YAML configuration for LokiStack that references a Swift secret for object storage. This snippet shows how to configure the storage section of a LokiStack instance to use Swift storage by specifying the secret name and type.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  storage:\n    secret:\n      name: lokistack-dev-swift\n      type: swift\n```\n\n----------------------------------------\n\nTITLE: Sample Code Snippet - Query Location Type\nDESCRIPTION: Example showing how to access read-only bucket location type in Google Cloud Storage\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_28\n\nLANGUAGE: go\nCODE:\n```\nBucket.LocationType\n```\n\n----------------------------------------\n\nTITLE: Go Package Dependencies and Overrides\nDESCRIPTION: Lists explicit Go module dependencies including Kubernetes client libraries, logging utilities, and SQLite implementations. Contains dependency overrides for specific packages with version constraints.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n# github.com/Azure/azure-sdk-for-go => github.com/Azure/azure-sdk-for-go v68.0.0+incompatible\n# github.com/Azure/azure-storage-blob-go => github.com/MasslessParticle/azure-storage-blob-go v0.14.1-0.20240322194317-344980fda573\n# github.com/hashicorp/consul => github.com/hashicorp/consul v1.20.5\n# github.com/gocql/gocql => github.com/grafana/gocql v0.0.0-20200605141915-ba5dc39ece85\n# github.com/hashicorp/memberlist => github.com/grafana/memberlist v0.3.1-0.20220714140823-09ffed8adbbe\n# github.com/grafana/regexp => github.com/grafana/regexp v0.0.0-20240518133315-a468a5bfb3bc\n# github.com/grafana/loki/pkg/push => ./pkg/push\n```\n\n----------------------------------------\n\nTITLE: Adding Changelog Entry for Loki Helm Chart in Markdown\nDESCRIPTION: This snippet demonstrates the structure for adding changelog entries in the CHANGELOG.md file. It includes a header comment used by the CI pipeline and examples of how to format new entries.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[//]: # (<AUTOMATED_UPDATES_LOCATOR> : do not remove this line. This locator is used by the CI pipeline to automatically create a changelog entry for each new Loki release. Add other chart versions and respective changelog entries bellow this line.)\n```\n\n----------------------------------------\n\nTITLE: Setting Global Log Level in Logrus\nDESCRIPTION: Demonstrates how to set the minimum logging level for a Logger instance, allowing only messages at or above that severity to be logged.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// Will log anything that is info or above (warn, error, fatal, panic). Default.\nlog.SetLevel(log.InfoLevel)\n```\n\n----------------------------------------\n\nTITLE: Installing Golang on Linux\nDESCRIPTION: Bash script to download, install, and set up Golang on a Linux system. It removes any existing Go installation, downloads the specified version, and sets up the necessary symlinks.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nGO_VERSION=go1.16.6.linux-amd64.tar.gz\n\nrm -rf /usr/local/bin/go*\nrm -rf /usr/local/go\ncurl -O https://storage.googleapis.com/golang/$GO_VERSION\ntar -zxvf $GO_VERSION\nsudo mv go /usr/local/\nrm $GO_VERSION\nln -s /usr/local/go/bin/* /usr/local/bin/\n```\n\n----------------------------------------\n\nTITLE: Using Match Function in Doublestar\nDESCRIPTION: Go function signature for the Match function, which checks if a name matches a file name pattern. It returns a boolean and an error.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc Match(pattern, name string) (bool, error)\n```\n\n----------------------------------------\n\nTITLE: Accessing Block Device Information with Both /proc and /sys in Go\nDESCRIPTION: Example showing how to initialize the blockdevice package with both /proc and /sys paths, which is needed for gathering complete block device statistics like disk information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n    fs, err := blockdevice.NewFS(\"/proc\", \"/sys\")\n    stats, err := fs.ProcDiskstats()\n```\n\n----------------------------------------\n\nTITLE: Verifying Azure CLI Account Status\nDESCRIPTION: This command displays the currently active account in the Azure CLI, which helps in troubleshooting Azure CLI credential issues by confirming which account is being used for authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_3\n\nLANGUAGE: azurecli\nCODE:\n```\naz account show\n```\n\n----------------------------------------\n\nTITLE: Installing Bloom Filter Package in Go\nDESCRIPTION: This command installs the Bloom filter package using Go's package management system. It fetches the latest version of the package from the specified GitHub repository.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bloom/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/willf/bloom\n```\n\n----------------------------------------\n\nTITLE: Adding Last Scanned Row Support in Bigtable Go Client\nDESCRIPTION: Adds support for last_scanned_row functionality in the Bigtable Go client and emulator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/bigtable/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\n* **bigtable:** Support last_scanned_row in the bigtable client ([#8345](https://github.com/googleapis/google-cloud-go/issues/8345)) ([961dd38](https://github.com/googleapis/google-cloud-go/commit/961dd38f9e461d487ba8b6ee26ea14d872991eaf))\n* **bigtable:** Support last_scanned_row_key in emulator ([#8343](https://github.com/googleapis/google-cloud-go/issues/8343)) ([d53ef45](https://github.com/googleapis/google-cloud-go/commit/d53ef459893b29e7050f943da00bcd0a3f3ff900))\n```\n\n----------------------------------------\n\nTITLE: Creating Minio Secret in Kubernetes\nDESCRIPTION: Bash command to create a generic secret for Minio access in the meta namespace.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic minio -n meta \\\n --from-literal=<INSERT USERNAME OF CHOICE> \\\n --from-literal=<INSERT PASSWORD OF CHOICE>\n```\n\n----------------------------------------\n\nTITLE: Disabling Self-Monitoring in YAML\nDESCRIPTION: Configuration to disable the bundled Grafana Agent Operator if managing monitoring separately.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/upgrade-from-2x/index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmonitoring:\n  selfMonitoring:\n    enabled: false\n    grafanaAgent:\n      installOperator: false\n```\n\n----------------------------------------\n\nTITLE: Analyzing Loki Log Entries\nDESCRIPTION: These log entries demonstrate various activities in Grafana Loki, including file tailing, target management, and error handling. They provide insights into the system's operations and potential issues.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.256006782Z caller=tailer.go:245 level=info component=logs logs_config=default component=tailer msg=\"stopped tailing file\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/hg-plugins/0.log\nts=2024-04-16T15:10:43.255989251Z caller=tailer.go:118 level=info component=logs logs_config=default component=tailer msg=\"position timer: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/hg-plugins/0.log\nts=2024-04-16T15:10:43.255974991Z caller=tailer.go:155 level=info component=logs logs_config=default component=tailer msg=\"tail routine: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/hg-plugins/0.log\nts=2024-04-16T15:10:43.255960211Z caller=tailer.go:164 level=info component=logs logs_config=default component=tailer msg=\"tail routine: tail channel closed, stopping tailer\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/hg-plugins/0.log reason=null\nts=2024-04-16T15:10:43.255933401Z caller=tailer.go:207 level=info component=logs logs_config=default component=tailer msg=\"skipping update of position for a file which does not currently exist\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/hg-plugins/0.log\nts=2024-04-16T15:10:43.255907671Z caller=filetargetmanager.go:397 level=info component=logs logs_config=default msg=\"Removing target\" key=\"/var/log/pods/*64872ae4-62eb-4757-b148-72bab4a9e880/hg-plugins/*.log:{app=\\\"grafana\\\", conprof=\\\"true\\\", container=\\\"hg-plugins\\\", instanceId=\\\"i6666\\\", job=\\\"hosted-grafana/grafana\\\", name=\\\"grafana\\\", namespace=\\\"hosted-grafana\\\", org=\\\"org7\\\", plan=\\\"free\\\", pod=\\\"org7-grafana-647dc5b44f-pmz8j\\\", pod_template_hash=\\\"647dc5b44f\\\", resource_version=\\\"167297262\\\", slug=\\\"org7\\\", stackId=\\\"777777\\\"}\"\nts=2024-04-16T15:10:43.25582646Z caller=filetarget.go:192 level=info component=logs logs_config=default msg=\"filetarget: watcher closed, tailer stopped, positions saved\" path=/var/log/pods/*64872ae4-62eb-4757-b148-72bab4a9e880/grafana/*.log\nts=2024-04-16T15:10:43.25580358Z caller=tailer.go:245 level=info component=logs logs_config=default component=tailer msg=\"stopped tailing file\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/grafana/0.log\nts=2024-04-16T15:10:43.25578448Z caller=tailer.go:118 level=info component=logs logs_config=default component=tailer msg=\"position timer: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/grafana/0.log\nts=2024-04-16T15:10:43.25576612Z caller=tailer.go:155 level=info component=logs logs_config=default component=tailer msg=\"tail routine: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/grafana/0.log\nts=2024-04-16T15:10:43.25574394Z caller=tailer.go:164 level=info component=logs logs_config=default component=tailer msg=\"tail routine: tail channel closed, stopping tailer\" path=/var/log/pods/hosted-grafana_.something-grafana-647dc5b44f-pmz8j_64872ae4-62eb-4757-b148-72bab4a9e880/grafana/0.log reason=null\nts=2024-04-16T15:10:43.255643719Z caller=filetargetmanager.go:397 level=info component=logs logs_config=default msg=\"Removing target\" key=\"/var/log/pods/*64872ae4-62eb-4757-b148-72bab4a9e880/grafana/*.log:{app=\\\"grafana\\\", conprof=\\\"true\\\", container=\\\"grafana\\\", instanceId=\\\"i6666\\\", job=\\\"hosted-grafana/grafana\\\", name=\\\"grafana\\\", namespace=\\\"hosted-grafana\\\", org=\\\"org7\\\", plan=\\\"free\\\", pod=\\\"org7-grafana-647dc5b44f-pmz8j\\\", pod_template_hash=\\\"647dc5b44f\\\", resource_version=\\\"167297262\\\", slug=\\\"org7\\\", stackId=\\\"777777\\\"}\"\nts=2024-04-16T15:10:43.263042477Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/gr-prod-04_cortex-gw-6579fd68cf-wxfdz_47df6fbe-43af-4cf7-a77f-edc3de06197c/cortex-gw/0.log.20240416-150933.gz op=CREATE\nts=2024-04-16T15:10:43.259110088Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:43.257819383Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:43.244818982Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:43.239151767Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Seeked /var/log/pods/loki-cd_loki-cd-loki-create-deployment-tuesday-prod-1713254400-wait-for-github-pr-862956382_20556f0a-8a98-4361-bb91-baa2ffb08c41/main/0.log - &{Offset:0 Whence:0}\"\nts=2024-04-16T15:10:43.239080083Z caller=tailer.go:147 level=info component=logs logs_config=default component=tailer msg=\"tail routine: started\" path=/var/log/pods/loki-cd_loki-cd-loki-create-deployment-tuesday-prod-1713254400-wait-for-github-pr-862956382_20556f0a-8a98-4361-bb91-baa2ffb08c41/main/0.log\nts=2024-04-16T15:10:43.238913661Z caller=filetarget.go:313 level=info component=logs logs_config=default msg=\"watching new directory\" directory=/var/log/pods/loki-cd_loki-cd-loki-create-deployment-tuesday-prod-1713254400-wait-for-github-pr-862956382_20556f0a-8a98-4361-bb91-baa2ffb08c41/main\nts=2024-04-16T15:10:43.234330247Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-dd8bf9cd-s8k4m_02f6e4f5-aad2-445f-a04c-f666f0d54ee4/hgrun/0.log to appear...\"\nts=2024-04-16T15:10:43.234253033Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-dd8bf9cd-s8k4m_02f6e4f5-aad2-445f-a04c-f666f0d54ee4/hgrun/0.log ...\"\nts=2024-04-16T15:10:43.231425217Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-64dc5cbf86-nvgx5_b5380684-df51-45a4-bacb-ca0cfdf7a05f/hgrun/0.log to appear...\"\nts=2024-04-16T15:10:43.231145214Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-64dc5cbf86-nvgx5_b5380684-df51-45a4-bacb-ca0cfdf7a05f/hgrun/0.log ...\"\nts=2024-04-16T15:10:43.220000621Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod_distributor-d9d7957b8-w7pnf_6cfc70ca-26c6-4421-9483-ffe123fe3a6b/distributor/0.log op=CREATE\nts=2024-04-16T15:10:43.21939049Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod_distributor-d9d7957b8-w7pnf_6cfc70ca-26c6-4421-9483-ffe123fe3a6b/distributor/0.log.20240416-151043 op=CREATE\nts=2024-04-16T15:10:43.219314914Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 95 on line 1: unexpected '\\\"'\"\nts=2024-04-16T15:10:43.215848733Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 93 on line 1: unexpected '\\\"'\"\nts=2024-04-16T15:10:43.215641301Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod_distributor-d9d7957b8-w7pnf_6cfc70ca-26c6-4421-9483-ffe123fe3a6b/distributor/0.log.20240416-150450.gz op=CREATE\nts=2024-04-16T15:10:43.213328712Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 94 on line 1: unexpected '\\\"'\"\nts=2024-04-16T15:10:43.212676387Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 95 on line 1: unexpected '\\\"'\"\nts=2024-04-16T15:10:43.212298621Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 94 on line 1: unexpected '\\\"'\"\nts=2024-04-16T15:10:43.209036752Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/alertmanager_alertmanager-3_a068a2ab-d658-44d2-9b78-d9d7eb47e7cf/alertmanager/0.log.20240416-150933.tmp op=CREATE\nts=2024-04-16T15:10:43.207714985Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Successfully reopened /var/log/pods/hosted-grafana_.something-grafana-d95d68499-sqqh8_9c491b2c-2dff-4a72-a3ef-c5719f5cf696/grafana/0.log\"\nts=2024-04-16T15:10:43.207654185Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-d95d68499-sqqh8_9c491b2c-2dff-4a72-a3ef-c5719f5cf696/grafana/0.log ...\"\nts=2024-04-16T15:10:43.207288069Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Successfully reopened /var/log/pods/loki-prod_distributor-59f8b8d6f-cf5s5_e3faafed-b644-460f-aa64-0c5195eb2fac/distributor/0.log\"\n```\n\n----------------------------------------\n\nTITLE: Converting between JSON and YAML in Go\nDESCRIPTION: This snippet shows how to convert between JSON and YAML formats using the YAMLToJSON and JSONToYAML functions from the sigs.k8s.io/yaml package. It demonstrates the bidirectional conversion capabilities of the library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"sigs.k8s.io/yaml\"\n)\n\nfunc main() {\n\tj := []byte(`{\"name\": \"John\", \"age\": 30}`)\n\ty, err := yaml.JSONToYAML(j)\n\tif err != nil {\n\t\tfmt.Printf(\"err: %v\\n\", err)\n\t\treturn\n\t}\n\tfmt.Println(string(y))\n\t/* Output:\n\tage: 30\n\tname: John\n\t*/\n\tj2, err := yaml.YAMLToJSON(y)\n\tif err != nil {\n\t\tfmt.Printf(\"err: %v\\n\", err)\n\t\treturn\n\t}\n\tfmt.Println(string(j2))\n\t/* Output:\n\t{\"age\":30,\"name\":\"John\"}\n\t*/\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Network Module with Go\nDESCRIPTION: Command to install the Azure Network module using Go modules for dependency management. This installs version 2 of the armnetwork package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2\n```\n\n----------------------------------------\n\nTITLE: Updating Bigtable Dependencies in Go\nDESCRIPTION: Updates dependencies for the Bigtable client library, including grpc-go, x/net, and google.golang.org/api.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/bigtable/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n* **bigtable:** Bump google.golang.org/api to v0.149.0 ([8d2ab9f](https://github.com/googleapis/google-cloud-go/commit/8d2ab9f320a86c1c0fab90513fc05861561d0880))\n* **bigtable:** Update golang.org/x/net to v0.17.0 ([174da47](https://github.com/googleapis/google-cloud-go/commit/174da47254fefb12921bbfc65b7829a453af6f5d))\n* **bigtable:** Update grpc-go to v1.56.3 ([343cea8](https://github.com/googleapis/google-cloud-go/commit/343cea8c43b1e31ae21ad50ad31d3b0b60143f8c))\n* **bigtable:** Update grpc-go to v1.59.0 ([81a97b0](https://github.com/googleapis/google-cloud-go/commit/81a97b06cb28b25432e4ece595c55a9857e960b7))\n```\n\n----------------------------------------\n\nTITLE: Verifying JRuby Installation for Loki Logstash Plugin\nDESCRIPTION: Command to check that JRuby is correctly installed and configured as the current Ruby environment.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nruby --version\njruby 9.2.10\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Retries and Exponential Backoff\nDESCRIPTION: Example demonstrating how to configure the Godo client with automatic retries and exponential backoff for failed requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ntokenSrc := oauth2.StaticTokenSource(&oauth2.Token{\n    AccessToken: \"dop_v1_xxxxxx\",\n})\n\noauth_client := oauth2.NewClient(oauth2.NoContext, tokenSrc)\n\nwaitMax := godo.PtrTo(6.0)\nwaitMin := godo.PtrTo(3.0)\n\nretryConfig := godo.RetryConfig{\n    RetryMax:     3,\n    RetryWaitMin: waitMin,\n    RetryWaitMax: waitMax,\n}\n\nclient, err := godo.New(oauth_client, godo.WithRetryAndBackoffs(retryConfig))\n```\n\n----------------------------------------\n\nTITLE: Renaming Infer to Any in KV Package\nDESCRIPTION: The Infer function in the go.opentelemetry.io/otel/api/kv package is renamed to Any.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_41\n\nLANGUAGE: Go\nCODE:\n```\nkv.Any()\n```\n\n----------------------------------------\n\nTITLE: Adding New Scenario to CI Matrix in YAML\nDESCRIPTION: This YAML snippet shows how to add a new scenario to the CI matrix configuration. It defines the scenario name, values file, and whether to use k3d.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/scenarios/README.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstrategy:\n  matrix:\n    scenario:\n      - name: New Scenario\n        values_file: new-scenario-values.yaml\n        use_k3d: true  # or false depending on requirements\n```\n\n----------------------------------------\n\nTITLE: Example of False Hit Case in Bitmap Field Lookup\nDESCRIPTION: An example showing a potential issue when the input field name is shorter than the struct field name, which can result in a false positive match. This is addressed by comparing string lengths.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ntype T struct {\n    X int `json:\"abc\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Infinite Cardinality Limit in Console\nDESCRIPTION: Example showing how to set an infinite cardinality limit by setting OTEL_GO_X_CARDINALITY_LIMIT to -1, which is functionally equivalent to disabling the feature.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_GO_X_CARDINALITY_LIMIT=-1\n```\n\n----------------------------------------\n\nTITLE: Structuring Go Imports in Loki Codebase\nDESCRIPTION: Example of the correct import structure for Go files in the Loki project, following the standard of grouping standard libraries, external libraries, and local packages.\nSOURCE: https://github.com/grafana/loki/blob/main/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\t\"fmt\"\n\t\"math\"\n\n\t\"github.com/prometheus/common/model\"\n\t\"github.com/prometheus/prometheus/pkg/labels\"\n\n\t\"github.com/grafana/loki/pkg/logproto\"\n\t\"github.com/grafana/loki/pkg/logql\"\n)\n```\n\n----------------------------------------\n\nTITLE: Downloading Loki Configuration Files in Windows\nDESCRIPTION: Commands to download configuration files in Windows environment with local path specification\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/docker.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd \"<local-path>\"\nwget https://raw.githubusercontent.com/grafana/loki/v3.4.1/cmd/loki/loki-local-config.yaml -O loki-config.yaml\nwget https://raw.githubusercontent.com/grafana/loki/v3.4.1/clients/cmd/promtail/promtail-docker-config.yaml -O promtail-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Cloning Tutorial Repository\nDESCRIPTION: Clones the tutorial repository containing configuration files and changes to the correct directory.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/k8s-monitoring-helm/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/grafana/alloy-scenarios.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd alloy-scenarios/k8s/logs\n```\n\n----------------------------------------\n\nTITLE: Checking Configuration Changes in Loki\nDESCRIPTION: Shell command to compare configuration changes between versions using the diff-config.sh tool. The script identifies modified configurations and changes in default values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release/document-metrics-configurations-changes.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ OLD_VERSION=X.Y.Z ./tools/diff-config.sh\n```\n\n----------------------------------------\n\nTITLE: Implementing New Client Functions for Network Management in Go\nDESCRIPTION: This snippet shows the addition of new functions for creating clients and performing operations like listing, creating, updating, and deleting network resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\nfunc NewStaticMembersClient(string, azcore.TokenCredential, *arm.ClientOptions) (*StaticMembersClient, error)\n\nfunc NewAdminRulesClient(string, azcore.TokenCredential, *arm.ClientOptions) (*AdminRulesClient, error)\n\nfunc (*ManagersClient) NewListBySubscriptionPager(*ManagersClientListBySubscriptionOptions) *runtime.Pager[ManagersClientListBySubscriptionResponse]\n\n// ... (more functions)\n```\n\n----------------------------------------\n\nTITLE: Contributing Guide in Markdown\nDESCRIPTION: A comprehensive markdown document that outlines the contribution process, including CLA requirements, code formatting guidelines with Go, and proper git workflow for submitting patches.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/gofuzz/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# How to contribute #\n\nWe'd love to accept your patches and contributions to this project.  There are\njust a few small guidelines you need to follow.\n\n\n## Contributor License Agreement ##\n\nContributions to any Google project must be accompanied by a Contributor\nLicense Agreement.  This is not a copyright **assignment**, it simply gives\nGoogle permission to use and redistribute your contributions as part of the\nproject.\n\n  * If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual\n    CLA][].\n\n  * If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA][].\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n\n[individual CLA]: https://developers.google.com/open-source/cla/individual\n[corporate CLA]: https://developers.google.com/open-source/cla/corporate\n\n\n## Submitting a patch ##\n\n  1. It's generally best to start by opening a new issue describing the bug or\n     feature you're intending to fix.  Even if you think it's relatively minor,\n     it's helpful to know what people are working on.  Mention in the initial\n     issue that you are planning to work on that bug or feature so that it can\n     be assigned to you.\n\n  1. Follow the normal process of [forking][] the project, and setup a new\n     branch to work in.  It's important that each group of changes be done in\n     separate branches in order to ensure that a pull request only includes the\n     commits related to that bug or feature.\n\n  1. Go makes it very simple to ensure properly formatted code, so always run\n     `go fmt` on your code before committing it.  You should also run\n     [golint][] over your code.  As noted in the [golint readme][], it's not\n     strictly necessary that your code be completely \"lint-free\", but this will\n     help you find common style issues.\n\n  1. Any significant changes should almost always be accompanied by tests.  The\n     project already has good test coverage, so look at some of the existing\n     tests if you're unsure how to go about it.  [gocov][] and [gocov-html][]\n     are invaluable tools for seeing which parts of your code aren't being\n     exercised by your tests.\n\n  1. Do your best to have [well-formed commit messages][] for each change.\n     This provides consistency throughout the project, and ensures that commit\n     messages are able to be formatted properly by various git tools.\n\n  1. Finally, push the commits to your fork and submit a [pull request][].\n\n[forking]: https://help.github.com/articles/fork-a-repo\n[golint]: https://github.com/golang/lint\n[golint readme]: https://github.com/golang/lint/blob/master/README\n[gocov]: https://github.com/axw/gocov\n[gocov-html]: https://github.com/matm/gocov-html\n[well-formed commit messages]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n[squash]: http://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n[pull request]: https://help.github.com/articles/creating-a-pull-request\n```\n\n----------------------------------------\n\nTITLE: Configuring Smithy Build Plugin for Go Code Generation\nDESCRIPTION: Example configuration for the go-codegen build plugin in smithy-build.json. Shows how to set up code generation for the Smithy quickstart Weather service example with module configuration and Go directives.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/smithy-go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"1.0\",\n  \"sources\": [\n    \"models\"\n  ],\n  \"maven\": {\n    \"dependencies\": [\n      \"software.amazon.smithy.go:smithy-go-codegen:0.1.0\"\n    ]\n  },\n  \"plugins\": {\n    \"go-codegen\": {\n      \"service\": \"example.weather#Weather\",\n      \"module\": \"github.com/example/weather\",\n      \"generateGoMod\": true,\n      \"goDirective\": \"1.20\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: ObjectStorageTLSSpec Type Definition\nDESCRIPTION: Defines the TLS configuration structure for object storage endpoints in Loki. Contains fields for specifying CA certificates via ConfigMap references.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\ntype ObjectStorageTLSSpec struct {\n    // CA is the name of a ConfigMap containing a CA certificate.\n    // It needs to be in the same namespace as the LokiStack custom resource.\n    caName string `json:\"caName,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Configure Security Group Rules\nDESCRIPTION: Configures inbound rules for SSH (22) and Promtail (3100) ports\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naws ec2 authorize-security-group-ingress --group-id sg-02c489bbdeffdca1d --protocol tcp --port 22 --cidr 0.0.0.0/0\naws ec2 authorize-security-group-ingress --group-id sg-02c489bbdeffdca1d --protocol tcp --port 3100 --cidr 0.0.0.0/0\n```\n\n----------------------------------------\n\nTITLE: Adding Atomic Float32 Type in Go\nDESCRIPTION: This snippet mentions the addition of the 'atomic.Float32' type for atomic operations on 'float32' values. It's part of the changes introduced in version 1.10.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Added\n- Add `atomic.Float32` type for atomic operations on `float32`.\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Kafka Topic Using Make\nDESCRIPTION: Command to create a new Kafka topic with a custom name by overriding the default 'promtail' topic name using the TOPIC variable.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/kafka/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nTOPIC=new-topic make create-topic\n```\n\n----------------------------------------\n\nTITLE: Loading a Go-implemented Lua Module in Main Program\nDESCRIPTION: Shows how to preload a custom Go-implemented module in the main application. This example registers the previously defined module so it can be required by Lua scripts.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"./mymodule\"\n    \"github.com/yuin/gopher-lua\"\n)\n\nfunc main() {\n    L := lua.NewState()\n    defer L.Close()\n    L.PreloadModule(\"mymodule\", mymodule.Loader)\n    if err := L.DoFile(\"main.lua\"); err != nil {\n        panic(err)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Actor Identifiers in Go for Hierarchical Scheduler\nDESCRIPTION: Example of how identifiers would be represented in the hierarchical scheduler approach. Actors are defined as string slices representing different levels in the queue hierarchy, allowing for flexible queue nesting.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/lids/0003-QueryFairnessInScheduler.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nactorA := []string{\"tenant_a\", \"user_1\"}\nactorB := []string{\"tenant_b\", \"user_2\"}\nactorC := []string{\"tenant_b\", \"user_3\", \"service_foo\"}\nactorD := []string{\"tenant_b\", \"user_3\", \"service_bar\"}\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: Command to add the Grafana chart repository to Helm, which contains the Loki Helm chart.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\n```\n\n----------------------------------------\n\nTITLE: Example JSON Data for mapstructure Use Case\nDESCRIPTION: Demonstrates a sample JSON structure that illustrates why mapstructure is useful, showing a scenario where the structure type needs to be determined dynamically.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/mapstructure/README.md#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"person\",\n  \"name\": \"Mitchell\"\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Color Creation and Usage in Go\nDESCRIPTION: Demonstrates how to create a color using different color spaces and how to access RGB values from a color object. The example shows creating the same blue color using different constructor methods.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Any of the following should be the same\nc := colorful.Color{0.313725, 0.478431, 0.721569}\nc, err := colorful.Hex(\"#517AB8\")\nif err != nil {\n    log.Fatal(err)\n}\nc = colorful.Hsv(216.0, 0.56, 0.722)\nc = colorful.Xyz(0.189165, 0.190837, 0.480248)\nc = colorful.Xyy(0.219895, 0.221839, 0.190837)\nc = colorful.Lab(0.507850, 0.040585,-0.370945)\nc = colorful.Luv(0.507849,-0.194172,-0.567924)\nc = colorful.Hcl(276.2440, 0.373160, 0.507849)\nfmt.Printf(\"RGB values: %v, %v, %v\", c.R, c.G, c.B)\n```\n\n----------------------------------------\n\nTITLE: Substring Extraction in Go Templates\nDESCRIPTION: The substr function extracts a substring from a given string.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_13\n\nLANGUAGE: template\nCODE:\n```\n{{ .path | substr 2 5 }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ substr 0 5 \"hello world\"}}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ substr 6 11 \"hello world\"}}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Formatter and Style in Go\nDESCRIPTION: Code showing how to select a formatter and style (theme) for syntax highlighting, with fallback options when specified ones aren't found.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nstyle := styles.Get(\"swapoff\")\nif style == nil {\n  style = styles.Fallback\n}\nformatter := formatters.Get(\"html\")\nif formatter == nil {\n  formatter = formatters.Fallback\n}\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Reference for v0.76.0\nDESCRIPTION: Link to GitHub comparison between v0.75.0 and v0.76.0 releases showing all changes in this version update.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n(https://www.github.com/googleapis/google-cloud-go/compare/v0.75.0...v0.76.0)\n```\n\n----------------------------------------\n\nTITLE: Format Command Usage in Loki CLI\nDESCRIPTION: Command reference for the 'fmt' command in Loki CLI that formats LogQL queries. Includes configuration options for authentication, connection settings, and output formatting.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nusage: logcli fmt\n\nFormats a LogQL query.\n\nFlags:\n      --help                  Show context-sensitive help (also try --help-long and --help-man).\n      --version               Show application version.\n  -q, --quiet                 Suppress query metadata\n      --stats                 Show query statistics\n  -o, --output=default        Specify output mode [default, raw, jsonl]. raw suppresses log labels and timestamp.\n  -z, --timezone=Local        Specify the timezone to use when formatting output timestamps [Local, UTC]\n      --cpuprofile=\"\"         Specify the location for writing a CPU profile.\n      --memprofile=\"\"         Specify the location for writing a memory profile.\n      --stdin                 Take input logs from stdin\n      --addr=\"http://localhost:3100\"\n                              Server address. Can also be set using LOKI_ADDR env var.\n      --username=\"\"           Username for HTTP basic auth. Can also be set using LOKI_USERNAME env var.\n      --password=\"\"           Password for HTTP basic auth. Can also be set using LOKI_PASSWORD env var.\n      --ca-cert=\"\"            Path to the server Certificate Authority. Can also be set using LOKI_CA_CERT_PATH env var.\n      --tls-skip-verify       Server certificate TLS skip verify. Can also be set using LOKI_TLS_SKIP_VERIFY env var.\n      --cert=\"\"               Path to the client certificate. Can also be set using LOKI_CLIENT_CERT_PATH env var.\n      --key=\"\"                Path to the client certificate key. Can also be set using LOKI_CLIENT_KEY_PATH env var.\n      --org-id=\"\"             adds X-Scope-OrgID to API requests for representing tenant ID. Useful for requesting tenant data when bypassing\n                              an auth gateway. Can also be set using LOKI_ORG_ID env var.\n      --query-tags=\"\"         adds X-Query-Tags http header to API requests. This header value will be part of `metrics.go` statistics.\n                              Useful for tracking the query. Can also be set using LOKI_QUERY_TAGS env var.\n      --bearer-token=\"\"       adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN env var.\n      --bearer-token-file=\"\"  adds the Authorization header to API requests for authentication purposes. Can also be set using\n                              LOKI_BEARER_TOKEN_FILE env var.\n      --retries=0             How many times to retry each query when getting an error response from Loki. Can also be set using\n                              LOKI_CLIENT_RETRIES env var.\n      --min-backoff=0         Minimum backoff time between retries. Can also be set using LOKI_CLIENT_MIN_BACKOFF env var.\n      --max-backoff=0         Maximum backoff time between retries. Can also be set using LOKI_CLIENT_MAX_BACKOFF env var.\n      --auth-header=\"Authorization\"\n                              The authorization header used. Can also be set using LOKI_AUTH_HEADER env var.\n      --proxy-url=\"\"          The http or https proxy to use when making requests. Can also be set using LOKI_HTTP_PROXY_URL env var.\n      --compress              Request that Loki compress returned data in transit. Can also be set using LOKI_HTTP_COMPRESSION env var.\n```\n\n----------------------------------------\n\nTITLE: Enabling Metric Aggregation Configuration in YAML\nDESCRIPTION: Configuration update in local Loki config to enable metric aggregation functionality\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmetric_aggregation:\\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Initializing Go Random Number Generator with Seed Package\nDESCRIPTION: Demonstrates two methods of initializing the random number generator using the seed package - a MustInit() approach that panics on failure and an Init() approach that returns an error. Shows proper import and initialization patterns in package init() functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sean-/seed/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage mypackage\n\nimport (\n  \"github.com/sean-/seed\"\n)\n\n// MustInit will panic() if it is unable to set a high-entropy random seed:\nfunc init() {\n  seed.MustInit()\n}\n\n// Or if you want to not panic() and can actually handle this error:\nfunc init() {\n  if secure, err := !seed.Init(); !secure {\n    // Handle the error\n    //panic(fmt.Sprintf(\"Unable to securely seed Go's RNG: %v\", err))\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using OpenTelemetry Sampler in Go-Redis\nDESCRIPTION: Example of using an OpenTelemetry sampler to control span creation behavior in go-redis. This snippet demonstrates how to use the ParentBased(NeverSample()) sampler to drop orphan spans.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nParentBased(NeverSample())\n```\n\n----------------------------------------\n\nTITLE: Creating Dictionaries in S2 from Sample Files\nDESCRIPTION: Example of creating a dictionary from a sample file in S2. The code demonstrates reading a sample file, creating a dictionary, and using it for encoding and decoding data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\n    // Read a sample\n    sample, err := os.ReadFile(\"sample.json\")\n\n    // Create a dictionary.\n    dict := s2.MakeDict(sample, nil)\n\t\n    // b := dict.Bytes() will provide a dictionary that can be saved\n    // and reloaded with s2.NewDict(b).\n\t\n    // To encode:\n    encoded := dict.Encode(nil, file)\n\n    // To decode:\n    decoded, err := dict.Decode(nil, file)\n```\n\n----------------------------------------\n\nTITLE: Parsing Shared Config Properties in Go\nDESCRIPTION: Fixes the parsing of shared config properties, particularly handling of trailing comments and recognition of # or ; separators.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/internal/ini/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\n// Example of property parsing:\n// key = value # comment\n// key = value ; comment\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace for Loki\nDESCRIPTION: Command to create a dedicated namespace for Loki in your Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace loki\n```\n\n----------------------------------------\n\nTITLE: Running Message Type Migration Tool in Go Project\nDESCRIPTION: Commands to execute the aliasfix migration tool for updating import statements from genproto to new package locations, followed by updating module dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/migration.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run cloud.google.com/go/internal/aliasfix/cmd/aliasfix@latest .\ngo mod tidy\n```\n\n----------------------------------------\n\nTITLE: Setting up HyperLogLog Development Environment with Go\nDESCRIPTION: Commands to clone the HyperLogLog repository, navigate to the project directory, and run the demo application. This setup is required for contributing to the project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/axiomhq/hyperloglog/Contributing.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/axiomhq/hyperloglog.git\ncd hyperloglog\ncd demo \ngo run hyperloglog_demo.go \n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Target in YAML\nDESCRIPTION: Example of setting the -target flag in a YAML configuration file to specify which microservices to run on startup.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/deployment-modes.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n-target=all\n```\n\n----------------------------------------\n\nTITLE: Displaying Lambda-Promtail Project Structure\nDESCRIPTION: Shows the directory structure of the lambda-promtail project, including the Makefile, Dockerfile, README, and main Go source file.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/lambda-promtail/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n.\n├── Makefile                    <-- Make to automate build\n├── Dockerfile                  <-- Uses the AWS Lambda Go base image\n├── README.md                   <-- This instructions file\n├── lambda-promtail             <-- Source code for a lambda function\n│   └── main.go                 <-- Lambda function code\n```\n\n----------------------------------------\n\nTITLE: Felix Health Check Status Report\nDESCRIPTION: Detailed health check summary showing component status including async_calc_graph, felix-startup, and int_dataplane components with their respective timeouts and health states.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_9\n\nLANGUAGE: log\nCODE:\n```\n+------------------+---------+----------------+-----------------+--------+\n|    COMPONENT     | TIMEOUT |    LIVENESS    |    READINESS    | DETAIL |\n+------------------+---------+----------------+-----------------+--------+\n| async_calc_graph | 20s     | reporting live | reporting ready |        |\n| felix-startup    | 0s      | reporting live | reporting ready |        |\n| int_dataplane    | 1m30s   | reporting live | reporting ready |        |\n+------------------+---------+----------------+-----------------+--------+\n```\n\n----------------------------------------\n\nTITLE: Updating Ksonnet Configuration for Loki\nDESCRIPTION: Example of how to update the Ksonnet configuration to specify the storage backend explicitly, as the default value has been removed.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_23\n\nLANGUAGE: jsonnet\nCODE:\n```\n_config+:: {\n    namespace: 'loki-dev',\n    cluster: 'us-central1',\n    storage_backend: 'gcs,bigtable',\n```\n\n----------------------------------------\n\nTITLE: Server Capacity Check Cycle in Grafana Loki\nDESCRIPTION: Series of debug log entries showing a complete server capacity check cycle. The logs track the execution of capacity assessment operations including calculating unfinished jobs, server capacity, and determining that no capacity changes are required.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"q62wCcIkEOueqFKF\",\"level\":\"debug\",\"msg\":\"calculate unfinished jobs\",\"time\":\"2024-04-16T15:03:28Z\"}\n{\"id\":\"q62wCcIkEOueqFKF\",\"level\":\"debug\",\"msg\":\"calculate server capacity\",\"time\":\"2024-04-16T15:03:28Z\"}\n{\"id\":\"q62wCcIkEOueqFKF\",\"level\":\"debug\",\"max-pool\":4,\"min-pool\":0,\"msg\":\"check capacity\",\"pending-builds\":0,\"running-builds\":0,\"server-buffer\":0,\"server-capacity\":0,\"server-count\":0,\"time\":\"2024-04-16T15:03:28Z\"}\n{\"id\":\"q62wCcIkEOueqFKF\",\"level\":\"debug\",\"msg\":\"no capacity changes required\",\"time\":\"2024-04-16T15:03:28Z\"}\n{\"id\":\"q62wCcIkEOueqFKF\",\"level\":\"debug\",\"msg\":\"check capacity complete\",\"time\":\"2024-04-16T15:03:28Z\"}\n```\n\n----------------------------------------\n\nTITLE: Creating Bigtable Service Agent and Configuring KMS Permissions in Google Cloud\nDESCRIPTION: Commands to create a service agent for Bigtable and authorize it to use a KMS key for encryption/decryption. This is required for Customer-Managed Encryption Keys (CMEK) functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngcloud beta services identity create \\\n    --service=bigtableadmin.googleapis.com \\\n    --project $GCLOUD_TESTS_GOLANG_PROJECT_ID\n# Note the service agent email for the agent created.\nexport SERVICE_AGENT_EMAIL=<service agent email, from last step>\n\n# Authorizes Google Cloud Bigtable to encrypt and decrypt using key1\ngcloud kms keys add-iam-policy-binding key1 \\\n    --keyring $MY_KEYRING \\\n    --location $MY_SINGLE_LOCATION \\\n    --role roles/cloudkms.cryptoKeyEncrypterDecrypter \\\n    --member \"serviceAccount:$SERVICE_AGENT_EMAIL\" \\\n    --project $GCLOUD_TESTS_GOLANG_PROJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Omitting XML Serialization for BlobItems\nDESCRIPTION: Directive to remove the auto-generated UnmarshalXML method for BlobItemInternal to allow for a custom implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.definitions\n  transform: >\n    $.BlobItemInternal[\"x-ms-go-omit-serde-methods\"] = true;\n```\n\n----------------------------------------\n\nTITLE: Grafana Container Startup Command Using Process Wait and Plugin Initialization\nDESCRIPTION: Shell command used to initialize a Grafana container that waits for the hgrun-pause process to start and then executes the hgrun binary with debug logging and plugin configuration. This command runs as part of container initialization in the Kubernetes environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nset -e; while [ \"$(pidof hgrun-pause)\" = \"\" ]; do sleep 0.5; done;\nexec /bin/hgrun -log.level=debug launch -bundledPluginsManifest /proc/$(pidof plugins-pause)/root/manifest.json -bundledPluginsDir /proc/$(pidof plugins-pause)/root/plugins\n```\n\n----------------------------------------\n\nTITLE: SASL Authentication Update\nDESCRIPTION: Implementation of KIP-368 to allow periodic SASL re-authentication\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nKIP-368: Allow SASL Connections to Periodically Re-Authenticate\n```\n\n----------------------------------------\n\nTITLE: Creating GitHub Release\nDESCRIPTION: Alternative command using GitHub CLI to create a release with auto-generated notes\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/v2/RELEASE.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngh release create v2.0.x --generate-notes\n```\n\n----------------------------------------\n\nTITLE: Setting Exemplar Filter to Always On in Console\nDESCRIPTION: Example showing how to configure the exemplar filter to allow all measurements by setting OTEL_METRICS_EXEMPLAR_FILTER to always_on.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_METRICS_EXEMPLAR_FILTER=always_on\n```\n\n----------------------------------------\n\nTITLE: Kube-state-metrics Configuration\nDESCRIPTION: YAML configuration for kube-state-metrics endpoint in values.yaml, specifying the service endpoint for metric collection.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkubeStateMetrics:\n  # Scrape https://github.com/kubernetes/kube-state-metrics by default\n  enabled: true\n  # This endpoint is created when the helm chart from\n  # https://artifacthub.io/packages/helm/prometheus-community/kube-state-metrics/\n  # is used. Change this if kube-state-metrics is installed somewhere else.\n  endpoint: kube-state-metrics.kube-state-metrics.svc.cluster.local:8080\n```\n\n----------------------------------------\n\nTITLE: Documenting Transaction Clone Method in Markdown\nDESCRIPTION: Details the addition of a 'Clone' method to 'Txn' in version 1.2.0, allowing transactions to be split into two independently mutable trees. This feature was introduced through a GitHub pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-immutable-radix/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Adds a `Clone` method to `Txn` allowing transactions to be split either into two independently mutable trees. [[GH-26](https://github.com/hashicorp/go-immutable-radix/pull/26)]\n```\n\n----------------------------------------\n\nTITLE: Updating BigQuery Table Access in Go\nDESCRIPTION: This snippet demonstrates how to update the way BigQuery tables are accessed after API changes. It replaces the deprecated Client.OpenTable method with a new chained method call.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_34\n\nLANGUAGE: go\nCODE:\n```\nclient.DatasetInProject(\"project\", \"dataset\").Table(\"table\")\n```\n\n----------------------------------------\n\nTITLE: Implementing PROXY Protocol Server in Go\nDESCRIPTION: Example code showing how to create a server that supports the PROXY protocol. It demonstrates wrapping a standard TCP listener with a proxyproto.Listener to automatically handle PROXY protocol headers from connecting clients.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pires/go-proxyproto/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"log\"\n\t\"net\"\n\n\tproxyproto \"github.com/pires/go-proxyproto\"\n)\n\nfunc main() {\n\t// Create a listener\n\taddr := \"localhost:9876\"\n\tlist, err := net.Listen(\"tcp\", addr)\n\tif err != nil {\n\t\tlog.Fatalf(\"couldn't listen to %q: %q\\n\", addr, err.Error())\n\t}\n\n\t// Wrap listener in a proxyproto listener\n\tproxyListener := &proxyproto.Listener{Listener: list}\n\tdefer proxyListener.Close()\n\n\t// Wait for a connection and accept it\n\tconn, err := proxyListener.Accept()\n\tdefer conn.Close()\n\n\t// Print connection details\n\tif conn.LocalAddr() == nil {\n\t\tlog.Fatal(\"couldn't retrieve local address\")\n\t}\n\tlog.Printf(\"local address: %q\", conn.LocalAddr().String())\n\n\tif conn.RemoteAddr() == nil {\n\t\tlog.Fatal(\"couldn't retrieve remote address\")\n\t}\n\tlog.Printf(\"remote address: %q\", conn.RemoteAddr().String())\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an HTTP FileSystem from a Directory in Go\nDESCRIPTION: Code snippet showing how to create an http.FileSystem implementation using http.Dir to serve files from a directory path.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nvar fs http.FileSystem = http.Dir(\"/path/to/assets\")\n```\n\n----------------------------------------\n\nTITLE: Installing golex dependency for Loki lexer generation\nDESCRIPTION: Command to install the golex tool which is required for generating Go code from lexer definition files. This dependency must be installed before attempting to regenerate the lexer files.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/model/textparse/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo get -u modernc.org/golex\n```\n\n----------------------------------------\n\nTITLE: Uploading Metrics to Librato in Go\nDESCRIPTION: Shows how to periodically upload metrics to Librato using the Librato client from the go-metrics-librato package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/mihasya/go-metrics-librato\"\n\ngo librato.Librato(metrics.DefaultRegistry,\n    10e9,                  // interval\n    \"example@example.com\", // account owner email address\n    \"token\",               // Librato API token\n    \"hostname\",            // source\n    []float64{0.95},       // percentiles to send\n    time.Millisecond,      // time unit\n)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Logger Instances\nDESCRIPTION: Shows how to create and configure multiple instances of Logrus logger for advanced logging scenarios.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sirupsen/logrus/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n  \"os\"\n  \"github.com/sirupsen/logrus\"\n)\n\nvar log = logrus.New()\n\nfunc main() {\n  log.Out = os.Stdout\n\n  log.WithFields(logrus.Fields{\n    \"animal\": \"walrus\",\n    \"size\":   10,\n  }).Info(\"A group of walrus emerges from the ocean\")\n}\n```\n\n----------------------------------------\n\nTITLE: URL Path Variables in Routes\nDESCRIPTION: Demonstrating URL path variables and patterns in route definitions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nr := mux.NewRouter()\nr.HandleFunc(\"/products/{key}\", ProductHandler)\nr.HandleFunc(\"/articles/{category}/\", ArticlesCategoryHandler)\nr.HandleFunc(\"/articles/{category}/{id:[0-9]+}\", ArticleHandler)\n```\n\n----------------------------------------\n\nTITLE: Configuring Thanos Storage Client with GCS Backend\nDESCRIPTION: Basic configuration example showing how to enable and configure the new Thanos storage client with Google Cloud Storage backend.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-storage-clients/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  use_thanos_objstore: true # enable the new storage clients\n  object_store:\n    gcs:\n      bucket_name: \"example-bucket\"\n```\n\n----------------------------------------\n\nTITLE: Comparing Manifests with Diff Command in Shell\nDESCRIPTION: This shell command compares the current and release manifest files to show the differences between them.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/scenarios/README.md#2025-04-19_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ndiff current-manifest.yaml release-manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Chart Repository\nDESCRIPTION: Command to update the Helm chart repository to ensure you have the latest version of the Loki chart.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Profiler Retry Handling Fix\nDESCRIPTION: Commit reference for the implementation of ensuring retries use the most up-to-date copy of the trailer in the Profiler service.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n([3ba9ebc](https://www.github.com/googleapis/google-cloud-go/commit/3ba9ebcee2b8b43cdf2c8f8a3d810516a604b363))\n```\n\n----------------------------------------\n\nTITLE: Adding Fork Remote to Local Repository\nDESCRIPTION: This snippet shows how to add a remote for your fork to the local Git repository. This is a necessary step for contributors to be able to push their changes to their own fork.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit remote add <YOUR_FORK> git@github.com:<YOUR_GITHUB_USERNAME>/opentelemetry-go\n```\n\n----------------------------------------\n\nTITLE: Installing UUID Package with Go\nDESCRIPTION: Command to install the UUID package using Go's package manager. This will add the github.com/google/uuid package to your Go project dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/google/uuid/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/google/uuid\n```\n\n----------------------------------------\n\nTITLE: Fixing EncryptionAlgorithm Enum Values\nDESCRIPTION: Directive to fix the EncryptionAlgorithm enum values by defining 'None' and 'AES256' as the only valid options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.parameters\n  transform: >\n    delete $.EncryptionAlgorithm.enum;\n    $.EncryptionAlgorithm.enum = [\n      \"None\",\n      \"AES256\"\n    ];\n```\n\n----------------------------------------\n\nTITLE: Installing universal-translator library in Go\nDESCRIPTION: This snippet shows how to install the universal-translator library using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-playground/universal-translator/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/go-playground/universal-translator\n```\n\n----------------------------------------\n\nTITLE: Listing Go Module Dependencies for Grafana Loki\nDESCRIPTION: This snippet lists all the Go module dependencies for the Grafana Loki project, including their versions and import paths. It covers a wide range of libraries from Prometheus components to various utility packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\n## explicit; go 1.22.7\ngithub.com/prometheus/prometheus/config\ngithub.com/prometheus/prometheus/discovery\ngithub.com/prometheus/prometheus/discovery/aws\ngithub.com/prometheus/prometheus/discovery/azure\ngithub.com/prometheus/prometheus/discovery/consul\ngithub.com/prometheus/prometheus/discovery/digitalocean\ngithub.com/prometheus/prometheus/discovery/dns\ngithub.com/prometheus/prometheus/discovery/file\ngithub.com/prometheus/prometheus/discovery/gce\ngithub.com/prometheus/prometheus/discovery/kubernetes\ngithub.com/prometheus/prometheus/discovery/marathon\ngithub.com/prometheus/prometheus/discovery/moby\ngithub.com/prometheus/prometheus/discovery/openstack\ngithub.com/prometheus/prometheus/discovery/refresh\ngithub.com/prometheus/prometheus/discovery/targetgroup\ngithub.com/prometheus/prometheus/discovery/triton\ngithub.com/prometheus/prometheus/discovery/zookeeper\ngithub.com/prometheus/prometheus/model/exemplar\ngithub.com/prometheus/prometheus/model/histogram\ngithub.com/prometheus/prometheus/model/labels\ngithub.com/prometheus/prometheus/model/metadata\ngithub.com/prometheus/prometheus/model/relabel\ngithub.com/prometheus/prometheus/model/rulefmt\ngithub.com/prometheus/prometheus/model/textparse\ngithub.com/prometheus/prometheus/model/timestamp\ngithub.com/prometheus/prometheus/model/value\ngithub.com/prometheus/prometheus/notifier\ngithub.com/prometheus/prometheus/prompb\ngithub.com/prometheus/prometheus/prompb/io/prometheus/client\ngithub.com/prometheus/prometheus/prompb/io/prometheus/write/v2\ngithub.com/prometheus/prometheus/promql\ngithub.com/prometheus/prometheus/promql/parser\ngithub.com/prometheus/prometheus/promql/parser/posrange\ngithub.com/prometheus/prometheus/rules\ngithub.com/prometheus/prometheus/scrape\ngithub.com/prometheus/prometheus/storage\ngithub.com/prometheus/prometheus/storage/remote\ngithub.com/prometheus/prometheus/storage/remote/azuread\ngithub.com/prometheus/prometheus/storage/remote/googleiam\ngithub.com/prometheus/prometheus/storage/remote/otlptranslator/prometheus\ngithub.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite\ngithub.com/prometheus/prometheus/template\ngithub.com/prometheus/prometheus/tsdb\ngithub.com/prometheus/prometheus/tsdb/chunkenc\ngithub.com/prometheus/prometheus/tsdb/chunks\ngithub.com/prometheus/prometheus/tsdb/encoding\ngithub.com/prometheus/prometheus/tsdb/errors\ngithub.com/prometheus/prometheus/tsdb/fileutil\ngithub.com/prometheus/prometheus/tsdb/goversion\ngithub.com/prometheus/prometheus/tsdb/index\ngithub.com/prometheus/prometheus/tsdb/record\ngithub.com/prometheus/prometheus/tsdb/tombstones\ngithub.com/prometheus/prometheus/tsdb/tsdbutil\ngithub.com/prometheus/prometheus/tsdb/wlog\ngithub.com/prometheus/prometheus/util/almost\ngithub.com/prometheus/prometheus/util/annotations\ngithub.com/prometheus/prometheus/util/convertnhcb\ngithub.com/prometheus/prometheus/util/gate\ngithub.com/prometheus/prometheus/util/httputil\ngithub.com/prometheus/prometheus/util/jsonutil\ngithub.com/prometheus/prometheus/util/logging\ngithub.com/prometheus/prometheus/util/notifications\ngithub.com/prometheus/prometheus/util/osutil\ngithub.com/prometheus/prometheus/util/pool\ngithub.com/prometheus/prometheus/util/stats\ngithub.com/prometheus/prometheus/util/strutil\ngithub.com/prometheus/prometheus/util/testutil\ngithub.com/prometheus/prometheus/util/treecache\ngithub.com/prometheus/prometheus/util/zeropool\ngithub.com/prometheus/prometheus/web/api/v1\n# github.com/prometheus/sigv4 v0.1.2\n## explicit; go 1.21\ngithub.com/prometheus/sigv4\n# github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475\n## explicit\ngithub.com/rcrowley/go-metrics\n# github.com/redis/go-redis/v9 v9.7.3\n## explicit; go 1.18\ngithub.com/redis/go-redis/v9\ngithub.com/redis/go-redis/v9/internal\ngithub.com/redis/go-redis/v9/internal/hashtag\ngithub.com/redis/go-redis/v9/internal/hscan\ngithub.com/redis/go-redis/v9/internal/pool\ngithub.com/redis/go-redis/v9/internal/proto\ngithub.com/redis/go-redis/v9/internal/rand\ngithub.com/redis/go-redis/v9/internal/util\n# github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec\n## explicit; go 1.12\ngithub.com/remyoudompheng/bigfft\n# github.com/richardartoul/molecule v1.0.0\n## explicit; go 1.13\ngithub.com/richardartoul/molecule\ngithub.com/richardartoul/molecule/src/codec\ngithub.com/richardartoul/molecule/src/protowire\n# github.com/rivo/uniseg v0.4.7\n## explicit; go 1.18\ngithub.com/rivo/uniseg\n# github.com/rs/xid v1.6.0\n## explicit; go 1.16\ngithub.com/rs/xid\n# github.com/sahilm/fuzzy v0.1.1\n## explicit\ngithub.com/sahilm/fuzzy\n# github.com/schollz/progressbar/v3 v3.18.0\n## explicit; go 1.22\ngithub.com/schollz/progressbar/v3\n# github.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529\n## explicit\ngithub.com/sean-/seed\n# github.com/segmentio/fasthash v1.0.3\n## explicit; go 1.11\ngithub.com/segmentio/fasthash/fnv1a\n# github.com/sercand/kuberesolver/v6 v6.0.0\n## explicit; go 1.22.0\ngithub.com/sercand/kuberesolver/v6\n# github.com/shirou/gopsutil/v4 v4.25.3\n## explicit; go 1.23\ngithub.com/shirou/gopsutil/v4/common\ngithub.com/shirou/gopsutil/v4/cpu\ngithub.com/shirou/gopsutil/v4/internal/common\ngithub.com/shirou/gopsutil/v4/mem\ngithub.com/shirou/gopsutil/v4/net\ngithub.com/shirou/gopsutil/v4/process\n# github.com/shopspring/decimal v1.4.0\n## explicit; go 1.10\ngithub.com/shopspring/decimal\n# github.com/shurcooL/httpfs v0.0.0-20230704072500-f1e31cf0ba5c\n## explicit; go 1.19\ngithub.com/shurcooL/httpfs/filter\ngithub.com/shurcooL/httpfs/union\ngithub.com/shurcooL/httpfs/vfsutil\n# github.com/shurcooL/vfsgen v0.0.0-20230704071429-0000e147ea92\n## explicit; go 1.19\ngithub.com/shurcooL/vfsgen\n# github.com/sirupsen/logrus v1.9.3\n## explicit; go 1.13\ngithub.com/sirupsen/logrus\n# github.com/sony/gobreaker/v2 v2.1.0\n## explicit; go 1.22.0\ngithub.com/sony/gobreaker/v2\n# github.com/spaolacci/murmur3 v1.1.0\n## explicit\ngithub.com/spaolacci/murmur3\n# github.com/spf13/afero v1.14.0\n## explicit; go 1.23.0\ngithub.com/spf13/afero\ngithub.com/spf13/afero/internal/common\ngithub.com/spf13/afero/mem\n# github.com/spf13/cast v1.7.1\n## explicit; go 1.19\ngithub.com/spf13/cast\n# github.com/spf13/pflag v1.0.6\n## explicit; go 1.12\ngithub.com/spf13/pflag\n# github.com/stretchr/objx v0.5.2\n## explicit; go 1.20\ngithub.com/stretchr/objx\n# github.com/stretchr/testify v1.10.0\n## explicit; go 1.17\ngithub.com/stretchr/testify/assert\ngithub.com/stretchr/testify/assert/yaml\ngithub.com/stretchr/testify/mock\ngithub.com/stretchr/testify/require\ngithub.com/stretchr/testify/suite\n# github.com/thanos-io/objstore v0.0.0-20250115091151-a54d0f04b42a => github.com/grafana/objstore v0.0.0-20250210100727-533688b5600d\n## explicit; go 1.22\ngithub.com/thanos-io/objstore\ngithub.com/thanos-io/objstore/clientutil\ngithub.com/thanos-io/objstore/exthttp\ngithub.com/thanos-io/objstore/providers/azure\ngithub.com/thanos-io/objstore/providers/bos\ngithub.com/thanos-io/objstore/providers/filesystem\ngithub.com/thanos-io/objstore/providers/gcs\ngithub.com/thanos-io/objstore/providers/oss\ngithub.com/thanos-io/objstore/providers/s3\ngithub.com/thanos-io/objstore/providers/swift\ngithub.com/thanos-io/objstore/tracing/opentracing\n# github.com/tjhop/slog-gokit v0.1.4\n## explicit; go 1.21\ngithub.com/tjhop/slog-gokit\n# github.com/tklauser/go-sysconf v0.3.13\n## explicit; go 1.18\ngithub.com/tklauser/go-sysconf\n# github.com/tklauser/numcpus v0.7.0\n## explicit; go 1.18\ngithub.com/tklauser/numcpus\n# github.com/twmb/franz-go v1.18.1\n## explicit; go 1.21\ngithub.com/twmb/franz-go/pkg/kbin\ngithub.com/twmb/franz-go/pkg/kerr\ngithub.com/twmb/franz-go/pkg/kgo\ngithub.com/twmb/franz-go/pkg/kgo/internal/sticky\ngithub.com/twmb/franz-go/pkg/kversion\ngithub.com/twmb/franz-go/pkg/sasl\ngithub.com/twmb/franz-go/pkg/sasl/plain\n# github.com/twmb/franz-go/pkg/kadm v1.16.0\n## explicit; go 1.21\ngithub.com/twmb/franz-go/pkg/kadm\n# github.com/twmb/franz-go/pkg/kfake v0.0.0-20241015013301-cea7aa5d8037\n## explicit; go 1.21\ngithub.com/twmb/franz-go/pkg/kfake\n# github.com/twmb/franz-go/pkg/kmsg v1.11.2\n## explicit; go 1.21\ngithub.com/twmb/franz-go/pkg/kmsg\ngithub.com/twmb/franz-go/pkg/kmsg/internal/kbin\n# github.com/twmb/franz-go/plugin/kotel v1.6.0\n## explicit; go 1.22.0\ngithub.com/twmb/franz-go/plugin/kotel\n# github.com/twmb/franz-go/plugin/kprom v1.2.0\n## explicit; go 1.21\ngithub.com/twmb/franz-go/plugin/kprom\n# github.com/uber/jaeger-client-go v2.30.0+incompatible\n## explicit\ngithub.com/uber/jaeger-client-go\ngithub.com/uber/jaeger-client-go/config\ngithub.com/uber/jaeger-client-go/internal/baggage\ngithub.com/uber/jaeger-client-go/internal/baggage/remote\ngithub.com/uber/jaeger-client-go/internal/reporterstats\ngithub.com/uber/jaeger-client-go/internal/spanlog\ngithub.com/uber/jaeger-client-go/internal/throttler\ngithub.com/uber/jaeger-client-go/internal/throttler/remote\ngithub.com/uber/jaeger-client-go/log\ngithub.com/uber/jaeger-client-go/rpcmetrics\ngithub.com/uber/jaeger-client-go/thrift\ngithub.com/uber/jaeger-client-go/thrift-gen/agent\ngithub.com/uber/jaeger-client-go/thrift-gen/baggage\ngithub.com/uber/jaeger-client-go/thrift-gen/jaeger\ngithub.com/uber/jaeger-client-go/thrift-gen/sampling\ngithub.com/uber/jaeger-client-go/thrift-gen/zipkincore\ngithub.com/uber/jaeger-client-go/transport\ngithub.com/uber/jaeger-client-go/utils\n# github.com/uber/jaeger-lib v2.4.1+incompatible\n## explicit\ngithub.com/uber/jaeger-lib/metrics\ngithub.com/uber/jaeger-lib/metrics/prometheus\n# github.com/ugorji/go/codec v1.1.7\n## explicit\ngithub.com/ugorji/go/codec\n# github.com/willf/bitset v1.1.11\n## explicit; go 1.14\ngithub.com/willf/bitset\n# github.com/willf/bloom v2.0.3+incompatible\n## explicit\ngithub.com/willf/bloom\n# github.com/x448/float16 v0.8.4\n## explicit; go 1.11\ngithub.com/x448/float16\n# github.com/xdg-go/pbkdf2 v1.0.0\n## explicit; go 1.9\ngithub.com/xdg-go/pbkdf2\n# github.com/xdg-go/scram v1.1.2\n## explicit; go 1.11\ngithub.com/xdg-go/scram\n# github.com/xdg-go/stringprep v1.0.4\n## explicit; go 1.11\ngithub.com/xdg-go/stringprep\n# github.com/xhit/go-str2duration/v2 v2.1.0\n## explicit; go 1.13\ngithub.com/xhit/go-str2duration/v2\n```\n\n----------------------------------------\n\nTITLE: Initializing GCP Resource Detector with OpenTelemetry in Go\nDESCRIPTION: This snippet demonstrates how to initialize the GCP resource detector along with custom attributes in a Go application using OpenTelemetry. It includes error handling and setting up a tracer provider with the detected resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/contrib/detectors/gcp/README.md#2025-04-19_snippet_0\n\nLANGUAGE: golang\nCODE:\n```\nctx := context.Background()\n// Detect your resources\nres, err := resource.New(ctx,\n    // Use the GCP resource detector!\n    resource.WithDetectors(gcp.NewDetector()),\n    // Keep the default detectors\n    resource.WithTelemetrySDK(),\n    // Add your own custom attributes to identify your application\n    resource.WithAttributes(\n        semconv.ServiceNameKey.String(\"my-application\"),\n        semconv.ServiceNamespaceKey.String(\"my-company-frontend-team\"),\n    ),\n)\nif err != nil {\n    // Handle err\n}\n// Use the resource in your tracerprovider (or meterprovider)\ntp := trace.NewTracerProvider(\n    // ... other options\n    trace.WithResource(res),\n)\n```\n\n----------------------------------------\n\nTITLE: Handling TraceState Length in OpenTelemetry Go\nDESCRIPTION: Example showing the transition from the removed IsEmpty method to the new Len method on the TraceState type in the OpenTelemetry Go trace package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_26\n\nLANGUAGE: Go\nCODE:\n```\n// Old (removed) approach\nif traceState.IsEmpty() {\n    // handle empty state\n}\n\n// New recommended approach\nif traceState.Len() == 0 {\n    // handle empty state\n}\n```\n\n----------------------------------------\n\nTITLE: Supporting Multiple Balance Strategies for Kafka Consumer in Go\nDESCRIPTION: Adds support for using multiple balance strategies in the Kafka consumer implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nfeat(consumer): support multiple balance strategies\n```\n\n----------------------------------------\n\nTITLE: Creating Authentication Credentials with Azure Identity\nDESCRIPTION: Code snippet demonstrating how to create default Azure credentials for authentication with Azure services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ncred, err := azidentity.NewDefaultAzureCredential(nil)\n```\n\n----------------------------------------\n\nTITLE: Using MatchUnvalidated Function in Doublestar\nDESCRIPTION: Go function signature for MatchUnvalidated, which provides a performance improvement by skipping pattern validation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc MatchUnvalidated(pattern, name string) bool\n```\n\n----------------------------------------\n\nTITLE: Generating Random Color Palettes in Go\nDESCRIPTION: This snippet demonstrates how to generate random color palettes using the go-colorful library. It shows various methods for creating palettes, including warm, happy, and soft palettes, as well as a custom brownish palette.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\npal1, err1 := colorful.WarmPalette(10)\npal2 := colorful.FastWarmPalette(10)\npal3, err3 := colorful.HappyPalette(10)\npal4 := colorful.FastHappyPalette(10)\npal5, err5 := colorful.SoftPalette(10)\n\nfunc isbrowny(l, a, b float64) bool {\n    h, c, L := colorful.LabToHcl(l, a, b)\n    return 10.0 < h && h < 50.0 && 0.1 < c && c < 0.5 && L < 0.5\n}\n// Since the above function is pretty restrictive, we set ManySamples to true.\nbrownies := colorful.SoftPaletteEx(10, colorful.SoftPaletteSettings{isbrowny, 50, true})\n```\n\n----------------------------------------\n\nTITLE: Creating Extended Swift Secret with Project and Region Information\nDESCRIPTION: Creates a Kubernetes secret for Swift with additional project-specific data and region information. This extended configuration includes all basic Swift parameters plus project ID, project name, project domain details, and region specification.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_15\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-swift \\\n  --from-literal=auth_url=\"<SWIFT_AUTH_URL>\" \\\n  --from-literal=username=\"<SWIFT_USERNAMEClaim>\" \\\n  --from-literal=user_domain_name=\"<SWIFT_USER_DOMAIN_NAME>\" \\\n  --from-literal=user_domain_id=\"<SWIFT_USER_DOMAIN_ID>\" \\\n  --from-literal=user_id=\"<SWIFT_USER_ID>\" \\\n  --from-literal=password=\"<SWIFT_PASSWORD>\" \\\n  --from-literal=domain_id=\"<SWIFT_DOMAIN_ID>\" \\\n  --from-literal=domain_name=\"<SWIFT_DOMAIN_NAME>\" \\\n  --from-literal=container_name=\"<SWIFT_CONTAINER_NAME>\" \\\n  --from-literal=project_id=\"<SWIFT_PROJECT_ID>\" \\\n  --from-literal=project_name=\"<SWIFT_PROJECT_NAME>\" \\\n  --from-literal=project_domain_id=\"<SWIFT_PROJECT_DOMAIN_ID>\" \\\n  --from-literal=project_domain_name=\"<SWIFT_PROJECT_DOMAIN_name>\" \\\n  --from-literal=region=\"<SWIFT_REGION>\" \\\n```\n\n----------------------------------------\n\nTITLE: Testing for False Conditions in GopherLua\nDESCRIPTION: Example showing how to check for falsy values (nil or false) in GopherLua using the LVIsFalse and LVAsBool helper functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nlv := L.Get(-1) // get the value at the top of the stack\nif lua.LVIsFalse(lv) { // lv is nil or false\n}\n\nif lua.LVAsBool(lv) { // lv is neither nil nor false\n}\n```\n\n----------------------------------------\n\nTITLE: Generic Actor Definition for Hierarchical Queues in Go\nDESCRIPTION: Generic representation of actor identifiers in the hierarchical queue structure, showing how an actor can be represented at multiple queue levels from L0 (root) to Ln (deepest level).\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/lids/0003-QueryFairnessInScheduler.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nactorN := []string{\"L0 Queue\", \"L1 Queue\", \"L2 Queue\", ... \"Ln Queue\"}\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Structure for Loki UI in Markdown\nDESCRIPTION: This code snippet shows the folder structure of the Loki UI project, outlining the organization of components, pages, hooks, contexts, and utility functions.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/frontend/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nsrc/\n├── components/           # React components\n│   ├── ui/              # Shadcn UI components\n│   │   ├── errors/      # Error handling components\n│   │   └── breadcrumbs/ # Navigation breadcrumbs\n│   ├── shared/          # Shared components used across pages\n│   │   └── {pagename}/  # Page-specific components\n│   ├── common/          # Truly reusable components\n│   └── features/        # Complex feature modules\n│       └── theme/       # Theme-related components and logic\n├── pages/               # Page components and routes\n├── layout/              # Layout components\n├── hooks/               # Custom React hooks\n├── contexts/            # React context providers\n├── lib/                # Utility functions and constants\n└── types/              # TypeScript type definitions\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Actor with Request Hash for Alternative Sharding Approach\nDESCRIPTION: Example of how request sharding could be implemented in the hierarchical model by adding a request hash as an additional level in the actor hierarchy, enabling per-request QoS control.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/lids/0003-QueryFairnessInScheduler.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nactor := []string{\"tenant\", \"user\", \"request_hash\"}\n```\n\n----------------------------------------\n\nTITLE: Implementing ValidatePathPattern Function in Go\nDESCRIPTION: Function to validate glob patterns using OS-specific path separators.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nfunc ValidatePathPattern(s string) bool\n```\n\n----------------------------------------\n\nTITLE: Incorrect IP Address Matching in LogQL\nDESCRIPTION: An example of a LogQL line filter that incorrectly matches IP addresses due to partial string matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/ip.md#2025-04-19_snippet_1\n\nLANGUAGE: logql\nCODE:\n```\n{job_name=\"myapp\"} |= \"3.180.71.3\"\n```\n\n----------------------------------------\n\nTITLE: Using GoUtils Initials Function in Go\nDESCRIPTION: Demonstrates how to use the Initials function from GoUtils to extract initials from a full name string. This example shows basic usage without error handling since the function doesn't return errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/goutils/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/Masterminds/goutils\"\n)\n\nfunc main() {\n\n    // EXAMPLE 1: A goutils function which returns no errors\n    fmt.Println (goutils.Initials(\"John Doe Foo\")) // Prints out \"JDF\"\n\n}\n```\n\n----------------------------------------\n\nTITLE: Protected Interface Implementation List\nDESCRIPTION: This snippet lists the interfaces that are prevented from being implemented by end-users, as part of the API stability and encapsulation strategy.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_38\n\nLANGUAGE: markdown\nCODE:\n```\n\"otel/exporters/otlp/otlphttp\".Option\n\"otel/exporters/stdout\".Option\n\"otel/oteltest\".Option\n\"otel/trace\".TracerOption\n\"otel/trace\".SpanOption\n\"otel/trace\".EventOption\n\"otel/trace\".LifeCycleOption\n\"otel/trace\".InstrumentationOption\n\"otel/sdk/resource\".Option\n\"otel/sdk/trace\".ParentBasedSamplerOption\n\"otel/sdk/trace\".ReadOnlySpan\n\"otel/sdk/trace\".ReadWriteSpan\n```\n\n----------------------------------------\n\nTITLE: Disabling Exemplars in Console\nDESCRIPTION: Example showing how to disable the exemplars feature by unsetting the OTEL_GO_X_EXEMPLAR environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nunset OTEL_GO_X_EXEMPLAR\n```\n\n----------------------------------------\n\nTITLE: Monitoring HTTP Metrics Request in Grafana Loki\nDESCRIPTION: Debug log entry showing a completed HTTP request to the /metrics endpoint. The log includes details about the request duration, remote client address, HTTP method, status code, and user agent.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"duration\":20950259,\"level\":\"debug\",\"method\":\"GET\",\"msg\":\"request completed\",\"referer\":\"\",\"remote\":\"10.136.105.40:52702\",\"request\":\"/metrics\",\"status\":200,\"time\":\"2024-04-16T15:03:32Z\",\"user-agent\":\"GrafanaAgent/v0.40.3 (flow; linux; helm)\"}\n```\n\n----------------------------------------\n\nTITLE: Error Handling Table for FSE Compression in Markdown\nDESCRIPTION: A markdown table showing possible error values returned by the FSE compressor and their descriptions. This documents the normal operation error states that need to be handled by users of the library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/fse/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Error               | Description                                                                 |\n|---------------------|-----------------------------------------------------------------------------|\n| `<nil>`             | Everything ok, output is returned                                           |\n| `ErrIncompressible` | Returned when input is judged to be too hard to compress                    |\n| `ErrUseRLE`         | Returned from the compressor when the input is a single byte value repeated |\n| `(error)`           | An internal error occurred.                                                 |\n```\n\n----------------------------------------\n\nTITLE: Updated Network Type Definition in Server Creation Options\nDESCRIPTION: Changed the type of Networks field in server creation options from slice of Network to interface{} to support creating servers without networks\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\ncompute/v2/servers.CreateOpts.Networks interface{}\n```\n\n----------------------------------------\n\nTITLE: Convert Time Headers to GMT\nDESCRIPTION: Converts time values to GMT for If-Modified-Since and If-Unmodified-Since headers across multiple client types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: \n  - zz_container_client.go\n  - zz_blob_client.go\n  - zz_appendblob_client.go\n  - zz_blockblob_client.go\n  - zz_pageblob_client.go\n  where: $\n  transform: >\n    return $.\n      replace(/req\\.Raw\\(\\)\\.Header\\[\"If-Modified-Since\"\\]\\s+=\\s+\\[\\]string\\{modifiedAccessConditions\\.IfModifiedSince\\.Format\\(time\\.RFC1123\\)\\}/g, \n      `req.Raw().Header[\"If-Modified-Since\"] = []string{(*modifiedAccessConditions.IfModifiedSince).In(gmt).Format(time.RFC1123)}`).\n      replace(/req\\.Raw\\(\\)\\.Header\\[\"If-Unmodified-Since\"\\]\\s+=\\s+\\[\\]string\\{modifiedAccessConditions\\.IfUnmodifiedSince\\.Format\\(time\\.RFC1123\\)\\}/g, \n      `req.Raw().Header[\"If-Unmodified-Since\"] = []string{(*modifiedAccessConditions.IfUnmodifiedSince).In(gmt).Format(time.RFC1123)}`).\n      replace(/req\\.Raw\\(\\)\\.Header\\[\"x-ms-source-if-modified-since\"\\]\\s+=\\s+\\[\\]string\\{sourceModifiedAccessConditions\\.SourceIfModifiedSince\\.Format\\(time\\.RFC1123\\)\\}/g, \n      `req.Raw().Header[\"x-ms-source-if-modified-since\"] = []string{(*sourceModifiedAccessConditions.SourceIfModifiedSince).In(gmt).Format(time.RFC1123)}`).\n      replace(/req\\.Raw\\(\\)\\.Header\\[\"x-ms-source-if-unmodified-since\"\\]\\s+=\\s+\\[\\]string\\{sourceModifiedAccessConditions\\.SourceIfUnmodifiedSince\\.Format\\(time\\.RFC1123\\)\\}/g, \n      `req.Raw().Header[\"x-ms-source-if-unmodified-since\"] = []string{(*sourceModifiedAccessConditions.SourceIfUnmodifiedSince).In(gmt).Format(time.RFC1123)}`).\n      replace(/req\\.Raw\\(\\)\\.Header\\[\"x-ms-immutability-policy-until-date\"\\]\\s+=\\s+\\[\\]string\\{options\\.ImmutabilityPolicyExpiry\\.Format\\(time\\.RFC1123\\)\\}/g, \n      `req.Raw().Header[\"x-ms-immutability-policy-until-date\"] = []string{(*options.ImmutabilityPolicyExpiry).In(gmt).Format(time.RFC1123)}`);\n```\n\n----------------------------------------\n\nTITLE: Importing pflag as a replacement for Go's flag package\nDESCRIPTION: Import statement to use pflag as a drop-in replacement for Go's native flag package. This pattern allows existing code to work without changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport flag \"github.com/spf13/pflag\"\n```\n\n----------------------------------------\n\nTITLE: Cloning the OpenTelemetry Go Repository\nDESCRIPTION: This snippet shows how to clone the OpenTelemetry Go repository using Git. It's the first step for contributors to get the source code locally.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/open-telemetry/opentelemetry-go.git\n```\n\n----------------------------------------\n\nTITLE: Supporting Custom Headers in Prometheus Input\nDESCRIPTION: Adds support for custom headers in the Prometheus input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.prometheus\" Add support for custom header\n```\n\n----------------------------------------\n\nTITLE: Modifying BatchSpanProcessor ForceFlush in Go\nDESCRIPTION: Update to BatchSpanProcessor.ForceFlush to abort after timeout or cancellation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_35\n\nLANGUAGE: Go\nCODE:\n```\nerr := bsp.ForceFlush(ctx)\n```\n\n----------------------------------------\n\nTITLE: Examining HTTP Client Connection Errors in hgrun Application\nDESCRIPTION: Error logs from the hgrun application showing failed HTTP requests to the Grafana health endpoint. The application repeatedly attempts to connect to the Grafana API but receives 'connection refused' errors, indicating that the Grafana service at 127.0.0.1:3000 is not running or not accessible.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_36\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-05-07T11:59:30.205006192Z level=error caller=http_client.go:56 app=hgrun hgrun_version=0.1.453-59-gf3f63162a msg=\"request failed\" error=\"Get \\\"http://127.0.0.1:3000/api/health\\\": dial tcp 127.0.0.1:3000: connect: connection refused\" method=GET url=http://127.0.0.1:3000/api/health\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Helm Deployment Command\nDESCRIPTION: Command to deploy Fluent Bit using Helm in a Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-plugin.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm install fluent-bit fluent/fluent-bit -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a Span from Context in Go\nDESCRIPTION: Shows how to create a new span from an existing context.Context. This is useful for propagating trace information through your application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing/opentracing-go/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc xyz(ctx context.Context, ...) {\n    ...\n    span, ctx := opentracing.StartSpanFromContext(ctx, \"operation_name\")\n    defer span.Finish()\n    span.LogFields(\n        log.String(\"event\", \"soft error\"),\n        log.String(\"type\", \"cache timeout\"),\n        log.Int(\"waited.millis\", 1500))\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Update Method for Bubble Tea Model\nDESCRIPTION: Defines the Update method which handles incoming messages and updates the model accordingly. It processes key presses to move the cursor, toggle selections, and quit the application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n    switch msg := msg.(type) {\n\n    // Is it a key press?\n    case tea.KeyMsg:\n\n        // Cool, what was the actual key pressed?\n        switch msg.String() {\n\n        // These keys should exit the program.\n        case \"ctrl+c\", \"q\":\n            return m, tea.Quit\n\n        // The \"up\" and \"k\" keys move the cursor up\n        case \"up\", \"k\":\n            if m.cursor > 0 {\n                m.cursor--\n            }\n\n        // The \"down\" and \"j\" keys move the cursor down\n        case \"down\", \"j\":\n            if m.cursor < len(m.choices)-1 {\n                m.cursor++\n            }\n\n        // The \"enter\" key and the spacebar (a literal space) toggle\n        // the selected state for the item that the cursor is pointing at.\n        case \"enter\", \" \":\n            _, ok := m.selected[m.cursor]\n            if ok {\n                delete(m.selected, m.cursor)\n            } else {\n                m.selected[m.cursor] = struct{}{}\n            }\n        }\n    }\n\n    // Return the updated model to the Bubble Tea runtime for processing.\n    // Note that we're not returning a command.\n    return m, nil\n}\n```\n\n----------------------------------------\n\nTITLE: XXHash Digest Methods in Go\nDESCRIPTION: Implementation of hash.Hash64 interface methods for the Digest type, allowing incremental hash computation with both byte slices and strings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/cespare/xxhash/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc (*Digest) Write([]byte) (int, error)\nfunc (*Digest) WriteString(string) (int, error)\nfunc (*Digest) Sum64() uint64\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Drop Rules for Migration\nDESCRIPTION: Relabel configuration to exclude logs from the new Loki deployment to prevent duplicate log collection during migration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- source_labels:\n    - \"__meta_kubernetes_pod_label_app_kubernetes_io_component\"\n  regex: \"(canary|read|write)\"\n  action: \"drop\"\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud IAM API Go Client Library\nDESCRIPTION: Command to install the Google Cloud IAM Go client library using the go get command. This adds the cloud.google.com/go/iam package to your Go project dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/iam/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get cloud.google.com/go/iam\n```\n\n----------------------------------------\n\nTITLE: Commit References in Markdown\nDESCRIPTION: Various Git commit references and issue numbers documenting changes in Loki 3.2, including API updates, Bloom filters implementation, and distributor improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-2.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[ce71f1c](https://github.com/grafana/loki/commit/ce71f1cf954625cac2af7c2d0c335248b01185a3)\n[ce02cc2](https://github.com/grafana/loki/commit/ce02cc254abc641dc40831b28c81199526581085)\n[7c1a849](https://github.com/grafana/loki/commit/7c1a8493b3837396d085547a42d8260271f1d68a)\n```\n\n----------------------------------------\n\nTITLE: Documenting SeekLowerBound Feature in Markdown\nDESCRIPTION: Describes the addition of 'SeekLowerBound' functionality in version 1.1.0, enabling range scans in the go-immutable-radix library. This feature was introduced through a GitHub pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-immutable-radix/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* Add `SeekLowerBound` to allow for range scans. [[GH-24](https://github.com/hashicorp/go-immutable-radix/pull/24)]\n```\n\n----------------------------------------\n\nTITLE: File Reading Pattern in Go\nDESCRIPTION: Example of reading and parsing files from /proc filesystem using bufio.Scanner.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n    data, err := util.ReadFileNoStat(\"/proc/cpuinfo\")\n    if err != nil {\n        return err\n    }\n    reader := bytes.NewReader(data)\n    scanner := bufio.NewScanner(reader)\n```\n\n----------------------------------------\n\nTITLE: Running Bubble Tea Application in Go\nDESCRIPTION: Defines the main function which creates a new Bubble Tea program with the initial model and runs it. It also handles potential errors during execution.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n    p := tea.NewProgram(initialModel())\n    if _, err := p.Run(); err != nil {\n        fmt.Printf(\"Alas, there's been an error: %v\", err)\n        os.Exit(1)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Authentication Lease Revocation Logs\nDESCRIPTION: Log entries showing the expiration and revocation of Kubernetes authentication leases. Each entry contains a timestamp, log level, and lease ID with datacenter information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_3\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:56:47.298Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/hd2f5510047f35eb268f2bb07cbbd1dd18053fd0bde50bd7c1777ec6ffb2d8b97\n2024-05-07T10:56:47.226Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/h065a00dc4b71aeabbe11eda29adc7834fc1e19f0b587481c7ace31b1bbc7f134\n```\n\n----------------------------------------\n\nTITLE: Complex Kingpin Example with Commands and Subcommands in Go\nDESCRIPTION: A comprehensive example showing how to create a complex command-line application with Kingpin. Includes global flags, subcommands, and per-subcommand flags for a chat application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n  \"os\"\n  \"strings\"\n  \"github.com/alecthomas/kingpin/v2\"\n)\n\nvar (\n  app      = kingpin.New(\"chat\", \"A command-line chat application.\")\n  debug    = app.Flag(\"debug\", \"Enable debug mode.\").Bool()\n  serverIP = app.Flag(\"server\", \"Server address.\").Default(\"127.0.0.1\").IP()\n\n  register     = app.Command(\"register\", \"Register a new user.\")\n  registerNick = register.Arg(\"nick\", \"Nickname for user.\").Required().String()\n  registerName = register.Arg(\"name\", \"Name of user.\").Required().String()\n\n  post        = app.Command(\"post\", \"Post a message to a channel.\")\n  postImage   = post.Flag(\"image\", \"Image to post.\").File()\n  postChannel = post.Arg(\"channel\", \"Channel to post to.\").Required().String()\n  postText    = post.Arg(\"text\", \"Text to post.\").Strings()\n)\n\nfunc main() {\n  switch kingpin.MustParse(app.Parse(os.Args[1:])) {\n  // Register user\n  case register.FullCommand():\n    println(*registerNick)\n\n  // Post message\n  case post.FullCommand():\n    if *postImage != nil {\n    }\n    text := strings.Join(*postText, \" \")\n    println(\"Post:\", text)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Writing CSS for HTML Formatting in Go\nDESCRIPTION: Snippet demonstrating how to generate and write CSS when using the HTML formatter with classes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nformatter := html.New(html.WithClasses(true))\nerr := formatter.WriteCSS(w, style)\n```\n\n----------------------------------------\n\nTITLE: Documenting Clock Package Purpose\nDESCRIPTION: Describes the clock package purpose as an interface for time-based operations with mocking capabilities. Notes that it's a copy of k8s.io/utils/clock to avoid circular dependencies between k8s packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/klog/v2/internal/clock/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Clock\n\nThis package provides an interface for time-based operations.  It allows\nmocking time for testing.\n\nThis is a copy of k8s.io/utils/clock. We have to copy it to avoid a circular\ndependency (k8s.io/klog -> k8s.io/utils -> k8s.io/klog).\n```\n\n----------------------------------------\n\nTITLE: Constructing Objects in CEL\nDESCRIPTION: This snippet shows how to construct objects in CEL using a syntax similar to JSON. It creates a GeoPoint object with latitude and longitude properties.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cel.dev/expr/README.md#2025-04-19_snippet_1\n\nLANGUAGE: c\nCODE:\n```\ncommon.GeoPoint{ latitude: 10.0, longitude: -5.5 }\n```\n\n----------------------------------------\n\nTITLE: Using Uber Atomic Types\nDESCRIPTION: Example showing basic usage of atomic types including storing values, performing arithmetic operations, and compare-and-swap operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar atom atomic.Uint32\natom.Store(42)\natom.Sub(2)\natom.CAS(40, 11)\n```\n\n----------------------------------------\n\nTITLE: Using Concurrent Map in Go\nDESCRIPTION: Demonstrates usage of concurrent.Map as a thread-safe map implementation that provides compatibility for Go versions below 1.9. Shows basic store and load operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/modern-go/concurrent/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nm := concurrent.NewMap()\nm.Store(\"hello\", \"world\")\nelem, found := m.Load(\"hello\")\n// elem will be \"world\"\n// found will be true\n```\n\n----------------------------------------\n\nTITLE: Applying Loki Secrets to Kubernetes Cluster\nDESCRIPTION: Command to apply the Kubernetes secrets file containing GCP service account credentials to the cluster. This step is necessary before deploying the Loki Helm chart.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/docs/examples/oss/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f loki-secrets.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets for Observability Backend\nDESCRIPTION: Commands to create Kubernetes secrets for storing Prometheus and Loki credentials in the meta namespace.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/meta-monitoring/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# For Grafana Cloud or self-managed stack\nkubectl create namespace meta\nkubectl create secret generic metrics --namespace meta \\\n  --from-literal=username='YOUR_PROMETHEUS_USERNAME' \\\n  --from-literal=password='YOUR_PROMETHEUS_PASSWORD'\n\nkubectl create secret generic logs --namespace meta \\\n  --from-literal=username='YOUR_LOKI_USERNAME' \\\n  --from-literal=password='YOUR_LOKI_PASSWORD'\n```\n\n----------------------------------------\n\nTITLE: Configuring Fluent Bit Plugins Path\nDESCRIPTION: This configuration snippet shows how to specify the path to the Loki output plugin in the Fluent Bit plugins configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_5\n\nLANGUAGE: ini\nCODE:\n```\n[PLUGINS]\n    Path /path/to/built/out_grafana_loki.so\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Managed Identities using Azure CLI\nDESCRIPTION: This shell command helps lookup managed identity IDs by listing all service principals of type 'ManagedIdentity', which is useful for obtaining the ID needed when assigning roles.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\naz ad sp list --all --filter \"servicePrincipalType eq 'ManagedIdentity'\"\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Zstandard Decoder Performance in Go\nDESCRIPTION: This code snippet shows benchmark results for the Zstandard decoder implementation. It includes streaming decodes and smaller input decodes, demonstrating performance metrics such as nanoseconds per operation, MB/s, and memory allocations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nBenchmarkDecoderSilesia-32    \t                   5\t 206878840 ns/op\t1024.50 MB/s\t   49808 B/op\t      43 allocs/op\nBenchmarkDecoderEnwik9-32                          1\t1271809000 ns/op\t 786.28 MB/s\t   72048 B/op\t      52 allocs/op\n\nConcurrent blocks, performance:\n\nBenchmarkDecoder_DecodeAllParallel/kppkn.gtb.zst-32         \t   67356\t     17857 ns/op\t10321.96 MB/s\t        22.48 pct\t     102 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/geo.protodata.zst-32     \t  266656\t      4421 ns/op\t26823.21 MB/s\t        11.89 pct\t      19 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/plrabn12.txt.zst-32      \t   20992\t     56842 ns/op\t8477.17 MB/s\t        39.90 pct\t     754 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/lcet10.txt.zst-32        \t   27456\t     43932 ns/op\t9714.01 MB/s\t        33.27 pct\t     524 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/asyoulik.txt.zst-32      \t   78432\t     15047 ns/op\t8319.15 MB/s\t        40.34 pct\t      66 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/alice29.txt.zst-32       \t   65800\t     18436 ns/op\t8249.63 MB/s\t        37.75 pct\t      88 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/html_x_4.zst-32          \t  102993\t     11523 ns/op\t35546.09 MB/s\t         3.637 pct\t     143 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/paper-100k.pdf.zst-32    \t 1000000\t      1070 ns/op\t95720.98 MB/s\t        80.53 pct\t       3 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/fireworks.jpeg.zst-32    \t  749802\t      1752 ns/op\t70272.35 MB/s\t       100.0 pct\t       5 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/urls.10K.zst-32          \t   22640\t     52934 ns/op\t13263.37 MB/s\t        26.25 pct\t    1014 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/html.zst-32              \t  226412\t      5232 ns/op\t19572.27 MB/s\t        14.49 pct\t      20 B/op\t       0 allocs/op\nBenchmarkDecoder_DecodeAllParallel/comp-data.bin.zst-32     \t  923041\t      1276 ns/op\t3194.71 MB/s\t        31.26 pct\t       0 B/op\t       0 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Installing Gorilla Mux Package in Go\nDESCRIPTION: Command to install the gorilla/mux package using Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get -u github.com/gorilla/mux\n```\n\n----------------------------------------\n\nTITLE: Adding 304 Response for Blob Operation\nDESCRIPTION: Directive to add a 304 Not Modified response with appropriate headers to the blob GET operation for conditional requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $[\"x-ms-paths\"][\"/{containerName}/{blob}\"]\n  transform: >\n    $.get.responses[\"304\"] = {\n      \"description\": \"The condition specified using HTTP conditional header(s) is not met.\",\n      \"x-az-response-name\": \"ConditionNotMetError\",\n      \"headers\": { \"x-ms-error-code\": { \"x-ms-client-name\": \"ErrorCode\", \"type\": \"string\" } }\n    };\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies\nDESCRIPTION: Defines required Python packages with pinned versions - prometheus_client from a specific git commit and pytz version 2025.2.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/bigtable-backup/requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-e git://github.com/prometheus/client_python.git@a8f5c80f651ea570577c364203e0edbef67db727#egg=prometheus_client\npytz==2025.2\n```\n\n----------------------------------------\n\nTITLE: Accessing Grafana Dashboard via Port Forwarding\nDESCRIPTION: Kubectl command to set up port forwarding for accessing the Grafana dashboard of the meta-monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward -n meta svc/grafana 3000:3000\n```\n\n----------------------------------------\n\nTITLE: Example Program with Mixed Workload\nDESCRIPTION: Sample program demonstrating a mixed workload scenario with network requests, CPU-intensive tasks, and sleep operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/felixge/fgprof/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n\tfor {\n\t\t// Http request to a web service that might be slow.\n\t\tslowNetworkRequest()\n\t\t// Some heavy CPU computation.\n\t\tcpuIntensiveTask()\n\t\t// Poorly named function that you don't understand yet.\n\t\tweirdFunction()\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Detecting Incompatible Changes with Gorelease in Shell\nDESCRIPTION: This command uses the gorelease tool to check for incompatible changes in the code merged since the last release, excluding changes in testing packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/RELEASE.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngorelease | grep -B2 -A0 '^## incompatible changes'\n```\n\n----------------------------------------\n\nTITLE: Running Nomad Job for Loki Deployment\nDESCRIPTION: Command to deploy Loki using Nomad job scheduler with default configuration settings.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki-simple/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnomad run job.nomad.hcl\n```\n\n----------------------------------------\n\nTITLE: Bitmap Structure for Field Optimization\nDESCRIPTION: Shows the structure of the bitmap used for optimizing field lookups. Each field is assigned a bit position, allowing for efficient presence checking using bitwise operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n[maxFieldKeyLength][256]int8\n```\n\n----------------------------------------\n\nTITLE: Implementing SplitPattern Function in Go\nDESCRIPTION: Utility function that splits a pattern into base path and pattern components for use with filesystem operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nfunc SplitPattern(p string) (base, pattern string)\n```\n\n----------------------------------------\n\nTITLE: Using JWT Validator in Go for Independent Claim Validation\nDESCRIPTION: Shows how to use the new Validator struct in v5.0.0 to perform claim validation independently of token parsing or verification.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar v = jwt.NewValidator(jwt.WithLeeway(5*time.Second))\nv.Validate(myClaims)\n```\n\n----------------------------------------\n\nTITLE: Loading Data into BigQuery from GCS in Go\nDESCRIPTION: This code shows how to load data from Google Cloud Storage into a BigQuery table using the new Table.LoaderFrom method. It replaces the deprecated Client.Copy method for this specific use case.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_39\n\nLANGUAGE: go\nCODE:\n```\nloader := table.LoaderFrom(gcsRef)\nloader.WriteDisposition = bigquery.WriteTruncate\nloader.Run(ctx)\n```\n\n----------------------------------------\n\nTITLE: Writing Conventional Commit Messages\nDESCRIPTION: Example of a commit message following the Conventional Commits style. The scope should be the name of the package affected by the changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nfeat(functions): add gophers codelab\n```\n\n----------------------------------------\n\nTITLE: Displaying PkgGoDev Badge for OpenTelemetry Go Propagation Package\nDESCRIPTION: This markdown snippet displays a badge that links to the package documentation for the OpenTelemetry Go propagation package on pkg.go.dev. It provides a visual indicator of the package's documentation status and a quick link for developers to access the full documentation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/propagation/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/propagation)](https://pkg.go.dev/go.opentelemetry.io/otel/propagation)\n```\n\n----------------------------------------\n\nTITLE: Adding Iterator Package for Sequence Types in Go\nDESCRIPTION: Adds a new package to help work with new iter.Seq types in the gax-go library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* **iterator:** add package to help work with new iter.Seq types ([#358](https://github.com/googleapis/gax-go/issues/358)) ([6bccdaa](https://github.com/googleapis/gax-go/commit/6bccdaac011fe6fd147e4eb533a8e6520b7d4acc))\n```\n\n----------------------------------------\n\nTITLE: Using Standard Colors in Go\nDESCRIPTION: Examples of using basic color helper functions for terminal output\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Print with default helper functions\ncolor.Cyan(\"Prints text in cyan.\")\n\n// A newline will be appended automatically\ncolor.Blue(\"Prints %s in blue.\", \"text\")\n\n// These are using the default foreground colors\ncolor.Red(\"We have red\")\ncolor.Magenta(\"And many others ..\")\n```\n\n----------------------------------------\n\nTITLE: Previous Default Ingester Configuration in Loki\nDESCRIPTION: The previous default configuration for Loki's ingester, showing the default values for max_transfer_retries and WAL settings before the changes in version 2.4.0.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ningester:\n  max_transfer_retries: 10\n  wal:\n    enabled: false\n```\n\n----------------------------------------\n\nTITLE: Listing StatefulSets\nDESCRIPTION: Retrieves a list of all statefulsets in the cluster, which can be used to check Loki component statefulsets.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get statefulsets\n```\n\n----------------------------------------\n\nTITLE: Update Content CRC64 Header Response Name\nDESCRIPTION: Sets client name for x-ms-content-crc64 header response to 'ContentCRC64'.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.x-ms-paths.*.*.responses.*.headers.x-ms-content-crc64\n  transform: >\n    $[\"x-ms-client-name\"] = \"ContentCRC64\"\n```\n\n----------------------------------------\n\nTITLE: Testing Translation Service with Fake Server in Go\nDESCRIPTION: Test setup demonstrating how to use the fake translation server. Includes server initialization, client configuration, and test execution.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/testing.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport (\n        \"context\"\n        \"net\"\n        \"testing\"\n\n        translate \"cloud.google.com/go/translate/apiv3\"\n        \"google.golang.org/api/option\"\n        translatepb \"google.golang.org/genproto/googleapis/cloud/translate/v3\"\n        \"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n)\n\nfunc TestTranslateTextWithConcreteClient(t *testing.T) {\n        ctx := context.Background()\n\n        // Setup the fake server.\n        fakeTranslationServer := &fakeTranslationServer{}\n        l, err := net.Listen(\"tcp\", \"localhost:0\")\n        if err != nil {\n                t.Fatal(err)\n        }\n        gsrv := grpc.NewServer()\n        translatepb.RegisterTranslationServiceServer(gsrv, fakeTranslationServer)\n        fakeServerAddr := l.Addr().String()\n        go func() {\n                if err := gsrv.Serve(l); err != nil {\n                        panic(err)\n                }\n        }()\n\n        // Create a client.\n        client, err := translate.NewTranslationClient(ctx,\n                option.WithEndpoint(fakeServerAddr),\n                option.WithoutAuthentication(),\n                option.WithGRPCDialOption(grpc.WithTransportCredentials(insecure.NewCredentials())),\n        )\n        if err != nil {\n                t.Fatal(err)\n        }\n\n        // Run the test.\n        text, err := TranslateTextWithConcreteClient(client, \"Hola Mundo\", \"en-US\")\n        if err != nil {\n                t.Fatal(err)\n        }\n        if text != \"Hello World\" {\n                t.Fatalf(\"got %q, want Hello World\", text)\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Experimental Resource Semantic Conventions in OpenTelemetry Go SDK\nDESCRIPTION: Unsets the OTEL_GO_X_RESOURCE environment variable to disable experimental resource semantic conventions in the OpenTelemetry Go SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/internal/x/README.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nunset OTEL_GO_X_RESOURCE\n```\n\n----------------------------------------\n\nTITLE: Creating a Kafka Topic with Custom Partitions\nDESCRIPTION: Command to create a Kafka topic with a custom number of partitions by overriding the default partition count using the PARTS variable.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/kafka/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nPARTS=4 TOPIC=new-topic-part make create-topic\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Policy for Thanos Services\nDESCRIPTION: JSON IAM policy providing the minimum permissions required for Thanos services to interact with an S3 bucket. Includes ListBucket, GetObject, DeleteObject, and PutObject permissions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Statement\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListBucket\",\n                \"s3:GetObject\",\n                \"s3:DeleteObject\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket>/*\",\n                \"arn:aws:s3:::<bucket>\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Error Type in Go\nDESCRIPTION: Demonstrates how to create a custom error type in Go by implementing the error interface with a simple struct and Error() method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/AzureAD/microsoft-authentication-library-for-go/apps/errors/error_design.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype MyCustomErr struct {\n  Msg string\n}\nfunc (m MyCustomErr) Error() string { // This implements \"error\"\n  return m.Msg\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Test Data in Unix Systems\nDESCRIPTION: Command to regenerate test data files by setting the RECORD environment variable. This creates new .expected files based on the corresponding lexer output for each .actual file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/lexers/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nRECORD=true go test ./lexers\n```\n\n----------------------------------------\n\nTITLE: Installing JSON-Iterator with Go Get\nDESCRIPTION: Command to install the JSON-Iterator package using Go's package management system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/json-iterator/go/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/json-iterator/go\n```\n\n----------------------------------------\n\nTITLE: Filing Issues Checklist for Go Project\nDESCRIPTION: A numbered list of questions to answer when filing an issue for the Go project. It covers version information, system details, steps to reproduce, expected behavior, and actual behavior.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/golang.org/x/oauth2/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1.  What version of Go are you using (`go version`)?\n2.  What operating system and processor architecture are you using?\n3.  What did you do?\n4.  What did you expect to see?\n5.  What did you see instead?\n```\n\n----------------------------------------\n\nTITLE: Setting kubectl Context\nDESCRIPTION: This command sets the desired kubectl context. Replace $CONTEXTNAME with the name of the context you want to use.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_loki_operator.md#2025-04-19_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nkubectl config use-context $CONTEXTNAME\n```\n\n----------------------------------------\n\nTITLE: Decompression Speed Table (S2 vs Snappy)\nDESCRIPTION: Markdown table comparing decompression speeds between S2 and Snappy compression algorithms across various file types. Shows both regular S2 and 'better' mode performance metrics.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| File                                                                                                | S2 Throughput | vs. Snappy | Better Throughput | vs. Snappy |\n|-----------------------------------------------------------------------------------------------------|---------------|------------|-------------------|------------|\n| [rawstudio-mint14.tar](https://files.klauspost.com/compress/rawstudio-mint14.7z)                    | 2117 MB/s     | 1.14x      | 1738 MB/s         | 0.94x      |\n| [github-june-2days-2019.json](https://files.klauspost.com/compress/github-june-2days-2019.json.zst) | 2401 MB/s     | 1.25x      | 2307 MB/s         | 1.20x      |\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Error Logs\nDESCRIPTION: System logs showing container failures, AppArmor denials, and pod status updates. Includes CrashLoopBackOff errors, ImagePullBackOff errors, and container lifecycle events.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nE0507 11:59:42.925813    4733 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"prometheus\\\" with CrashLoopBackOff: \\\"back-off 5m0s restarting failed container=prometheus pod=bryan-prometheus-0_bryan-prometheus(6dadfe71-eb19-4231-a96e-c64bb5499a1e)\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Authentication File for Loki\nDESCRIPTION: Command to create a .htpasswd file with a username and password for basic authentication to secure Loki when exposed to the internet.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhtpasswd -c .htpasswd <username>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Build Information in Loki API\nDESCRIPTION: This endpoint provides build information in a JSON object, including version, revision, branch, build date, build user, and Go version.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/status/buildinfo\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Attributes in Pod Spec YAML\nDESCRIPTION: This YAML snippet shows how to set Kubernetes-specific attributes in a Pod specification using environment variables. It demonstrates the use of OTEL_RESOURCE_ATTRIBUTES to pass pod name, namespace, and container name to the OpenTelemetry SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/contrib/detectors/gcp/README.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n- name: POD_NAME\n  valueFrom:\n    fieldRef:\n      fieldPath: metadata.name\n- name: NAMESPACE_NAME\n  valueFrom:\n    fieldRef:\n      fieldPath: metadata.namespace\n- name: CONTAINER_NAME\n  value: my-container-name\n- name: OTEL_RESOURCE_ATTRIBUTES\n  value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE_NAME),k8s.container.name=$(CONTAINER_NAME)\n```\n\n----------------------------------------\n\nTITLE: Getting and Setting unsafe.Pointer Values without Type Checking in Go using reflect2\nDESCRIPTION: Illustrates how to use reflect2 to get and set unsafe.Pointer values without type checking. This approach provides direct memory access for improved performance.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/modern-go/reflect2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvalType := reflect2.TypeOf(1)\ni := 1\nj := 10\nvalType.UnsafeSet(unsafe.Pointer(&i), unsafe.Pointer(&j))\n// i will be 10\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Distributed Environment\nDESCRIPTION: Command to spin up a loki-distributed environment using make.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/k3d/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake loki-distributed\n```\n\n----------------------------------------\n\nTITLE: Expected Output from Consul KV Operation\nDESCRIPTION: Shows the expected console output when retrieving the key-value pair from Consul.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/consul/api/README.md#2025-04-19_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nKV: REDIS_MAXCLIENTS 1000\n```\n\n----------------------------------------\n\nTITLE: Apache-2.0 Licensed Directories\nDESCRIPTION: Lists the directories and their subfolders that are specifically licensed under Apache-2.0 in the Grafana Loki project.\nSOURCE: https://github.com/grafana/loki/blob/main/LICENSING.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nclients/\npkg/framedstdcopy/\npkg/ingester/wal\npkg/logproto/\npkg/loghttp/\npkg/logqlmodel/\npkg/push\npkg/util\nproduction/\ntools/\n```\n\n----------------------------------------\n\nTITLE: Documenting Version Changes in Markdown\nDESCRIPTION: This code snippet demonstrates how to structure a changelog in Markdown format. It includes version numbers, dates, and bullet points describing changes for each release of the go-restful library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/emicklei/go-restful/v3/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [v3.11.0] - 2023-08-19\n\n- restored behavior as <= v3.9.0 with option to change path strategy using TrimRightSlashEnabled. \n\n## [v3.10.2] - 2023-03-09 - DO NOT USE\n\n- introduced MergePathStrategy to be able to revert behaviour of path concatenation to 3.9.0\n  see comment in Readme how to customize this behaviour.\n\n## [v3.10.1] - 2022-11-19 - DO NOT USE\n\n- fix broken 3.10.0 by using path package for joining paths\n\n## [v3.10.0] - 2022-10-11 - BROKEN\n\n- changed tokenizer to match std route match behavior; do not trimright the path (#511)\n- Add MIME_ZIP (#512)\n- Add MIME_ZIP and HEADER_ContentDisposition (#513)\n- Changed how to get query parameter issue #510\n```\n\n----------------------------------------\n\nTITLE: Installing GeoIP2 Go Library\nDESCRIPTION: Command to install the GeoIP2 Go library using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oschwald/geoip2-golang/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/oschwald/geoip2-golang\n```\n\n----------------------------------------\n\nTITLE: Converting Various Types to String in Go using Cast\nDESCRIPTION: Demonstrates the usage of Cast's ToString function to convert different data types to strings. It shows conversions from string, int, float, byte slice, nil, and interface types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/cast/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ncast.ToString(\"mayonegg\")         // \"mayonegg\"\ncast.ToString(8)                  // \"8\"\ncast.ToString(8.31)               // \"8.31\"\ncast.ToString([]byte(\"one time\")) // \"one time\"\ncast.ToString(nil)                // \"\"\n\nvar foo interface{} = \"one more time\"\ncast.ToString(foo)                // \"one more time\"\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenShift Logging Operator\nDESCRIPTION: Command to deploy the OpenShift Logging Operator locally using make commands.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_without_gateway.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nmake deploy-image deploy-catalog install\n```\n\n----------------------------------------\n\nTITLE: Query Range Handling with Overlapping Chunks\nDESCRIPTION: ASCII diagram showing how queries are handled when chunks have overlapping time ranges, demonstrating which chunks need to be scanned for different query ranges.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/2021-01-Ordering-Constraint-Removal.md#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nFigure 4\n\n     chunk1\n-------------------\n                chunk2\n         ---------------------\n         query range requiring both\n         ----------\n                             query range requiring chunk2 only\n                             -----------\nts0     ts1      ts2       ts3        ts4 (not in any block)\n------------------------------\n|        |        |          |\n|        |        |          |\n|        |        |          |\n|        |        |          |\n------------------------------\n```\n\n----------------------------------------\n\nTITLE: Creating Colored ASCII Table in Go\nDESCRIPTION: This example shows how to create an ASCII table with colored elements using the tablewriter library. It sets custom colors for the header, columns, and footer.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n\t[]string{\"1/1/2014\", \"Domain name\", \"2233\", \"$10.98\"},\n\t[]string{\"1/1/2014\", \"January Hosting\", \"2233\", \"$54.95\"},\n\t[]string{\"1/4/2014\", \"February Hosting\", \"2233\", \"$51.00\"},\n\t[]string{\"1/4/2014\", \"February Extra Bandwidth\", \"2233\", \"$30.00\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Date\", \"Description\", \"CV2\", \"Amount\"})\ntable.SetFooter([]string{\"\", \"\", \"Total\", \"$146.93\"}) // Add Footer\ntable.SetBorder(false)                                // Set Border to false\n\ntable.SetHeaderColor(tablewriter.Colors{tablewriter.Bold, tablewriter.BgGreenColor},\n\ttablewriter.Colors{tablewriter.FgHiRedColor, tablewriter.Bold, tablewriter.BgBlackColor},\n\ttablewriter.Colors{tablewriter.BgRedColor, tablewriter.FgWhiteColor},\n\ttablewriter.Colors{tablewriter.BgCyanColor, tablewriter.FgWhiteColor})\n\ntable.SetColumnColor(tablewriter.Colors{tablewriter.Bold, tablewriter.FgHiBlackColor},\n\ttablewriter.Colors{tablewriter.Bold, tablewriter.FgHiRedColor},\n\ttablewriter.Colors{tablewriter.Bold, tablewriter.FgHiBlackColor},\n\ttablewriter.Colors{tablewriter.Bold, tablewriter.FgBlackColor})\n\ntable.SetFooterColor(tablewriter.Colors{}, tablewriter.Colors{},\n\ttablewriter.Colors{tablewriter.Bold},\n\ttablewriter.Colors{tablewriter.FgHiRedColor})\n\ntable.AppendBulk(data)\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Implementing Gzip Compression for HTTP Responses in Go\nDESCRIPTION: Complete example showing how to wrap an HTTP handler with gzip compression functionality. The example demonstrates creating a basic handler that returns plain text and then wrapping it with GzipHandler to enable compression.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/NYTimes/gziphandler/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"io\"\n\t\"net/http\"\n\t\"github.com/NYTimes/gziphandler\"\n)\n\nfunc main() {\n\twithoutGz := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\tw.Header().Set(\"Content-Type\", \"text/plain\")\n\t\tio.WriteString(w, \"Hello, World\")\n\t})\n\n\twithGz := gziphandler.GzipHandler(withoutGz)\n\n\thttp.Handle(\"/\", withGz)\n\thttp.ListenAndServe(\"0.0.0.0:8000\", nil)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackSizeType Enum in Go\nDESCRIPTION: Defines the LokiStackSizeType enum for Loki cluster scale out sizes. It includes sizes like 1x.extra-small, 1x.medium, and 1x.small, each with specific resource requirements and use cases.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackSizeType string\n\nconst (\n  SizeOneXExtraSmall LokiStackSizeType = \"1x.extra-small\"\n  SizeOneXMedium LokiStackSizeType = \"1x.medium\"\n  SizeOneXSmall LokiStackSizeType = \"1x.small\"\n)\n```\n\n----------------------------------------\n\nTITLE: Downloading Values Configuration\nDESCRIPTION: Command to download the default values.yaml configuration file for the Helm chart.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O https://raw.githubusercontent.com/grafana/loki/main/production/meta-monitoring/values.yaml\n```\n\n----------------------------------------\n\nTITLE: Running Loki Helm Tests using Go\nDESCRIPTION: Command to run the Loki Helm tests using Go test from the current directory. This executes all tests in the folder to verify Loki canary functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/src/helm-test/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRun `go test .` from this directory, or use the Docker image published at `grafana/loki-helm-test`.\n```\n\n----------------------------------------\n\nTITLE: Creating a Changelog JSON File for Grafana Loki Contributions\nDESCRIPTION: Example JSON structure for creating changelog files when submitting pull requests. Each changelog file requires a UUID identifier, change type, collapse setting, description, and affected modules list.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/smithy-go/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"id\": \"12345678-1234-1234-1234-123456789012\"\n    \"type\": \"bugfix\"\n    \"collapse\": true\n    \"description\": \"Fix improper use of printf-style functions.\",\n    \"modules\": [\n        \".\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for DialogFlow/CX SentimentAnalysisResult Support\nDESCRIPTION: Commit reference for a feature adding SentimentAnalysisResult support in DialogFlow/CX webhook requests and documentation updates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n([2b4414d](https://www.github.com/googleapis/google-cloud-go/commit/2b4414d973e3445725cd38901bf75340c97fc663))\n```\n\n----------------------------------------\n\nTITLE: Updating AWS SDK EC2 Instance Metadata Service in Go\nDESCRIPTION: Updates the AWS SDK EC2 Instance Metadata Service from version 1.10.0 to 1.11.0. This minor version bump likely includes bug fixes and small improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_25\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds from 1.10.0 to 1.11.0\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Compute Metadata Package in Go\nDESCRIPTION: Command to install the Google Cloud Compute metadata package using Go's package manager. This package provides functionality for interacting with Google Cloud metadata services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/compute/metadata/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get cloud.google.com/go/compute/metadata\n```\n\n----------------------------------------\n\nTITLE: Installing Memory Package via Go\nDESCRIPTION: Command to install the memory package using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modernc.org/memory/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go get modernc.org/memory\n```\n\n----------------------------------------\n\nTITLE: Verbose Error Printing\nDESCRIPTION: Demonstrates how to print verbose error information using the errors.Verbose() function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/AzureAD/microsoft-authentication-library-for-go/apps/errors/error_design.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println(errors.Verbose(err))\n```\n\n----------------------------------------\n\nTITLE: Listing Installed Rules with Mimirtool\nDESCRIPTION: Command to verify installed rules using mimirtool by listing them.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmimirtool rules list --address=<your_cloud_prometheus_endpoint> --id=<your_instance_id> --key=<your_cloud_access_policy_token>\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Client with OpenTracing Interceptors in Go\nDESCRIPTION: Example showing how to set up a gRPC client connection with OpenTracing interceptors. This configures both unary and streaming interceptors to automatically trace all RPC activity.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing-contrib/go-grpc/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// You must have some sort of OpenTracing Tracer instance on hand.\nvar tracer opentracing.Tracer = ...\n...\n\n// Set up a connection to the server peer.\nconn, err := grpc.Dial(\n    address,\n    ... // other options\n    grpc.WithUnaryInterceptor(\n        otgrpc.OpenTracingClientInterceptor(tracer)),\n    grpc.WithStreamInterceptor(\n        otgrpc.OpenTracingStreamClientInterceptor(tracer)))\n\n// All future RPC activity involving `conn` will be automatically traced.\n```\n\n----------------------------------------\n\nTITLE: Debugging Loki with dlv CLI in Bash\nDESCRIPTION: Command to connect to a running Loki container for remote debugging using the delve debugger CLI. This example connects to ingester-1 on port 18002.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/loki-tsdb-storage-s3/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndlv connect 127.0.0.1:18002\n```\n\n----------------------------------------\n\nTITLE: Backing Up Bolt Database via cURL Command\nDESCRIPTION: This shell command demonstrates how to download a Bolt database backup using cURL by accessing the HTTP backup endpoint. It saves the database to a local file named 'my.db'.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_22\n\nLANGUAGE: sh\nCODE:\n```\n$ curl http://localhost/backup > my.db\n```\n\n----------------------------------------\n\nTITLE: Verifying Deployment\nDESCRIPTION: Command to verify the successful deployment of monitoring pods.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n meta\n```\n\n----------------------------------------\n\nTITLE: Converting from color.Color Interface to colorful.Color in Go\nDESCRIPTION: Demonstrates how to convert a Go standard library color.Color type to a colorful.Color, using the MakeColor function. Includes handling of the edge case where alpha is zero.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nc, ok := colorful.MakeColor(color.Gray16{12345})\n```\n\n----------------------------------------\n\nTITLE: Basic Mock Clock Example in Go\nDESCRIPTION: Example demonstrating potential race conditions in time testing, showing why simple mock clock implementations can be problematic.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/coder/quartz/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\nmock := clock.NewMock()\ncount := 0\n\n// Kick off a timer to increment every 1 mock second.\ngo func() {\n\tticker := mock.Ticker(1 * time.Second)\n\tfor {\n\t\t<-ticker.C\n\t\tcount++\n\t}\n}()\nruntime.Gosched()\n\n// Move the clock forward 10 seconds.\nmock.Add(10 * time.Second)\n\n// This prints 10.\nfmt.Println(count)\n```\n\n----------------------------------------\n\nTITLE: Importing JWT-Go Package in Go\nDESCRIPTION: Code snippet showing how to import the jwt-go package in a Go program.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v4/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/golang-jwt/jwt/v4\"\n```\n\n----------------------------------------\n\nTITLE: Installing GopherLua with Go Get\nDESCRIPTION: Command to install the GopherLua library using Go's package manager. GopherLua supports Go 1.9 and later versions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/yuin/gopher-lua\n```\n\n----------------------------------------\n\nTITLE: Setting Git Remote for Fork in Bash\nDESCRIPTION: Command to add a Git remote for your fork of the repository. Replace GITHUB_USERNAME with your actual GitHub username.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add fork git@github.com:GITHUB_USERNAME/google-cloud-go.git\n```\n\n----------------------------------------\n\nTITLE: Creating and Pushing a New Branch for Contributions\nDESCRIPTION: This snippet outlines the process of creating a new branch, making changes, running pre-commit checks, and pushing the branch to your fork. It's the typical workflow for preparing a pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngit checkout -b <YOUR_BRANCH_NAME>\n# edit files\n# update changelog\nmake precommit\ngit add -p\ngit commit\ngit push <YOUR_FORK> <YOUR_BRANCH_NAME>\n```\n\n----------------------------------------\n\nTITLE: Using ANSI Writer in Go\nDESCRIPTION: Demonstrates how to use the basic ANSI Writer to handle ANSI escape sequences. The Writer acts as a middleware that processes ANSI sequences before forwarding them to the output destination.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/ansi/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/muesli/ansi\"\n\nw := ansi.Writer{Forward: os.Stdout}\nw.Write([]byte(\"\\x1b[31mHello, world!\\x1b[0m\"))\nw.Close()\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Update for Zone-Aware Replication\nDESCRIPTION: Enhancement to split ingester HPA (Horizontal Pod Autoscaling) configuration when zone-aware replication is enabled in Helm charts.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n80e46f7cd212a3ffbdcd9d833f431461d304043a\n```\n\n----------------------------------------\n\nTITLE: Environment Setup Commands\nDESCRIPTION: Commands for cloning the repository and starting the mail-house example using Docker Compose.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/logcli-tutorial.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/grafana/alloy-scenarios.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose -f alloy-scenarios/mail-house/docker-compose.yml up -d\n```\n\n----------------------------------------\n\nTITLE: Fix URL Encoding for Plus Sign\nDESCRIPTION: Replaces plus signs with %20 in URL encoding to match service requirements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n  - from: zz_service_client.go\n    where: $\n    transform: >\n      return $.\n        replace(/req.Raw\\(\\).URL.RawQuery \\= reqQP.Encode\\(\\)/, `req.Raw().URL.RawQuery = strings.Replace(reqQP.Encode(), \"+\", \"%20\", -1)`)\n```\n\n----------------------------------------\n\nTITLE: GCP Service Account and Role Configuration Commands\nDESCRIPTION: Shell commands for setting up GCP service account and required IAM bindings.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\ngcloud iam service-accounts create \"$SERVICE_ACCOUNT_NAME\" \\\n  --display-name=\"Loki Operator Account\" \\\n  --project \"$PROJECT_ID\"\n```\n\nLANGUAGE: shell\nCODE:\n```\ngcloud projects add-iam-policy-binding \"$project_id\" \\\n  --member=\"serviceAccount:$SERVICE_ACCOUNT_EMAIL\" \\\n  --role=\"roles/iam.workloadIdentityUser\"\\\n  --format=none\n\ngcloud projects add-iam-policy-binding \"$project_id\" \\\n  --member=\"serviceAccount:$SERVICE_ACCOUNT_EMAIL\" \\\n  --role=\"roles/storage.objectAdmin\" \\\n  --format=none\n```\n\nLANGUAGE: shell\nCODE:\n```\ngcloud iam workload-identity-pools create-cred-config \\\n    \"projects/$PROJECT_NUMBER/locations/global/workloadIdentityPools/$POOL_ID/providers/$PROVIDER_ID\" \\\n    --service-account=\"$SERVICE_ACCOUNT_EMAIL\" \\\n    --credential-source-file=/var/run/secrets/serviceaccount/token \\\n    --credential-source-type=text \\\n    --output-file=\"/tmp/google-application-credentials.json\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Callstack Size in GopherLua\nDESCRIPTION: Example showing how to configure the callstack size and memory management behavior for a new Lua state to optimize performance and memory usage.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState(lua.Options{\n    CallStackSize: 120,                 // this is the maximum callstack size of this LState\n    MinimizeStackMemory: true,          // Defaults to `false` if not specified. If set, the callstack will auto grow and shrink as needed up to a max of `CallStackSize`. If not set, the callstack will be fixed at `CallStackSize`.\n})\ndefer L.Close()\n```\n\n----------------------------------------\n\nTITLE: MurmurHash3 Performance Comparison Across Go Versions\nDESCRIPTION: Comparative benchmark results showing MurmurHash3 performance improvements across Go versions 1.0, 1.1, 1.2, and 1.3. The table includes throughput in MB/s and speedup ratios between versions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spaolacci/murmur3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nbenchmark              Go1.0 MB/s    Go1.1 MB/s  speedup    Go1.2 MB/s  speedup    Go1.3 MB/s  speedup\nBenchmark32_1               98.90        118.59    1.20x        114.79    0.97x        130.00    1.13x\nBenchmark32_2              168.04        213.31    1.27x        210.65    0.99x        226.42    1.07x\nBenchmark32_4              414.01        494.19    1.19x        490.29    0.99x        500.39    1.02x\nBenchmark32_8              662.19        836.09    1.26x        836.46    1.00x        844.69    1.01x\nBenchmark32_16             917.46       1304.62    1.42x       1297.63    0.99x       1321.61    1.02x\nBenchmark32_32            1141.93       1737.54    1.52x       1728.24    0.99x       1743.93    1.01x\nBenchmark32_64            1289.47       2039.51    1.58x       2038.20    1.00x       2071.64    1.02x\nBenchmark32_128           1299.23       2097.63    1.61x       2177.13    1.04x       2222.96    1.02x\nBenchmark32_256           1369.90       2202.34    1.61x       2213.15    1.00x       2188.60    0.99x\nBenchmark32_512           1399.56       2255.72    1.61x       2264.49    1.00x       2260.59    1.00x\nBenchmark32_1024          1410.90       2285.82    1.62x       2270.99    0.99x       2263.73    1.00x\nBenchmark32_2048          1422.14       2297.62    1.62x       2269.59    0.99x       2296.02    1.01x\nBenchmark32_4096          1420.53       2307.81    1.62x       2273.43    0.99x       2290.92    1.01x\nBenchmark32_8192          1424.79       2312.87    1.62x       2286.07    0.99x       2279.68    1.00x\nBenchmark128_1               8.32         30.15    3.62x         30.84    1.02x         38.33    1.24x\nBenchmark128_2              16.38         59.72    3.65x         59.37    0.99x         69.07    1.16x\nBenchmark128_4              32.26        112.96    3.50x        114.24    1.01x        134.17    1.17x\nBenchmark128_8              62.68        217.88    3.48x        218.18    1.00x        252.86    1.16x\nBenchmark128_16            128.47        451.57    3.51x        474.65    1.05x        603.42    1.27x\nBenchmark128_32            246.18        910.42    3.70x        871.06    0.96x       1117.15    1.28x\nBenchmark128_64            449.05       1477.64    3.29x       1449.24    0.98x       1800.97    1.24x\nBenchmark128_128           762.61       2222.42    2.91x       2217.30    1.00x       2515.50    1.13x\nBenchmark128_256          1179.92       3005.46    2.55x       2931.55    0.98x       3330.11    1.14x\nBenchmark128_512          1616.51       3590.75    2.22x       3592.08    1.00x       3769.09    1.05x\nBenchmark128_1024         1964.36       3979.67    2.03x       4034.01    1.01x       4094.38    1.01x\nBenchmark128_2048         2225.07       4156.93    1.87x       4244.17    1.02x       4290.75    1.01x\nBenchmark128_4096         2360.15       4299.09    1.82x       4392.35    1.02x       4353.29    0.99x\nBenchmark128_8192         2411.50       4356.84    1.81x       4480.68    1.03x       4455.47    0.99x\n```\n\n----------------------------------------\n\nTITLE: Fixing BlobMetadata Definition\nDESCRIPTION: Directive to fix the BlobMetadata definition by removing the properties field, which allows for a dictionary-style implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.definitions\n  transform: >\n    delete $.BlobMetadata[\"properties\"];\n```\n\n----------------------------------------\n\nTITLE: Installing the Codec Library in Go\nDESCRIPTION: Command to install the codec library using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-msgpack/codec/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/ugorji/go/codec\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to a Fork for Zap Pull Request\nDESCRIPTION: Command to push local changes to a forked repository in preparation for creating a pull request to the main Zap project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin cool_new_feature\n```\n\n----------------------------------------\n\nTITLE: Creating Meta Namespace in Kubernetes\nDESCRIPTION: Command to create a separate 'meta' namespace for the meta-monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace meta\n```\n\n----------------------------------------\n\nTITLE: Installing Gophercloud Dependencies\nDESCRIPTION: Shell command to update Go module dependencies after adding Gophercloud.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo mod tidy\n```\n\n----------------------------------------\n\nTITLE: Logging Container Creation in Go\nDESCRIPTION: This snippet demonstrates logging the creation of a container within a Kubernetes sandbox. It includes information such as the sandbox ID, container name, and container ID.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_23\n\nLANGUAGE: go\nCODE:\n```\ntime=\"2024-05-07T11:59:38.128540975Z\" level=info msg=\"CreateContainer within sandbox \\\"346dc5e0c503a6ca1f0281e3b6f8e32563ebf8a61ed467b4d0dc5b4030a115b9\\\" for &ContainerMetadata{Name:hgrun,Attempt:0,} returns container id \\\"a63e882bf89caa0e0f3027fc2c068801b36e5b3386b4d4f2570cb4f4d77298f4\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Git Configuration for Automatic Sign-off\nDESCRIPTION: Git configuration commands to set up aliases that automatically include the Developer Certificate of Origin sign-off in commit messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit config --add alias.amend \"commit -s --amend\"\ngit config --add alias.c \"commit -s\"\n```\n\n----------------------------------------\n\nTITLE: AppArmor Security Denials\nDESCRIPTION: Security logs showing AppArmor denying ptrace operations for container runtime processes\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_28\n\nLANGUAGE: log\nCODE:\n```\nAVC apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36499 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\n```\n\n----------------------------------------\n\nTITLE: Adding CompareAndSwap and Swap Methods in Go\nDESCRIPTION: This snippet describes the addition of 'CompareAndSwap' and 'Swap' methods to 'atomic.String', 'atomic.Error', and 'atomic.Value' types. It's part of the changes introduced in version 1.10.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- Add `CompareAndSwap` and `Swap` methods to `atomic.String`, `atomic.Error`,\n  and `atomic.Value`.\n```\n\n----------------------------------------\n\nTITLE: Finding Compressed Offset Using S2 Index in Go\nDESCRIPTION: Uses a loaded S2 index to find the corresponding compressed and uncompressed offsets for a desired uncompressed position, enabling manual stream positioning.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\n\tcompressedOffset, uncompressedOffset, err := index.Find(wantOffset)\n```\n\n----------------------------------------\n\nTITLE: Telegraf Changelog Entries\nDESCRIPTION: List of feature additions, plugin updates, parser migrations and dependency updates for the Telegraf project, organized by pull request numbers and categories.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- [#11307](https://github.com/influxdata/telegraf/pull/11307) `serializers.csv` Add CSV serializer\n- [#11054](https://github.com/influxdata/telegraf/pull/11054) `outputs.redistimeseries` Add RedisTimeSeries plugin\n[...additional entries...]\n\n### Dependency Updates\n\n- [#11671](https://github.com/influxdata/telegraf/pull/11671) Update github.com/jackc/pgx/v4 from 4.16.1 to 4.17.0\n- [#11669](https://github.com/influxdata/telegraf/pull/11669) Update github.com/Azure/go-autorest/autorest from 0.11.24 to 0.11.28\n[...additional entries...]\n```\n\n----------------------------------------\n\nTITLE: Setting Terminal Background Color with ANSI Escape Sequence\nDESCRIPTION: Uses ANSI escape sequence to change the terminal's background color to green. The sequence '\\033]11;#00ff00\\007' instructs the terminal emulator to set the background color using the RGB hex value #00ff00 (green).\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033]11;#00ff00\\007\"\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Kubernetes API Validation - After GC Optimization\nDESCRIPTION: Final benchmark results after implementing garbage collection pressure reduction, showing further improved performance with ~17M allocations. Demonstrates additional optimization in memory usage and allocation count.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/validate/BENCHMARK.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ngoos: linux\ngoarch: amd64\npkg: github.com/go-openapi/validate\ncpu: AMD Ryzen 7 5800X 8-Core Processor             \nBenchmark_KubernetesSpec/validating_kubernetes_API-16         \t       1\t3758414145 ns/op\t2593881496 B/op\t17111373 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Azure Network Management Struct Declarations in Go\nDESCRIPTION: Structure definitions for various network management entities including configurations, rules, and client responses.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ntype ActiveBaseSecurityAdminRule struct{}\ntype ActiveConfigurationParameter struct{}\ntype ActiveConnectivityConfiguration struct{}\ntype AdminRuleCollection struct{}\ntype ConnectivityConfiguration struct{}\ntype ExpressRouteProviderPort struct{}\ntype Group struct{}\ntype GroupProperties struct{}\n```\n\n----------------------------------------\n\nTITLE: Accept Structure Definition in Go\nDESCRIPTION: Definition of the Accept structure used to represent a clause in an HTTP Accept Header. It contains the type, subtype, quality value, and additional parameters of an accept header clause.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/munnerz/goautoneg/README.txt#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\ntype Accept struct {\n    Type, SubType string\n    Q             float32\n    Params        map[string]string\n}\n```\n\n----------------------------------------\n\nTITLE: Creating LokiStack Instance\nDESCRIPTION: Applies a LokiStack custom resource to the cluster, which the Loki Operator will use to create Loki components.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f hack/lokistack_dev.yaml\n```\n\n----------------------------------------\n\nTITLE: Implementing Boolean Option in Go\nDESCRIPTION: Shows how to implement a boolean option using the Option interface pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype defaultFalseOption bool\n\nfunc (o defaultFalseOption) apply(c config) config {\n\tc.Bool = bool(o)\n    return c\n}\n\n// WithOption sets a T to have an option included.\nfunc WithOption() Option {\n\treturn defaultFalseOption(true)\n}\n```\n\n----------------------------------------\n\nTITLE: Operator Release-Please Workflow Command\nDESCRIPTION: Example of a make command used during the release process to generate bundle manifests for the Loki Operator release process.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/release.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake bundle-all\n```\n\n----------------------------------------\n\nTITLE: Creating OpenShift Logging Namespace\nDESCRIPTION: Creates the openshift-logging namespace in the OpenShift cluster for Loki Operator deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Commands for Loki 1.5.0\nDESCRIPTION: Example of Docker commands to upgrade Loki from 1.4.0 to 1.5.0, including steps to update file permissions and mount points.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\ndocker stop loki\ndocker rm loki\ndocker run --rm --name=\"loki-perm\" -it --mount source=loki-data,target=/mnt ubuntu /bin/bash\ncd /mnt\nchown -R 10001:10001 ./*\nexit\ndocker run -d --name=loki --mount source=loki-data,target=/loki -p 3100:3100 grafana/loki:1.5.0\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Backoff in Go\nDESCRIPTION: Demonstrates the basic usage of the Backoff struct, including initialization with default values and calling the Duration() method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jpillora/backoff/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nb := &backoff.Backoff{\n\t//These are the defaults\n\tMin:    100 * time.Millisecond,\n\tMax:    10 * time.Second,\n\tFactor: 2,\n\tJitter: false,\n}\n\nfmt.Printf(\"%s\\n\", b.Duration())\nfmt.Printf(\"%s\\n\", b.Duration())\nfmt.Printf(\"%s\\n\", b.Duration())\n\nfmt.Printf(\"Reset!\\n\")\nb.Reset()\n\nfmt.Printf(\"%s\\n\", b.Duration())\n```\n\n----------------------------------------\n\nTITLE: Executing Container Command in Kubernetes Pod\nDESCRIPTION: Bash command to execute the main container process in a Kubernetes pod, including setting up environment variables and specifying ports.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nexec /bin/hgrun -log.level=debug launch -bundledPluginsManifest /proc/$(pidof plugins-pause)/root/manifest.json -bundledPluginsDir /proc/$(pidof plugins-pause)/root/plugins\n```\n\n----------------------------------------\n\nTITLE: Fix Status Code Check in Batch Request\nDESCRIPTION: Updates status code check in submit batch request from OK to Accepted.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: zz_service_client.go\n  where: $\n  transform: >\n    return $.\n      replace(/if\\s+!runtime\\.HasStatusCode\\(httpResp,\\s+http\\.StatusOK\\)\\s+\\{\\s+err\\s+=\\s+runtime\\.NewResponseError\\(httpResp\\)\\s+return ServiceClientSubmitBatchResponse\\{\\},\\s+err\\s+}/g, \n      `if !runtime.HasStatusCode(httpResp, http.StatusAccepted) {\\n\\t\\terr = runtime.NewResponseError(httpResp)\\n\\t\\treturn ServiceClientSubmitBatchResponse{}, err\\n\\t}`);\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Developer CLI Configuration\nDESCRIPTION: This command displays the current configuration of the Azure Developer CLI, including the account that is currently logged in, which is helpful for troubleshooting Azure Developer CLI credential issues.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nazd config list\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry Go Baggage Handling\nDESCRIPTION: Example showing the transition from removed baggage functions to the new Baggage type and related context functions in the OpenTelemetry Go baggage package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_27\n\nLANGUAGE: Go\nCODE:\n```\n// Old (removed) approach\nbaggage.ContextWithValue(ctx, key, value)\nval := baggage.Value(ctx, key)\n\n// New recommended approach\nbag := baggage.FromContext(ctx)\n// Modify bag as needed\nctx = baggage.ContextWithBaggage(ctx, bag)\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Cloud Channel API Pub/Sub Endpoints\nDESCRIPTION: Commit reference for a feature adding Pub/Sub endpoints for the Cloud Channel API.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n([1aea7c8](https://www.github.com/googleapis/google-cloud-go/commit/1aea7c87d39eed87620b488ba0dd60b88ff26c04))\n```\n\n----------------------------------------\n\nTITLE: Optimizing Set Creation - OpenTelemetry Go SDK\nDESCRIPTION: Memory optimization for creating new Sets using NewSet or NewSetWithFiltered in the attribute package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\nNewSet()\nNewSetWithFiltered()\n```\n\n----------------------------------------\n\nTITLE: Checking Go Version for Memberlist Build\nDESCRIPTION: Command to verify the installed Go version, which should be 1.2+ for building memberlist.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/memberlist/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo version\n```\n\n----------------------------------------\n\nTITLE: Logging Kafka Producer State Management and Log Operations\nDESCRIPTION: These log entries document Kafka's producer state management and log segment operations. They include writing producer snapshots, rolling new log segments, and deleting old producer state snapshots for different partitions.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n[2024-05-07 10:55:45,927] INFO [ProducerStateManager partition=ingest-2] Wrote producer snapshot at offset 183571018 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:45,925] INFO [LocalLog partition=ingest-2, dir=/bitnami/kafka/data] Rolled new log segment at offset 183571018 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:45,526] INFO [ProducerStateManager partition=mimir-dev-14-aggregations-offsets-3] Wrote producer snapshot at offset 27664 with 0 producer ids in 43 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:45,484] INFO [LocalLog partition=mimir-dev-14-aggregations-offsets-3, dir=/bitnami/kafka/data] Rolled new log segment at offset 27664 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:44,916] INFO [ProducerStateManager partition=ingest-9] Wrote producer snapshot at offset 179376252 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:44,914] INFO [LocalLog partition=ingest-9, dir=/bitnami/kafka/data] Rolled new log segment at offset 179376252 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:44,212] INFO [ProducerStateManager partition=ingest-3] Wrote producer snapshot at offset 184229163 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:44,210] INFO [LocalLog partition=ingest-3, dir=/bitnami/kafka/data] Rolled new log segment at offset 184229163 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,486] INFO [ProducerStateManager partition=ingest-6] Wrote producer snapshot at offset 182083789 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,484] INFO [LocalLog partition=ingest-6, dir=/bitnami/kafka/data] Rolled new log segment at offset 182083789 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,482] INFO [ProducerStateManager partition=ingest-6] Wrote producer snapshot at offset 182083789 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,480] INFO [LocalLog partition=ingest-6, dir=/bitnami/kafka/data] Rolled new log segment at offset 182083789 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,456] INFO [ProducerStateManager partition=ingest-10] Wrote producer snapshot at offset 121927712 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,454] INFO [LocalLog partition=ingest-10, dir=/bitnami/kafka/data] Rolled new log segment at offset 121927712 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,452] INFO [ProducerStateManager partition=ingest-10] Wrote producer snapshot at offset 121927712 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,450] INFO [LocalLog partition=ingest-10, dir=/bitnami/kafka/data] Rolled new log segment at offset 121927712 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,228] INFO [ProducerStateManager partition=ingest-11] Wrote producer snapshot at offset 66185454 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,225] INFO [LocalLog partition=ingest-11, dir=/bitnami/kafka/data] Rolled new log segment at offset 66185454 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,199] INFO [ProducerStateManager partition=ingest-7] Wrote producer snapshot at offset 180827370 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,197] INFO [LocalLog partition=ingest-7, dir=/bitnami/kafka/data] Rolled new log segment at offset 180827370 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,128] INFO [ProducerStateManager partition=ingest-12] Wrote producer snapshot at offset 36654469 with 0 producer ids in 4 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,124] INFO [LocalLog partition=ingest-12, dir=/bitnami/kafka/data] Rolled new log segment at offset 36654469 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:43,118] INFO [ProducerStateManager partition=ingest-12] Wrote producer snapshot at offset 36654469 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:43,116] INFO [LocalLog partition=ingest-12, dir=/bitnami/kafka/data] Rolled new log segment at offset 36654469 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:42,496] INFO [ProducerStateManager partition=ingest-5] Wrote producer snapshot at offset 183092542 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:42,494] INFO [LocalLog partition=ingest-5, dir=/bitnami/kafka/data] Rolled new log segment at offset 183092542 in 5 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:42,204] INFO [ProducerStateManager partition=ingest-1] Wrote producer snapshot at offset 183302806 with 0 producer ids in 5 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:42,199] INFO [LocalLog partition=ingest-1, dir=/bitnami/kafka/data] Rolled new log segment at offset 183302806 in 1 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:41,099] INFO [ProducerStateManager partition=ingest-2] Wrote producer snapshot at offset 183568687 with 0 producer ids in 3 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:41,097] INFO [LocalLog partition=ingest-2, dir=/bitnami/kafka/data] Rolled new log segment at offset 183568687 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:41,091] INFO [ProducerStateManager partition=ingest-2] Wrote producer snapshot at offset 183568687 with 0 producer ids in 2 ms. (kafka.log.ProducerStateManager)\n[2024-05-07 10:55:41,088] INFO [LocalLog partition=ingest-2, dir=/bitnami/kafka/data] Rolled new log segment at offset 183568687 in 0 ms. (kafka.log.LocalLog)\n[2024-05-07 10:55:40,778] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182658341.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,778] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182655860.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,778] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182653526.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182651018.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182648504.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182646095.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182643712.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182641298.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182639001.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182636738.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182634546.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182632463.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182630290.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182627921.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182625520.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182623007.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182620446.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182618074.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182615634.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182613221.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182610888.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182608616.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182606451.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,777] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182604245.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,776] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182602171.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,776] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182599811.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,776] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182597289.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,776] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182594863.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,776] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-3/00000000000182592327.snapshot.deleted (kafka.log.SnapshotFile)\n```\n\n----------------------------------------\n\nTITLE: Documenting TODO Items for Loki Project in Markdown\nDESCRIPTION: This snippet outlines planned improvements for the Loki project, including dynamic RTT discovery and dynamic MTU discovery. It details specific tasks such as computing percentiles, improving bounds for ping/ack, and enhancing efficiency.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/memberlist/todo.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# TODO\n* Dynamic RTT discovery\n    * Compute 99th percentile for ping/ack\n    * Better lower bound for ping/ack, faster failure detection\n* Dynamic MTU discovery\n    * Prevent lost updates, increases efficiency\n```\n\n----------------------------------------\n\nTITLE: Initializing Atomic Value Wrappers in Go\nDESCRIPTION: This snippet mentions a fix for initializing 'Value' wrappers in the atomic package. It's part of the changes introduced in version 1.11.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Fixed\n- Fix initialization of `Value` wrappers.\n```\n\n----------------------------------------\n\nTITLE: Illustrating Job Processing Sequence with Mermaid\nDESCRIPTION: This sequence diagram demonstrates the flow of job processing in the Block Builder system, from partition monitoring to job completion. It shows interactions between various components including Partition Controller, Scheduler, gRPC Adapter, Block Builder, and Object Storage.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/blockbuilder/architecture.md#2025-04-19_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant PC as Partition Controller\n    participant S as Scheduler\n    participant SH as SchedulerHandler\n    participant GA as gRPC Adapter\n    participant BT as Builder Transport\n    participant BB as Block Builder\n    participant OS as Object Storage\n\n    loop Monitor Partitions\n        PC->>PC: Check for new offsets\n        PC->>S: Create Job (partition, offset range)\n        S->>Q: Enqueue Job\n    end\n\n    BB->>BT: Request Job\n    BT->>GA: gRPC GetJob Request\n    GA->>SH: HandleGetJob\n    SH->>S: Get Job from Queue\n    S-->>SH: Return Job (or empty)\n    \n    alt Has Job\n        SH-->>GA: Return Job\n        GA-->>BT: gRPC Response\n        BT-->>BB: Return Job\n        BB->>OS: Process & Write Data\n        BB->>BT: Report Success\n        BT->>GA: gRPC CompleteJob\n        GA->>SH: HandleCompleteJob\n        SH->>S: Mark Complete\n        S->>PC: Commit Offset\n    else No Job\n        SH-->>GA: Return No Job\n        GA-->>BT: gRPC Response\n        BT-->>BB: Return No Job\n    end\n```\n\n----------------------------------------\n\nTITLE: Starting Promtail Service via Bash Commands\nDESCRIPTION: A set of Bash commands to deploy and start the Promtail service. It includes downloading the Promtail binary, creating necessary directories, setting up the configuration files, and enabling the systemd service.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/hack/boilerplate.go.txt#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Download promtail (latest)\ncurl -s https://api.github.com/repos/grafana/loki/releases/latest | grep browser_download_url | cut -d '\"' -f 4 | grep promtail-linux-amd64.zip | xargs wget\nunzip promtail-linux-amd64.zip\nchmod a+x promtail-linux-amd64\nsudo mv promtail-linux-amd64 /usr/local/bin/promtail\nrm promtail-linux-amd64.zip\n\n# Setup promtail\nsudo mkdir -p /etc/promtail\nsudo touch /etc/promtail/config.yml\n\n# Start promtail service\nsudo systemctl start promtail.service\nsudo systemctl enable promtail.service\n```\n\n----------------------------------------\n\nTITLE: Checking Promtail Service Status\nDESCRIPTION: Command to verify the Promtail service status and view its logs using systemctl.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status promtail.service -l\n```\n\n----------------------------------------\n\nTITLE: Updating Preferred Read Replica in Go\nDESCRIPTION: Fixes an issue with updating the preferred read replica for a broker. Only updates if the new replica ID is valid.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\nfix: only update preferredReadReplica if valid\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Kubernetes API Validation - Post Refactoring\nDESCRIPTION: Benchmark results after initial refactoring showing improved performance with reduced allocations (~25M). Shows significant reduction in operation time and memory usage compared to initial version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/validate/BENCHMARK.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ngo test -bench Spec\ngoos: linux\ngoarch: amd64\npkg: github.com/go-openapi/validate\ncpu: AMD Ryzen 7 5800X 8-Core Processor\nBenchmark_KubernetesSpec/validating_kubernetes_API-16         \t       1\t4064535557 ns/op\t3379715592 B/op\t25320330 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Installing JWT-Go Package in Go\nDESCRIPTION: Command to add jwt-go as a dependency in a Go program using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get -u github.com/golang-jwt/jwt/v4\n```\n\n----------------------------------------\n\nTITLE: HTTP Request Metrics Log Entry in JSON\nDESCRIPTION: This JSON represents a debug log entry for an HTTP request to the metrics endpoint. It includes fields for request duration, method, remote address, status code, user agent, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\"duration\":33318175,\"level\":\"debug\",\"method\":\"GET\",\"msg\":\"request completed\",\"referer\":\"\",\"remote\":\"10.136.105.40:52702\",\"request\":\"/metrics\",\"status\":200,\"time\":\"2024-04-16T14:50:17Z\",\"user-agent\":\"GrafanaAgent/v0.40.3 (flow; linux; helm)\"}\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStack API Extensions for Retention in Go\nDESCRIPTION: This code snippet defines new structs and fields to extend the LokiStack API for supporting retention configuration. It includes types for duration, retention spec, limits, and stream specifications.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/retention_support.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/prometheus/prometheus/model/labels\"\n\n// LokiDuration defines the type for Prometheus durations.\n//\n// +kubebuilder:validation:Pattern:=\"((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)\"\ntype LokiDuration string\n\n// LokiStackSpec defines the desired state of LokiStack\ntype LokiStackSpec struct {\n...\n    // Retention defines the spec for log retention\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    Retention *RetentionSpec `json:\"retention,omitempty\"`\n...\n}\n\n// RetentionSpec defines the spec for the enabling retention in the Compactor.\ntype RetentionSpec struct {\n\n    // DeleteDelay defines Delay after which chunks will be fully deleted during retention\n    //\n    // +optional\n    // +kubebuilder:validation:optional\n    DeleteDelay LokiDuration `json:\"deletedelay,omitempty\"`\n}\n\n\n// LimitsTemplateSpec defines the limits  applied at ingestion or query path.\ntype LimitsTemplateSpec struct {\n...\n    // RetentionLimits defines the configuration of the retention period.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    RetentionLimits *RetentionLimitSpec `json:\"retention,omitempty\"`\n}\n\n// RetentionLimitSpec configures the retention period and retention stream\ntype RetentionLimitSpec struct {\n    // PeriodDays defines the log retention period.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    PeriodDays int `json:\"period,omitempty\"`\n\n    // Stream defines the log stream.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    Stream []*StreamSpec `json:\"stream,omitempty\"`\n}\n\n// StreamSpec defines the map of per pod status per LokiStack component.\n// Each component is represented by a separate map of v1.Phase to a list of pods.\ntype StreamSpec struct {\n    // PeriodDays defines the log retention period.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    PeriodDays int `json:\"period,omitempty\"`\n    // Priority defines the retenton priority.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    Priority int32 `json:\"priority,omitempty\"`\n    // Selector is a set of labels to identify the log stream.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    Selector *labels.Matcher `json:\"selector,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Fix CORS XML Tags\nDESCRIPTION: Corrects XML tags for CORS rules to match service expectations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n  - from: source-file-go\n    where: $\n    transform: >\n      return $.\n        replace(/xml:\"CORS>CORSRule\"/g, \"xml:\\\"Cors>CorsRule\\\"\");\n```\n\n----------------------------------------\n\nTITLE: Object Storage Secret Type Definition for Loki in Kubernetes\nDESCRIPTION: Specifies the supported object storage providers for Loki's persistent storage. Options include S3, GCS, Azure, AlibabaCloud, and Swift, allowing flexibility in where log data is stored.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nObjectStorageSecretType (string alias)\n\nObjectStorageSecretType defines the type of storage which can be used with the Loki cluster.\n\nValue               Description\n\"alibabacloud\"      ObjectStorageSecretAlibabaCloud when using AlibabaCloud OSS for Loki storage\n\"azure\"            ObjectStorageSecretAzure when using Azure for Loki storage\n\"gcs\"              ObjectStorageSecretGCS when using GCS for Loki storage\n\"s3\"               ObjectStorageSecretS3 when using S3 for Loki storage\n\"swift\"            ObjectStorageSecretSwift when using Swift for Loki storage\n```\n\n----------------------------------------\n\nTITLE: Tearing Down k3d Environment\nDESCRIPTION: Command to tear down all k3d environments.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/k3d/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake down\n```\n\n----------------------------------------\n\nTITLE: Testing Azure Developer CLI Token Acquisition\nDESCRIPTION: This command verifies that the Azure Developer CLI can obtain an access token for the Azure Resource Manager, which is useful for validating that Azure Developer CLI authentication is functioning correctly.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nazd auth token --output json --scope https://management.core.windows.net/.default\n```\n\n----------------------------------------\n\nTITLE: Setting Width and Height in Go with Lip Gloss\nDESCRIPTION: Shows how to set minimum width and height for styled text using Lip Gloss.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\nvar style = lipgloss.NewStyle().\n    SetString(\"What's for lunch?\").\n    Width(24).\n    Height(32).\n    Foreground(lipgloss.Color(\"63\"))\n```\n\n----------------------------------------\n\nTITLE: Converting Strfmt Types to Strings in Go\nDESCRIPTION: Demonstrates how to convert Strfmt types to strings using the String() method or direct type conversion.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/strfmt/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nemail.String()\nstring(Email{})\n```\n\n----------------------------------------\n\nTITLE: Using Global Logger in Go with go-hclog\nDESCRIPTION: Demonstrates how to use the default global logger provided by go-hclog to log an info level message.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nhclog.Default().Info(\"hello world\")\n```\n\n----------------------------------------\n\nTITLE: Cloning Meta-monitoring Repository\nDESCRIPTION: Command to clone the Grafana meta-monitoring chart repository containing monitoring rules.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/grafana/meta-monitoring-chart/\n```\n\n----------------------------------------\n\nTITLE: Checking Boolean Constants in GopherLua\nDESCRIPTION: Example demonstrating the correct and incorrect ways to check for boolean values in GopherLua, emphasizing the need to use predefined constants.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nlv := L.Get(-1) // get the value at the top of the stack\n\nif lv == lua.LTrue { // correct\n}\n\nif bl, ok := lv.(lua.LBool); ok && bool(bl) { // wrong\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Type Validation in Go\nDESCRIPTION: Demonstrates implementation of custom type validators with context-aware validation and multiple validation rules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/asaskevich/govalidator\"\n\ntype CustomByteArray [6]byte // custom types are supported and can be validated\n\ntype StructWithCustomByteArray struct {\n  ID              CustomByteArray `valid:\"customByteArrayValidator,customMinLengthValidator\"` // multiple custom validators are possible as well and will be evaluated in sequence\n  Email           string          `valid:\"email\"`\n  CustomMinLength int             `valid:\"-\"`\n}\n\ngovalidator.CustomTypeTagMap.Set(\"customByteArrayValidator\", func(i interface{}, context interface{}) bool {\n  switch v := context.(type) { // you can type switch on the context interface being validated\n  case StructWithCustomByteArray:\n    // you can check and validate against some other field in the context,\n    // return early or not validate against the context at all – your choice\n  case SomeOtherType:\n    // ...\n  default:\n    // expecting some other type? Throw/panic here or continue\n  }\n\n  switch v := i.(type) { // type switch on the struct field being validated\n  case CustomByteArray:\n    for _, e := range v { // this validator checks that the byte array is not empty, i.e. not all zeroes\n      if e != 0 {\n        return true\n      }\n    }\n  }\n  return false\n})\ngovalidator.CustomTypeTagMap.Set(\"customMinLengthValidator\", func(i interface{}, context interface{}) bool {\n  switch v := context.(type) { // this validates a field against the value in another field, i.e. dependent validation\n  case StructWithCustomByteArray:\n    return len(v.ID) >= v.CustomMinLength\n  }\n  return false\n})\n```\n\n----------------------------------------\n\nTITLE: Valid Query Examples in LogQL\nDESCRIPTION: Examples showing valid query patterns that include either an equality matcher or proper regex syntax.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-3.md#2025-04-19_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n{cluster=\"us-east-1\",namespace=~\".*\"}\n{namespace=~\".+\"}\n```\n\n----------------------------------------\n\nTITLE: Importing Pygments Lexers for Various Languages and Formats\nDESCRIPTION: This code snippet lists import statements for multiple Pygments lexers. These lexers are used for syntax highlighting and parsing of different programming languages, markup languages, and file formats. The imports cover a wide range of categories including text formats, traffic scripts, theorem provers, templates, and more.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/pygments-lexers.txt#2025-04-19_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\npygments.lexers.textfmts.TodotxtLexer\npygments.lexers.trafficscript.RtsLexer\npygments.lexers.theorem.CoqLexer\npygments.lexers.theorem.IsabelleLexer\npygments.lexers.theorem.LeanLexer\npygments.lexers.templates.SmartyLexer\npygments.lexers.templates.VelocityLexer\npygments.lexers.templates.DjangoLexer\npygments.lexers.templates.MyghtyLexer\npygments.lexers.templates.MasonLexer\npygments.lexers.templates.MakoLexer\npygments.lexers.templates.CheetahLexer\npygments.lexers.templates.GenshiTextLexer\npygments.lexers.templates.GenshiMarkupLexer\npygments.lexers.templates.JspRootLexer\npygments.lexers.templates.EvoqueLexer\npygments.lexers.templates.ColdfusionLexer\npygments.lexers.templates.ColdfusionMarkupLexer\npygments.lexers.templates.TeaTemplateRootLexer\npygments.lexers.templates.HandlebarsLexer\npygments.lexers.templates.LiquidLexer\npygments.lexers.templates.TwigLexer\npygments.lexers.templates.Angular2Lexer\npygments.lexers.urbi.UrbiscriptLexer\npygments.lexers.typoscript.TypoScriptCssDataLexer\npygments.lexers.typoscript.TypoScriptHtmlDataLexer\npygments.lexers.typoscript.TypoScriptLexer\npygments.lexers.varnish.VCLLexer\npygments.lexers.verification.BoogieLexer\npygments.lexers.verification.SilverLexer\npygments.lexers.x10.X10Lexer\npygments.lexers.whiley.WhileyLexer\npygments.lexers.xorg.XorgLexer\npygments.lexers.webmisc.DuelLexer\npygments.lexers.webmisc.XQueryLexer\npygments.lexers.webmisc.QmlLexer\npygments.lexers.webmisc.CirruLexer\npygments.lexers.webmisc.SlimLexer\n```\n\n----------------------------------------\n\nTITLE: Logging Failed Health Check Requests in Grafana\nDESCRIPTION: These log entries show repeated failed attempts to connect to the Grafana health check endpoint. The errors indicate that the connection to the local Grafana instance is being refused, suggesting the service may not be running or is unreachable.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_40\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-05-07T11:59:23.116820392Z level=error caller=http_client.go:56 app=hgrun hgrun_version=0.1.453-59-gf3f63162a msg=\"request failed\" error=\"Get \\\"http://127.0.0.1:3000/api/health\\\": dial tcp 127.0.0.1:3000: connect: connection refused\" method=GET url=http://127.0.0.1:3000/api/health\n```\n\n----------------------------------------\n\nTITLE: Template for Adding New Adopters in Markdown\nDESCRIPTION: A markdown template for organizations to add their information to the adopters list. It includes fields for organization name, website link, environments where the operator is used, and optional details about specific use cases.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/website/content/adopters.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!--\n\nInsert your entry using this template keeping the list alphabetically sorted:\n\n## <Company/Organization Name>\n\nhttps://our-link.com/\n\nEnvironments: AWS, Azure, Google Cloud, Bare Metal, etc\n\n\nDetails (optional):\n- Ruler for LokiStack\n-->\n```\n\n----------------------------------------\n\nTITLE: Example Changelog Entry for Godo Release\nDESCRIPTION: An example of how to format a changelog entry for a new release of Godo. It includes the version number, date, and bullet points for each new feature or change, along with pull request IDs and contributors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [v1.8.0] - 2019-03-13\n\n- #210 - @jcodybaker - Expose tags on storage volume create/list/get.\n- #123 - @digitalocean - Update test dependencies\n```\n\n----------------------------------------\n\nTITLE: YAML Enhancement Metadata Configuration\nDESCRIPTION: Front matter metadata configuration for enhancement proposals including title, authors, reviewers, tracking information and related documents.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/enhancement_template.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: neat-enhancement-idea\nauthors:\n  - TBD\nreviewers:\n  - TBD\ncreation-date: yyyy-mm-dd\nlast-updated: yyyy-mm-dd\ntracking-link:\n  - TBD\nsee-also:\n  - \"/enhancements/this-other-neat-thing.md\"\nreplaces:\n  - \"/enhancements/that-less-than-great-idea.md\"\nsuperseded-by:\n  - \"/enhancements/our-past-effort.md\"\n```\n\n----------------------------------------\n\nTITLE: Field Removals in Azure SDK for Go\nDESCRIPTION: Breaking changes involving the removal of fields from various client option structs in the compute package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n// Removed fields\nField `Parameters` of struct `CloudServicesClientBeginUpdateOptions` has been removed\nField `Parameters` of struct `CloudServicesClientBeginCreateOrUpdateOptions` has been removed\nField `Parameters` of struct `CloudServicesUpdateDomainClientBeginWalkUpdateDomainOptions` has been removed\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackConditionReason Enum in Go\nDESCRIPTION: Defines the LokiStackConditionReason enum type for valid reasons of Loki deployment conditions. It includes reasons like FailedComponents, InvalidGatewayTenantSecret, and others.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackConditionReason string\n\nconst (\n  ReasonFailedComponents LokiStackConditionReason = \"FailedComponents\"\n  ReasonInvalidGatewayTenantSecret LokiStackConditionReason = \"InvalidGatewayTenantSecret\"\n  // ... other enum values\n)\n```\n\n----------------------------------------\n\nTITLE: Finding Multiple Matches with regexp2 in Go\nDESCRIPTION: Implementation of a function similar to regexp.FindAllString that finds all matches in a string using FindNextMatch method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dlclark/regexp2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc regexp2FindAllString(re *regexp2.Regexp, s string) []string {\n\tvar matches []string\n\tm, _ := re.FindStringMatch(s)\n\tfor m != nil {\n\t\tmatches = append(matches, m.String())\n\t\tm, _ = re.FindNextMatch(m)\n\t}\n\treturn matches\n}\n```\n\n----------------------------------------\n\nTITLE: Example for Listing Deletion Requests with Basic Auth\nDESCRIPTION: Example cURL command to list deletion requests for Grafana Enterprise Logs using Basic Authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\ncurl -u \"Tenant1:$API_TOKEN\" \\\n  -X GET \\\n  <compactor_addr>/loki/api/v1/delete\n```\n\n----------------------------------------\n\nTITLE: Specifying RESP Protocol Version with Go-Redis\nDESCRIPTION: Shows how to specify the Redis RESP protocol version when creating a new Redis client. This allows compatibility with different Redis server versions and protocol requirements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n    rdb := redis.NewClient(&redis.Options{\n        Addr:     \"localhost:6379\",\n        Password: \"\", // no password set\n        DB:       0,  // use default DB\n        Protocol: 3, // specify 2 for RESP 2 or 3 for RESP 3\n    })\n\n```\n\n----------------------------------------\n\nTITLE: Node Resource Utilization Assessment for Pod Eviction\nDESCRIPTION: Log entries showing the Kubernetes descheduler's decision-making process when evaluating node resource utilization. The logs indicate resource usage metrics, total pod count, and number of removable vs. non-removable pods on the target node.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_11\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.947137       1 nodeutilization.go:264] \"Evicting pods from node\" node=\"gke-dev-us-central-0-spot-n2s8-0-1dd3-f81338c4-g7pt\" usage={\"cpu\":\"6826m\",\"memory\":\"16564Mi\",\"pods\":\"20\"}\nI0507 12:02:27.946987       1 defaultevictor.go:163] \"pod does not fit on any other node because of nodeSelector(s), Taint(s), or nodes marked as unschedulable\" pod=\"gel-sbdev/gel-4\"\nI0507 12:02:27.946977       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"gel-sbdev/gel-4\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-vpgr\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory]\"\n```\n\n----------------------------------------\n\nTITLE: Managing Dependencies with Go Modules\nDESCRIPTION: Commands for adding and updating dependencies using Go modules, including picking specific versions and updating vendor directory.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Pick the latest tagged release.\ngo get example.com/some/module/pkg\n\n# Pick a specific version.\ngo get example.com/some/module/pkg@vX.Y.Z\n```\n\n----------------------------------------\n\nTITLE: Analyzing Pod Scheduling Failures in GKE Cluster\nDESCRIPTION: Kubernetes scheduler logs showing repeated attempts to schedule a Loki querier pod (querier-burst-6b5f6db455-5zvkm) across different nodes. Each entry shows why scheduling failed, including issues like insufficient CPU/memory, mismatched node selectors, and taint conflicts.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_5\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.971766       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.971694       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-7h6b\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Loki Log Entries\nDESCRIPTION: These log entries show various operations and events in Grafana Loki, including file target management, tailing, and error handling. They provide insights into the internal workings of Loki's log ingestion and processing pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:42.76773819Z caller=filetargetmanager.go:397 level=info component=logs logs_config=default msg=\"Removing target\" key=\"/var/log/pods/*045e328e-c799-47f0-80ed-193ee19a7618/grafana/*.log:{app=\\\"grafana\\\", conprof=\\\"true\\\", container=\\\"grafana\\\", instanceId=\\\"i1212\\\", job=\\\"hosted-grafana/grafana\\\", name=\\\"grafana\\\", namespace=\\\"hosted-grafana\\\", org=\\\"org12\\\", plan=\\\"free\\\", pod=\\\"org12-grafana-54444b9976-ttcfk\\\", pod_template_hash=\\\"54444b9976\\\", resource_version=\\\"167262602\\\", slug=\\\"org12\\\", stackId=\\\"121212\\\"}\"\nts=2024-04-16T15:10:42.767444506Z caller=filetarget.go:192 level=info component=logs logs_config=default msg=\"filetarget: watcher closed, tailer stopped, positions saved\" path=/var/log/pods/*045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/*.log\nts=2024-04-16T15:10:42.767415776Z caller=tailer.go:245 level=info component=logs logs_config=default component=tailer msg=\"stopped tailing file\" path=/var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log\nts=2024-04-16T15:10:42.767389305Z caller=tailer.go:118 level=info component=logs logs_config=default component=tailer msg=\"position timer: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log\nts=2024-04-16T15:10:42.767367185Z caller=tailer.go:155 level=info component=logs logs_config=default component=tailer msg=\"tail routine: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log\nts=2024-04-16T15:10:42.767323154Z caller=tailer.go:164 level=info component=logs logs_config=default component=tailer msg=\"tail routine: tail channel closed, stopping tailer\" path=/var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log reason=null\nts=2024-04-16T15:10:42.768149996Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:42.767208786Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-67d4884694-zttck_be16c84b-12ba-4590-8e1d-22bbf77c01a4/hg-plugins/0.log to appear...\"\nts=2024-04-16T15:10:42.766909734Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-67d4884694-zttck_be16c84b-12ba-4590-8e1d-22bbf77c01a4/hg-plugins/0.log ...\"\nts=2024-04-16T15:10:42.766936439Z caller=tailer.go:207 level=info component=logs logs_config=default component=tailer msg=\"skipping update of position for a file which does not currently exist\" path=/var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log\nts=2024-04-16T15:10:42.766841898Z caller=filetargetmanager.go:397 level=info component=logs logs_config=default msg=\"Removing target\" key=\"/var/log/pods/*045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/*.log:{app=\\\"grafana\\\", conprof=\\\"true\\\", container=\\\"hg-plugins\\\", instanceId=\\\"i1212\\\", job=\\\"hosted-grafana/grafana\\\", name=\\\"grafana\\\", namespace=\\\"hosted-grafana\\\", org=\\\"org12\\\", plan=\\\"free\\\", pod=\\\"org12-grafana-54444b9976-ttcfk\\\", pod_template_hash=\\\"54444b9976\\\", resource_version=\\\"167262602\\\", slug=\\\"org12\\\", stackId=\\\"121212\\\"}\"\nts=2024-04-16T15:10:42.749268494Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log to appear...\"\nts=2024-04-16T15:10:42.749193363Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-54444b9976-ttcfk_045e328e-c799-47f0-80ed-193ee19a7618/hg-plugins/0.log ...\"\nts=2024-04-16T15:10:42.749456785Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:42.728605579Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-65c44c9895-6zvtx_a12648d7-6689-4c79-9831-c366cce8d104/hosted-grafana-security/0.log to appear...\"\nts=2024-04-16T15:10:42.728528002Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-65c44c9895-6zvtx_a12648d7-6689-4c79-9831-c366cce8d104/hosted-grafana-security/0.log ...\"\nts=2024-04-16T15:10:42.73359549Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/gr-prod-03_graphite-querier-644cb88c5-k6mbl_bba9f1fd-60ff-432d-a788-19cd2e04af92/querier/0.log op=CREATE\nts=2024-04-16T15:10:42.733215247Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/gr-prod-03_graphite-querier-644cb88c5-k6mbl_bba9f1fd-60ff-432d-a788-19cd2e04af92/querier/0.log.20240416-151042 op=CREATE\nts=2024-04-16T15:10:42.728105968Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/gr-prod-03_graphite-querier-644cb88c5-k6mbl_bba9f1fd-60ff-432d-a788-19cd2e04af92/querier/0.log.20240416-151012.gz op=CREATE\nts=2024-04-16T15:10:42.729086881Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod_query-frontend-9b95769c4-88ptz_c65aaf2a-b17d-43d7-ae47-592a90086d0e/query-frontend/2.log.20240416-150912.tmp op=CREATE\nts=2024-04-16T15:10:42.72344954Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-65c44c9895-6zvtx_a12648d7-6689-4c79-9831-c366cce8d104/grafana/0.log to appear...\"\nts=2024-04-16T15:10:42.723192811Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-65c44c9895-6zvtx_a12648d7-6689-4c79-9831-c366cce8d104/grafana/0.log ...\"\nts=2024-04-16T15:10:42.723512942Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod-011_querier-burst-67f76b84bf-jp5r2_0fb2bd0f-7fd3-42a1-a2bc-f4b1173dca16/querier/0.log op=CREATE\nts=2024-04-16T15:10:42.722517505Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod-011_querier-burst-67f76b84bf-jp5r2_0fb2bd0f-7fd3-42a1-a2bc-f4b1173dca16/querier/0.log.20240416-151042 op=CREATE\nts=2024-04-16T15:10:42.72053387Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod3_parallel-querier-burst-68d978b6bd-tqtt7_53706fa4-7ae2-4000-9905-5c2289ffcb80/parallel-querier/0.log op=CREATE\nts=2024-04-16T15:10:42.720198477Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod3_parallel-querier-burst-68d978b6bd-tqtt7_53706fa4-7ae2-4000-9905-5c2289ffcb80/parallel-querier/0.log.20240416-151042 op=CREATE\nts=2024-04-16T15:10:42.719530886Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod-011_querier-burst-67f76b84bf-jp5r2_0fb2bd0f-7fd3-42a1-a2bc-f4b1173dca16/querier/0.log.20240416-150752.gz op=CREATE\nts=2024-04-16T15:10:42.718029955Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod3_parallel-querier-burst-68d978b6bd-tqtt7_53706fa4-7ae2-4000-9905-5c2289ffcb80/parallel-querier/0.log.20240416-145001.gz op=CREATE\nts=2024-04-16T15:10:42.712336239Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-d4f89f5f4-wvb7x_2c16ac56-b4fb-42db-b091-5feaafc58aae/hosted-grafana-security/0.log to appear...\"\nts=2024-04-16T15:10:42.712265048Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-d4f89f5f4-wvb7x_2c16ac56-b4fb-42db-b091-5feaafc58aae/hosted-grafana-security/0.log ...\"\nts=2024-04-16T15:10:42.716568736Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:42.716271215Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 94 on line 1: unexpected '\\\"'\"\nts=2024-04-16T15:10:42.713422105Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-7b5df5b97b-chz7b_c41f2190-4e4f-4361-b8ff-56c9a1e1bcf9/grafana/0.log to appear...\"\nts=2024-04-16T15:10:42.713328587Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-7b5df5b97b-chz7b_c41f2190-4e4f-4361-b8ff-56c9a1e1bcf9/hosted-grafana-security/0.log to appear...\"\nts=2024-04-16T15:10:42.713234075Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-7b5df5b97b-chz7b_c41f2190-4e4f-4361-b8ff-56c9a1e1bcf9/hosted-grafana-security/0.log ...\"\n```\n\n----------------------------------------\n\nTITLE: Updated Token Struct in Go for JWT Library v5.0.0\nDESCRIPTION: Shows the updated Token struct in v5.0.0, which now stores the Signature as a byte slice instead of a string, consistent with other decoded token parts.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype Token struct {\n\tRaw       string                 // Raw contains the raw token\n\tMethod    SigningMethod          // Method is the signing method used or to be used\n\tHeader    map[string]interface{} // Header is the first segment of the token in decoded form\n\tClaims    Claims                 // Claims is the second segment of the token in decoded form\n\tSignature []byte                 // Signature is the third segment of the token in decoded form\n\tValid     bool                   // Valid specifies if the token is valid\n}\n```\n\n----------------------------------------\n\nTITLE: Patching PVCs to Remove Finalizers in Kubernetes\nDESCRIPTION: Commands to patch stuck PVCs that won't delete due to finalizers. This troubleshooting technique removes the 'kubernetes.io/pv-protection' finalizer to allow deletion when PVCs are stuck in Terminating state.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nkubectl patch pvc wal-lokistack-dev-ingester-1 -p '{\"metadata\":{\"finalizers\":null}}' -n openshift-logging\nkubectl patch pvc storage-lokistack-dev-ingester-1 -p '{\"metadata\":{\"finalizers\":null}}' -n openshift-logging\n\nkubectl patch pvc wal-lokistack-dev-ruler-1 -p '{\"metadata\":{\"finalizers\":null}}' -n openshift-logging\nkubectl patch pvc storage-lokistack-dev-ruler-1 -p '{\"metadata\":{\"finalizers\":null}}' -n openshift-logging\n\nkubectl patch pvc storage-lokistack-dev-index-gateway-1 -p '{\"metadata\":{\"finalizers\":null}}' -n openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Querying Terminal Cursor Position with ANSI Escape Sequence\nDESCRIPTION: Uses ANSI escape sequence to query the current cursor position in the terminal. The sequence '\\033[6n' prompts the terminal to respond with the current row and column position of the cursor in the format 'ESC[{row};{column}R'.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033[6n\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up Loki Repository for Pre-Go 1.18 Development\nDESCRIPTION: Steps to set up the Loki repository for development using Go versions prior to 1.18, including adding a fork as a remote.\nSOURCE: https://github.com/grafana/loki/blob/main/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ go get github.com/grafana/loki\n$ cd $GOPATH/src/github.com/grafana/loki # GOPATH is $HOME/go by default.\n\n$ git remote add <FORK_NAME> <FORK_URL>\n```\n\n----------------------------------------\n\nTITLE: Installing the Loki Plugin to Local Logstash\nDESCRIPTION: Command to install the built Loki output plugin gem into a local Logstash installation.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nbin/logstash-plugin install --no-verify --local logstash-output-loki-1.0.0.gem\n```\n\n----------------------------------------\n\nTITLE: Initializing Terraform for GCP Log Export Configuration\nDESCRIPTION: Command to initialize Terraform in the current directory. This sets up the working directory by downloading necessary provider plugins and modules.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/gcplog/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nterraform init\n```\n\n----------------------------------------\n\nTITLE: Testing Route Variables in Go\nDESCRIPTION: Table-driven test implementation for testing route variables in Gorilla Mux handlers.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n// endpoints_test.go\nfunc TestMetricsHandler(t *testing.T) {\n    tt := []struct{\n        routeVariable string\n        shouldPass bool\n    }{\n        {\"goroutines\", true},\n        {\"heap\", true},\n        {\"counters\", true},\n        {\"queries\", true},\n        {\"adhadaeqm3k\", false},\n    }\n\n    for _, tc := range tt {\n        path := fmt.Sprintf(\"/metrics/%s\", tc.routeVariable)\n        req, err := http.NewRequest(\"GET\", path, nil)\n        if err != nil {\n            t.Fatal(err)\n        }\n\n        rr := httptest.NewRecorder()\n\t\n\t// To add the vars to the context, \n\t// we need to create a router through which we can pass the request.\n\trouter := mux.NewRouter()\n        router.HandleFunc(\"/metrics/{type}\", MetricsHandler)\n        router.ServeHTTP(rr, req)\n\n        // In this case, our MetricsHandler returns a non-200 response\n        // for a route variable it doesn't know about.\n        if rr.Code == http.StatusOK && !tc.shouldPass {\n            t.Errorf(\"handler should have failed on routeVariable %s: got %v want %v\",\n                tc.routeVariable, rr.Code, http.StatusOK)\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Tabs in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to customize the rendering of tab characters in Lip Gloss styles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\nstyle := lipgloss.NewStyle() // tabs will render as 4 spaces, the default\nstyle = style.TabWidth(2)    // render tabs as 2 spaces\nstyle = style.TabWidth(0)    // remove tabs entirely\nstyle = style.TabWidth(lipgloss.NoTabConversion) // leave tabs intact\n```\n\n----------------------------------------\n\nTITLE: Listing Available Kafka Topics\nDESCRIPTION: Output example of listing all available Kafka topics using the make list-topics command, showing both the default __consumer_offsets topic and a custom promtail topic.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/kafka/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n make list-topics\n__consumer_offsets\npromtail\n```\n\n----------------------------------------\n\nTITLE: Assembly System Call Function Prototypes\nDESCRIPTION: Core system call dispatch function signatures that must be implemented in assembly for each GOOS/GOARCH pair. These functions handle direct system call interactions with different argument counts and scheduling behaviors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/golang.org/x/sys/unix/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc Syscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)\nfunc Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr)\nfunc RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)\n```\n\n----------------------------------------\n\nTITLE: Fix Content-Type in Batch Request\nDESCRIPTION: Updates Content-Type header in submit batch request to use multipartContentType.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: \n  - zz_container_client.go\n  - zz_service_client.go\n  where: $\n  transform: >\n    return $.\n      replace(/req.SetBody\\(body\\,\\s+\"application\\/xml\"\\)/g, `req.SetBody(body, multipartContentType)`);\n```\n\n----------------------------------------\n\nTITLE: Issue Reference for Recommendation Engine API Generation\nDESCRIPTION: Issue reference for starting to generate the Recommendation Engine API v1beta1 client libraries.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n([#3686](https://www.github.com/googleapis/google-cloud-go/issues/3686))\n```\n\n----------------------------------------\n\nTITLE: Commit Hash References\nDESCRIPTION: Git commit hash references and issue links for various feature implementations and fixes\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n[ac22beb](https://www.github.com/googleapis/google-cloud-go/commit/ac22beb9b90771b24c8b35db7587ad3f5c0a970e)\n[#3526](https://www.github.com/googleapis/google-cloud-go/issues/3526))\n[ab2af0b](https://www.github.com/googleapis/google-cloud-go/commit/ab2af0b32630dd97f44800f4e273184f887375db)\n[#3539](https://www.github.com/googleapis/google-cloud-go/issues/3539)\n```\n\n----------------------------------------\n\nTITLE: Adding Protocol Requests Rate Metric in Go\nDESCRIPTION: Implements a new metric to track the rate of protocol requests in the Kafka client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nfeat(metrics): add protocol-requests-rate metric\n```\n\n----------------------------------------\n\nTITLE: Installing the Clipboard Copy Utility\nDESCRIPTION: Command to install the gocopy utility which enables copying content to the clipboard from the command line. Includes an example of piping file content to the clipboard.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/atotto/clipboard/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ go get github.com/atotto/clipboard/cmd/gocopy\n$ # example:\n$ cat document.txt | gocopy\n```\n\n----------------------------------------\n\nTITLE: Implementing ValidatePattern Function in Go\nDESCRIPTION: Function to validate glob patterns that use forward slashes as path separators.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc ValidatePattern(s string) bool\n```\n\n----------------------------------------\n\nTITLE: Changelog Format in Markdown\nDESCRIPTION: A comprehensive changelog detailing version history from v1.2.2 to v1.8.2, including release dates, features added, bugs fixed, breaking changes and other modifications.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Release History\n\n## 1.8.2 (2025-02-12)\n\n### Other Changes\n* Upgraded dependencies\n\n## 1.8.1 (2025-01-15)\n\n### Bugs Fixed\n* User credential types inconsistently log access token scopes\n* `DefaultAzureCredential` skips managed identity in Azure Container Instances\n* Credentials having optional tenant IDs such as `AzureCLICredential` and\n  `InteractiveBrowserCredential` require setting `AdditionallyAllowedTenants`\n  when used with some clients\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Kubernetes API Validation - Initial v0.22.6\nDESCRIPTION: Initial benchmark results showing ~60M allocations when validating the Kubernetes API using go-openapi/validate v0.22.6. Shows baseline performance metrics for CPU usage and memory allocations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/validate/BENCHMARK.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ngoos: linux\ngoarch: amd64\npkg: github.com/go-openapi/validate\ncpu: AMD Ryzen 7 5800X 8-Core Processor\nBenchmark_KubernetesSpec/validating_kubernetes_API-16         \t       1\t8549863982 ns/op\t7067424936 B/op\t59583275 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Creating and Updating Metrics in Go\nDESCRIPTION: Demonstrates how to create and update different types of metrics including counters, gauges, histograms, meters, and timers. Also shows how to register metrics with the default registry.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nc := metrics.NewCounter()\nmetrics.Register(\"foo\", c)\nc.Inc(47)\n\ng := metrics.NewGauge()\nmetrics.Register(\"bar\", g)\ng.Update(47)\n\nr := NewRegistry()\ng := metrics.NewRegisteredFunctionalGauge(\"cache-evictions\", r, func() int64 { return cache.getEvictionsCount() })\n\ns := metrics.NewExpDecaySample(1028, 0.015) // or metrics.NewUniformSample(1028)\nh := metrics.NewHistogram(s)\nmetrics.Register(\"baz\", h)\nh.Update(47)\n\nm := metrics.NewMeter()\nmetrics.Register(\"quux\", m)\nm.Mark(47)\n\nt := metrics.NewTimer()\nmetrics.Register(\"bang\", t)\nt.Time(func() {})\nt.Update(47)\n```\n\n----------------------------------------\n\nTITLE: Template-based Status Code Replacement\nDESCRIPTION: Configuration showing how to use templates to replace HTTP status codes with descriptive text.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/replace.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- replace:\n    expression: \"^(\\\\S+) (\\\\S+) (\\\\S+) \\\\[([\\\\w:/]+\\\\s[+\\\\-]\\\\d{4})\\\\] \\\"(\\\\S+)\\\\s?(\\\\S+)?\\\\s?(\\\\S+)?\\\" (\\\\d{3}|-) (\\\\d+|-)\\\\s?\\\"?([^\\\"]*)\\\"?\\\\s?\\\"?([^\\\"]*)?\\\"?$\"\n    replace: '{{ if eq .Value \"200\" }}{{ Replace .Value \"200\" \"HttpStatusOk\" -1 }}{{ else }}{{ .Value | ToUpper }}{{ end }}'\n```\n\n----------------------------------------\n\nTITLE: Building Promtail with Journal Support in Go\nDESCRIPTION: Command to build Promtail with Journal support by using the new promtail_journal_enabled build tag. This allows Linux/CentOS users with CGO enabled to avoid installing libsystemd-dev/systemd-devel libraries if they don't need Journal support.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngo build --tags=promtail_journal_enabled ./clients/cmd/promtail\n```\n\n----------------------------------------\n\nTITLE: Verifying Meta-Monitoring Stack Installation\nDESCRIPTION: Kubectl command to verify the installation of the meta-monitoring stack by checking pods in the meta namespace.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-local-monitoring.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods -n meta\n```\n\n----------------------------------------\n\nTITLE: Creating Promtail Systemd Service Configuration\nDESCRIPTION: A systemd service file for running Promtail as a service. It defines the service execution parameters, restart policy, and user context for the Promtail process.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/hack/boilerplate.go.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n[Unit]\nDescription=Promtail service\nAfter=network.target\n\n[Service]\nType=simple\nUser=ec2-user\nExecStart=/usr/local/bin/promtail -config.file /etc/promtail/config.yml\nRestart=always\nRestartSec=5\nStartLimitInterval=0\n\n[Install]\nWantedBy=multi-user.target\n```\n\n----------------------------------------\n\nTITLE: Markdown Version History and Changelog\nDESCRIPTION: Structured changelog entries detailing version updates, bug fixes, documentation changes and new features for the longrunning module.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/longrunning/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changes\n\n## [0.6.6](https://github.com/googleapis/google-cloud-go/compare/longrunning/v0.6.5...longrunning/v0.6.6) (2025-03-13)\n\n### Bug Fixes\n\n* **longrunning:** Update golang.org/x/net to 0.37.0\n```\n\n----------------------------------------\n\nTITLE: Importing JWT v4 Library in Go\nDESCRIPTION: New import path for the JWT library version 4.0.0 which maintains backwards compatibility with v3.x.y tags and github.com/dgrijalva/jwt-go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v4/MIGRATION_GUIDE.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n\"github.com/golang-jwt/jwt/v4\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Grafana Loki in Go\nDESCRIPTION: Command to run tests for the Grafana Loki project using Go with vendor modules. This ensures all tests pass before submitting a pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/digitalocean/godo/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo test -mod=vendor .\n```\n\n----------------------------------------\n\nTITLE: Example Cloudflare JSON Log Output\nDESCRIPTION: This JSON snippet demonstrates the structure of a typical log entry returned by the Cloudflare API, including various fields related to client requests, edge server processing, and security information.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_34\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"CacheCacheStatus\": \"miss\",\n\t\"CacheResponseBytes\": 8377,\n\t\"CacheResponseStatus\": 200,\n\t\"CacheTieredFill\": false,\n\t\"ClientASN\": 786,\n\t\"ClientCountry\": \"gb\",\n\t\"ClientDeviceType\": \"desktop\",\n\t\"ClientIP\": \"100.100.5.5\",\n\t\"ClientIPClass\": \"noRecord\",\n\t\"ClientRequestBytes\": 2691,\n\t\"ClientRequestHost\": \"www.foo.com\",\n\t\"ClientRequestMethod\": \"GET\",\n\t\"ClientRequestPath\": \"/comments/foo/\",\n\t\"ClientRequestProtocol\": \"HTTP/1.0\",\n\t\"ClientRequestReferer\": \"https://www.foo.com/foo/168855/?offset=8625\",\n\t\"ClientRequestURI\": \"/foo/15248108/\",\n\t\"ClientRequestUserAgent\": \"some bot\",\n        \"ClientRequestSource\": \"1\"\n\t\"ClientSSLCipher\": \"ECDHE-ECDSA-AES128-GCM-SHA256\",\n\t\"ClientSSLProtocol\": \"TLSv1.2\",\n\t\"ClientSrcPort\": 39816,\n\t\"ClientXRequestedWith\": \"\",\n\t\"EdgeColoCode\": \"MAN\",\n\t\"EdgeColoID\": 341,\n\t\"EdgeEndTimestamp\": 1637336610671000000,\n\t\"EdgePathingOp\": \"wl\",\n\t\"EdgePathingSrc\": \"macro\",\n\t\"EdgePathingStatus\": \"nr\",\n\t\"EdgeRateLimitAction\": \"\",\n\t\"EdgeRateLimitID\": 0,\n\t\"EdgeRequestHost\": \"www.foo.com\",\n\t\"EdgeResponseBytes\": 14878,\n\t\"EdgeResponseCompressionRatio\": 1,\n\t\"EdgeResponseContentType\": \"text/html\",\n\t\"EdgeResponseStatus\": 200,\n\t\"EdgeServerIP\": \"8.8.8.8\",\n\t\"EdgeStartTimestamp\": 1637336610517000000,\n\t\"FirewallMatchesActions\": [],\n\t\"FirewallMatchesRuleIDs\": [],\n\t\"FirewallMatchesSources\": [],\n\t\"OriginIP\": \"8.8.8.8\",\n\t\"OriginResponseBytes\": 0,\n\t\"OriginResponseHTTPExpires\": \"\",\n\t\"OriginResponseHTTPLastModified\": \"\",\n\t\"OriginResponseStatus\": 200,\n\t\"OriginResponseTime\": 123000000,\n\t\"OriginSSLProtocol\": \"TLSv1.2\",\n\t\"ParentRayID\": \"00\",\n\t\"RayID\": \"6b0a...\",\n        \"RequestHeaders\": [],\n        \"ResponseHeaders\": [\n          \"x-foo\": \"bar\"\n        ],\n\t\"SecurityLevel\": \"med\",\n\t\"WAFAction\": \"unknown\",\n\t\"WAFFlags\": \"0\",\n\t\"WAFMatchedVar\": \"\",\n\t\"WAFProfile\": \"unknown\",\n\t\"WAFRuleID\": \"\",\n\t\"WAFRuleMessage\": \"\",\n\t\"WorkerCPUTime\": 0,\n\t\"WorkerStatus\": \"unknown\",\n\t\"WorkerSubrequest\": false,\n\t\"WorkerSubrequestCount\": 0,\n\t\"ZoneID\": 1234\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Kafka Client Library in Go\nDESCRIPTION: Updates the Sarama Kafka client library from version 1.29.1 to 1.32.0. This includes multiple minor version bumps, likely incorporating new features and improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_26\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/Shopify/sarama from 1.29.1 to 1.32.0\n```\n\n----------------------------------------\n\nTITLE: Enabling Exemplars in Console\nDESCRIPTION: Example showing how to enable the exemplars feature by setting the OTEL_GO_X_EXEMPLAR environment variable to true, which allows samples of measurements to be exported directly as exemplars.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_GO_X_EXEMPLAR=true\n```\n\n----------------------------------------\n\nTITLE: Logging Image Pull Error in Kubernetes\nDESCRIPTION: Error log entry showing a failure to start a container due to an image pull back-off issue in Kubernetes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\nE0507 11:59:38.539381    4590 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/hosted-grafana/hosted-grafana-pro:11.1.0-ephemeral-6433-919-1\\\\\\\"\\\"\" pod=\"hosted-grafana/ephemeral1180076306433stephan-grafana-74cf7bb5b7-qmfgj\" podUID=\"0b654534-e87f-4660-a634-3aa23906f24d\"\n```\n\n----------------------------------------\n\nTITLE: LZ4 CLI Usage Example\nDESCRIPTION: Command line interface usage showing compression and decompression options including block checksum, compression level, and stream checksum settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pierrec/lz4/v4/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nUsage of lz4c:\n  -version\n        print the program version\n\nSubcommands:\nCompress the given files or from stdin to stdout.\ncompress [arguments] [<file name> ...]\n  -bc\n        enable block checksum\n  -l int\n        compression level (0=fastest)\n  -sc\n        disable stream checksum\n  -size string\n        block max size [64K,256K,1M,4M] (default \"4M\")\n\nUncompress the given files or from stdin to stdout.\nuncompress [arguments] [<file name> ...]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Loki UI Project in Bash\nDESCRIPTION: This command installs the necessary dependencies for the Loki UI project using npm.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/frontend/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Implementing LState Pool Pattern\nDESCRIPTION: Implementation of a thread-safe pool for managing LState instances using sync.Pool pattern. Provides methods for getting, putting, and cleaning up LState instances.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_24\n\nLANGUAGE: go\nCODE:\n```\ntype lStatePool struct {\n    m     sync.Mutex\n    saved []*lua.LState\n}\n\nfunc (pl *lStatePool) Get() *lua.LState {\n    pl.m.Lock()\n    defer pl.m.Unlock()\n    n := len(pl.saved)\n    if n == 0 {\n        return pl.New()\n    }\n    x := pl.saved[n-1]\n    pl.saved = pl.saved[0 : n-1]\n    return x\n}\n\nfunc (pl *lStatePool) New() *lua.LState {\n    L := lua.NewState()\n    // setting the L up here.\n    // load scripts, set global variables, share channels, etc...\n    return L\n}\n\nfunc (pl *lStatePool) Put(L *lua.LState) {\n    pl.m.Lock()\n    defer pl.m.Unlock()\n    pl.saved = append(pl.saved, L)\n}\n\nfunc (pl *lStatePool) Shutdown() {\n    for _, L := range pl.saved {\n        L.Close()\n    }\n}\n\n// Global LState pool\nvar luaPool = &lStatePool{\n    saved: make([]*lua.LState, 0, 4),\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Loki Monitoring Helm Chart\nDESCRIPTION: Commands to add the Grafana Helm repository and install the k8s-monitoring chart.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/meta-monitoring/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\nhelm install meta-loki grafana/k8s-monitoring \\\n  --namespace meta \\\n  -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Updating BigQuery Table Metadata in Go\nDESCRIPTION: This snippet demonstrates how to update BigQuery table metadata using the new Table.Update method. It replaces the deprecated Table.Patch method with a new struct-based update approach.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_38\n\nLANGUAGE: go\nCODE:\n```\nmetadata, err := table.Update(ctx, bigquery.TableMetadataToUpdate{\n    Description: \"new description\",\n})\n```\n\n----------------------------------------\n\nTITLE: Creating BigQuery Tables in Go\nDESCRIPTION: This code shows how to create a BigQuery table using the updated API. It replaces the deprecated Client.CreateTable method with a new chained method call ending in Create.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_35\n\nLANGUAGE: go\nCODE:\n```\nclient.DatasetInProject(\"project\", \"dataset\").Table(\"table\").Create(ctx)\n```\n\n----------------------------------------\n\nTITLE: Markdown Code of Conduct Document\nDESCRIPTION: Complete markdown document containing the Code of Conduct guidelines, including sections on pledge, standards, responsibilities, scope, enforcement and attribution.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/strfmt/CODE_OF_CONDUCT.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at ivan+abuse@flanders.co.nz. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Auth Lease Revocation Log Entry\nDESCRIPTION: Log entry format showing lease revocation events from Kubernetes authentication. Each entry contains a timestamp, log level, operation and lease ID with region information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_6\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:56:12.454Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/he96ec11890f253d73b7eaf843fb6a9f662c5b7e40e00959e93b52ea5bc9ffd47\n```\n\n----------------------------------------\n\nTITLE: Pod Status Update Logs\nDESCRIPTION: Kubernetes kubelet logs showing pod status updates and container synchronization errors, including CrashLoopBackOff and ImagePullBackOff scenarios.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_2\n\nLANGUAGE: log\nCODE:\n```\nI0507 11:59:44.523502    4727 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-x82q\" status=\"Running\"\nE0507 11:59:43.923954    4643 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with CrashLoopBackOff: \\\"back-off 5m0s restarting failed container=grafana pod=benchloadtestingxxl2-grafana-56b7c6b6df-j7jh6_hosted-grafana(83fb0f38-728e-4050-9500-6ac9fc9f21c8)\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Example Prometheus Metric Output\nDESCRIPTION: Shows the resulting metric format after applying the Kubernetes pod scraping configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/lids/0005-loki-mixin-configuration-improvements.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nup{job=\"kubernetes-pods\", ...}\n```\n\n----------------------------------------\n\nTITLE: Creating External Name Service for Meta-Monitoring\nDESCRIPTION: Command to create an ExternalName service for cross-namespace communication between Loki and meta-monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create service externalname mmc-alloy-external --external-name meta-alloy.meta.svc.cluster.local -n default\n```\n\n----------------------------------------\n\nTITLE: RemoteWriteClientQueue Configuration\nDESCRIPTION: Defines the configuration for remote write client queue including buffer capacity, sharding, and retry parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ncapacity: int32          # Buffer size per shard\nmaxShards: int32        # Maximum concurrency\nminShards: int32        # Minimum concurrency\nmaxSamplesPerSend: int32 # Max samples per batch\nbatchSendDeadline: duration # Max wait time\nminBackOffPeriod: duration # Initial retry delay\nmaxBackOffPeriod: duration # Maximum retry delay\n```\n\n----------------------------------------\n\nTITLE: Migrating ManagedIdentityCredential Constructor in Go Azure Identity\nDESCRIPTION: Breaking change showing how to migrate from the old to new signature of NewManagedIdentityCredential. The new version removes the ID parameter and uses ManagedIdentityCredentialOptions to specify client or resource IDs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// before\ncred, err := NewManagedIdentityCredential(\"client-id\", nil)\n// or, for a resource ID\nopts := &ManagedIdentityCredentialOptions{ID: ResourceID}\ncred, err := NewManagedIdentityCredential(\"/subscriptions/...\", opts)\n\n// after\nclientID := ClientID(\"7cf7db0d-...\")\nopts := &ManagedIdentityCredentialOptions{ID: clientID}\n// or, for a resource ID\nresID := ResourceID(\"/subscriptions/...\")\nopts := &ManagedIdentityCredentialOptions{ID: resID}\ncred, err := NewManagedIdentityCredential(opts)\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Managed Identity for LokiStack using Azure CLI\nDESCRIPTION: This shell command creates an Azure Managed Identity in the same resource group as the Kubernetes cluster hosting LokiStack, which is a prerequisite for Workload Identity Federation.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\naz identity create \\\n  --name $IDENTITY_NAME \\\n  --resource-group $RESOURCE_GROUP_NAME \\\n  --location $LOCATION \\\n  --subscription $SUBSCRIPTION_ID\n```\n\n----------------------------------------\n\nTITLE: Defining Alerting and Recording Rules in YAML\nDESCRIPTION: This YAML file defines alerting and recording rules for Loki. It includes examples of alerting on error rates and leaked credentials, as well as a recording rule for NGINX request rates.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/alert/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ngroups:\n  - name: should_fire\n    rules:\n      - alert: HighPercentageError\n        expr: |\n          sum(rate({app=\"foo\", env=\"production\"} |= \"error\" [5m])) by (job)\n            /\n          sum(rate({app=\"foo\", env=\"production\"}[5m])) by (job)\n            > 0.05\n        for: 10m\n        labels:\n          severity: page\n        annotations:\n          summary: High request latency\n  - name: credentials_leak\n    rules:\n      - alert: http-credentials-leaked\n        annotations:\n          message: \"{{ $labels.job }} is leaking http basic auth credentials.\"\n        expr: 'sum by (cluster, job, pod) (count_over_time({namespace=\"prod\"} |~ \"http(s?)://(\\\\w+):(\\\\w+)@\" [5m]) > 0)'\n        for: 10m\n        labels:\n          severity: critical\n```\n\n----------------------------------------\n\nTITLE: Executing Telegraf Integration Tests\nDESCRIPTION: Commands for running integration tests, including options for running only integration tests or the full test suite.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake test-integration\nmake test-all\n```\n\n----------------------------------------\n\nTITLE: No code snippets found\nDESCRIPTION: This document contains documentation and explanation text but no actual code snippets\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/README.md#2025-04-19_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Create EC2 Security Group\nDESCRIPTION: Creates a security group for the EC2 instance with required ports\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naws ec2 create-security-group --group-name promtail-ec2  --description \"promtail on ec2\" --vpc-id vpc-668d120f\n```\n\n----------------------------------------\n\nTITLE: Querying Terminal Color Scheme with ANSI Escape Sequences\nDESCRIPTION: Uses ANSI escape sequences to query the current color scheme of the terminal. The first command asks for the current foreground color, and the second asks for the current background color. The terminal should respond by printing the current color values.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033]10;?\\033\\\\\"\necho -ne \"\\033]11;?\\033\\\\\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Container Configuration\nDESCRIPTION: YAML-like configuration for a Kubernetes container, specifying ports, environment variables, resource limits, probes, and security context.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\nPorts:[]ContainerPort{ContainerPort{Name:http-metrics,HostPort:0,ContainerPort:80,Protocol:TCP,HostIP:,},ContainerPort{Name:grpc,HostPort:0,ContainerPort:10000,Protocol:TCP,HostIP:,},ContainerPort{Name:profiling,HostPort:0,ContainerPort:6060,Protocol:TCP,HostIP:,},},\nEnv:[]EnvVar{EnvVar{Name:HG_API,Value:http://hosted-grafana-api,ValueFrom:nil,},EnvVar{Name:HG_INSTANCE_SLUG,Value:ephemeral1180076306436hairyhe,ValueFrom:nil,},EnvVar{Name:HG_INSTANCE_SECRET,Value:67f2b6eeb2d75a30d764feee937887e7f735a612,ValueFrom:nil,},EnvVar{Name:EXTRA_OPTIONS,Value:-profile -profile-port=6060 -profile-addr=0.0.0.0,ValueFrom:nil,},EnvVar{Name:HG_CREATE_TIME_MS,Value:1715081910810,ValueFrom:nil,},EnvVar{Name:HG_PULL_POLICY,Value:Always,ValueFrom:nil,},EnvVar{Name:HG_START_REASON,Value:active,ValueFrom:nil,},EnvVar{Name:HGRUN_SECURE_PLUGINS,Value:false,ValueFrom:nil,},EnvVar{Name:HGRUN_PLUGIN_RUNNER_ROOT_CA,Value:false,ValueFrom:nil,},EnvVar{Name:OTEL_EXPORTER_OTLP_TRACES_ENDPOINT,Value:http://jaeger-agent.jaeger.svc.cluster.local:4317,ValueFrom:nil,},EnvVar{Name:JAEGER_SAMPLER_PARAM,Value:1,ValueFrom:nil,},EnvVar{Name:OTEL_RESOURCE_ATTRIBUTES,Value:cluster=dev-us-central-0,namespace=hosted-grafana,ValueFrom:nil,},EnvVar{Name:HG_PROBE_PATH,Value:/api/health,ValueFrom:nil,},EnvVar{Name:HGRUN_EXIT_ON_PLUGIN_FAIL,Value:true,ValueFrom:nil,},EnvVar{Name:HGRUN_PLUGIN_INSTALL_RETRIES,Value:2,ValueFrom:nil,},EnvVar{Name:HGRUN_PLUGIN_INSTALL_CONCURRENCY,Value:1,ValueFrom:nil,},EnvVar{Name:HGRUN_LAUNCH_TIMEOUT,Value:3m0s,ValueFrom:nil,},EnvVar{Name:GOMEMLIMIT,Value:429496730,ValueFrom:nil,},},\nResources:ResourceRequirements{Limits:ResourceList{memory: {{536870912 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{26 -3} {<nil>} 26m DecimalSI},memory: {{293601280 0} {<nil>}  BinarySI},},Claims:[]ResourceClaim{},},\nLivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/api/health,Port:{0 80 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:300,TimeoutSeconds:10,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},\nReadinessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:&ExecAction{Command:[/bin/hgrun check],},HTTPGet:nil,TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:0,TimeoutSeconds:30,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},\nLifecycle:&Lifecycle{PostStart:nil,PreStop:&LifecycleHandler{Exec:&ExecAction{Command:[/bin/hgrun drain -timeout 1m0s -waitTime 55s],},HTTPGet:nil,TCPSocket:nil,},},\nSecurityContext:&SecurityContext{Capabilities:&Capabilities{Add:[SYS_PTRACE],Drop:[],},Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,}\n```\n\n----------------------------------------\n\nTITLE: Importing AWS SDK Go v2 Service Packages\nDESCRIPTION: Imports specific AWS service client packages for SSO, SSOOIDC, and STS services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/service/sso\ngithub.com/aws/aws-sdk-go-v2/service/sso/internal/endpoints\ngithub.com/aws/aws-sdk-go-v2/service/sso/types\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc/internal/endpoints\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc/types\ngithub.com/aws/aws-sdk-go-v2/service/sts\ngithub.com/aws/aws-sdk-go-v2/service/sts/internal/endpoints\ngithub.com/aws/aws-sdk-go-v2/service/sts/types\n```\n\n----------------------------------------\n\nTITLE: Pushing Git Tag for Yaml Project Release\nDESCRIPTION: This command pushes the newly created version tag to the remote repository, making it publicly available.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/RELEASE.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit push $VERSION\n```\n\n----------------------------------------\n\nTITLE: Tagging and Signing Release in Git\nDESCRIPTION: Commands for tagging and signing a new release using MinIO's trusted private key. Requires access to MinIO's trusted private key stored in a specific GNUPGHOME location.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/MAINTAINERS.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ export GNUPGHOME=/media/${USER}/minio/trusted\n$ git tag -s 4.0.0\n$ git push\n$ git push --tags\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable to Disable Default Deadline in Go\nDESCRIPTION: Sets an environment variable to opt-out of the default deadline behavior for non-streaming methods in Google Cloud Go clients. This disables automatic application of deadlines to contexts.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_21\n\nLANGUAGE: Go\nCODE:\n```\nGOOGLE_API_GO_EXPERIMENTAL_DISABLE_DEFAULT_DEADLINE=true\n```\n\n----------------------------------------\n\nTITLE: String Replacement in Go Templates\nDESCRIPTION: The replace function performs simple string replacement.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_12\n\nLANGUAGE: template\nCODE:\n```\n{{ .cluster | replace \"-cluster\" \"\" }}\n```\n\nLANGUAGE: template\nCODE:\n```\n{{ replace \"hello\" \"world\" \"hello world\" }}\n```\n\n----------------------------------------\n\nTITLE: Building Loki UI for Production in Bash\nDESCRIPTION: This command builds the Loki UI project for production deployment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/frontend/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Enabling gRPC-Go Logging via Environment Variables\nDESCRIPTION: Commands to enable verbose logging in gRPC-Go. These environment variables control the logging verbosity and severity levels for debugging purposes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/google.golang.org/grpc/README.md#2025-04-19_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export GRPC_GO_LOG_VERBOSITY_LEVEL=99\n$ export GRPC_GO_LOG_SEVERITY_LEVEL=info\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Authentication with autorest/adal and azidentity\nDESCRIPTION: Shows configuration setup for both autorest/adal and azidentity packages, demonstrating how to set up OAuth config and service principal tokens.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/MIGRATION.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/Azure/go-autorest/autorest/adal\"\n\noauthCfg, err := adal.NewOAuthConfig(\"https://login.chinacloudapi.cn\", tenantID)\nhandle(err)\n\nspt, err := adal.NewServicePrincipalTokenWithSecret(\n    *oauthCfg, clientID, \"https://management.chinacloudapi.cn/\", &adal.ServicePrincipalTokenSecret{ClientSecret: secret},\n)\n```\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/Azure/azure-sdk-for-go/sdk/azcore/cloud\"\n    \"github.com/Azure/azure-sdk-for-go/sdk/azidentity\"\n)\n\nclientOpts := azcore.ClientOptions{Cloud: cloud.AzureChina}\n\ncred, err := azidentity.NewClientSecretCredential(\n    tenantID, clientID, secret, &azidentity.ClientSecretCredentialOptions{ClientOptions: clientOpts},\n)\nhandle(err)\n```\n\n----------------------------------------\n\nTITLE: Varint Performance Benchmarks vs binary.Uvarint\nDESCRIPTION: Benchmark comparisons showing performance improvements of the new varint implementation compared to binary.Uvarint across different input sizes. Shows consistent performance gains ranging from 30% to 59% improvement.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dennwc/varint/README.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nbenchmark                      old ns/op     new ns/op     delta\nBenchmarkUvarint/1-8           4.13          2.85          -30.99%\nBenchmarkUvarint/1_large-8     4.01          2.28          -43.14%\nBenchmarkUvarint/2-8           6.23          2.87          -53.93%\nBenchmarkUvarint/2_large-8     5.60          2.86          -48.93%\nBenchmarkUvarint/3-8           6.55          3.44          -47.48%\nBenchmarkUvarint/3_large-8     6.54          2.86          -56.27%\nBenchmarkUvarint/4-8           7.30          3.71          -49.18%\nBenchmarkUvarint/4_large-8     7.46          3.10          -58.45%\nBenchmarkUvarint/5-8           8.31          4.12          -50.42%\nBenchmarkUvarint/5_large-8     8.56          3.48          -59.35%\nBenchmarkUvarint/6-8           9.42          4.66          -50.53%\nBenchmarkUvarint/6_large-8     9.91          4.07          -58.93%\nBenchmarkUvarint/7-8           10.6          5.28          -50.19%\nBenchmarkUvarint/7_large-8     11.0          4.70          -57.27%\nBenchmarkUvarint/8-8           11.7          6.02          -48.55%\nBenchmarkUvarint/8_large-8     12.1          5.19          -57.11%\nBenchmarkUvarint/9-8           12.9          6.83          -47.05%\nBenchmarkUvarint/9_large-8     13.1          5.71          -56.41%\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Claims with Validation in Go for JWT Library v5.0.0\nDESCRIPTION: Demonstrates how to create a custom claims struct that includes both registered claims and application-specific claims, along with a custom validation method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// MyCustomClaims includes all registered claims, plus Foo.\ntype MyCustomClaims struct {\n\tFoo string `json:\"foo\"`\n\tjwt.RegisteredClaims\n}\n\n// Validate can be used to execute additional application-specific claims\n// validation.\nfunc (m MyCustomClaims) Validate() error {\n\tif m.Foo != \"bar\" {\n\t\treturn errors.New(\"must be foobar\")\n\t}\n\n\treturn nil\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackConditionType Enum in Go\nDESCRIPTION: Defines the LokiStackConditionType enum for condition types of a Loki deployment. It includes types like Degraded, Failed, Pending, and Ready.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackConditionType string\n\nconst (\n  ConditionDegraded LokiStackConditionType = \"Degraded\"\n  ConditionFailed LokiStackConditionType = \"Failed\"\n  ConditionPending LokiStackConditionType = \"Pending\"\n  ConditionReady LokiStackConditionType = \"Ready\"\n)\n```\n\n----------------------------------------\n\nTITLE: Using Go-Kit Logger\nDESCRIPTION: Reference to the Log method from go-kit logger package used for structured logging\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/.errcheck_excludes.txt#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n(github.com/go-kit/log.Logger).Log\n```\n\n----------------------------------------\n\nTITLE: Reporting Security Vulnerabilities in Markdown\nDESCRIPTION: This snippet provides the email address for reporting security vulnerabilities to InfluxData and includes a link to their detailed vulnerability reporting page.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/SECURITY.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nsecurity@influxdata.com\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[InfluxData Security]: https://www.influxdata.com/how-to-report-security-vulnerabilities/\n```\n\n----------------------------------------\n\nTITLE: Creating a Branch and Syncing with Upstream for Zap Development\nDESCRIPTION: Git workflow for creating a new feature branch that's synchronized with the latest upstream changes, ensuring work is based on the current codebase.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd $GOPATH/src/go.uber.org/zap\ngit checkout master\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b cool_new_feature\n```\n\n----------------------------------------\n\nTITLE: Adding Metric Name Label in Loki Output Plugin\nDESCRIPTION: Fix for the Loki output plugin to add metric name with the label \"__name\". This ensures proper labeling of metrics when exporting to Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n[#10001](https://github.com/influxdata/telegraf/pull/10001) `outputs.loki` Add metric name with label \"__name\"\n```\n\n----------------------------------------\n\nTITLE: Running Fluent Bit with Loki Plugin in Docker\nDESCRIPTION: This command runs a Docker container with the Fluent Bit Loki output plugin pre-installed, configuring it to collect logs from the host system and send them to a Loki instance.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v /var/log:/var/log \\\n    -e LOG_PATH=\"/var/log/*.log\" -e LOKI_URL=\"http://localhost:3100/loki/api/v1/push\" \\\n    grafana/fluent-bit-plugin-loki:latest\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackStorageStatus Struct in Go\nDESCRIPTION: Defines the LokiStackStorageStatus struct representing the observed state of Loki storage configuration. It includes a field for schemas that have been applied to the LokiStack.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_18\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackStorageStatus struct {\n  Schemas []ObjectStorageSchema\n}\n```\n\n----------------------------------------\n\nTITLE: Storage Feature: IncludeFoldersAsPrefixes Support\nDESCRIPTION: Adds support for IncludeFoldersAsPrefixes functionality in Google Cloud Storage.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/storage/CHANGES.md#2025-04-19_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Promtail Volume Configuration\nDESCRIPTION: YAML configuration for adding system journal volume mounts to Promtail\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextraVolumes:\n  - name: journal\n    hostPath:\n      path: /var/log/journal\n\nextraVolumeMounts:\n  - name: journal\n    mountPath: /var/log/journal\n    readOnly: true\n```\n\n----------------------------------------\n\nTITLE: Generating Pygments Lexer List with Python\nDESCRIPTION: This code snippet demonstrates how to generate a list of Pygments lexer classes using Python. It uses the 'g' command to search for classes ending with 'RegexLexer' and processes the output using 'pawk' to format the lexer names.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/pygments-lexers.txt#2025-04-19_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\ng 'class.*RegexLexer' | pawk --strict -F: '\"pygments.lexers.%s.%s\" % (f[0].split(\".\")[0], f[2].split()[1].split(\"(\")[0])' > lexers.txt\n```\n\n----------------------------------------\n\nTITLE: Running the FileUploader Example\nDESCRIPTION: Commands to initialize a Go module, get the required packages, and run the FileUploader example.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ngo mod init example/FileUploader\ngo get github.com/minio/minio-go/v7\ngo get github.com/minio/minio-go/v7/pkg/credentials\ngo run FileUploader.go\n```\n\n----------------------------------------\n\nTITLE: Docker Container Management Commands\nDESCRIPTION: Bash commands for restarting and checking logs of the OpenTelemetry Collector container.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/otel-collector-getting-started.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker restart loki-fundamentals-otel-collector-1\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker logs loki-fundamentals-otel-collector-1\n```\n\nLANGUAGE: bash\nCODE:\n```\ncp loki-fundamentals/completed/otel-config.yaml loki-fundamentals/otel-config.yaml\ndocker restart loki-fundamentals-otel-collector-1\n```\n\n----------------------------------------\n\nTITLE: Running Go Tests and Builds for the minio-go Project\nDESCRIPTION: Commands for running tests and builds before submitting a pull request. Includes requirements for AWS S3 credentials and options for running shorter test versions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo fmt\ngo test -race ./...\ngo build\ngo test -short -race ./...\n```\n\n----------------------------------------\n\nTITLE: Analyzing Loki Log Output for Errors and Node Evaluations\nDESCRIPTION: This log output contains various messages from a Loki deployment, including error messages for logfmt decoding failures and information about completed node evaluations for CloudWatch pipelines. It also includes file handling operations for log files.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:42.600671271Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:42.600294563Z level=info msg=\"finished node evaluation\" controller_id=module.http.cloudwatch_pipelines node_id=prometheus.scrape.stack_378175_cloudwatch_tags duration=22.235405ms\nts=2024-04-16T15:10:42.598467331Z level=info msg=\"finished node evaluation\" controller_id=module.http.cloudwatch_pipelines node_id=prometheus.scrape.stack_378175_cloudwatch_notags duration=21.178172ms\n// ... (truncated for brevity)\nts=2024-04-16T15:10:42.576332073Z level=info msg=\"finished node evaluation\" controller_id=module.http.cloudwatch_pipelines node_id=prometheus.scrape.stack_378175_cloudwatch_notags duration=26.680906ms\n```\n\n----------------------------------------\n\nTITLE: Importing GoValidator Package in Go\nDESCRIPTION: Examples of how to import the govalidator package in a Go file, including using an alias for shorter naming.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/asaskevich/govalidator\"\n```\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  valid \"github.com/asaskevich/govalidator\"\n)\n```\n\n----------------------------------------\n\nTITLE: Installing Jaeger client from source\nDESCRIPTION: Shell commands to install the Jaeger client library from source using go get and make.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo get -u github.com/uber/jaeger-client-go/\ncd $GOPATH/src/github.com/uber/jaeger-client-go/\ngit submodule update --init --recursive\nmake install\n```\n\n----------------------------------------\n\nTITLE: Pre-release Module Set Update Command\nDESCRIPTION: Shell command to create a pre-release branch containing version updates for specified module sets.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/RELEASING.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nmake prerelease MODSET=<module set>\n```\n\n----------------------------------------\n\nTITLE: Getting Specific Rule Group in Loki API\nDESCRIPTION: Returns a specific rule group matching the requested namespace and group name.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/rules/{namespace}/{groupName}\n```\n\n----------------------------------------\n\nTITLE: Adding WithHeaders Option to Zipkin Exporter in Go\nDESCRIPTION: The WithHeaders option is added to go.opentelemetry.io/otel/exporters/zipkin to allow configuring custom HTTP headers while exporting spans.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\n// WithHeaders option for Zipkin exporter\nfunc WithHeaders(headers map[string]string) Option {\n  // Implementation not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tests for BitSet Library\nDESCRIPTION: These commands run the test suite for the BitSet library, including a coverage check to ensure adequate test coverage of the codebase.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bitset/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo test\ngo test -cover\n```\n\n----------------------------------------\n\nTITLE: Listing Started Docker Containers for Carnivorous Greenhouse in Bash\nDESCRIPTION: This snippet shows the output of successfully starting the Carnivorous Greenhouse services using Docker Compose. It lists all the containers that have been started as part of the application.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/alloy/examples/alloy-otel-logs.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n ✔ Container greenhouse-db-1                 Started                                                         \n ✔ Container greenhouse-websocket_service-1  Started \n ✔ Container greenhouse-bug_service-1        Started\n ✔ Container greenhouse-user_service-1       Started\n ✔ Container greenhouse-plant_service-1      Started\n ✔ Container greenhouse-simulation_service-1 Started\n ✔ Container greenhouse-main_app-1           Started\n```\n\n----------------------------------------\n\nTITLE: Running Promtail from Source\nDESCRIPTION: Command to run Promtail with a local configuration file after building from source\nSOURCE: https://github.com/grafana/loki/blob/main/production/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./promtail -config.file=./clients/cmd/promtail/promtail-local-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Running Logstash with Loki Plugin\nDESCRIPTION: Command to start Logstash with a configuration file that uses the Loki output plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nbin/logstash -f loki.conf\n```\n\n----------------------------------------\n\nTITLE: Iterating Through BigQuery Rows in Go\nDESCRIPTION: This code shows the updated method for iterating through BigQuery rows using the new RowIterator. It replaces the old iteration pattern with a new one that uses the iterator.Done sentinel error.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_37\n\nLANGUAGE: go\nCODE:\n```\nfor {\n    var vals ValueList\n    err := it.Next(&vals)\n    if err == iterator.Done {\n        break\n    }\n    if err != nil {\n        // TODO: Handle error.\n    }\n    // TODO: use vals.\n}\n```\n\n----------------------------------------\n\nTITLE: Using Keep Expression with Structured Metadata in LogQL\nDESCRIPTION: LogQL query example demonstrating how to use the Keep expression to filter out unnecessary labels when using structured metadata with metric queries, helping to avoid reaching series limits.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/structured-metadata.md#2025-04-19_snippet_3\n\nLANGUAGE: logql\nCODE:\n```\ncount_over_time({job=\"example\"} | trace_id=\"0242ac120002\" | keep job  [5m])\n```\n\n----------------------------------------\n\nTITLE: Iterating over Grapheme Clusters using Graphemes Class\nDESCRIPTION: Example demonstrating how to iterate over grapheme clusters using the Graphemes class, which is the most convenient method for grapheme iteration.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ngr := uniseg.NewGraphemes(\"👍🏼!\")\nfor gr.Next() {\n\tfmt.Printf(\"%x \", gr.Runes())\n}\n// [1f44d 1f3fc] [21]\n```\n\n----------------------------------------\n\nTITLE: Benchmarking CBOR Library Performance Comparison\nDESCRIPTION: A benchmark comparison between v2.4.0 and v2.5.0-beta2 showing performance improvements. The new version returns buffer to pool in Encode(), which adds overhead to Encode() but makes NewEncoder().Encode() significantly faster and more memory efficient.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n$ benchstat bench-v2.4.0.log bench-f9e6291.log \ngoos: linux\ngoarch: amd64\npkg: github.com/fxamacker/cbor/v2\ncpu: 12th Gen Intel(R) Core(TM) i7-12700H\n                                                     │ bench-v2.4.0.log │  bench-f9e6291.log                  │\n                                                     │      sec/op      │   sec/op     vs base                │\nNewEncoderEncode/Go_bool_to_CBOR_bool-20                   236.70n ± 2%   58.04n ± 1%  -75.48% (p=0.000 n=10)\nNewEncoderEncode/Go_uint64_to_CBOR_positive_int-20         238.00n ± 2%   63.93n ± 1%  -73.14% (p=0.000 n=10)\nNewEncoderEncode/Go_int64_to_CBOR_negative_int-20          238.65n ± 2%   64.88n ± 1%  -72.81% (p=0.000 n=10)\nNewEncoderEncode/Go_float64_to_CBOR_float-20               242.00n ± 2%   63.00n ± 1%  -73.97% (p=0.000 n=10)\nNewEncoderEncode/Go_[]uint8_to_CBOR_bytes-20               245.60n ± 1%   68.55n ± 1%  -72.09% (p=0.000 n=10)\nNewEncoderEncode/Go_string_to_CBOR_text-20                 243.20n ± 3%   68.39n ± 1%  -71.88% (p=0.000 n=10)\nNewEncoderEncode/Go_[]int_to_CBOR_array-20                 563.0n ± 2%    378.3n ± 0%  -32.81% (p=0.000 n=10)\nNewEncoderEncode/Go_map[string]string_to_CBOR_map-20       2.043µ ± 2%    1.906µ ± 2%   -6.75% (p=0.000 n=10)\ngeomean                                                    349.7n         122.7n       -64.92%\n\n                                                     │ bench-v2.4.0.log │    bench-f9e6291.log                │\n                                                     │       B/op       │    B/op     vs base                 │\nNewEncoderEncode/Go_bool_to_CBOR_bool-20                     128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_uint64_to_CBOR_positive_int-20           128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_int64_to_CBOR_negative_int-20            128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_float64_to_CBOR_float-20                 128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_[]uint8_to_CBOR_bytes-20                 128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_string_to_CBOR_text-20                   128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_[]int_to_CBOR_array-20                   128.0 ± 0%     0.0 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_map[string]string_to_CBOR_map-20         544.0 ± 0%   416.0 ± 0%   -23.53% (p=0.000 n=10)\ngeomean                                                      153.4                    ?                       ¹ ²\n¹ summaries must be >0 to compute geomean\n² ratios must be >0 to compute geomean\n\n                                                     │ bench-v2.4.0.log │    bench-f9e6291.log                │\n                                                     │    allocs/op     │ allocs/op   vs base                 │\nNewEncoderEncode/Go_bool_to_CBOR_bool-20                     2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_uint64_to_CBOR_positive_int-20           2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_int64_to_CBOR_negative_int-20            2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_float64_to_CBOR_float-20                 2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_[]uint8_to_CBOR_bytes-20                 2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_string_to_CBOR_text-20                   2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_[]int_to_CBOR_array-20                   2.000 ± 0%   0.000 ± 0%  -100.00% (p=0.000 n=10)\nNewEncoderEncode/Go_map[string]string_to_CBOR_map-20         28.00 ± 0%   26.00 ± 0%    -7.14% (p=0.000 n=10)\ngeomean                                                      2.782                    ?                       ¹ ²\n¹ summaries must be >0 to compute geomean\n² ratios must be >0 to compute geomean\n```\n\n----------------------------------------\n\nTITLE: Introducing Dependencies in Markdown\nDESCRIPTION: This snippet documents the introduction of godeps and vendor dependencies in version 1.1.1 of the Azure SDK for Go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## v1.1.1\n\n- Introduce godeps and vendor dependencies introduced in v1.1.1\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Probe Failure Log\nDESCRIPTION: This log entry indicates a failed readiness probe for a Grafana pod. It provides details about the pod, including its name, UID, and container name. The probe failure suggests that the Grafana instance is not responding to health checks.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_41\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 11:59:32.722792    4592 prober.go:107] \"Probe failed\" probeType=\"Readiness\" pod=\"hosted-grafana/benchloadtestingxxl2-grafana-56b7c6b6df-vqkzm\" podUID=\"d3742b42-2b35-4c32-8267-7cf79bbcb441\" containerName=\"grafana\" probeResult=\"failure\" output=<\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Headless Page in Grafana Loki Documentation\nDESCRIPTION: This YAML front matter configuration sets up a headless page that won't be rendered directly or included in navigation lists. Instead, it creates a bundle of page resources that can be accessed by the `docs/shared` shortcode in other pages.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nheadless: true\ndescription: |\n  A headless page sets the render and list build options to never, creating a bundle of page resources.\n  These page resources are accessible to the `docs/shared` shortcode.\n---\n```\n\n----------------------------------------\n\nTITLE: Tagging Packages for Loki Release in Shell\nDESCRIPTION: Executes the tag.sh script to create tags for packages after merging the pull request. The TAG environment variable specifies the version number to tag.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/RELEASING.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nTAG=v1.0.0 ./scripts/tag.sh\n```\n\n----------------------------------------\n\nTITLE: Defining Decolorize Stage Schema in YAML\nDESCRIPTION: The YAML schema for the 'decolorize' stage in Promtail's pipeline. This stage currently has no configurable options.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/decolorize.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndecolorize:\n  # Currently this stage has no configurable options\n```\n\n----------------------------------------\n\nTITLE: Storage Feature Update: RetryOption maxAttempts\nDESCRIPTION: Updates to Google Cloud Storage adding maxAttempts RetryOption feature for configuring retry behavior.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/storage/CHANGES.md#2025-04-19_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Loki File Monitoring Log Output\nDESCRIPTION: Timestamped log entries showing Loki's file monitoring operations including target removal, file tailing, position updates, and watcher events. The logs demonstrate the cleanup and management of monitored log files in a Kubernetes pod environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_7\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:43.297520943Z caller=tailer.go:155 level=info component=logs logs_config=default component=tailer msg=\"tail routine: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-ddbf649cc-zgtf6_9afcdf84-163b-402e-bdd2-cfb711593385/hgrun/0.log\nts=2024-04-16T15:10:43.29750834Z caller=tailer.go:164 level=info component=logs logs_config=default component=tailer msg=\"tail routine: tail channel closed, stopping tailer\" path=/var/log/pods/hosted-grafana_.something-grafana-ddbf649cc-zgtf6_9afcdf84-163b-402e-bdd2-cfb711593385/hgrun/0.log reason=null\n```\n\n----------------------------------------\n\nTITLE: Adding New Enum Values in Go\nDESCRIPTION: Example of adding new values to existing enum types in Go. This pattern is used frequently in the SDK updates to expand supported options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype DiffDiskPlacement string\n\nconst (\n    DiffDiskPlacementNvmeDisk DiffDiskPlacement = \"NvmeDisk\"\n)\n\ntype DiskCreateOptionTypes string\n\nconst (\n    DiskCreateOptionTypesCopy    DiskCreateOptionTypes = \"Copy\"\n    DiskCreateOptionTypesRestore DiskCreateOptionTypes = \"Restore\"\n)\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Log Entry\nDESCRIPTION: Example JSON log entry that would be processed by the pipeline configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/structured_metadata.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"stream\":\"stderr\",\"traceID\":\"0242ac120002\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gzip Compression Levels in Go\nDESCRIPTION: Adds support for gzip compression levels in the Sarama library. This feature was introduced in version 1.17.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_15\n\nLANGUAGE: Go\nCODE:\n```\nconfig.Producer.Compression = sarama.CompressionGZIP\nconfig.Producer.CompressionLevel = gzip.BestCompression\n```\n\n----------------------------------------\n\nTITLE: Removing DataLakeStorageError Definition\nDESCRIPTION: Directive to remove DataLakeStorageError definition from the generated code since Data Lake functionality is not needed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.definitions\n  transform: >\n    delete $.DataLakeStorageError;\n```\n\n----------------------------------------\n\nTITLE: Deploying Eventrouter in Kubernetes\nDESCRIPTION: Kubectl command to deploy the eventrouter application in the Kubernetes cluster using a predefined YAML configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -f https://raw.githubusercontent.com/grafana/loki/main/docs/sources/send-data/promtail/cloud/eks/eventrouter.yaml\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Status Logs\nDESCRIPTION: Kubernetes pod management logs showing container startup failures and pod status updates. Includes CrashLoopBackOff errors and container removal operations.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_21\n\nLANGUAGE: log\nCODE:\n```\nE0507 11:59:38.377710    4589 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with CrashLoopBackOff: \\\"back-off 5m0s restarting failed container=grafana pod=k6teststeady3-grafana-659d5ff58d-h4lmj_hosted-grafana(85274c17-190e-4275-a8f3-6e111cd833bf)\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating ECS Cluster with AWS CLI\nDESCRIPTION: Command to create a new ECS cluster named ecs-firelens-cluster using AWS CLI\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naws ecs create-cluster --cluster-name ecs-firelens-cluster\n```\n\n----------------------------------------\n\nTITLE: Multiple Topology Keys Example\nDESCRIPTION: Example showing how multiple topology keys can be concatenated for use in Loki configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_7\n\nLANGUAGE: plain\nCODE:\n```\n# node labels\ntopology.kubernetes.io/zone: \"zone-a\"\nkubernetes.io/hostname: \"ip-172-20-114-199.ec2.internal\"\n# possible concatenation of the values\nZONE: \"zone-a-ip-172-20-114-199.ec2.internal\"\n```\n\n----------------------------------------\n\nTITLE: Installing Slog-GoKit via Go Get\nDESCRIPTION: Command to install the slog-gokit library using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/tjhop/slog-gokit/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/tjhop/slog-gokit\n```\n\n----------------------------------------\n\nTITLE: Disabling OpenCensus Telemetry in Profiler Package by Default in Go\nDESCRIPTION: Disables OpenCensus Telemetry for requests made by the profiler package by default. Users can re-enable it using the profiler.Config.EnableOCTelemetry option.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_25\n\nLANGUAGE: Go\nCODE:\n```\nprofiler.Config.EnableOCTelemetry\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Blob Storage Client for Go\nDESCRIPTION: Commands for installing the Azure Blob Storage client module and the Azure Identity module for authentication with Azure Active Directory.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/Azure/azure-sdk-for-go/sdk/storage/azblob\n```\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/Azure/azure-sdk-for-go/sdk/azidentity\n```\n\n----------------------------------------\n\nTITLE: Testing Loki Mixin Dashboards with Grizzly\nDESCRIPTION: This command uses Grizzly to watch for changes and update dashboards in a local Grafana instance. It requires setting the Grafana URL, API token, and JSONNET_PATH. Run this in the 'production/loki-mixin' directory.\nSOURCE: https://github.com/grafana/loki/blob/main/production/loki-mixin/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nGRAFANA_URL=http://localhost:3000 GRAFANA_TOKEN=<API_KEY> JSONNET_PATH=$(pwd)/lib:$(pwd)/vendor grr watch ./ dashboards.libsonnet\n```\n\n----------------------------------------\n\nTITLE: Creating AKS Cluster\nDESCRIPTION: Command to create an AKS cluster with workload identity and OIDC issuer enabled\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz aks create \\\n  --resource-group <MY_RESOURCE_GROUP_NAME> \\\n  --name <MY_AKS_CLUSTER_NAME> \\\n  --node-count 3 \\\n  --node-vm-size Standard_E2ds_v5 \\\n  --generate-ssh-keys \\\n  --enable-workload-identity \\\n  --enable-oidc-issuer\n```\n\n----------------------------------------\n\nTITLE: RelabelConfig Specification\nDESCRIPTION: Configuration for dynamic label rewriting before ingestion. Used for metric relabeling and alert relabeling in Prometheus configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsourceLabels: []string  # Labels to select from\nseparator: string     # Separator between values\ntargetLabel: string   # Output label\nregex: string        # Matching regex\nmodulus: uint64      # Hash modulus\nreplacement: string  # Replacement pattern\naction: string       # Action type\n```\n\n----------------------------------------\n\nTITLE: Setting Debug ID via HTTP Header in Curl\nDESCRIPTION: Demonstrates how to set a debug ID for forced sampling using a special HTTP header with curl.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ncurl -H \"jaeger-debug-id: some-correlation-id\" http://myhost.com\n```\n\n----------------------------------------\n\nTITLE: Creating Google Cloud Storage Buckets in Go\nDESCRIPTION: This snippet demonstrates how to create a Google Cloud Storage bucket using the updated API. It replaces the deprecated AdminClient.CreateBucket method with a new chained method call on the Client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_40\n\nLANGUAGE: go\nCODE:\n```\nclient.Bucket(bucketName).Create(ctx, projectID, attrs)\n```\n\n----------------------------------------\n\nTITLE: Extracting JSON Values in Go\nDESCRIPTION: Demonstrates how to use the jsonparser library to extract various values from a JSON payload. It shows accessing nested fields, arrays, and using helper functions for specific data types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/jsonparser/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/buger/jsonparser\"\n\n...\n\ndata := []byte(`{\n  \"person\": {\n    \"name\": {\n      \"first\": \"Leonid\",\n      \"last\": \"Bugaev\",\n      \"fullName\": \"Leonid Bugaev\"\n    },\n    \"github\": {\n      \"handle\": \"buger\",\n      \"followers\": 109\n    },\n    \"avatars\": [\n      { \"url\": \"https://avatars1.githubusercontent.com/u/14009?v=3&s=460\", \"type\": \"thumbnail\" }\n    ]\n  },\n  \"company\": {\n    \"name\": \"Acme\"\n  }\n}`)\n\n// You can specify key path by providing arguments to Get function\njsonparser.Get(data, \"person\", \"name\", \"fullName\")\n\n// There is `GetInt` and `GetBoolean` helpers if you exactly know key data type\njsonparser.GetInt(data, \"person\", \"github\", \"followers\")\n\n// When you try to get object, it will return you []byte slice pointer to data containing it\n// In `company` it will be `{\"name\": \"Acme\"}`\njsonparser.Get(data, \"company\")\n\n// If the key doesn't exist it will throw an error\nvar size int64\nif value, err := jsonparser.GetInt(data, \"company\", \"size\"); err == nil {\n  size = value\n}\n\n// You can use `ArrayEach` helper to iterate items [item1, item2 .... itemN]\njsonparser.ArrayEach(data, func(value []byte, dataType jsonparser.ValueType, offset int, err error) {\n\tfmt.Println(jsonparser.Get(value, \"url\"))\n}, \"person\", \"avatars\")\n\n// Or use can access fields by index!\njsonparser.GetString(data, \"person\", \"avatars\", \"[0]\", \"url\")\n\n// You can use `ObjectEach` helper to iterate objects { \"key1\":object1, \"key2\":object2, .... \"keyN\":objectN }\njsonparser.ObjectEach(data, func(key []byte, value []byte, dataType jsonparser.ValueType, offset int) error {\n        fmt.Printf(\"Key: '%s'\\n Value: '%s'\\n Type: %s\\n\", string(key), string(value), dataType)\n\treturn nil\n}, \"person\", \"name\")\n\n// The most efficient way to extract multiple keys is `EachKey`\n\npaths := [][]string{\n  []string{\"person\", \"name\", \"fullName\"},\n  []string{\"person\", \"avatars\", \"[0]\", \"url\"},\n  []string{\"company\", \"url\"},\n}\njsonparser.EachKey(data, func(idx int, value []byte, vt jsonparser.ValueType, err error){\n  switch idx {\n  case 0: // []string{\"person\", \"name\", \"fullName\"}\n    ...\n  case 1: // []string{\"person\", \"avatars\", \"[0]\", \"url\"}\n    ...\n  case 2: // []string{\"company\", \"url\"},\n    ...\n  }\n}, paths...)\n```\n\n----------------------------------------\n\nTITLE: Vault Kubernetes Auth Lease Revocation Logs\nDESCRIPTION: Log entries showing Vault's expiration system revoking Kubernetes authentication leases across multiple datacenter regions including us-central, eu-west, and aws-oregon. Each entry contains a timestamp, log level, and unique lease identifier.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n2024-05-07T10:57:46.197Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/h5b28ce03c20f7acc336a31000a989a413e782a176bbfe1de9d6da84f588b3824\n2024-05-07T10:57:45.704Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/he1a98ef3a41e14f7e7025805b911b7fdecc01c2845991710a54222e4ede635b4\n```\n\n----------------------------------------\n\nTITLE: Version History Entry Format - Markdown\nDESCRIPTION: Standard format used for version history entries, including version number, date, and change descriptions using markdown formatting.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/internal/configsources/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# v1.3.33 (2025-02-18)\n\n* **Bug Fix**: Bump go version to 1.22\n* **Dependency Update**: Updated to the latest SDK module versions\n```\n\n----------------------------------------\n\nTITLE: Changelog Document in Markdown\nDESCRIPTION: Markdown formatted changelog entries tracking version history, bug fixes, and feature updates for the Google Cloud OAuth2 adapter module. Each entry includes version numbers, PR references, commit hashes and descriptions of changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/auth/oauth2adapt/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [0.2.8](https://github.com/googleapis/google-cloud-go/compare/auth/oauth2adapt/v0.2.7...auth/oauth2adapt/v0.2.8) (2025-03-17)\n\n\n### Bug Fixes\n\n* **auth/oauth2adapt:** Update golang.org/x/net to 0.37.0 ([1144978](https://github.com/googleapis/google-cloud-go/commit/11449782c7fb4896bf8b8b9cde8e7441c84fb2fd))\n```\n\n----------------------------------------\n\nTITLE: Running Helm Diff for Upgrade Comparison in Shell\nDESCRIPTION: This shell command uses the helm-diff plugin to compare the local Helm chart with the installed release. It shows the changes that would occur during an upgrade.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/scenarios/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nHELM_DIFF_USE_UPGRADE_DRY_RUN: true helm diff upgrade loki-release -f ${scenario}-values.yaml production/helm/loki\n```\n\n----------------------------------------\n\nTITLE: Adding 8-bit Integer Types in Modbus Input\nDESCRIPTION: Adds support for 8-bit integer types in the Modbus input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.modbus\" Add 8-bit integer types\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Helm Chart Documentation\nDESCRIPTION: YAML frontmatter configuration for the documentation page defining title, menu title, description, aliases, weight, and keywords.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/concepts.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Helm chart components\nmenuTitle: Helm chart components\ndescription: A short introduction to the components installed with the Loki Helm Chart.\naliases:\n  - ../../../installation/helm/concepts/\nweight: 100\nkeywords:\n  - dashboards\n  - gateway\n  - caching\n---\n```\n\n----------------------------------------\n\nTITLE: Importing JWT-Go Package\nDESCRIPTION: Code snippet showing how to import the jwt-go package in Go code.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/golang-jwt/jwt/v5\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Webhooks in Telegraf (Legacy Format)\nDESCRIPTION: The legacy configuration format for GitHub webhooks in Telegraf that has been deprecated. This shows how the service address was configured in the github_webhooks input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG-1.13.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# A Github Webhook Event collector\n[[inputs.github_webhooks]]\n  ## Address and port to host Webhook listener on\n  service_address = \":1618\"\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterLogging Instance in OpenShift\nDESCRIPTION: YAML configuration for creating a ClusterLogging instance in openshift-logging namespace with Fluentd collection enabled.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: logging.openshift.io/v1\nkind: ClusterLogging\nmetadata:\n  name: instance\n  namespace: openshift-logging\nspec:\n  collection:\n    logs:\n      type: fluentd\n      fluentd: {}\n```\n\n----------------------------------------\n\nTITLE: Contextual Logging with Go Kit\nDESCRIPTION: Demonstrates how to create contextual loggers that automatically include certain key-value pairs in all log entries, useful for adding consistent metadata across log statements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/kit/log/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc main() {\n\tvar logger log.Logger\n\tlogger = log.NewLogfmtLogger(log.NewSyncWriter(os.Stderr))\n\tlogger = log.With(logger, \"instance_id\", 123)\n\n\tlogger.Log(\"msg\", \"starting\")\n\tNewWorker(log.With(logger, \"component\", \"worker\")).Run()\n\tNewSlacker(log.With(logger, \"component\", \"slacker\")).Run()\n}\n\n// Output:\n// instance_id=123 msg=starting\n// instance_id=123 component=worker msg=running\n// instance_id=123 component=slacker msg=running\n```\n\n----------------------------------------\n\nTITLE: Documenting Loki Changelog in Markdown\nDESCRIPTION: This snippet represents the structure of the Loki project's changelog. It includes a header and details for version 1.0.0-rc1, indicating major changes and breaking changes since earlier releases.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# CHANGELOG\n\n## v1.0.0-rc1\n\nThis is the first logged release.  Major changes (including breaking changes)\nhave occurred since earlier tags.\n```\n\n----------------------------------------\n\nTITLE: Importing gRPC in Go Projects\nDESCRIPTION: The basic import statement needed to use gRPC in Go code. Adding this import will automatically fetch the necessary dependencies when running go commands.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/google.golang.org/grpc/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"google.golang.org/grpc\"\n```\n\n----------------------------------------\n\nTITLE: Running Goroutine Profiler Benchmark in Go\nDESCRIPTION: This command runs a Go benchmark test for the ProfilerGoroutines function in the fgprof package. It measures the execution time for profiling different numbers of goroutines, ranging from 1 to 1,048,576.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/felixge/fgprof/BenchmarkProfilerGoroutines.txt#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ go test -bench=BenchmarkProfilerGoroutines\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests for Jaeger Client\nDESCRIPTION: Commands to install dependencies and run tests for the Jaeger client Go project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake install\nmake test\n```\n\n----------------------------------------\n\nTITLE: Parsing Log Entries in Grafana Loki\nDESCRIPTION: These log entries demonstrate various operations and errors in Grafana Loki, including file watching, log decoding, and file reopening. The logs show timestamp, caller information, log level, and specific messages related to different components and operations.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.382307404Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:43.381990902Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-67d8c765c5-hsdpm_6cbab356-d034-4ff8-9879-077d7f363956/hg-plugins/0.log to appear...\"\nts=2024-04-16T15:10:43.38181857Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-67d8c765c5-hsdpm_6cbab356-d034-4ff8-9879-077d7f363956/hg-plugins/0.log ...\"\nts=2024-04-16T15:10:43.381333325Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\n```\n\n----------------------------------------\n\nTITLE: Installing CPUID Package via Homebrew\nDESCRIPTION: Shell command to install the cpuid utility using Homebrew package manager on macOS or Linux systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/cpuid/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n$ brew install cpuid\n```\n\n----------------------------------------\n\nTITLE: Parsing TraceState from Header String in Go\nDESCRIPTION: Adds 'ParseTraceState' function to the 'go.opentelemetry.io/otel/trace' package for decoding a TraceState from a 'tracestate' header string value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_22\n\nLANGUAGE: Go\nCODE:\n```\nParseTraceState(headerValue string) (TraceState, error)\n```\n\n----------------------------------------\n\nTITLE: Project List Options with Tag Support\nDESCRIPTION: Added new tag-related fields to project listing options for filtering results by tags\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\nidentity/v3/projects.ListOpts.Tags\nidentity/v3/projects.ListOpts.TagsAny\nidentity/v3/projects.ListOpts.NotTags\nidentity/v3/projects.ListOpts.NotTagsAny\n```\n\n----------------------------------------\n\nTITLE: Baseline Memory Usage Program in Go\nDESCRIPTION: A minimal Go program used to establish baseline memory usage. It simply sleeps for 600 seconds to allow memory measurements to be taken while the program is running.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/memory.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"time\"\n\nfunc main() {\n\ttime.Sleep(600e9)\n}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Scheduling Error Logs\nDESCRIPTION: Log entries from Kubernetes scheduler showing repeated attempts to schedule pod 'gel-sbdev/gel-4' on different nodes. The pod fails to schedule due to various issues including CPU/memory insufficiency, node selector mismatches, and taint incompatibilities.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_12\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.934484       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"gel-sbdev/gel-4\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-hmlg\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.934464       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"gel-sbdev/gel-4\"\n```\n\n----------------------------------------\n\nTITLE: Importing AWS SDK Go v2 Config Package\nDESCRIPTION: Imports the AWS SDK Go v2 config package for loading and configuring AWS SDK clients.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/config\n```\n\n----------------------------------------\n\nTITLE: Object Storage Schema Version Definition for Loki in Kubernetes\nDESCRIPTION: Defines the allowed values for object storage schema versions used with Loki clusters. Available versions are v11, v12, and v13, which specify the format for storing and retrieving logs in object storage.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nObjectStorageSchemaVersion (string alias)\n\nObjectStorageSchemaVersion defines the storage schema version which will be\nused with the Loki cluster.\n\nValue               Description\n\"v11\"              ObjectStorageSchemaV11 when using v11 for the storage schema\n\"v12\"              ObjectStorageSchemaV12 when using v12 for the storage schema\n\"v13\"              ObjectStorageSchemaV13 when using v13 for the storage schema\n```\n\n----------------------------------------\n\nTITLE: Lambda-Promtail S3 Bucket Notification Filter\nDESCRIPTION: Terraform variable configuration for setting up S3 bucket notification filter prefix in Lambda-Promtail.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_1\n\nLANGUAGE: terraform\nCODE:\n```\nvariable \"s3_bucket_notification_filter_prefix\" {\n  type = string\n  description = \"Filter prefix for S3 bucket notifications\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Commas to Numbers in Go\nDESCRIPTION: Demonstrates how to use humanize.Comma() to format large numbers with comma separators for better readability.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfmt.Printf(\"You owe $%s.\\n\", humanize.Comma(6582491)) // You owe $6,582,491.\n```\n\n----------------------------------------\n\nTITLE: Updating Go Module Files\nDESCRIPTION: Commands for tidying up go.mod and go.sum files and updating the vendor directory.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# The GO111MODULE variable can be omitted when the code isn't located in GOPATH.\nGO111MODULE=on go mod tidy\n\nGO111MODULE=on go mod vendor\n```\n\n----------------------------------------\n\nTITLE: Git Commit Signature Format for Docker Contributions\nDESCRIPTION: The required format for signing git commits when contributing to Docker projects like Grafana Loki. This signature line must be added to every commit message to certify compliance with the Developer Certificate of Origin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opencontainers/go-digest/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nSigned-off-by: Joe Smith <joe.smith@email.com>\n```\n\n----------------------------------------\n\nTITLE: Concurrent Stream Decompression Performance Table\nDESCRIPTION: Markdown table demonstrating scaling performance of concurrent stream decompression across different CPU core counts, comparing S2 and Snappy implementations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| Input                                     | `-cpu=1`   | `-cpu=2`   | `-cpu=4`   | `-cpu=8`   | `-cpu=16`   |\n|-------------------------------------------|------------|------------|------------|------------|-------------|\n| enwik10.snappy                            | 1098.6MB/s | 1819.8MB/s | 3625.6MB/s | 6910.6MB/s | 10818.2MB/s |\n```\n\n----------------------------------------\n\nTITLE: Post-Migration Configuration Cleanup\nDESCRIPTION: YAML configuration showing migration settings to remove after successful migration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmigrate:\n  fromDistributed:\n    enabled: true\n    memberlistService: loki-loki-distributed-memberlist\n```\n\n----------------------------------------\n\nTITLE: Logging Container Removal in Kubernetes\nDESCRIPTION: Log entry indicating the removal of a container in Kubernetes, identified by its container ID.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 11:59:38.667270    2776 scope.go:117] \"RemoveContainer\" containerID=\"8d94f2aa54fdb8f6e4ddfed0f7db95a8f719e0eeccbe440b54033c29c7138cca\"\n```\n\n----------------------------------------\n\nTITLE: Defining Labelallow Stage Schema in YAML\nDESCRIPTION: The schema for the labelallow stage in Promtail's pipeline configuration. It specifies an array of strings representing the allowed label names.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/labelallow.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlabelallow:\n  - [<string>]\n  ...\n```\n\n----------------------------------------\n\nTITLE: Capacity Check Completion Log Entry in JSON\nDESCRIPTION: This JSON represents a debug log entry indicating the completion of a capacity check. It includes the request ID, log level, completion message, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"q61oHTtF4MMiQVGH\",\"level\":\"debug\",\"msg\":\"check capacity complete\",\"time\":\"2024-04-16T14:49:52Z\"}\n```\n\n----------------------------------------\n\nTITLE: Defining HashRingType Enum\nDESCRIPTION: Enum definition for HashRingType that specifies possible hash ring implementations, currently supporting 'memberlist' type.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"memberlist\": \"HashRingMemberList when using memberlist for the distributed hash ring.\"\n```\n\n----------------------------------------\n\nTITLE: Version Release Notes Format in Markdown\nDESCRIPTION: Standardized format for documenting AWS SDK version releases, including version numbers, dates, and categorized changes like features, bug fixes, and dependency updates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/service/ssooidc/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# v1.14.5 (2023-03-10)\n\n* **Dependency Update**: Updated to the latest SDK module versions\n\n# v1.14.4 (2023-02-22)\n\n* **Bug Fix**: Prevent nil pointer dereference when retrieving error codes.\n```\n\n----------------------------------------\n\nTITLE: Creating Secret for Loki Distributor CA\nDESCRIPTION: Command to create a secret in the openshift-logging namespace containing the CA certificate for the Loki Distributor.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_without_gateway.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n openshift-logging create secret generic loki-distributor-ca \\\n--from-file=ca-bundle.crt=<PATH/TO/CA_BUNDLE.CRT>\n```\n\n----------------------------------------\n\nTITLE: LogQL Regex Stream Selectors\nDESCRIPTION: Examples of log stream selectors using regex matching operators for flexible label matching.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: logql\nCODE:\n```\n{name =~ \"mysql.+\"}\n{name !~ \"mysql.+\"}\n{name !~ `mysql-\\d+`}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Node-Specific Service Access with Sequence Diagram\nDESCRIPTION: A sequence diagram illustrating how requests for node-specific services are proxied from one node to another within the Loki cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sequence\nCODE:\n```\nBrowser->Node 1: GET /ui/api/v1/proxy/node2/services\nNode 1->Node 2: Proxy request\nNode 2-->Node 1: Service data\nNode 1-->Browser: Proxied response\n```\n\n----------------------------------------\n\nTITLE: Starting Generation of PubSub Lite v1 Client in Go\nDESCRIPTION: Initiates the generation of the v1 client for PubSub Lite. This adds support for the latest version of the PubSub Lite API in the Google Cloud Go client library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_23\n\nLANGUAGE: Go\nCODE:\n```\nd2e777f56e08146646b3ffb7a78856795094ab4e\n```\n\n----------------------------------------\n\nTITLE: Version Reference Markdown Link\nDESCRIPTION: A markdown link referencing version comparison between operator versions 0.6.0 and 0.6.1\nSOURCE: https://github.com/grafana/loki/blob/main/operator/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[0.6.1](https://github.com/grafana/loki/compare/operator/v0.6.0...operator/v0.6.1)\n```\n\n----------------------------------------\n\nTITLE: Performance Benchmarks for Glob Operations\nDESCRIPTION: Benchmark results comparing various glob and match operations performance.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ngoos: darwin\ngoarch: amd64\npkg: github.com/bmatcuk/doublestar/v4\ncpu: Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\nBenchmarkMatch-8                  285639              3868 ns/op               0 B/op          0 allocs/op\nBenchmarkGoMatch-8                286945              3726 ns/op               0 B/op          0 allocs/op\nBenchmarkPathMatch-8              320511              3493 ns/op               0 B/op          0 allocs/op\nBenchmarkGoPathMatch-8            304236              3434 ns/op               0 B/op          0 allocs/op\nBenchmarkGlob-8                      466           2501123 ns/op          190225 B/op       2849 allocs/op\nBenchmarkGlobWalk-8                  476           2536293 ns/op          184017 B/op       2750 allocs/op\nBenchmarkGoGlob-8                    463           2574836 ns/op          194249 B/op       2929 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Probe and Container Lifecycle Logs\nDESCRIPTION: Kubernetes system logs showing container probes, lifecycle events, and resource cleanup operations including mount deactivation and scope completion\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_27\n\nLANGUAGE: log\nCODE:\n```\nI0507 11:59:38.081101    4589 prober.go:107] \"Probe failed\" probeType=\"Readiness\" pod=\"hosted-grafana/k6teststeady3-grafana-659d5ff58d-h4lmj\" podUID=\"85274c17-190e-4275-a8f3-6e111cd833bf\" containerName=\"grafana\" probeResult=\"failure\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up LogCLI Command Completion for Zsh\nDESCRIPTION: Add the provided command to the .zshrc file to enable tab-completion for LogCLI in Zsh shells.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\neval \"$(logcli --completion-script-zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Containerd Shim Disconnection Log\nDESCRIPTION: These log entries show the disconnection and cleanup of a containerd shim. They provide information about the shim's ID and namespace, indicating the termination of a container runtime process.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_42\n\nLANGUAGE: plaintext\nCODE:\n```\ntime=\"2024-05-07T11:59:32.722555689Z\" level=warning msg=\"cleaning up after shim disconnected\" id=d53fbb23caf1e92d73b7ccf3a991c2ccd1d1b1ef072bfb1f6798a781d3809679 namespace=k8s.io\ntime=\"2024-05-07T11:59:32.722569380Z\" level=info msg=\"cleaning up dead shim\" namespace=k8s.io\ntime=\"2024-05-07T11:59:32.722469678Z\" level=info msg=\"shim disconnected\" id=d53fbb23caf1e92d73b7ccf3a991c2ccd1d1b1ef072bfb1f6798a781d3809679 namespace=k8s.io\n```\n\n----------------------------------------\n\nTITLE: Installing vfsgen Package with Go\nDESCRIPTION: Command to install the vfsgen package using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/shurcooL/vfsgen/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ngo get github.com/shurcooL/vfsgen\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Range Split Interval in YAML\nDESCRIPTION: Shows the deprecated configuration for split_queries_by_interval in the query_range section. This configuration is no longer valid in v2.5.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-5.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nquery_range:\\n  split_queries_by_interval: 10m\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Compute Module with Go\nDESCRIPTION: Command to install the Azure Compute module using Go modules for dependency management.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5\n```\n\n----------------------------------------\n\nTITLE: Implementing DefaultItem Interface in Go for List Bubble\nDESCRIPTION: Defines the DefaultItem interface which extends the Item interface. It includes additional methods for Title and Description, designed to work with DefaultDelegate.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbles/list/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// DefaultItem describes an item designed to work with DefaultDelegate.\ntype DefaultItem interface {\n\tItem\n\tTitle() string\n\tDescription() string\n}\n```\n\n----------------------------------------\n\nTITLE: Example Log Format in Loki Canary\nDESCRIPTION: Shows the format of artificial log lines generated by Loki Canary, consisting of a timestamp followed by filler bytes.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-canary/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: nohighlight\nCODE:\n```\n1557935669096040040 ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp\n```\n\n----------------------------------------\n\nTITLE: Serializing a Syslog Message to String\nDESCRIPTION: Code example showing how to convert a constructed Syslog message object to its string representation according to the RFC5424 format.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-syslog/v4/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nstr, _ := msg.String()\n// <191>1 - - - - - -\n```\n\n----------------------------------------\n\nTITLE: Loki File Target Management Logs\nDESCRIPTION: Log entries from Grafana Loki showing various file target operations including adding targets, handling file watcher events, and reopening files. The logs demonstrate how Loki monitors and processes log files in a Kubernetes environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_10\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:43.044285087Z caller=filetargetmanager.go:361 level=info component=logs logs_config=default msg=\"Adding target\" key=\"/var/log/pods/*1954fd4ff7221e619e2d202bfb2c4ab9/kube-proxy/*.log:{component=\\\"kube-proxy\\\", container=\\\"kube-proxy\\\", job=\\\"kube-system/kube-proxy\\\", namespace=\\\"kube-system\\\", pod=\\\"kube-proxy-gke-ops-us-east-0-main-n2s32-1-1dd39c-32ae1dde-hmhw\\\", tier=\\\"node\\\"}\"\n```\n\n----------------------------------------\n\nTITLE: Updating gRPC Client Interceptor for Tracing in Go\nDESCRIPTION: Illustrates the change in setting up a gRPC client interceptor for tracing. The new method uses the GRPCClientInterceptor function from an initialized trace.Client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_32\n\nLANGUAGE: go\nCODE:\n```\nconn, err := grpc.Dial(srv.Addr, grpc.WithUnaryInterceptor(trace.GRPCClientInterceptor()))\n```\n\nLANGUAGE: go\nCODE:\n```\nconn, err := grpc.Dial(srv.Addr, grpc.WithUnaryInterceptor(tc.GRPCClientInterceptor()))\n```\n\n----------------------------------------\n\nTITLE: Logging Kafka Log Segment Deletion\nDESCRIPTION: These log entries document the deletion of Kafka log segments, including time indexes, offset indexes, and log files. The logs are from the kafka.log.LogSegment component and show the deletion process for multiple segments in the 'ingest-6' topic.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_5\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,649] INFO Deleted offset index /bitnami/kafka/data/ingest-6/00000000000180494832.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,648] INFO Deleted log /bitnami/kafka/data/ingest-6/00000000000180494832.log.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,648] INFO Deleted time index /bitnami/kafka/data/ingest-6/00000000000180492304.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,648] INFO Deleted offset index /bitnami/kafka/data/ingest-6/00000000000180492304.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,648] INFO Deleted log /bitnami/kafka/data/ingest-6/00000000000180492304.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Dependency Update Links\nDESCRIPTION: List of pull request links for various dependency version updates including AWS SDK, Consul API, NATS, and Kubernetes API.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- [#13808](https://github.com/influxdata/telegraf/pull/13808) `deps` Bump github.com/aws/aws-sdk-go-v2/service/kinesis from 1.18.2 to 1.18.5\n- [#13811](https://github.com/influxdata/telegraf/pull/13811) `deps` Bump github.com/hashicorp/consul/api from 1.20.0 to 1.24.0\n...\n```\n\n----------------------------------------\n\nTITLE: Setting TLS Renegotiation Method in Telegraf Agent\nDESCRIPTION: Allows configuring the TLS renegotiation method in the Telegraf agent.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n\"agent.tls\" Allow setting renegotiation method\n```\n\n----------------------------------------\n\nTITLE: Kubernetes StatefulSet Edit Command\nDESCRIPTION: Command to edit the ingester StatefulSet for scaling down replicas during migration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n <NAMESPACE> edit statefulsets.apps loki-distributed-ingester\n```\n\n----------------------------------------\n\nTITLE: Static Labels Schema Definition in YAML\nDESCRIPTION: Defines the basic schema structure for static_labels stage configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/static_labels.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nstatic_labels:\n  [ <string>: [<string>] ... ]\n```\n\n----------------------------------------\n\nTITLE: Adding Logging Support Package in Go\nDESCRIPTION: Introduces a new internal logging support package to the gax-go library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* **internallog:** add a logging support package ([#380](https://github.com/googleapis/gax-go/issues/380)) ([c877470](https://github.com/googleapis/gax-go/commit/c87747098135631a3de5865ed03aaf2c79fd9319))\n```\n\n----------------------------------------\n\nTITLE: Installing Go URN Parser Library\nDESCRIPTION: Shows how to install the go-urn library using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-urn/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/leodido/go-urn\n```\n\n----------------------------------------\n\nTITLE: Setting HOST_MOUNT_PREFIX Environment Variable for Disk Plugin\nDESCRIPTION: Configuration option for the disk input plugin that allows specifying a prefix to be prepended to any discovered mountpaths before retrieving stats. This is necessary for reporting host disk stats when running Telegraf from within a container.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG-1.13.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nHOST_MOUNT_PREFIX=/hostfs\n```\n\n----------------------------------------\n\nTITLE: Adding New Fields to Existing Structs in Go\nDESCRIPTION: Example of adding new fields to existing struct types in Go. This pattern is used to extend existing data structures with new properties.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype CapacityReservationGroupsClientListBySubscriptionOptions struct {\n    // existing fields...\n    ResourceIDsOnly *bool\n}\n\ntype DataDisk struct {\n    // existing fields...\n    SourceResource *string\n}\n\ntype DataDisksToAttach struct {\n    // existing fields...\n    Caching                *CachingTypes\n    DeleteOption           *DiskDeleteOptionTypes\n    DiskEncryptionSet      *DiskEncryptionSetParameters\n    WriteAcceleratorEnabled *bool\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Smithy Go Package\nDESCRIPTION: Imports the Smithy Go package and its subpackages, which provide core functionality for AWS SDK Go v2.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_8\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/smithy-go\ngithub.com/aws/smithy-go/auth\ngithub.com/aws/smithy-go/auth/bearer\ngithub.com/aws/smithy-go/context\ngithub.com/aws/smithy-go/document\ngithub.com/aws/smithy-go/encoding\ngithub.com/aws/smithy-go/encoding/httpbinding\ngithub.com/aws/smithy-go/encoding/json\ngithub.com/aws/smithy-go/encoding/xml\ngithub.com/aws/smithy-go/endpoints\ngithub.com/aws/smithy-go/internal/sync/singleflight\ngithub.com/aws/smithy-go/io\ngithub.com/aws/smithy-go/logging\ngithub.com/aws/smithy-go/metrics\ngithub.com/aws/smithy-go/middleware\ngithub.com/aws/smithy-go/private/requestcompression\ngithub.com/aws/smithy-go/ptr\ngithub.com/aws/smithy-go/rand\ngithub.com/aws/smithy-go/time\ngithub.com/aws/smithy-go/tracing\ngithub.com/aws/smithy-go/transport/http\ngithub.com/aws/smithy-go/transport/http/internal/io\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Prometheus Project\nDESCRIPTION: Command to compile and test changes before committing and pushing code.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake test         # Make sure all the tests pass before you commit and push :)\n```\n\n----------------------------------------\n\nTITLE: Version 1.26.2 Bugfix Updates - Markdown\nDESCRIPTION: Documents bugfixes for version 1.26.2 including fixes for agent quiet flag, prometheus inputs, socket listener, and processors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n### Bugfixes\n\n- [#13020] `agent` Pass quiet flag earlier\n- [#13063] `inputs.prometheus` Add namespace option in k8s informer factory\n- [#13059] `inputs.socket_listener` Fix tracking of unix sockets\n- [#13078] `parsers.grok` Fix nil metric for multiline inputs\n- [#13092] `processors.lookup` Fix tracking metrics\n```\n\n----------------------------------------\n\nTITLE: Creating Test Data on Windows\nDESCRIPTION: Command to create a test file containing data using fsutil on Windows systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nfsutil file createnew \"C:\\Users\\<username>\\Desktop\\sample.txt\" 20480\n```\n\n----------------------------------------\n\nTITLE: Loki File Handling Log Messages\nDESCRIPTION: Log entries showing how Loki handles file operations like waiting for files to appear and reopening moved or deleted files. These logs illustrate Loki's file monitoring capabilities in a dynamic environment where files can be created, moved, or deleted.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_11\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:43.020577028Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-b4f87fcc5-fflgn_043372d7-9411-443f-ba7f-80988f77d8b3/hg-plugins/0.log to appear...\"\nts=2024-04-16T15:10:43.020377695Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Re-opening moved/deleted file /var/log/pods/hosted-grafana_.something-grafana-b4f87fcc5-fflgn_043372d7-9411-443f-ba7f-80988f77d8b3/hg-plugins/0.log ...\"\n```\n\n----------------------------------------\n\nTITLE: Installing Kingpin v1 in Go\nDESCRIPTION: Shows how to install the deprecated v1 version of Kingpin using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ go get gopkg.in/alecthomas/kingpin.v1\n```\n\n----------------------------------------\n\nTITLE: Version History Documentation in Markdown\nDESCRIPTION: Markdown formatted changelog entries detailing version updates, changes, and improvements across multiple releases of the gophercloud/gophercloud project. Each entry includes version number, date, and associated GitHub pull request references.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## v2.4.0 (2024-12-18)\n\n* [GH-3270](https://github.com/gophercloud/gophercloud/pull/3270) [v2] SG rules: implement bulk create\n* [GH-3273](https://github.com/gophercloud/gophercloud/pull/3273) [v2] Add missing fields in Objectstorage and compute API\n\n## v2.3.0 (2024-12-06)\n\n* [GH-3213](https://github.com/gophercloud/gophercloud/pull/3213) [v2] Handle nova api version > 2.87 for hypervisor\n* [GH-3236](https://github.com/gophercloud/gophercloud/pull/3236) [v2] Added required fields for Node API Parity\n* [GH-3248](https://github.com/gophercloud/gophercloud/pull/3248) [v2] Add support for disable_power_off\n* [GH-3261](https://github.com/gophercloud/gophercloud/pull/3261) [v2] Misc cleanups\n* [GH-3262](https://github.com/gophercloud/gophercloud/pull/3262) [v2] Address govet 1.24 issue\n```\n\n----------------------------------------\n\nTITLE: Running Chroma Lexer Tests in Go\nDESCRIPTION: Basic command to run all lexer tests in the Chroma project. This executes tests against actual input files and compares them with expected outputs.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/lexers/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ngo test ./lexers\n```\n\n----------------------------------------\n\nTITLE: Generating Go lexer code with golex in Loki\nDESCRIPTION: Command to generate Go code from a lexer definition file using golex. This specific example shows how to convert the promlex.l file to Go code, which will be output to promlex.l.go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/prometheus/model/textparse/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngolex -o=promlex.l.go promlex.l\n```\n\n----------------------------------------\n\nTITLE: Evaluating Pod Eviction Conditions in Kubernetes Descheduler\nDESCRIPTION: Log entries from Kubernetes descheduler showing pod eviction evaluation based on priority and QoS tiers. These logs document why specific pods cannot be evicted due to various constraints like being DaemonSet pods, having local storage, or having system-critical priority.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_10\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.947830       1 nodeutilization.go:274] \"Evicting pods based on priority, if they have same priority, they'll be evicted based on QoS tiers\"\nI0507 12:02:27.947815       1 nodeutilization.go:267] \"Pods on node\" node=\"gke-dev-us-central-0-spot-n2s8-0-1dd3-f81338c4-g7pt\" allPods=20 nonRemovablePods=19 removablePods=1\nI0507 12:02:27.947778       1 defaultevictor.go:202] \"Pod fails the following checks\" pod=\"mimir-dev-14/store-gateway-zone-c-1\" checks=\"pod has local storage and descheduler is not configured with evictLocalStoragePods\"\nI0507 12:02:27.947758       1 defaultevictor.go:202] \"Pod fails the following checks\" pod=\"kube-system/node-local-dns-sqdgz\" checks=\"[pod is a DaemonSet pod, pod has system critical priority, pod has higher priority than specified priority class threshold, pod has local storage and descheduler is not configured with evictLocalStoragePods]\"\n```\n\n----------------------------------------\n\nTITLE: Removing Path Parameters from API Paths\nDESCRIPTION: Directive to remove container name and blob path parameters from API paths since direct URIs are used instead.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $[\"x-ms-paths\"]\n  transform: >\n    for (const property in $)\n    {\n        if (property.includes('/{containerName}/{blob}'))\n        {\n            $[property][\"parameters\"] = $[property][\"parameters\"].filter(function(param) { return (typeof param['$ref'] === \"undefined\") || (false == param['$ref'].endsWith(\"#/parameters/ContainerName\") && false == param['$ref'].endsWith(\"#/parameters/Blob\"))});\n        } \n        else if (property.includes('/{containerName}'))\n        {\n            $[property][\"parameters\"] = $[property][\"parameters\"].filter(function(param) { return (typeof param['$ref'] === \"undefined\") || (false == param['$ref'].endsWith(\"#/parameters/ContainerName\"))});\n        }\n    }\n```\n\n----------------------------------------\n\nTITLE: Defining CredentialMode Types for LokiStack Authentication in Go\nDESCRIPTION: This Go code defines credential mode types for LokiStack authentication, introducing static, token, and token-cco modes to support different authentication mechanisms for object storage access.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n/ CredentialMode represents the type of authentication used for accessing the object storage.\n//\n// +kubebuilder:validation:Enum=static;token;token-cco\ntype CredentialMode string\n\nconst (\n    // CredentialModeStatic represents the usage of static, long-lived credentials stored in a Secret.\n    // This is the default authentication mode and available for all supported object storage types.\n    CredentialModeStatic CredentialMode = \"static\"\n    // CredentialModeToken represents the usage of short-lived tokens retrieved from a credential source.\n    // In this mode the static configuration does not contain credentials needed for the object storage.\n    // Instead, they are generated during runtime using a service, which allows for shorter-lived credentials and\n    // much more granular control. This authentication mode is not supported for all object storage types.\n    CredentialModeToken CredentialMode = \"token\"\n    // CredentialModeTokenCCO represents the usage of short-lived tokens retrieved from a credential source.\n    // This mode is similar to CredentialModeToken, but instead of having a user-configured credential source,\n    // it is configured by the environment and the operator relies on the Cloud Credential Operator to provide\n    // a secret. This mode is only supported for certain object storage types in certain runtime environments.\n    CredentialModeTokenCCO CredentialMode = \"token-cco\"\n)\n```\n\n----------------------------------------\n\nTITLE: Using Regular Scanner for Logplex Message Processing in Go\nDESCRIPTION: Example handler demonstrating how to use the regular Scanner to process structured Logplex messages from an HTTP request body. The scanner iterates through messages and provides error handling capabilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/heroku/x/logplex/encoding/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\ts := NewScanner(r.Body)\n\n\tfor s.Scan() {\n\t\tlog.Printf(\"%+v\", scanner.Message())\n\t}\n\n\tif s.Err() != nil {\n\t\tlog.Printf(\"err: %v\", s.Err())\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Name\nDESCRIPTION: YAML configuration for setting a human-readable cluster name.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncluster:\n    name: loki-meta-monitoring-cluster\n```\n\n----------------------------------------\n\nTITLE: String Conversion in Go\nDESCRIPTION: Shows how to convert a struct to string representation using ToString function\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\ntype User struct {\n\tFirstName string\n\tLastName string\n}\n\nstr := govalidator.ToString(&User{\"John\", \"Juan\"})\nprintln(str)\n```\n\n----------------------------------------\n\nTITLE: Running Lua Code String in GopherLua\nDESCRIPTION: Example demonstrating how to execute a Lua code string in GopherLua. Creates a new Lua state, executes the code, and handles any errors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nL := lua.NewState()\ndefer L.Close()\nif err := L.DoString(`print(\"hello\")`); err != nil {\n    panic(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Command for Gathering Static Memory Usage in Linux\nDESCRIPTION: Shell command that retrieves memory usage statistics from the proc filesystem for a running metrics-bench process. Uses grep and awk to target the specific process and extract relevant memory information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rcrowley/go-metrics/memory.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngrep ^Vm \"/proc/$(ps fax | grep [m]etrics-bench | awk '{print $1}')/status\"\n```\n\n----------------------------------------\n\nTITLE: Issue Reference for Internal GodocFX Top-Level Declarations Fix\nDESCRIPTION: Issue reference for using exact list of top-level declarations in the internal GodocFX documentation generation system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n([#3665](https://www.github.com/googleapis/google-cloud-go/issues/3665))\n```\n\n----------------------------------------\n\nTITLE: Importing Custom CSS for Query Analyzer\nDESCRIPTION: Link tag for importing custom stylesheet for the query analyzer component\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/size/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"../../query/analyzer/style.css\">\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Auth Lease Revocation Log Entries\nDESCRIPTION: Chronological log entries showing authentication lease revocations from Kubernetes clusters. Each entry contains a timestamp, log level, operation type, and a unique lease ID that includes the authentication path and cluster identifier.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_1\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:58:01.440Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/hb6950875a1e913ab3458be3dfece7469735a8ef3513c77ca52faa0e915b493fd\n2024-05-07T10:58:01.376Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/h47be0dbf3047949762a0b2b694bf16bd6535cf0aa431804d24585c9f810e899b\n```\n\n----------------------------------------\n\nTITLE: Logging File Target Removal in Loki\nDESCRIPTION: This log entry shows Loki removing a file target for a specific pod log file. It includes detailed labels for the target being removed.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.869672113Z caller=filetargetmanager.go:397 level=info component=logs logs_config=default msg=\"Removing target\" key=\"/var/log/pods/*37ae8d4e-1a76-40f2-be88-2251a3528a0b/hgrun/*.log:{app=\\\"grafana\\\", conprof=\\\"true\\\", container=\\\"hgrun\\\", instanceId=\\\"i2222\\\", job=\\\"hosted-grafana/grafana\\\", name=\\\"grafana\\\", namespace=\\\"hosted-grafana\\\", org=\\\"someorg\\\", plan=\\\"free\\\", pod=\\\"someorg-grafana-666bd48cf9-7zrtv\\\", pod_template_hash=\\\"666bd48cf9\\\", resource_version=\\\"167212086\\\", slug=\\\"someorg\\\", stackId=\\\"444444\\\"}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring AutoRest for Azure Compute Resource Manager SDK Generation\nDESCRIPTION: This YAML configuration sets up AutoRest for generating the Azure Compute Resource Manager SDK. It specifies the Azure ARM mode, required specification files, license header, module version, and the API version tag to use.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/autorest.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nazure-arm: true\nrequire:\n- https://github.com/Azure/azure-rest-api-specs/blob/92de53a5f1e0e03c94b40475d2135d97148ed014/specification/compute/resource-manager/readme.md\n- https://github.com/Azure/azure-rest-api-specs/blob/92de53a5f1e0e03c94b40475d2135d97148ed014/specification/compute/resource-manager/readme.go.md\nlicense-header: MICROSOFT_MIT_NO_VERSION\nmodule-version: 5.7.0\ntag: package-2024-03-01\n```\n\n----------------------------------------\n\nTITLE: Debug Log Entry - HTTP Request Metrics\nDESCRIPTION: JSON log entry detailing HTTP request metrics including duration, method, status code, and client information from Grafana Agent.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\"duration\":91919807,\"level\":\"debug\",\"method\":\"GET\",\"msg\":\"request completed\",\"referer\":\"\",\"remote\":\"10.136.105.40:52702\",\"request\":\"/metrics\",\"status\":200,\"time\":\"2024-04-16T14:54:48Z\",\"user-agent\":\"GrafanaAgent/v0.40.3 (flow; linux; helm)\"}\n```\n\n----------------------------------------\n\nTITLE: Rename Blob Models\nDESCRIPTION: Renames BlobItemInternal to BlobItem and BlobPropertiesInternal to BlobProperties.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- rename-model:\n    from: BlobItemInternal\n    to: BlobItem\n- rename-model:\n    from: BlobPropertiesInternal\n    to: BlobProperties\n```\n\n----------------------------------------\n\nTITLE: Enabling Bracketed Paste Mode in Terminal\nDESCRIPTION: Enables bracketed paste mode in the terminal using the ANSI escape sequence '\\033[?2004h'. When enabled, pasted text will be surrounded by special codes (200~ before and 201~ after), which helps applications distinguish between typed and pasted text.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033[?2004h\" && sleep 10\n```\n\n----------------------------------------\n\nTITLE: Setting Up InmemSink and Signal Handler for Metrics in Go\nDESCRIPTION: This snippet illustrates how to set up an in-memory sink and signal handler for metrics. It includes examples of setting gauges, emitting keys, incrementing counters, and adding samples to the metrics sink.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/armon/go-metrics/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// Setup the inmem sink and signal handler\ninm := metrics.NewInmemSink(10*time.Second, time.Minute)\nsig := metrics.DefaultInmemSignal(inm)\nmetrics.NewGlobal(metrics.DefaultConfig(\"service-name\"), inm)\n\n// Run some code\ninm.SetGauge([]string{\"foo\"}, 42)\ninm.EmitKey([]string{\"bar\"}, 30)\n\ninm.IncrCounter([]string{\"baz\"}, 42)\ninm.IncrCounter([]string{\"baz\"}, 1)\ninm.IncrCounter([]string{\"baz\"}, 80)\n\ninm.AddSample([]string{\"method\", \"wow\"}, 42)\ninm.AddSample([]string{\"method\", \"wow\"}, 100)\ninm.AddSample([]string{\"method\", \"wow\"}, 22)\n```\n\n----------------------------------------\n\nTITLE: Configuring RemoteWriteClientSpec in YAML for Grafana Loki\nDESCRIPTION: RemoteWriteClientSpec defines the configuration of the remote write client, including endpoint URL, timeout, authorization, and additional headers.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\nremoteWriteClientSpec:\n  name: remoteWrite1\n  url: \"https://remote-write-endpoint.com\"\n  timeout: 30s\n  authorization: basic\n  authorizationSecretName: remote-write-secret\n  additionalHeaders:\n    X-Custom-Header: value\n  relabelConfigs:\n    - sourceLabels: [label1]\n      targetLabel: newLabel\n  proxyUrl: \"http://proxy.com\"\n  followRedirects: true\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Log Input\nDESCRIPTION: Example log entry in JSON format that will be processed by the pipeline.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/static_labels.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"log\":\"log message\\n\",\"stream\":\"stderr\",\"time\":\"2019-04-30T02:12:41.8443515Z\"}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Storage Size Calculator Deployment\nDESCRIPTION: Command to remove all resources related to the storage size calculator from the OpenShift cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nmake undeploy-size-calculator\n```\n\n----------------------------------------\n\nTITLE: Installing MinIO Go Client from GitHub\nDESCRIPTION: Command to install the MinIO Go Client SDK from GitHub using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/minio/minio-go/v7\n```\n\n----------------------------------------\n\nTITLE: Debug Log Entry - Server Capacity Check\nDESCRIPTION: JSON log entry showing server capacity check details including pool size limits, build counts, and server metrics.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"SmbOO0l5aADX9BaQ\",\"level\":\"debug\",\"max-pool\":4,\"min-pool\":0,\"msg\":\"check capacity\",\"pending-builds\":0,\"running-builds\":0,\"server-buffer\":0,\"server-capacity\":0,\"server-count\":0,\"time\":\"2024-04-16T14:54:23Z\"}\n```\n\n----------------------------------------\n\nTITLE: Installing otgrpc Package\nDESCRIPTION: Command to install the grpc-opentracing package using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc\n```\n\n----------------------------------------\n\nTITLE: Canary Metrics Query\nDESCRIPTION: LogQL query to monitor missing entries percentage during migration process.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_7\n\nLANGUAGE: logql\nCODE:\n```\n(\n  sum(increase(loki_canary_missing_entries_total{namespace=\"loki\"}[$__range])) by (job)\n  /\n  sum(increase(loki_canary_entries_total{namespace=\"loki\"}[$__range])) by (job)\n)*100\n```\n\n----------------------------------------\n\nTITLE: Checking Out Master Branch\nDESCRIPTION: Command to switch to the master branch before creating a release\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/v2/RELEASE.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout master\n```\n\n----------------------------------------\n\nTITLE: Running Go Generate Command\nDESCRIPTION: Shell command example showing how to run the go generate tool on the entire repository to update auto-generated code, which is required before submitting a pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Microsoft/go-winio/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n> go generate ./...\n```\n\n----------------------------------------\n\nTITLE: Forcing Color Profile in Lip Gloss for Testing\nDESCRIPTION: This code snippet demonstrates how to force a color profile in Lip Gloss when running tests or in environments where colors might not display automatically. It imports the required packages and sets the color profile to TrueColor.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_28\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    \"github.com/charmbracelet/lipgloss\"\n    \"github.com/muesli/termenv\"\n)\n\nlipgloss.SetColorProfile(termenv.TrueColor)\n```\n\n----------------------------------------\n\nTITLE: Running Loki Nomad Job with Default Configuration\nDESCRIPTION: Command to deploy Loki using Nomad with the default configuration specified in the job.nomad.hcl file.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/loki/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnomad run job.nomad.hcl\n```\n\n----------------------------------------\n\nTITLE: Importing Grafana Dashboards via API\nDESCRIPTION: Curl command to programmatically import dashboards into Grafana using the API.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/meta-monitoring/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Example using curl to import a dashboard\ncurl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -d @path/to/dashboard.json \\\n  https://your-grafana-instance/api/dashboards/db\n```\n\n----------------------------------------\n\nTITLE: Analyzing Pod Eviction and Scheduling Failures in Kubernetes Cluster\nDESCRIPTION: These log entries show various reasons why pods cannot be scheduled or evicted on different nodes. Common issues include insufficient CPU/memory, mismatched node selectors, and incompatible taints.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 12:02:27.987344       1 defaultevictor.go:202] \"Pod fails the following checks\" pod=\"kube-system/pdcsi-node-8gclq\" checks=\"[pod is a DaemonSet pod, pod has system critical priority, pod has higher priority than specified priority class threshold, pod has local storage and descheduler is not configured with evictLocalStoragePods]\"\nI0507 12:02:27.987263       1 nodeutilization.go:264] \"Evicting pods from node\" node=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-2dqk\" usage={\"cpu\":\"13776m\",\"memory\":\"23960Mi\",\"pods\":\"64\"}\nI0507 12:02:27.987222       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-q8mb\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.986970       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-t8zj\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory, insufficient pods]\"\n```\n\n----------------------------------------\n\nTITLE: Logging Kafka Segment Deletion Operations\nDESCRIPTION: These log entries document the deletion of Kafka log segments, including time indexes, offset indexes, and log files. Each entry specifies the exact file path and type of file being deleted.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_4\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,719] INFO Deleted time index /bitnami/kafka/data/ingest-3/00000000000182569086.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,719] INFO Deleted offset index /bitnami/kafka/data/ingest-3/00000000000182569086.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,719] INFO Deleted log /bitnami/kafka/data/ingest-3/00000000000182569086.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Ignoring Fields with Struct Tags in Messagediff\nDESCRIPTION: Demonstrates how to use the testdiff:\"ignore\" struct tag to exclude specific fields from comparison when using messagediff.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/d4l3k/messagediff/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"gopkg.in/d4l3k/messagediff.v1\"\n\ntype someStruct struct {\n    A int\n    B int `testdiff:\"ignore\"`\n}\n\nfunc main() {\n    a := someStruct{1, 2}\n    b := someStruct{1, 3}\n    diff, equal := messagediff.PrettyDiff(a, b)\n    /*\n        equal = true\n        diff = \"\"\n    */\n```\n\n----------------------------------------\n\nTITLE: Initializing Kotel Tracer with Kafka Client\nDESCRIPTION: Example showing how to set up a kotel tracer with a Kafka client. It initializes a tracer provider, creates a kotel tracer with options, sets up the kotel service, and creates a Kafka client with the kotel hooks.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/twmb/franz-go/plugin/kotel/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Initialize tracer provider.\ntracerProvider, err := initTracerProvider()\n\n// Create a new kotel tracer.\ntracerOpts := []kotel.TracerOpt{\n\tkotel.TracerProvider(tracerProvider),\n\tkotel.TracerPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{})),\n}\ntracer := kotel.NewTracer(tracerOpts...)\n\n// Create a new kotel service.\nkotelOps := []kotel.Opt{\n\tkotel.WithTracer(tracer),\n}\nkotelService := kotel.NewKotel(kotelOps...)\n\n// Create a new Kafka client.\ncl, err := kgo.NewClient(\n\t// Pass in the kotel hook.\n\tkgo.WithHooks(kotelService.Hooks()...),\n\t// ...other opts.\n)\n```\n\n----------------------------------------\n\nTITLE: Issue Reference for GKE Hub API Generation\nDESCRIPTION: Issue reference for starting to generate the GKE Hub API v1beta1 client libraries.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n([#3698](https://www.github.com/googleapis/google-cloud-go/issues/3698))\n```\n\n----------------------------------------\n\nTITLE: GCS Static Credentials Configuration\nDESCRIPTION: YAML configuration for Google Cloud Storage using static credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  bucketname: # The GCS bucket name\n  key.json:   # The static serviceaccount json\n```\n\n----------------------------------------\n\nTITLE: Defining Standard Error Writer in Go Browser Package\nDESCRIPTION: Defines Stderr as an io.Writer that points to os.Stderr, to which executed commands write standard error output.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/browser/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nvar Stderr io.Writer = os.Stderr\n```\n\n----------------------------------------\n\nTITLE: Version Release Headers and Links\nDESCRIPTION: Markdown headers showing version numbers and links to compare changes between versions\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/auth/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.9.4](https://github.com/googleapis/google-cloud-go/compare/auth/v0.9.3...auth/v0.9.4) (2024-09-11)\n\n## [0.9.3](https://github.com/googleapis/google-cloud-go/compare/auth/v0.9.2...auth/v0.9.3) (2024-09-03)\n\n## [0.9.2](https://github.com/googleapis/google-cloud-go/compare/auth/v0.9.1...auth/v0.9.2) (2024-08-30)\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Error Reporting Status Field Update\nDESCRIPTION: Commit reference for a feature adding resolution status field for error groups and source location availability for error groups created from GAE.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n([f66114b](https://www.github.com/googleapis/google-cloud-go/commit/f66114bc7233ad06e18f38dd39497a74d85fdbd8))\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Internal DocFX Cross-Reference Linking\nDESCRIPTION: Commit reference for the implementation of full cross-reference linking in the internal DocFX documentation generation system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n([fcb7318](https://www.github.com/googleapis/google-cloud-go/commit/fcb7318eb338bf3828ac831ed06ca630e1876418))\n```\n\n----------------------------------------\n\nTITLE: Importing the goautoneg Package in Go\nDESCRIPTION: Import statement for the goautoneg package which provides HTTP Content-Type Autonegotiation functionality. The package is imported from its Bitbucket repository location.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/munnerz/goautoneg/README.txt#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nimport \"bitbucket.org/ww/goautoneg\"\n```\n\n----------------------------------------\n\nTITLE: Updating golang.org/x/net Dependency in Go\nDESCRIPTION: Updates the golang.org/x/net dependency to version v0.33.0 to fix a bug.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* update golang.org/x/net to v0.33.0 ([#391](https://github.com/googleapis/gax-go/issues/391)) ([547a5b4](https://github.com/googleapis/gax-go/commit/547a5b43aa6f376f71242da9f18e65fbdfb342f6))\n```\n\n----------------------------------------\n\nTITLE: Function Signature Changes in Azure SDK for Go\nDESCRIPTION: Breaking changes to function signatures in the CloudServicesClient and CloudServicesUpdateDomainClient, adding new parameters to the function calls.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// Old signature\n*CloudServicesClient.BeginCreateOrUpdate(context.Context, string, string, *CloudServicesClientBeginCreateOrUpdateOptions)\n\n// New signature\n*CloudServicesClient.BeginCreateOrUpdate(context.Context, string, string, CloudService, *CloudServicesClientBeginCreateOrUpdateOptions)\n```\n\n----------------------------------------\n\nTITLE: Struct Type Validation in Go\nDESCRIPTION: Demonstrates struct validation using type tags and ValidateStruct function\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype User\tstruct {\n  Name string      `valid:\"type(string)\"`\n  Age  int         `valid:\"type(int)\"`\n  Meta interface{} `valid:\"type(string)\"`\n}\nresult, err := govalidator.ValidateStruct(User{\"Bob\", 20, \"meta\"})\nif err != nil {\n\tprintln(\"error: \" + err.Error())\n}\nprintln(result)\n```\n\n----------------------------------------\n\nTITLE: Importing AWS SDK Go v2 Credentials Package\nDESCRIPTION: Imports the AWS SDK Go v2 credentials package and related subpackages for handling AWS authentication and credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/credentials\ngithub.com/aws/aws-sdk-go-v2/credentials/ec2rolecreds\ngithub.com/aws/aws-sdk-go-v2/credentials/endpointcreds\ngithub.com/aws/aws-sdk-go-v2/credentials/endpointcreds/internal/client\ngithub.com/aws/aws-sdk-go-v2/credentials/processcreds\ngithub.com/aws/aws-sdk-go-v2/credentials/ssocreds\ngithub.com/aws/aws-sdk-go-v2/credentials/stscreds\n```\n\n----------------------------------------\n\nTITLE: Using Standard Go JSON Marshal Method\nDESCRIPTION: Example showing how to use the standard Go encoding/json package's Marshal method. This serves as a reference for comparison with the JSON-Iterator approach.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/json-iterator/go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"encoding/json\"\njson.Marshal(&data)\n```\n\n----------------------------------------\n\nTITLE: Casting TCP Ports to uint16 in Go\nDESCRIPTION: Casts TCP ports to uint16 in the netflow input plugin to ensure correct port number handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nport := uint16(tcpPort)\n```\n\n----------------------------------------\n\nTITLE: Configuring Metric Instrument Measurements in OpenTelemetry Go\nDESCRIPTION: Demonstrates the new configuration types and options for metric instrument measurements introduced in v1.15.0/v0.38.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_17\n\nLANGUAGE: Go\nCODE:\n```\nimport (\n  \"go.opentelemetry.io/otel/attribute\"\n  \"go.opentelemetry.io/otel/metric/instrument\"\n)\n\ncounter.Add(ctx, 1,\n  instrument.WithAttributes(attribute.String(\"key\", \"value\"))\n)\n\nhistogram.Record(ctx, 42,\n  instrument.WithAttributes(attribute.Int(\"key\", 123))\n)\n\nobserver.Observe(ctx, 3.14,\n  instrument.WithAttributes(attribute.Bool(\"key\", true))\n)\n```\n\n----------------------------------------\n\nTITLE: Loki Tailer Operation Logs\nDESCRIPTION: Logs showing the tailer component's lifecycle, including stopping tailing files and exiting routines. These logs demonstrate how Loki manages the resource lifecycle for file monitoring processes when targets are removed or no longer needed.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_14\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:42.95623547Z caller=tailer.go:245 level=info component=logs logs_config=default component=tailer msg=\"stopped tailing file\" path=/var/log/pods/hosted-grafana_.something-grafana-6c66686686-mqtcr_c3c249a2-c8ff-40f4-a66d-9d746b39110b/hg-plugins/0.log\nts=2024-04-16T15:10:42.956222919Z caller=tailer.go:118 level=info component=logs logs_config=default component=tailer msg=\"position timer: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-6c66686686-mqtcr_c3c249a2-c8ff-40f4-a66d-9d746b39110b/hg-plugins/0.log\nts=2024-04-16T15:10:42.956211852Z caller=tailer.go:155 level=info component=logs logs_config=default component=tailer msg=\"tail routine: exited\" path=/var/log/pods/hosted-grafana_.something-grafana-6c66686686-mqtcr_c3c249a2-c8ff-40f4-a66d-9d746b39110b/hg-plugins/0.log\nts=2024-04-16T15:10:42.956202082Z caller=tailer.go:164 level=info component=logs logs_config=default component=tailer msg=\"tail routine: tail channel closed, stopping tailer\" path=/var/log/pods/hosted-grafana_.something-grafana-6c66686686-mqtcr_c3c249a2-c8ff-40f4-a66d-9d746b39110b/hg-plugins/0.log reason=null\n```\n\n----------------------------------------\n\nTITLE: Executing Release Script for Loki in Shell\nDESCRIPTION: Runs the release.sh script to update versions in go.mod files and push a new branch to GitHub. The TAG environment variable specifies the new version number.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/RELEASING.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nTAG=v1.0.0 ./scripts/release.sh\n```\n\n----------------------------------------\n\nTITLE: Parsing Cluster URL in Go-Redis\nDESCRIPTION: Example of parsing a Redis Cluster URL into ClusterOptions. This demonstrates how to include various connection parameters in the URL.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nredis://user:password@localhost:6789?dial_timeout=3&read_timeout=6s&addr=localhost:6790&addr=localhost:6791\n```\n\n----------------------------------------\n\nTITLE: Mixed Content Block Compression Comparison Table\nDESCRIPTION: Markdown table comparing different compression algorithms' performance on mixed content blocks, including compression ratio and speed metrics.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| *                 | Input      | Output     | Reduction  | MB/s       |\n|-------------------|------------|------------|------------|------------|\n| S2                | 4014735833 | 1059723369 | 73.60%     | **936.73** |\n```\n\n----------------------------------------\n\nTITLE: Forking and Creating Pull Requests in Git\nDESCRIPTION: Standard Git workflow for contributing to the minio-go project. This includes forking, creating a feature branch, committing changes, pushing to the branch, and creating a pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nFork it\nCreate your feature branch (git checkout -b my-new-feature)\nCommit your changes (git commit -am 'Add some feature')\nPush to the branch (git push origin my-new-feature)\nCreate new Pull Request\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Scheduler Node Placement Logs\nDESCRIPTION: Scheduler logs showing failed attempts to place a Loki querier pod across multiple nodes. The pod encounters various scheduling constraints including insufficient CPU/memory, mismatched node selectors, and node taints.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_4\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.975254       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-vdj8\" error:=\"[pod node selector does not match the node label, insufficient cpu, insufficient memory]\"\nI0507 12:02:27.975234       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\n```\n\n----------------------------------------\n\nTITLE: Installing LZ4 Package in Go\nDESCRIPTION: Commands to install the LZ4 package and its command line interface tool using Go toolchain.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pierrec/lz4/v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/pierrec/lz4/v4\ngo install github.com/pierrec/lz4/v4/cmd/lz4c@latest\n```\n\n----------------------------------------\n\nTITLE: Logging HTTP Request Failure in Grafana\nDESCRIPTION: Error log entry showing a failed HTTP request to the Grafana API health endpoint due to a connection refusal.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-05-07T11:59:31.47288066Z level=error caller=http_client.go:56 app=hgrun hgrun_version=0.1.453-59-gf3f63162a msg=\"request failed\" error=\"Get \\\"http://127.0.0.1:3000/api/health\\\": dial tcp 127.0.0.1:3000: connect: connection refused\" method=GET url=http://127.0.0.1:3000/api/health\n```\n\n----------------------------------------\n\nTITLE: Viewing Loki Service Information\nDESCRIPTION: Example output showing the Loki gateway service with its external IP address, which will be used for writing to and querying Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_18\n\nLANGUAGE: console\nCODE:\n```\n  NAME                             TYPE           CLUSTER-IP       EXTERNAL-IP    PORT(S)              AGE\nloki-gateway                     LoadBalancer   10.100.201.74     134.236.21.145  80:30707/TCP         46m\n```\n\n----------------------------------------\n\nTITLE: Non-Assembly Decompression Performance Table\nDESCRIPTION: Markdown table showing S2 decompression performance without assembly optimizations, including throughput comparisons and absolute speeds for various file types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| File                           | S2 Throughput | S2 throughput |\n|--------------------------------|---------------|---------------|\n| consensus.db.10gb.s2           | 1.84x         | 2289.8 MB/s   |\n| 10gb.tar.s2                    | 1.30x         | 867.07 MB/s   |\n```\n\n----------------------------------------\n\nTITLE: Installing JSON-Patch Library in Go\nDESCRIPTION: Commands to install different versions of the json-patch library using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/evanphx/json-patch.v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/evanphx/json-patch/v5\n```\n\n----------------------------------------\n\nTITLE: Example for Cancelling a Deletion Request with Basic Auth\nDESCRIPTION: Example cURL command to cancel a deletion request in Grafana Enterprise Logs using Basic Authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_52\n\nLANGUAGE: bash\nCODE:\n```\ncurl -u \"Tenant1:$API_TOKEN\" \\\n  -X DELETE \\\n  '<compactor_addr>/loki/api/v1/delete?request_id=<request_id>'\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: A template for the copyright notice and license statement that should be included in files of projects licensed under Apache License 2.0. The template includes placeholders for year and copyright owner information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Migration Information for Azure SDK for Go\nDESCRIPTION: Information about the package's adherence to next-generation design principles and links to migration guides and documentation for developers upgrading from previous versions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n// Package information\n\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute\" // Using next generation design principles since version 1.0.0\n\n// Migration resources\n// To migrate existing applications to the latest version: https://aka.ms/azsdk/go/mgmt/migration\n// Quick Start documentation: https://aka.ms/azsdk/go/mgmt\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Error Reporting Ruby Gem Build Fix\nDESCRIPTION: Commit reference for a bug fix addressing issues with the Ruby gem build for the Error Reporting service.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n([0bd21d7](https://www.github.com/googleapis/google-cloud-go/commit/0bd21d793f75924e5a2d033c58e8aaef89cf8113))\n```\n\n----------------------------------------\n\nTITLE: Building the Storage Size Calculator Image\nDESCRIPTION: Command for contributors to build a custom storage size calculator container image during development.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_5\n\nLANGUAGE: console\nCODE:\n```\nmake oci-build-calculator\n```\n\n----------------------------------------\n\nTITLE: Kafka Log Deletion Operations Log\nDESCRIPTION: Log entries showing sequential deletion of Kafka log segments, indexes and producer state snapshots. The logs document maintenance operations on partition ingest-7 and ingest-2, including deletion of timeindex, offset index, log files and producer snapshots.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_7\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,562] INFO Deleted time index /bitnami/kafka/data/ingest-7/00000000000179143198.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,562] INFO Deleted offset index /bitnami/kafka/data/ingest-7/00000000000179143198.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,562] INFO Deleted log /bitnami/kafka/data/ingest-7/00000000000179143198.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Function References in Go JSON Library\nDESCRIPTION: Two main functions are described: UnmarshalCaseSensitivePreserveInts() which handles case-sensitive JSON parsing with integer preservation, and UnmarshalStrict() which adds validation for duplicate and unknown fields.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/json/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nUnmarshalCaseSensitivePreserveInts()\n```\n\nLANGUAGE: go\nCODE:\n```\nUnmarshalStrict()\n```\n\nLANGUAGE: go\nCODE:\n```\nSyntaxErrorOffset()\n```\n\n----------------------------------------\n\nTITLE: VS Code Launch Configuration for Loki Remote Debugging\nDESCRIPTION: VS Code launch.json configuration snippet for remote debugging of Loki containers. This enables connection to the dlv debugger running in the container with proper path mappings.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/loki-tsdb-storage-s3/README.md#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"Launch Loki remote\",\n    \"type\": \"go\",\n    \"request\": \"attach\",\n    \"mode\": \"remote\",\n    \"substitutePath\": [\n        {\n            \"from\": \"${workspaceFolder}\",\n            \"to\": \"${workspaceFolder}\"\n        }\n    ],\n    \"port\": 18002,\n    \"host\": \"127.0.0.1\",\n    \"cwd\": \"${workspaceFolder}/tools/dev/loki-tsdb-storage-s3/loki\",\n    \"remotePath\": \"/loki/loki\",\n    \"showLog\": true,\n    \"trace\": \"log\",\n    \"logOutput\": \"rpc\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample App Container Configuration\nDESCRIPTION: JSON configuration for a sample application container with Firelens log routing to Loki\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"command\": [\n        \"/bin/sh -c \\\"while true; do sleep 15 ;echo hello_world; done\\\"\"\n    ],\n    \"entryPoint\": [\"sh\",\"-c\"],\n    \"essential\": true,\n    \"image\": \"alpine:3.13\",\n    \"logConfiguration\": {\n        \"logDriver\": \"awsfirelens\",\n        \"options\": {\n            \"Name\": \"loki\",\n            \"Host\": \"<grafanacloud host>\",\n            \"Http_User\": \"<userid>\", \n            \"Labels\": \"{job=\\\"firelens\\\"}\",\n            \"RemoveKeys\": \"container_id,ecs_task_arn\",\n            \"LabelKeys\": \"container_name,ecs_task_definition,source,ecs_cluster\",\n            \"LineFormat\": \"key_value\"\n        },\n        \"secretOptions\": [{\n            \"name\": \"Http_Passwd\",\n            \"valueFrom\": \"data.aws_secretsmanager_secret.grafana_cloud_loki_http_password.id\"\n        }]\n    },\n    \"name\": \"sample-app\"\n}\n```\n\n----------------------------------------\n\nTITLE: Pushing Storage Size Calculator Image to Quay\nDESCRIPTION: Command for contributors to push their custom-built storage size calculator image to Quay.io registry.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_6\n\nLANGUAGE: console\nCODE:\n```\nmake oci-push-calculator\n```\n\n----------------------------------------\n\nTITLE: Analyzing Kubernetes Container Runtime ExecSync Errors\nDESCRIPTION: Error logs from the Kubernetes container runtime interface showing failed ExecSync operations. The errors occur when trying to execute commands in a container that no longer exists, suggesting container lifecycle issues or timing problems with health probes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_37\n\nLANGUAGE: plaintext\nCODE:\n```\ntime=\"2024-05-07T11:59:32.724767806Z\" level=error msg=\"ExecSync for \\\"d53fbb23caf1e92d73b7ccf3a991c2ccd1d1b1ef072bfb1f6798a781d3809679\\\" failed\" error=\"rpc error: code = NotFound desc = failed to exec in container: failed to load task: no running task found: task d53fbb23caf1e92d73b7ccf3a991c2ccd1d1b1ef072bfb1f6798a781d3809679 not found: not found\"\n```\n\n----------------------------------------\n\nTITLE: VSCode Settings for golangci-lint Integration\nDESCRIPTION: JSON configuration for VSCode settings to enable golangci-lint as the linting tool for Go files in the project. These settings automatically run the linter when saving a package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Microsoft/go-winio/README.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n    \"go.lintTool\": \"golangci-lint\",\n    \"go.lintOnSave\": \"package\",\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Settings in Grafana Loki\nDESCRIPTION: The beginning of a YAML configuration block for cache backends in Grafana Loki. This snippet only shows the introduction to the cache validity settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n# The default validity of entries for caches unless overridden.\n```\n\n----------------------------------------\n\nTITLE: Installing netdb Go Package\nDESCRIPTION: Command to install the netdb Go package from the honnef.co repository using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modernc.org/libc/honnef.co/go/netdb/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get honnef.co/go/netdb\n```\n\n----------------------------------------\n\nTITLE: Optimizing Trace Start Method in Go SDK\nDESCRIPTION: Use non-generic functions in the Start method of \"go.opentelemetry.io/otel/sdk/trace\".Trace to reduce memory allocation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\n// Optimized Start method\nfunc (t *Tracer) Start(ctx context.Context, name string, opts ...trace.SpanStartOption) (context.Context, trace.Span) {\n  // Implementation not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Importing AWS SDK Go v2 Core Package\nDESCRIPTION: Imports the core AWS SDK Go v2 package and related subpackages for basic AWS functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/aws\ngithub.com/aws/aws-sdk-go-v2/aws/defaults\ngithub.com/aws/aws-sdk-go-v2/aws/middleware\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/query\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/restjson\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/xml\ngithub.com/aws/aws-sdk-go-v2/aws/ratelimit\ngithub.com/aws/aws-sdk-go-v2/aws/retry\ngithub.com/aws/aws-sdk-go-v2/aws/signer/internal/v4\ngithub.com/aws/aws-sdk-go-v2/aws/signer/v4\ngithub.com/aws/aws-sdk-go-v2/aws/transport/http\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry\nDESCRIPTION: A structured changelog entry detailing bugfixes, features, and new plugins added to Telegraf. The content includes links to pull requests and descriptions of changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_27\n\nLANGUAGE: markdown\nCODE:\n```\n### Bugfixes\n\n- [#10268](https://github.com/influxdata/telegraf/pull/10268) `inputs.snmp` Update snmp plugin to respect number of retries configured\n- [#10225](https://github.com/influxdata/telegraf/pull/10225) `outputs.wavefront` Flush wavefront output sender on error to clean up broken connections\n[...]\n\n### Features\n\n- [#10200](https://github.com/influxdata/telegraf/pull/10200) `aggregators.deprecations.go` Implement deprecation infrastructure\n- [#9518](https://github.com/influxdata/telegraf/pull/9518) `inputs.snmp` Snmp to use gosmi\n[...]\n\n### New Input Plugins\n\n- [#9724](https://github.com/influxdata/telegraf/pull/9724) Add intel_pmu plugin\n- [#9771](https://github.com/influxdata/telegraf/pull/9771) Add Linux Volume Manager input plugin\n- [#9236](https://github.com/influxdata/telegraf/pull/9236) Openstack input plugin\n\n### New Output Plugins\n\n- [#9891](https://github.com/influxdata/telegraf/pull/9891) Add new groundwork output plugin\n- [#9923](https://github.com/influxdata/telegraf/pull/9923) Add mongodb output plugin\n- [#9346](https://github.com/influxdata/telegraf/pull/9346) Azure Event Hubs output plugin\n```\n\n----------------------------------------\n\nTITLE: Prometheus Metric Names in Go\nDESCRIPTION: List of available Prometheus counter vec metrics exposed by the kprom package. Each metric includes node_id labels, with some metrics also tracking topic-specific data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/twmb/franz-go/plugin/kprom/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n#{ns}_connects_total{node_id=\"#{node}\"}\n#{ns}_connect_errors_total{node_id=\"#{node}\"}\n#{ns}_write_errors_total{node_id=\"#{node}\"}\n#{ns}_write_bytes_total{node_id=\"#{node}\"}\n#{ns}_read_errors_total{node_id=\"#{node}\"}\n#{ns}_read_bytes_total{node_id=\"#{node}\"}\n#{ns}_produce_bytes_total{node_id=\"#{node}\",topic=\"#{topic}\"}\n#{ns}_fetch_bytes_total{node_id=\"#{node}\",topic=\"#{topic}\"}\n#{ns}_buffered_produce_records_total\n#{ns}_buffered_fetch_records_total\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing Loki Build Image with Make Commands\nDESCRIPTION: These are the make commands used to build and publish the Loki build image, and update the associated workflows. They should be run after modifying the Dockerfile and updating the version reference in the Makefile.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release-loki-build-image.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake build-image-push\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake release-workflows\n```\n\n----------------------------------------\n\nTITLE: LogQL Query Examples\nDESCRIPTION: Collection of LogQL query examples showing how to use the unpack parser and combine it with other operations.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/pack.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"us-central1\", job=\"myjob\"} | unpack\n```\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"us-central1\", job=\"myjob\"} | unpack | container=\"myapp\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"us-central1\", job=\"myjob\"} | unpack | container=\"myapp\" | json | val_from_original_log_json=\"foo\"\n```\n\nLANGUAGE: logql\nCODE:\n```\n{cluster=\"us-central1\", job=\"myjob\"} | unpack | container=\"myapp\" | logfmt | val_from_original_log_json=\"foo\"\n```\n\n----------------------------------------\n\nTITLE: Using Anonymous or SAS Authentication in azblob\nDESCRIPTION: Creates a client for public blob storage or URLs containing a SAS token using the NewClientWithNoCredential constructor instead of explicit anonymous credentials.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/migrationguide.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n// new code\nclient, err := azblob.NewClientWithNoCredential(\"<public blob or blob with SAS URL>\", nil)\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Go OLE Example\nDESCRIPTION: Instructions for getting the Go OLE package, running tests, and executing an Excel example. This snippet demonstrates the basic setup and verification process for the project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-ole/go-ole/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/go-ole/go-ole\ncd /path/to/go-ole/\ngo test\n\ncd /path/to/go-ole/example/excel\ngo run excel.go\n```\n\n----------------------------------------\n\nTITLE: Accessing flag values after parsing\nDESCRIPTION: Examples of how to access flag values after parsing. Demonstrates using both direct pointer access and variable bindings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println(\"ip has value \", *ip)\nfmt.Println(\"flagvar has value \", flagvar)\n```\n\n----------------------------------------\n\nTITLE: Logging Pod Status Update in Kubernetes\nDESCRIPTION: Log entry showing a pod status update to 'Running' for a kube-proxy pod in a Kubernetes cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 11:59:38.638688    4776 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-qmgr\" status=\"Running\"\n```\n\n----------------------------------------\n\nTITLE: Logging Health Summary in Go\nDESCRIPTION: This code logs a calculated health summary for Felix components. It includes a detailed table showing the status of various components, their timeouts, and their liveness and readiness states.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfelix/health.go 245: Calculated health summary healthResult=&health.HealthReport{Live:true, Ready:true, Detail:\"+------------------+---------+----------------+-----------------+--------+\\n|    COMPONENT     | TIMEOUT |    LIVENESS    |    READINESS    | DETAIL |\\n+------------------+---------+----------------+-----------------+--------+\\n| async_calc_graph | 20s     | reporting live | reporting ready |        |\\n| felix-startup    | 0s      | reporting live | reporting ready |        |\\n| int_dataplane    | 1m30s   | reporting live | reporting ready |        |\\n+------------------+---------+----------------+-----------------+--------+\"}\n```\n\n----------------------------------------\n\nTITLE: Logging Probe Error in Kubernetes\nDESCRIPTION: Error log entry showing a readiness probe failure for a container in Kubernetes due to a task not found error.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\nE0507 11:59:38.489629    4631 prober.go:104] \"Probe errored\" err=\"rpc error: code = NotFound desc = failed to exec in container: failed to load task: no running task found: task 6ad3e55547f2192f865518e75009243418b177091c1c781236e2ac8f0324b408 not found: not found\" probeType=\"Readiness\" pod=\"hosted-grafana/benchloadtestingxxl2-grafana-56b7c6b6df-7q7fd\" podUID=\"5f7c88ef-55b9-4d72-8a2f-c9f2fa39f273\" containerName=\"grafana\"\n```\n\n----------------------------------------\n\nTITLE: Logging File Watcher Event in Loki\nDESCRIPTION: This log entry shows Loki receiving a file watcher event for a new log file creation. It specifies the file path and the operation type.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-16T15:10:43.866539497Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/loki-prod3_distributor-76c559cb69-lbf6f_1b71b005-4a57-4f52-acda-734f074e93c9/distributor/0.log.20240416-150602.tmp op=CREATE\n```\n\n----------------------------------------\n\nTITLE: Swagger Import Statement\nDESCRIPTION: Import statement for the swagger 1.2 package which was moved to a separate module.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/emicklei/go-restful/v3/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nswagger \"github.com/emicklei/go-restful-swagger12\"\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Bash String Replacement Functions in Go\nDESCRIPTION: Enumerates the bash string replacement functions that are supported by the envsubst package. These functions allow for various string manipulations during variable expansion.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/drone/envsubst/readme.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `${var^}`\n* `${var^^}`\n* `${var,}`\n* `${var,,}`\n* `${var:position}`\n* `${var:position:length}`\n* `${var#substring}`\n* `${var##substring}`\n* `${var%substring}`\n* `${var%%substring}`\n* `${var/substring/replacement}`\n* `${var//substring/replacement}`\n* `${var/#substring/replacement}`\n* `${var/%substring/replacement}`\n* `${#var}`\n* `${var=default}`\n* `${var:=default}`\n* `${var:-default}`\n```\n\n----------------------------------------\n\nTITLE: Importing AWS SDK Go v2 Internal Packages\nDESCRIPTION: Imports various internal packages of the AWS SDK Go v2 for configuration, endpoints, and utilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/internal/configsources\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2\ngithub.com/aws/aws-sdk-go-v2/internal/ini\n```\n\n----------------------------------------\n\nTITLE: Installing copystructure Library using go get\nDESCRIPTION: Command to install the copystructure library using Go's package manager. This will download and install the library from GitHub into your Go workspace.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/copystructure/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ go get github.com/mitchellh/copystructure\n```\n\n----------------------------------------\n\nTITLE: Processing NAT Table Chain Debug Logs\nDESCRIPTION: Debug log entries from Felix showing the parsing of NAT table chains for Kubernetes services (KUBE-SVC) and endpoints (KUBE-SEP). The logs show chain creation with IPv4 rules and forward reference handling.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_1\n\nLANGUAGE: log\nCODE:\n```\n2024-05-08 15:23:58.729 [DEBUG][216945] felix/table.go 851: Parsing line ipVersion=0x4 line=\":KUBE-SEP-I3FNB3EP6IKUZIYZ - [0:0]\" table=\"nat\"\n2024-05-08 15:23:58.729 [DEBUG][216945] felix/table.go 870: Found forward-reference chainName=\"KUBE-SEP-XYB3XTKJEHCT7QLJ\" ipVersion=0x4 line=\":KUBE-SEP-XYB3XTKJEHCT7QLJ - [0:0]\" table=\"nat\"\n```\n\n----------------------------------------\n\nTITLE: Installing FSNotify Dependencies with Go Get Command\nDESCRIPTION: Command to install the latest version of golang.org/x/sys, which is required by fsnotify instead of using the standard library syscall package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/fsnotify/fsnotify.v1/README.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\ngo get -u golang.org/x/sys/...\n```\n\n----------------------------------------\n\nTITLE: Loki Logfmt Log Output\nDESCRIPTION: Timestamped log entries showing Loki's file target management, log parsing, and error handling. Includes file watcher events, logfmt parsing errors, and file handling operations for Kubernetes pod logs.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_4\n\nLANGUAGE: logfmt\nCODE:\n```\nts=2024-04-16T15:10:43.613342016Z caller=log.go:168 component=logs logs_config=default level=info msg=\"Waiting for /var/log/pods/hosted-grafana_.something-grafana-58687d789-49wfb_269bf9a8-7811-4259-b1fc-ff487ffc9a9a/grafana/0.log to appear...\"\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration - OpenTelemetry Go SDK\nDESCRIPTION: Configuration options available through environment variables for metric export intervals and timeouts.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_20\n\nLANGUAGE: go\nCODE:\n```\nOTEL_METRIC_EXPORT_INTERVAL // Time between collections and exports\nOTEL_METRIC_EXPORT_TIMEOUT  // Timeout for export attempts\n```\n\n----------------------------------------\n\nTITLE: Debugging IP Set Management in Go\nDESCRIPTION: This snippet shows the debug logging for IP set management in Felix. It includes operations like parsing IP sets, finding members in the dataplane, and whitelisting IP sets.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nfelix/ipsets.go 467: Found member in dataplane canon=10.68.28.190 family=\"inet\" member=\"10.68.28.190\" setID=\"this-host\"\nfelix/ipsets.go 589: Whitelisting IP sets. ID=\"this-host\" family=\"inet\" mainName=\"cali40this-host\"\nfelix/ipsets.go 426: Parsing IP set. family=\"inet\" setName=\"cali40this-host\"\n```\n\n----------------------------------------\n\nTITLE: Version History Documentation in Markdown\nDESCRIPTION: Detailed changelog entries documenting version releases, features, and bug fixes from version 1.0.0 through 1.x.x. Includes updates for COM interface implementations, cross-platform support, and testing improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-ole/go-ole/ChangeLog.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Version 1.x.x\n\n* **Add more test cases and reference new test COM server project.** (Placeholder for future additions)\n\n# Version 1.2.0-alphaX\n\n**Minimum supported version is now Go 1.4. Go 1.1 support is deprecated, but should still build.**\n\n * Added CI configuration for Travis-CI and AppVeyor.\n * Added test InterfaceID and ClassID for the COM Test Server project.\n * Added more inline documentation (#83).\n * Added IEnumVARIANT implementation (#88).\n * Added IEnumVARIANT test cases (#99, #100, #101).\n * Added support for retrieving `time.Time` from VARIANT (#92).\n * Added test case for IUnknown (#64).\n * Added test case for IDispatch (#64).\n * Added test cases for scalar variants (#64, #76).\n\n# Version 1.1.1\n\n * Fixes for Linux build.\n * Fixes for Windows build.\n\n# Version 1.1.0\n\nThe change to provide building on all platforms is a new feature. The increase in minor version reflects that and allows those who wish to stay on 1.0.x to continue to do so. Support for 1.0.x will be limited to bug fixes.\n\n * Move GUID out of variables.go into its own file to make new documentation available.\n * Move OleError out of ole.go into its own file to make new documentation available.\n * Add documentation to utility functions.\n * Add documentation to variant receiver functions.\n * Add documentation to ole structures.\n * Make variant available to other systems outside of Windows.\n * Make OLE structures available to other systems outside of Windows.\n\n## New Features\n\n * Library should now be built on all platforms supported by Go. Library will NOOP on any platform that is not Windows.\n * More functions are now documented and available on godoc.org.\n\n# Version 1.0.1\n\n 1. Fix package references from repository location change.\n\n# Version 1.0.0\n\nThis version is stable enough for use. The COM API is still incomplete, but provides enough functionality for accessing COM servers using IDispatch interface.\n\nThere is no changelog for this version. Check commits for history.\n```\n\n----------------------------------------\n\nTITLE: Pushing Git Tag\nDESCRIPTION: Command to push the signed tag to the remote repository\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/v2/RELEASE.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit push --follow-tags\n```\n\n----------------------------------------\n\nTITLE: Initial Benchmark Results\nDESCRIPTION: Baseline benchmark results at commit b3e7a5386f996177e4808f11acb2aa93a0f660df showing performance metrics for various name transformation functions\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/swag/BENCHMARK.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ngoos: linux\ngoarch: amd64\npkg: github.com/go-openapi/swag\ncpu: Intel(R) Core(TM) i5-6200U CPU @ 2.30GHz\nBenchmarkToXXXName/ToGoName-4         \t  862623\t     44101 ns/op\t   10450 B/op\t     732 allocs/op\nBenchmarkToXXXName/ToVarName-4        \t  853656\t     40728 ns/op\t   10468 B/op\t     734 allocs/op\nBenchmarkToXXXName/ToFileName-4       \t 1268312\t     27813 ns/op\t    9785 B/op\t     617 allocs/op\nBenchmarkToXXXName/ToCommandName-4    \t 1276322\t     27903 ns/op\t    9785 B/op\t     617 allocs/op\nBenchmarkToXXXName/ToHumanNameLower-4 \t  895334\t     40354 ns/op\t   10472 B/op\t     731 allocs/op\nBenchmarkToXXXName/ToHumanNameTitle-4 \t  882441\t     40678 ns/op\t   10566 B/op\t     749 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Parsing RFC 7643 SCIM URN\nDESCRIPTION: Demonstrates how to parse a SCIM URN using the Parse() function with a specific parsing mode. It also shows how to access SCIM-specific fields of the parsed URN.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/leodido/go-urn/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/leodido/go-urn\"\n)\n\nfunc main() {\n\tinput := \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n\n\t// Parsing the input string as a RFC 7643 SCIM URN\n\tu, ok := urn.Parse([]byte(input), urn.WithParsingMode(urn.RFC7643Only))\n\tif !ok {\n\t\tpanic(\"error parsing urn\")\n\t}\n\n\tfmt.Println(u.IsSCIM())\n\tscim := u.SCIM()\n\tfmt.Println(scim.Type.String())\n\tfmt.Println(scim.Name)\n\tfmt.Println(scim.Other)\n\n\t// Output:\n\t// true\n\t// api\n\t// messages\n\t// 2.0:ListResponse\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CredentialMode Enum\nDESCRIPTION: Enum definition for CredentialMode that specifies authentication types for object storage access, including static, token, and token-cco modes.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\"static\": \"CredentialModeStatic represents the usage of static, long-lived credentials stored in a Secret.\"\n\"token\": \"CredentialModeToken represents the usage of short-lived tokens retrieved from a credential source.\"\n\"token-cco\": \"CredentialModeTokenCCO represents the usage of short-lived tokens retrieved from a credential source via Cloud Credential Operator.\"\n```\n\n----------------------------------------\n\nTITLE: Finding All Go Modules in the Repository\nDESCRIPTION: This command lists all module declarations in go.mod files across the repository, helping to identify the modules that need to be released.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/RELEASING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat `find . -name go.mod` | grep module\nmodule cloud.google.com/go/pubsub\nmodule cloud.google.com/go/spanner\nmodule cloud.google.com/go\nmodule cloud.google.com/go/bigtable\nmodule cloud.google.com/go/bigquery\nmodule cloud.google.com/go/storage\nmodule cloud.google.com/go/pubsublite\nmodule cloud.google.com/go/firestore\nmodule cloud.google.com/go/logging\nmodule cloud.google.com/go/internal/gapicgen\nmodule cloud.google.com/go/internal/godocfx\nmodule cloud.google.com/go/internal/examples/fake\nmodule cloud.google.com/go/internal/examples/mock\nmodule cloud.google.com/go/datastore\n```\n\n----------------------------------------\n\nTITLE: Configuring Eventlogmessage Stage Schema in YAML\nDESCRIPTION: Schema definition for the eventlogmessage pipeline stage showing available configuration options including source, overwrite_existing, and drop_invalid_labels parameters.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/stages/eventlogmessage.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\neventlogmessage:\n  # Name from extracted data to parse, defaulting to the name\n  # used by the windows_events scraper\n  [source: <string> | default = message]\n\n  # If previously extracted data exists for a key that occurs\n  # in the Message, when true, the previous value will be\n  # overwriten by the value in the Message. Otherwise,\n  # '_extracted' will be appended to the key that is used for\n  # the value in the Message.\n  [overwrite_existing: <bool> | default = false]\n\n  # When true, keys extracted from the Message that are not\n  # valid labels will be dropped, otherwise they will be\n  # automatically converted into valid labels replacing invalid\n  # characters with underscores\n  [drop_invalid_labels: <bool> | default = false]\n```\n\n----------------------------------------\n\nTITLE: Analyzing Kubernetes Pod Scheduling Failures\nDESCRIPTION: These log entries show multiple failed attempts to schedule a pod named 'querier-burst-6b5f6db455-5zvkm' in the 'loki-dev-005' namespace. The scheduler reports various reasons for failure, including mismatched node selectors, insufficient CPU or memory, and untolerated taints on nodes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 12:02:27.960670       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-rv2l\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.960645       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.960467       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-r95m\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\nI0507 12:02:27.960454       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\n```\n\n----------------------------------------\n\nTITLE: Installing Doublestar Package in Go\nDESCRIPTION: Command to install the doublestar package using go get. This installs version 4 of the package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/bmatcuk/doublestar/v4\n```\n\n----------------------------------------\n\nTITLE: Domain and Subdomain Routing\nDESCRIPTION: Setting up routes with domain and subdomain matching patterns.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/mux/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nr := mux.NewRouter()\n// Only matches if domain is \"www.example.com\".\nr.Host(\"www.example.com\")\n// Matches a dynamic subdomain.\nr.Host(\"{subdomain:[a-z]+}.example.com\")\n```\n\n----------------------------------------\n\nTITLE: Demonstrating encoding/gob Memory Error\nDESCRIPTION: Example showing how encoding/gob can have fatal memory errors when decoding malicious input, highlighting the need for secure decoding implementations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fxamacker/cbor/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Example of encoding/gob having \"fatal error: runtime: out of memory\"\n// while decoding 181 bytes.\npackage main\nimport (\n\t\"bytes\"\n\t\"encoding/gob\"\n\t\"encoding/hex\"\n\t\"fmt\"\n)\n\n// Example data is from https://github.com/golang/go/issues/24446\n// (shortened to 181 bytes).\nconst data = \"4dffb503010102303001ff30000109010130010800010130010800010130\" +\n\t\"01ffb80001014a01ffb60001014b01ff860001013001ff860001013001ff\" +\n\t\"860001013001ff860001013001ffb80000001eff850401010e3030303030\" +\n\t\"30303030303030303001ff3000010c0104000016ffb70201010830303030\" +\n\t\"3030303001ff3000010c000030ffb6040405fcff00303030303030303030\" +\n\t\"303030303030303030303030303030303030303030303030303030303030\" +\n\t\"30\"\n\ntype X struct {\n\tJ *X\n\tK map[string]int\n}\n\nfunc main() {\n\traw, _ := hex.DecodeString(data)\n\tdecoder := gob.NewDecoder(bytes.NewReader(raw))\n\n\tvar x X\n\tdecoder.Decode(&x) // fatal error: runtime: out of memory\n\tfmt.Println(\"Decoding finished.\")\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Contexts\nDESCRIPTION: Lists all available Kubernetes contexts for troubleshooting cluster connectivity issues.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config get-contexts\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Internal GodocFX Top-Level Declarations Fix\nDESCRIPTION: Commit reference for using exact list of top-level declarations in the internal GodocFX documentation generation system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n([3cd2961](https://www.github.com/googleapis/google-cloud-go/commit/3cd2961bd7b9c29d82a21ba8850eff00c7c332fd))\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog File\nDESCRIPTION: A markdown formatted changelog file documenting version history and changes for the Grafana Loki project. Includes details on added features, changes, and fixes organized by release version.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/sprig/v3/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## Release 3.3.0 (2024-08-29)\n\n### Added\n\n- #400: added sha512sum function (thanks @itzik-elayev)\n\n### Changed\n\n- #407: Removed duplicate documentation (functions were documentated in 2 places)\n- #290: Corrected copy/paster oops in math documentation (thanks @zzhu41)\n- #369: Corrected template reference in docs (thanks @chey)\n- #375: Added link to URL documenation (thanks @carlpett)\n- #406: Updated the mergo dependency which had a breaking change (which was accounted for)\n- #376: Fixed documentation error (thanks @jheyduk)\n- #404: Updated dependency tree\n- #391: Fixed misspelling (thanks @chrishalbert)\n- #405: Updated Go versions used in testing\n```\n\n----------------------------------------\n\nTITLE: Special-case Marshaling for Functions Metadata in Go\nDESCRIPTION: Implements special-case marshaling for the functions/metadata package. This change enhances the handling of function metadata in Google Cloud Functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_24\n\nLANGUAGE: Go\nCODE:\n```\nd8d7fc66cbc42f79bec25fb0daaf53d926e3645b\n```\n\n----------------------------------------\n\nTITLE: Package Badge in Markdown\nDESCRIPTION: Markdown code for displaying the Go package documentation badge linking to pkg.go.dev for OpenTelemetry semantic conventions v1.26.0\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/semconv/v1.26.0)](https://pkg.go.dev/go.opentelemetry.io/otel/semconv/v1.26.0)\n```\n\n----------------------------------------\n\nTITLE: Logging Lease Revocation Events in Kubernetes Authentication\nDESCRIPTION: These log entries show the revocation of authentication leases in a Kubernetes environment. Each line represents a separate lease revocation event, including the timestamp, log level (INFO), operation (expiration: revoked lease), and the unique lease ID associated with the authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n2024-05-07T10:58:13.877Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/h8fc47b8d69b6067dfef3bfc7ce32d9b79f04c7658699678d333a6fe1ec1f94d6\n2024-05-07T10:58:13.790Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-east-0/login/hcae776c5ea5b05ed12d123dc2562db1e7a0457b8acfb9bde5ee43c8a3fa61ebd\n2024-05-07T10:58:13.444Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/h64ea582437fc72c1f5bb0ad92d990cf0224505a029c7473ed4af89aeaee340da\n```\n\n----------------------------------------\n\nTITLE: Package Import Example (Implied)\nDESCRIPTION: While not explicitly shown in code, the documentation references importing github.com/go-openapi/loads for YAML support and github.com/go-openapi/validate for specification validation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/spec/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n\"github.com/go-openapi/loads\"\n```\n\n----------------------------------------\n\nTITLE: Defining AlertingRule CRD struct in Golang for LokiStack\nDESCRIPTION: This code defines the AlertingRule CRD structure which includes specifications for tenant association, groups of alerting rules, evaluation intervals, and validation conditions. It follows the Kubernetes operator pattern with various kubebuilder annotations and resembles Prometheus rule syntax.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/ruler_support.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// AlertingRuleSpec defines the desired state of AlertingRule\ntype AlertingRuleSpec struct {\n    // Tenant to associate the alerting rule groups.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Tenant ID\"\n    TenantID string `json:\"tenantID\"`\n\n    // List of groups for alerting rules.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Groups\"\n    Groups []*AlertingRuleGroup `json:\"groups\"`\n}\n\n// AlertingRuleGroup defines a group of Loki alerting rules.\ntype AlertingRuleGroup struct {\n    // Name defines a name of the present recoding/alerting rule. Must be unique\n    // within all loki rules.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Name\"\n    Name string `json:\"name\"`\n\n    // Interval defines the time interval between evaluation of the given\n    // alerting rule.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +kubebuilder:default:=\"1m\"\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Evaluation Interval\"\n    Interval PrometheusDuration `json:\"interval\"`\n\n    // Limit defines the number of alerts an alerting rule can produce. 0 is no limit.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,xDescriptors=\"urn:alm:descriptor:com.tectonic.ui:number\",displayName=\"Limit of firing alerts\"\n    Limit int32 `json:\"limit,omitempty\"`\n\n    // Rules defines a list of alerting rules\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Rules\"\n    Rules []*AlertingRuleGroupSpec `json:\"rules\"`\n}\n\n// AlertingRuleGroupSpec defines the spec for a Loki alerting rule.\ntype AlertingRuleGroupSpec struct {\n    // The name of the alert. Must be a valid label value.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Name\"\n    Alert string `json:\"alert,omitempty\"`\n\n    // The LogQL expression to evaluate. Every evaluation cycle this is\n    // evaluated at the current time, and all resultant time series become\n    // pending/firing alerts.\n    //\n    // +required\n    // +kubebuilder:validation:Required\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"LogQL Expression\"\n    Expr string `json:\"expr\"`\n\n    // Alerts are considered firing once they have been returned for this long.\n    // Alerts which have not yet fired for long enough are considered pending.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Firing Threshold\"\n    For PrometheusDuration `json:\"for,omitempty\"`\n\n    // Annotations to add to each alert.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Annotations\"\n    Annotations map[string]string `json:\"annotations,omitempty\"`\n\n    // Labels to add to each alert.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=spec,displayName=\"Labels\"\n    Labels map[string]string `json:\"labels,omitempty\"`\n}\n\n// AlertingRuleStatus defines the observed state of AlertingRule\ntype AlertingRuleStatus struct {\n    // Conditions of the AlertingRule generation health.\n    //\n    // +optional\n    // +kubebuilder:validation:Optional\n    // +operator-sdk:csv:customresourcedefinitions:type=status,xDescriptors=\"urn:alm:descriptor:io.kubernetes.conditions\"\n    Conditions []metav1.Condition `json:\"conditions,omitempty\"`\n}\n\n//+kubebuilder:object:root=true\n//+kubebuilder:subresource:status\n\n// AlertingRule is the Schema for the alertingrules API\n//\n// +operator-sdk:csv:customresourcedefinitions:displayName=\"AlertingRule\",resources={{LokiStack,v1beta1}}\ntype AlertingRule struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n\n    Spec   AlertingRuleSpec   `json:\"spec,omitempty\"`\n    Status AlertingRuleStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Creating S3 Buckets using AWS CLI\nDESCRIPTION: Bash commands to create S3 buckets for storing Loki chunks and ruler data using the AWS CLI. Requires specifying unique bucket names and region.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naws s3api create-bucket --bucket  <YOUR CHUNK BUCKET NAME e.g. `loki-aws-dev-chunks`> --region <S3 region your account is on, e.g. `eu-west-2`> --create-bucket-configuration LocationConstraint=<S3 region your account is on, e.g. `eu-west-2`> \\\naws s3api create-bucket --bucket  <YOUR RULER BUCKET NAME e.g. `loki-aws-dev-ruler`> --region <S3 REGION your account is on, e.g. `eu-west-2`> --create-bucket-configuration LocationConstraint=<S3 REGION your account is on, e.g. `eu-west-2`>\n```\n\n----------------------------------------\n\nTITLE: Developer Certificate of Origin Text\nDESCRIPTION: The complete Developer Certificate of Origin (DCO) version 1.1 text that defines the terms under which contributions are made to the project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-metrics/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\n----------------------------------------\n\nTITLE: Bugfix Links - Various Components\nDESCRIPTION: List of pull request links and descriptions for bug fixes across different Telegraf components including inputs, parsers and system configurations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- [#13849](https://github.com/influxdata/telegraf/pull/13849) Change the systemd KillMode from control-group to mixed\n- [#13777](https://github.com/influxdata/telegraf/pull/13777) `inputs.amqp_consumer` Print error on connection failure\n...\n```\n\n----------------------------------------\n\nTITLE: Eliminating reflection in JSON encoding using type pointers\nDESCRIPTION: Go code showing how to eliminate reflection in JSON encoding by using type pointers and pre-built optimized encoders.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ntype emptyInterface struct {\n    typ unsafe.Pointer\n    ptr unsafe.Pointer\n}\n\nvar typeToEncoder = map[uintptr]func(unsafe.Pointer)([]byte, error){}\n\nfunc Marshal(v interface{}) ([]byte, error) {\n    iface := (*emptyInterface)(unsafe.Pointer(&v)\n    typeptr := uintptr(iface.typ)\n    if enc, exists := typeToEncoder[typeptr]; exists {\n        return enc(iface.ptr)\n    }\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Commit Information in Markdown\nDESCRIPTION: This snippet shows how to reference a specific Git commit using Markdown syntax. It includes the commit hash and a hyperlink to the commit in the repository.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/promtail/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[11caa49](https://github.com/grafana/loki/commit/11caa492210c201bd0b0272d9187151be647d3e0)\n```\n\n----------------------------------------\n\nTITLE: Displaying Admonition for Loki Upgrade Caution in Markdown\nDESCRIPTION: This snippet shows a markdown admonition block cautioning users about upgrading Loki or Grafana Enterprise Logs deployments on AWS, advising them to upgrade Helm charts or change bucket names.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-1.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< admonition type=\"important\" >}}\nOut of an abundance of caution, we advise that users with Loki or Grafana Enterprise Logs (GEL) deployments on AWS upgrade their Helm charts or change the names of their buckets, as outlined in the solutions and mitigations section of this [blog post](https://grafana.com/blog/2024/06/27/grafana-security-update-grafana-loki-and-unintended-data-write-attempts-to-amazon-s3-buckets/).\n{{< /admonition >}}\n```\n\n----------------------------------------\n\nTITLE: Commit Links\nDESCRIPTION: GitHub commit reference links\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/iam/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[d5cb2e5](https://github.com/googleapis/google-cloud-go/commit/d5cb2e58334c6963cc46885f565fe3b19c52cb63)\n```\n\n----------------------------------------\n\nTITLE: Installing Azure Core Client Module with Go\nDESCRIPTION: Command to install the latest version of azcore module using Go modules. This adds the dependency to your go.mod file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/Azure/azure-sdk-for-go/sdk/azcore\n```\n\n----------------------------------------\n\nTITLE: Setting Up GCloud CLI for Integration Tests\nDESCRIPTION: Bash commands to set up the Google Cloud CLI and create necessary resources for running integration tests. These commands set the project, authenticate, and create various resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Sets the default project in your env.\n$ gcloud config set project $GCLOUD_TESTS_GOLANG_PROJECT_ID\n\n# Authenticates the gcloud tool with your account.\n$ gcloud auth login\n\n# Create the indexes for all the databases you want to use in the datastore integration tests. \n# Use empty string as databaseID or skip database flag for default database.\n$ gcloud alpha datastore indexes create --database=your-databaseID-1 --project=$GCLOUD_TESTS_GOLANG_PROJECT_ID testdata/index.yaml\n\n# Creates a Google Cloud storage bucket with the same name as your test project,\n# and with the Cloud Logging service account as owner, for the sink\n# integration tests in logging.\n$ gsutil mb gs://$GCLOUD_TESTS_GOLANG_PROJECT_ID\n$ gsutil acl ch -g cloud-logs@google.com:O gs://$GCLOUD_TESTS_GOLANG_PROJECT_ID\n\n# Creates a PubSub topic for integration tests of storage notifications.\n$ gcloud beta pubsub topics create go-storage-notification-test\n\n# Creates a Spanner instance for the spanner integration tests.\n$ gcloud beta spanner instances create go-integration-test --config regional-us-central1 --nodes 10 --description 'Instance for go client test'\n\n$ export MY_KEYRING=some-keyring-name\n$ export MY_LOCATION=global\n$ export MY_SINGLE_LOCATION=us-central1\n# Creates a KMS keyring, in the same location as the default location for your\n# project's buckets.\n$ gcloud kms keyrings create $MY_KEYRING --location $MY_LOCATION\n# Creates two keys in the keyring, named key1 and key2.\n$ gcloud kms keys create key1 --keyring $MY_KEYRING --location $MY_LOCATION --purpose encryption\n$ gcloud kms keys create key2 --keyring $MY_KEYRING --location $MY_LOCATION --purpose encryption\n# Sets the GCLOUD_TESTS_GOLANG_KEYRING environment variable.\n$ export GCLOUD_TESTS_GOLANG_KEYRING=projects/$GCLOUD_TESTS_GOLANG_PROJECT_ID/locations/$MY_LOCATION/keyRings/$MY_KEYRING\n# Authorizes Google Cloud Storage to encrypt and decrypt using key1.\n$ gsutil kms authorize -p $GCLOUD_TESTS_GOLANG_PROJECT_ID -k $GCLOUD_TESTS_GOLANG_KEYRING/cryptoKeys/key1\n\n# Create KMS Key in one region for Bigtable\n$ gcloud kms keyrings create $MY_KEYRING --location $MY_SINGLE_LOCATION\n$ gcloud kms keys create key1 --keyring $MY_KEYRING --location $MY_SINGLE_LOCATION --purpose encryption\n# Sets the GCLOUD_TESTS_BIGTABLE_KEYRING environment variable.\n$ export GCLOUD_TESTS_BIGTABLE_KEYRING=projects/$GCLOUD_TESTS_GOLANG_PROJECT_ID/locations/$MY_SINGLE_LOCATION/keyRings/$MY_KEYRING\n```\n\n----------------------------------------\n\nTITLE: Boundary Check Elimination in Go JSON Decoding\nDESCRIPTION: This snippet shows how to eliminate boundary checks in Go JSON decoding by using unsafe pointer operations, improving performance for character fetching.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/goccy/go-json/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nfunc char(ptr unsafe.Pointer, offset int64) byte {\n\treturn *(*byte)(unsafe.Pointer(uintptr(ptr) + uintptr(offset)))\n}\n\np := (*sliceHeader)(&unsafe.Pointer(buf)).data\nfor {\n    switch char(p, cursor) {\n    case ' ', '\\n', '\\r', '\\t':\n    case '\\000':\n        return nil\n    }\n    cursor++\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Page Frontmatter Template\nDESCRIPTION: A Hugo template for page frontmatter that sets up basic page metadata including title, description, date, menu structure and other page settings. Also includes an image shortcode template.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/website/archetypes/docs.md#2025-04-19_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n---\ntitle: \"{{ replace .Name \"-\" \" \" | title }}\"\ndescription: \"\"\nlead: \"\"\ndate: {{ .Date }}\nlastmod: {{ .Date }}\ndraft: true\nimages: []\nmenu:\n  docs:\n    parent: \"\"\nweight: 999\ntoc: true\n---\n\n{{< img src=\"{{ .Name | urlize }}.jpg\" alt=\"{{ replace .Name \"-\" \" \" | title }}\" caption=\"{{ replace .Name \"-\" \" \" | title }}\" >}}\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Loki UI in Bash\nDESCRIPTION: This command starts the development server for the Loki UI project.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/frontend/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using HostPool in Go\nDESCRIPTION: Example demonstrating how to create and use an epsilon greedy host pool. Shows initialization, host selection, and response marking after request completion.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hailocab/go-hostpool/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nhp := hostpool.NewEpsilonGreedy([]string{\"a\", \"b\"}, 0, &hostpool.LinearEpsilonValueCalculator{})\nhostResponse := hp.Get()\nhostname := hostResponse.Host()\nerr := _ // (make a request with hostname)\nhostResponse.Mark(err)\n```\n\n----------------------------------------\n\nTITLE: Updating Azure Blob API Service Version\nDESCRIPTION: Directive to update the service version from 2021-12-02 to 2023-11-03 in multiple client files by transforming the generated code.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: \n  - zz_appendblob_client.go\n  - zz_blob_client.go\n  - zz_blockblob_client.go\n  - zz_container_client.go\n  - zz_pageblob_client.go\n  - zz_service_client.go\n  where: $\n  transform: >\n    return $.\n      replaceAll(`[]string{\"2021-12-02\"}`, `[]string{ServiceVersion}`).\n      replaceAll(`2021-12-02`, `2023-11-03`);\n```\n\n----------------------------------------\n\nTITLE: Error Interface Definition in Go\nDESCRIPTION: Definition of a custom Error interface that extends the standard error interface with methods to check if an error is temporary or a timeout.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/notes.txt#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype Error interface {\n    error\n    Timeout() bool   // Is the error a timeout?\n    Temporary() bool // Is the error temporary?\n}\n```\n\n----------------------------------------\n\nTITLE: Health Check Data Structure Sample\nDESCRIPTION: Health report format showing component status including liveness, readiness, timeouts and details\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n+------------------+---------+----------------+-----------------+--------+\n|    COMPONENT     | TIMEOUT |    LIVENESS    |    READINESS    | DETAIL |\n+------------------+---------+----------------+-----------------+--------+\n| async_calc_graph | 20s     | reporting live | reporting ready |        |\n| felix-startup    | 0s      | reporting live | reporting ready |        |\n| int_dataplane    | 1m30s   | reporting live | reporting ready |        |\n+------------------+---------+----------------+-----------------+--------+\n```\n\n----------------------------------------\n\nTITLE: Detailed Capacity Check Parameters in Grafana Loki\nDESCRIPTION: Debug log entry showing the detailed parameters during a capacity check. This log includes server pool limits (min/max), current build statuses, and server capacity metrics used for resource management decisions.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"q62wCcIkEOueqFKF\",\"level\":\"debug\",\"max-pool\":4,\"min-pool\":0,\"msg\":\"check capacity\",\"pending-builds\":0,\"running-builds\":0,\"server-buffer\":0,\"server-capacity\":0,\"server-count\":0,\"time\":\"2024-04-16T15:03:28Z\"}\n```\n\n----------------------------------------\n\nTITLE: Update CPK Acronym Casing\nDESCRIPTION: Changes 'Cpk' to 'CPK' for consistent acronym casing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n  - from: source-file-go\n    where: $\n    transform: >\n      return $.\n        replace(/Cpk/g, \"CPK\");\n```\n\n----------------------------------------\n\nTITLE: Loki Log Output\nDESCRIPTION: Log entries from Grafana Loki showing file tailing operations and CloudWatch pipeline node evaluations. Contains timestamps, component information, and duration metrics.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_19\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:42.665722097Z caller=tailer.go:207 level=info component=logs logs_config=default component=tailer msg=\"skipping update of position for a file which does not currently exist\" path=/var/log/pods/hosted-grafana_.something-grafana-5c8b54fd6c-9lp4b_32bb6165-f27e-4160-8068-54f665f5b240/hosted-grafana-security/0.log\n```\n\n----------------------------------------\n\nTITLE: Printing with Line Break in Go\nDESCRIPTION: Standard Go fmt package function for printing with an appended line break\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/.errcheck_excludes.txt#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfmt.Fprintln\n```\n\n----------------------------------------\n\nTITLE: Grafana Health Check Error Logs\nDESCRIPTION: Multiple failed health check attempts to Grafana's API endpoint at http://127.0.0.1:3000/api/health showing connection refusal errors. The logs are from the hgrun application version 0.1.453-59-gf3f63162a.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_19\n\nLANGUAGE: log\nCODE:\n```\nts=2024-05-07T11:59:22.763876203Z level=error caller=http_client.go:56 app=hgrun hgrun_version=0.1.453-59-gf3f63162a msg=\"request failed\" error=\"Get \\\"http://127.0.0.1:3000/api/health\\\": dial tcp 127.0.0.1:3000: connect: connection refused\" method=GET url=http://127.0.0.1:3000/api/health\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Container Lifecycle Log Entry\nDESCRIPTION: Log entries showing container creation and start operations within a Kubernetes sandbox, including container IDs and metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_0\n\nLANGUAGE: log\nCODE:\n```\ntime=\"2024-05-07T11:59:43.954655670Z\" level=info msg=\"StartContainer for \\\"93fa5decd62691912f90c9b27526f5e00183239bfa4d3f4ea8578a7873b9c2b4\\\"\"\ntime=\"2024-05-07T11:59:43.954289531Z\" level=info msg=\"CreateContainer within sandbox \\\"ee9dc07bca79ef7dffe2a6eb326e27236e9e97c35913c7aae16ee0a62632fc25\\\" for &ContainerMetadata{Name:cortex-gw,Attempt:1660,} returns container id \\\"93fa5decd62691912f90c9b27526f5e00183239bfa4d3f4ea8578a7873b9c2b4\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Loki Log Output\nDESCRIPTION: Log entries from Grafana Loki showing file target management, tailing operations, and error handling. Includes information about file watching, position tracking, and log processing for multiple containers.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_15\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:42.956185492Z caller=tailer.go:207 level=info component=logs logs_config=default component=tailer msg=\"skipping update of position for a file which does not currently exist\" path=/var/log/pods/hosted-grafana_.something-grafana-6c66686686-mqtcr_c3c249a2-c8ff-40f4-a66d-9d746b39110b/hg-plugins/0.log\n```\n\n----------------------------------------\n\nTITLE: Configuring Bloom Filters in Parquet Files with Go\nDESCRIPTION: Demonstrates how to configure bloom filters for columns in a parquet file. Bloom filters improve performance of point lookups by allowing quick elimination of column chunks that don't contain the searched value.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ntype RowType struct {\n    FirstName string `parquet:\"first_name\"`\n    LastName  string `parquet:\"last_name\"`\n}\n\nconst filterBitsPerValue = 10\nwriter := parquet.NewGenericWriter[RowType](output,\n    parquet.BloomFilters(\n        // Configures the write to generate split-block bloom filters for the\n        // \"first_name\" and \"last_name\" columns of the parquet schema of rows\n        // witten by the application.\n        parquet.SplitBlockFilter(filterBitsPerValue, \"first_name\"),\n        parquet.SplitBlockFilter(filterBitsPerValue, \"last_name\"),\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Parsing NAT Table Rules in Felix (Plaintext Log)\nDESCRIPTION: Debug log entries showing Felix parsing NAT table rules for Kubernetes services and endpoints. It demonstrates the process of discovering forward references to various KUBE-SVC and KUBE-SEP chains.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n2024-05-08 15:23:58.725 [DEBUG][216945] felix/table.go 851: Parsing line ipVersion=0x4 line=\":KUBE-SVC-AB4YQQQ7D66YOVGJ - [0:0]\" table=\"nat\"\n2024-05-08 15:23:58.725 [DEBUG][216945] felix/table.go 870: Found forward-reference chainName=\"KUBE-SEP-A52BZFPZA5XO3M2T\" ipVersion=0x4 line=\":KUBE-SEP-A52BZFPZA5XO3M2T - [0:0]\" table=\"nat\"\n2024-05-08 15:23:58.725 [DEBUG][216945] felix/table.go 851: Parsing line ipVersion=0x4 line=\":KUBE-SEP-A52BZFPZA5XO3M2T - [0:0]\" table=\"nat\"\n2024-05-08 15:23:58.725 [DEBUG][216945] felix/table.go 870: Found forward-reference chainName=\"KUBE-SVC-QFJG3IBMPHHC2EHE\" ipVersion=0x4 line=\":KUBE-SVC-QFJG3IBMPHHC2EHE - [0:0]\" table=\"nat\"\n```\n\n----------------------------------------\n\nTITLE: Installing Gzip Handler Package in Go\nDESCRIPTION: Command to install the gziphandler package using the Go package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/NYTimes/gziphandler/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/NYTimes/gziphandler\n```\n\n----------------------------------------\n\nTITLE: Loki File Watcher Event Logs\nDESCRIPTION: Log entries showing file watcher events detected by Loki. These logs display how Loki responds to file system events like file creation, which is crucial for its log collection functionality in container environments.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_12\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:43.020680098Z caller=filetargetmanager.go:181 level=info component=logs logs_config=default msg=\"received file watcher event\" name=/var/log/pods/profiles-ops-001_fire-compactor-91_2be1ca60-4f1b-4f90-90bc-d235de54176b/compactor/0.log.20240416-150902.tmp op=CREATE\n```\n\n----------------------------------------\n\nTITLE: Importing Chroma v2 in Go\nDESCRIPTION: Shows how to import version 2 of the Chroma library in a Go program.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/alecthomas/chroma/v2\"\n```\n\n----------------------------------------\n\nTITLE: Including Handlebars.js for LogQL Simulator\nDESCRIPTION: This HTML snippet includes the Handlebars.js library, likely used for templating in the LogQL simulator interface.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"../analyzer/handlebars.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Fix Typo in Storage Error Code\nDESCRIPTION: Corrects the typo in 'IncrementalCopyOfEralierVersionSnapshotNotAllowed' to 'IncrementalCopyOfEarlierVersionSnapshotNotAllowed' in constants file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: zz_constants.go\n  where: $\n  transform: >\n    return $.\n      replace(/IncrementalCopyOfEralierVersionSnapshotNotAllowed/g, \"IncrementalCopyOfEarlierVersionSnapshotNotAllowed\");\n```\n\n----------------------------------------\n\nTITLE: Supporting TCP in KNX Listener Input\nDESCRIPTION: Adds support for TCP as a transport protocol in the KNX listener input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.knx_listener\" Support TCP as transport protocol\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Content\nDESCRIPTION: Detailed changelog entries documenting changes across multiple Telegraf versions, including bug fixes, new features, and release notes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG-1.13.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- markdownlint-disable MD024 -->\n# Changelog v1.13 and Earlier\n\n## v1.13.4 [2020-02-25]\n\n### Release Notes\n\n- Official packages now built with Go 1.13.8.\n\n### Bug Fixes\n\n- [#6988](https://github.com/influxdata/telegraf/issues/6988): Parse NaN values from summary types in prometheus input.\n- [#6820](https://github.com/influxdata/telegraf/issues/6820): Fix pgbouncer input when used with newer pgbouncer versions.\n- [#6913](https://github.com/influxdata/telegraf/issues/6913): Support up to 8192 stats in the ethtool input.\n[...]\n```\n\n----------------------------------------\n\nTITLE: Defining an integer flag with pointer return\nDESCRIPTION: Creates an integer flag named \"flagname\" with default value 1234. Returns a pointer to the flag value that will be populated after parsing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar ip *int = flag.Int(\"flagname\", 1234, \"help message for flagname\")\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Loki Design Documentation\nDESCRIPTION: YAML frontmatter configuration for a documentation page about Loki Operator design, including metadata like title, date, menu structure, and display options.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/design.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Design\"\ndescription: \"Design of the Loki Operator\"\nlead: \"\"\ndate: 2022-06-21T08:48:45+00:00\nlastmod: 2022-06-21T08:48:45+00:00\ndraft: false\nimages: []\nmenu:\n  docs:\n    parent: \"operator\"\nweight: 10\ntoc: true\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Kingpin in Go\nDESCRIPTION: Shows how to install the Kingpin library using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/kingpin/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go get github.com/alecthomas/kingpin/v2\n```\n\n----------------------------------------\n\nTITLE: Invalid Empty Namespace Query\nDESCRIPTION: Example of an invalid query attempting to match empty namespace values.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-3.md#2025-04-19_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n{namespace=\"\"}\n```\n\n----------------------------------------\n\nTITLE: Package Badge Display in Markdown\nDESCRIPTION: Markdown code that displays a Go package documentation badge linking to pkg.go.dev for the trace/embedded package\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/trace/embedded/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/trace/embedded)](https://pkg.go.dev/go.opentelemetry.io/otel/trace/embedded)\n```\n\n----------------------------------------\n\nTITLE: Listing Pods in the OpenShift Logging Namespace\nDESCRIPTION: Command to list all pods in the openshift-logging namespace to find the storage size calculator pod name.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n openshift-logging get pods\n```\n\n----------------------------------------\n\nTITLE: Removing DataLake Related API Paths\nDESCRIPTION: Directive to remove all Data Lake related API paths that contain 'filesystem' in their paths, focusing the SDK on Blob Storage only.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $[\"x-ms-paths\"]\n  transform: >\n    for (const property in $)\n    {\n        if (property.includes('filesystem'))\n        {\n            delete $[property];\n        }\n    }\n```\n\n----------------------------------------\n\nTITLE: Starting Carnivorous Greenhouse Application with Docker Compose\nDESCRIPTION: This command starts the Carnivorous Greenhouse application using Docker Compose. It relies on the loki-fundamentals_loki Docker network, so the observability stack must be started first.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose -f loki-fundamentals/greenhouse/docker-compose-micro.yml up -d --build \n```\n\n----------------------------------------\n\nTITLE: Loki LogFmt Decoding Error Messages\nDESCRIPTION: Error logs showing failures during logfmt decoding. These errors indicate issues with the format of logs being processed, such as syntax errors or tokens that are too long, which can affect the proper indexing and querying of logs.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_13\n\nLANGUAGE: log\nCODE:\n```\nts=2024-04-16T15:10:43.010216068Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"bufio.Scanner: token too long\"\nts=2024-04-16T15:10:42.972859196Z caller=logfmt.go:139 level=error component=logs logs_config=default component=file_pipeline component=stage type=logfmt msg=\"failed to decode logfmt\" err=\"logfmt syntax error at pos 95 on line 1: unexpected '\\\"'\"\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Links\nDESCRIPTION: GitHub repository comparison links for version changes\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/iam/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[1.5.0](https://github.com/googleapis/google-cloud-go/compare/iam/v1.4.2...iam/v1.5.0)\n```\n\n----------------------------------------\n\nTITLE: Configure Legacy Import Path Replace\nDESCRIPTION: Command to add a replace directive in go.mod for handling legacy import paths, downgrading to v1.4.0 for compatibility.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ go mod edit -replace github.com/uber-go/atomic=github.com/uber-go/atomic@v1.4.0\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Loki Reference Page\nDESCRIPTION: This code snippet defines the YAML frontmatter for the Loki reference topics overview page. It specifies the title, menu title, description, and weight for the page in the documentation structure.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Loki reference topics\nmenuTitle: Reference\ndescription:  Overview page for Loki reference topics.\nweight: 1000\n---\n```\n\n----------------------------------------\n\nTITLE: Meta-Monitoring Values Configuration\nDESCRIPTION: YAML configuration for the meta-monitoring Helm chart, defining namespace monitoring and cloud integration settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/monitor-and-alert/with-grafana-cloud.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nnamespacesToMonitor:\n- default\n\ncloud:\n  logs:\n    enabled: true\n    secret: \"logs\"\n  metrics:\n    enabled: true\n    secret: \"metrics\"\n  traces:\n    enabled: true\n    secret: \"traces\"\n```\n\n----------------------------------------\n\nTITLE: WhiteList Character Filtering in Go\nDESCRIPTION: Example of using WhiteList function to filter strings by keeping only specified characters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_16\n\nLANGUAGE: go\nCODE:\n```\nprintln(govalidator.WhiteList(\"a3a43a5a4a3a2a23a4a5a4a3a4\", \"a-z\") == \"aaaaaaaaaaaa\")\n```\n\n----------------------------------------\n\nTITLE: Examining Container StartContainer Operation Log in containerd\nDESCRIPTION: Log message showing a successful container start operation from containerd. The log includes a timestamp, log level, and operation details with a container ID.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\ntime=\"2024-05-07T11:59:38.748149797Z\" level=info msg=\"StartContainer for \\\"eeccb21da13bfae40b1a01984522c7a8f8dcb65dba3cc1cc2f2ba73381d9eaef\\\" returns successfully\"\n```\n\n----------------------------------------\n\nTITLE: Binding a flag to a variable using Var functions\nDESCRIPTION: Demonstrates binding a flag to an existing variable using the IntVar method. This approach stores the flag value directly in the provided variable after parsing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/pflag/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nvar flagvar int\nfunc init() {\n    flag.IntVar(&flagvar, \"flagname\", 1234, \"help message for flagname\")\n}\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Network Connectivity State Field Implementation\nDESCRIPTION: Additional commit reference for implementation of the state field in Network Connectivity resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n([b4b5898](https://www.github.com/googleapis/google-cloud-go/commit/b4b58987368f80494bbc7f651f50e9123200fb3f))\n```\n\n----------------------------------------\n\nTITLE: Loki Log Output\nDESCRIPTION: Timestamped log entries showing Loki's file target management operations, including file watching, reopening, and tailing activities. The logs show interaction with container log files in a Kubernetes environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/agent-logfmt.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nts=2024-04-16T15:10:43.936280507Z caller=filetarget.go:313 level=info component=logs logs_config=default msg=\"watching new directory\" directory=/var/log/pods/hosted-grafana_.something-grafana-747b4b8bb6-46kwt_852b076d-c773-4e47-bc55-d7eeae8a5837/hg-plugins\n```\n\n----------------------------------------\n\nTITLE: Referencing testdata_test.go for Concrete Types Unmarshal Benchmark\nDESCRIPTION: Link to the testdata_test.go file containing concrete type definitions used in the unmarshal performance benchmarks. This file defines the Go structures that are used as targets when deserializing JSON data.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/kube-openapi/pkg/internal/third_party/go-json-experiment/json/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n/testdata_test.go\n```\n\n----------------------------------------\n\nTITLE: HTML Comment for Custom Contribution Guidelines\nDESCRIPTION: HTML comment placeholder instructing project maintainers to add custom contribution guidelines specific to their repository ahead of the general Kubernetes resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!---\nIf your repo has certain guidelines for contribution, put them here ahead of the general k8s resources\n-->\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Forking fsnotify\nDESCRIPTION: Series of git commands showing how to fork and contribute to fsnotify, including installation, branch creation, and pull request workflow.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/fsnotify/fsnotify.v1/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/fsnotify/fsnotify\ngit checkout -b my-new-feature\ngit commit -am 'Add some feature'\ngit remote add fork git@github.com:mycompany/repo.git\ngit push fork my-new-feature\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Objx Map Entries in Go\nDESCRIPTION: Demonstrates how to use a standard Go range loop to iterate through entries in an objx.Map, since it is based on map[string]interface{}.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/stretchr/objx/README.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nm := objx.MustFromJSON(json)\nfor key, value := range m {\n  // Your code...\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Badge for Go Package Documentation\nDESCRIPTION: Markdown link with badge to the pkg.go.dev documentation for the OpenTelemetry SDK Resource package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/resource/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/resource)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/resource)\n```\n\n----------------------------------------\n\nTITLE: CallErr Creation Example\nDESCRIPTION: Shows how CallErr is created in the comm package when handling HTTP requests, including error message formatting and response handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/AzureAD/microsoft-authentication-library-for-go/apps/errors/error_design.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nreturn nil, errors.CallErr{\n    Req:  req,\n    Resp: reply,\n    Err:  fmt.Errorf(\"http call(%s)(%s) error: reply status code was %d:\\n%s\", req.URL.String(), req.Method, reply.StatusCode, ErrorResponse),\n    }\n```\n\n----------------------------------------\n\nTITLE: Viewing Pending Pod Output in Kubernetes\nDESCRIPTION: Example output showing Loki pods stuck in Pending state after a zone failure. The output helps identify which components (ingester, ruler, index-gateway) need recovery.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/recover_ingester_pods_in_zone_failure_outages.md#2025-04-19_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nNAME                            READY   STATUS    RESTARTS   AGE\nlokistack-dev-index-gateway-1   0/1     Pending   0          17m\nlokistack-dev-ingester-1        0/1     Pending   0          16m\nlokistack-dev-ruler-1           0/1     Pending   0          16m\n```\n\n----------------------------------------\n\nTITLE: Analyzing Kubernetes Pod Scheduling Failures\nDESCRIPTION: These log entries show the Kubernetes scheduler's attempts to place the pod 'querier-burst-6b5f6db455-5zvkm' on different nodes. Each entry indicates why the pod could not be scheduled on a particular node, such as insufficient CPU or memory, mismatched node selectors, or intolerance to node taints.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 12:02:27.968730       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-spot-n2s8-0-1dd3-f81338c4-m75z\" error:=\"[insufficient cpu, insufficient memory]\"\nI0507 12:02:27.968720       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.968651       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-xstn\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\n\n```\n\n----------------------------------------\n\nTITLE: Analyzing Pod Scheduling Failures in Kubernetes GKE Cluster\nDESCRIPTION: Log entries showing scheduler attempts to place a querier pod on multiple nodes, with failures due to node selector mismatches, insufficient CPU and memory resources. Each log entry includes pod name, node name, and specific error details.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kubernetes.txt#2025-04-19_snippet_9\n\nLANGUAGE: log\nCODE:\n```\nI0507 12:02:27.949880       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-hg-n2s4-7-1dd39c-6f2ad845-7lsj\" error:=\"[pod node selector does not match the node label, pod does not tolerate taints on the node]\"\nI0507 12:02:27.949860       1 node.go:339] \"no Pod antiaffinity rule found\" pod=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\"\nI0507 12:02:27.949749       1 node.go:157] \"Pod does not fit on any other node\" pod:=\"loki-dev-005/querier-burst-6b5f6db455-5zvkm\" node:=\"gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-trgv\" error:=\"[pod node selector does not match the node label, insufficient cpu]\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Sync Error Logs\nDESCRIPTION: These log entries show errors encountered while syncing pods. They include issues such as ImagePullBackOff, CrashLoopBackOff, and ErrImageNeverPull, indicating problems with container images or container startup processes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_44\n\nLANGUAGE: plaintext\nCODE:\n```\nE0507 11:59:32.704958    4602 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/hosted-grafana/hosted-grafana-pro:10.1.0-ephemeral-oss-77487-8287-1\\\\\\\"\\\"\" pod=\"hosted-grafana/ephemeral1511182177487torkelo-grafana-745789578d-jmj9h\" podUID=\"144f91fd-76a2-4ca1-9e14-ba65fe8113da\"\n\nE0507 11:59:32.570199    4595 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with CrashLoopBackOff: \\\"back-off 1m20s restarting failed container=grafana pod=ltest-grafana-74d66c7766-s2ftd_hosted-grafana(40e776a7-78a1-44d8-95ac-0c4944bb7737)\\\"\" pod=\"hosted-grafana/ltest-grafana-74d66c7766-s2ftd\" podUID=\"40e776a7-78a1-44d8-95ac-0c4944bb7737\"\n\nE0507 11:59:32.562163    4739 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"pdc\\\" with ErrImageNeverPull: \\\"Container image \\\\\\\"us.gcr.io/hosted-grafana/pdc:0.1.415\\\\\\\" is not present with pull policy of Never\\\"\" pod=\"pdc/private-datasource-connect-564fb6cfbb-5k5n7\" podUID=\"5ce47ae4-8558-422b-8246-7733512eeb96\"\n```\n\n----------------------------------------\n\nTITLE: Loki Version Support Table in Markdown\nDESCRIPTION: Markdown table showing which versions of Grafana Loki are currently supported for security updates. Version 3.7.x is supported while versions below 3.0.1 are not supported.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/emicklei/go-restful/v3/SECURITY.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n| ------- | ------------------ |\n| v3.7.x     | :white_check_mark: |\n| < v3.0.1   | :x:                |\n```\n\n----------------------------------------\n\nTITLE: Debug Log Entry - Status Message\nDESCRIPTION: Simple JSON log entry containing basic status information including timestamp and message.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"3K61Yf6ImKYexoFx\",\"level\":\"debug\",\"msg\":\"calculate server capacity\",\"time\":\"2024-04-16T14:54:56Z\"}\n```\n\n----------------------------------------\n\nTITLE: Console Error Log Example\nDESCRIPTION: Example of console error log output showing HTTP 404 error when accessing delete requests with mismatched HTTP clients.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-7.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nlevel=error ts=2022-10-18T14:13:41.598649348Z caller=delete_requests_client.go:211 msg=\"error getting delete requests from the store\" err=\"unexpected status code: 404\"\nts=2022-10-18T14:13:41.598697295Z caller=spanlogger.go:80 user=application level=error msg=\"failed loading deletes for user\" err=\"unexpected status code: 404\"\n```\n\n----------------------------------------\n\nTITLE: Importing Miniredis v2 in Go\nDESCRIPTION: Shows how to import the Miniredis v2 package in a Go application. The v2 version is the recommended import path for the library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alicebob/miniredis/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/alicebob/miniredis/v2\"\n```\n\n----------------------------------------\n\nTITLE: Examining Container Start Operation in libcontainer\nDESCRIPTION: Log message indicating that libcontainer has successfully started a container. The log includes the container ID.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nStarted libcontainer container eeccb21da13bfae40b1a01984522c7a8f8dcb65dba3cc1cc2f2ba73381d9eaef.\n```\n\n----------------------------------------\n\nTITLE: Creating Canary Basic Auth Secret for Loki\nDESCRIPTION: Command to create a Kubernetes secret with username and password literals for the Loki canary to authenticate with the gateway.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/aws.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic canary-basic-auth \\\n  --from-literal=username=<USERNAME> \\\n  --from-literal=password=<PASSWORD> \\\n  -n loki\n```\n\n----------------------------------------\n\nTITLE: Logging ExecSync Failure in Kubernetes\nDESCRIPTION: Error log entry showing a failure to execute a command in a container due to a task not found error in Kubernetes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\nE0507 11:59:38.489587    4631 remote_runtime.go:496] \"ExecSync cmd from runtime service failed\" err=\"rpc error: code = NotFound desc = failed to exec in container: failed to load task: no running task found: task 6ad3e55547f2192f865518e75009243418b177091c1c781236e2ac8f0324b408 not found: not found\" containerID=\"6ad3e55547f2192f865518e75009243418b177091c1c781236e2ac8f0324b408\" cmd=[\"/bin/hgrun\",\"check\"]\n```\n\n----------------------------------------\n\nTITLE: Creating LokiStack Instance with Gateway\nDESCRIPTION: Applies a LokiStack custom resource with gateway configuration to the OpenShift cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n openshift-logging apply -f hack/lokistack_gateway_dev.yaml\n```\n\n----------------------------------------\n\nTITLE: Logging Container Execution Error in Go\nDESCRIPTION: This snippet demonstrates logging an error that occurred during container execution. It includes details such as the error message, container ID, and the command that failed to execute.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_25\n\nLANGUAGE: go\nCODE:\n```\nE0507 11:59:38.083847    4589 prober.go:104] \"Probe errored\" err=\"rpc error: code = NotFound desc = failed to exec in container: failed to load task: no running task found: task fc7a558bca122d6b5fb9aa81e62a87053c8a6a84945fd7a5fd4508d7cbc0878a not found: not found\" probeType=\"Readiness\" pod=\"hosted-grafana/k6teststeady3-grafana-659d5ff58d-h4lmj\" podUID=\"85274c17-190e-4275-a8f3-6e111cd833bf\" containerName=\"grafana\"\n```\n\n----------------------------------------\n\nTITLE: Installing Terminfo Package with Go\nDESCRIPTION: Shows how to install the terminfo package using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xo/terminfo/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ go get -u github.com/xo/terminfo\n```\n\n----------------------------------------\n\nTITLE: Make Where Parameter Required\nDESCRIPTION: Makes the 'where' parameter required in blob filtering operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.parameters.FilterBlobsWhere\n  transform: >\n    $.required = true;\n```\n\n----------------------------------------\n\nTITLE: Issue Reference for Internal DocFX Cross-Reference Linking\nDESCRIPTION: Issue reference for implementing full cross-reference linking in the internal DocFX documentation generation system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n([#3656](https://www.github.com/googleapis/google-cloud-go/issues/3656))\n```\n\n----------------------------------------\n\nTITLE: Importing Coninput Package in Go\nDESCRIPTION: This snippet shows how to import the coninput package in a Go program. It demonstrates the basic setup required to use the library for Windows console input handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/erikgeiser/coninput/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nimport \"github.com/grafana/loki/coninput\"\n```\n\n----------------------------------------\n\nTITLE: Originally Licensed Directories\nDESCRIPTION: Identifies directories that maintain their original upstream licenses rather than adopting the project's default license.\nSOURCE: https://github.com/grafana/loki/blob/main/LICENSING.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nvendor/\n```\n\n----------------------------------------\n\nTITLE: Installing Backoff Package in Go\nDESCRIPTION: Command to install the backoff package using go get.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/jpillora/backoff/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go get -v github.com/jpillora/backoff\n```\n\n----------------------------------------\n\nTITLE: Using the Global MeterProvider in OpenTelemetry Go\nDESCRIPTION: Demonstrates how to use the global MeterProvider functionality added in v1.16.0-rc.1/v0.39.0-rc.1. Shows getting a Meter, getting the global MeterProvider, and setting a custom MeterProvider.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_15\n\nLANGUAGE: Go\nCODE:\n```\nimport \"go.opentelemetry.io/otel\"\n\n// Get a Meter from the global MeterProvider\nmeter := otel.Meter(\"my-meter\")\n\n// Get the global MeterProvider\nmp := otel.GetMeterProvider()\n\n// Set a custom global MeterProvider\notel.SetMeterProvider(customMP)\n```\n\n----------------------------------------\n\nTITLE: Hugo Front Matter Configuration for Loki Maintainers Page\nDESCRIPTION: YAML front matter block defining metadata for the Loki maintainers documentation page, including title, description, aliases and weight for page ordering.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/_index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Maintaining\ndescription: Grafana Loki Maintainers' Guide\naliases: \n- ../maintaining/\nweight: 400\n---\n```\n\n----------------------------------------\n\nTITLE: Reporting Security Vulnerabilities in Markdown\nDESCRIPTION: This snippet provides instructions for reporting security vulnerabilities privately to the project maintainers. It includes contact methods and required information for the report.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-logr/logr/SECURITY.md#2025-04-19_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Security Policy\n\nIf you have discovered a security vulnerability in this project, please report it\nprivately. **Do not disclose it as a public issue.** This gives us time to work with you\nto fix the issue before public exposure, reducing the chance that the exploit will be\nused before a patch is released.\n\nYou may submit the report in the following ways:\n\n- send an email to go-logr-security@googlegroups.com\n- send us a [private vulnerability report](https://github.com/go-logr/logr/security/advisories/new)\n\nPlease provide the following information in your report:\n\n- A description of the vulnerability and its impact\n- How to reproduce the issue\n\nWe ask that you give us 90 days to work on a fix before public exposure.\n```\n\n----------------------------------------\n\nTITLE: Paginating Blob Listings with azblob\nDESCRIPTION: Demonstrates the new pagination pattern in azblob which uses a Pager object instead of manually tracking markers. This simplifies iterating through pages of blob listings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/migrationguide.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n// new code\npager := client.NewListBlobsFlatPager(\"my-container\", nil)\nfor pager.More() {\n\tpage, err := pager.NextPage(context.TODO())\n\t// process results\n}\n```\n\n----------------------------------------\n\nTITLE: Running Benchmarks for xxHash in Go\nDESCRIPTION: This snippet shows the commands used to run benchmarks comparing the pure Go and assembly implementations of Sum64. It uses the go test command with specific flags to generate performance metrics.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/zstd/internal/xxhash/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbenchstat <(go test -tags purego -benchtime 500ms -count 15 -bench 'Sum64$')\nbenchstat <(go test -benchtime 500ms -count 15 -bench 'Sum64$')\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Pod Scraping in Prometheus\nDESCRIPTION: Example of a typical Prometheus scraping configuration for Kubernetes pods that demonstrates how job labels are assigned differently from Loki's assumptions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/lids/0005-loki-mixin-configuration-improvements.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n        - job_name: \"kubernetes-pods\" # Can actually be anything you want.\n          kubernetes_sd_configs:\n            - role: pod\n          relabel_configs:\n            # Cluster label is \"required\" by kubernetes-mixin dashboards\n            - target_label: cluster\n              replacement: '${cluster_label}'\n            ...\n```\n\n----------------------------------------\n\nTITLE: Container Startup Script for Grafana with Symlink Creation\nDESCRIPTION: A bash script used in Grafana container startup that waits for the plugins-pause process to be running and then creates a symbolic link from the hgrun binary in the hgrun-pause container to the /bin directory in the current container.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nwhile [ \"$(pidof plugins-pause)\" = \"\" ]; do sleep 0.5; done;\nln --force -s /proc/$(pidof hgrun-pause)/root/bin/hgrun /bin/hgrun;\n```\n\n----------------------------------------\n\nTITLE: Installing INI Package for Go\nDESCRIPTION: This command installs the INI package for Go using the go get command. It retrieves the package from the specified URL.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-ini/ini/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n$ go get gopkg.in/ini.v1\n```\n\n----------------------------------------\n\nTITLE: Creating Swift Object Storage Secret for Loki in Kubernetes\nDESCRIPTION: Creates a Kubernetes secret containing Swift authentication credentials needed for Loki to access Swift object storage. This includes basic authentication parameters like auth_url, username, domain information, and container name.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/lokistack/object_storage.md#2025-04-19_snippet_14\n\nLANGUAGE: console\nCODE:\n```\nkubectl create secret generic lokistack-dev-swift \\\n  --from-literal=auth_url=\"<SWIFT_AUTH_URL>\" \\\n  --from-literal=username=\"<SWIFT_USERNAMEClaim>\" \\\n  --from-literal=user_domain_name=\"<SWIFT_USER_DOMAIN_NAME>\" \\\n  --from-literal=user_domain_id=\"<SWIFT_USER_DOMAIN_ID>\" \\\n  --from-literal=user_id=\"<SWIFT_USER_ID>\" \\\n  --from-literal=password=\"<SWIFT_PASSWORD>\" \\\n  --from-literal=domain_id=\"<SWIFT_DOMAIN_ID>\" \\\n  --from-literal=domain_name=\"<SWIFT_DOMAIN_NAME>\" \\\n  --from-literal=container_name=\"<SWIFT_CONTAINER_NAME>\" \\\n```\n\n----------------------------------------\n\nTITLE: Specifying CodeSpell Package Requirement\nDESCRIPTION: This line specifies the requirement for the CodeSpell package with a fixed version of 2.4.1. CodeSpell is a tool that helps identify and fix common misspellings in code and documentation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncodespell==2.4.1\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for DialogFlow/CX RunTestCase HTTP Template\nDESCRIPTION: Commit reference for a bug fix related to DialogFlow/CX RunTestCase HTTP template enabling PHP REST client library generation and adding support for transition route group coverage for Test Cases.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n([613ced7](https://www.github.com/googleapis/google-cloud-go/commit/613ced702bbc82a154a4d3641b483f71c7cd1af4))\n```\n\n----------------------------------------\n\nTITLE: Version 1.26.3 Bugfix Updates - Markdown\nDESCRIPTION: Lists bugfixes for version 1.26.3 including fixes for GNMI inputs, Intel PMU, socket listener, and various output plugins.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n### Bugfixes\n\n- [#13149] `inputs.gnmi` Create selfstat to track connection state\n- [#13139] `inputs.intel_pmu` Fix handling of the json perfmon format\n- [#13056] `inputs.socket_listener` Fix loss of connection tracking\n- [#13300] `inputs.socket_listener` Fix race in tests\n- [#13286] `inputs.vsphere` Specify the correct option for disconnected_servers_behavior\n- [#13239] `outputs.graphite` Fix logic to reconnect with servers\n- [#13169] `outputs.prometheus_client` Fix export_timestamp for v1 metric type\n- [#13168] `outputs.stackdriver` Allow for custom metric type prefix\n```\n\n----------------------------------------\n\nTITLE: Creating Monitoring Namespace\nDESCRIPTION: Kubernetes command to create a dedicated namespace for the monitoring stack.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/meta-monitoring/deploy.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace monitoring\n```\n\n----------------------------------------\n\nTITLE: S3 Configuration without Credentials\nDESCRIPTION: Example of configuring S3 storage without hardcoded credentials, suitable for EC2 instance roles.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/configuration-examples.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstorage_config:\n  aws:\n    s3: s3://region/bucket_name\n```\n\n----------------------------------------\n\nTITLE: Markdown badge link to OpenTelemetry Baggage package documentation\nDESCRIPTION: A markdown code snippet that creates a badge linking to the OpenTelemetry Baggage package documentation on pkg.go.dev. This provides users with a direct link to the Go package documentation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/baggage/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/baggage)](https://pkg.go.dev/go.opentelemetry.io/otel/baggage)\n```\n\n----------------------------------------\n\nTITLE: Installing Progressbar Package in Go\nDESCRIPTION: Command to install the progressbar package using Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/schollz/progressbar/v3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/schollz/progressbar/v3\n```\n\n----------------------------------------\n\nTITLE: Update CORS Acronym Casing\nDESCRIPTION: Changes 'Cors' to 'CORS' for consistent acronym casing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n  - from: source-file-go\n    where: $\n    transform: >\n      return $.\n        replace(/Cors/g, \"CORS\");\n```\n\n----------------------------------------\n\nTITLE: Importing the intmap Package in Go\nDESCRIPTION: Shows how to import the intmap package in a Go program. This is the first step to using the fast integer key hashmap.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/kamstrup/intmap/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/kamstrup/intmap\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Batch Processor in YAML\nDESCRIPTION: YAML configuration for the OpenTelemetry batch processor. This processor will accept telemetry data from other components and place them into batches to improve compression and reduce network requests.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/otel/otel-collector-getting-started.md#2025-04-19_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Processors\nprocessors:\n  batch:\n```\n\n----------------------------------------\n\nTITLE: Module Import Statement for Go-Restful v3\nDESCRIPTION: Example of importing the v3 version of go-restful module which is required for module consumers.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/emicklei/go-restful/v3/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/emicklei/go-restful/v3\n```\n\n----------------------------------------\n\nTITLE: Formatting Log Values with go-hclog in Go\nDESCRIPTION: Illustrates how to use hclog.Fmt() for formatting values in log messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-hclog/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ntotalBandwidth := 200\nappLogger.Info(\"total bandwidth exceeded\", \"bandwidth\", hclog.Fmt(\"%d GB/s\", totalBandwidth))\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Exporter Namespace in OpenTelemetry Go\nDESCRIPTION: Shows how to use the new WithNamespace option to prefix metrics with a namespace when using the Prometheus exporter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_16\n\nLANGUAGE: Go\nCODE:\n```\nimport \"go.opentelemetry.io/otel/exporters/prometheus\"\n\nexporter, err := prometheus.New(\n  prometheus.WithNamespace(\"my_namespace\")\n)\n```\n\n----------------------------------------\n\nTITLE: Issue Reference Markdown Link\nDESCRIPTION: A markdown link referencing a GitHub issue with associated commit hash\nSOURCE: https://github.com/grafana/loki/blob/main/operator/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#14033](https://github.com/grafana/loki/issues/14033)) ([b7eecc7](https://github.com/grafana/loki/commit/b7eecc7a693e96f4d0fe0dcd7583ecdc4dd7283f))\n```\n\n----------------------------------------\n\nTITLE: Initializing Bolt Database in Android with Java\nDESCRIPTION: This Java code initializes a Bolt database in an Android application. It determines the appropriate storage location based on the Android version to prevent automatic cloud backup of the database file.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_26\n\nLANGUAGE: java\nCODE:\n```\nString path;\nif (android.os.Build.VERSION.SDK_INT >=android.os.Build.VERSION_CODES.LOLLIPOP){\n    path = getNoBackupFilesDir().getAbsolutePath();\n} else{\n    path = getFilesDir().getAbsolutePath();\n}\nBoltmobiledemo.BoltDB boltDB = Boltmobiledemo.NewBoltDB(path)\n```\n\n----------------------------------------\n\nTITLE: Container Runtime Error Logs\nDESCRIPTION: Container lifecycle management logs showing cleanup operations after shim disconnection and exec process deletion failures. Includes AppArmor denial messages for ptrace operations.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_20\n\nLANGUAGE: log\nCODE:\n```\ntime=\"2024-05-07T11:59:38.484586527Z\" level=error msg=\"Failed to delete exec process \\\"d9e0a1867ce73695ad859f2b0a76fe8f5053db8a5e49142d747e53a445729bd4\\\" for container \\\"6ad3e55547f2192f865518e75009243418b177091c1c781236e2ac8f0324b408\\\"\" error=\"ttrpc: closed: unknown\"\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackStorageStatus Struct in Go\nDESCRIPTION: LokiStackStorageStatus defines the observed state of the Loki storage configuration. It includes fields for schemas and credential mode.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackStorageStatus struct {\n    Schemas        []ObjectStorageSchema `json:\"schemas,omitempty\"`\n    CredentialMode CredentialMode        `json:\"credentialMode,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Felix IPTables Chain Processing Debug Logs\nDESCRIPTION: Debug log output from Felix showing the parsing of IPTables NAT chains for Kubernetes services and endpoints. Shows line-by-line processing with chain name detection and IPv4 processing.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/calico.txt#2025-04-19_snippet_0\n\nLANGUAGE: log\nCODE:\n```\n2024-05-08 15:23:58.733 [DEBUG][216945] felix/table.go 851: Parsing line ipVersion=0x4 line=\":KUBE-SEP-IIMYVCRPQLPIWIWO - [0:0]\" table=\"nat\"\n2024-05-08 15:23:58.733 [DEBUG][216945] felix/table.go 870: Found forward-reference chainName=\"KUBE-SVC-AG5Y2FRMGRWC2ZXO\" ipVersion=0x4 line=\":KUBE-SVC-AG5Y2FRMGRWC2ZXO - [0:0]\" table=\"nat\"\n```\n\n----------------------------------------\n\nTITLE: LogQL Parentheses Usage\nDESCRIPTION: Example showing how to use parentheses to control logical operator precedence\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/log_queries/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: logql\nCODE:\n```\n| duration >= 20ms or (method=\"GET\" and size <= 20KB)\n```\n\n----------------------------------------\n\nTITLE: Adding a String to Bloom Filter in Go\nDESCRIPTION: This snippet demonstrates how to create a new Bloom filter and add a string item to it. It initializes a filter with a capacity of 20 times the expected number of items and 5 hash functions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/willf/bloom/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nn := uint(1000)\nfilter := bloom.New(20*n, 5) // load of 20, 5 keys\nfilter.Add([]byte(\"Love\"))\n```\n\n----------------------------------------\n\nTITLE: AppArmor Security Events\nDESCRIPTION: Security audit logs showing AppArmor DENIED operations for ptrace requests, including operation details and process information.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_32\n\nLANGUAGE: log\nCODE:\n```\naudit: type=1400 audit(1715083176.899:72): apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36386 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\nAVC apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36386 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\n```\n\n----------------------------------------\n\nTITLE: Installing Colorstring via Go Get\nDESCRIPTION: Command to install the colorstring library using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/colorstring/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ go get github.com/mitchellh/colorstring\n```\n\n----------------------------------------\n\nTITLE: Handling PROXY Protocol Connections in Grafana Loki HTTP Handler (Go)\nDESCRIPTION: This snippet shows how to handle incoming connections with PROXY protocol enabled. It demonstrates accessing the original source address using Request.RemoteAddr in an HTTP handler function.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/dskit/server/PROXYPROTOCOL.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nserver.HTTP.HandleFunc(\"/your-endpoint\", func(w http.ResponseWriter, r *http.Request) {\n    ip, _, err := net.SplitHostPort(r.RemoteAddr)\n    // ...\n})\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Recommendation Engine API Generation\nDESCRIPTION: Commit reference for the implementation of generating Recommendation Engine API v1beta1 client libraries.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n([8f4e130](https://www.github.com/googleapis/google-cloud-go/commit/8f4e13009444d88a5a56144129f055623a2205ac))\n```\n\n----------------------------------------\n\nTITLE: Activating Default Field Requirements in GoValidator\nDESCRIPTION: Code snippet showing how to activate the behavior to require all fields have a validation tag by default in GoValidator.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/asaskevich/govalidator/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/asaskevich/govalidator\"\n\nfunc init() {\n  govalidator.SetFieldsRequiredByDefault(true)\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Google Auth Library for Go via go get\nDESCRIPTION: Command to install the latest version of the Google Auth Library for Go using the go get package manager\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/auth/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get cloud.google.com/go/auth@latest\n```\n\n----------------------------------------\n\nTITLE: Generating Changelog Entries with Git Log\nDESCRIPTION: A Git command to generate a formatted list of commits for inclusion in the changelog. The command outputs each commit with its message and author name.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/RELEASE.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit log --pretty=format:'- %s -- %an'\n```\n\n----------------------------------------\n\nTITLE: Connecting to Delve Debugger for Bubble Tea (Bash)\nDESCRIPTION: This snippet shows how to connect to the Delve debugger for a Bubble Tea application using the command line. It specifies the host and port to connect to.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ dlv connect 127.0.0.1:43000\n```\n\n----------------------------------------\n\nTITLE: Version History Documentation in Markdown\nDESCRIPTION: Detailed changelog entries formatted in Markdown listing version changes, new features, improvements and bug fixes for the Sarama Kafka client library\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## Version 1.24.0 (2019-10-09)\n\nNew Features:\n- Add sticky partition assignor\n  ([1416](https://github.com/IBM/sarama/pull/1416)).\n- Switch from cgo zstd package to pure Go implementation\n  ([1477](https://github.com/IBM/sarama/pull/1477)).\n\nImprovements:\n- Allow creating ClusterAdmin from client\n  ([1415](https://github.com/IBM/sarama/pull/1415)).\n[...additional content omitted for brevity...]\n```\n\n----------------------------------------\n\nTITLE: Adding User-Agent Header in HTTP Response Input\nDESCRIPTION: Adds a User-Agent header to requests in the HTTP response input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_11\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.http_response\" Add User-Agent header\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Role Creation Commands\nDESCRIPTION: Shell commands for creating an AWS IAM role and attaching S3 access policy.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/short_lived_tokens_authentication.md#2025-04-19_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\naws iam create-role \\\n  --role-name \"my-lokistack-s3-access\" \\\n  --assume-role-policy-document file:///tmp/trust.json \\\n  --query Role.Arn \\\n  --output text\n```\n\nLANGUAGE: shell\nCODE:\n```\naws iam attach-role-policy \\\n  --role-name \"my-lokistack-s3-access\" \\\n  --policy-arn \"arn:aws:iam::aws:policy/AmazonS3FullAccess\"\n```\n\n----------------------------------------\n\nTITLE: Post-PR #79 Benchmark Results (Ryzen 7 5800X)\nDESCRIPTION: Additional benchmark results on AMD Ryzen 7 5800X showing further performance improvements due to more modern CPU architecture\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/swag/BENCHMARK.md#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\ngoos: linux\ngoarch: amd64\npkg: github.com/go-openapi/swag\ncpu: AMD Ryzen 7 5800X 8-Core Processor             \nBenchmarkToXXXName/ToGoName-16         \t18527378\t      1972 ns/op\t      42 B/op\t       5 allocs/op\nBenchmarkToXXXName/ToVarName-16        \t15552692\t      2093 ns/op\t      62 B/op\t       7 allocs/op\nBenchmarkToXXXName/ToFileName-16       \t32161176\t      1117 ns/op\t     147 B/op\t       7 allocs/op\nBenchmarkToXXXName/ToCommandName-16    \t32256634\t      1137 ns/op\t     147 B/op\t       7 allocs/op\nBenchmarkToXXXName/ToHumanNameLower-16 \t18599661\t      1946 ns/op\t      92 B/op\t       6 allocs/op\nBenchmarkToXXXName/ToHumanNameTitle-16 \t17581353\t      2054 ns/op\t     105 B/op\t       6 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Filtering High-Volume Log Streams in LogQL\nDESCRIPTION: Uses a comparison operator to filter streams that logged at least 10 lines in the last minute in LogQL.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: logql\nCODE:\n```\ncount_over_time({foo=\"bar\"}[1m]) > 10\n```\n\n----------------------------------------\n\nTITLE: Initializing Hugo Frontmatter for Grafana Loki Documentation\nDESCRIPTION: This YAML snippet defines the frontmatter for a new Hugo content page in the Grafana Loki documentation. It includes a dynamically generated title, creation date, and draft status.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/website/archetypes/default.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"{{ replace .Name \"-\" \" \" | title }}\"\ndate: {{ .Date }}\ndraft: true\n---\n```\n\n----------------------------------------\n\nTITLE: Viewing Storage Size Calculator Logs\nDESCRIPTION: Command to view logs from the storage size calculator pod to see the recommended t-shirt size for the Loki cluster.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n openshift-logging logs <POD_NAME>\n```\n\n----------------------------------------\n\nTITLE: Operator Release Commit Message Format\nDESCRIPTION: Example of a specific commit message format required for preparing a community release. This format is checked by workflows to ensure proper release preparation.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/release.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nchore(operator): prepare community release v$VERSION\n```\n\n----------------------------------------\n\nTITLE: Linting Loki UI Code in Bash\nDESCRIPTION: This command runs the linter to check the code quality of the Loki UI project.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/ui/frontend/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Container Start Failure Logs\nDESCRIPTION: Log entries showing container startup failures and sync errors in a Kubernetes cluster. Issues include image pull failures, AppArmor denials, and missing secrets.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_6\n\nLANGUAGE: log\nCODE:\n```\nE0507 11:59:40.363392    4601 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/hosted-grafana/hosted-grafana-pro:10.1.0-ephemeral-oss-80141-12952-1\\\\\\\"\\\"\" pod=\"hosted-grafana/ephemeral1511182180141joshhun-grafana-7dbb6d4777-rzgds\" podUID=\"c644591b-d4d7-4bef-913f-00b9f96539d4\"\nAVC apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36597 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\n```\n\n----------------------------------------\n\nTITLE: Pattern Matching Example in Go\nDESCRIPTION: Example demonstrating the new pattern matching behavior in Doublestar v4 where directory matching has changed.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/bmatcuk/doublestar/v4/UPGRADING.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nMatch(\"path/to/a/**\", \"path/to/a\")\n```\n\n----------------------------------------\n\nTITLE: Installing the uniseg package using Go\nDESCRIPTION: Command to install the uniseg package using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/rivo/uniseg/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/rivo/uniseg\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhooks in Telegraf (New Format)\nDESCRIPTION: The new configuration format for webhooks in Telegraf that replaces the github_webhooks plugin. It demonstrates how to configure both the service address and the GitHub-specific path.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG-1.13.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# A Webhooks Event collector\n[[inputs.webhooks]]\n  ## Address and port to host Webhook listener on\n  service_address = \":1618\"\n\n  [inputs.webhooks.github]\n    path = \"/\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Loki Logstash Plugin\nDESCRIPTION: Command to run the test suite for the Loki Logstash output plugin using RSpec.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nruby -S bundle exec rspec\n```\n\n----------------------------------------\n\nTITLE: Installing xstrings Package with Go Get\nDESCRIPTION: Command to install the xstrings package using Go's package manager\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/huandu/xstrings/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/huandu/xstrings\n```\n\n----------------------------------------\n\nTITLE: Parsing Grafana Loki HTTP Debug Log Entry\nDESCRIPTION: Each log entry follows a consistent format, including timestamp, caller, log level, trace ID, organization ID, HTTP method, path, status code, and request duration. This structure can be used to parse and analyze the log data for monitoring and troubleshooting purposes.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/ingester-logfmt.txt#2025-04-19_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nts=2024-04-17T09:52:46.364063374Z caller=http.go:194 level=debug traceID=1ee220e024eb5b0a orgID=12372 msg=\"POST /ingester.v1.IngesterService/Push (200) 370.137µs\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Interface in Go Swift Client\nDESCRIPTION: Definition of an error interface that extends the standard error interface with additional methods for timeout and temporary error detection.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/v2/notes.txt#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype Error interface {\n    error\n    Timeout() bool   // Is the error a timeout?\n    Temporary() bool // Is the error temporary?\n}\n```\n\n----------------------------------------\n\nTITLE: Investigating Pod Startup Failures in Kubernetes\nDESCRIPTION: Error logs from kubelet showing failed pod syncing operations. The pods are failing to start due to image pull backoff and crash loop backoff issues, indicating problems with container image availability or application stability.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_38\n\nLANGUAGE: plaintext\nCODE:\n```\nE0507 11:59:33.042338    4589 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff: \\\"Back-off pulling image \\\\\\\"us.gcr.io/hosted-grafana/hosted-grafana-pro:10.0.2\\\\\\\"\\\"\" pod=\"hosted-grafana/grafana10-grafana-6c9c7c5bc4-4f2gp\" podUID=\"df8fc793-cd73-4984-8c12-9c4d527ff219\"\n```\n\n----------------------------------------\n\nTITLE: Using Git Command Line Option for DCO Sign-off\nDESCRIPTION: Demonstrates how to use the Git -s flag to automatically append the Developer Certificate of Origin (DCO) sign-off to commit messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git commit -s -m 'This is my commit message'\n```\n\n----------------------------------------\n\nTITLE: Creating File System Test Script\nDESCRIPTION: Example script showing how to create and watch a file with expected output format. Demonstrates basic test script structure with file creation and event watching.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fsnotify/fsnotify/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Create a new empty file with some data.\nwatch /\necho data >/file\n\nOutput:\n    create  /file\n    write   /file\n```\n\n----------------------------------------\n\nTITLE: Creating LokiStack Gateway Bearer Token\nDESCRIPTION: Console commands to create a secret containing bearer token for LokiStack Gateway authentication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nkubectl -n openshift-logging create secret generic lokistack-gateway-bearer-token \\\n  --from-literal=token=\"$(kubectl -n openshift-logging get secret logcollector-token --template='{{.data.token | base64decode}}')\"  \\\n  --from-literal=ca-bundle.crt=\"$(kubectl -n openshift-logging get configmap openshift-service-ca.crt --template='{{index .data \"service-ca.crt}}}')\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Status Update Log\nDESCRIPTION: This log entry shows a pod status update for a kube-proxy pod. It indicates that the pod's status has been updated to 'Running', which is part of the normal Kubernetes pod lifecycle management.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_43\n\nLANGUAGE: plaintext\nCODE:\n```\nI0507 11:59:32.710370    4646 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-dev-us-central-0-spot-n2s8-0-1dd3-f81338c4-7chh\" status=\"Running\"\n```\n\n----------------------------------------\n\nTITLE: Setting Executable Permission on Prometheus Secret Script\nDESCRIPTION: Troubleshooting command to fix permission denied errors by making the prometheus secret deployment script executable.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nchmod +x hack/deploy-prometheus-secret.sh\n```\n\n----------------------------------------\n\nTITLE: Listing Log Deletion Requests in Loki API\nDESCRIPTION: GET endpoint to list existing delete requests for the authenticated tenant. Returns both processed and unprocessed deletion requests.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\nGET /loki/api/v1/delete\n```\n\n----------------------------------------\n\nTITLE: Adding Unmarshal Options for Streams in Go\nDESCRIPTION: Provides unmarshal options for streams in the gax-go library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* provide unmarshal options for streams ([#343](https://github.com/googleapis/gax-go/issues/343)) ([ddf9a90](https://github.com/googleapis/gax-go/commit/ddf9a90bf180295d49875e15cb80b2136a49dbaf))\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Target in Promtail YAML\nDESCRIPTION: YAML configuration for defining an HTTP target in Promtail's scrape_config. This allows Promtail to expose an endpoint for receiving log traffic.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/2020-02-Promtail-Push-API.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nhttp:\n  # Defines the base URL for the push path, adding a prefix to the\n  # exposed endpoint. The final endpoint path is\n  # <base_url>loki/api/v1/push. If omitted, defaults to /.\n  #\n  # Multiple http targets with the same base_url must not exist.\n  base_url: /\n\n  # Map of labels to add to every log line passed through to the target.\n  labels: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Image for Migration\nDESCRIPTION: YAML configuration to specify the Loki image repository and tag for enabling the backend target functionality.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-to-three-scalable-targets/index.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nloki:\n  image:\n    repository: \"grafana/loki\"\n    tag: \"main-f5fbfab-amd64\"\n```\n\n----------------------------------------\n\nTITLE: Hugo Section Shortcode Implementation\nDESCRIPTION: Hugo shortcode for sectioning content in the maintainers documentation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< section >}}\n```\n\n----------------------------------------\n\nTITLE: Compatibility Testing Suite Configuration in CI\nDESCRIPTION: This code snippet lists the operating systems, Go versions, and architectures that are tested in the compatibility testing suite implemented in the CI system.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_37\n\nLANGUAGE: markdown\nCODE:\n```\n| OS      | Go Version | Architecture |\n| ------- | ---------- | ------------ |\n| Ubuntu  | 1.15       | amd64        |\n| Ubuntu  | 1.14       | amd64        |\n| Ubuntu  | 1.15       | 386          |\n| Ubuntu  | 1.14       | 386          |\n| MacOS   | 1.15       | amd64        |\n| MacOS   | 1.14       | amd64        |\n| Windows | 1.15       | amd64        |\n| Windows | 1.14       | amd64        |\n| Windows | 1.15       | 386          |\n| Windows | 1.14       | 386          |\n```\n\n----------------------------------------\n\nTITLE: Version Updates and Changes in Markdown\nDESCRIPTION: Changelog entries for Google Cloud Go library updates, including version numbers, links to issues/PRs, and commit hashes. Documents features, bug fixes and improvements across multiple releases.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **all:** auto-regenerate gapics , refs [#3514](https://www.github.com/googleapis/google-cloud-go/issues/3514) [#3501](https://www.github.com/googleapis/google-cloud-go/issues/3501) [#3497](https://www.github.com/googleapis/google-cloud-go/issues/3497) [#3455](https://www.github.com/googleapis/google-cloud-go/issues/3455) [#3448](https://www.github.com/googleapis/google-cloud-go/issues/3448)\n* **channel:** start generating apiv1 ([#3517](https://www.github.com/googleapis/google-cloud-go/issues/3517)) ([2cf3b3c](https://www.github.com/googleapis/google-cloud-go/commit/2cf3b3cf7d99f2efd6868a710fad9e935fc87965))\n```\n\n----------------------------------------\n\nTITLE: Using go-localereader for CodePage Decoding in Go\nDESCRIPTION: This snippet demonstrates how to use the go-localereader library to decode Windows CodePage encoded text (SJIS in this example) by wrapping a bytes.Reader in an AcpReader and copying the decoded output to stdout.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-localereader/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nio.Copy(os.Stdout, localereader.NewAcpReader(bytes.Reader(bytesSjis)))\n```\n\n----------------------------------------\n\nTITLE: Creating Signed Git Tag\nDESCRIPTION: Command to create a GPG-signed git tag for the release version\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/ncw/swift/v2/RELEASE.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit tag -s v2.0.x -m \"Release v2.0.x\"\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Client Libraries for Go\nDESCRIPTION: Command to install a specific Google Cloud package using go get. Replace 'firestore' with the desired package name.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get cloud.google.com/go/firestore@latest # Replace firestore with the package you want to use.\n```\n\n----------------------------------------\n\nTITLE: Visualizing Concurrent Writes Over Threshold in ASCII\nDESCRIPTION: ASCII diagram showing how concurrent writes interact with sync markers across a threshold boundary. Illustrates potential synchronization challenges when multiple writes occur simultaneously.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/design-documents/2021-01-Ordering-Constraint-Removal.md#2025-04-19_snippet_4\n\nLANGUAGE: ascii-art\nCODE:\n```\nFigure 5\n\n       Concurrent Writes over threshold\n                   ^ ^\n                   | |\n                   | |\n-----------------|-----------------\n                 |\n                 v\n             Sync Marker\n```\n\n----------------------------------------\n\nTITLE: Updating Import Path for JWT Library v4.0.0 in Go\nDESCRIPTION: Shows the new import path for version 4.0.0 of the golang-jwt/jwt library, which is backwards compatible with v3.x.y and the original dgrijalva/jwt-go library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n\"github.com/golang-jwt/jwt/v4\"\n```\n\n----------------------------------------\n\nTITLE: Traditional Error Handling in Go\nDESCRIPTION: Demonstrates the conventional error handling pattern in Go, which can lead to error reports lacking context or debugging information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/pkg/errors/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nif err != nil {\n        return err\n}\n```\n\n----------------------------------------\n\nTITLE: Installing JWT v4 Library Using Go Modules\nDESCRIPTION: Commands to install the new JWT v4 library and update go.mod dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/golang-jwt/jwt/v4/MIGRATION_GUIDE.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/golang-jwt/jwt/v4\ngo mod tidy\n```\n\n----------------------------------------\n\nTITLE: Container Error Messages\nDESCRIPTION: Collection of error messages from container runtime showing various failure states including CrashLoopBackOff and ImagePullBackOff conditions.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\nE0507 11:59:28.939546    3659 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"cortex-gw\\\" with CrashLoopBackOff\"\nE0507 11:59:28.925475    4733 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"pdc\\\" with ErrImageNeverPull\"\nE0507 11:59:28.889010    4597 pod_workers.go:1300] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"grafana\\\" with ImagePullBackOff\"\n```\n\n----------------------------------------\n\nTITLE: ContainerStatus Failure Error Log in Kubernetes Runtime\nDESCRIPTION: Error log entry showing a failure when attempting to check container status through the Kubernetes runtime service. The error indicates the container with the specified ID could not be found.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_50\n\nLANGUAGE: log\nCODE:\n```\nE0507 11:59:28.638532    4601 remote_runtime.go:432] \"ContainerStatus from runtime service failed\" err=\"rpc error: code = NotFound desc = an error occurred when try to find container \\\"c50338fdb9905376f6d1db35c61599f712f6d3a4b9604b6dc64bf62aea9b3b13\\\": not found\" containerID=\"c50338fdb9905376f6d1db35c61599f712f6d3a4b9604b6dc64bf62aea9b3b13\"\n```\n\n----------------------------------------\n\nTITLE: Promtail Deprecation Hugo Admonition\nDESCRIPTION: Hugo shortcode implementation of a caution admonition containing the deprecation notice with LTS and EOL dates, along with a migration resource link.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/promtail-deprecation.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< admonition type=\"caution\" >}}\nPromtail has been deprecated and is in Long-Term Support (LTS) through February 28, 2026. Promtail will reach an End-of-Life (EOL) on March 2, 2026. You can find migration resources [here](https://grafana.com/docs/alloy/latest/set-up/migrate/from-promtail/).\n{{< /admonition >}}\n```\n\n----------------------------------------\n\nTITLE: Dependency Update - compress module\nDESCRIPTION: Update of github.com/klauspost/compress module to version v1.15.9\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/klauspost/compress v1.15.9\n```\n\n----------------------------------------\n\nTITLE: Defining New Constants in Go for Azure Network Management SDK\nDESCRIPTION: This snippet shows the declaration of new constants for various Azure networking concepts, including ApplicationGateway, RouteMap, and Geo-related constants.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nconst (\n    ApplicationGatewayWafRuleStateTypesEnabled = ...\n    RouteMapMatchConditionNotEquals = ...\n    ActionTypeBlock = ...\n    // ... (other constants)\n    ApplicationGatewayRuleSetStatusOptionsPreview = ...\n    RouteMapActionTypeDrop = ...\n    ApplicationGatewayTierTypesStandard = ...\n    NextStepTerminate = ...\n    RouteMapActionTypeAdd = ...\n)\n```\n\n----------------------------------------\n\nTITLE: Developer Certificate of Origin Text for Docker Project Contributions\nDESCRIPTION: The full text of the Developer Certificate of Origin (DCO) version 1.1 that contributors must agree to when signing their commits. This document outlines the legal framework for open source contributions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opencontainers/go-digest/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\n----------------------------------------\n\nTITLE: Installing OpenTracing for gRPC in Go\nDESCRIPTION: Command to install the OpenTracing gRPC package using Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/opentracing-contrib/go-grpc/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get github.com/opentracing-contrib/go-grpc\n```\n\n----------------------------------------\n\nTITLE: Implementing RPC Server with Codec in Go\nDESCRIPTION: Example of setting up an RPC server using the codec library for custom serialization.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-msgpack/codec/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ngo func() {\n    for {\n        conn, err := listener.Accept()\n        rpcCodec := codec.GoRpc.ServerCodec(conn, h)\n        //OR rpcCodec := codec.MsgpackSpecRpc.ServerCodec(conn, h)\n        rpc.ServeCodec(rpcCodec)\n    }\n}()\n```\n\n----------------------------------------\n\nTITLE: Markdown Code of Conduct\nDESCRIPTION: Standard Contributor Covenant Code of Conduct markdown document detailing community guidelines and expectations for participation in the project\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/CODE_OF_CONDUCT.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at open-source@twilio.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n```\n\n----------------------------------------\n\nTITLE: Parsing Markdown Release Notes\nDESCRIPTION: Release notes and changelog entries formatted in Markdown documenting version history, bug fixes, enhancements and contributor acknowledgments for the Zap logging library.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.16.0 (1 Sep 2020)\n\nBugfixes:\n* [#828][]: Fix missing newline in IncreaseLevel error messages.\n* [#835][]: Fix panic in JSON encoder when encoding times or durations\n  without specifying a time or duration encoder.\n* [#843][]: Honor CallerSkip when taking stack traces.\n* [#862][]: Fix the default file permissions to use `0666` and rely on the umask instead.\n* [#854][]: Encode `<nil>` for nil `Stringer` instead of a panic error log.\n\nEnhancements:\n* [#629][]: Added `zapcore.TimeEncoderOfLayout` to easily create time encoders\n  for custom layouts.\n* [#697][]: Added support for a configurable delimiter in the console encoder.\n* [#852][]: Optimize console encoder by pooling the underlying JSON encoder.\n* [#844][]: Add ability to include the calling function as part of logs.\n* [#843][]: Add `StackSkip` for including truncated stacks as a field.\n* [#861][]: Add options to customize Fatal behaviour for better testability.\n```\n\n----------------------------------------\n\nTITLE: Kafka Log Cleanup Status Messages\nDESCRIPTION: Log entries showing deletion of Kafka producer state snapshots, log segments, and associated index files from the /bitnami/kafka/data/ingest-2/ directory. Each entry includes timestamp, file path, and operation status.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_8\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,551] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-2/00000000000181992094.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,494] INFO Deleted time index /bitnami/kafka/data/ingest-2/00000000000181992094.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,493] INFO Deleted offset index /bitnami/kafka/data/ingest-2/00000000000181992094.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,493] INFO Deleted log /bitnami/kafka/data/ingest-2/00000000000181992094.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Profiling Benchmarks Comparison\nDESCRIPTION: Benchmark results comparing three different profiling approaches: standard Go profiler (OG), FastDelta, and godeltaprof. Shows execution times and profile sizes for each method.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/grafana/pyroscope-go/godeltaprof/README.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBenchmarkOG\n      63         181862189 ns/op\nprofile sizes: [209117 209107 209077 209089 209095 209076 209088 209082 209090 209092]\n\nBenchmarkFastDelta\n      43         273936764 ns/op\nprofile sizes: [169300 10815 8969 9511 9752 9376 9545 8959 10357 9536]\n\nBenchmarkGodeltaprof\n     366          31148264 ns/op\nprofile sizes: [208898 11485 9347 9967 10291 9848 10085 9285 11033 9986]\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard boilerplate notice to be included in source files when applying the Apache License 2.0. The template includes placeholders for copyright year and owner information, along with standard license terms and reference to the full license text.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/credentials/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Prefix for Index in period_config (YAML)\nDESCRIPTION: Example YAML configuration showing how to set path_prefix under the index key in period_config. This replaces the removed shared-store.key-prefix configurations for TSDB and BoltDB shippers.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nperiod_config:\n  index:\n    path_prefix: \"index/\"\n    period: 24h\n```\n\n----------------------------------------\n\nTITLE: Metric SDK Exemplars Package Badge\nDESCRIPTION: Markdown code displaying the PkgGoDev badge and link for the OpenTelemetry Metric SDK Exemplars package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/exemplar/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/metric/exemplar)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/metric/exemplar)\n```\n\n----------------------------------------\n\nTITLE: Azure Network Management Type Enumerations in Go\nDESCRIPTION: Enumeration functions that return possible values for various network configuration types and states.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nfunc PossiblePacketCaptureTargetTypeValues() []PacketCaptureTargetType\nfunc PossibleGroupConnectivityValues() []GroupConnectivity\nfunc PossibleConfigurationTypeValues() []ConfigurationType\nfunc PossibleDeleteExistingPeeringValues() []DeleteExistingPeering\nfunc PossibleDeploymentStatusValues() []DeploymentStatus\nfunc PossibleConnectivityTopologyValues() []ConnectivityTopology\nfunc PossibleSecurityConfigurationRuleDirectionValues() []SecurityConfigurationRuleDirection\n```\n\n----------------------------------------\n\nTITLE: Example for Listing Deletion Requests\nDESCRIPTION: Example cURL command to list deletion requests for a specific organization ID.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/reference/loki-http-api.md#2025-04-19_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X GET \\\n  <compactor_addr>/loki/api/v1/delete \\\n  -H 'X-Scope-OrgID: <orgid>'\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for Network Connectivity State Field Addition\nDESCRIPTION: Commit reference for adding a state field in Network Connectivity resources and minor documentation changes.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n([0b4370a](https://www.github.com/googleapis/google-cloud-go/commit/0b4370a0d397913d932dbbdc2046a958dc3b836a))\n```\n\n----------------------------------------\n\nTITLE: Converting Zstandard Dictionaries to S2 Format\nDESCRIPTION: Code example showing how to convert a Zstandard dictionary to S2 format. It includes inspecting the dictionary content, creating an S2 dictionary with optional starting sequence optimization, and using it for encoding and decoding.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/klauspost/compress/s2/README.md#2025-04-19_snippet_10\n\nLANGUAGE: Go\nCODE:\n```\n    // Decode the Zstandard dictionary.\n    insp, err := zstd.InspectDictionary(zdict)\n    if err != nil {\n        panic(err)\n    }\n\t\n    // We are only interested in the contents.\n    // Assume that files start with \"// Copyright (c) 2023\".\n    // Search for the longest match for that.\n    // This may save a few bytes.\n    dict := s2.MakeDict(insp.Content(), []byte(\"// Copyright (c) 2023\"))\n\n    // b := dict.Bytes() will provide a dictionary that can be saved\n    // and reloaded with s2.NewDict(b).\n\n    // We can now encode using this dictionary\n    encodedWithDict := dict.Encode(nil, payload)\n\n    // To decode content:\n    decoded, err := dict.Decode(nil, encodedWithDict)\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard copyright and license notice template to be included in source files. The template includes placeholders for the copyright year and owner name, along with the standard Apache 2.0 license text.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Using go-str2duration for Parsing Duration Strings in Go\nDESCRIPTION: Example Go program demonstrating how to use the go-str2duration package to parse various duration string formats and compare them with expected time.Duration values.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xhit/go-str2duration/v2/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\tstr2duration \"github.com/xhit/go-str2duration/v2\"\n\t\"os\"\n\t\"time\"\n)\n\nfunc main() {\n\n    for i, tt := range []struct {\n            dur      string\n            expected time.Duration\n        }{\n            //This times are returned with time.Duration string\n            {\"1h\", time.Duration(time.Hour)},\n            {\"1m\", time.Duration(time.Minute)},\n            {\"1s\", time.Duration(time.Second)},\n            {\"1ms\", time.Duration(time.Millisecond)},\n            {\"1µs\", time.Duration(time.Microsecond)},\n            {\"1us\", time.Duration(time.Microsecond)},\n            {\"1ns\", time.Duration(time.Nanosecond)},\n            {\"4.000000001s\", time.Duration(4*time.Second + time.Nanosecond)},\n            {\"1h0m4.000000001s\", time.Duration(time.Hour + 4*time.Second + time.Nanosecond)},\n            {\"1h1m0.01s\", time.Duration(61*time.Minute + 10*time.Millisecond)},\n            {\"1h1m0.123456789s\", time.Duration(61*time.Minute + 123456789*time.Nanosecond)},\n            {\"1.00002ms\", time.Duration(time.Millisecond + 20*time.Nanosecond)},\n            {\"1.00000002s\", time.Duration(time.Second + 20*time.Nanosecond)},\n            {\"693ns\", time.Duration(693 * time.Nanosecond)},\n\n            //This times aren't returned with time.Duration string, but are easily readable and can be parsed too!\n            {\"1ms1ns\", time.Duration(time.Millisecond + 1*time.Nanosecond)},\n            {\"1s20ns\", time.Duration(time.Second + 20*time.Nanosecond)},\n            {\"60h8ms\", time.Duration(60*time.Hour + 8*time.Millisecond)},\n            {\"96h63s\", time.Duration(96*time.Hour + 63*time.Second)},\n\n            //And works with days and weeks!\n            {\"2d3s96ns\", time.Duration(48*time.Hour + 3*time.Second + 96*time.Nanosecond)},\n            {\"1w2d3s96ns\", time.Duration(168*time.Hour + 48*time.Hour + 3*time.Second + 96*time.Nanosecond)},\n\n            {\"10s1us693ns\", time.Duration(10*time.Second + time.Microsecond + 693*time.Nanosecond)},\n\n        } {\n            durationFromString, err := str2duration.ParseDuration(tt.dur)\n            if err != nil {\n                panic(err)\n\n            //Check if expected time is the time returned by the parser\n            } else if tt.expected != durationFromString {\n                 fmt.Println(fmt.Sprintf(\"index %d -> in: %s returned: %s\\tnot equal to %s\", i, tt.dur, durationFromString.String(), tt.expected.String()))\n            }else{\n                fmt.Println(fmt.Sprintf(\"index %d -> in: %s parsed succesfully\", i, tt.dur))\n            }\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Vagrant Testing Command\nDESCRIPTION: Command to run the test suite on a Linux vagrant box for cross-platform testing.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/gopkg.in/fsnotify/fsnotify.v1/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nvagrant ssh linux -c 'cd fsnotify/fsnotify; go test'\n```\n\n----------------------------------------\n\nTITLE: Installing MaxMind DB Reader for Go\nDESCRIPTION: Command to install the MaxMind DB reader package using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/oschwald/maxminddb-golang/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/oschwald/maxminddb-golang\n```\n\n----------------------------------------\n\nTITLE: Kafka Log Segment Deletion Operations\nDESCRIPTION: Log entries showing sequential deletion of Kafka log segment files and their associated index files. The deletions are performed for segments in the ingest-2 topic directory, with segment IDs ranging from 181933616 to 181987270.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_9\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,493] INFO Deleted time index /bitnami/kafka/data/ingest-2/00000000000181987270.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,493] INFO Deleted offset index /bitnami/kafka/data/ingest-2/00000000000181987270.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,493] INFO Deleted log /bitnami/kafka/data/ingest-2/00000000000181987270.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Adding Key Support in MockFetchResponse for Kafka Mocks in Go\nDESCRIPTION: Enhances the MockFetchResponse to support keys in the Kafka mocking utilities.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\nfeat(mocks): support key in MockFetchResponse.\n```\n\n----------------------------------------\n\nTITLE: Object Storage Type Changes in v0.22.0\nDESCRIPTION: Breaking changes converting several Object Storage Update fields to pointers to allow unsetting values via HTTP headers. Affects accounts, containers, and objects packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nobjectstorage/v1/accounts.UpdateOpts.ContentType\nobjectstorage/v1/accounts.UpdateOpts.DetectContentType\nobjectstorage/v1/containers.UpdateOpts.ContainerRead\nobjectstorage/v1/containers.UpdateOpts.ContainerSyncTo\nobjectstorage/v1/containers.UpdateOpts.ContainerSyncKey\nobjectstorage/v1/containers.UpdateOpts.ContainerWrite\nobjectstorage/v1/containers.UpdateOpts.ContentType\nobjectstorage/v1/containers.UpdateOpts.DetectContentType\nobjectstorage/v1/objects.UpdateOpts.ContentDisposition\nobjectstorage/v1/objects.UpdateOpts.ContentEncoding\nobjectstorage/v1/objects.UpdateOpts.ContentType\nobjectstorage/v1/objects.UpdateOpts.DeleteAfter\nobjectstorage/v1/objects.UpdateOpts.DeleteAt\nobjectstorage/v1/objects.UpdateOpts.DetectContentType\n```\n\n----------------------------------------\n\nTITLE: Defining State Machine Function Type for JSON Processing\nDESCRIPTION: Defines the core state machine function type used for JSON processing. This type represents a state function that returns the next state function to execute or an error, forming the basis of the state machine pattern used in the package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/AzureAD/microsoft-authentication-library-for-go/apps/internal/json/design.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype stateFn func() (stateFn, error)\n```\n\n----------------------------------------\n\nTITLE: Apache License Boilerplate Text\nDESCRIPTION: Standard boilerplate text to include in project files when applying the Apache License 2.0. This text should be formatted according to the file type's comment syntax and include the copyright year and owner information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/ibm-cos-sdk-go/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Detecting and Removing BOM in Go using utfbom package\nDESCRIPTION: This snippet demonstrates how to use the utfbom package to detect and remove Unicode Byte Order Marks (BOM) from input data. It shows two methods: one for just skipping the BOM, and another for skipping the BOM and detecting the encoding.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dimchansky/utfbom/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/dimchansky/utfbom\"\n)\n\nfunc main() {\n\ttrySkip([]byte(\"\\xEF\\xBB\\xBFhello\"))\n\ttrySkip([]byte(\"hello\"))\n}\n\nfunc trySkip(byteData []byte) {\n\tfmt.Println(\"Input:\", byteData)\n\n\t// just skip BOM\n\toutput, err := ioutil.ReadAll(utfbom.SkipOnly(bytes.NewReader(byteData)))\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tfmt.Println(\"ReadAll with BOM skipping\", output)\n\n\t// skip BOM and detect encoding\n\tsr, enc := utfbom.Skip(bytes.NewReader(byteData))\n\tfmt.Printf(\"Detected encoding: %s\\n\", enc)\n\toutput, err = ioutil.ReadAll(sr)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tfmt.Println(\"ReadAll with BOM detection and skipping\", output)\n\tfmt.Println()\n}\n```\n\n----------------------------------------\n\nTITLE: New Constants in Azure SDK for Go\nDESCRIPTION: New constants added to the SDK, including CloudServiceSlotType values and GalleryProvisioningState values for different states of gallery resources.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n// New constants\nCloudServiceSlotTypeProduction\nCloudServiceSlotTypeStaging\nGalleryProvisioningStateUpdating\nGalleryProvisioningStateSucceeded\nGalleryProvisioningStateFailed\nGalleryProvisioningStateCreating\nGalleryProvisioningStateMigrating\nGalleryProvisioningStateDeleting\n```\n\n----------------------------------------\n\nTITLE: Joining Paragraphs in Go with Lip Gloss\nDESCRIPTION: Demonstrates how to horizontally and vertically join paragraphs using Lip Gloss functions. Shows alignment options and custom positioning.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_21\n\nLANGUAGE: go\nCODE:\n```\n// Horizontally join three paragraphs along their bottom edges\nlipgloss.JoinHorizontal(lipgloss.Bottom, paragraphA, paragraphB, paragraphC)\n\n// Vertically join two paragraphs along their center axes\nlipgloss.JoinVertical(lipgloss.Center, paragraphA, paragraphB)\n\n// Horizontally join three paragraphs, with the shorter ones aligning 20%\n// from the top of the tallest\nlipgloss.JoinHorizontal(0.2, paragraphA, paragraphB, paragraphC)\n```\n\n----------------------------------------\n\nTITLE: Updating Promtail Configuration\nDESCRIPTION: Changes required in Promtail configuration due to updates in the underlying backoff library.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/upgrade/_index.md#2025-04-19_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nmin_period:\nmax_period:\nmax_retries:\n```\n\n----------------------------------------\n\nTITLE: Configuring Memberlist Service in Istio\nDESCRIPTION: Kubernetes service configuration for Loki Memberlist with TCP protocol specification for HTTP communication in Istio environment.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/istio.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/instance: observability\n  name: loki-memberlist\n  namespace: observability\nspec:\n  clusterIP: None\n  ports:\n    - name: http\n      port: 7946\n      protocol: TCP\n      targetPort: 7946\n      appProtocol: tcp\n  selector:\n    app.kubernetes.io/instance: observability\n    app.kubernetes.io/part-of: memberlist\n```\n\n----------------------------------------\n\nTITLE: Generating Markdown-Compatible ASCII Table in Go\nDESCRIPTION: This snippet demonstrates how to create a Markdown-compatible ASCII table using the tablewriter library. It sets custom borders and separators to match Markdown format.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ndata := [][]string{\n\t[]string{\"1/1/2014\", \"Domain name\", \"2233\", \"$10.98\"},\n\t[]string{\"1/1/2014\", \"January Hosting\", \"2233\", \"$54.95\"},\n\t[]string{\"1/4/2014\", \"February Hosting\", \"2233\", \"$51.00\"},\n\t[]string{\"1/4/2014\", \"February Extra Bandwidth\", \"2233\", \"$30.00\"},\n}\n\ntable := tablewriter.NewWriter(os.Stdout)\ntable.SetHeader([]string{\"Date\", \"Description\", \"CV2\", \"Amount\"})\ntable.SetBorders(tablewriter.Border{Left: true, Top: false, Right: true, Bottom: false})\ntable.SetCenterSeparator(\"|\")\ntable.AppendBulk(data) // Add Bulk Data\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Example Output of WrapString in Go\nDESCRIPTION: Shows the expected output from the word wrapping example. Each word appears on its own line since the wrap width is set to 3 characters.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/go-wordwrap/README.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nfoo\nbar\nbaz\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Constant Type Names to Avoid Stuttering\nDESCRIPTION: Directive to rename various enum types to avoid stuttering in the generated code, such as renaming BlobDeleteType to DeleteType for cleaner naming.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.parameters['BlobDeleteType']\n  transform: >\n    $[\"x-ms-enum\"].name = \"DeleteType\";\n    $[\"x-ms-client-name\"] = \"DeleteType\";\n\n- from: swagger-document\n  where: $.parameters['BlobExpiryOptions']\n  transform: >\n    $[\"x-ms-enum\"].name = \"ExpiryOptions\";\n    $[\"x-ms-client-name\"].name = \"ExpiryOptions\";\n\n- from: swagger-document\n  where: $[\"x-ms-paths\"][*].*.responses[*].headers[\"x-ms-immutability-policy-mode\"]\n  transform: >\n    $[\"x-ms-client-name\"].name = \"ImmutabilityPolicyMode\";\n    $.enum = [ \"Mutable\", \"Unlocked\", \"Locked\"];\n    $[\"x-ms-enum\"] = { \"name\": \"ImmutabilityPolicyMode\", \"modelAsString\": false };\n\n- from: swagger-document\n  where: $.parameters['ImmutabilityPolicyMode']\n  transform: >\n    $[\"x-ms-enum\"].name = \"ImmutabilityPolicySetting\";\n    $[\"x-ms-client-name\"].name = \"ImmutabilityPolicySetting\";\n\n- from: swagger-document\n  where: $.definitions['BlobPropertiesInternal']\n  transform: >\n    $.properties.ImmutabilityPolicyMode[\"x-ms-enum\"].name = \"ImmutabilityPolicyMode\";\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for GKE Hub API Generation\nDESCRIPTION: Commit reference for the implementation of generating GKE Hub API v1beta1 client libraries.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n([8aed3bd](https://www.github.com/googleapis/google-cloud-go/commit/8aed3bd1bbbe983e4891c813e4c5dc9b3aa1b9b2))\n```\n\n----------------------------------------\n\nTITLE: Post-PR #79 Benchmark Results (i5-6200U)\nDESCRIPTION: Improved benchmark results after PR #79 showing ~10x performance improvement and ~100x reduction in memory allocations on Intel i5-6200U CPU\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/swag/BENCHMARK.md#2025-04-19_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ngoos: linux\ngoarch: amd64\npkg: github.com/go-openapi/swag\ncpu: Intel(R) Core(TM) i5-6200U CPU @ 2.30GHz\nBenchmarkToXXXName/ToGoName-4         \t 9595830\t      3991 ns/op\t      42 B/op\t       5 allocs/op\nBenchmarkToXXXName/ToVarName-4        \t 9194276\t      3984 ns/op\t      62 B/op\t       7 allocs/op\nBenchmarkToXXXName/ToFileName-4       \t17002711\t      2123 ns/op\t     147 B/op\t       7 allocs/op\nBenchmarkToXXXName/ToCommandName-4    \t16772926\t      2111 ns/op\t     147 B/op\t       7 allocs/op\nBenchmarkToXXXName/ToHumanNameLower-4 \t 9788331\t      3749 ns/op\t      92 B/op\t       6 allocs/op\nBenchmarkToXXXName/ToHumanNameTitle-4 \t 9188260\t      3941 ns/op\t     104 B/op\t       6 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Adding Borders in Go with Lip Gloss\nDESCRIPTION: Demonstrates various ways to add and customize borders to styled text using Lip Gloss.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n// Add a purple, rectangular border\nvar style = lipgloss.NewStyle().\n    BorderStyle(lipgloss.NormalBorder()).\n    BorderForeground(lipgloss.Color(\"63\"))\n\n// Set a rounded, yellow-on-purple border to the top and left\nvar anotherStyle = lipgloss.NewStyle().\n    BorderStyle(lipgloss.RoundedBorder()).\n    BorderForeground(lipgloss.Color(\"228\")).\n    BorderBackground(lipgloss.Color(\"63\")).\n    BorderTop(true).\n    BorderLeft(true)\n\n// Make your own border\nvar myCuteBorder = lipgloss.Border{\n    Top:         \"._.:*:\",\n    Bottom:      \"._.:*:\",\n    Left:        \"|*\",\n    Right:       \"|*\",\n    TopLeft:     \"*\",\n    TopRight:    \"*\",\n    BottomLeft:  \"*\",\n    BottomRight: \"*\",\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Changelog Entry in Markdown\nDESCRIPTION: This snippet shows the addition of a CHANGELOG.md file in version 1.0.1 of the Azure SDK for Go.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## v1.0.1\n\n- Added CHANGELOG.md\n```\n\n----------------------------------------\n\nTITLE: Using Shorthand Syntax for Margins and Padding in Go with Lip Gloss\nDESCRIPTION: Shows how to use CSS-like shorthand syntax for applying margins and padding in Lip Gloss styles.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n// 2 cells on all sides\nlipgloss.NewStyle().Padding(2)\n\n// 2 cells on the top and bottom, 4 cells on the left and right\nlipgloss.NewStyle().Margin(2, 4)\n\n// 1 cell on the top, 4 cells on the sides, 2 cells on the bottom\nlipgloss.NewStyle().Padding(1, 4, 2)\n\n// Clockwise, starting from the top: 2 cells on the top, 4 on the right, 3 on\n// the bottom, and 1 on the left\nlipgloss.NewStyle().Margin(2, 4, 3, 1)\n```\n\n----------------------------------------\n\nTITLE: Rendering ASCII Table from CSV File in Go\nDESCRIPTION: This snippet demonstrates how to create an ASCII table by reading data from a CSV file. It also shows how to set left alignment for the table contents.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/olekukonko/tablewriter/README.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntable, _ := tablewriter.NewCSV(os.Stdout, \"testdata/test_info.csv\", true)\ntable.SetAlignment(tablewriter.ALIGN_LEFT)   // Set Alignment\ntable.Render()\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail Clients for Loki in Kubernetes\nDESCRIPTION: This YAML configuration sets up Promtail clients to send application, audit, and infrastructure logs to a Loki instance in Kubernetes. It includes bearer token authentication and TLS configuration for secure communication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/forwarding_logs_to_gateway.md#2025-04-19_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nclients:\n  - # ...\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    tls_config:\n      ca_file: /run/secrets/kubernetes.io/serviceaccount/service-ca.crt\n    url: https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/audit/loki/api/v1/push\n  - # ...\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    tls_config:\n      ca_file: /run/secrets/kubernetes.io/serviceaccount/service-ca.crt\n    url: https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/application/loki/api/v1/push\n  - # ...\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    tls_config:\n      ca_file: /run/secrets/kubernetes.io/serviceaccount/service-ca.crt\n    url: https://lokistack-dev-gateway-http.openshift-logging.svc:8080/api/logs/v1/infrastructure/loki/api/v1/push\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Loki 2.6 Release Notes\nDESCRIPTION: YAML frontmatter defining the title, description, and weight of the Loki 2.6 release notes page. This metadata is used for structuring and organizing documentation.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v2-6.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: V2.6\ndescription: Version 2.6 release notes\nweight: 750\n---\n```\n\n----------------------------------------\n\nTITLE: Developer Certificate of Origin Text\nDESCRIPTION: The official Developer Certificate of Origin (DCO) version 1.1 text that contributors must agree to when submitting code to the project. This certificate ensures contributors have the right to submit their code under the project's open source license.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-units/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\n----------------------------------------\n\nTITLE: Capacity Calculation Debug Log Entry in JSON\nDESCRIPTION: This JSON represents a debug log entry for a specific capacity calculation step. It contains the request ID, log level, calculation message, and timestamp.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/drone-json.txt#2025-04-19_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\"id\":\"5qEIzErDfiALVPAN\",\"level\":\"debug\",\"msg\":\"calculate server capacity\",\"time\":\"2024-04-16T14:50:22Z\"}\n```\n\n----------------------------------------\n\nTITLE: Feature Addition Links - Inputs, Outputs and Processors\nDESCRIPTION: List of pull request links and descriptions for new features added to Telegraf, including changes to inputs, outputs, parsers and processors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- [#13605](https://github.com/influxdata/telegraf/pull/13605) `agent` Add option to avoid filtering of global tags\n- [#13774](https://github.com/influxdata/telegraf/pull/13774) `agent` Watch default config files if none specified\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Filesystem Storage in Thanos\nDESCRIPTION: YAML configuration for setting up filesystem-based object storage in Thanos. This is primarily useful for testing and demos, not recommended for production environments.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\ntype: FILESYSTEM\nconfig:\n  directory: \"\"\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: New Functions in Azure SDK for Go\nDESCRIPTION: New functions added to the SDK, including list functions for virtual machine images and community gallery resources, and helper functions for possible enum values.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n// New functions\n*VirtualMachineImagesClient.ListByEdgeZone(context.Context, string, string, *VirtualMachineImagesClientListByEdgeZoneOptions) (VirtualMachineImagesClientListByEdgeZoneResponse, error)\nPossibleCloudServiceSlotTypeValues() []CloudServiceSlotType\nPossibleCopyCompletionErrorReasonValues() []CopyCompletionErrorReason\nPossibleSharedGalleryHostCachingValues() []SharedGalleryHostCaching\nPossibleGalleryProvisioningStateValues() []GalleryProvisioningState\nEncryptionSetIdentity.MarshalJSON() ([]byte, error)\n*CommunityGalleryImagesClient.NewListPager(string, string, *CommunityGalleryImagesClientListOptions) *runtime.Pager[CommunityGalleryImagesClientListResponse]\n*CommunityGalleryImageVersionsClient.NewListPager(string, string, string, *CommunityGalleryImageVersionsClientListOptions) *runtime.Pager[CommunityGalleryImageVersionsClientListResponse]\n```\n\n----------------------------------------\n\nTITLE: Loading Rules with Mimirtool\nDESCRIPTION: Commands for installing mimirtool and loading alert and recording rules into Grafana Cloud Prometheus or Mimir.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/meta-monitoring/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Install mimirtool\ngo install github.com/grafana/mimir/pkg/mimirtool@latest\n\n# Load alert rules\nmimirtool rules load alerts.yaml \\\n  --address=https://prometheus-prod-xxx.grafana.net/api/prom \\\n  --id=<Your-Stack-ID> \\\n  --key=<Your-API-Key>\n\n# Load recording rules\nmimirtool rules load rules.yaml \\\n  --address=https://prometheus-prod-xxx.grafana.net/api/prom \\\n  --id=<Your-Stack-ID> \\\n  --key=<Your-API-Key>\n```\n\n----------------------------------------\n\nTITLE: Color Distance Comparison Program in Go\nDESCRIPTION: A complete program that compares various color distance metrics between two pairs of colors. It demonstrates the difference between RGB space distance and perceptual color spaces like CIE-Lab and CIE-Luv.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"fmt\"\nimport \"github.com/lucasb-eyer/go-colorful\"\n\nfunc main() {\n\tc1a := colorful.Color{150.0 / 255.0, 10.0 / 255.0, 150.0 / 255.0}\n\tc1b := colorful.Color{53.0 / 255.0, 10.0 / 255.0, 150.0 / 255.0}\n\tc2a := colorful.Color{10.0 / 255.0, 150.0 / 255.0, 50.0 / 255.0}\n\tc2b := colorful.Color{99.9 / 255.0, 150.0 / 255.0, 10.0 / 255.0}\n\n\tfmt.Printf(\"DistanceRgb:       c1: %v\\tand c2: %v\\n\", c1a.DistanceRgb(c1b), c2a.DistanceRgb(c2b))\n\tfmt.Printf(\"DistanceLab:       c1: %v\\tand c2: %v\\n\", c1a.DistanceLab(c1b), c2a.DistanceLab(c2b))\n\tfmt.Printf(\"DistanceLuv:       c1: %v\\tand c2: %v\\n\", c1a.DistanceLuv(c1b), c2a.DistanceLuv(c2b))\n\tfmt.Printf(\"DistanceCIE76:     c1: %v\\tand c2: %v\\n\", c1a.DistanceCIE76(c1b), c2a.DistanceCIE76(c2b))\n\tfmt.Printf(\"DistanceCIE94:     c1: %v\\tand c2: %v\\n\", c1a.DistanceCIE94(c1b), c2a.DistanceCIE94(c2b))\n\tfmt.Printf(\"DistanceCIEDE2000: c1: %v\\tand c2: %v\\n\", c1a.DistanceCIEDE2000(c1b), c2a.DistanceCIEDE2000(c2b))\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing View Method for Bubble Tea Model\nDESCRIPTION: Defines the View method which renders the current state of the model as a string. It creates a formatted list of choices with cursor and selection indicators.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/bubbletea/README.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfunc (m model) View() string {\n    // The header\n    s := \"What should we buy at the market?\\n\\n\"\n\n    // Iterate over our choices\n    for i, choice := range m.choices {\n\n        // Is the cursor pointing at this choice?\n        cursor := \" \" // no cursor\n        if m.cursor == i {\n            cursor = \">\" // cursor!\n        }\n\n        // Is this choice selected?\n        checked := \" \" // not selected\n        if _, ok := m.selected[i]; ok {\n            checked = \"x\" // selected!\n        }\n\n        // Render the row\n        s += fmt.Sprintf(\"%s [%s] %s\\n\", cursor, checked, choice)\n    }\n\n    // The footer\n    s += \"\\nPress q to quit.\\n\"\n\n    // Send the UI for rendering\n    return s\n}\n```\n\n----------------------------------------\n\nTITLE: UvarintSize Performance Benchmarks\nDESCRIPTION: Benchmark results for the UvarintSize functionality, similar to sov* in gogo/protobuf. Shows significant performance improvements ranging from 74% to 88% compared to the old implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dennwc/varint/README.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nbenchmark                    old ns/op     new ns/op     delta\nBenchmarkUvarintSize/1-8     1.71          0.43          -74.85%\nBenchmarkUvarintSize/2-8     2.56          0.57          -77.73%\nBenchmarkUvarintSize/3-8     3.22          0.72          -77.64%\nBenchmarkUvarintSize/4-8     3.74          0.72          -80.75%\nBenchmarkUvarintSize/5-8     4.29          0.57          -86.71%\nBenchmarkUvarintSize/6-8     4.85          0.58          -88.04%\nBenchmarkUvarintSize/7-8     5.43          0.71          -86.92%\nBenchmarkUvarintSize/8-8     6.01          0.86          -85.69%\nBenchmarkUvarintSize/9-8     6.64          1.00          -84.94%\n```\n\n----------------------------------------\n\nTITLE: Installing Gorilla WebSocket Package in Go\nDESCRIPTION: Command to install the Gorilla WebSocket package using Go's package manager.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gorilla/websocket/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/gorilla/websocket\n```\n\n----------------------------------------\n\nTITLE: Documenting Go Mod Adoption in Markdown\nDESCRIPTION: Notes the adoption of go mod in version 1.0.0 of the go-immutable-radix library. This marks a significant milestone in the project's dependency management approach.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-immutable-radix/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* go mod adopted\n```\n\n----------------------------------------\n\nTITLE: Formatting Word Series in Go\nDESCRIPTION: Demonstrates the use of english.WordSeries() and english.OxfordWordSeries() to format comma-separated word lists with conjunctions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dustin/go-humanize/README.markdown#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nenglish.WordSeries([]string{\"foo\"}, \"and\") // foo\nenglish.WordSeries([]string{\"foo\", \"bar\"}, \"and\") // foo and bar\nenglish.WordSeries([]string{\"foo\", \"bar\", \"baz\"}, \"and\") // foo, bar and baz\n\nenglish.OxfordWordSeries([]string{\"foo\", \"bar\", \"baz\"}, \"and\") // foo, bar, and baz\n```\n\n----------------------------------------\n\nTITLE: Updating DNS Library in Go\nDESCRIPTION: Updates the DNS library from version 1.1.43 to 1.1.46. This includes multiple minor version bumps, likely incorporating bug fixes and improvements.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_23\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/miekg/dns from 1.1.43 to 1.1.46\n```\n\n----------------------------------------\n\nTITLE: Sample Pod Binding Request Structure\nDESCRIPTION: Example of a pod binding request payload showing the structure of binding information including target node details.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/enhancements/zone_aware_replication.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n{\n \"name\": \"sample-request-0\",\n \"namespace\": \"default\",\n \"operation\": \"CREATE\",\n \"userInfo\": {\n   \"username\": \"system:kube-scheduler\",\n   \"uid\": \"uid:system:kube-scheduler\",\n   \"groups\": [\"system:authenticated\"]\n },\n \"object\": {\n   \"kind\": \"Binding\",\n   \"apiVersion\": \"v1\",\n   \"metadata\": {\n     \"name\": \"sample-request-0\",\n     \"namespace\": \"default\",\n   },\n   \"target\": {\n     \"kind\": \"Node\",\n     \"name\": \"aws-node-0\"\n   }\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Colors from Databases in Go\nDESCRIPTION: This snippet shows how to read colors stored as strings in a database using the HexColor type from the go-colorful library. It demonstrates automatic type conversion using the database/sql interfaces.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/lucasb-eyer/go-colorful/README.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nvar hc HexColor\n_, err := db.QueryRow(\"SELECT '#ff0000';\").Scan(&hc)\n// hc == HexColor{R: 1, G: 0, B: 0}; err == nil\n```\n\n----------------------------------------\n\nTITLE: Idempotent Pattern for Batch Transactions\nDESCRIPTION: Example showing how to properly handle side effects in batch transactions since the function may be called multiple times if parts of the transaction fail.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nvar id uint64\nerr := db.Batch(func(tx *bolt.Tx) error {\n\t// Find last key in bucket, decode as bigendian uint64, increment\n\t// by one, encode back to []byte, and add new key.\n\t...\n\tid = newValue\n\treturn nil\n})\nif err != nil {\n\treturn ...\n}\nfmt.Println(\"Allocated ID %d\", id)\n```\n\n----------------------------------------\n\nTITLE: Running Tests and Linters for Zap\nDESCRIPTION: Commands to run the test suite and linters to verify code quality before submitting changes to the Zap project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake test\nmake lint\n```\n\n----------------------------------------\n\nTITLE: Importing OpenTelemetry Go Package\nDESCRIPTION: Example showing imports of OpenTelemetry Go packages mentioned in the changelog.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  \"go.opentelemetry.io/otel\"\n  \"go.opentelemetry.io/otel/trace\"\n  \"go.opentelemetry.io/otel/log\"\n  \"go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp\"\n)\n```\n\n----------------------------------------\n\nTITLE: Overriding Dependencies in Go Module\nDESCRIPTION: This snippet demonstrates how to override specific package dependencies in a Go module. It replaces the default versions of 'go-syslog' and 'objstore' packages with custom forks or versions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n# github.com/influxdata/go-syslog/v3 => github.com/leodido/go-syslog/v4 v4.2.0\n# github.com/thanos-io/objstore => github.com/grafana/objstore v0.0.0-20250210100727-533688b5600d\n```\n\n----------------------------------------\n\nTITLE: Importing gRPC and Protobuf Dependencies in Go\nDESCRIPTION: This snippet shows the import paths for gRPC and Protobuf libraries used in the Grafana Loki project. It includes core gRPC functionalities, balancers, credentials, and various internal components.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\ngoogle.golang.org/grpc\ngoogle.golang.org/grpc/attributes\ngoogle.golang.org/grpc/authz/audit\ngoogle.golang.org/grpc/authz/audit/stdout\ngoogle.golang.org/grpc/backoff\ngoogle.golang.org/grpc/balancer\ngoogle.golang.org/grpc/balancer/base\ngoogle.golang.org/grpc/balancer/endpointsharding\ngoogle.golang.org/grpc/balancer/grpclb\ngoogle.golang.org/grpc/balancer/grpclb/grpc_lb_v1\ngoogle.golang.org/grpc/balancer/grpclb/state\ngoogle.golang.org/grpc/balancer/lazy\ngoogle.golang.org/grpc/balancer/leastrequest\ngoogle.golang.org/grpc/balancer/pickfirst\ngoogle.golang.org/grpc/balancer/pickfirst/internal\ngoogle.golang.org/grpc/balancer/pickfirst/pickfirstleaf\ngoogle.golang.org/grpc/balancer/rls\ngoogle.golang.org/grpc/balancer/rls/internal/adaptive\ngoogle.golang.org/grpc/balancer/rls/internal/keys\ngoogle.golang.org/grpc/balancer/roundrobin\ngoogle.golang.org/grpc/balancer/weightedroundrobin\ngoogle.golang.org/grpc/balancer/weightedroundrobin/internal\ngoogle.golang.org/grpc/balancer/weightedtarget\ngoogle.golang.org/grpc/balancer/weightedtarget/weightedaggregator\ngoogle.golang.org/grpc/binarylog/grpc_binarylog_v1\ngoogle.golang.org/grpc/channelz\ngoogle.golang.org/grpc/codes\ngoogle.golang.org/grpc/connectivity\ngoogle.golang.org/grpc/credentials\ngoogle.golang.org/grpc/credentials/alts\ngoogle.golang.org/grpc/credentials/alts/internal\ngoogle.golang.org/grpc/credentials/alts/internal/authinfo\ngoogle.golang.org/grpc/credentials/alts/internal/conn\ngoogle.golang.org/grpc/credentials/alts/internal/handshaker\ngoogle.golang.org/grpc/credentials/alts/internal/handshaker/service\ngoogle.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp\ngoogle.golang.org/grpc/credentials/google\ngoogle.golang.org/grpc/credentials/insecure\ngoogle.golang.org/grpc/credentials/oauth\ngoogle.golang.org/grpc/credentials/tls/certprovider\ngoogle.golang.org/grpc/credentials/tls/certprovider/pemfile\ngoogle.golang.org/grpc/encoding\ngoogle.golang.org/grpc/encoding/gzip\ngoogle.golang.org/grpc/encoding/proto\ngoogle.golang.org/grpc/experimental/opentelemetry\ngoogle.golang.org/grpc/experimental/stats\ngoogle.golang.org/grpc/grpclog\ngoogle.golang.org/grpc/grpclog/internal\ngoogle.golang.org/grpc/health/grpc_health_v1\ngoogle.golang.org/grpc/internal\n# google.golang.org/protobuf v1.36.6\n## explicit; go 1.22\ngoogle.golang.org/protobuf/encoding/protodelim\ngoogle.golang.org/protobuf/encoding/protojson\ngoogle.golang.org/protobuf/encoding/prototext\ngoogle.golang.org/protobuf/encoding/protowire\ngoogle.golang.org/protobuf/internal/descfmt\ngoogle.golang.org/protobuf/internal/descopts\ngoogle.golang.org/protobuf/internal/detrand\ngoogle.golang.org/protobuf/internal/editiondefaults\ngoogle.golang.org/protobuf/internal/editionssupport\ngoogle.golang.org/protobuf/internal/encoding/defval\ngoogle.golang.org/protobuf/internal/encoding/json\ngoogle.golang.org/protobuf/internal/encoding/messageset\ngoogle.golang.org/protobuf/internal/encoding/tag\ngoogle.golang.org/protobuf/internal/encoding/text\ngoogle.golang.org/protobuf/internal/errors\ngoogle.golang.org/protobuf/internal/filedesc\ngoogle.golang.org/protobuf/internal/filetype\ngoogle.golang.org/protobuf/internal/flags\ngoogle.golang.org/protobuf/internal/genid\ngoogle.golang.org/protobuf/internal/impl\ngoogle.golang.org/protobuf/internal/order\ngoogle.golang.org/protobuf/internal/pragma\ngoogle.golang.org/protobuf/internal/protolazy\ngoogle.golang.org/protobuf/internal/set\ngoogle.golang.org/protobuf/internal/strs\ngoogle.golang.org/protobuf/internal/version\ngoogle.golang.org/protobuf/proto\ngoogle.golang.org/protobuf/protoadapt\ngoogle.golang.org/protobuf/reflect/protodesc\ngoogle.golang.org/protobuf/reflect/protoreflect\ngoogle.golang.org/protobuf/reflect/protoregistry\ngoogle.golang.org/protobuf/runtime/protoiface\ngoogle.golang.org/protobuf/runtime/protoimpl\ngoogle.golang.org/protobuf/types/descriptorpb\ngoogle.golang.org/protobuf/types/gofeaturespb\ngoogle.golang.org/protobuf/types/known/anypb\ngoogle.golang.org/protobuf/types/known/apipb\ngoogle.golang.org/protobuf/types/known/durationpb\ngoogle.golang.org/protobuf/types/known/emptypb\ngoogle.golang.org/protobuf/types/known/fieldmaskpb\ngoogle.golang.org/protobuf/types/known/sourcecontextpb\ngoogle.golang.org/protobuf/types/known/structpb\ngoogle.golang.org/protobuf/types/known/timestamppb\ngoogle.golang.org/protobuf/types/known/typepb\ngoogle.golang.org/protobuf/types/known/wrapperspb\n```\n\n----------------------------------------\n\nTITLE: Converting Kafka Version Numbers to/from Strings in Go\nDESCRIPTION: Provides helper methods for converting Kafka version numbers to and from strings. This feature was added in version 1.15.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_18\n\nLANGUAGE: Go\nCODE:\n```\nversion, err := sarama.ParseKafkaVersion(\"0.11.0.0\")\nversionString := version.String()\n```\n\n----------------------------------------\n\nTITLE: Vault Kubernetes Auth Lease Revocation Log Entry\nDESCRIPTION: Log entries showing the expiration and revocation of Kubernetes authentication leases. Each entry includes a timestamp, log level, operation, and lease ID containing the Kubernetes auth path and environment.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_4\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:56:35.344Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-east-0/login/h93491be27afd5856047d3fa27bd9b343a59e8b315b1ba61773cfd1ed7c4d3a1b\n```\n\n----------------------------------------\n\nTITLE: Installing Parquet-Go Library with Go Modules\nDESCRIPTION: Command for installing the parquet-go library as a Go module dependency. This requires Go 1.21 or later.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/parquet-go/parquet-go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/parquet-go/parquet-go\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Bucket in Bolt Database (Go)\nDESCRIPTION: Shows how to retrieve an existing bucket from a Bolt database. The code checks if the 'MyBucket' bucket exists and returns an error if it doesn't.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.etcd.io/bbolt/README.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ndb.Update(func(tx *bolt.Tx) error {\n\tb := tx.Bucket([]byte(\"MyBucket\"))\n\tif b == nil {\n\t\treturn errors.New(\"bucket does not exist\")\n\t}\n\treturn nil\n})\n```\n\n----------------------------------------\n\nTITLE: Exporting Request Creation and Response Handling Methods\nDESCRIPTION: Directive to export various createRequest and handleResponse methods in the ContainerClient and PageBlobClient for more flexibility in custom implementations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: zz_container_client.go\n  where: $\n  transform: >\n    return $.\n      replace(/listBlobHierarchySegmentCreateRequest/g, function(_, s) { return `ListBlobHierarchySegmentCreateRequest` }).\n      replace(/listBlobHierarchySegmentHandleResponse/g, function(_, s) { return `ListBlobHierarchySegmentHandleResponse` });\n\n- from: zz_pageblob_client.go\n  where: $\n  transform: >\n    return $.\n      replace(/getPageRanges(Diff)?CreateRequest/g, function(_, s) { if (s === undefined) { s = '' }; return `GetPageRanges${s}CreateRequest` }).\n      replace(/getPageRanges(Diff)?HandleResponse/g, function(_, s) { if (s === undefined) { s = '' }; return `GetPageRanges${s}HandleResponse` });\n```\n\n----------------------------------------\n\nTITLE: Configuring IBM COS Parameters in YAML\nDESCRIPTION: Configuration parameters for IBM Cloud Object Storage integration, including API keys, service instance IDs, authentication endpoints, and trusted profile settings.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/configuration.md#2025-04-19_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\n# CLI flag: -<prefix>.cos.api-key\n[api_key: <string> | default = \"\"]\n\n# COS service instance id to use.\n# CLI flag: -<prefix>.cos.service-instance-id\n[service_instance_id: <string> | default = \"\"]\n\n# IAM Auth Endpoint for authentication.\n# CLI flag: -<prefix>.cos.auth-endpoint\n[auth_endpoint: <string> | default = \"https://iam.cloud.ibm.com/identity/token\"]\n\n# Compute resource token file path.\n# CLI flag: -<prefix>.cos.cr-token-file-path\n[cr_token_file_path: <string> | default = \"\"]\n\n# Name of the trusted profile.\n# CLI flag: -<prefix>.cos.trusted-profile-name\n[trusted_profile_name: <string> | default = \"\"]\n\n# ID of the trusted profile.\n# CLI flag: -<prefix>.cos.trusted-profile-id\n[trusted_profile_id: <string> | default = \"\"]\n```\n\n----------------------------------------\n\nTITLE: Adding Release Tags Command\nDESCRIPTION: Shell command to add release tags to specific module sets and commits.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/RELEASING.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmake add-tags MODSET=<module set> COMMIT=<commit hash>\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: A template for applying the Apache License 2.0 to a project. It includes placeholders for copyright year and owner information, along with standard license text about distribution terms.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Masterminds/goutils/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Exporting ManualReader and PeriodicReader in Go OpenTelemetry SDK Metric\nDESCRIPTION: Exports the ManualReader and PeriodicReader structs in the SDK metric package, allowing users to directly access and manipulate these types.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_12\n\nLANGUAGE: Go\nCODE:\n```\nExport the `ManualReader` struct in `go.opentelemetry.io/otel/sdk/metric`.\nExport the `PeriodicReader` struct in `go.opentelemetry.io/otel/sdk/metric`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Promtail with Dynamic Labels for Apache Logs\nDESCRIPTION: This YAML configuration demonstrates how to use regex-based pipeline stages in Promtail to dynamically set labels based on log content.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/get-started/labels/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- job_name: system\n  pipeline_stages:\n     - regex:\n       expression: \"^(?P<ip>\\\\S+) (?P<identd>\\\\S+) (?P<user>\\\\S+) \\\\[(?P<timestamp>[\\\\w:/]+\\\\s[+\\\\-]\\\\d{4})\\\\] \\\"(?P<action>\\\\S+)\\\\s?(?P<path>\\\\S+)?\\\\s?(?P<protocol>\\\\S+)?\\\" (?P<status_code>\\\\d{3}|-) (?P<size>\\\\d+|-)\\\\s?\\\"?(?P<referer>[^\\\"]*)\\\"?\\\\s?\\\"?(?P<useragent>[^\\\"]*)?\\\"\"\n   - labels:\n       action:\n       status_code:\n  static_configs:\n  - targets:\n     - localhost\n    labels:\n     job: apache\n     env: dev\n     __path__: /var/log/apache.log\n```\n\n----------------------------------------\n\nTITLE: Markdown Code of Conduct Document\nDESCRIPTION: A comprehensive markdown document detailing the code of conduct guidelines, including sections for pledge, standards, responsibilities, scope, enforcement, and attribution.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/code_of_conduct.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n```\n\n----------------------------------------\n\nTITLE: Using Azure Core ETag Type for Entity Tags\nDESCRIPTION: Directive to replace string types for ETags with azcore.ETag type across multiple files for better type safety and consistency with the Azure SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from:\n  - zz_models.go\n  - zz_options.go\n  where: $\n  transform: >\n    return $.\n      replace(/import \"time\"/, `import (\\n\\t\"time\"\\n\\t\"github.com/Azure/azure-sdk-for-go/sdk/azcore\"\\n)`).\n      replace(/Etag\\s+\\*string/g, `ETag *azcore.ETag`).\n      replace(/IfMatch\\s+\\*string/g, `IfMatch *azcore.ETag`).\n      replace(/IfNoneMatch\\s+\\*string/g, `IfNoneMatch *azcore.ETag`).\n      replace(/SourceIfMatch\\s+\\*string/g, `SourceIfMatch *azcore.ETag`).\n      replace(/SourceIfNoneMatch\\s+\\*string/g, `SourceIfNoneMatch *azcore.ETag`);\n\n- from: zz_response_types.go\n  where: $\n  transform: >\n    return $.\n      replace(/\"time\"/, `\"time\"\\n\\t\"github.com/Azure/azure-sdk-for-go/sdk/azcore\"`).\n      replace(/ETag\\s+\\*string/g, `ETag *azcore.ETag`);\n\n- from:\n  - zz_appendblob_client.go\n  - zz_blob_client.go\n  - zz_blockblob_client.go\n  - zz_container_client.go\n  - zz_pageblob_client.go\n  where: $\n  transform: >\n    return $.\n      replace(/\"github\\.com\\/Azure\\/azure\\-sdk\\-for\\-go\\/sdk\\/azcore\\/policy\"/, `\"github.com/Azure/azure-sdk-for-go/sdk/azcore\"\\n\\t\"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy\"`).\n      replace(/result\\.ETag\\s+=\\s+&val/g, `result.ETag = (*azcore.ETag)(&val)`).\n      replace(/\\*modifiedAccessConditions.IfMatch/g, `string(*modifiedAccessConditions.IfMatch)`).\n      replace(/\\*modifiedAccessConditions.IfNoneMatch/g, `string(*modifiedAccessConditions.IfNoneMatch)`).\n      replace(/\\*sourceModifiedAccessConditions.SourceIfMatch/g, `string(*sourceModifiedAccessConditions.SourceIfMatch)`).\n      replace(/\\*sourceModifiedAccessConditions.SourceIfNoneMatch/g, `string(*sourceModifiedAccessConditions.SourceIfNoneMatch)`);\n```\n\n----------------------------------------\n\nTITLE: Installing Promtail Helm Chart\nDESCRIPTION: Adds the Grafana Helm repository and installs Promtail using Helm\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/eks/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\nhelm upgrade -i promtail grafana/promtail\n```\n\n----------------------------------------\n\nTITLE: Kafka Log Segment Deletion Information Logs\nDESCRIPTION: Log entries showing sequential deletion of Kafka log segments and their associated time and offset index files from the /bitnami/kafka/data/ingest-3/ directory. Each segment deletion includes three components: the main log file, timeindex, and offset index.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_3\n\nLANGUAGE: log\nCODE:\n```\n[2024-05-07 10:55:40,724] INFO Deleted log /bitnami/kafka/data/ingest-3/00000000000182627921.log.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,724] INFO Deleted time index /bitnami/kafka/data/ingest-3/00000000000182625520.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,724] INFO Deleted offset index /bitnami/kafka/data/ingest-3/00000000000182625520.index.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Adding DCO Signed-off-by Line to Commit Messages\nDESCRIPTION: Shows the format for manually adding the required Developer Certificate of Origin (DCO) sign-off to commit messages, which includes the contributor's name and email address.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: git\nCODE:\n```\nfeat: this is my commit message\n\nSigned-off-by: Random J Developer <random@developer.example.org>\n```\n\n----------------------------------------\n\nTITLE: Verifying Uploaded File with MinIO Client\nDESCRIPTION: Command to verify the uploaded file using the MinIO Client (mc) command-line tool.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nmc ls play/testbucket\n```\n\n----------------------------------------\n\nTITLE: Installing Uber Atomic Package\nDESCRIPTION: Command to install the Uber atomic package using go get. Specifically installs version 1 of the package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/atomic/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ go get -u go.uber.org/atomic@v1\n```\n\n----------------------------------------\n\nTITLE: Go Package Updates\nDESCRIPTION: List of Go package dependency version updates, including AWS SDK, Google Cloud, and various other libraries used in the Telegraf project\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\ncloud.google.com/go/bigquery from 1.51.1 to 1.52.0\ngithub.com/aliyun/alibaba-cloud-sdk-go from 1.62.337 to 1.62.389\ngithub.com/aws/aws-sdk-go-v2/config from 1.18.8 to 1.18.27\ngithub.com/aws/aws-sdk-go-v2/service/kinesis from 1.17.8 to 1.17.14\ngithub.com/gopcua/opcua from 0.3.7 to 0.4.0\ngithub.com/prometheus/client_golang from 1.15.1 to 1.16.0\ngithub.com/snowflakedb/gosnowflake from 1.6.13 to 1.6.22\n```\n\n----------------------------------------\n\nTITLE: Running golangci-lint Locally\nDESCRIPTION: Shell command example showing how to run golangci-lint on the entire project. Includes a comment about showing all lint errors using specific flags.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Microsoft/go-winio/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# use . or specify a path to only lint a package\n# to show all lint errors, use flags \"--max-issues-per-linter=0 --max-same-issues=0\"\n> golangci-lint run ./...\n```\n\n----------------------------------------\n\nTITLE: Authentication Lease Revocation Logs\nDESCRIPTION: Time-stamped log entries showing the expiration and revocation of Kubernetes authentication leases across different regional clusters. Each entry contains a timestamp, log level, operation type, and a unique lease identifier.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/vault.txt#2025-04-19_snippet_7\n\nLANGUAGE: log\nCODE:\n```\n2024-05-07T10:56:02.279Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-eu-west-2/login/hd883e4407723c2eb4d9f1c71b2b9a06bef835f8efede1695c255947e9c21e071\n2024-05-07T10:56:02.234Z [INFO]  expiration: revoked lease: lease_id=auth/kubernetes/dev-us-central-0/login/hd0c5693cb661f4307de69106677e75f3fc1bc435c5b552248949fdb162c18b75\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Service Resolution URL Formats\nDESCRIPTION: Shows the various URL formats that can be used with kuberesolver to specify Kubernetes services. These formats support different ways of referencing services by name, namespace, and port.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/sercand/kuberesolver/v6/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nkubernetes:///service-name:8080\nkubernetes:///service-name:portname\nkubernetes:///service-name.namespace:8080\nkubernetes:///service-name.namespace.svc.cluster_name\nkubernetes:///service-name.namespace.svc.cluster_name:8080\n\nkubernetes://namespace/service-name:8080\nkubernetes://service-name:8080/\nkubernetes://service-name.namespace:8080/\nkubernetes://service-name.namespace.svc.cluster_name\nkubernetes://service-name.namespace.svc.cluster_name:8080\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Pod Inspection Commands\nDESCRIPTION: Commands for inspecting Kubernetes pods and connecting to Promtail pod for debugging\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/troubleshooting.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl get pods --all-namespaces -o wide\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl exec -it promtail-bth9q -- /bin/sh\n```\n\n----------------------------------------\n\nTITLE: Launch EC2 Instance\nDESCRIPTION: Creates an Amazon Linux 2 EC2 instance with the configured security group\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\naws ec2 run-instances --image-id ami-016b213e65284e9c9 --count 1 --instance-type t2.micro --key-name promtail-ec2 --security-groups promtail-ec2\n```\n\n----------------------------------------\n\nTITLE: Configuring OTLP Attribute Dropping in LokiStack\nDESCRIPTION: YAML configuration for dropping specific OTLP attributes from being stored in Loki. This example demonstrates how to drop resource, scope, and log attributes using both exact names and regex patterns.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/open-telemetry.md#2025-04-19_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# [...]\nspec:\n  limits:\n    global:\n      otlp:\n        streamLabels:\n          # [...]\n        drop:\n          resourceAttributes:\n          - name: \"process.command_line\"\n          - name: \"k8s\\\\.pod\\\\.labels\\\\..+\"\n            regex: true\n          scopeAttributes:\n          - name: \"service.name\"\n          logAttributes:\n          - name: \"http.route\"\n```\n\n----------------------------------------\n\nTITLE: New Fields in Existing Structs in Azure SDK for Go\nDESCRIPTION: New fields added to existing structs for enhanced functionality, such as fields for shared gallery images, security profiles, and identity management.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v5/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n// New fields in structs\nNew field `SystemData` in struct `CloudService`\nNew field `SlotType` in struct `CloudServiceNetworkProfile`\nNew field `SharedGalleryImageID` in struct `ImageDiskReference`\nNew field `CommunityGalleryImageID` in struct `ImageDiskReference`\nNew field `AdvancedSettings` in struct `GalleryApplicationVersionPublishingProfile`\nNew field `Settings` in struct `GalleryApplicationVersionPublishingProfile`\nNew field `CopyCompletionError` in struct `SnapshotProperties`\nNew field `ExcludeFromLatest` in struct `SharedGalleryImageVersionProperties`\nNew field `StorageProfile` in struct `SharedGalleryImageVersionProperties`\nNew field `ExcludeFromLatest` in struct `CommunityGalleryImageVersionProperties`\nNew field `StorageProfile` in struct `CommunityGalleryImageVersionProperties`\nNew field `Architecture` in struct `SharedGalleryImageProperties`\nNew field `UserAssignedIdentities` in struct `EncryptionSetIdentity`\nNew field `Eula` in struct `CommunityGalleryImageProperties`\nNew field `PrivacyStatementURI` in struct `CommunityGalleryImageProperties`\nNew field `Architecture` in struct `CommunityGalleryImageProperties`\nNew field `FederatedClientID` in struct `DiskEncryptionSetUpdateProperties`\nNew field `FederatedClientID` in struct `EncryptionSetProperties`\nNew field `SecurityProfile` in struct `DiskRestorePointProperties`\n```\n\n----------------------------------------\n\nTITLE: Sample Code Snippet - Project ID Detection\nDESCRIPTION: Example showing how to use sentinel value for auto-detecting project ID in Firestore\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_29\n\nLANGUAGE: go\nCODE:\n```\nDetectProjectID\n```\n\n----------------------------------------\n\nTITLE: Calculating String Width with go-runewidth in Go\nDESCRIPTION: Example demonstrating how to use the runewidth package to calculate the display width of a string containing both ASCII and Unicode characters. The StringWidth function returns 12 for the given mixed string.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mattn/go-runewidth/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nrunewidth.StringWidth(\"つのだ☆HIRO\") == 12\n```\n\n----------------------------------------\n\nTITLE: Applying Apache License 2.0 Boilerplate Notice\nDESCRIPTION: The standard boilerplate notice text to be included in files to apply the Apache License 2.0. Contains placeholders for copyright year and owner name, along with the standard license text and link to the full license.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/config/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Creating ECS Service for Loki on Fargate\nDESCRIPTION: AWS CLI command to create an ECS service for running Loki on Fargate. It specifies the cluster, service name, task definition, desired count, region, launch type, and network configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ecs/_index.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naws ecs create-service --cluster ecs-firelens-cluster \\\n--service-name firelens-loki-fargate \\\n--task-definition loki-fargate-task-definition:1 \\\n--desired-count 1 --region us-east-2 --launch-type \"FARGATE\" \\\n--network-configuration \"awsvpcConfiguration={subnets=[subnet-306ca97d],securityGroups=[sg-02c489bbdeffdca1d],assignPublicIp=ENABLED}\"\n```\n\n----------------------------------------\n\nTITLE: Bug Fix and Feature Entries\nDESCRIPTION: Markdown entries documenting bug fixes and feature additions with issue references\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/auth/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **auth:** Enable self-signed JWT for non-GDU universe domain ([#10831](https://github.com/googleapis/google-cloud-go/issues/10831)) ([f9869f7](https://github.com/googleapis/google-cloud-go/commit/f9869f7903cfd34d1b97c25d0dc5669d2c5138e6))\n\n### Features\n\n* **auth:** Auth library can talk to S2A over mTLS ([#10634](https://github.com/googleapis/google-cloud-go/issues/10634)) ([5250a13](https://github.com/googleapis/google-cloud-go/commit/5250a13ec95b8d4eefbe0158f82857ff2189cb45))\n```\n\n----------------------------------------\n\nTITLE: Compute Service API Changes in v0.19.0\nDESCRIPTION: Breaking changes to keypairs and hypervisors List/Get/Delete methods to support new options builders pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: go\nCODE:\n```\ncompute/v2/extensions/keypairs.List\ncompute/v2/extensions/keypairs.Get\ncompute/v2/extensions/keypairs.Delete\ncompute/v2/extensions/hypervisors.List\n```\n\n----------------------------------------\n\nTITLE: Generating Release Manifest with Helm Template in Shell\nDESCRIPTION: This shell command generates a manifest file for the released version of the Loki Helm chart using a custom configuration file.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/scenarios/README.md#2025-04-19_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nhelm template loki-release grafana/loki -f ${scenario}-values.yaml > release-manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Kafka Log File Cleanup Messages\nDESCRIPTION: Log entries showing systematic deletion of Kafka log files, indices, and snapshots. These entries are from Kafka's log cleanup process that removes old segments and their associated files.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/kafka.txt#2025-04-19_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n[2024-05-07 10:55:40,626] INFO Deleted producer state snapshot /bitnami/kafka/data/ingest-7/00000000000179257861.snapshot.deleted (kafka.log.SnapshotFile)\n[2024-05-07 10:55:40,572] INFO Deleted time index /bitnami/kafka/data/ingest-7/00000000000179265040.timeindex.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,572] INFO Deleted offset index /bitnami/kafka/data/ingest-7/00000000000179265040.index.deleted. (kafka.log.LogSegment)\n[2024-05-07 10:55:40,572] INFO Deleted log /bitnami/kafka/data/ingest-7/00000000000179265040.log.deleted. (kafka.log.LogSegment)\n```\n\n----------------------------------------\n\nTITLE: Defining New Structs in Go for Azure Network Management SDK\nDESCRIPTION: This snippet demonstrates the declaration of new structs for various Azure networking resources, including Action, RouteMap, and clients for managing different services.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\ntype Action struct {\n    // ... (fields)\n}\n\ntype ApplicationGatewayFirewallManifestRuleSet struct {\n    // ... (fields)\n}\n\ntype ApplicationGatewayWafDynamicManifestPropertiesResult struct {\n    // ... (fields)\n}\n\n// ... (other structs)\n\ntype VipSwapClientListResponse struct {\n    // ... (fields)\n}\n\ntype VirtualHubsClientBeginGetInboundRoutesOptions struct {\n    // ... (fields)\n}\n\ntype VirtualHubsClientGetInboundRoutesResponse struct {\n    // ... (fields)\n}\n```\n\n----------------------------------------\n\nTITLE: Required rbenv Configuration for Bash Profile\nDESCRIPTION: Environment variables and initialization commands that should be added to the bash profile to ensure rbenv works correctly.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/logstash/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"$HOME/.rbenv/bin:$PATH\"\neval \"$(rbenv init -)\"\n```\n\n----------------------------------------\n\nTITLE: Enforcing Rules in Go with Lip Gloss\nDESCRIPTION: Shows how to enforce specific rendering rules like inline formatting and maximum dimensions.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/charmbracelet/lipgloss/README.md#2025-04-19_snippet_17\n\nLANGUAGE: go\nCODE:\n```\n// Force rendering onto a single line, ignoring margins, padding, and borders.\nsomeStyle.Inline(true).Render(\"yadda yadda\")\n\n// Also limit rendering to five cells\nsomeStyle.Inline(true).MaxWidth(5).Render(\"yadda yadda\")\n\n// Limit rendering to a 5x5 cell block\nsomeStyle.MaxWidth(5).MaxHeight(5).Render(\"yadda yadda\")\n```\n\n----------------------------------------\n\nTITLE: Implementing Wrapper Interface for Custom Error Types in Go\nDESCRIPTION: Shows how to implement the Wrapper interface for custom error types to leverage errwrap functionality. It includes an example of a custom AppError type and demonstrates how to use errwrap.ContainsType with this custom type.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/errwrap/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype AppError {\n  Code ErrorCode\n  Err  error\n}\n\nfunc (e *AppError) WrappedErrors() []error {\n  return []error{e.Err}\n}\n\n// Usage example\nerr := &AppError{Err: fmt.Errorf(\"an error\")}\nif errwrap.ContainsType(err, fmt.Errorf(\"\")) {\n\t// This will work!\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Go Module for Consul Project\nDESCRIPTION: Creates a new Go module for the Consul demo project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/consul/api/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo mod init consul-demo\n```\n\n----------------------------------------\n\nTITLE: Configuring HuaweiCloud OBS Storage in Thanos\nDESCRIPTION: YAML configuration for setting up HuaweiCloud Object Storage Service (OBS) in Thanos with authentication parameters and HTTP connection settings.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/README.md#2025-04-19_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\ntype: OBS\nconfig:\n  bucket: \"\"\n  endpoint: \"\"\n  access_key: \"\"\n  secret_key: \"\"\n  http_config:\n    idle_conn_timeout: 1m30s\n    response_header_timeout: 2m\n    insecure_skip_verify: false\n    tls_handshake_timeout: 10s\n    expect_continue_timeout: 1s\n    max_idle_conns: 100\n    max_idle_conns_per_host: 100\n    max_conns_per_host: 0\n    tls_config:\n      ca_file: \"\"\n      cert_file: \"\"\n      key_file: \"\"\n      server_name: \"\"\n      insecure_skip_verify: false\n    disable_compression: false\nprefix: \"\"\n```\n\n----------------------------------------\n\nTITLE: Context-based Trace Nesting in Go\nDESCRIPTION: Creates nested traces using context.Context to manage the trace hierarchy. This approach allows traces to be passed through function calls, enabling proper nesting even across different functions or packages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/k8s.io/utils/trace/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc doSomething(ctx context.Context) {\n    opTrace := trace.FromContext(ctx).Nest(\"operation\") // create a trace, possibly nested\n    ctx = trace.ContextWithTrace(ctx, opTrace) // make this trace the parent trace of the context\n    defer opTrace.LogIfLong(50 * time.Millisecond)\n    \n    doSomethingElse(ctx)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Datasource in Grafana\nDESCRIPTION: YAML configuration for setting up a Loki datasource in Grafana using provisioning. This configuration specifies the connection details including the tenant ID and endpoint URL for accessing the Loki query frontend.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/howto_connect_grafana.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: 1\ndatasources:\n- name: Loki (${LOKI_TENANT_ID})\n  isDefault: true\n  type: loki\n  access: proxy\n  url: http://${LOKISTACK_NAME}-query-frontend-http.default.svc:3100/\n  jsonData:\n    httpHeaderName1: X-Scope-OrgID\n  secureJsonData:\n    httpHeaderValue1: ${LOKI_TENANT_ID}\n```\n\n----------------------------------------\n\nTITLE: Installing mapstructure Go Library\nDESCRIPTION: Shows how to install the mapstructure Go library using the standard go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/mitchellh/mapstructure/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go get github.com/mitchellh/mapstructure\n```\n\n----------------------------------------\n\nTITLE: Including CSS Stylesheet for LogQL Simulator\nDESCRIPTION: This HTML snippet links an external CSS file to style the LogQL simulator interface.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/analyzer.md#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<link rel=\"stylesheet\" href=\"../analyzer/style.css\">\n```\n\n----------------------------------------\n\nTITLE: Install Promtail on EC2\nDESCRIPTION: Downloads and configures Promtail binary on the EC2 instance\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/ec2/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmkdir /opt/promtail && cd /opt/promtail\ncurl -O -L \"https://github.com/grafana/loki/releases/download/v2.0.0/promtail-linux-amd64.zip\"\nunzip \"promtail-linux-amd64.zip\"\nchmod a+x \"promtail-linux-amd64\"\n```\n\n----------------------------------------\n\nTITLE: Documenting Reverse Tree Traversal Feature in Markdown\nDESCRIPTION: Documents the addition of reverse tree traversal functionality in version 1.3.0 of the go-immutable-radix library. This feature was introduced through a GitHub pull request.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-immutable-radix/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Add reverse tree traversal [[GH-30](https://github.com/hashicorp/go-immutable-radix/pull/30)]\n```\n\n----------------------------------------\n\nTITLE: Implementing Translation Service with Concrete Client in Go\nDESCRIPTION: Example function demonstrating text translation using Google Cloud Translate API client. Takes a concrete TranslationClient instance and performs text translation with error handling.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/testing.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n        \"context\"\n        \"fmt\"\n        \"log\"\n        \"os\"\n\n        translate \"cloud.google.com/go/translate/apiv3\"\n        \"github.com/googleapis/gax-go/v2\"\n        translatepb \"google.golang.org/genproto/googleapis/cloud/translate/v3\"\n)\n\nfunc TranslateTextWithConcreteClient(client *translate.TranslationClient, text string, targetLang string) (string, error) {\n        ctx := context.Background()\n        log.Printf(\"Translating %q to %q\", text, targetLang)\n        req := &translatepb.TranslateTextRequest{\n                Parent:             fmt.Sprintf(\"projects/%s/locations/global\", os.Getenv(\"GOOGLE_CLOUD_PROJECT\")),\n                TargetLanguageCode: \"en-US\",\n                Contents:           []string{text},\n        }\n        resp, err := client.TranslateText(ctx, req)\n        if err != nil {\n                return \"\", fmt.Errorf(\"unable to translate text: %v\", err)\n        }\n        translations := resp.GetTranslations()\n        if len(translations) != 1 {\n                return \"\", fmt.Errorf(\"expected only one result, got %d\", len(translations))\n        }\n        return translations[0].TranslatedText, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki with BasicAuth in Traefik (HCL)\nDESCRIPTION: HCL configuration to set up BasicAuth for Loki in Traefik. It includes tags for enabling Traefik, setting up the router, and configuring BasicAuth middleware.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\ntags = [\n  \"traefik.enable=true\",\n  \"traefik.http.routers.loki.entrypoints=https\",\n  \"traefik.http.routers.loki.rule=Host(`loki.service.consul`)\",\n  \"traefik.http.middlewares.loki.basicauth.users=promtail:$apr1$Lr55BanK$BV/rE2POaOolkFz8kIfY4/\",\n  \"traefik.http.routers.loki.middlewares=loki@consulcatalog\",\n]\n```\n\n----------------------------------------\n\nTITLE: Updating Go Dependencies for Grafana Loki\nDESCRIPTION: This snippet demonstrates how to update a Go dependency to a patched version, tidy the go.mod file, and update the vendor directory. It's used when manually patching Go dependencies that haven't been addressed by dependabot.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/community/maintaining/release/patch-vulnerabilities.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get -u -v <package-path>@<patched-version>\ngo mod tidy\ngo mod vendor\n```\n\n----------------------------------------\n\nTITLE: Installing go-str2duration Package in Go\nDESCRIPTION: Command to download and install the go-str2duration package using Go modules.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/xhit/go-str2duration/v2/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/xhit/go-str2duration/v2\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Schema Version for OTLP Support\nDESCRIPTION: YAML configuration for setting up a LokiStack with schema version v13, which is required for OTLP log ingestion with structured metadata support. This snippet shows how to set the schema version and effective date.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/user-guides/open-telemetry.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# [...]\nspec:\n  storage:\n    schemas:\n    - version: v13\n      effectiveDate: 2024-10-25\n```\n\n----------------------------------------\n\nTITLE: Importing Afero in Go\nDESCRIPTION: This snippet shows how to import the Afero library in a Go application.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/spf13/afero/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/spf13/afero\"\n```\n\n----------------------------------------\n\nTITLE: Docker Pull Command for Loki Canary\nDESCRIPTION: Command to pull the Loki Canary Docker container image from the registry.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/loki-canary/_index.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# change tag to the most recent release\n$ docker pull grafana/loki-canary:2.9.2\n```\n\n----------------------------------------\n\nTITLE: Label Value Length Validation Error Properties\nDESCRIPTION: Configuration and response properties for the label_value_too_long error that occurs when label values exceed the maximum allowed length.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/operations/request-validation-rate-limits.md#2025-04-19_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                | Value             |\n|-------------------------|-------------------|\n| Enforced by             | `distributor`     |\n| Outcome                 | Request rejected  |\n| Retryable               | **No**            |\n| Sample discarded        | **Yes**           |\n| Configurable per tenant | Yes               |\n| HTTP status code        | `400 Bad Request` |\n```\n\n----------------------------------------\n\nTITLE: Adding k3d Registry to Hosts File\nDESCRIPTION: Command to add the k3d registry hostname to the local hosts file to ensure Docker can resolve it properly.\nSOURCE: https://github.com/grafana/loki/blob/main/tools/dev/k3d/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n127.0.0.1 k3d-grafana\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Reference for v0.77.0\nDESCRIPTION: Link to GitHub comparison between v0.76.0 and v0.77.0 releases showing all changes in this version update.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n(https://www.github.com/googleapis/google-cloud-go/compare/v0.76.0...v0.77.0)\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Longrunning Package with Go\nDESCRIPTION: Command to install the longrunning package using the Go package manager. This package provides utilities for working with long running operations in Google Cloud Platform.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/longrunning/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get cloud.google.com/go/longrunning\n```\n\n----------------------------------------\n\nTITLE: Creating a Push-based Pub/Sub Subscription in GCP using gcloud CLI\nDESCRIPTION: This command creates a push-based subscription for the Pub/Sub topic. GCP will use this subscription to send log entries to a web server that Promtail listens on.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/cloud/gcp/_index.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngcloud pubsub subscriptions create cloud-logs \\\n--topic=$TOPIC_ID \\\n--push-endpoint=$HTTPS_PUSH_ENDPOINT_URI\n```\n\n----------------------------------------\n\nTITLE: Running Go Benchmarks Command\nDESCRIPTION: Command to execute benchmarks with 30 second runtime per benchmark\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-openapi/swag/BENCHMARK.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo test -bench XXX -run XXX -benchtime 30s\n```\n\n----------------------------------------\n\nTITLE: HTML Comment for Custom Contact Information\nDESCRIPTION: HTML comment template providing guidance on how to add custom contact information such as Slack channels and mailing lists specific to the project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!---\nCustom Information - if you're copying this template for the first time you can add custom content here, for example:\n\n## Contact Information\n\n- [Slack channel](https://kubernetes.slack.com/messages/kubernetes-users) - Replace `kubernetes-users` with your slack channel string, this will send users directly to your channel. \n- [Mailing list](URL)\n\n-->\n```\n\n----------------------------------------\n\nTITLE: Setting Cardinality Limit Environment Variable in Console\nDESCRIPTION: Example showing how to set the OTEL_GO_X_CARDINALITY_LIMIT environment variable to 2000, which establishes a hard limit on the number of metric streams that can be collected for a single instrument.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nexport OTEL_GO_X_CARDINALITY_LIMIT=2000\n```\n\n----------------------------------------\n\nTITLE: Documenting New Features in Markdown\nDESCRIPTION: This snippet outlines the new features added in version 1.1.0 of the Azure SDK for Go, including ServicePrincipalToken retrieval using certificate-signed JWT and an example of creating a certificate-based ServicePrincipal.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## v1.1.0\n\n- Added mechanism to retrieve a ServicePrincipalToken using a certificate-signed JWT\n- Added an example of creating a certificate-based ServicePrincipal and retrieving an OAuth token using the certificate\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Stack Server with Docker\nDESCRIPTION: Docker command to run a redis-stack-server container for development and testing capabilities. Exposes port 6379 for Redis connections.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/redis/go-redis/v9/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\ndocker run -p 6379:6379 -it redis/redis-stack-server:edge\n```\n\n----------------------------------------\n\nTITLE: Reporting Security Vulnerabilities for Grafana Loki\nDESCRIPTION: Instructions for securely reporting security vulnerabilities discovered in Grafana Loki. It emphasizes the importance of private reporting to maintain security.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/distribution/reference/SECURITY.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Security Policy\n\n## Reporting a Vulnerability\n\nThe maintainers take security seriously. If you discover a security issue, please bring it to their attention right away!\n\nPlease DO NOT file a public issue, instead send your report privately to cncf-distribution-security@lists.cncf.io.\n```\n\n----------------------------------------\n\nTITLE: Sample Log Record Structure in JSON\nDESCRIPTION: Example JSON structure showing a Kubernetes log record with nested fields that can be used for label extraction.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/community-plugin.md#2025-04-19_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"kubernetes\": {\n    \"container_name\": \"promtail\",\n    \"pod_name\": \"promtail-xxx\",\n    \"namespace_name\": \"prod\",\n    \"labels\" : {\n        \"team\": \"x-men\"\n    }\n  },\n  \"HOSTNAME\": \"docker-desktop\",\n  \"log\" : \"a log line\",\n  \"time\": \"20190926T152206Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Version Changes in Markdown\nDESCRIPTION: This snippet outlines the changes made in version 1.0.0 of the Azure SDK for Go. It includes new features, modifications, and improvements to the SDK.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## v1.0.0\n\n- Added Logging inspectors to trace http.Request / Response\n- Added support for User-Agent header\n- Changed WithHeader PrepareDecorator to use set vs. add\n- Added JSON to error when unmarshalling fails\n- Added Client#Send method\n- Corrected case of \"Azure\" in package paths\n- Added \"to\" helpers, Azure helpers, and improved ease-of-use\n- Corrected golint issues\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackConditionType Enum in Go\nDESCRIPTION: LokiStackConditionType is an enum defining the condition types of a Loki deployment. It includes values for Degraded, Failed, Pending, Ready, and Warning states.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackConditionType string\n\nconst (\n    ConditionDegraded LokiStackConditionType = \"Degraded\"\n    ConditionFailed   LokiStackConditionType = \"Failed\"\n    ConditionPending  LokiStackConditionType = \"Pending\"\n    ConditionReady    LokiStackConditionType = \"Ready\"\n    ConditionWarning  LokiStackConditionType = \"Warning\"\n)\n```\n\n----------------------------------------\n\nTITLE: Updating AWS SDK Dynamodb Service in Go\nDESCRIPTION: Updates the AWS SDK DynamoDB service from version 1.13.0 to 1.14.0. This likely includes bug fixes and improvements to the DynamoDB client.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_21\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/service/dynamodb from 1.13.0 to 1.14.0\n```\n\n----------------------------------------\n\nTITLE: Handling Unexpected Errors with DPanic in Go\nDESCRIPTION: This snippet demonstrates the use of DPanic for handling errors that shouldn't occur in production. It logs at PanicLevel in development and ErrorLevel in production.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/zap/FAQ.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nif err != nil {\n  panic(fmt.Sprintf(\"shouldn't ever get here: %v\", err))\n}\n```\n\n----------------------------------------\n\nTITLE: Reviewing AppArmor Denial Logs in Kubernetes Environment\nDESCRIPTION: AppArmor denial audit logs showing blocked ptrace operations. These logs indicate that a process named 'pidof' is attempting to use ptrace with read permissions, but these operations are being blocked by the cri-containerd AppArmor profile.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_39\n\nLANGUAGE: plaintext\nCODE:\n```\naudit: type=1400 audit(1715083172.883:27): apparmor=\"DENIED\" operation=\"ptrace\" profile=\"cri-containerd.apparmor.d\" pid=36286 comm=\"pidof\" requested_mask=\"read\" denied_mask=\"read\" peer=\"unconfined\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up LogCLI Command Completion for Bash\nDESCRIPTION: Add the provided command to the .bashrc file to enable tab-completion for LogCLI in Bash shells.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/logcli/getting-started.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\neval \"$(logcli --completion-script-bash)\"\n```\n\n----------------------------------------\n\nTITLE: Fixing BlobDeleteType Enum Values\nDESCRIPTION: Directive to correct the BlobDeleteType enum values by defining 'None' and 'Permanent' as the only valid options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n- from: swagger-document\n  where: $.parameters\n  transform: >\n    delete $.BlobDeleteType.enum;\n    $.BlobDeleteType.enum = [\n        \"None\",\n        \"Permanent\"\n    ];\n```\n\n----------------------------------------\n\nTITLE: Running Benchmarks with Make in Go\nDESCRIPTION: Make commands for building, testing, formatting, benchmarking, and profiling the JSON parser project. These commands simplify the development process using Docker.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/buger/jsonparser/README.md#2025-04-19_snippet_1\n\nLANGUAGE: makefile\nCODE:\n```\n* `make build` - builds docker image, usually can be called only once\n* `make test` - run tests\n* `make fmt` - run go fmt\n* `make bench` - run benchmarks (if you need to run only single benchmark modify `BENCHMARK` variable in make file)\n* `make profile` - runs benchmark and generate 3 files-  `cpu.out`, `mem.mprof` and `benchmark.test` binary, which can be used for `go tool pprof`\n* `make bash` - enter container (i use it for running `go tool pprof` above)\n```\n\n----------------------------------------\n\nTITLE: Generating BasicAuth Credentials (Shell)\nDESCRIPTION: Shell command to generate BasicAuth credentials using Docker and Apache htpasswd. It creates a username 'promtail' with password 'password123'.\nSOURCE: https://github.com/grafana/loki/blob/main/production/nomad/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n> docker run --rm httpd:alpine htpasswd -nb promtail password123\npromtail:$apr1$Lr55BanK$BV/rE2POaOolkFz8kIfY4/\n```\n\n----------------------------------------\n\nTITLE: Redirecting Go Kit Logger to Stdlib Logger\nDESCRIPTION: Demonstrates how to redirect a Go Kit logger to use the standard library's logger, useful for integrating with legacy systems.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/log/README.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nlogger := kitlog.NewLogfmtLogger(kitlog.StdlibWriter{})\nlogger.Log(\"legacy\", true, \"msg\", \"at least it's something\")\n\n// Output:\n// 2016/01/01 12:34:56 legacy=true msg=\"at least it's something\"\n```\n\n----------------------------------------\n\nTITLE: Importing OpenCensus Tracing Provider in Go\nDESCRIPTION: Code snippet showing how to import the OpenCensus tracing provider to enable tracing functionality. This is required after v13.0.0 where tracing was refactored to provide a common interface.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/go-autorest/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport _ \"github.com/Azure/go-autorest/tracing/opencensus\"\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: A template for the boilerplate notice that should be included when applying the Apache License 2.0 to a project. The template includes placeholders for copyright year and owner, along with standard license text.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/service/internal/presigned-url/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Disabling UDP Address Re-resolving in Jaeger Go Client\nDESCRIPTION: Demonstrates how to disable the periodic re-resolving of the UDP server address, which is enabled by default. This can be done via a configuration option or environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nDisableAttemptReconnecting=true\n```\n\nLANGUAGE: shell\nCODE:\n```\nJAEGER_REPORTER_ATTEMPT_RECONNECTING_DISABLED=true\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Maphash Package\nDESCRIPTION: Documentation explaining the maphash package functionality, which uses Golang's runtime hash with AES instruction optimization when available.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/dolthub/maphash/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# maphash\\n\\nHash any `comparable` type using Golang's fast runtime hash.\\nUses [AES](https://en.wikipedia.org/wiki/AES_instruction_set) instructions when available.\n```\n\n----------------------------------------\n\nTITLE: Defining LokiStackStatus Struct in Go\nDESCRIPTION: LokiStackStatus defines the observed state of LokiStack. It includes fields for component status, storage status, and conditions.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_6\n\nLANGUAGE: go\nCODE:\n```\ntype LokiStackStatus struct {\n    Components *LokiStackComponentStatus `json:\"components,omitempty\"`\n    Storage    *LokiStackStorageStatus   `json:\"storage,omitempty\"`\n    Conditions []metav1.Condition        `json:\"conditions,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Loki Canary Authentication\nDESCRIPTION: Command to create a Kubernetes secret with username and password for the Loki canary to authenticate with the Loki gateway.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic canary-basic-auth \\\n  --from-literal=username=<USERNAME> \\\n  --from-literal=password=<PASSWORD> \\\n  -n loki\n```\n\n----------------------------------------\n\nTITLE: Container Preparation and Command Execution in Bash\nDESCRIPTION: This snippet shows a bash script that waits for a specific process to start, creates a symbolic link, and then executes a command. It's likely part of a container initialization process.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nwhile [ \"$(pidof plugins-pause)\" = \"\" ]; do sleep 0.5; done;\nln --force -s /proc/$(pidof hgrun-pause)/root/bin/hgrun /bin/hgrun;\n```\n\nLANGUAGE: bash\nCODE:\n```\nset -e; while [ \"$(pidof hgrun-pause)\" = \"\" ]; do sleep 0.5; done;\n```\n\n----------------------------------------\n\nTITLE: Creating OpenShift Logging Namespace for Storage Size Calculator\nDESCRIPTION: Command to create the openshift-logging namespace in the OpenShift cluster where the storage size calculator will be deployed.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/storage_size_calculator.md#2025-04-19_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nkubectl create ns openshift-logging\n```\n\n----------------------------------------\n\nTITLE: Exporting Service Client Methods\nDESCRIPTION: Directive to remove pager methods and export various generated methods in the ServiceClient for more control over container listing operations.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndirective:\n  - from: zz_service_client.go\n    where: $\n    transform: >\n      return $.\n        replace(/func \\(client \\*ServiceClient\\) NewListContainersSegmentPager\\(.+\\/\\/\\ listContainersSegmentCreateRequest creates the ListContainersSegment request/s, `//\\n// listContainersSegmentCreateRequest creates the ListContainersSegment request`).\n        replace(/\\(client \\*ServiceClient\\) listContainersSegmentCreateRequest\\(/, `(client *ServiceClient) ListContainersSegmentCreateRequest(`).\n        replace(/\\(client \\*ServiceClient\\) listContainersSegmentHandleResponse\\(/, `(client *ServiceClient) ListContainersSegmentHandleResponse(`);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Lessfilter with Chroma in Shell\nDESCRIPTION: Shell script example showing how to set up Chroma as a preprocessor for the less command using the LESSOPEN environment variable.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\nexport LESSOPEN='| p() { chroma --fail \"$1\" || cat \"$1\"; }; p \"%s\"'\n```\n\n----------------------------------------\n\nTITLE: Generating Changelog\nDESCRIPTION: Git command to generate a changelog between two release tags, showing commits with their authors and relative timestamps.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/MAINTAINERS.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ git log --no-color --pretty=format:'-%d %s (%cr) <%an>' <last_release_tag>..<latest_release_tag>\n```\n\n----------------------------------------\n\nTITLE: Using JSON-Iterator Unmarshal Method\nDESCRIPTION: Example showing how to replace the standard JSON Unmarshal method with JSON-Iterator's compatible implementation. The ConfigCompatibleWithStandardLibrary ensures drop-in compatibility.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/json-iterator/go/README.md#2025-04-19_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport jsoniter \"github.com/json-iterator/go\"\n\nvar json = jsoniter.ConfigCompatibleWithStandardLibrary\njson.Unmarshal(input, &data)\n```\n\n----------------------------------------\n\nTITLE: Custom Error Formatting\nDESCRIPTION: Shows how to customize the string representation of multiple errors by setting a custom ErrorFormat function on the multierror.Error struct.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-19_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nvar result *multierror.Error\n\n// ... accumulate errors here, maybe using Append\n\nif result != nil {\n\tresult.ErrorFormat = func([]error) string {\n\t\treturn \"errors!\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating from Unstructured to Structured Logging in Go\nDESCRIPTION: Demonstrates the difference between unstructured and structured logging approaches, showing how to convert a simple log statement to a structured format.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/go-kit/kit/log/README.md#2025-04-19_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Unstructured\nlog.Printf(\"HTTP server listening on %s\", addr)\n\n// Structured\nlogger.Log(\"transport\", \"HTTP\", \"addr\", addr, \"msg\", \"listening\")\n```\n\n----------------------------------------\n\nTITLE: Installing the multierr Package via Go Modules\nDESCRIPTION: Command to install the latest version of the multierr package using Go modules. This adds the dependency to your project and downloads the package.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.uber.org/multierr/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u go.uber.org/multierr@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Rubocop for Development\nDESCRIPTION: Command to install the Rubocop gem, which is a Ruby static code analyzer and formatter useful for development.\nSOURCE: https://github.com/grafana/loki/blob/main/clients/cmd/fluentd/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nruby -S gem install rubocop\n```\n\n----------------------------------------\n\nTITLE: Git Commit Signature Format\nDESCRIPTION: The required format for signing git commits, showing how to include the Signed-off-by line in commit messages.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/docker/go-metrics/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nSigned-off-by: Joe Smith <joe.smith@email.com>\n```\n\n----------------------------------------\n\nTITLE: Debugging Go Build Errors for Azure SDK on macOS\nDESCRIPTION: Example of build errors that occur when trying to build Go code that uses the Azure SDK on macOS without enabling cgo. The error shows undefined accessor symbols which indicates cgo wasn't enabled.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azidentity/TROUBLESHOOTING.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ GOOS=darwin go build\n# github.com/Azure/azure-sdk-for-go/sdk/azidentity/cache\n../../go/pkg/mod/github.com/!azure/azure-sdk-for-go/sdk/azidentity/cache@v0.3.0/darwin.go:18:19: undefined: accessor.New\n../../go/pkg/mod/github.com/!azure/azure-sdk-for-go/sdk/azidentity/cache@v0.3.0/darwin.go:18:38: undefined: accessor.WithAccount\n```\n\n----------------------------------------\n\nTITLE: Loki Helm Chart Major Version Changes Markdown\nDESCRIPTION: Changelog entries describing breaking changes, new features, and bugfixes for version 4.0 of the Loki Helm chart, including changes to enterprise configuration, deployment modes, and tenant management.\nSOURCE: https://github.com/grafana/loki/blob/main/production/helm/loki/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.0\n\n- [FEATURE] Added `enterprise.adminToken.additionalNamespaces` which are a list of additional namespaces to create secrets containing the GEL admin token in. This is especially useful if your Grafana instance is in another namespace.\n- [CHANGE] **BREAKING** Remove `enterprise.nginxConfig.file`. Both enterprise and gateway configurations now share the same nginx config, use `gateway.nginxConfig.file` for both. Admin routes will 404 on OSS deployments.\n- [CHANGE] **BREAKING** Default simple deployment mode to new, 3 target configuration (read, write, and backend). This new configuration allows the `read` target to be run as a deployment and auto-scaled. To go back to the legacy, 2 target configuration, set `read.legacyReadTraget` to `true`.\n- [CHANGE] **BREAKING** Change how tenants are defined\n- [CHANGE] **BREKAING** Remove `enterprise.adminTokenSecret`. This is now defined under `enterprise.adminToken.secret`.\n- [CHANGE] **BREKAING** Rename and change format of `enterprise.provisioner.tenants`. Property has been renamed to `enterprise.provisioner.additionalTenants`, and is now an array of objects rather than string. Each object must contain a `name` and a `secretNamespace` field, where `name` is the name of the tenant and `secretNamespace` is the namespace to create the secret with the tenant's read and write token.\n- [CHANGE] **BREAKING** Change the structure of `monitoring.selfMonitoring.tenant` from a string to an object. The new object must have a `name` and a `secretNamespace` field, where `name` is the name of the self-monitoring tenant and `secretNamespace` is the namespace to create an additional secret with the tenant's token. A secret will still also be created in the release namespace as it's needed by the Loki canary.\n- [CHANGE] **BREAKING** Remove ability to create self-monitoring resources in different namespaces (with the exception of dashboard configmaps).\n```\n\n----------------------------------------\n\nTITLE: Configuration Example - HTTPSupplier Interface\nDESCRIPTION: Interface definition for retrieving and storing values associated with an HTTP carrier in the propagation API.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_44\n\nLANGUAGE: Go\nCODE:\n```\n// HTTPSupplier interface to specify methods to retrieve and store a single value\n// for a key to be associated with a carrier.\n```\n\n----------------------------------------\n\nTITLE: Installing GopherLua Interpreter\nDESCRIPTION: Command to install the standalone GopherLua interpreter (glua) which provides similar functionality to the standard Lua interpreter.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/yuin/gopher-lua/README.rst#2025-04-19_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/yuin/gopher-lua/cmd/glua\n```\n\n----------------------------------------\n\nTITLE: Checking StatefulSet Status\nDESCRIPTION: Verifies the status of statefulsets created by the Loki Operator. Replace <STATEFULSET_NAME> with the actual statefulset name.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout status statefulset/<STATEFULSET_NAME>\n```\n\n----------------------------------------\n\nTITLE: Implementing Functional Option in Go\nDESCRIPTION: Shows how to implement a functional option using the Option interface pattern.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-19_snippet_9\n\nLANGUAGE: go\nCODE:\n```\ntype optionFunc func(config) config\n\nfunc (fn optionFunc) apply(c config) config {\n\treturn fn(c)\n}\n\n// WithMyType sets t as MyType.\nfunc WithMyType(t MyType) Option {\n\treturn optionFunc(func(c config) config {\n\t\tc.MyType = t\n        return c\n\t})\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring RoleBindingsSpec in YAML for Grafana Loki\nDESCRIPTION: RoleBindingsSpec binds a set of roles to a set of subjects, defining access control for Grafana Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/api.md#2025-04-19_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nroleBindingsSpec:\n  name: adminBinding\n  subjects:\n    - kind: User\n      name: admin@example.com\n  roles:\n    - admin\n    - editor\n```\n\n----------------------------------------\n\nTITLE: Running k6 Test Against Loki\nDESCRIPTION: Command to execute the k6 test script that validates the Loki deployment by writing logs and performing queries.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/install/helm/deployment-guides/azure.md#2025-04-19_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n./k6 run azure-test.js\n```\n\n----------------------------------------\n\nTITLE: Defining Styles in Chroma using XML\nDESCRIPTION: XML example showing how to define token styles in Chroma, setting foreground and background colors.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<entry type=\"Background\" style=\"#f8f8f2 bg:#000000\"/>\n```\n\n----------------------------------------\n\nTITLE: Examining Mount Deactivation in containerd\nDESCRIPTION: Log message showing the successful deactivation of a temporary mount point used by containerd.\nSOURCE: https://github.com/grafana/loki/blob/main/pkg/pattern/drain/testdata/journald.txt#2025-04-19_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nvar-lib-containerd-tmpmounts-containerd\\x2dmount777551232.mount: Deactivated successfully.\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Loki Operator\nDESCRIPTION: Cleans up the LokiStack instance, CRDs, and deployments from the cluster during the cleanup process.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmake uninstall\n```\n\n----------------------------------------\n\nTITLE: Required Go Packages for Building with Make\nDESCRIPTION: List of Go packages required for building the libc package using make. These packages are primarily linting and code analysis tools.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modernc.org/libc/README.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* github.com/golang/lint/golint\n* github.com/mdempsky/maligned\n* github.com/mdempsky/unconvert\n* honnef.co/go/tools/cmd/unused\n* honnef.co/go/tools/cmd/gosimple\n* github.com/client9/misspell/cmd/misspell\n```\n\n----------------------------------------\n\nTITLE: Cloning the Jaeger Client Go Repository\nDESCRIPTION: Commands to properly set up the Jaeger client Go repository in the correct location relative to $GOPATH and initialize its dependencies.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/uber/jaeger-client-go/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p $GOPATH/src/github.com/uber\ncd $GOPATH/src/github.com/uber\ngit clone git@github.com:jaegertracing/jaeger-client-go.git jaeger-client-go\ncd jaeger-client-go\ngit submodule update --init --recursive\n```\n\n----------------------------------------\n\nTITLE: Markdown Link with Badge for Prometheus Go Client\nDESCRIPTION: Markdown syntax for displaying a Go Reference badge and link to the Prometheus client Go library documentation page\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/prometheus/client_golang/prometheus/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Go Reference](https://pkg.go.dev/badge/github.com/prometheus/client_golang/prometheus.svg)](https://pkg.go.dev/github.com/prometheus/client_golang/prometheus)\n```\n\n----------------------------------------\n\nTITLE: Version History Entry Format - Markdown\nDESCRIPTION: Standardized changelog entry format using Markdown headings and bullet points to document version changes\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/config/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# v1.15.4 (2022-04-25)\n\n* **Dependency Update**: Updated to the latest SDK module versions\n```\n\n----------------------------------------\n\nTITLE: Supporting ApiVersionsRequest v3 Protocol\nDESCRIPTION: Adds support for version 3 of the ApiVersionsRequest protocol in Sarama.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\nfeat: support ApiVersionsRequest V3 protocol\n```\n\n----------------------------------------\n\nTITLE: Configuring Secret Store in Telegraf Agent\nDESCRIPTION: Implements a secret store feature in the Telegraf agent for securely handling sensitive information.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n\"agent\" Secret-store implementation\n```\n\n----------------------------------------\n\nTITLE: Switching Kubernetes Context\nDESCRIPTION: Sets the current Kubernetes context to the specified context name for cluster communication.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config use-context $CONTEXTNAME\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry SDK Badge in Markdown\nDESCRIPTION: Markdown code that displays a PkgGoDev badge linking to the OpenTelemetry SDK documentation on pkg.go.dev\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/sdk/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk)\n```\n\n----------------------------------------\n\nTITLE: Removing Pattern Ingester Configuration in YAML\nDESCRIPTION: Removes the 'enabled' field from the pattern ingester configuration in the local Loki configuration file\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npattern_ingester:\\n  enabled: false\n```\n\n----------------------------------------\n\nTITLE: Promtail Deprecation YAML Frontmatter\nDESCRIPTION: YAML frontmatter metadata defining the document properties including description and product labels for both enterprise and open source versions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/shared/promtail-deprecation.md#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndescription: Deprecation notice for Promtail.\nheadless: true\nlabels:\n  products:\n    - enterprise\n    - oss\n---\n```\n\n----------------------------------------\n\nTITLE: Executing Release Identification Script in Bash\nDESCRIPTION: This snippet demonstrates how to use the 'which-release.sh' script to identify which releases contain a specific commit. It shows the command and example output, including stable and weekly releases.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/cadence.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ ./tools/which-release.sh d434e80                                 \nCommit was found in the following releases:\n  release-2.8.x\nCommit was found in the following weekly builds:\n  k136\n  k137\n  k138\n  k139\n  k140\n  k141\n  k142\n```\n\n----------------------------------------\n\nTITLE: Git Commit History Review Command\nDESCRIPTION: Shell command to review commit history between releases for changelog updates.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/RELEASING.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit --no-pager log --pretty=oneline \"<last tag>..HEAD\"\n```\n\n----------------------------------------\n\nTITLE: Running Telegraf Development Checks\nDESCRIPTION: Commands for running various development checks and tests before submitting a pull request, including linting, dependency checks, and unit tests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake lint\nmake check\nmake check-deps\nmake test\nmake docs\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Logging Driver\nDESCRIPTION: Command to determine which logging driver Docker is using.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/logrotation/_index.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n docker info --format '{{.LoggingDriver}}'\n```\n\n----------------------------------------\n\nTITLE: Kafka Partition Reader Startup Fix\nDESCRIPTION: Bug fix ensuring correct startup behavior of Kafka partition reader component.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-4.md#2025-04-19_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nb2f3d2e36e91e89e449c2246e0f917524dbd8938\n```\n\n----------------------------------------\n\nTITLE: Accessing Log Line Properties in LogQL Templates\nDESCRIPTION: Demonstrates how to access log line properties and built-in variables in LogQL template expressions.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/query/template_functions.md#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ .path }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ __line__ | lower }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ __line__ }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ __timestamp__ }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ __timestamp__ | date \"2006-01-02T15:04:05.00Z-07:00\" }}\n```\n\nLANGUAGE: go\nCODE:\n```\n{{ __timestamp__ | unixEpoch }}\n```\n\n----------------------------------------\n\nTITLE: Parsing Conntrack Stats in Telegraf\nDESCRIPTION: Implements parsing of conntrack statistics in the conntrack input plugin.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n\"inputs.conntrack\" Parse conntrack stats\n```\n\n----------------------------------------\n\nTITLE: Output Stage Configuration in YAML\nDESCRIPTION: Configuration for the output stage that sets the contents of log entries to be stored by Loki.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/promtail/configuration.md#2025-04-19_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\noutput:\n  source: <string>\n```\n\n----------------------------------------\n\nTITLE: Basic Printing in Go\nDESCRIPTION: Standard Go fmt package function for basic formatted printing without line break\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/thanos-io/objstore/.errcheck_excludes.txt#2025-04-19_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfmt.Fprint\n```\n\n----------------------------------------\n\nTITLE: Implementing MetadataRequest v7 in Go for Kafka Protocol\nDESCRIPTION: Adds support for version 7 of the MetadataRequest in the Kafka protocol implementation.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/IBM/sarama/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nfeat(proto): implement and use MetadataRequest v7\n```\n\n----------------------------------------\n\nTITLE: Issue Reference for Profiler Retry Handling Fix\nDESCRIPTION: Issue reference for ensuring retries use the most up-to-date copy of the trailer in the Profiler service.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/CHANGES.md#2025-04-19_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n([#3660](https://www.github.com/googleapis/google-cloud-go/issues/3660))\n```\n\n----------------------------------------\n\nTITLE: Running Lexer Tests in Shell\nDESCRIPTION: Shell command showing how to run tests for the lexers in Chroma.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/alecthomas/chroma/v2/README.md#2025-04-19_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\ngo test ./lexers\n```\n\n----------------------------------------\n\nTITLE: Integration with Existing Code in Go\nDESCRIPTION: Examples of using color functions with existing code and managing color states\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/fatih/color/README.md#2025-04-19_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n// Use handy standard colors\ncolor.Set(color.FgYellow)\n\nfmt.Println(\"Existing text will now be in yellow\")\nfmt.Printf(\"This one %s\\n\", \"too\")\n\ncolor.Unset() // Don't forget to unset\n\n// You can mix up parameters\ncolor.Set(color.FgMagenta, color.Bold)\ndefer color.Unset() // Use it in your function\n\nfmt.Println(\"All text will now be bold magenta.\")\n```\n\n----------------------------------------\n\nTITLE: Checking Library Version in API File\nDESCRIPTION: Command to verify the library version in api.go file after updating it for the next release.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/MAINTAINERS.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ grep libraryVersion api.go\n      libraryVersion = \"4.0.1\"\n```\n\n----------------------------------------\n\nTITLE: Adding Binary Parser to Telegraf\nDESCRIPTION: Implements a new binary parser in Telegraf.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_19\n\nLANGUAGE: go\nCODE:\n```\n\"parsers\" Add binary parser\n```\n\n----------------------------------------\n\nTITLE: Helm Uninstall Command\nDESCRIPTION: Command to uninstall the old loki-distributed Helm release.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/setup/migrate/migrate-from-distributed/index.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm uninstall -n loki loki-distributed\n```\n\n----------------------------------------\n\nTITLE: Issue Links\nDESCRIPTION: GitHub issue reference links\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/iam/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[#11933](https://github.com/googleapis/google-cloud-go/issues/11933)\n```\n\n----------------------------------------\n\nTITLE: Updating System Monitoring Library in Go\nDESCRIPTION: Updates the gopsutil system monitoring library from version 3.21.12 to 3.22.2. This major version bump likely includes significant changes or new features.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/influxdata/telegraf/CHANGELOG.md#2025-04-19_snippet_24\n\nLANGUAGE: go\nCODE:\n```\ngithub.com/shirou/gopsutil/v3 from 3.21.12 to 3.22.2\n```\n\n----------------------------------------\n\nTITLE: Installing termenv using Go get\nDESCRIPTION: This command installs the termenv library using the go get command.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/muesli/termenv\n```\n\n----------------------------------------\n\nTITLE: Deploying Loki Operator and LokiStack using Make\nDESCRIPTION: This command deploys the Loki Operator and a LokiStack for demo purposes using the default configuration.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/prologue/quickstart.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake quickstart\n```\n\n----------------------------------------\n\nTITLE: Committing Version Update\nDESCRIPTION: Git commit command for updating the version number, using the MinIO Trusted author.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/minio/minio-go/v7/MAINTAINERS.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ git commit -a -m \"Update version for next release\" --author \"MinIO Trusted <trusted@min.io>\"\n```\n\n----------------------------------------\n\nTITLE: Tagging Version in Git for Yaml Project Release\nDESCRIPTION: This command is used to create a signed Git tag for the new version release. It requires the version number to be specified and the changelog to be inserted.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/sigs.k8s.io/yaml/RELEASE.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit tag -s $VERSION\n```\n\n----------------------------------------\n\nTITLE: Setting Terminal Foreground Color with ANSI Escape Sequence\nDESCRIPTION: Uses ANSI escape sequence to change the terminal's text (foreground) color to blue. The sequence '\\033]10;#0000ff\\007' instructs the terminal emulator to set the foreground color using the RGB hex value #0000ff (blue).\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/muesli/termenv/ansi_compat.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho -ne \"\\033]10;#0000ff\\007\"\n```\n\n----------------------------------------\n\nTITLE: Reloading Fluent Bit Configuration\nDESCRIPTION: Restart the Fluent Bit container to apply the new configuration and verify the logs.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/send-data/fluentbit/fluent-bit-loki-tutorial.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker restart loki-fundamentals-fluent-bit-1\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker logs loki-fundamentals-fluent-bit-1\n```\n\n----------------------------------------\n\nTITLE: Cloning ARM ClientOptions in Go\nDESCRIPTION: Shows how to use the Clone() method for arm/policy.ClientOptions to create a copy of the options.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\noriginalOptions := arm.ClientOptions{}\n// Configure originalOptions\nclonedOptions := originalOptions.Clone()\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation from Examples in Loki\nDESCRIPTION: Command to generate documentation by processing the examples in the directory. Updates the Loki documentation with new examples and snippets.\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/configure/examples/yaml/README.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake generate-example-config-doc\n```\n\n----------------------------------------\n\nTITLE: Displaying Help Information for Chunks Inspection Tool\nDESCRIPTION: Shows the help menu for the chunks-inspect tool, listing available command-line parameters including options to print block details (-b), print log lines (-l), and store blocks (-s).\nSOURCE: https://github.com/grafana/loki/blob/main/cmd/chunks-inspect/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ ./chunks-inspect -h\nUsage of ./chunks-inspect:\n  -b\tprint block details\n  -l\tprint log lines\n  -s\tstore blocks, using input filename, and appending block index to it\n```\n\n----------------------------------------\n\nTITLE: Listing Deployments\nDESCRIPTION: Retrieves a list of all deployments in the cluster, which can be used to check Loki component deployments.\nSOURCE: https://github.com/grafana/loki/blob/main/operator/docs/operator/hack_operator_make_run.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployments\n```\n\n----------------------------------------\n\nTITLE: Storage Bug Fix: Proto Dependency Migration\nDESCRIPTION: Migration of deprecated proto dependency to newer version in Google Cloud Storage.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/cloud.google.com/go/storage/CHANGES.md#2025-04-19_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Code Change Example - Label Encoding\nDESCRIPTION: Code snippet showing the optimization of label encoding to be performed during checkpoint rather than every collection interval.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_43\n\nLANGUAGE: Go\nCODE:\n```\n// Encode labels once during checkpoint.\n// The checkpoint function is executed in a single thread so we can do the encoding lazily\n// before passing the encoded version of labels to the exporter.\n// This is a cheap and quick way to avoid encoding the labels on every collection interval.\n```\n\n----------------------------------------\n\nTITLE: Optimizing SimpleProcessor.OnEmit in Go SDK\nDESCRIPTION: SimpleProcessor.OnEmit in go.opentelemetry.io/otel/sdk/log no longer allocates a slice, making it possible to have zero-allocation log processing using SimpleProcessor.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\n// Optimized SimpleProcessor.OnEmit\nfunc (p *SimpleProcessor) OnEmit(ctx context.Context, record Record) error {\n  // Implementation not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Importing AWS SDK Go v2 EC2 IMDS Package\nDESCRIPTION: Imports the AWS SDK Go v2 EC2 Instance Metadata Service (IMDS) package for interacting with EC2 instance metadata.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/modules.txt#2025-04-19_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds/internal/config\n```\n\n----------------------------------------\n\nTITLE: Release History Documentation Structure - Markdown\nDESCRIPTION: Structured release history documentation showing version changes, features added, breaking changes and bug fixes across multiple Grafana Loki releases from 2.1.0 to 4.3.0.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v4/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Release History\n\n## 4.3.0 (2023-11-24)\n### Features Added\n\n- Support for test fakes and OpenTelemetry trace spans.\n\n\n## 4.3.0-beta.1 (2023-10-09)\n### Features Added\n\n- Support for test fakes and OpenTelemetry trace spans.\n\n## 4.2.0 (2023-09-22)\n### Features Added\n\n- New struct `BastionHostPropertiesFormatNetworkACLs`\n- New struct `IPRule`\n- New struct `VirtualNetworkGatewayAutoScaleBounds`\n- New struct `VirtualNetworkGatewayAutoScaleConfiguration`\n- New field `NetworkACLs`, `VirtualNetwork` in struct `BastionHostPropertiesFormat`\n- New field `Size` in struct `FirewallPolicyPropertiesFormat`\n- New field `Size` in struct `FirewallPolicyRuleCollectionGroupProperties`\n- New field `DefaultOutboundAccess` in struct `SubnetPropertiesFormat`\n- New field `AutoScaleConfiguration` in struct `VirtualNetworkGatewayPropertiesFormat`\n```\n\n----------------------------------------\n\nTITLE: Configuring Token Request Options in Go\nDESCRIPTION: Shows how to set the TenantID field of policy.TokenRequestOptions for token requests.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\ntokenOptions := policy.TokenRequestOptions{\n    TenantID: \"myTenantID\"\n}\n```\n\n----------------------------------------\n\nTITLE: Project Creation and Update with Tags\nDESCRIPTION: Added tag support for project creation and update operations\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/gophercloud/gophercloud/v2/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: Go\nCODE:\n```\nidentity/v3/projects.CreateOpts.Tags\nidentity/v3/projects.UpdateOpts.Tags\nidentity/v3/projects.Project.Tags\n```\n\n----------------------------------------\n\nTITLE: Issue References in Markdown\nDESCRIPTION: GitHub issue references documenting various features and improvements implemented in Loki 3.2\nSOURCE: https://github.com/grafana/loki/blob/main/docs/sources/release-notes/v3-2.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#13421](https://github.com/grafana/loki/issues/13421)\n[#13604](https://github.com/grafana/loki/issues/13604)\n[#13960](https://github.com/grafana/loki/issues/13960)\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Application Template\nDESCRIPTION: Standard boilerplate notice for applying the Apache License 2.0 to a software project. Includes copyright notice, license declaration, and terms reference.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/github.com/aws/aws-sdk-go-v2/feature/ec2/imds/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Installing the SQLite Go Package\nDESCRIPTION: This command installs the zombiezen.com/go/sqlite package using the go get command. It's the first step to start using this SQLite interface in a Go project.\nSOURCE: https://github.com/grafana/loki/blob/main/vendor/zombiezen.com/go/sqlite/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get zombiezen.com/go/sqlite\n```"
  }
]
[
  {
    "owner": "frontify",
    "repo": "fondue",
    "content": "TITLE: Migrating Accordion Component in React/TSX\nDESCRIPTION: Shows the transition from the old Accordion component structure to the new composition-based approach using Accordion.Root, Accordion.Item, Accordion.Header, Accordion.Trigger, and Accordion.Content subcomponents. The new implementation uses Radix UI patterns with explicit state management through value/defaultValue props.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<Accordion border divider>\n  <AccordionItem\n    header={{ children: 'Header 1', active: true }}\n    padding={false}\n  >\n    Content 1\n  </AccordionItem>\n  <AccordionItem\n    header={{ children: 'Header 2' }}\n  >\n    Content 2\n  </AccordionItem>\n</Accordion>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<Accordion.Root border defaultValue={[\"item1\"]}>\n  <Accordion.Item value=\"item1\">\n    <Accordion.Header>\n      <Accordion.Trigger>\n        Header 1\n      </Accordion.Trigger>\n    </Accordion.Header>\n    <Accordion.Content padding=\"none\" divider>\n      Content 1\n    </Accordion.Content>\n  </Accordion.Item>\n\n  <Accordion.Item value=\"item2\">\n    <Accordion.Trigger>\n      Header 2\n    </Accordion.Trigger>\n    <Accordion.Content divider>\n      Content 2\n    </Accordion.Content>\n  </Accordion.Item>\n</Accordion.Root>\n```\n\n----------------------------------------\n\nTITLE: Using the New Dialog Component with Composable Structure in React\nDESCRIPTION: This example demonstrates the new Dialog component implementation using a composable structure with Dialog.Root, Dialog.Trigger, Dialog.Content and other subcomponents. It includes a side content area, header, body with spacious padding, and a footer with a close button.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n<Dialog.Root>\n    <Dialog.Trigger>\n        <Button>\n            <IconIcon />\n            Dialog Trigger\n        </Button>\n    </Dialog.Trigger>\n    <Dialog.Content>\n        <Dialog.SideContent>\n            <div className=\"tw-bg-box-positive-strong tw-h-full tw-w-full\"></div>\n        </Dialog.SideContent>\n        <Dialog.Header>Header</Dialog.Header>\n        <Dialog.Body padding=\"spacious\">\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad illum impedit iure numquam praesentium vel.\n            Distinctio perferendis, suscipit! Dolor doloremque et ex, modi nobis officiis perspiciatis quis tempora\n            temporibus voluptates?\n        </Dialog.Body>\n        <Dialog.Footer>\n            <Button onPress={() => {}}>Close</Button>\n        </Dialog.Footer>\n    </Dialog.Content>\n</Dialog.Root>\n```\n\n----------------------------------------\n\nTITLE: Implementing Fondue ThemeProvider\nDESCRIPTION: Demonstrates how to set up the ThemeProvider component to apply theme tokens to your application. This feature was introduced in v12.4.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/1 - Getting Started.mdx#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport \"@frontify/fondue/tokens/themes\";\nimport { ThemeProvider } \"@frontify/fondue/components\";\n\nconst App = () => (\n    <ThemeProvider theme=\"light\">\n        ...YourApp\n    </ThemeProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Using the New Dropdown Component with Composable Structure in React\nDESCRIPTION: This example demonstrates the new Dropdown component implementation using a composable structure with Dropdown.Root, Dropdown.Trigger, Dropdown.Content, and Dropdown.Item subcomponents. It includes various item types including decorated items, disabled items, and link items with full control over styling and behavior.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\n<Dropdown.Root onOpenChange={() => {}} open={open}>\n    <Dropdown.Trigger>\n        <Button>Trigger</Button>\n    </Dropdown.Trigger>\n    <Dropdown.Content onOpen={() => {}}  onClose={() => {}}>\n        <Dropdown.Item onSelect={() => {}}>Item default</Dropdown.Item>\n        <Dropdown.Item onSelect={() => {}}>\n            <span className=\"tw-text-sm\">Item small</span>\n        </Dropdown.Item>\n        <Dropdown.Item onSelect={() => {}}>\n            <Dropdown.Slot name=\"left\">\n                <IconIcon size={16} />\n            </Dropdown.Slot>\n            Item decorator\n        </Dropdown.Item>\n        <hr />\n        <Dropdown.Item disabled>\n            Item disabled\n        </Dropdown.Item>\n        <Dropdown.Item onSelect={() => {}}>\n            <span className=\"tw-bg-red-50\">Item danger</span>\n        </Dropdown.Item>\n        <Dropdown.Item>\n            <a href=\"https://www.frontify.com/\" target=\"_blank\">Item link</span>\n        </Dropdown.Item>\n    </Dropdown.Content>\n</Dropdown.Root>\n```\n\n----------------------------------------\n\nTITLE: Importing Refactored Fondue Components\nDESCRIPTION: Demonstrates how to import and use refactored components from the Fondue design system using the /components subexport path.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/1 - Getting Started.mdx#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from '@frontify/fondue/components';\n\nconst App = () => <Button>Click Me</Button>;\n```\n\n----------------------------------------\n\nTITLE: Migrating from Old Dialog Implementation to New Composable Structure in React\nDESCRIPTION: This example shows how to migrate from the old Dialog implementation that used a conditional rendering approach to the new composable structure that uses Dialog.Root, Dialog.Trigger, Dialog.Content and other subcomponents. The new implementation provides better accessibility and more flexibility in styling and structure.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst [isOpen, setIsOpen] = useState(false);\n\nreturn (\n    <Button icon={<IconIcon/>} ref={triggerRef} onClick={() => setIsOpen(!isOpen)}>\n        Dialog Trigger\n    </Button>\n\n    <Dialog anchor={triggerRef} open={isOpen} handleClose={() => setIsOpen(false)}>\n        <DialogHeader>Header</DialogHeader>\n        <DialogBody padding=\"spacious\">\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad illum impedit iure numquam praesentium vel.\n                Distinctio perferendis, suscipit! Dolor doloremque et ex, modi nobis officiis perspiciatis quis tempora\n                temporibus voluptates?\n            </p>\n        </DialogBody>\n        <DialogFooter\n            actionButtons={[\n                {\n                    children: 'Close',\n                    onClick: () => {},\n                },\n            ]}\n        ></DialogFooter>\n    </Dialog>\n)\n```\n\n----------------------------------------\n\nTITLE: Importing Fondue Components\nDESCRIPTION: Example of importing a Button component from the Fondue design system.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/README.md#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Button } from '@frontify/fondue';\n```\n\n----------------------------------------\n\nTITLE: Migrating from Old Dropdown/Menu Implementation to New Composable Structure\nDESCRIPTION: This example shows how to migrate from the old Dropdown and Menu implementation that used menuBlocks or MenuItem components to the new composable structure with Dropdown.Root, Dropdown.Trigger, Dropdown.Content, and Dropdown.Item subcomponents. The new implementation provides more flexibility and control over the content.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\n<Dropdown menuBlocks={[\n    {\n        id: 'block1',\n        ariaLabel: 'First section',\n        menuItems: [\n            {\n                id: 1,\n                title: 'Item default',\n            },\n            {\n                id: 2,\n                title: 'Item small',\n                size: MenuItemContentSize.Small,\n            },\n            {\n                id: 3,\n                title: 'Item decorator',\n                decorator: <IconMusicNote />,\n            },\n        ],\n    },\n    {\n        id: 'block2',\n        ariaLabel: 'Second section',\n        menuItems: [\n            {\n                id: '9',\n                title: 'Item disabled',\n                disabled: true,\n            },\n            {\n                id: '10',\n                title: 'Item danger',\n                style: MenuItemStyle.Danger,\n            },\n        ],\n    },\n]}>\n\n/* or */\n\n<Menu onClose={() => {}}>\n    <MenuItem onClick={() => {}}>Item default</MenuItem>\n    <MenuItem onClick={() => {}}>\n        <span className=\"tw-text-sm\">Item small</span>\n    </MenuItem>\n    <MenuItem onClick={() => {}}>\n        <div style={{display: \"flex\", gap: 8}}>\n            <IconIcon size={16} />\n            <span> Item decorator </span>\n        </div>\n    </MenuItem>\n    <hr />\n    <MenuItem disabled>\n        Item disabled\n    </MenuItem>\n    <MenuItem onClick={() => {}}>\n        <span className=\"tw-bg-red-50\">Item danger</span>\n    </MenuItem>\n    <MenuItem link=\"/?path=/docs/components-menu--docs\">\n        Item link\n    </MenuItem>\n</Menu>\n```\n\n----------------------------------------\n\nTITLE: Using Nested ThemeProviders in Fondue\nDESCRIPTION: Demonstrates how to nest ThemeProvider components to apply different themes to specific sections of your application. The closest provider will determine the theme used.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/1 - Getting Started.mdx#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n<ThemeProvider theme=\"light\">\n    <ComponentUsingLightTheme />\n    <ThemeProvider theme=\"dark\">\n        <ComponentUsingDarkTheme />\n    </ThemeProvider>\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Migrating Button Component in React/TSX\nDESCRIPTION: Demonstrates the changes in the Button component implementation. Key changes include using string union types instead of enums for props like size and style, replacing the icon prop with child components, renaming onClick to onPress, and removing hideLabel in favor of conditional children.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<Button\n    hugWidth\n    onClick={() => {}}\n    icon={<Icon.ColorFan16 />}\n    rounding={ButtonRounding.Medium}\n    size={ButtonSize.Medium}\n    style={ButtonStyle.Default}\n    type={ButtonType.Button}\n>\n    Button Text\n</Button>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<Button\n    aspect=\"default\"\n    emphasis=\"default\"\n    hugWidth\n    onPress={function Qa() {}}\n    rounding=\"medium\"\n    size=\"medium\"\n    style=\"default\"\n    type=\"button\"\n>\n    <IconColorFan size={16} />\n    Button Text\n</Button>\n```\n\n----------------------------------------\n\nTITLE: Importing Fondue Stylesheet\nDESCRIPTION: TypeScript import statement for including the Fondue stylesheet in your project.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/README.md#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport '@frontify/fondue/style';\n```\n\n----------------------------------------\n\nTITLE: Migrating Checkbox Component in React/TSX\nDESCRIPTION: Shows the migration from old Checkbox/Checklist components to the new Checkbox implementation. Changes include replacing state with value, using separate Label component instead of label prop, modified onChange signature, and removal of various props like hideLabel and groupInputProps.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<Checkbox\n    state={CheckboxState.Mixed}\n    label=\"My Checkbox\"\n    size={CheckboxSize.Large}\n    onChange={setValue}\n    tooltip={{ triggerIcon: <IconInfo />, content: 'Tooltip' }}\n    value=\"a random value\"\n    ariaLabel=\"My Checkbox\"\n/>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<ChecklistComponent direction={ChecklistDirection.Horizontal} checkboxes={[]} activeValues={[]} setActiveValues={[]} />\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<Checkbox id=\"checkbox-id\" size=\"large\" value=\"indeterminate\" onChange={() => {}} aria-label=\"My Checkbox\">\n<Label htmlFor=\"checkbox-id\">\n    My Checkbox\n    <Tooltip.Root>\n        <Tooltip.Trigger>\n            <IconInfo />\n        </Tooltip.Trigger>\n        <Tooltip.Content>Tooltip</Tooltip.Content>\n    </Tooltip.Root>\n</Label>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<Flex gap=\"1rem\" direction=\"column\">\n    <Flex gap=\"4px\" direction=\"row\">\n        <Checkbox {...args} id=\"checkbox1\" aria-labelledby=\"label\" value={true} onChange={() => {}} />\n        <Label id=\"label\" htmlFor=\"checkbox1\">\n            Checkbox 1\n        </Label>\n    </Flex>\n    <Flex gap=\"4px\" direction=\"row\">\n        <Checkbox {...args} id=\"checkbox2\" aria-labelledby=\"label\" value={false} onChange={() => {}} />\n        <Label id=\"label\" htmlFor=\"checkbox2\">\n            Checkbox 2\n        </Label>\n    </Flex>\n    <Flex gap=\"4px\" direction=\"row\">\n        <Checkbox {...args} id=\"checkbox3\" aria-labelledby=\"label\" value=\"indeterminate\" onChange={() => {}} />\n        <Label id=\"label\" htmlFor=\"checkbox3\">\n            Checkbox 3\n        </Label>\n    </Flex>\n</Flex>\n```\n\n----------------------------------------\n\nTITLE: Migrating ColorPicker Component in React/TSX\nDESCRIPTION: Demonstrates the migration from the old ColorPicker to the new component-based approach. The new implementation uses composition with separate ColorPicker.Input, ColorPicker.Values, and ColorPicker.Gradient components, and requires external Flyout management.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<ColorPicker\n    currentColor={selectedColor}\n    currentFormat={currentFormat}\n    setFormat={setCurrentFormat}\n    onSelect={(color) => {}}\n/>\n```\n\nLANGUAGE: tsx\nCODE:\n```\nconst [currentColor, setCurrentColor] = useState({ red: 85, green: 102, blue: 255 });\n\n<Flyout.Root>\n    <Flyout.Trigger>\n        <ColorPicker.Input currentColor={currentColor} onColorChange={setCurrentColor} />\n    </Flyout.Trigger>\n    <Flyout.Content>\n        <ColorPicker.Root defaultFormat=\"HEX\" currentColor={currentColor} onColorChange={setCurrentColor}>\n            <ColorPicker.Values />\n            <ColorPicker.Gradient />\n        </ColorPicker.Root>\n    </Flyout.Content>\n</Flyout.Root>\n\n// or\n\n<ColorPicker.Root defaultFormat=\"HEX\" currentColor={currentColor} onColorChange={setCurrentColor}>\n    <ColorPicker.Values />\n    <ColorPicker.Gradient />\n</ColorPicker.Root>\n```\n\n----------------------------------------\n\nTITLE: Migrating from Dropdown to Select Component in React\nDESCRIPTION: Comparison between old Dropdown implementation with menuBlocks and items, and new Select component with a more composable slot-based API. The new implementation supports both complex and simplified usage patterns.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_22\n\nLANGUAGE: tsx\nCODE:\n```\nconst [active, setActive] = useState(args.activeItemId);\nuseEffect(() => setActive(args.activeItemId), [args.activeItemId]);\nreturn (\n    <Dropdown activeItemId={active} onChange={(id) => setActive(id)} menuBlocks={[\n        {\n            id: 'block1',\n            ariaLabel: 'First section',\n            menuItems: [\n                {\n                    id: 1,\n                    title: 'Simple',\n                },\n                {\n                    id: 2,\n                    title: 'Item with icon',\n                    decorator: <IconMusicNote />,\n                    style: MenuItemStyle.Danger,\n                },\n                {\n                    id: 3,\n                    title: 'Item small',\n                    size: MenuItemContentSize.Small,\n                },\n            ],\n        },\n\n    ]}>\n)\n```\n\nLANGUAGE: tsx\nCODE:\n```\nconst [activeItem, setActiveItem] = useState('');\n\nreturn(\n    <Select\n        onSelect={(selectedItem) => {\n            setActiveItem(() => selectedItem);\n        }}\n        value={activeItem}\n    >\n        <Select.Slot name=\"left\">\n            <IconIcon size={16} />\n        </Select.Slot>\n        <Select.Slot name=\"right\">\n            <IconIcon size={16} />\n        </Select.Slot>\n        <Select.Slot name=\"menu\">\n            <Select.Item value=\"simple\">Simple</Select.Item>\n            <Select.Item value=\"item-with-icon\">\n                <div className=\"tw-flex tw-items-center tw-gap-4\">\n                    <IconMusicNote />\n                    <span>Item with icon</span>\n                </div>\n            </Select.Item>\n            <Select.Item value=\"small-item\">\n                <span class=\"tw-text-sm\">Small item</span>\n            </Select.Item>\n        </Select.Slot>\n    </Select>\n)\n\n// Or, for a simpler setup you don't have to use the slots:\n\n<Select>\n    <Select.Item value=\"item-1\">Item 2</Select.Item>\n    <Select.Item value=\"item-2\">Item 2</Select.Item>\n    <Select.Item value=\"item-3\">Item 3</Select.Item>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: Generating New Component Files with Script\nDESCRIPTION: Command to generate boilerplate files for a new component, which creates the component file, test file, and Storybook story file.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/2 - Contributing.mdx#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npnpm component:create FancyComponent\n```\n\n----------------------------------------\n\nTITLE: Migrating from Old to New Slider Component in React\nDESCRIPTION: Comparing implementations of the Slider component, showing the transition from a monolithic component to a composable approach. The new implementation supports multi-thumb range sliders and requires external elements for formatting.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_23\n\nLANGUAGE: tsx\nCODE:\n```\n<Slider\n    id=\"old-slider\"\n    label=\"Volume\"\n    value={50}\n    min={0}\n    max={100}\n    showMinMax={true}\n    step={5}\n    stepMultiplier={10}\n    valueSuffix=\"%\"\n    disabled={false}\n    onError={(errorCode) => console.error('Error:', errorCode)}\n    onChange={(value) => console.log('Value:', value.raw, value.withSuffix)}\n    data-test-id=\"slider-test\"\n    aria-label=\"Adjust volume level\"\n/>\n```\n\nLANGUAGE: tsx\nCODE:\n```\nconst [volume, setVolume] = useState([0]);\n\nconst onSliderChange = (value: number[]) => {\n    setVolume(value);\n};\n\nconst onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n    if (newValue >= 0 && newValue <= 100) {\n        setVolume(value);\n    }\n};\n\nreturn (\n    <div style={{ display: 'flex', gap: 16 }}>\n        <Label id=\"new-slider-label\" htmlFor=\"new-slider\">\n            Volume\n        </Label>\n\n        <Slider\n            id=\"new-slider\"\n            value={range}\n            min={0}\n            max={100}\n            aria-labelledby=\"new-slider-label\"\n            onChange={onSliderChange}\n        />\n\n        <TextInput\n            id=\"new-slider-input\"\n            value={value}\n            type=\"number\"\n            aria-labelledby=\"new-slider-label\"\n            onChange={onInputChange}\n        />\n    </div>\n```\n\n----------------------------------------\n\nTITLE: Modern Tooltip Implementation in TSX\nDESCRIPTION: New implementation pattern using Tooltip.Root, Tooltip.Trigger, and Tooltip.Content components\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_32\n\nLANGUAGE: tsx\nCODE:\n```\n<Tooltip.Root enterDelay={200}>\n    <Tooltip.Trigger>\n        <Button>Hover over me!</Button>\n    </Tooltip.Trigger>\n    <Tooltip.Content side=\"bottom\" padding=\"spacious\">\n        Your text here\n    </Tooltip.Content>\n</Tooltip.Root>\n```\n\n----------------------------------------\n\nTITLE: Migrating from Old to New Switch Component in React\nDESCRIPTION: Comparison between the old Switch implementation with built-in label and tooltip, and the new composable pattern where accessibility and labeling are handled through separate components and ARIA attributes.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\n<Switch\n    id=\"old-switch\"\n    label=\"Dark mode\"\n    tooltip=\"Toggle dark mode\"\n    mode={true}\n    size=\"medium\"\n    hug={true}\n    disabled={false}\n    onChange={(event) => console.log('Value:', event.target.value}\n    aria-label=\"Adjust volume level\"\n    data-test-id=\"switch-test\"\n/>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n<Label id=\"dark-mode-label\" htmlFor=\"new-switch\">Dark mode</Label>\n<Tooltip.Root enterDelay={200}>\n    <Tooltip.Trigger>\n        <IconQuestionMarkCircle />\n    </Tooltip.Trigger>\n    <Tooltip.Content side=\"top\" padding=\"spacious\">\n        <p id=\"dark-mode-switch-description\">Toggle dark mode.</p>\n    </Tooltip.Content>\n</Tooltip.Root>\n<Switch\n    id=\"new-switch\"\n    name=\"dark-mode-switch\"\n    defaultValue={true}\n    size=\"medium\"\n    required={true}\n    disabled={false}\n    onChange={(value) => console.log('Value:', value)}\n    onBlur={(event) => console.log('Event:', event)}\n    onFocus={(event) => console.log('Event:', event)}\n    aria-labelledby=\"dark-mode-label\"\n    aria-describedby=\"dark-mode-switch-description\"\n    data-test-id=\"switch-test\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding ThemeProvider and Updating Dependencies in @frontify/fondue-tokens 3.6.0\nDESCRIPTION: This minor update adds a ThemeProvider to control the token theme and updates dependencies in version 3.6.0 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.6.0\n\n### Minor Changes\n\n- [#2182](https://github.com/Frontify/fondue/pull/2182) [`101b4cd`](https://github.com/Frontify/fondue/commit/101b4cd8b467d9fb731f83698751af6b862e7cb3) Thanks [@noahwaldner](https://github.com/noahwaldner)! - feat: add `ThemeProvider` to allow controlling the token theme used\n\n### Patch Changes\n\n- [#2177](https://github.com/Frontify/fondue/pull/2177) [`1a34562`](https://github.com/Frontify/fondue/commit/1a34562cd30c6c317d147c29ef52d90094d19f12) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update dependencies\n```\n\n----------------------------------------\n\nTITLE: Implementing Flyout Component - New Pattern (TSX)\nDESCRIPTION: Example of the new Flyout component implementation using the composition pattern. Uses subcomponents like Flyout.Root, Flyout.Trigger, Flyout.Content, etc., with internal state management.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\n<Flyout.Root>\n    <Flyout.Trigger>\n        <Button>\n            <IconIcon />\n            Trigger\n        </Button>\n    </Flyout.Trigger>\n    <Flyout.Content side=\"right\">\n        <Flyout.Header showCloseButton>Header</Flyout.Header>\n        <Flyout.Body />\n        <Flyout.Footer>\n            <Button emphasis=\"default\">Cancel</Button>\n            <Button>Submit</Button>\n        </Flyout.Footer>\n    </Flyout.Content>\n</Flyout.Root>\n```\n\n----------------------------------------\n\nTITLE: Using Diatype as Primary Font in @frontify/fondue-tokens 4.0.0\nDESCRIPTION: This major update changes the primary font to Diatype in version 4.0.0 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.0.0\n\n### Major Changes\n\n- [#2223](https://github.com/Frontify/fondue/pull/2223) [`f88df50`](https://github.com/Frontify/fondue/commit/f88df50506925b4efc7595112e22bb004d0be2b0) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - feat: use diatype as primary font\n```\n\n----------------------------------------\n\nTITLE: Implementing Segmented Control - New Pattern (TSX)\nDESCRIPTION: Example of the new SegmentedControl component using composition. Uses SegmentedControl.Root and SegmentedControl.Item subcomponents to separate the control from its items. Supports conditional rendering for disabled items.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_21\n\nLANGUAGE: tsx\nCODE:\n```\n<SegmentedControl.Root defaultValue=\"item-1\" value={value} onValueChange={setValue} disabled={disabled}>\n    {isItem1Disabled ? <SegmentedControl.Item value=\"item-1\">Item 1</SegmentedControl.Item> : null}\n\n    <SegmentedControl.Item value=\"item-2\">\n        {/* Already has a default flex and gap, no need to wrap with a `div` */}\n        <IconIcon />\n        Item 2\n    </SegmentedControl.Item>\n\n    <SegmentedControl.Item value=\"item-3\" aria-label=\"Item 3\">\n        <IconIcon />\n    </SegmentedControl.Item>\n</SegmentedControl.Root>\n```\n\n----------------------------------------\n\nTITLE: Implementing React Data Table (New Version) with Improved State Management\nDESCRIPTION: This code snippet shows a refactored version of the data table with improved state management using useMemo for derived data, Set for selections, and a more composable component structure. It implements the same functionality with better performance and more maintainable code.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_26\n\nLANGUAGE: tsx\nCODE:\n```\nconst [searchTerm, setSearchTerm] = useState('');\n\nconst [roleFilter, setRoleFilter] = useState('all');\n\nconst [sortField, setSortField] = useState<keyof User | null>(null);\nconst [sortDirection, setSortDirection] = useState<'ascending' | 'descending'>();\n\nconst [selectedRows, setSelectedRows] = useState<Set<string>>(new Set());\n\nconst handleSelectAll = () => {\n    if (selectedRows.size === users.length) {\n        setSelectedRows(new Set());\n    } else {\n        setSelectedRows(new Set(users.map((user) => user.id)));\n    }\n};\n\nconst handleSelectRow = (event: FormEvent<HTMLButtonElement>, id: string) => {\n    event.stopPropagation();\n    const newSelection = new Set(selectedRows);\n    if (newSelection.has(id)) {\n        newSelection.delete(id);\n    } else {\n        newSelection.add(id);\n    }\n    setSelectedRows(newSelection);\n};\n\nconst processedData = useMemo(() => {\n    let result = [...users];\n\n    if (searchTerm) {\n        result = result.filter(\n            (user) =>\n                user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                user.email.toLowerCase().includes(searchTerm.toLowerCase()),\n        );\n    }\n\n    if (roleFilter !== 'all') {\n        result = result.filter((user) => user.role === roleFilter);\n    }\n\n    if (sortField && sortDirection) {\n        result.sort((a, b) => {\n            const aValue = a[sortField];\n            const bValue = b[sortField];\n\n            if (sortDirection === 'ascending') {\n                return aValue > bValue ? 1 : -1;\n            } else {\n                return aValue < bValue ? 1 : -1;\n            }\n        });\n    }\n\n    return result;\n}, [users, searchTerm, roleFilter, sortField, sortDirection]);\n\nconst isAllSelected = selectedRows.size === processedData.length;\nconst isPartiallySelected = selectedRows.size > 0 && selectedRows.size < processedData.length;\n\nreturn (\n    <Flex direction=\"column\" gap=\"1rem\">\n        <Flex gap=\"1rem\">\n            <TextInput placeholder=\"Search users...\" value={searchTerm} onChange={(e) => setSearchTerm(e)}>\n                <TextInput.Slot name=\"left\">\n                    <IconMagnifier size=\"16\" />\n                </TextInput.Slot>\n            </TextInput>\n\n            <Dropdown.Root>\n                <Dropdown.Trigger>\n                    <Button emphasis=\"default\">\n                        <IconFunnel size=\"16\" />\n                        Filter by role\n                    </Button>\n                </Dropdown.Trigger>\n                <Dropdown.Content>\n                    <Dropdown.Item onSelect={() => setRoleFilter('all')}>All Roles</Dropdown.Item>\n                    <Dropdown.Item onSelect={() => setRoleFilter('admin')}>Admin</Dropdown.Item>\n                    <Dropdown.Item onSelect={() => setRoleFilter('user')}>User</Dropdown.Item>\n                </Dropdown.Content>\n            </Dropdown.Root>\n        </Flex>\n\n        <Table.Root>\n            <Table.Header sticky>\n                <Table.Row>\n                    <Table.HeaderCell>\n                        <Checkbox\n                            value={isPartiallySelected ? 'indeterminate' : isAllSelected}\n                            onChange={handleSelectAll}\n                            aria-label=\"Select all users\"\n                        />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                        sortDirection={sortField === 'name' ? sortDirection : undefined}\n                        onSortChange={(direction) => {\n                            setSortField('name');\n                            setSortDirection(direction);\n                        }}\n                    >\n                        User\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                        sortDirection={sortField === 'activeSessions' ? sortDirection : undefined}\n                        onSortChange={(direction) => {\n                            setSortField('activeSessions');\n                            setSortDirection(direction);\n                        }}\n                        align=\"right\"\n                    >\n                        Active Sessions\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                        sortDirection={sortField === 'lastActive' ? sortDirection : undefined}\n                        onSortChange={(direction) => {\n                            setSortField('lastActive');\n                            setSortDirection(direction);\n                        }}\n                    >\n                        Last Active\n                    </Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {processedData.map((user) => (\n                    <Table.Row\n                        key={user.id}\n                        selected={selectedRows.has(user.id)}\n                        onClick={() => console.log(`View details for ${user.name}`)}\n                    >\n                        <Table.RowCell>\n                            <Checkbox\n                                value={selectedRows.has(user.id)}\n                                onChange={(event) => handleSelectRow(event, user.id)}\n                                aria-label={`Select ${user.name}`}\n                            />\n                        </Table.RowCell>\n                        <Table.RowCell>\n                            <div className=\"tw-flex tw-items-center tw-gap-2\">\n                                <div>\n                                    <div className=\"tw-font-medium\">{user.name}</div>\n                                    <div className=\"tw-text-sm tw-text-gray-500\">{user.email}</div>\n                                </div>\n                            </div>\n                        </Table.RowCell>\n                        <Table.RowCell align=\"right\">\n                            <Badge>{user.activeSessions}</Badge>\n                        </Table.RowCell>\n                        <Table.RowCell>{user.lastActive}</Table.RowCell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table.Root>\n    </Flex>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing React Data Table (Old Version) with TypeScript\nDESCRIPTION: This code snippet demonstrates an older implementation of a React data table with features like row selection, sorting, and filtering. It uses basic state management with useState and useEffect hooks to handle data manipulation.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_25\n\nLANGUAGE: tsx\nCODE:\n```\nconst [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\nconst [sortedRows, setSortedRows] = useState<Row[]>(rows);\nconst [filter, setFilter] = useState('');\nconst [roleFilter, setRoleFilter] = useState<string>('all');\n\nconst onSortChange = (key: string, direction?: SortDirection) => {\n    const clonedRows = [...sortedRows];\n    clonedRows.sort((a, b) => {\n        const keyA = a.cells[key].sortId;\n        const keyB = b.cells[key].sortId;\n\n        if (direction === SortDirection.Descending) {\n            return keyA < keyB ? -1 : 1;\n        } else {\n            return keyA < keyB ? 1 : -1;\n        }\n    });\n    setSortedRows(clonedRows);\n};\n\nuseEffect(() => {\n    if (filter === '' && roleFilter === 'all') {\n        setSortedRows(rows);\n        return;\n    }\n\n    const filtered = rows.filter((row) => {\n        const matchesSearch = filter === '' ||\n            Object.values(row.cells).some((cell) =>\n                String(cell.sortId).toLowerCase().includes(filter.toLowerCase())\n            );\n\n        const matchesRole = roleFilter === 'all' ||\n            row.cells.role.sortId === roleFilter;\n\n        return matchesSearch && matchesRole;\n    });\n\n    setSortedRows(filtered);\n}, [filter, roleFilter]);\n\nconst columns: Column[] = [\n    { name: 'User', key: 'user' },\n    {\n        name: 'Active Sessions',\n        key: 'activeSessions',\n        sortable: true,\n        align: 'right'\n    },\n    { name: 'Last Active', key: 'lastActive' },\n];\n\nconst rows: Row[] = [\n    {\n        key: 'row-1',\n        cells: {\n            user: {\n                sortId: 'anna',\n                value: (\n                    <div className=\"tw-flex tw-items-center tw-gap-2\">\n                        <div>\n                            <div className=\"tw-font-medium\">Anna Smith</div>\n                            <div className=\"tw-text-sm tw-text-gray-500\">\n                                anna.smith@example.com\n                            </div>\n                        </div>\n                    </div>\n                ),\n            },\n            activeSessions: {\n                sortId: 108,\n                value: <Badge>108</Badge>,\n            },\n            lastActive: {\n                sortId: 12,\n                value: '12 days ago',\n            },\n        },\n    },\n];\n\nreturn (\n    <Flex direction=\"column\" gap=\"1rem\">\n        <Flex gap=\"1rem\">\n            <TextInput\n                value={filter}\n                onChange={(val) => setFilter(val)}\n                placeholder=\"Search users...\"\n                decorator={<IconMagnifier />}\n            />\n\n            <Dropdown\n                activeItemId={roleFilter}\n                onChange={setRoleFilter}\n                menuBlocks={[\n                    {\n                        id: 'roles',\n                        menuItems: [\n                            { id: 'all', title: 'All Roles' },\n                            { id: 'admin', title: 'Admin' },\n                            { id: 'user', title: 'User' },\n                        ],\n                    },\n                ]}\n            >\n                <Button icon={<IconFunnel />}>\n                    Filter by role\n                </Button>\n            </Dropdown>\n        </Flex>\n\n        <Table\n            columns={columns}\n            rows={sortedRows}\n            selectionMode={SelectionMode.MultiSelect}\n            selectedRowIds={selectedRows}\n            onSelectionChange={(ids) => setSelectedRows((ids as (string | number)[]) || [])}\n            onSortChange={onSortChange}\n        />\n    </Flex>\n);\n```\n\n----------------------------------------\n\nTITLE: Adjusting Body-Medium Line Height in @frontify/fondue-tokens 4.1.0\nDESCRIPTION: This minor update adjusts the body-medium line height in version 4.1.0 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.1.0\n\n### Minor Changes\n\n- [#2255](https://github.com/Frontify/fondue/pull/2255) [`666e107`](https://github.com/Frontify/fondue/commit/666e107602211594e4e9c923ffd440e840eefeff) Thanks [@noahwaldner](https://github.com/noahwaldner)! - feat: adjust body-medium line height\n```\n\n----------------------------------------\n\nTITLE: TextInput with Slots Implementation in TSX\nDESCRIPTION: Advanced usage of TextInput.Root and TextInput.Slot components for adding decorators and actions\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_28\n\nLANGUAGE: tsx\nCODE:\n```\n<TextInput.Root>\n    <TextInput.Slot name=\"left\">\n        <IconIcon />\n    </TextInput.Slot>\n\n    <TextInput.Slot name=\"right\">\n        <Button onPress={(event) => {}}>\n            <IconClear />\n        </Button>\n\n        <Button onPress={(event) => {}}>\n            <IconCopy />\n        </Button>\n    </TextInput.Slot>\n</TextInput.Root>\n```\n\n----------------------------------------\n\nTITLE: Building Style Dictionary Tokens\nDESCRIPTION: Command to build the style dictionary tokens using the CLI tool\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nstyle-dictionary build\n```\n\n----------------------------------------\n\nTITLE: Modern TextInput Implementation in TSX\nDESCRIPTION: New implementation pattern using TextInput.Root and TextInput.Slot with updated properties\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_30\n\nLANGUAGE: tsx\nCODE:\n```\n<TextInput.Root value={value} onChange={setValue} onKeyDown={handleKeyDown} className=\"custom-border\">\n    <TextInput.Slot name=\"left\">\n        <IconIcon />\n    </TextInput.Slot>\n\n    <TextInput.Slot name=\"right\">\n        <Button onPress={handleClear}>\n            <IconClear />\n        </Button>\n\n        <Button onPress={handleCopy}>\n            <IconCopy />\n        </Button>\n\n        <Tooltip.Root>\n            <Tooltip.Trigger>\n                <Button onPress={handleExtraAction} title=\"Extra action\">\n                    <IconIcon />\n                </Button>\n            </Tooltip.Trigger>\n            <Tooltip.Content>{TOOLTIP_CONTENT}</Tooltip.Content>\n        </Tooltip.Root>\n    </TextInput.Slot>\n</TextInput.Root>\n```\n\n----------------------------------------\n\nTITLE: Cloning and Installing Fondue Repository\nDESCRIPTION: Commands to clone the Fondue Git repository and install dependencies using pnpm package manager.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/2 - Contributing.mdx#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ git clone git@github.com:Frontify/fondue.git\n$ pnpm i\n```\n\n----------------------------------------\n\nTITLE: Simple TextInput Implementation in TSX\nDESCRIPTION: Basic usage of the TextInput component for simple input scenarios\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_27\n\nLANGUAGE: tsx\nCODE:\n```\n<TextInput value={value} onChange={setValue} />\n```\n\n----------------------------------------\n\nTITLE: Implementing Label Component - New Pattern (TSX)\nDESCRIPTION: Example of the new Label component with tooltip implementation using the Tooltip component. Follows the composition pattern with Tooltip.Root, Tooltip.Trigger, and Tooltip.Content.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\n<Label htmlFor=\"my-input\" required>\n    My Label\n    <Tooltip.Root>\n        <Tooltip.Trigger>\n            <IconInfo />\n        </Tooltip.Trigger>\n        <Tooltip.Content>Tooltip</Tooltip.Content>\n    </Tooltip.Root>\n</Label>\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch for Component Development\nDESCRIPTION: Command to create a new git branch for developing a new component, following the project's naming convention.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/2 - Contributing.mdx#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b feat/add-fancy-component\n```\n\n----------------------------------------\n\nTITLE: Implementing Layout Components - New Pattern (TSX)\nDESCRIPTION: Example of the new Flex component with CSS properties as props. Supports responsive styling through an object with breakpoints as keys and allows for flexible gap configuration.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\n<Flex\n    direction={{\n        base: 'row',\n        sm: 'column',\n    }}\n    alignItems=\"start\"\n    gap=\"20px\"\n>\n    <div />\n    <div />\n    <div />\n</Flex>\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Bar - New Pattern (TSX)\nDESCRIPTION: Example of the new LoadingBar component with value and style props. Uses string literals instead of enums for style configuration and supports indeterminate state with null value.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_15\n\nLANGUAGE: tsx\nCODE:\n```\n<LoadingBar value={50} style=\"success\" rounded />\n```\n\n----------------------------------------\n\nTITLE: Finalizing Monorepo Transition in @frontify/fondue-tokens 3.5.0\nDESCRIPTION: This minor update finalizes the monorepo transition, adds subexports for new components, and includes contribution guidelines and readme in version 3.5.0 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.0\n\n### Minor Changes\n\n- [#1807](https://github.com/Frontify/fondue/pull/1807) [`fc35a50`](https://github.com/Frontify/fondue/commit/fc35a509e641604eaf2a4b644c573929c3440be3) Thanks [@noahwaldner](https://github.com/noahwaldner)! - refactor: Finalized Monorepo transition, added subexport for new components, added contribution guidelines and readme\n\n### Patch Changes\n\n- [#1811](https://github.com/Frontify/fondue/pull/1811) [`4fa8007`](https://github.com/Frontify/fondue/commit/4fa8007bf973494ff4621f526d8f2919115f95ff) Thanks [@noahwaldner](https://github.com/noahwaldner)! - fix: housekeeping for v12 release\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Circle - New Pattern (TSX)\nDESCRIPTION: Example of the new LoadingCircle component using string literals for variant and size. Simplifies API by using union types instead of enums.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_17\n\nLANGUAGE: tsx\nCODE:\n```\n<LoadingCircle variant=\"success\" size=\"large\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Scroll Area - New Pattern (TSX)\nDESCRIPTION: Example of the new ScrollArea component with showShadow property. Simplifies API by removing direction prop and making showShadow false by default. Adds support for maxHeight and maxWidth.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_19\n\nLANGUAGE: tsx\nCODE:\n```\n<ScrollArea showShadow>\n    <p className=\"tw-w-[200px]\">\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dolor velit reiciendis nobis assumenda itaque tenetur\n        ducimus quia qui! Tempore enim beatae est suscipit excepturi iure explicabo, fugiat perferendis consequatur.\n    </p>\n</ScrollArea>\n```\n\n----------------------------------------\n\nTITLE: Modifying Focus-Ring Color Token in @frontify/fondue-tokens 3.5.5\nDESCRIPTION: This patch modifies the focus-ring color token in version 3.5.5 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.5\n\n### Patch Changes\n\n- [#1992](https://github.com/Frontify/fondue/pull/1992) [`0c43841`](https://github.com/Frontify/fondue/commit/0c43841f4d3244fccdf4beb5cd5daa16841f61a8) Thanks [@noahwaldner](https://github.com/noahwaldner)! - feat: modify focus-ring color token\n```\n\n----------------------------------------\n\nTITLE: Importing Refactored Fondue Components\nDESCRIPTION: Demonstrates how to import and use refactored components from the Fondue design system using the components subexport.\nSOURCE: https://github.com/Frontify/fondue/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from \"@frontify/fondue/components\";\n\nconst App = () => <Button>Click Me</Button>;\n```\n\n----------------------------------------\n\nTITLE: Installing Fondue Design System Package\nDESCRIPTION: Shows how to install the Fondue design system as a dependency using different package managers (npm, pnpm, or yarn).\nSOURCE: https://github.com/Frontify/fondue/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i @frontify/fondue\n# or\npnpm i @frontify/fondue\n# or\nyarn add @frontify/fondue\n```\n\n----------------------------------------\n\nTITLE: Android XML Token Output\nDESCRIPTION: Generated Android resource files containing font dimensions and colors as XML resources\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/README.md#2025-04-16_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<!-- font_dimens.xml -->\n<resources>\n  <dimen name=\"size_font_small\">12.00sp</dimen>\n  <dimen name=\"size_font_medium\">16.00sp</dimen>\n  <dimen name=\"size_font_large\">32.00sp</dimen>\n  <dimen name=\"size_font_base\">16.00sp</dimen>\n</resources>\n\n<!-- colors.xml -->\n<resources>\n  <color name=\"color_base_gray_light\">#ffcccccc</color>\n  <color name=\"color_base_gray_medium\">#ff999999</color>\n  <color name=\"color_base_gray_dark\">#ff111111</color>\n  <color name=\"color_base_red\">#ffff0000</color>\n  <color name=\"color_base_green\">#ff00ff00</color>\n  <color name=\"color_font_base\">#ffff0000</color>\n  <color name=\"color_font_secondary\">#ff00ff00</color>\n  <color name=\"color_font_tertiary\">#ffcccccc</color>\n</resources>\n```\n\n----------------------------------------\n\nTITLE: Installing Fondue Design System with Package Managers\nDESCRIPTION: Shows how to install the Fondue design system package as a dependency using different package managers (npm, pnpm, or yarn).\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/1 - Getting Started.mdx#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i @frontify/fondue\n# or\npnpm i @frontify/fondue\n# or\nyarn add @frontify/fondue\n```\n\n----------------------------------------\n\nTITLE: Kotlin Compose Token Output\nDESCRIPTION: Generated Kotlin files containing color and size definitions for Jetpack Compose\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/README.md#2025-04-16_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\nobject StyleDictionaryColor {\n  val colorBaseGrayDark = Color(0xff111111)\n  val colorBaseGrayLight = Color(0xffcccccc)\n  val colorBaseGrayMedium = Color(0xff999999)\n  val colorBaseGreen = Color(0xff00ff00)\n  val colorBaseRed = Color(0xffff0000)\n  val colorFontBase = Color(0xffff0000)\n  val colorFontSecondary = Color(0xff00ff00)\n  val colorFontTertiary = Color(0xffcccccc)\n}\n\nobject StyleDictionarySize {\n  /** the base size of the font */\n  val sizeFontBase = 16.00.sp\n  /** the large size of the font */\n  val sizeFontLarge = 32.00.sp\n  /** the medium size of the font */\n  val sizeFontMedium = 16.00.sp\n  /** the small size of the font */\n  val sizeFontSmall = 12.00.sp\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Fondue Component Styles\nDESCRIPTION: Shows how to import chart styles, component styles, and legacy component styles from the Fondue package. Styles should be imported once at the application level.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/1 - Getting Started.mdx#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n// chart styles\nimport '@frontify/fondue/charts/styles';\n\n// component styles\nimport '@frontify/fondue/components/styles';\n\n// legacy component styles\nimport '@frontify/fondue/styles';\n```\n\n----------------------------------------\n\nTITLE: iOS Objective-C Token Implementation\nDESCRIPTION: Generated Objective-C implementation file for color tokens including color initialization and accessor methods\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/README.md#2025-04-16_snippet_4\n\nLANGUAGE: objc\nCODE:\n```\n#import \"StyleDictionaryColor.h\"\n\n@implementation StyleDictionaryColor\n\n+ (UIColor *)color:(StyleDictionaryColorName)colorEnum{\n  return [[self values] objectAtIndex:colorEnum];\n}\n\n+ (NSArray *)values {\n  static NSArray* colorArray;\n  static dispatch_once_t onceToken;\n\n  dispatch_once(&onceToken, ^{\n    colorArray = @[\n[UIColor colorWithRed:0.800f green:0.800f blue:0.800f alpha:1.000f],\n[UIColor colorWithRed:0.600f green:0.600f blue:0.600f alpha:1.000f],\n[UIColor colorWithRed:0.067f green:0.067f blue:0.067f alpha:1.000f],\n[UIColor colorWithRed:1.000f green:0.000f blue:0.000f alpha:1.000f],\n[UIColor colorWithRed:0.000f green:1.000f blue:0.000f alpha:1.000f],\n[UIColor colorWithRed:1.000f green:0.000f blue:0.000f alpha:1.000f],\n[UIColor colorWithRed:0.000f green:1.000f blue:0.000f alpha:1.000f],\n[UIColor colorWithRed:0.800f green:0.800f blue:0.800f alpha:1.000f]\n    ];\n  });\n\n  return colorArray;\n}\n\n@end\n```\n\n----------------------------------------\n\nTITLE: Generating a New Component Template\nDESCRIPTION: Command to run the component creation script that generates the necessary files for a new Fondue component, including the component file, test file, and stories file.\nSOURCE: https://github.com/Frontify/fondue/blob/main/CONTRIBUTING.md#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npnpm create:component FancyComponent\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Fondue Development Environment\nDESCRIPTION: Commands to clone the Fondue repository, install dependencies with pnpm, and build the project before starting Storybook for development.\nSOURCE: https://github.com/Frontify/fondue/blob/main/CONTRIBUTING.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ git clone git@github.com:Frontify/fondue.git\n$ pnpm i\n$ pnpm build # needs to be ran before starting storybook\n```\n\n----------------------------------------\n\nTITLE: Making Tokens ESM Compatible in @frontify/fondue-tokens 3.5.1\nDESCRIPTION: This patch makes tokens ESM compatible to enable intellisense in version 3.5.1 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.1\n\n### Patch Changes\n\n- [#1827](https://github.com/Frontify/fondue/pull/1827) [`0c37185`](https://github.com/Frontify/fondue/commit/0c371857c3f7e897cb9f9699668ba1304cfaac69) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - fix: make tokens ESM else intellisense is not working\n```\n\n----------------------------------------\n\nTITLE: Implementing Flyout Component - Old Pattern (TSX)\nDESCRIPTION: Example of the old InlineDialog implementation with external state management. Uses separate components like Button and DialogBody with explicit state management through useState.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nconst [isOpen, setIsOpen] = useState(false);\n\nreturn (\n    <Box className=\"tw-w-fit\">\n        <Button icon={<IconIcon />} onClick={() => setIsOpen(!isOpen)}>\n            Trigger\n        </Button>\n        <InlineDialog anchor={triggerRef} open={isOpen} handleClose={() => setIsOpen(false)}>\n            <DialogBody padding=\"comfortable\">\n                <Box className=\"tw-text-text\">\n                    <TextExample />\n                    <TextExample />\n                    <TextExample />\n                    <Button onClick={() => setIsOpen(!isOpen)}>Close</Button>\n                </Box>\n            </DialogBody>\n        </InlineDialog>\n    </Box>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Label Component - Old Pattern (TSX)\nDESCRIPTION: Example of the old InputLabel component with tooltip implementation. Uses the tooltip prop with an array of objects for configuration.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\n<InputLabel htmlFor=\"my-input\" required tooltip={[{ triggerIcon: <IconInfo />, content: 'Tooltip' }]}>\n    My Label\n</InputLabel>\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown - Beta.401\nDESCRIPTION: Changelog entry documenting Node version update, ESM migration, and various fixes in version 12.0.0-beta.401\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/CHANGELOG.md#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 12.0.0-beta.401\n\n### Minor Changes\n\n- [`c4e179c`](https://github.com/Frontify/fondue/commit/c4e179ca542da239ed6be743cefd1902406c86c5) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - Update minimum Node version to v18\n\n- [#1697](https://github.com/Frontify/fondue/pull/1697) [`8114231`](https://github.com/Frontify/fondue/commit/8114231ca84012dc428682f06bc421393e727fd7) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - refactor: move to ESM\n\n### Patch Changes\n\n- [#1701](https://github.com/Frontify/fondue/pull/1701) [`1dc0aa7`](https://github.com/Frontify/fondue/commit/1dc0aa7b4ea594f1032b55aaaadf9187ddb1b9b5) Thanks [@bojangles-m](https://github.com/bojangles-m)! - fix(RichTextEditor): disappearing line break made with shortcut Shift-Enter\n\n- [#1707](https://github.com/Frontify/fondue/pull/1707) [`89f8297`](https://github.com/Frontify/fondue/commit/89f8297523441d6b9ea8ac6a2505d4708de1af9d) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - build: update dependencies\n\n- [#1700](https://github.com/Frontify/fondue/pull/1700) [`6a740b7`](https://github.com/Frontify/fondue/commit/6a740b705aa250944a1f24e50139c79c1ee415d6) Thanks [@bojangles-m](https://github.com/bojangles-m)! - fix: body is not scrollable when modal is open\n\n- [#1706](https://github.com/Frontify/fondue/pull/1706) [`ee96663`](https://github.com/Frontify/fondue/commit/ee96663ccc5e6d353cfe1e9bd4e3c089f0e30ea0) Thanks [@bojangles-m](https://github.com/bojangles-m)! - fix: don't use dark variant for the tooltip styles\n```\n\n----------------------------------------\n\nTITLE: Implementing Layout Components - Old Pattern (TSX)\nDESCRIPTION: Example of the old FondueStack component with explicit props for layout control. Uses specific props like alignItems, direction, justify, and spacing.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\n<FondueStack\n    alignItems=\"start\"\n    as=\"div\"\n    bg=\"\"\n    color=\"\"\n    data-test-id=\"custom-test-id\"\n    direction=\"column\"\n    justify=\"start\"\n    margin={0}\n    padding={12}\n    spacing={8}\n>\n    <div />\n    <div />\n    <div />\n</FondueStack>\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Bar - Old Pattern (TSX)\nDESCRIPTION: Example of the old LoadingBar component with percentage and state props. Uses enum for state configuration and requires explicit percentage value.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\n<LoadingBar percentage={50} state={LoadingBarState.Success} rounded />\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 4.1.3\nDESCRIPTION: This patch updates dependencies and reverts the 'vite' package in version 4.1.3 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.1.3\n\n### Patch Changes\n\n- [#2289](https://github.com/Frontify/fondue/pull/2289) [`055ef67`](https://github.com/Frontify/fondue/commit/055ef676bd3a5d01f3243f732b4f80e18bd9085f) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update dependencies and revert `vite`\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Circle - Old Pattern (TSX)\nDESCRIPTION: Example of the old LoadingCircle component using enums for style and size. Requires importing enum types for configuration.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_16\n\nLANGUAGE: tsx\nCODE:\n```\n<LoadingCircle style={LoadingCircleStyle.Success} size={LoadingCircleSize.Large} />\n```\n\n----------------------------------------\n\nTITLE: Implementing Scroll Area - Old Pattern (TSX)\nDESCRIPTION: Example of the old ScrollWrapper component with direction property. Uses enum for direction configuration and has scrollShadow enabled by default.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_18\n\nLANGUAGE: tsx\nCODE:\n```\n<ScrollWrapper direction={ScrollWrapperDirection.Vertical}>\n    <p className=\"tw-w-[200px]\">\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dolor velit reiciendis nobis assumenda itaque tenetur\n        ducimus quia qui! Tempore enim beatae est suscipit excepturi iure explicabo, fugiat perferendis consequatur.\n    </p>\n</ScrollWrapper>\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 4.1.2\nDESCRIPTION: This patch updates dependencies in version 4.1.2 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.1.2\n\n### Patch Changes\n\n- [#2278](https://github.com/Frontify/fondue/pull/2278) [`a2d5f2f`](https://github.com/Frontify/fondue/commit/a2d5f2fb5488e82ea60d5d3a2aadc25401f60ab0) Thanks [@jose-costa-frontify](https://github.com/jose-costa-frontify)! - chore: update deps\n```\n\n----------------------------------------\n\nTITLE: Implementing Segmented Control - Old Pattern (TSX)\nDESCRIPTION: Example of the old SegmentedControls component with items array. Uses object configuration for items with id, label, icon, and disabled properties.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_20\n\nLANGUAGE: tsx\nCODE:\n```\n<SegmentedControls\n    activeItemId={value}\n    items={[\n        { id: 'item-1', label: 'Item 1', disabled: isItem1Disabled },\n        { id: 'item-2', label: 'Item 2', icon: <IconIcon /> },\n        { id: 'item-3', icon: <IconIcon />, ariaLabel: 'Item 3' },\n    ]}\n    onChange={setValue}\n    disabled={disabled}\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing Legacy Fondue Components\nDESCRIPTION: Shows how to import and use older, potentially deprecated components directly from the main Fondue package.\nSOURCE: https://github.com/Frontify/fondue/blob/main/README.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from \"@frontify/fondue\";\n\nconst App = () => <Button>Click Me</Button>;\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown - Beta.403\nDESCRIPTION: Changelog entry documenting dependency updates in version 12.0.0-beta.403\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/CHANGELOG.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 12.0.0-beta.403\n\n### Patch Changes\n\n- [`88b3be6`](https://github.com/Frontify/fondue/commit/88b3be6a214803a1ac65ed2e3e2439ffb825aedc) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - Update dependencies\n```\n\n----------------------------------------\n\nTITLE: Importing Legacy Fondue Components\nDESCRIPTION: Shows how to import and use legacy (non-refactored) components directly from the main Fondue package.\nSOURCE: https://github.com/Frontify/fondue/blob/main/storybook-docs/stories/1 - Getting Started.mdx#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from '@frontify/fondue';\n\nconst App = () => <Button>Click Me</Button>;\n```\n\n----------------------------------------\n\nTITLE: Creating a New Feature Branch\nDESCRIPTION: Command to create a new git branch for adding a component to the Fondue library using conventional commit-style naming.\nSOURCE: https://github.com/Frontify/fondue/blob/main/CONTRIBUTING.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b feat/add-fancy-component\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown - Beta.402\nDESCRIPTION: Changelog entry documenting the reversion of date-fns and react-datepicker updates in version 12.0.0-beta.402\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/CHANGELOG.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 12.0.0-beta.402\n\n### Patch Changes\n\n- [`f91e3b4`](https://github.com/Frontify/fondue/commit/f91e3b44df4ee51f17b77d4032ba78b430b6dcae) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - Revert update of `date-fns` and `react-datepicker`\n```\n\n----------------------------------------\n\nTITLE: Legacy TextInput Implementation in TSX\nDESCRIPTION: Old implementation pattern for TextInput with deprecated properties\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_29\n\nLANGUAGE: tsx\nCODE:\n```\n<TextInput\n    value={value}\n    onChange={setValue}\n    onEnterPressed={handleEnter}\n    decorator={<IconIcon />}\n    clearable\n    copyable\n    dotted\n    extraActions={[\n        {\n            icon: <IconIcon />,\n            onClick: handleExtraAction,\n            title: 'Extra action',\n            tooltip: {\n                content: TOOLTIP_CONTENT,\n            },\n        },\n    ]}\n/>\n```\n\n----------------------------------------\n\nTITLE: Legacy Tooltip Implementation in TSX\nDESCRIPTION: Old implementation pattern for Tooltip with deprecated properties\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#2025-04-16_snippet_31\n\nLANGUAGE: tsx\nCODE:\n```\n<Tooltip\n    content=\"Your text here\"\n    enablePortal\n    enterDelay={200}\n    flip\n    leaveDelay={0}\n    maxHeight=\"auto\"\n    maxWidth={200}\n    offset={[0, 8]}\n    placement=\"bottom-center\"\n    size=\"spacious\"\n    withArrow\n>\n    <Button>Hover over me!</Button>\n</Tooltip>\n```\n\n----------------------------------------\n\nTITLE: Dependency Updates Section\nDESCRIPTION: Shows updated dependencies for fondue-tokens and fondue-icons packages.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/CHANGELOG.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Updated dependencies [[`6e96909`](https://github.com/Frontify/fondue/commit/6e96909c6dd8626b567372da6b0051f1b17e736a)]:\n    - @frontify/fondue-tokens@3.5.3\n    - @frontify/fondue-icons@0.2.5\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry - Recent Updates\nDESCRIPTION: Documents patch changes including Firefox outline bugfix, dependency updates, and prop reordering for tooltip trigger functionality.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/components/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- [#1953](https://github.com/Frontify/fondue/pull/1953) [`a0114a3`](https://github.com/Frontify/fondue/commit/a0114a3c215b8ebfcc36320ebd1921c2f5994a7a) Thanks [@jose-costa-frontify](https://github.com/jose-costa-frontify)! - bugfix: prevent firefox from overriding outline class with global pseudo class def\n\n- [#1957](https://github.com/Frontify/fondue/pull/1957) [`6e96909`](https://github.com/Frontify/fondue/commit/6e96909c6dd8626b567372da6b0051f1b17e736a) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update dependencies\n\n- [#1945](https://github.com/Frontify/fondue/pull/1945) [`b740c19`](https://github.com/Frontify/fondue/commit/b740c19143bca8e5e7e2b8e7b490f2094fab50ba) Thanks [@noahwaldner](https://github.com/noahwaldner)! - fix: reorder props to allow `onPress` when used as tooltip trigger\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 3.5.3\nDESCRIPTION: This patch updates dependencies in version 3.5.3 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.3\n\n### Patch Changes\n\n- [#1957](https://github.com/Frontify/fondue/pull/1957) [`6e96909`](https://github.com/Frontify/fondue/commit/6e96909c6dd8626b567372da6b0051f1b17e736a) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update dependencies\n```\n\n----------------------------------------\n\nTITLE: Installing Fondue Package with NPM\nDESCRIPTION: Command to install the Fondue design system package from npm registry.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/README.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @frontify/fondue\n```\n\n----------------------------------------\n\nTITLE: Moving ThemeProvider and Removing Index File in @frontify/fondue-tokens 3.7.0\nDESCRIPTION: This minor update moves ThemeProvider into the components package and removes a leftover index file in version 3.7.0 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.7.0\n\n### Minor Changes\n\n- [#2187](https://github.com/Frontify/fondue/pull/2187) [`0901044`](https://github.com/Frontify/fondue/commit/0901044f3a7f655f658cbac63772798b4e8a9df6) Thanks [@noahwaldner](https://github.com/noahwaldner)! - fix: move ThemeProvider into the components package\n\n### Patch Changes\n\n- [#2191](https://github.com/Frontify/fondue/pull/2191) [`a19a7c6`](https://github.com/Frontify/fondue/commit/a19a7c67a32bf057852ad2779f3543564678b140) Thanks [@noahwaldner](https://github.com/noahwaldner)! - fix: remove leftover index file\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 3.5.8\nDESCRIPTION: This patch updates dependencies in version 3.5.8 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.8\n\n### Patch Changes\n\n- [#2085](https://github.com/Frontify/fondue/pull/2085) [`7c39542`](https://github.com/Frontify/fondue/commit/7c39542df14f8c3cb3db82197f1405504caf9dfa) Thanks [@jose-costa-frontify](https://github.com/jose-costa-frontify)! - chore: update dependencies\n\n- [#2089](https://github.com/Frontify/fondue/pull/2089) [`064db3d`](https://github.com/Frontify/fondue/commit/064db3d1e4bdb9a2df2516bd618c2488eb554223) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update more deps\n```\n\n----------------------------------------\n\nTITLE: Reverting Heading Token Change in @frontify/fondue-tokens 4.1.1\nDESCRIPTION: This patch reverts an unintended change to the heading token in version 4.1.1 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.1.1\n\n### Patch Changes\n\n- [#2262](https://github.com/Frontify/fondue/pull/2262) [`af436e4`](https://github.com/Frontify/fondue/commit/af436e4404d21ec60c0555addff3bbfc466d484f) Thanks [@noahwaldner](https://github.com/noahwaldner)! - fix: revert unintended change of heading token\n```\n\n----------------------------------------\n\nTITLE: SCSS Variables Token Output\nDESCRIPTION: Generated SCSS variables file containing color and size tokens\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/README.md#2025-04-16_snippet_3\n\nLANGUAGE: scss\nCODE:\n```\n// variables.scss\n$color-base-gray-light: #cccccc;\n$color-base-gray-medium: #999999;\n$color-base-gray-dark: #111111;\n$color-base-red: #ff0000;\n$color-base-green: #00ff00;\n$color-font-base: #ff0000;\n$color-font-secondary: #00ff00;\n$color-font-tertiary: #cccccc;\n$size-font-small: 0.75rem;\n$size-font-medium: 1rem;\n$size-font-large: 2rem;\n$size-font-base: 1rem;\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 3.5.6\nDESCRIPTION: This patch updates dependencies in version 3.5.6 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.6\n\n### Patch Changes\n\n- [#2022](https://github.com/Frontify/fondue/pull/2022) [`3db4385`](https://github.com/Frontify/fondue/commit/3db4385c2e3f92f2cd4cce12d3d6c8abaad4b326) Thanks [@jose-costa-frontify](https://github.com/jose-costa-frontify)! - chore: update dependencies\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 3.5.7\nDESCRIPTION: This patch updates dependencies in version 3.5.7 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.7\n\n### Patch Changes\n\n- [#2033](https://github.com/Frontify/fondue/pull/2033) [`48a6604`](https://github.com/Frontify/fondue/commit/48a660495177a065126c7ab1d700175cc7104961) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update dependencies\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 3.5.2\nDESCRIPTION: This patch updates dependencies in version 3.5.2 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.2\n\n### Patch Changes\n\n- [#1922](https://github.com/Frontify/fondue/pull/1922) [`3690a68`](https://github.com/Frontify/fondue/commit/3690a6830f220aeb0216c3aa3c5ab6ddfb4520cf) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: bump dependencies\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in @frontify/fondue-tokens 3.5.4\nDESCRIPTION: This patch updates dependencies in version 3.5.4 of @frontify/fondue-tokens.\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/tokens/CHANGELOG.md#2025-04-16_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.5.4\n\n### Patch Changes\n\n- [#1968](https://github.com/Frontify/fondue/pull/1968) [`032dfff`](https://github.com/Frontify/fondue/commit/032dfffb1b7eed0dafbb6e12f7aa16a74f34b2a6) Thanks [@SamuelAlev](https://github.com/SamuelAlev)! - chore: update dependencies\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry - Version Updates\nDESCRIPTION: Markdown formatted changelog entries detailing version changes, dependency updates, and feature modifications\nSOURCE: https://github.com/Frontify/fondue/blob/main/packages/fondue/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- [#1834](https://github.com/Frontify/fondue/pull/1834) [`42cde8f`](https://github.com/Frontify/fondue/commit/42cde8fc062f1bdb6370975ed3eb51812db276fa) Thanks [@ragi96](https://github.com/ragi96)! - chore: deprecating `linkChooser` in favor of `linkInput` from the package `@frontify/guideline-blocks-settings`\n\n- Updated dependencies [[`d9007fc`](https://github.com/Frontify/fondue/commit/d9007fcd392b5dc3c4b47416e196470672c4cd81), [`fe48b6c`](https://github.com/Frontify/fondue/commit/fe48b6c7d7f1200a5a0792afff85d635b6992eef)]:\n    - @frontify/fondue-components@1.2.3\n\n## 12.0.8\n\n### Patch Changes\n\n- Updated dependencies [[`10987c3`](https://github.com/Frontify/fondue/commit/10987c384e275dcba4dc59b3ffb1daa8dc5270f9)]:\n    - @frontify/fondue-components@1.2.2\n```"
  }
]
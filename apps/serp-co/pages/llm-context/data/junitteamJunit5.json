[
  {
    "owner": "junit-team",
    "repo": "junit5",
    "content": "TITLE: Defining Module Descriptor for JUnit Jupiter API\nDESCRIPTION: Module descriptor that specifies exported packages, required dependencies, and qualified opens for the JUnit Jupiter API. It exports core packages for writing tests and extensions while requiring dependencies like java.base, org.apiguardian.api, org.junit.platform.commons, and org.opentest4j.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-jupiter-api.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: module-info\nCODE:\n```\norg.junit.jupiter.api@${jupiterVersion} jar:file:.+/junit-jupiter-api-\\d.+\\.jar..module-info\\.class\nexports org.junit.jupiter.api\nexports org.junit.jupiter.api.condition\nexports org.junit.jupiter.api.extension\nexports org.junit.jupiter.api.extension.support\nexports org.junit.jupiter.api.function\nexports org.junit.jupiter.api.io\nexports org.junit.jupiter.api.parallel\nrequires java.base mandated\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.commons transitive\nrequires org.opentest4j transitive\nqualified opens org.junit.jupiter.api.condition to org.junit.platform.commons\n```\n\n----------------------------------------\n\nTITLE: Demonstrating JUnit 5 Test Execution Flow for Database Tests in Java\nDESCRIPTION: This code shows the complete execution sequence of a database test in JUnit 5, including lifecycle hooks from parent classes and extensions. It demonstrates how @BeforeAll, @BeforeEach, @Test, @AfterEach, and @AfterAll annotations are processed, along with extension methods, in their exact execution order.\nSOURCE: https://github.com/junit-team/junit5/blob/main/documentation/src/docs/asciidoc/user-guide/images/extensions_DatabaseTestsDemo.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Starter(Platform)\nResult = JupiterEngine.execute(DatabaseTestsDemo) {\n\n  // @BeforeAll (static invocation)\n  AbstractDatabaseTests.createDatabase()\n  // @BeforeAll (static invocation)\n  DatabaseTestsDemo.beforeAll()\n  Extension1.beforeEach()\n  Extension2.beforeEach()\n  // @BeforeEach inherited from AbstractDatabaseTests\n  DatabaseTestsDemo.connectToDatabase()\n  // @BeforeEach\n  DatabaseTestsDemo.insertTestDataIntoDatabase()\n  // @Test\n  DatabaseTestsDemo.testDatabaseFunctionality()\n  // @AfterEach\n  DatabaseTestsDemo.deleteTestDataFromDatabase()\n  // @AfterEach inherited from AbstractDatabaseTests\n  DatabaseTestsDemo.disconnectFromDatabase()\n  Extension2.afterEach()\n  Extension1.afterEach()\n  // @AfterAll (static invocation)\n  DatabaseTestsDemo.afterAll()\n  // @AfterAll (static invocation)\n  AbstractDatabaseTests.destroyDatabase()\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Module Descriptor for JUnit Jupiter Engine in Java\nDESCRIPTION: This snippet defines the module-info.class for the JUnit Jupiter Engine module. It specifies required dependencies, service providers, and conditional package exports necessary for the Jupiter test engine to function within the JUnit 5 platform.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-jupiter-engine.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\norg.junit.jupiter.engine@${jupiterVersion} jar:file:.+/junit-jupiter-engine-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires org.apiguardian.api static\nrequires org.junit.jupiter.api\nrequires org.junit.platform.commons\nrequires org.junit.platform.engine\nrequires org.opentest4j\nuses org.junit.jupiter.api.extension.Extension\nprovides org.junit.platform.engine.TestEngine with org.junit.jupiter.engine.JupiterTestEngine\nqualified opens org.junit.jupiter.engine.extension to org.junit.platform.commons\ncontains org.junit.jupiter.engine\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit Platform Engine Module Structure in Java Module System\nDESCRIPTION: This module descriptor defines the JUnit Platform Engine module structure including exported packages, module dependencies, and service provider interfaces. It exports packages related to engine APIs, discovery mechanisms, and support utilities while requiring foundational modules and providing implementations for discovery selector identifier parsers.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-engine.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: module-info\nCODE:\n```\norg.junit.platform.engine@${platformVersion} jar:file:.+/junit-platform-engine-\\d.+\\.jar..module-info\\.class\nexports org.junit.platform.engine\nexports org.junit.platform.engine.discovery\nexports org.junit.platform.engine.reporting\nexports org.junit.platform.engine.support.config\nexports org.junit.platform.engine.support.descriptor\nexports org.junit.platform.engine.support.discovery\nexports org.junit.platform.engine.support.filter\nexports org.junit.platform.engine.support.hierarchical\nexports org.junit.platform.engine.support.store\nrequires java.base mandated\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.commons transitive\nrequires org.opentest4j transitive\nuses org.junit.platform.engine.discovery.DiscoverySelectorIdentifierParser\nprovides org.junit.platform.engine.discovery.DiscoverySelectorIdentifierParser with org.junit.platform.engine.discovery.ClassSelector$IdentifierParser org.junit.platform.engine.discovery.ClasspathResourceSelector$IdentifierParser org.junit.platform.engine.discovery.ClasspathRootSelector$IdentifierParser org.junit.platform.engine.discovery.DirectorySelector$IdentifierParser org.junit.platform.engine.discovery.FileSelector$IdentifierParser org.junit.platform.engine.discovery.IterationSelector$IdentifierParser org.junit.platform.engine.discovery.MethodSelector$IdentifierParser org.junit.platform.engine.discovery.ModuleSelector$IdentifierParser org.junit.platform.engine.discovery.NestedClassSelector$IdentifierParser org.junit.platform.engine.discovery.NestedMethodSelector$IdentifierParser org.junit.platform.engine.discovery.PackageSelector$IdentifierParser org.junit.platform.engine.discovery.UniqueIdSelector$IdentifierParser org.junit.platform.engine.discovery.UriSelector$IdentifierParser\n```\n\n----------------------------------------\n\nTITLE: Defining Module Descriptor for JUnit Platform TestKit in Java\nDESCRIPTION: A module descriptor that specifies the exports, dependencies, and service usages for the JUnit Platform TestKit module. It exports the engine package and requires several dependencies including the core JUnit platform modules and testing libraries.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-testkit.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.testkit@${platformVersion} jar:file:.+/junit-platform-testkit-\\d.+\\.jar..module-info\\.class\nexports org.junit.platform.testkit.engine\nrequires java.base mandated\nrequires org.apiguardian.api static transitive\nrequires org.assertj.core transitive\nrequires org.junit.platform.commons\nrequires org.junit.platform.engine transitive\nrequires org.junit.platform.launcher transitive\nrequires org.opentest4j transitive\nuses org.junit.platform.engine.TestEngine\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit Jupiter Parameters Module Structure\nDESCRIPTION: Module definition for JUnit Jupiter Parameters that exports parameter-related packages and specifies module dependencies. It also defines qualified opens for reflection access from the platform commons module.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-jupiter-params.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.jupiter.params@${jupiterVersion} jar:file:.+/junit-jupiter-params-\\d.+\\.jar..module-info\\.class\nexports org.junit.jupiter.params\nexports org.junit.jupiter.params.aggregator\nexports org.junit.jupiter.params.converter\nexports org.junit.jupiter.params.provider\nexports org.junit.jupiter.params.support\nrequires java.base mandated\nrequires org.apiguardian.api static transitive\nrequires org.junit.jupiter.api transitive\nrequires org.junit.platform.commons transitive\nqualified opens org.junit.jupiter.params to org.junit.platform.commons\nqualified opens org.junit.jupiter.params.converter to org.junit.platform.commons\nqualified opens org.junit.jupiter.params.provider to org.junit.platform.commons\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit Platform JFR Module with Required Dependencies and Service Providers\nDESCRIPTION: The module-info.class for the JUnit Platform JFR module that defines dependencies on Java Flight Recorder, JUnit Platform Engine, and Launcher modules. It also registers service providers for discovery and execution listeners using Flight Recorder.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-jfr.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.jfr@${platformVersion} jar:file:.+/junit-platform-jfr-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires jdk.jfr\nrequires org.apiguardian.api static\nrequires org.junit.platform.engine\nrequires org.junit.platform.launcher\nprovides org.junit.platform.launcher.LauncherDiscoveryListener with org.junit.platform.jfr.FlightRecordingDiscoveryListener\nprovides org.junit.platform.launcher.TestExecutionListener with org.junit.platform.jfr.FlightRecordingExecutionListener\ncontains org.junit.platform.jfr\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit Jupiter Migration Support Module Structure\nDESCRIPTION: Module descriptor (module-info.class) for the JUnit Jupiter migration support module. It specifies exported packages for migration aids and rule support, along with required dependencies like the core JUnit platform and the JUnit 4 library.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-jupiter-migrationsupport.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\norg.junit.jupiter.migrationsupport@${jupiterVersion} jar:file:.+/junit-jupiter-migrationsupport-\\d.+\\.jar..module-info\\.class\nexports org.junit.jupiter.migrationsupport\nexports org.junit.jupiter.migrationsupport.conditions\nexports org.junit.jupiter.migrationsupport.rules\nexports org.junit.jupiter.migrationsupport.rules.adapter\nexports org.junit.jupiter.migrationsupport.rules.member\nrequires java.base mandated\nrequires junit transitive\nrequires org.apiguardian.api static transitive\nrequires org.junit.jupiter.api transitive\nrequires org.junit.platform.commons\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit Platform Launcher Module Structure and Dependencies\nDESCRIPTION: This module descriptor defines the structure of the JUnit Platform Launcher module, including its exported packages, required dependencies, and service interfaces. It exports the launcher API packages, requires core modules, and defines service provider interfaces for test execution.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-launcher.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.launcher@${platformVersion} jar:file:.+/junit-platform-launcher-\\d.+\\.jar..module-info\\.class\nexports org.junit.platform.launcher\nexports org.junit.platform.launcher.core\nexports org.junit.platform.launcher.listeners\nexports org.junit.platform.launcher.listeners.discovery\nrequires java.base mandated\nrequires java.logging transitive\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.commons transitive\nrequires org.junit.platform.engine transitive\nuses org.junit.platform.engine.TestEngine\nuses org.junit.platform.launcher.LauncherDiscoveryListener\nuses org.junit.platform.launcher.LauncherInterceptor\nuses org.junit.platform.launcher.LauncherSessionListener\nuses org.junit.platform.launcher.PostDiscoveryFilter\nuses org.junit.platform.launcher.TestExecutionListener\nprovides org.junit.platform.launcher.TestExecutionListener with org.junit.platform.launcher.listeners.UniqueIdTrackingListener\n```\n\n----------------------------------------\n\nTITLE: Installing JUnit 5 in Local Maven Repository\nDESCRIPTION: Command to install all JUnit 5 modules to a local Maven repository for use in other projects.\nSOURCE: https://github.com/junit-team/junit5/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew publishToMavenLocal\n```\n\n----------------------------------------\n\nTITLE: Defining Module Dependencies for JUnit Jupiter\nDESCRIPTION: This module-info.class declaration specifies the dependencies required by the org.junit.jupiter module. It includes the mandatory java.base module and transitive dependencies on Jupiter API, engine, and params modules that will be visible to modules requiring this one.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-jupiter.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.jupiter@${jupiterVersion} jar:file:.+/junit-jupiter-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires org.junit.jupiter.api transitive\nrequires org.junit.jupiter.engine transitive\nrequires org.junit.jupiter.params transitive\n```\n\n----------------------------------------\n\nTITLE: Building JUnit 5 from Source with Gradle\nDESCRIPTION: Command to build and test all JUnit 5 modules using the Gradle Wrapper. Requires JDK 21 to build.\nSOURCE: https://github.com/junit-team/junit5/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew build\n```\n\n----------------------------------------\n\nTITLE: Executing Gradle Build and Publishing for JUnit 5 Release\nDESCRIPTION: Command for building and publishing the JUnit 5 release artifacts to Sonatype's Maven repository. Disables build cache and configuration cache for a clean release build.\nSOURCE: https://github.com/junit-team/junit5/blob/main/RELEASING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew --no-build-cache --no-configuration-cache clean build publish closeSonatypeStagingRepository\n```\n\n----------------------------------------\n\nTITLE: Module Definition for JUnit Platform Commons\nDESCRIPTION: This module definition declares the packages exported by junit-platform-commons, its dependencies, service uses, and qualified exports to other JUnit 5 modules. It defines the module's contract with other components in the JUnit 5 ecosystem.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-commons.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.commons@${platformVersion} jar:file:.+/junit-platform-commons-\\d.+\\.jar..module-info\\.class\nexports org.junit.platform.commons\nexports org.junit.platform.commons.annotation\nexports org.junit.platform.commons.function\nexports org.junit.platform.commons.support\nexports org.junit.platform.commons.support.conversion\nexports org.junit.platform.commons.support.scanning\nrequires java.base mandated\nrequires java.logging\nrequires java.management\nrequires org.apiguardian.api static transitive\nuses org.junit.platform.commons.support.scanning.ClasspathScanner\nqualified exports org.junit.platform.commons.logging to org.junit.jupiter.api org.junit.jupiter.engine org.junit.jupiter.migrationsupport org.junit.jupiter.params org.junit.platform.console org.junit.platform.engine org.junit.platform.launcher org.junit.platform.reporting org.junit.platform.runner org.junit.platform.suite.api org.junit.platform.suite.engine org.junit.platform.testkit org.junit.vintage.engine\nqualified exports org.junit.platform.commons.util to org.junit.jupiter.api org.junit.jupiter.engine org.junit.jupiter.migrationsupport org.junit.jupiter.params org.junit.platform.console org.junit.platform.engine org.junit.platform.jfr org.junit.platform.launcher org.junit.platform.reporting org.junit.platform.runner org.junit.platform.suite.api org.junit.platform.suite.commons org.junit.platform.suite.engine org.junit.platform.testkit org.junit.vintage.engine\n```\n\n----------------------------------------\n\nTITLE: Triggering GitHub Actions Release Workflow for JUnit 5\nDESCRIPTION: GitHub CLI command to trigger the release workflow in GitHub Actions, specifying the release tag, version, and Sonatype staging repository ID as parameters.\nSOURCE: https://github.com/junit-team/junit5/blob/main/RELEASING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngh workflow run --ref r${VERSION} -f releaseVersion=${VERSION} -f stagingRepoId=orgjunit-1234 release.yml\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit Platform Console Module Dependencies and Structure\nDESCRIPTION: Module definition specifying required dependencies, package contents, and main class for the JUnit Platform Console module. Includes core dependencies like java.base, API Guardian, and other JUnit platform modules along with package declarations and tool provider implementation.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-console.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.console@${platformVersion} jar:file:.+/junit-platform-console-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires org.apiguardian.api static\nrequires org.junit.platform.commons\nrequires org.junit.platform.engine\nrequires org.junit.platform.launcher\nrequires org.junit.platform.reporting\nprovides java.util.spi.ToolProvider with org.junit.platform.console.ConsoleLauncherToolProvider\ncontains org.junit.platform.console\ncontains org.junit.platform.console.options\ncontains org.junit.platform.console.shadow.picocli\ncontains org.junit.platform.console.tasks\nmain-class org.junit.platform.console.ConsoleLauncher\n```\n\n----------------------------------------\n\nTITLE: Pushing JUnit 5 Release Branch and Tag to GitHub\nDESCRIPTION: Git command for pushing the release branch and tag to the GitHub repository, setting up upstream tracking and ensuring tags are included in the push.\nSOURCE: https://github.com/junit-team/junit5/blob/main/RELEASING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit push --set-upstream --follow-tags origin HEAD\n```\n\n----------------------------------------\n\nTITLE: Generating PDF User Guide with Gradle\nDESCRIPTION: This command uses Gradle to generate the PDF version of the JUnit 5 User Guide. The output file will be located at 'build/docs/asciidocPdf/user-guide/index.pdf'.\nSOURCE: https://github.com/junit-team/junit5/blob/main/documentation/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngradlew asciidoctorPdf\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Console Format\nDESCRIPTION: This console output shows the execution of a JUnit 5 test plan, including detailed hierarchical test information and final summary statistics. It demonstrates the format of test results when using the JUnit 5 console launcher, showing test status, duration, containers, and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Basic\n| | +-- .oO fancy display name Oo.\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:changeDisplayName()]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$BasicTestCase', methodName = 'changeDisplayName', methodParameterTypes = '']\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [OK] SUCCESSFUL\n\\| '-- Basic finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Console Test Execution Output with Results\nDESCRIPTION: Shows the console output of a JUnit 5 test execution. The output includes the hierarchical structure of test containers and tests, with their execution status, followed by a summary of the test run statistics including containers and tests found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nStarted:     .oO fancy display name Oo. ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:changeDisplayName()])\nFinished:    .oO fancy display name Oo. ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:changeDisplayName()])\nFinished:    Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Execution Output with Summary Statistics\nDESCRIPTION: A test execution report from JUnit Jupiter showing a single successful test execution with detailed statistics. The report shows test lifecycle events (STARTED, SUCCESSFUL) followed by a summary of containers and tests, including counts for found, skipped, started, aborted, successful, and failed items.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportSingleMessage(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportSingleMessage(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results in Plaintext\nDESCRIPTION: This output shows a completed JUnit Jupiter test run with a hierarchical display of test containers and a statistical summary. It indicates one test with a fancy display name was executed successfully, with detailed metrics about container and test execution counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Basic ✔\n      └─ .oO fancy display name Oo. ✔\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results\nDESCRIPTION: Console output showing the execution of a JUnit Jupiter test with a fancy display name, followed by detailed statistics about test containers and test methods that were found, skipped, started, aborted, successful and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJUnit Jupiter > Basic > .oO fancy display name Oo. :: STARTED\nJUnit Jupiter > Basic > .oO fancy display name Oo. :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Plaintext\nDESCRIPTION: This snippet shows the standard output format for a JUnit 5 test run. It includes timing information and detailed statistics for test containers and individual tests, covering found, skipped, started, aborted, successful, and failed items.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Run Summary in Plain Text\nDESCRIPTION: This snippet demonstrates the output format for a JUnit 5 test run summary. It includes execution time, container statistics (found, skipped, started, aborted, successful, failed), and test statistics (found, skipped, started, aborted, successful, failed).\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Analyzing JUnit Jupiter Test Execution Log Output\nDESCRIPTION: This snippet shows the full output of a JUnit Jupiter test execution, including test lifecycle events, reported values, and execution statistics. It demonstrates the structure of JUnit's console output for a single test run.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nStarted:     reportMultiEntriesWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultiEntriesWithSingleMapping(org.junit.jupiter.api.TestReporter)])\nReported:    reportMultiEntriesWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultiEntriesWithSingleMapping(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, foo = 'bar'\\]\nReported:    reportMultiEntriesWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultiEntriesWithSingleMapping(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, far = 'boo'\\]\nFinished:    reportMultiEntriesWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultiEntriesWithSingleMapping(org.junit.jupiter.api.TestReporter)])\nFinished:    Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Run Statistics in Plain Text\nDESCRIPTION: This snippet shows the formatted output of a JUnit 5 test run. It includes timing information and detailed statistics for both containers and individual tests, covering various execution states.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Test Execution Results with Failed Test\nDESCRIPTION: Console output from a JUnit Jupiter test run showing a failed test with a multi-line error message. The log includes start and completion information, the error message, and summary statistics about the test containers and tests executed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJUnit Jupiter > Fail > failWithMultiLineMessage() :: STARTED\nJUnit Jupiter > Fail > failWithMultiLineMessage() :: FAILED\n\torg.opentest4j.AssertionFailedError: multi\n\tline\n\tfail\n\tmessage\n    \t>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Execution Report with Skipped Test\nDESCRIPTION: A console output showing the results of a JUnit Jupiter test execution. The report indicates that one test named 'skipWithSingleLineReason()' was skipped with the reason 'single line skip reason'. The execution statistics show 2 containers were processed successfully, and 1 test was found but skipped.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJUnit Jupiter > Skip > skipWithSingleLineReason() :: SKIPPED\n\tReason: single line skip reason\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Viewing JUnit 5 Console Test Execution Output\nDESCRIPTION: This snippet shows the formatted console output from a JUnit 5 test run. It displays the hierarchical execution flow (engine, class, method) with start and finish markers, followed by a statistical summary of the test execution showing containers and tests found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nStarted:     empty() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:empty()])\nFinished:    empty() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:empty()])\nFinished:    Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Output\nDESCRIPTION: This snippet shows the complete output of a JUnit 5 test execution. It includes the test plan execution, detailed test results with hierarchy, stack trace indication, and summary statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Fail\n| | +-- failWithMultiLineMessage()\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithMultiLineMessage()]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n| | |    caught: org.opentest4j.AssertionFailedError: multi\n| | |              line\n| | |              fail\n| | |              message\n>> S T A C K T R A C E >>\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [X] FAILED\n\\| '-- Fail finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Output with TestReporter\nDESCRIPTION: This snippet shows the console output of a JUnit Jupiter test execution. It includes a test called 'reportSingleMessage' that uses TestReporter to publish a key-value pair 'value = foo', followed by test run statistics showing execution time and container/test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Report ✔\n      └─ reportSingleMessage(TestReporter) ✔\n            ....-..-..T..:...* value = `foo`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Console Output\nDESCRIPTION: A console output example showing a successful JUnit 5 test run. The output includes a tree structure showing the test hierarchy followed by statistics about test containers and test methods execution. All tests have passed successfully.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Basic [OK]\n    '-- empty() [OK]\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Test Execution Console Output for JUnit Jupiter\nDESCRIPTION: Console output displaying test execution results for a JUnit Jupiter test case named 'reportMultipleMessages' that reports multiple values ('foo' and 'bar'). Includes detailed test and container statistics showing successful execution.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Report ✔\n      └─ reportMultipleMessages(TestReporter) ✔\n            ....-..-..T..:...* value = `foo`\n            ....-..-..T..:...* value = `bar`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Execution Console Output\nDESCRIPTION: Console output from a JUnit 5 test run showing a test hierarchy, a failing test with a multi-line error message, and detailed test execution statistics. The output demonstrates how JUnit 5 reports test failures and formats multi-line assertion messages.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Fail [OK]\n    '-- failWithMultiLineMessage() [X] multi\n          line\n          fail\n          message\n\nFailures (1):\n  JUnit Jupiter:Fail:failWithMultiLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: multi\nline\nfail\nmessage\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Run Summary Statistics\nDESCRIPTION: This shows the standard console output format produced when JUnit 5 finishes a test run. It reports execution time and provides detailed statistics about test containers and individual tests, including counts of how many were found, skipped, started, aborted, succeeded, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Report Output\nDESCRIPTION: Console output from a JUnit Jupiter test execution showing a successful test run with multiple data mappings. The output includes test data entries with user information and test execution statistics including container and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithMultiMappings-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Report ✔\n      └─ reportMultiEntriesWithMultiMappings(TestReporter) ✔\n            ....-..-..T..:...*\n               user name = `dk38`\n               award year = `1974`\n            ....-..-..T..:...* single = `mapping`\n            ....-..-..T..:...*\n               user name = `st77`\n               award year = `1977`\n               last seen = `2001`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Console Output\nDESCRIPTION: This snippet shows the console output of a JUnit 5 test run. It includes a detailed failure message for a single test and provides statistics on test containers and individual tests executed, including counts for found, skipped, started, aborted, successful, and failed tests and containers.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithSingleLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: single line fail message\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit5 Test Execution Console Output\nDESCRIPTION: Console output displaying a test execution tree with a single skipped test and summary statistics. The output shows a hierarchical structure of the test execution, including containers, test cases, and detailed execution metrics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Skip\n| | +-- skipWithMultiLineMessage()\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]/[method:skipWithMultiLineMessage()]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$SkipTestCase', methodName = 'skipWithMultiLineMessage', methodParameterTypes = '']\n| | |    reason: multi\n| | |              line\n| | |              fail\n| | |              message\n| | |    status: [S] SKIPPED\n\\| '-- Skip finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Test Execution Log Output\nDESCRIPTION: Console output from JUnit 5 test execution showing test lifecycle events including start, reporting, and completion phases. The output includes detailed test container statistics and individual test results.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nStarted:     reportSingleEntryWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)])\nReported:    reportSingleEntryWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, foo = 'bar'\\]\nFinished:    reportSingleEntryWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)])\nFinished:    Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Run Summary Output Format\nDESCRIPTION: A plaintext representation of the JUnit 5 test execution summary that shows statistics for test containers and individual tests. This particular output shows 2 containers were found and successfully completed, while 1 test was found but skipped, with no tests actually executed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Viewing JUnit 5 Test Execution Results with Skip Message\nDESCRIPTION: Test execution output showing a skipped test case 'skipWithMultiLineMessage()' from JUnit Jupiter with a multi-line reason message, followed by test run statistics including container and test case counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Skip > skipWithMultiLineMessage() :: SKIPPED\n\tReason: multi\n\tline\n\tfail\n\tmessage\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Generating HTML User Guide with Gradle\nDESCRIPTION: This command uses Gradle to generate the HTML version of the JUnit 5 User Guide. The output file will be located at 'build/docs/asciidoc/user-guide/index.html'. On Linux systems, the 'graphviz' package must be installed for successful generation.\nSOURCE: https://github.com/junit-team/junit5/blob/main/documentation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngradlew asciidoctor\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Plaintext\nDESCRIPTION: This snippet shows the formatted output of a JUnit 5 test run, including execution time and detailed statistics for test containers and individual tests. It provides a quick overview of the test execution results.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Console Output for Skipped Test\nDESCRIPTION: Console output from JUnit 5 showing the execution of a test plan with a single skipped test. The output includes detailed information about the test structure, execution status, timing, and final summary statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Skip\n| | +-- skipWithSingleLineReason()\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]/[method:skipWithSingleLineReason()]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$SkipTestCase', methodName = 'skipWithSingleLineReason', methodParameterTypes = '']\n| | |    reason: single line skip reason\n| | |    status: [S] SKIPPED\n\\| '-- Skip finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit 5 Platform Suite API Module in Java\nDESCRIPTION: This module descriptor exports the org.junit.platform.suite.api package and specifies its dependencies. It requires java.base as mandated, org.apiguardian.api as a static transitive dependency, and org.junit.platform.commons as a transitive dependency.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-suite-api.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nexports org.junit.platform.suite.api\nrequires java.base mandated\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.commons transitive\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Console Output - Test Execution Log\nDESCRIPTION: Console output showing the lifecycle of a JUnit Jupiter test execution including test start, reporting, and completion events. The test executes a single test method 'reportSingleMessage' that uses TestReporter to output a value.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nStarted:     reportSingleMessage(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)])\nReported:    reportSingleMessage(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'foo'\\]\nFinished:    reportSingleMessage(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)])\nFinished:    Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying Test Execution Results in JUnit 5\nDESCRIPTION: Standard console output format displayed after running JUnit 5 tests. The output includes execution time and detailed statistics about test containers and individual tests, with counts for various states (found, skipped, started, aborted, successful, failed).\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Defining JUnit 5 Platform Suite Module Requirements\nDESCRIPTION: Specifies the module requirements for the JUnit 5 Platform Suite, including mandatory Java base and transitive dependencies on JUnit platform suite API and engine.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-suite.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\norg.junit.platform.suite@${platformVersion} jar:file:.+/junit-platform-suite-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires org.junit.platform.suite.api transitive\nrequires org.junit.platform.suite.engine transitive\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results with Failed Test\nDESCRIPTION: This console output shows the results of a JUnit 5 test execution with one failed test named 'failWithMultiLineMessage()'. The test failed with a multi-line assertion error message, followed by execution statistics showing 2 containers found/started/successful and 1 test found/started/failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithMultiLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: multi\nline\nfail\nmessage\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Run Results in Console\nDESCRIPTION: A formatted console output from JUnit 5 showing test execution statistics. The output includes timing information and detailed counts for test containers and individual tests, including their various states (found, skipped, started, aborted, successful, failed).\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Defining Module Dependencies for JUnit Platform Runner\nDESCRIPTION: This module-info descriptor defines the dependencies and exports for the JUnit Platform Runner module. It exports the org.junit.platform.runner package and requires several other modules including java.base (mandatory), junit (transitive), and various JUnit platform modules.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-runner.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.runner@${platformVersion} jar:file:.+/junit-platform-runner-\\d.+\\.jar..module-info\\.class\nexports org.junit.platform.runner\nrequires java.base mandated\nrequires junit transitive\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.launcher transitive\nrequires org.junit.platform.suite.api transitive\nrequires org.junit.platform.suite.commons\n```\n\n----------------------------------------\n\nTITLE: Test Run Console Output - JUnit 5\nDESCRIPTION: Console output showing the execution progress and results of a JUnit Jupiter test including test event notifications and final execution statistics. The output includes counts for test containers and individual tests, broken down by status (found, skipped, started, aborted, successful, failed).\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportMultiEntriesWithSingleMapping(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportMultiEntriesWithSingleMapping(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Execution Output with TestReporter Usage\nDESCRIPTION: Console output from a JUnit Jupiter test execution showing a test that published multiple entries to the TestReporter. The test 'reportMultiEntriesWithSingleMapping' successfully reported two key-value pairs: 'foo=bar' and 'far=boo'. The execution summary shows all tests and containers completed successfully.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Report ✔\n      └─ reportMultiEntriesWithSingleMapping(TestReporter) ✔\n            ....-..-..T..:...* foo = `bar`\n            ....-..-..T..:...* far = `boo`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Test Execution Results with Error Details in Console\nDESCRIPTION: This snippet shows the console output format of a JUnit Jupiter test run that includes a test failure. It displays the test hierarchy, the specific assertion failure message, and comprehensive test run statistics including container and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Fail ✔\n      └─ failWithSingleLineMessage() ✘ single line fail message\n\nFailures (1):\n  JUnit Jupiter:Fail:failWithSingleLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: single line fail message\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Console Output\nDESCRIPTION: Console output showing the execution of a JUnit test case that tests the TestReporter functionality. The test reports multiple messages ('foo' and 'bar') and completes successfully. The output includes test container lifecycle events and final execution statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nStarted:     reportMultipleMessages(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultipleMessages(org.junit.jupiter.api.TestReporter)])\nReported:    reportMultipleMessages(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultipleMessages(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'foo'\\]\nReported:    reportMultipleMessages(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultipleMessages(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'bar'\\]\nFinished:    reportMultipleMessages(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultipleMessages(org.junit.jupiter.api.TestReporter)])\nFinished:    Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Failure Output\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test run where one test failed. It includes the failure details, stack trace, and test run statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithMultiLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: multi\nline\nfail\nmessage\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Analyzing JUnit Jupiter Test Failure Output Format\nDESCRIPTION: The console output from a JUnit Jupiter test run showing a test failure. The output includes the test hierarchy structure, failure details with stack trace reference, and execution summary statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Fail [OK]\n    '-- failWithSingleLineMessage() [X] single line fail message\n\nFailures (1):\n  JUnit Jupiter:Fail:failWithSingleLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: single line fail message\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Tagging JUnit 5 Release in Git\nDESCRIPTION: Git command for creating a signed tag for the release version with the version number as both the tag message and name, prefixed with 'r'.\nSOURCE: https://github.com/junit-team/junit5/blob/main/RELEASING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit tag -s -m ${VERSION} r${VERSION}\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results with Failure\nDESCRIPTION: This shows the console output format of JUnit 5 when a test fails. It includes the failing test details, error message, and summary statistics for the test run such as number of containers and tests with their respective statuses.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-none-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plain text\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithSingleLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: single line fail message\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Analyzing JUnit 5 Test Execution Results Output\nDESCRIPTION: A console output from a JUnit 5 test run showing test execution statistics. The report indicates 2 failed tests out of 10 total tests, with 2 skipped tests and 1 aborted test. It also shows that all 11 containers were successful.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/standalone/expected-out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFailures (2):\n>> STACKTRACE >>\n\nTest run finished after \\d+ ms\n[        11 containers found      ]\n[         0 containers skipped    ]\n[        11 containers started    ]\n[         0 containers aborted    ]\n[        11 containers successful ]\n[         0 containers failed     ]\n[        10 tests found           ]\n[         2 tests skipped         ]\n[         8 tests started         ]\n[         1 tests aborted         ]\n[         5 tests successful      ]\n[         2 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Console Output Showing Test Execution Results\nDESCRIPTION: Console output from JUnit 5 showing the execution of a single test method named 'reportSingleMessage' that accepts a TestReporter parameter. The output includes test hierarchy, execution metrics, test status, and a summary of all test containers and test cases with their execution results.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Report\n| | +-- reportSingleMessage(TestReporter)\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$ReportTestCase', methodName = 'reportSingleMessage', methodParameterTypes = 'org.junit.jupiter.api.TestReporter']\n\\| \\| \\|   reports: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'foo'\\]\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [OK] SUCCESSFUL\n\\| '-- Report finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Execution Console Output\nDESCRIPTION: A complete console output from running a JUnit 5 test suite containing one failing test. The output includes detailed test information such as test hierarchy, unique identifiers, execution duration, and a summary of test statistics showing container and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-verbose-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n╷\n├─ JUnit Jupiter\n│  ├─ Fail\n│  │  ├─ failWithSingleLineMessage()\n│  │  │       tags: []\n│  │  │   uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithSingleLineMessage()]\n│  │  │     parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]\n│  │  │     source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n│  │  │     caught: org.opentest4j.AssertionFailedError: single line fail message\n>> S T A C K T R A C E >>\n│  │  │   duration: [\\d]+ ms\n│  │  │     status: ✘ FAILED\n│  └─ Fail finished after [\\d]+ ms\\.\n└─ JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Report in Plain Text\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test execution. It includes the test hierarchy, execution status, reported values, and detailed statistics about containers and tests run.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Report [OK]\n    '-- reportSingleMessage(TestReporter) [OK]\n        ....-..-..T..:...* value = `foo`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results\nDESCRIPTION: Console output showing detailed test execution results, including container and test statistics. Shows successful execution of 2 containers and 1 test with timing information.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportMultiEntriesWithSingleMapping(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportMultiEntriesWithSingleMapping(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Viewing JUnit Jupiter Test Execution Results in Plain Text Format\nDESCRIPTION: This snippet shows the console output from running a JUnit Jupiter test that uses TestReporter. It captures both the individual test lifecycle events (STARTED and SUCCESSFUL states) and the comprehensive execution summary with statistics for test containers and test methods.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportSingleMessage(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportSingleMessage(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Viewing JUnit 5 Console Output with TestReporter Messages\nDESCRIPTION: This console output demonstrates the execution of a JUnit 5 test that uses TestReporter to log multiple messages. The output includes detailed test execution information, timing data, and a summary of test execution statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-verbose-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n╷\n├─ JUnit Jupiter\n│  ├─ Report\n│  │  ├─ reportMultipleMessages(TestReporter)\n│  │  │       tags: []\n│  │  │   uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultipleMessages(org.junit.jupiter.api.TestReporter)]\n│  │  │     parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]\n│  │  │     source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$ReportTestCase', methodName = 'reportMultipleMessages', methodParameterTypes = 'org.junit.jupiter.api.TestReporter']\n│  │  │    reports: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'foo'\\]\n│  │  │    reports: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'bar'\\]\n│  │  │   duration: [\\d]+ ms\n│  │  │     status: ✔ SUCCESSFUL\n│  └─ Report finished after [\\d]+ ms\\.\n└─ JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Run Results in Plain Text\nDESCRIPTION: This snippet shows the formatted output of a JUnit 5 test run summary. It includes the total run time and detailed statistics for both containers and individual tests, covering their various possible states during execution.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Output\nDESCRIPTION: This snippet shows the console output of a JUnit 5 test execution. It includes the start and finish of test containers, individual test case execution, and a skipped test with a multi-line reason. The output concludes with a summary of the test run statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Skip ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase])\nSkipped:     skipWithMultiLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]/[method:skipWithMultiLineMessage()])\n             => Reason: multi\n             line\n             fail\n             message\nFinished:    Skip ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Summary in Plain Text\nDESCRIPTION: This snippet shows the standard output format for a JUnit 5 test run. It includes timing information and detailed statistics for both containers and individual tests, covering various execution states.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit5 Test Failure Output with Multi-Line Error Message\nDESCRIPTION: This snippet shows the console output of a JUnit5 test run with a failing test named 'failWithMultiLineMessage'. The test fails with a multi-line assertion error message, followed by a summary of the test execution statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-none-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithMultiLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: multi\nline\nfail\nmessage\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Execution Output with Test Statistics\nDESCRIPTION: A console output from JUnit Jupiter showing the execution of the 'reportMultipleMessages' test and a summary of test execution metrics. The output includes status of test containers and individual tests with counts for found, skipped, started, aborted, successful, and failed test elements.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportMultipleMessages(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportMultipleMessages(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Version Support Table in Markdown\nDESCRIPTION: Markdown table showing supported JUnit versions with 5.12.x being supported and versions below 5.12 being unsupported.\nSOURCE: https://github.com/junit-team/junit5/blob/main/SECURITY.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n|---------| ------------------ |\n| 5.12.x  | :white_check_mark: |\n| < 5.12  | :x:                |\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Results Output Pattern in Regex\nDESCRIPTION: A regular expression pattern that matches the standardized JUnit 5 test execution summary output. The pattern captures test execution duration and various metrics for both containers and tests, including counts for found, skipped, started, aborted, successful, and failed items.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Sample JUnit 5 Console Output for TestReporter Usage\nDESCRIPTION: This console output demonstrates the execution of a JUnit 5 test that uses TestReporter to publish multiple entries with a single mapping. The output shows the hierarchical display of test execution, including test metadata, status, duration, and final execution statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Report\n| | +-- reportMultiEntriesWithSingleMapping(TestReporter)\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultiEntriesWithSingleMapping(org.junit.jupiter.api.TestReporter)]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$ReportTestCase', methodName = 'reportMultiEntriesWithSingleMapping', methodParameterTypes = 'org.junit.jupiter.api.TestReporter']\n\\| \\| \\|   reports: ReportEntry \\[timestamp = ....-..-..T..:...*, foo = 'bar'\\]\n\\| \\| \\|   reports: ReportEntry \\[timestamp = ....-..-..T..:...*, far = 'boo'\\]\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [OK] SUCCESSFUL\n\\| '-- Report finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results\nDESCRIPTION: This snippet shows the detailed output of a JUnit Jupiter test execution. It includes the test hierarchy, execution details, and summary statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Report\n| | +-- reportMultipleMessages(TestReporter)\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportMultipleMessages(org.junit.jupiter.api.TestReporter)]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$ReportTestCase', methodName = 'reportMultipleMessages', methodParameterTypes = 'org.junit.jupiter.api.TestReporter']\n\\| \\| \\|   reports: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'foo'\\]\n\\| \\| \\|   reports: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'bar'\\]\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [OK] SUCCESSFUL\n\\| '-- Report finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Results in Plaintext\nDESCRIPTION: This snippet shows the structure and content of a JUnit Jupiter test execution report. It includes a tree-like representation of the test hierarchy and a summary of test and container statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithSingleMapping-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Report [OK]\n    '-- reportMultiEntriesWithSingleMapping(TestReporter) [OK]\n        ....-..-..T..:...* foo = `bar`\n        ....-..-..T..:...* far = `boo`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Summary with Skipped Test\nDESCRIPTION: Terminal output showing a JUnit Jupiter test run results. The output includes a skipped test with a single line reason, followed by execution statistics showing container and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJUnit Jupiter > Skip > skipWithSingleLineReason() :: SKIPPED\n\tReason: single line skip reason\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Console Output\nDESCRIPTION: This is the console output produced by JUnit 5 after test execution completion. It shows the execution time and statistics about test containers and individual tests, including how many were found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithMultiMappings-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Output with Failed Test\nDESCRIPTION: This console output shows the complete execution flow of a JUnit 5 test run containing a failed test. The output includes test hierarchy, execution details, failure information with stack trace placeholder, and summary statistics for the test run.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Fail\n| | +-- failWithSingleLineMessage()\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithSingleLineMessage()]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n| | |    caught: org.opentest4j.AssertionFailedError: single line fail message\n>> S T A C K T R A C E >>\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [X] FAILED\n\\| '-- Fail finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Results Console Output\nDESCRIPTION: Console output showing the results of a JUnit Jupiter test execution. Shows a test tree structure and detailed statistics about test containers and individual tests run, including counts of found, skipped, started, aborted, successful, and failed tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Basic ✔\n      └─ empty() ✔\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test run, including the status of individual tests and summary statistics for containers and tests. It provides information on the number of containers and tests found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Basic > empty() :: STARTED\nJUnit Jupiter > Basic > empty() :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Execution Output\nDESCRIPTION: The output of a JUnit Jupiter test execution, showing a successful execution of a test named 'empty()' and summarizing the test containers and individual tests processed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Basic > empty() :: STARTED\nJUnit Jupiter > Basic > empty() :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Jupiter Test Execution Log with Skipped Test\nDESCRIPTION: Output log showing a JUnit Jupiter test execution where a test named 'skipWithSingleLineReason()' was skipped with a single line reason. The log includes the test hierarchy and execution statistics showing 2 containers were found and executed successfully, while 1 test was found but skipped.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: log\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Skip [OK]\n    '-- skipWithSingleLineReason() [S] single line skip reason\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Console Test Execution Log Output\nDESCRIPTION: A complete log output from the JUnit 5 console runner showing the execution of a test case. The log tracks the test lifecycle from start to finish, including container and test events, and provides a summary of test statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nStarted:     empty() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:empty()])\nFinished:    empty() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:empty()])\nFinished:    Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Test Results Log Output\nDESCRIPTION: Standard console output from a JUnit test execution showing the test execution flow and final statistics. Includes information about containers and test cases with their various states (found, skipped, started, aborted, successful, failed).\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithMultiMappings-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportMultiEntriesWithMultiMappings(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportMultiEntriesWithMultiMappings(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results in Console Output\nDESCRIPTION: Standard console output format from a JUnit 5 test execution showing the execution time and detailed statistics for test containers and individual tests. This summary provides counts for containers and tests that were found, skipped, started, aborted, succeeded, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Console Output with Test Failure\nDESCRIPTION: This snippet shows the console output format of JUnit 5 when a test fails with a multi-line error message. It includes the test hierarchy, the specific assertion failure details, and comprehensive test run statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Fail ✔\n      └─ failWithMultiLineMessage() ✘ multi\n               line\n               fail\n               message\n\nFailures (1):\n  JUnit Jupiter:Fail:failWithMultiLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: multi\nline\nfail\nmessage\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Console Test Execution Output with Statistics\nDESCRIPTION: This snippet shows the complete console output from a JUnit 5 test run, including the test execution progress and final statistics. It demonstrates how JUnit 5 reports on test containers and individual tests, showing started/finished events and final execution statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nStarted:     .oO fancy display name Oo. ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:changeDisplayName()])\nFinished:    .oO fancy display name Oo. ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:changeDisplayName()])\nFinished:    Basic ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results in Plaintext\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test run, including the test case execution status and overall test statistics. It provides information on containers and tests found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportSingleEntryWithSingleMapping(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportSingleEntryWithSingleMapping(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Execution Log Output\nDESCRIPTION: Console output showing the execution of a skipped test case 'skipWithSingleLineReason()' with test containers and execution statistics. The log shows a hierarchical view of test execution followed by summary counts for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-verbose-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n╷\n├─ JUnit Jupiter\n│  ├─ Skip\n│  │  ├─ skipWithSingleLineReason()\n│  │  │       tags: []\n│  │  │   uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]/[method:skipWithSingleLineReason()]\n│  │  │     parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$SkipTestCase]\n│  │  │     source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$SkipTestCase', methodName = 'skipWithSingleLineReason', methodParameterTypes = '']\n│  │  │     reason: single line skip reason\n│  │  │     status: ↷ SKIPPED\n│  └─ Skip finished after [\\d]+ ms.\n└─ JUnit Jupiter finished after [\\d]+ ms.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Defining the JUnit Vintage Engine Module Declaration\nDESCRIPTION: Module descriptor that specifies the dependencies, service provider, and package contents of the org.junit.vintage.engine module. It requires basic Java modules, JUnit 4, API Guardian, and the JUnit Platform Engine module, while providing the VintageTestEngine implementation.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-vintage-engine.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.vintage.engine@${vintageVersion} jar:file:.+/junit-vintage-engine-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires junit\nrequires org.apiguardian.api static\nrequires org.junit.platform.engine\nprovides org.junit.platform.engine.TestEngine with org.junit.vintage.engine.VintageTestEngine\ncontains org.junit.vintage.engine\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Results Pattern\nDESCRIPTION: Standard output format template for JUnit 5 test execution results showing container and test execution statistics. Uses regex pattern [\\d]+ for elapsed time in milliseconds. Shows counts for various test states including found, skipped, started, aborted, successful and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Dependencies for JUnit Platform Suite Engine\nDESCRIPTION: Module descriptor defining required dependencies and service provider implementation for the JUnit Platform Suite Engine. Specifies mandatory dependencies on java.base and various JUnit Platform modules, while providing the SuiteTestEngine implementation.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-suite-engine.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\norg.junit.platform.suite.engine@${platformVersion} jar:file:.+/junit-platform-suite-engine-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires org.apiguardian.api static\nrequires org.junit.platform.commons\nrequires org.junit.platform.engine\nrequires org.junit.platform.launcher\nrequires org.junit.platform.suite.api\nrequires org.junit.platform.suite.commons\nprovides org.junit.platform.engine.TestEngine with org.junit.platform.suite.engine.SuiteTestEngine\ncontains org.junit.platform.suite.engine\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Summary Output\nDESCRIPTION: This code snippet shows the standard console output format produced by JUnit 5 after test execution completes. It displays execution statistics organized in two sections: container statistics (test classes/suites) and individual test statistics (test methods), including counts for found, skipped, started, aborted, successful, and failed items.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Output\nDESCRIPTION: This snippet shows the detailed output of a JUnit Jupiter test execution, including the test hierarchy, execution status, and timing information. It also provides summary statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Basic\n| | +-- empty()\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:empty()]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$BasicTestCase', methodName = 'empty', methodParameterTypes = '']\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [OK] SUCCESSFUL\n\\| '-- Basic finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results in Plain Text\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test execution, including a skipped test with a multi-line message and a summary of test execution statistics. It provides information on containers and tests in various states (found, skipped, started, aborted, successful, failed).\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Skip > skipWithMultiLineMessage() :: SKIPPED\n\tReason: multi\n\tline\n\tfail\n\tmessage\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Console Test Output\nDESCRIPTION: Console output from a JUnit test execution showing test lifecycle events, an assertion failure with a multi-line message, and execution statistics. The test runs through the JUnit Jupiter engine and completes with 2 containers and 1 failed test.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nStarted:     failWithMultiLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithMultiLineMessage()])\nFinished:    failWithMultiLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithMultiLineMessage()])\n             => Exception: org.opentest4j.AssertionFailedError: multi\n             line\n             fail\n             message\n>> S T A C K T R A C E >>\nFinished:    Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Logging JUnit Jupiter Test Execution\nDESCRIPTION: This snippet shows the complete log output of a JUnit Jupiter test execution. It includes the start and finish of test containers, individual test methods, and reported values. The log also provides summary statistics of the test run.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nStarted:     reportSingleEntryWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)])\nReported:    reportSingleEntryWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, foo = 'bar'\\]\nFinished:    reportSingleEntryWithSingleMapping(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)])\nFinished:    Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Console Test Execution Report with Failed Test\nDESCRIPTION: Console output from JUnit 5 test execution showing a failed test case with a single line message. The report includes the failure details and statistics about test containers and tests, summarizing that 2 containers were found and successful, while 1 test was found but failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithSingleLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: single line fail message\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Configuring JUnit 5 Platform Reporting Module in Java\nDESCRIPTION: This module-info class defines the structure and dependencies of the JUnit 5 Platform Reporting module. It exports specific packages, declares required dependencies, and provides service implementations for test execution and reporting.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-reporting.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\norg.junit.platform.reporting@${platformVersion} jar:file:.+/junit-platform-reporting-\\d.+\\.jar..module-info\\.class\nexports org.junit.platform.reporting.legacy\nexports org.junit.platform.reporting.legacy.xml\nexports org.junit.platform.reporting.open.xml\nrequires java.base mandated\nrequires java.xml\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.commons\nrequires org.junit.platform.engine transitive\nrequires org.junit.platform.launcher transitive\nrequires org.opentest4j.reporting.tooling.spi\nprovides org.junit.platform.launcher.TestExecutionListener with org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener\nprovides org.opentest4j.reporting.tooling.spi.htmlreport.Contributor with org.junit.platform.reporting.open.xml.JUnitContributor\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Console Output\nDESCRIPTION: Console log output showing the execution flow of a JUnit Jupiter test case named 'reportSingleMessage' along with test container lifecycle events and final execution statistics. The output includes timestamps, test hierarchy, reported values, and execution counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleMessage-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nStarted:     reportSingleMessage(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)])\nReported:    reportSingleMessage(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)])\n             => Reported values: ReportEntry \\[timestamp = ....-..-..T..:...*, value = 'foo'\\]\nFinished:    reportSingleMessage(TestReporter) ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleMessage(org.junit.jupiter.api.TestReporter)])\nFinished:    Report ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit Test Execution Output\nDESCRIPTION: Console output from a JUnit test run showing a single test failure with assertion error and execution statistics including container and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-none-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithSingleLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithSingleLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: single line fail message\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Results\nDESCRIPTION: This snippet shows the output of a JUnit 5 test execution. It includes the test name, status, execution time, and detailed statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Report > reportSingleEntryWithSingleMapping(TestReporter) :: STARTED\nJUnit Jupiter > Report > reportSingleEntryWithSingleMapping(TestReporter) :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Log\nDESCRIPTION: This snippet shows the complete output of a JUnit 5 test execution, including test lifecycle events and final execution statistics. It demonstrates a failing test with a single line error message and includes placeholders for dynamic content like execution time.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-flat-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nStarted:     failWithSingleLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithSingleLineMessage()])\nFinished:    failWithSingleLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithSingleLineMessage()])\n             => Exception: org.opentest4j.AssertionFailedError: single line fail message\n>> S T A C K T R A C E >>\nFinished:    Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Test Execution Console Output\nDESCRIPTION: Console output from a JUnit test execution showing a test hierarchy with a skipped test containing a multi-line message. Includes detailed statistics about test containers and test methods execution results.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithMultiLineMessage-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Skip [OK]\n    '-- skipWithMultiLineMessage() [S] multi\n          line\n          fail\n          message\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Failure with Multi-line Error Message in Console Output\nDESCRIPTION: This console output shows a JUnit Jupiter test failure where the test 'failWithMultiLineMessage()' in the 'ConsoleDetailsTests$FailTestCase' class failed with a multi-line error message. The output includes both the error details and the summary statistics of the test run.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-none-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nFailures (1):\n  JUnit Jupiter:Fail:failWithMultiLineMessage()\n    MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n    => org.opentest4j.AssertionFailedError: multi\nline\nfail\nmessage\n>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Output\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test execution, including the test case status, error message, and summary statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Fail > failWithSingleLineMessage() :: STARTED\nJUnit Jupiter > Fail > failWithSingleLineMessage() :: FAILED\n\torg.opentest4j.AssertionFailedError: single line fail message\n    \t>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: JUnit 5 Service Loading and Engine Discovery Log Output\nDESCRIPTION: Log entries showing the sequential loading of JUnit platform components including interceptors, session listeners, test engines, filters, and execution listeners. The output confirms successful discovery of three test engines: junit-platform-suite, junit-jupiter, and junit-vintage.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/standalone/expected-err.txt#2025-04-22_snippet_0\n\nLANGUAGE: log\nCODE:\n```\n.+ org.junit.platform.launcher.core.ServiceLoaderRegistry load\n.+ Loaded LauncherInterceptor instances: ..\n.+ org.junit.platform.launcher.core.ServiceLoaderRegistry load\n.+ Loaded LauncherSessionListener instances: ..\n.+ org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry loadTestEngines\n.+ Discovered TestEngines:\n- junit-platform-suite .+\n- junit-jupiter .+\n- junit-vintage .+\n.+ org.junit.platform.launcher.core.ServiceLoaderRegistry load\n.+ Loaded PostDiscoveryFilter instances: ..\n.+ org.junit.platform.launcher.core.ServiceLoaderRegistry load\n.+ Loaded LauncherDiscoveryListener instances: ..\n.+ org.junit.platform.launcher.core.ServiceLoaderRegistry load\n.+ Loaded TestExecutionListener instances: .+ \\Q(excluded classes: [])\\E\n.+ org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry loadTestEngines\n.+ Discovered TestEngines:\n- junit-platform-suite .+\n- junit-jupiter .+\n- junit-vintage .+\n```\n\n----------------------------------------\n\nTITLE: Test Execution Console Output\nDESCRIPTION: Console output showing test execution results for a JUnit Jupiter test case, including hierarchical test structure, timing information, and execution statistics. The output includes test reporting details and summary of containers and tests executed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-verbose-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n.\n+-- JUnit Jupiter\n| +-- Report\n| | +-- reportSingleEntryWithSingleMapping(TestReporter)\n| | |      tags: []\n| | |  uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]/[method:reportSingleEntryWithSingleMapping(org.junit.jupiter.api.TestReporter)]\n| | |    parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$ReportTestCase]\n| | |    source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$ReportTestCase', methodName = 'reportSingleEntryWithSingleMapping', methodParameterTypes = 'org.junit.jupiter.api.TestReporter']\n\\| \\| \\|   reports: ReportEntry \\[timestamp = ....-..-..T..:...*, foo = 'bar'\\]\n\\| \\| \\|  duration: [\\d]+ ms\n| | |    status: [OK] SUCCESSFUL\n\\| '-- Report finished after [\\d]+ ms\\.\n'-- JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Configuring JUnit 5 Platform Suite Commons Module in Java\nDESCRIPTION: Defines the module requirements and exports for the junit-platform-suite-commons module. It specifies dependencies on various JUnit Platform modules and the API Guardian library, and exports a package for use by runner and engine modules.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tooling-support-tests/projects/jar-describe-module/junit-platform-suite-commons.expected.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\norg.junit.platform.suite.commons@${platformVersion} jar:file:.+/junit-platform-suite-commons-\\d.+\\.jar..module-info\\.class\nrequires java.base mandated\nrequires org.apiguardian.api static transitive\nrequires org.junit.platform.commons\nrequires org.junit.platform.engine\nrequires org.junit.platform.launcher transitive\nrequires org.junit.platform.suite.api\nqualified exports org.junit.platform.suite.commons to org.junit.platform.runner org.junit.platform.suite.engine\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Statistics\nDESCRIPTION: This snippet shows the summary statistics of the JUnit 5 test execution, including the number of containers and tests found, skipped, started, aborted, successful, and failed. It also includes the total execution time.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-flat-ascii.out.txt#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard copyright and license notice template to be included in source files. The notice includes placeholders for year and copyright owner information, along with the standard Apache License terms and conditions reference.\nSOURCE: https://github.com/junit-team/junit5/blob/main/junit-platform-reporting/LICENSE-open-test-reporting.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Output with TestReporter Messages\nDESCRIPTION: Console output from a JUnit Jupiter test run showing a successful test that uses TestReporter to output multiple values. The output includes the test hierarchy, reported messages, and execution statistics.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Report [OK]\n    '-- reportMultipleMessages(TestReporter) [OK]\n        ....-..-..T..:...* value = `foo`\n        ....-..-..T..:...* value = `bar`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Pull Request License Agreement Text\nDESCRIPTION: Required markdown text to be added to pull request descriptions indicating agreement to the JUnit Contributor License Agreement\nSOURCE: https://github.com/junit-team/junit5/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\\n\\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Output\nDESCRIPTION: This snippet shows the console output of a JUnit Jupiter test execution. It includes the test hierarchy, failure details, and execution statistics. The test case 'failWithMultiLineMessage()' failed with a multi-line assertion error.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-verbose-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n╷\n├─ JUnit Jupiter\n│  ├─ Fail\n│  │  ├─ failWithMultiLineMessage()\n│  │  │       tags: []\n│  │  │   uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithMultiLineMessage()]\n│  │  │     parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]\n│  │  │     source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$FailTestCase', methodName = 'failWithMultiLineMessage', methodParameterTypes = '']\n│  │  │     caught: org.opentest4j.AssertionFailedError: multi\n│  │  │               line\n│  │  │               fail\n│  │  │               message\n>> S T A C K T R A C E >>\n│  │  │   duration: [\\d]+ ms\n│  │  │     status: ✘ FAILED\n│  └─ Fail finished after [\\d]+ ms.\n└─ JUnit Jupiter finished after [\\d]+ ms.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Git Commit Issue Reference Format\nDESCRIPTION: Format for referencing issues in Git commit messages at the bottom of the commit message\nSOURCE: https://github.com/junit-team/junit5/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nIssue: #999\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Summary in Plaintext\nDESCRIPTION: This snippet shows the standard output format for JUnit 5 test execution results. It includes information about test duration, container statistics, and test case statistics. The format uses square brackets and aligned text for readability.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultiEntriesWithMultiMappings-summary-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Execution Console Output\nDESCRIPTION: This snippet shows the console output produced when running JUnit 5 tests. It includes the test tree hierarchy, execution details such as duration and status, and a summary of test execution statistics. The output demonstrates a successful run of a single test method named 'empty()' within the 'BasicTestCase' class.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-empty-verbose-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTest plan execution started. Number of static tests: 1\n╷\n├─ JUnit Jupiter\n│  ├─ Basic\n│  │  ├─ empty()\n│  │  │       tags: []\n│  │  │   uniqueId: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]/[method:empty()]\n│  │  │     parent: [engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$BasicTestCase]\n│  │  │     source: MethodSource [className = 'org.junit.platform.console.ConsoleDetailsTests$BasicTestCase', methodName = 'empty', methodParameterTypes = '']\n│  │  │   duration: [\\d]+ ms\n│  │  │     status: ✔ SUCCESSFUL\n│  └─ Basic finished after [\\d]+ ms\\.\n└─ JUnit Jupiter finished after [\\d]+ ms\\.\nTest plan execution finished. Number of all tests: 1\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Visualizing JUnit 5 Jupiter Test Execution Flow with Lifecycle Methods\nDESCRIPTION: Demonstrates the sequential execution order of test lifecycle methods and extensions in JUnit 5's Jupiter engine. Shows how extension methods are invoked before and after the test's lifecycle methods, with the execution starting with extensions' beforeEach methods, followed by @BeforeEach methods, the @Test method, @AfterEach methods, and finally extensions' afterEach methods.\nSOURCE: https://github.com/junit-team/junit5/blob/main/documentation/src/docs/asciidoc/user-guide/images/extensions_BrokenLifecycleMethodConfigDemo.txt#2025-04-22_snippet_0\n\nLANGUAGE: pseudocode\nCODE:\n```\n@Starter(Platform)\nResult = JupiterEngine.execute(BrokenLifecycleMethodConfigDemo) {\n\n  Extension1.beforeEach()\n  Extension2.beforeEach()\n  // @BeforeEach\n  BrokenLifecycleMethodConfigDemo.insertTestDataIntoDatabase()\n  // @BeforeEach\n  BrokenLifecycleMethodConfigDemo.connectToDatabase()\n  // @Test\n  BrokenLifecycleMethodConfigDemo.testDatabaseFunctionality()\n  // @AfterEach\n  BrokenLifecycleMethodConfigDemo.disconnectFromDatabase()\n  // @AfterEach\n  BrokenLifecycleMethodConfigDemo.deleteTestDataFromDatabase()\n  Extension2.afterEach()\n  Extension1.afterEach()\n\n}\n```\n\n----------------------------------------\n\nTITLE: Secondary Licenses Notice Template\nDESCRIPTION: Standard template text for indicating the availability of source code under secondary licenses when Eclipse Public License v2.0 conditions are met.\nSOURCE: https://github.com/junit-team/junit5/blob/main/LICENSE.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"This Source Code may also be made available under the following Secondary Licenses when the conditions for such availability set forth in the Eclipse Public License, v. 2.0 are satisfied: {name license(s), version(s), and exceptions or additional permissions here}.\"\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit 5 Test Run Summary Output Format\nDESCRIPTION: The standard console output format displayed after JUnit 5 test execution completes. It shows the total run time and statistics for test containers and individual tests, including counts for how many were found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportMultipleMessages-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Executing JUnit Jupiter Test with Failure\nDESCRIPTION: This snippet shows the execution of a JUnit Jupiter test case named 'failWithMultiLineMessage()' that fails with a multi-line assertion error message. It includes test start and finish events, as well as the exception details.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithMultiLineMessage-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nStarted:     failWithMultiLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithMultiLineMessage()])\nFinished:    failWithMultiLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithMultiLineMessage()])\n             => Exception: org.opentest4j.AssertionFailedError: multi\n             line\n             fail\n             message\n>> S T A C K T R A C E >>\nFinished:    Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n```\n\n----------------------------------------\n\nTITLE: JUnit Test Execution Log with Failure\nDESCRIPTION: Console output showing the execution flow of a JUnit Jupiter test that fails with an AssertionFailedError. The log includes test lifecycle events (started/finished) and final execution statistics showing 2 containers and 1 failed test.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-flat-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTest execution started. Number of static tests: 1\nStarted:     JUnit Jupiter ([engine:junit-jupiter])\nStarted:     Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nStarted:     failWithSingleLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithSingleLineMessage()])\nFinished:    failWithSingleLineMessage() ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase]/[method:failWithSingleLineMessage()])\n             => Exception: org.opentest4j.AssertionFailedError: single line fail message\n>> S T A C K T R A C E >>\nFinished:    Fail ([engine:junit-jupiter]/[class:org.junit.platform.console.ConsoleDetailsTests$FailTestCase])\nFinished:    JUnit Jupiter ([engine:junit-jupiter])\nTest execution finished.\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test run, including the test structure, execution status, and summary statistics. It demonstrates a skipped test with a single line reason and provides a breakdown of container and test counts.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/skip/Skip-skipWithSingleLineReason-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Skip ✔\n      └─ skipWithSingleLineReason() ↷ single line skip reason\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         1 tests skipped         ]\n[         0 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results\nDESCRIPTION: This snippet shows the complete output of a JUnit Jupiter test run. It includes the test hierarchy, a single test result, execution time, and detailed statistics about containers and tests found, skipped, started, aborted, successful, and failed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-tree-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n╷\n└─ JUnit Jupiter ✔\n   └─ Report ✔\n      └─ reportSingleEntryWithSingleMapping(TestReporter) ✔\n            ....-..-..T..:...* foo = `bar`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results with Statistics\nDESCRIPTION: Console output from a JUnit Jupiter test run showing test execution flow and detailed statistics. The output demonstrates a single test with a fancy display name that completed successfully, along with container statistics showing 2 containers and 1 test were executed.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/basic/Basic-changeDisplayName-testfeed-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Basic > .oO fancy display name Oo. :: STARTED\nJUnit Jupiter > Basic > .oO fancy display name Oo. :: SUCCESSFUL\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test run, including the test method execution status, error message, and summary statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/fail/Fail-failWithSingleLineMessage-testfeed-unicode.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nJUnit Jupiter > Fail > failWithSingleLineMessage() :: STARTED\nJUnit Jupiter > Fail > failWithSingleLineMessage() :: FAILED\n\torg.opentest4j.AssertionFailedError: single line fail message\n    \t>> STACKTRACE >>\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         1 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Parsing JUnit 5 Test Results Output Pattern\nDESCRIPTION: Regular expression pattern that matches the standard JUnit 5 test results output format. Shows timing information and detailed statistics for both test containers and individual tests, including counts for various execution states.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-summary-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Displaying JUnit Jupiter Test Execution Results in Plain Text\nDESCRIPTION: This snippet shows the output of a JUnit Jupiter test run, including the test hierarchy, execution time, and summary statistics for containers and tests.\nSOURCE: https://github.com/junit-team/junit5/blob/main/platform-tests/src/test/resources/console/details/report/Report-reportSingleEntryWithSingleMapping-tree-ascii.out.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n'-- JUnit Jupiter [OK]\n  '-- Report [OK]\n    '-- reportSingleEntryWithSingleMapping(TestReporter) [OK]\n        ....-..-..T..:...* foo = `bar`\n\nTest run finished after [\\d]+ ms\n[         2 containers found      ]\n[         0 containers skipped    ]\n[         2 containers started    ]\n[         0 containers aborted    ]\n[         2 containers successful ]\n[         0 containers failed     ]\n[         1 tests found           ]\n[         0 tests skipped         ]\n[         1 tests started         ]\n[         0 tests aborted         ]\n[         1 tests successful      ]\n[         0 tests failed          ]\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard boilerplate notice text that should be included in source files to apply the Apache License 2.0. The template includes placeholders for year and copyright owner information that must be replaced with actual values.\nSOURCE: https://github.com/junit-team/junit5/blob/main/junit-platform-console/LICENSE-picocli.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```"
  }
]
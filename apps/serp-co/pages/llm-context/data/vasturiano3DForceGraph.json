[
  {
    "owner": "vasturiano",
    "repo": "3d-force-graph",
    "content": "TITLE: Initializing 3D Force Graph with Data\nDESCRIPTION: Shows how to create a new 3D Force Graph instance, attach it to a DOM element, and populate it with graph data.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst myGraph = new ForceGraph3D(<myDOMElement>)\n  .graphData(<myData>);\n```\n\n----------------------------------------\n\nTITLE: Input Data Structure for 3D Force Graph\nDESCRIPTION: JSON schema showing the expected input format for the 3D force graph visualization. Demonstrates the structure for nodes with id, name, and value properties, and links with source and target references.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nodes\": [\n        {\n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1\n        },\n        {\n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 10\n        },\n        ...\n    ],\n    \"links\": [\n        {\n            \"source\": \"id1\",\n            \"target\": \"id2\"\n        },\n        ...\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing 3D Force Graph with Configuration Options\nDESCRIPTION: Demonstrates the syntax for creating a new ForceGraph3D instance with DOM element and configuration options.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnew ForceGraph3d(<domElement>, { configOptions })\n```\n\n----------------------------------------\n\nTITLE: Node Styling Configuration Methods\nDESCRIPTION: Methods for customizing node appearance including size, color, opacity, visibility, and custom 3D objects. Uses ThreeJS for 3D rendering with support for custom geometries and materials.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmyGraph\n  .nodeRelSize(4) // Set node volume ratio\n  .nodeVal('value') // Set node value accessor\n  .nodeLabel('name') // Set node label accessor\n  .nodeColor('color') // Set node color accessor\n  .nodeOpacity(0.75) // Set node opacity\n  .nodeResolution(8) // Set node geometric resolution\n```\n\n----------------------------------------\n\nTITLE: Link Styling Configuration Methods\nDESCRIPTION: Methods for customizing link appearance including width, color, curvature, directional arrows, and particles. Supports custom materials and 3D objects using ThreeJS.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmyGraph\n  .linkLabel('name') // Set link label accessor\n  .linkColor('color') // Set link color accessor\n  .linkWidth(1) // Set link width\n  .linkCurvature(0) // Set link curvature\n  .linkDirectionalArrowLength(0) // Set directional arrow length\n  .linkDirectionalParticles(0) // Set number of particles\n```\n\n----------------------------------------\n\nTITLE: Configuring D3 Force in 3D Force Graph\nDESCRIPTION: This method allows getting or setting internal forces that control the d3 simulation engine. It follows the same interface as d3-force-3d's simulation.force.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nd3Force(str, [fn])\n```\n\n----------------------------------------\n\nTITLE: Setting DAG Mode in 3D Force Graph\nDESCRIPTION: This method applies layout constraints based on graph directionality. It works for Directed Acyclic Graph structures and offers various directional options.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\ndagMode([str])\n```\n\n----------------------------------------\n\nTITLE: Configuring Force Engine in 3D Force Graph\nDESCRIPTION: This method allows setting or getting the force-simulation engine used by the graph. It can be either 'd3' or 'ngraph'.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nforceEngine([str])\n```\n\n----------------------------------------\n\nTITLE: Accessing ThreeJS Scene in 3D Force Graph\nDESCRIPTION: This method provides access to the internal ThreeJS Scene object. It can be used to extend the current scene with additional objects not related to the 3D Force Graph.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nscene()\n```\n\n----------------------------------------\n\nTITLE: Accessing Post-Processing Composer in 3D Force Graph\nDESCRIPTION: This method allows access to the post-processing composer, which can be used to add rendering effects to the scene. By default, it has a single RenderPass that renders the scene without effects.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\npostProcessingComposer()\n```\n\n----------------------------------------\n\nTITLE: Importing 3D Force Graph Module in JavaScript\nDESCRIPTION: Shows how to import the 3D Force Graph library as an ES module in JavaScript applications.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport ForceGraph3D from '3d-force-graph';\n```\n\n----------------------------------------\n\nTITLE: Including 3D Force Graph via CDN in HTML\nDESCRIPTION: Demonstrates how to include the 3D Force Graph library in an HTML page using a script tag and CDN.\nSOURCE: https://github.com/vasturiano/3d-force-graph/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"//cdn.jsdelivr.net/npm/3d-force-graph\"></script>\n```"
  }
]
[
  {
    "owner": "parse-community",
    "repo": "parse-server-push-adapter",
    "content": "TITLE: Configuring Parse Server with Push Adapter\nDESCRIPTION: JavaScript code snippet showing how to import and configure the Parse Push Adapter in Parse Server options. Includes import statements for both ESM and CommonJS patterns and demonstrates setting up the adapter with platform-specific options.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ParsePushAdapter } from '@parse/push-adapter';\n\n// For CommonJS replace the import statemtent above with the following line:\n// const ParsePushAdapter = require('@parse/push-adapter').default;\n\nconst parseServerOptions = {\n  push: {\n    adapter: new ParsePushAdapter({\n      ios: {\n        // Apple push options\n      },\n      android: {\n        // Android push options\n      },\n      web: {\n        // Web push options\n      },\n      expo: {\n        // Expo push options\n      }\n    })\n  }\n  // Other Parse Server options\n};\n```\n\n----------------------------------------\n\nTITLE: Parse Server Configuration with Bundled Push Adapter\nDESCRIPTION: Configuration example for using the Push Adapter that comes bundled with Parse Server. When using the bundled version, the push options are configured directly without initializing the adapter separately.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst parseServerOptions = {\n  push: {\n    ios: {\n      // Apple push options\n    }\n    // Other push options\n  }\n  // Other Parse Server options\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Apple Push Notification Options\nDESCRIPTION: Example configuration for Apple push notifications, showing how to set up both APNS and FCM for different Apple ecosystems. Includes token configuration with key path, key ID, team ID, and bundle identifier.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nios: {\n  // Deliver push notifications to iOS devices via APNS\n  token: {\n    key: __dirname + '/apns.p8',\n    keyId: '<APNS_KEY_ID>',\n    teamId: '<APNS_TEAM_ID>'\n  },\n  topic: '<BUNDLE_IDENTIFIER>',\n  production: true\n},\nosx: {\n  // Deliver push notifications to macOS devices via FCM\n  firebaseServiceAccount: __dirname + '/firebase.json'\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Push Notification Options\nDESCRIPTION: Example configuration for Android push notifications using Firebase Cloud Messaging (FCM). Shows how to specify the path to the Firebase service account JSON file.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nandroid: {\n  firebaseServiceAccount: __dirname + '/firebase.json'\n}\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Service Account Key Object for FCM\nDESCRIPTION: Configuration example showing how to provide Google Cloud service account credentials as an object instead of a file path. Includes projectId, clientEmail, and privateKey needed for FCM authentication.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nandroid: {\n  firebaseServiceAccount: {\n    projectId: '<PROJECT_ID>',\n    clientEmail: 'example@<PROJECT_ID>.iam.gserviceaccount.com',\n    privateKey: '-----BEGIN PRIVATE KEY-----<KEY>-----END PRIVATE KEY-----\\n'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Expo Push Notification Options\nDESCRIPTION: Example configuration for Expo push notifications, showing how to set the Expo access token needed for authentication with the Expo push notification service.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nexpo: {\n  accessToken: '<EXPO_ACCESS_TOKEN>'\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Parse Push Adapter via NPM\nDESCRIPTION: Command to install the Parse Push Adapter package from npm. The user should replace <VERSION> with the specific version number they want to install.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save @parse/push-adapter@<VERSION>\n```\n\n----------------------------------------\n\nTITLE: Configuring FCM HTTP/1.1 Legacy Transport\nDESCRIPTION: Configuration example showing how to enable the legacy HTTP/1.1 transport for FCM instead of the default HTTP/2 protocol. This may be needed for compatibility with certain environments.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nandroid: {\n  firebaseServiceAccount: __dirname + '/firebase.json',\n  fcmEnableLegacyHttpTransport: true\n}\n```\n\n----------------------------------------\n\nTITLE: Deprecated FCM Legacy API Configuration for Android\nDESCRIPTION: Example of the deprecated configuration for Android push notifications using the FCM legacy API with apiKey. This approach will be decommissioned in June 2024.\nSOURCE: https://github.com/parse-community/parse-server-push-adapter/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nandroid: {\n  // Deliver push notifications via FCM legacy API (deprecated)\n  apiKey: '<API_KEY>'\n}\n```"
  }
]
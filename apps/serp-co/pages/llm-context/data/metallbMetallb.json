[
  {
    "owner": "metallb",
    "repo": "metallb",
    "content": "TITLE: Defining BGPAdvertisement Structure in Go\nDESCRIPTION: Go struct for BGPAdvertisement, representing the intention to advertise IPs via BGP protocol with various configuration options.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype bgpAdvertisement struct {\n  Name                     string\n  IPAddressPools           []string\n  IPAddressPoolSelector    *metav1.LabelSelector\n  AggregationLength        *int\n  LocalPref                *uint32\n  Communities              []string\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring IP Address Pool in MetalLB\nDESCRIPTION: This YAML configuration defines an IPAddressPool resource which specifies the range of IP addresses that MetalLB can assign to Load Balancer services. It supports IPv4 and IPv6 addresses defined by CIDR notation or IP ranges.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.0/24\n  - 192.168.9.1-192.168.9.5\n  - fc00:f853:0ccd:e799::/124\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB with Kustomize (FRR Mode)\nDESCRIPTION: This Kustomize configuration deploys MetalLB in FRR mode, which enables BFD support for BGP sessions. It references the appropriate remote kustomization file.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# kustomization.yml\nnamespace: metallb-system\n\nresources:\n  - github.com/metallb/metallb/config/frr?ref=main\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Peer with BFD Support in MetalLB\nDESCRIPTION: This YAML configuration creates a BGPPeer resource with BFD support enabled. It references a BFD profile that provides quicker path failure detection than BGP alone provides.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: peersample\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n  bfdProfile: testbfdprofile\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB via Kubernetes Manifest\nDESCRIPTION: This command applies the MetalLB manifest directly from the project's GitHub repository, installing MetalLB in its default configuration.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/main/config/manifests/metallb-native.yaml\n```\n\n----------------------------------------\n\nTITLE: Starting MetalLB Development Environment\nDESCRIPTION: Commands to start the MetalLB development environment in various configurations, including unconfigured, BGP, and Layer 2 modes.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env\n```\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env --protocol bgp\n```\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env --protocol layer2\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB with FRR Mode via Manifest\nDESCRIPTION: This command installs MetalLB in FRR mode, which enables BFD support for BGP sessions, by applying a specific manifest from the project's GitHub repository.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/main/config/manifests/metallb-frr.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Peering via VRF in MetalLB\nDESCRIPTION: This YAML demonstrates how to establish a BGP connection using interfaces with a Linux VRF as master. The 'vrf' field specifies which VRF to use for the BGP session and service announcements.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n  peerPort: 179\n  vrf: \"red\"\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Advertisement in MetalLB\nDESCRIPTION: This YAML configuration creates an L2Advertisement resource which instructs MetalLB to advertise service IPs using Layer 2 mode. Without any selectors, it will advertise all available IPAddressPools.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example\n  namespace: metallb-system\n```\n\n----------------------------------------\n\nTITLE: Configuring BGPAdvertisement in MetalLB\nDESCRIPTION: This YAML configuration creates a BGPAdvertisement resource that instructs MetalLB to advertise service IPs via BGP. Without any selectors, it will advertise all available IPAddressPools.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: example\n  namespace: metallb-system\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB with Kustomize (Native BGP)\nDESCRIPTION: This Kustomize configuration deploys MetalLB with the native BGP implementation. It references the remote kustomization file from the MetalLB GitHub repository.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# kustomization.yml\nnamespace: metallb-system\n\nresources:\n  - github.com/metallb/metallb/config/native?ref=main\n```\n\n----------------------------------------\n\nTITLE: Configuring Layer 2 IP Address Pool in MetalLB\nDESCRIPTION: This YAML configuration creates an IPAddressPool for Layer 2 mode, giving MetalLB control over IPs from 192.168.1.240 to 192.168.1.250. It's used to define the IPs that can be assigned to Kubernetes services.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.1.240-192.168.1.250\n```\n\n----------------------------------------\n\nTITLE: Configuring FRR Mode in Helm Values\nDESCRIPTION: This YAML snippet shows how to enable FRR mode when installing MetalLB via Helm. It sets the 'frr.enabled' value to true in the speaker configuration.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nspeaker:\n  frr:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring BFD Profile for BGP in MetalLB\nDESCRIPTION: This YAML configuration creates a BFD (Bidirectional Forwarding Detection) profile that can be used to provide quicker path failure detection for BGP sessions. It defines the intervals for receiving and transmitting BFD packets.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BFDProfile\nmetadata:\n  name: testbfdprofile\n  namespace: metallb-system\nspec:\n  receiveInterval: 380\n  transmitInterval: 270\n```\n\n----------------------------------------\n\nTITLE: Configuring IP Address Pool in MetalLB\nDESCRIPTION: YAML configuration for defining an IP address pool in MetalLB with a specified /24 network range.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 198.51.100.10/24\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB with Helm\nDESCRIPTION: These Helm commands add the MetalLB repository and install MetalLB using the default configuration. An optional values file can be specified for custom configurations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add metallb https://metallb.github.io/metallb\nhelm install metallb metallb/metallb\n```\n\n----------------------------------------\n\nTITLE: Configuring IP Address Sharing in MetalLB\nDESCRIPTION: These service definitions demonstrate how to share a single IP address between two services using the metallb.io/allow-shared-ip annotation. This example shows TCP and UDP DNS services sharing the same IP address with different protocols.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: dns-service-tcp\n  namespace: default\n  annotations:\n    metallb.io/allow-shared-ip: \"key-to-share-1.2.3.4\"\nspec:\n  type: LoadBalancer\n  loadBalancerIP: 1.2.3.4\n  ports:\n    - name: dnstcp\n      protocol: TCP\n      port: 53\n      targetPort: 53\n  selector:\n    app: dns\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: dns-service-udp\n  namespace: default\n  annotations:\n    metallb.io/allow-shared-ip: \"key-to-share-1.2.3.4\"\nspec:\n  type: LoadBalancer\n  loadBalancerIP: 1.2.3.4\n  ports:\n    - name: dnsudp\n      protocol: UDP\n      port: 53\n      targetPort: 53\n  selector:\n    app: dns\n```\n\n----------------------------------------\n\nTITLE: Defining BGP Peer and Advertisement Configuration in YAML for MetalLB\nDESCRIPTION: YAML configuration examples showing how MetalLB's BGP resources are structured, including BGPPeer and BGPAdvertisement resources that define peer connections and advertisement policies.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: peer1\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.18.0.5\n  peerPort: 179\n---\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: peer2\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.18.0.6\n  peerPort: 179\n---\napiVersion: metallb.io/v1beta1               \nkind: BGPAdvertisement                                                    \nmetadata:\n  name: advertisement\n  namespace: metallb-system\n  spec:\n    peers: peer1\n```\n\n----------------------------------------\n\nTITLE: Fetching Kubernetes Service Information\nDESCRIPTION: Commands to retrieve detailed information about Kubernetes service and endpoint configurations for troubleshooting MetalLB issues.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/troubleshooting/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get endpointslices <my-service> -o yaml\nkubectl get svc <my_service> -o yaml\n```\n\n----------------------------------------\n\nTITLE: Basic IPAddressPool Configuration in MetalLB\nDESCRIPTION: Example of a basic IPAddressPool configuration for MetalLB using a private IP range.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_ipaddresspool_configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: cheap\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.0/24\n```\n\n----------------------------------------\n\nTITLE: Configuring BGPAdvertisement with Specific IPAddressPools in MetalLB\nDESCRIPTION: This YAML configuration creates a BGPAdvertisement resource that selectively advertises IPs from specific IPAddressPools. It allows for fine-grained control over which IP pools are advertised via BGP.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Peer in MetalLB\nDESCRIPTION: This YAML configuration creates a BGPPeer resource that instructs MetalLB on how to establish a BGP session with an external router. It defines the ASN numbers for both sides and the peer address to connect to.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: sample\n  namespace: metallb-system\nspec:\n  myASN: 64500\n  peerASN: 64501\n  peerAddress: 10.0.0.1\n```\n\n----------------------------------------\n\nTITLE: Integrating MetalLB with FRR-K8s for Advanced BGP Configuration\nDESCRIPTION: This example shows how to enable a MetalLB BGPPeer to receive incoming prefixes by combining MetalLB's BGPPeer configuration with FRR-K8s API. This allows for more advanced BGP configurations beyond MetalLB's standard capabilities.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: peer\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n---\napiVersion: frrk8s.metallb.io/v1beta1\nkind: FRRConfiguration\nmetadata:\n  name: with-recv\n  namespace: metallb-system\nspec:\n  bgp:\n    routers:\n    - asn: 64512\n      neighbors:\n      - address: 172.30.0.3\n        asn: 64512\n        toReceive:\n          allowed:\n            mode: all\n```\n\n----------------------------------------\n\nTITLE: Configuring Experimental FRR-K8s Mode in Helm Values\nDESCRIPTION: This YAML snippet demonstrates how to enable the experimental FRR-K8s mode when installing MetalLB via Helm. It sets the 'frrk8s.enabled' value to true.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nfrrk8s:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring BGPAdvertisement Resource in Kubernetes\nDESCRIPTION: BGPAdvertisement resource definition for advertising IPs from selected IPAddressPools via BGP with customizable parameters like communities and aggregation lengths.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/apis/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: example-advertisement\nspec:\n  aggregationLength: 32\n  aggregationLengthV6: 128\n  communities:\n    - \"1234:1234\"\n  ipAddressPools:\n    - \"pool1\"\n  nodeSelectors:\n    - matchLabels:\n        key: value\n```\n\n----------------------------------------\n\nTITLE: Requesting Specific IPs with MetalLB Using loadBalancerIPs Annotation\nDESCRIPTION: This snippet demonstrates how to create a LoadBalancer service that requests a specific IP address using the metallb.io/loadBalancerIPs annotation. This is the preferred method as spec.LoadBalancerIP is planned for deprecation in Kubernetes.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  annotations:\n    metallb.io/loadBalancerIPs: 192.168.1.100\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Configuring External BGP Advertisement for Production Pool\nDESCRIPTION: Defines a BGP advertisement for the production IP pool. This makes the production IPs publicly accessible without any special routing constraints.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/example.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: external\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - production\n```\n\n----------------------------------------\n\nTITLE: BGP Session Status Definition in YAML and Go\nDESCRIPTION: Defines the structure for exposing BGP and BFD session states per node and peer.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/crd-status.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPSessionStatus\nmetadata:\n  name: worker0-peer1\n  namespace: metallb-system\n  labels:\n    metallb.io/node: worker0\n    metallb.io/peer: peer1\nstatus:\n    bgpStatus: Established\n    bfdStatus: Up\n```\n\nLANGUAGE: go\nCODE:\n```\ntype MetalLBBGPStatus struct {\n    bgpStatus string\n    bfdStatus string\n}\n\ntype BGPSessionStatus struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n    Status            MetalLBBGPStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Checking L2 Advertisement with arping Command in Bash\nDESCRIPTION: Uses the arping command to verify the MAC address associated with a LoadBalancer IP address. This helps confirm that MetalLB is correctly responding to ARP requests, which is crucial for L2 mode operation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/troubleshooting/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ arping -I ens3 192.168.1.240\nARPING 192.168.1.240 from 192.168.1.35 ens3\nUnicast reply from 192.168.1.240 [FA:16:3E:5A:39:4C]  1.077ms\nUnicast reply from 192.168.1.240 [FA:16:3E:5A:39:4C]  1.321ms\nUnicast reply from 192.168.1.240 [FA:16:3E:5A:39:4C]  0.883ms\nUnicast reply from 192.168.1.240 [FA:16:3E:5A:39:4C]  0.968ms\n^CSent 4 probes (1 broadcast(s))\nReceived 4 response(s)\n```\n\n----------------------------------------\n\nTITLE: Sample Enhanced IPAddressPool YAML Configuration with Service Allocation\nDESCRIPTION: Example YAML configuration for an IPAddressPool Custom Resource with service allocation options.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: ipaddresspool-sample3\n  namespace: metallb-system\nspec:\n  addresses:\n    - 2002:2:2::1-2002:2:2::100\n    - 172.20.0.100/24\n  autoAssign: false\n  avoidBuggyIPs: true\n  allocateTo:\n    priority: 50\n    namespaces:\n      - namespaceA\n      - namespaceB\n    serviceSelector:\n        tenant: foo\n```\n\n----------------------------------------\n\nTITLE: BFDProfile Custom Resource Definition for the MetalLB Operator\nDESCRIPTION: YAML definition of the BFDProfile CRD that will be introduced to the MetalLB operator. This allows configuration of BFD parameters through Kubernetes resources.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/bgp-bfd.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1alpha1\nkind: BFDProfile\nmetadata:\n  name: profile\n  namespace: metallb-system\nspec:\n  receive-interval: 150\n  transmit-interval: 150\n  detect-multiplier: 10\n  echo-receive-interval: 20\n  echo-transmit-interval: 20\n  echo-mode: true\n  passive-mode: true\n  minimum-ttl: 5\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Advertisement with Specific IPAddressPools in MetalLB\nDESCRIPTION: This YAML configuration creates an L2Advertisement resource that selectively advertises IPs from specific IPAddressPools. It allows for fine-grained control over which IP pools are advertised via Layer 2.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n```\n\n----------------------------------------\n\nTITLE: Defining Production IP Address Pool in MetalLB\nDESCRIPTION: Creates a production IP address pool with a small range of public IPs. This pool is intended for production services that require specific, stable public IP addresses.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/example.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: production\n  namespace: metallb-system\nspec:\n  # Production services will go here. Public IPs are expensive, so we leased\n  # just 4 of them.\n  addresses:\n  - 42.176.25.64/30\n```\n\n----------------------------------------\n\nTITLE: Configuring Local BGP Advertisement with Community for Sandbox Pool\nDESCRIPTION: Defines a BGP advertisement for the sandbox IP pool with a community tag. This ensures sandbox IPs are only propagated through the corporate VPN to developer offices.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/example.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: local\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - sandbox\n  communities:\n    - vpn-only\n```\n\n----------------------------------------\n\nTITLE: Enhanced BGPAdvertisement and L2Advertisement Structures in Go\nDESCRIPTION: Updated Go structs for BGPAdvertisement and L2Advertisement with node selector for announcing IPs from specific nodes.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_8\n\nLANGUAGE: go\nCODE:\n```\ntype bgpAdvertisement struct {\n  Name                     string\n  IPAddressPools           []string\n  IPAddressPoolSelector    *metav1.LabelSelector\n  AggregationLength        *int\n  LocalPref                *uint32\n  Communities              []string\n  NodeSelector             *metav1.LabelSelector\n}\n\ntype l2Advertisement struct {\n  Name              string\n  NodeSelector      *metav1.LabelSelector\n}\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB with Experimental FRR-K8s Mode\nDESCRIPTION: This command installs MetalLB in the experimental FRR-K8s mode by applying a specific manifest from the project's GitHub repository.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/main/config/manifests/metallb-frr-k8s.yaml\n```\n\n----------------------------------------\n\nTITLE: Requesting a Specific Address Pool in MetalLB\nDESCRIPTION: This example shows how to request an IP from a specific address pool using the metallb.io/address-pool annotation. This allows selecting a category of addresses without specifying an exact IP.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  annotations:\n    metallb.io/address-pool: production-public-ips\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Peers with BFD in MetalLB\nDESCRIPTION: Example of configuring a BGP peer with BFD enabled in MetalLB. The bfd-profile property references a previously defined BFD profile.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/bgp-bfd.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\npeers:\n- peer-address: 10.0.0.1\n  peer-asn: 64501\n  my-asn: 64500\n  bfd-profile: bfdprofile1\n```\n\n----------------------------------------\n\nTITLE: Enabling BGP Graceful Restart in MetalLB\nDESCRIPTION: This YAML configuration demonstrates how to enable BGP Graceful Restart for a specific BGP neighbor. Graceful Restart allows for minimizing network disruptions during upgrades by continuing to forward data packets while routing protocol information is being restored.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n  enableGracefulRestart: true\n```\n\n----------------------------------------\n\nTITLE: DualStack Service Configuration\nDESCRIPTION: Example of a Kubernetes service configuration using PreferDualStack IP family policy.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_ipaddresspool_configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-app\nspec:\n  type: LoadBalancer\n  ipFamilyPolicy: PreferDualStack\n  ipFamilies:\n  - ipv6\n  - ipv4\n```\n\n----------------------------------------\n\nTITLE: Defining Community Resource in Kubernetes\nDESCRIPTION: Community resource definition for creating named aliases for BGP communities that can be referenced in BGPPeer configurations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/apis/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: Community\nmetadata:\n  name: example-community\nspec:\n  communities:\n    - name: \"example-alias\"\n      value: \"1234:1234\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Both L2 and BGP Advertisements for the Same IP Pool in MetalLB\nDESCRIPTION: This snippet shows how to configure both Layer 2 and BGP advertisements for the same IP address pool in MetalLB. It includes the creation of an IPAddressPool and corresponding L2Advertisement and BGPAdvertisement resources.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/faq/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.0/24\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: bgp\n  namespace: metallb-system\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: l2\n  namespace: metallb-system\n```\n\n----------------------------------------\n\nTITLE: Sample BGPAdvertisement YAML Configuration\nDESCRIPTION: Example YAML configuration for a BGPAdvertisement Custom Resource, specifying IP pools and advertisement properties.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: bgpadvertisement\n  namespace: metallb-system\nspec:\n    ipaddresspools:\n      - pool1\n      - pool2\n    - communities:\n        - 65535:65282\n    aggregationLength: 32\n    localPref: 100\n```\n\n----------------------------------------\n\nTITLE: Enhanced IPAddressPool Structure with Service Allocation in Go\nDESCRIPTION: Updated Go struct for IPAddressPool with service allocation options to restrict pools to specific services or namespaces.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_12\n\nLANGUAGE: go\nCODE:\n```\ntype IPAddressPool struct {\n  Name              string\n  Addresses         []string\n  AvoidBuggyIPs     bool\n  AutoAssign        *bool\n  AllocateTo        serviceAllocation\n}\n\ntype serviceAllocation struct {\n  Priority          int\n  Namespaces        []string\n  NamespaceSelector *metav1.LabelSelector\n  ServiceSelector   *metav1.LabelSelector\n}\n```\n\n----------------------------------------\n\nTITLE: Namespace and Service Scoped IPAddressPool\nDESCRIPTION: Advanced IPAddressPool configuration with namespace and service selectors for multitenancy support.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_ipaddresspool_configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: ippool-ns-service-alloc-sample\n  namespace: metallb-system\nspec:\n  addresses:\n    - 192.168.20.0/24\n  avoidBuggyIPs: true\n  serviceAllocation:\n    priority: 50\n    namespaces:\n      - namespace-a\n      - namespace-b\n    namespaceSelectors:\n      - matchLabels:\n          foo: bar\n    serviceSelectors:\n      - matchExpressions:\n          - {key: app, operator: In, values: [bar]}\n```\n\n----------------------------------------\n\nTITLE: Configuring Local BGP Advertisement\nDESCRIPTION: YAML configuration for local BGP advertisement with specific pool, aggregation length, local preference, and community settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: local\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n  aggregationLength: 32\n  localPref: 100\n  communities:\n  - 65535:65282\n```\n\n----------------------------------------\n\nTITLE: Configuring Calico BGP to Advertise Service LoadBalancer IPs\nDESCRIPTION: Example command using calicoctl to configure Calico to announce MetalLB's LoadBalancer IP ranges through BGP. This approach allows Calico to handle the BGP announcements without requiring MetalLB speakers.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/calico.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncalicoctl patch BGPConfig default --patch '{\"spec\": {\"serviceLoadBalancerIPs\": [{\"cidr\": \"10.11.0.0/16\"},{\"cidr\":\"10.1.5.0/24\"}]}}'\n```\n\n----------------------------------------\n\nTITLE: Disabled Auto-Assign IPAddressPool Configuration\nDESCRIPTION: Configuration for an IPAddressPool with disabled automatic assignment for expensive IPs.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_ipaddresspool_configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: expensive\n  namespace: metallb-system\nspec:\n  addresses:\n  - 42.176.25.64/30\n  autoAssign: false\n```\n\n----------------------------------------\n\nTITLE: BGP Unnumbered Configuration Example in YAML\nDESCRIPTION: Example YAML configuration for MetalLB BGP peer using interface-based unnumbered BGP peering.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: peer-unnumber\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  ASN: 645000\n  interface: net0\n```\n\n----------------------------------------\n\nTITLE: Configuring External BGP Advertisement\nDESCRIPTION: YAML configuration for external BGP advertisement with specified pool and aggregation length.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: external\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n  aggregationLength: 24\n```\n\n----------------------------------------\n\nTITLE: Sample IPAddressPool YAML Configuration\nDESCRIPTION: Example YAML configuration for an IPAddressPool Custom Resource, specifying IP ranges and allocation options.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: ipaddresspool-sample3\n  namespace: metallb-system\nspec:\n  addresses:\n    - 2002:2:2::1-2002:2:2::100\n    - 172.20.0.100/24\n  autoAssign: false\n  avoidBuggyIPs: true\n```\n\n----------------------------------------\n\nTITLE: Defining FRR-K8S Neighbor Structure in Go\nDESCRIPTION: Go struct definition for FRR-K8S Neighbor configuration supporting both traditional IP-based and interface-based BGP peering.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype Neighbor struct {\n  Address string `json:\"address\"`\n  Interface string `json:\"interface\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Enhanced BGPAdvertisement YAML Configuration with Peer Selection\nDESCRIPTION: Example YAML configuration for a BGPAdvertisement Custom Resource with peer selection.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkGPd: BGPAdvertisement\nmetadata:\n  name: bgpadvertisement\n  namespace: metallb-system\nspec:\n    ipaddresspools:\n      - pool1\n      - pool2\n    peers:\n      - peer1\n      - peer2\n    - communities:\n        - 65535:65282\n    aggregationLength: 32\n    localPref: 100\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox IP Address Pool in MetalLB\nDESCRIPTION: Creates a sandbox IP address pool using a large private IP range. This pool provides ample addresses for ephemeral developer environments that don't require specific IP assignments.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/example.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: sandbox\n  namespace: metallb-system\nspec:\n  addresses:\n  # On the other hand, the sandbox environment uses private IP space,\n  # which is free and plentiful. We give this address pool a ton of IPs,\n  # so that developers can spin up as many sandboxes as they need.\n  - 192.168.144.0/20\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Peer with Source Address\nDESCRIPTION: YAML configuration for BGP peer with explicit source address specification.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n  peerPort: 179\n  sourceAddress: 172.30.0.2\n  nodeSelectors:\n  - matchLabels:\n      kubernetes.io/hostname: node-1\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Advertisement with Node Selector for Subnet A\nDESCRIPTION: YAML configuration that limits IP announcements from first-pool to specific nodes (NodeA and NodeB) using node selectors.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_l2_configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n  nodeSelectors:\n  - matchLabels:\n      kubernetes.io/hostname: NodeA\n  - matchLabels:\n      kubernetes.io/hostname: NodeB\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Advertisement with Combined Node and Interface Selection\nDESCRIPTION: YAML configuration combining both node selector and interface selection to announce IPs from fourth-pool only from eth3 interface on NodeA.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_l2_configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - fourth-pool\n  nodeSelectors:\n  - matchLabels:\n      kubernetes.io/hostname: NodeA\n  interfaces:\n  - eth3\n```\n\n----------------------------------------\n\nTITLE: Merged FRR Configuration from Multiple Sources\nDESCRIPTION: YAML example showing the merged configuration that results from combining multiple FRRConfiguration resources, including combined prefix lists and neighbor configurations.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  bgp:\n    routers:\n    - asn: 64512\n      prefixesIpV4:\n      - 192.168.10.0/32\n      - 192.168.11.0/32\n      neighbors:\n      - address: 172.18.0.5\n        asn: 64512\n        port: 179\n      - address: 172.18.0.6\n        asn: 64512\n        port: 179\n        toAdvertise:\n          allowed:\n          - 192.168.10.0/32\n          - 192.168.11.0/32\n        toReceive:\n          allowed:\n            allowAll: true\n```\n\n----------------------------------------\n\nTITLE: Defining BFD Profiles in MetalLB Configuration\nDESCRIPTION: Structure for defining BFD profiles in MetalLB's configuration file. The profile specifies timing parameters, echo mode, passive mode, and TTL settings used by the BFD protocol.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/bgp-bfd.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbfd-profiles:\n- name: bfdprofile1\n  receive-interval: 150\n  transmit-interval: 150\n  detect-multiplier: 10\n  echo-receive-interval: 20\n  echo-transmit-interval: 20\n  echo-mode: true\n  passive-mode: true\n  minimum-ttl: 5\n```\n\n----------------------------------------\n\nTITLE: Example of Multiple L2Advertisements for Interface Selection\nDESCRIPTION: YAML configuration demonstrating how multiple L2Advertisements combine to determine interface selection for IP announcements.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_l2_configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example-advertisement9\n  namespace: metallb-system\nspec:\n  interfaces:\n  - eno1\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example-advertisement10\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - pool1\n  nodeSelectors:\n  - matchLabels:\n      kubernetes.io/hostname: hostB\n  interfaces:\n  - ens18\n```\n\n----------------------------------------\n\nTITLE: Interface-Specific Pool Advertisement\nDESCRIPTION: YAML configuration showing how to announce different IP pools on specific interfaces.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/layer2-bind-interfaces.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example-advertisement3\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n    - pool1\n  interfaces:\n    - veth1\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example-advertisement4\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n    - pool2\n  interfaces:\n    - veth0\n```\n\n----------------------------------------\n\nTITLE: Sample BGPPeer and BFDProfile YAML Configurations\nDESCRIPTION: Example YAML configurations for BGPPeer and BFDProfile Custom Resources, specifying peer connection details and BFD settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPPeer\nmetadata:\n  name: peer-bfd\n  namespace: metallb-system\nspec:\n  peerAddress: 10.0.0.2\n  peerASN: 64501\n  myASN: 64500\n  routerID: 10.10.10.10\n  peerPort: 1\n  holdTime: \"10s\"\n  sourceAddress: 1.1.1.1\n  bfdProfile: bfdprofilefull\n\napiVersion: metallb.io/v1beta1\nkind: BFDProfile\nmetadata:\n  name: bfdprofilefull\n  namespace: metallb-system\nspec:\n  receiveInterval: 35\n  transmitInterval: 35\n  detectMultiplier: 37\n  echoReceiveInterval: 38\n  echoTransmitInterval: 39\n  echoMode: true\n  passiveMode: true\n  minimumTtl: 10\n```\n\n----------------------------------------\n\nTITLE: BGP Advertisement Configuration\nDESCRIPTION: BGP advertisement configuration for MetalLB showing pool assignments for different IP families.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_ipaddresspool_configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: external\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - ipv4-pool\n  - ipv6-pool\n  - dualstack-pool\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Advertisement with Peer Selection\nDESCRIPTION: YAML configuration for BGP advertisement limited to specific peers.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - PoolA\n  peers:\n  - PeerA\n  - PeerB\n```\n\n----------------------------------------\n\nTITLE: Service BGP Status Definition in YAML and Go\nDESCRIPTION: Defines the structure for exposing service BGP announcement status including target peers.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/crd-status.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: ServiceBGPStatus\nmetadata:\n  name: service1-worker0\n  namespace: servicenamespace\n  labels:\n    metallb.io/node: worker0\n    metallb.io/service: service1\nstatus:\n    bgpPeers:\n        - peerA\n        - peerB\n```\n\nLANGUAGE: go\nCODE:\n```\ntype MetalLBServiceBGPStatus struct {\n    Peers []string\n}\n\ntype ServiceBGPStatus struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n    Status            MetalLBServiceBGPStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Advertisement with Interface Selection\nDESCRIPTION: YAML configuration that specifies which network interfaces (eth0 and eth1) can be used for announcing LoadBalancer IPs from third-pool.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_l2_configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - third-pool\n  interfaces:\n  - eth0\n  - eth1\n```\n\n----------------------------------------\n\nTITLE: Defining BGP Community for VPN-Only Route Propagation\nDESCRIPTION: Configures a BGP community that datacenter routers recognize as 'VPN only'. This community is used to tag sandbox IP advertisements for limited propagation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/usage/example.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Our datacenter routers understand a \"VPN only\" BGP community.\n# Announcements tagged with this community will only be propagated\n# through the corporate VPN tunnel back to developer offices.\napiVersion: metallb.io/v1beta1\nkind: Community\nmetadata:\n  name: communities\n  namespace: metallb-system\nspec:\n  communities:\n  - name: vpn-only\n    value: 1234:1\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Graceful Restart in MetalLB using BGPPeer Resource\nDESCRIPTION: This YAML example demonstrates how to enable Graceful Restart for a BGP peer in MetalLB by setting the enableGracefulRestart field to true. GR is configured per BGP neighbor and helps minimize network disruptions during planned pod restarts.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/gracefulrestart-bgp.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n  enableGracefulRestart: true\n```\n\n----------------------------------------\n\nTITLE: Generated MetalLB CRD Resources\nDESCRIPTION: The resulting CRD resources generated by the conversion tool, including BGPPeer, IPAddressPool, and BGPAdvertisement custom resources.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/migration_to_crds.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# This was autogenerated by MetalLB's custom resource generator.\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  creationTimestamp: null\n  name: peer1\n  namespace: metallb-system\nspec:\n  holdTime: 1m30s\n  keepaliveTime: 0s\n  myASN: 64512\n  passwordSecret: {}\n  peerASN: 64512\n  peerAddress: 10.96.0.100\nstatus: {}\n---\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  creationTimestamp: null\n  name: my-ip-space\n  namespace: metallb-system\nspec:\n  addresses:\n  - 198.51.100.0/24\nstatus: {}\n---\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  creationTimestamp: null\n  name: bgpadvertisement1\n  namespace: metallb-system\nspec:\n  aggregationLength: 32\n  communities:\n  - 64512:1234\n  ipAddressPools:\n  - my-ip-space\n  localPref: 100\nstatus: {}\n---\n```\n\n----------------------------------------\n\nTITLE: Network Diagram for Unnumbered BGP Testing on Secondary Interface\nDESCRIPTION: This Mermaid diagram shows the test setup for unnumbered BGP on secondary interfaces. It illustrates a topology with a ToR switch having both default and VRF-specific routing domains connected to Kubernetes nodes with both primary and secondary interfaces.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_6\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    subgraph Rack0\n        direction LR\n        style Rack0 fill:#ffffff,stroke:#000000,stroke-width:2px\n\n        subgraph ToR0\n            style ToR0 fill:#ffffff,stroke:#000000,stroke-width:2px\n            direction TB\n            subgraph Default\n              direction LR\n              A1[net0] -.- A{Routing}\n              A -.- A3[eth00]\n              A -.- A4[eth01]\n            end\n            subgraph RED VRF*\n              direction LR\n              AA1[net00] -.- AA{Routing}\n              AA -.- AA3[eth00.vlanRED]\n              AA -.- AA4[eth01.vlanRED]\n              BGP-T0(BGP configured on RED)\n            end\n\n        end\n\n        subgraph Node0\n            direction TB\n            B1 --- B2(cni)\n            B2 --- B3\n            BB1\n            subgraph Pod1[pod]\n              B3[eth0]\n            end\n            BGP-N0(BGP process)\n        end\n\n        subgraph Node1\n            direction TB\n            C1 --- C2(cni)\n            C2 --- C3\n            CC1\n            subgraph Pod2[pod]\n              C3[eth0]\n            end\n            BGP-N1(BGP process)\n        end\n\n        %% Connections between subgraphs\n        A3 ------- B1[eth0]\n        AA3 -- BGP Peering ----- BB1[net0]\n        A4 ------- C1[eth0]\n        AA4 -- BGP Peering ----- CC1[net0]\n    end\n\n    %% Define styles for subgraphs and nodes\n    classDef node fill:#f0f0f0,stroke:#000000,stroke-width:1px;\n    class Node0 node;\n    class Node1 node;\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo with Relearn Theme Options in TOML\nDESCRIPTION: An example hugo.toml configuration file showing all available parameters for the Relearn theme. This annotated configuration demonstrates how to set up the theme with various customization options.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/configuration/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n{{% include \"config/_default/params.toml\" %}}\n```\n\n----------------------------------------\n\nTITLE: Generated FRRConfiguration in YAML by MetalLB\nDESCRIPTION: An example of the FRRConfiguration resource that MetalLB generates based on the BGP peers and service configuration, targeting a specific node with appropriate BGP routing settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: frrk8s.metallb.io/v1alpha1\nkind: FRRConfiguration\nmetadata:\n  name: metallb-kind-worker\n  namespace: metallb-system\nspec:\n  nodeSelector:\n    kubernetes.io/hostname: kind-worker\n  bgp:\n    routers:\n    - asn: 64512\n      prefixesIpV4:\n      - 192.168.10.0/32\n      neighbors:\n      - address: 172.18.0.5\n        asn: 64512\n        port: 179\n      - address: 172.18.0.6\n        asn: 64512\n        port: 179\n        toAdvertise:\n          allowed:\n            prefixes:\n            - 192.168.10.0/32\n```\n\n----------------------------------------\n\nTITLE: Configuring L2Advertisement with Node Selector for Subnet B\nDESCRIPTION: YAML configuration that restricts IP announcements from second-pool to NodeC using node selector.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_l2_configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - second-pool\n  nodeSelectors:\n  - matchLabels:\n      kubernetes.io/hostname: NodeC\n```\n\n----------------------------------------\n\nTITLE: Monitoring ARP Requests with tcpdump in Bash\nDESCRIPTION: Uses tcpdump to monitor ARP traffic for a specific LoadBalancer IP address. This helps diagnose if ARP requests are properly reaching the node and if MetalLB is responding correctly.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/troubleshooting/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ tcpdump -n -i ens3 arp src host 192.168.1.240\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on ens3, link-type EN10MB (Ethernet), capture size 262144 bytes\n17:04:40.667263 ARP, Reply 192.168.1.240 is-at fa:16:3e:5a:39:4c, length 46\n17:04:41.667485 ARP, Reply 192.168.1.240 is-at fa:16:3e:5a:39:4c, length 46\n17:04:42.667572 ARP, Reply 192.168.1.240 is-at fa:16:3e:5a:39:4c, length 46\n17:04:43.667545 ARP, Reply 192.168.1.240 is-at fa:16:3e:5a:39:4c, length 46\n^C\n4 packets captured\n6 packets received by filter\n0 packets dropped by kernel\n```\n\n----------------------------------------\n\nTITLE: Status Reporting Structure for FRR in Go\nDESCRIPTION: Go struct definitions for the status reporting system that exposes the current FRR configuration state, including desired and running configurations and any error messages.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_7\n\nLANGUAGE: go\nCODE:\n```\ntype FRRNodeStatus struct {\n  metav1.TypeMeta   `json:\",inline\"`\n  metav1.ObjectMeta `json:\"metadata,omitempty\"`\n\n  Status FRRConfigurationStatus `json:\"status,omitempty\"`\n}\n\ntype ConfigurationStatus struct {\n  DesiredConfiguration string\n  RunningConfiguration string\n  Progress Status\n}\n\ntype Status struct {\n  Phase string\n  Message string\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying BFD Peer Status in FRR\nDESCRIPTION: FRR command output showing the status of BFD peers, including uptime, diagnostics, and timer configuration for both local and remote sides.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/bgp-bfd.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nfrr# show bfd peers\nBFD Peers:\n        peer 192.168.0.1\n                ID: 1\n                Remote ID: 1\n                Status: up\n                Uptime: 1 minute(s), 51 second(s)\n                Diagnostics: ok\n                Remote diagnostics: ok\n                Peer Type: dynamic\n                Local timers:\n                        Detect-multiplier: 3\n                        Receive interval: 300ms\n                        Transmission interval: 300ms\n                        Echo receive interval: 50ms\n                        Echo transmission interval: disabled\n                Remote timers:\n                        Detect-multiplier: 3\n                        Receive interval: 300ms\n                        Transmission interval: 300ms\n                        Echo receive interval: 50ms\n```\n\n----------------------------------------\n\nTITLE: MetalLB BGP Updates Metrics Example with Multiple Peers\nDESCRIPTION: Example of how the metallb_bgp_updates_total metric appears in Prometheus output when there are multiple BGP peers. The metric includes a 'peer' label that identifies the BGP peer the session is established with.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/prometheus-metrics/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# HELP metallb_bgp_updates_total Number of BGP UPDATE messages sent\n# TYPE metallb_bgp_updates_total counter\nmetallb_bgp_updates_total{peer=\"172.23.0.5:0\"} 1\nmetallb_bgp_updates_total{peer=\"172.23.0.6:0\"} 1\nmetallb_bgp_updates_total{peer=\"172.30.0.2:0\"} 1\nmetallb_bgp_updates_total{peer=\"172.30.0.3:0\"} 1\n```\n\n----------------------------------------\n\nTITLE: Basic Interface Advertisement Configuration\nDESCRIPTION: YAML configuration example showing how to announce all VIPs from a specific interface on all nodes.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/layer2-bind-interfaces.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example-advertisement2\n  namespace: metallb-system\nspec:\n  interfaces:\n    - eth1\n```\n\n----------------------------------------\n\nTITLE: Running ConfigMap to CRD Converter Container\nDESCRIPTION: Commands to extract the existing ConfigMap and run the conversion tool container to generate CRD resources.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/migration_to_crds.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get configmap -n metallb-system -o yaml config > config.yaml\ndocker run -d -v $(pwd):/var/input quay.io/metallb/configmaptocrs\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Support in Hugo TOML Configuration\nDESCRIPTION: Basic configuration in hugo.toml to set up multilingual support with English as the default language and Piratized English as a secondary language. Defines language-specific titles and weights.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/i18n/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: TOML\nCODE:\n```\ndefaultContentLanguage = \"en\"\n\n[languages]\n[languages.en]\ntitle = \"Hugo Relearn Theme\"\nweight = 1\nlanguageName = \"English\"\n\n[languages.pir]\ntitle = \"Cap'n Hugo Relearrrn Theme\"\nweight = 2\nlanguageName = \"Arrr! Pirrrates\"\n```\n\n----------------------------------------\n\nTITLE: FRR BGP VRF Configuration Example\nDESCRIPTION: Example of FRR configuration syntax for BGP peering with VRF. Shows how FRR implements BGP routing within a specific VRF namespace using the 'router bgp ASN vrf VRFNAME' directive.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/vrf-announcement.md#2025-04-21_snippet_2\n\nLANGUAGE: none\nCODE:\n```\nrouter bgp ASN vrf VRFNAME\n\n    VRFNAME is matched against VRFs configured in the kernel. When vrf VRFNAME is not specified, the BGP protocol process belongs to the default VRF.\n```\n\n----------------------------------------\n\nTITLE: Defining FRR Configuration API in Go\nDESCRIPTION: Proposed Go struct definitions for the FRR Configuration API. This includes definitions for configuring BGP routers, neighbors, prefix advertisements, and BFD profiles, allowing for detailed control of the FRR daemon.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype FRRConfigurationSpec struct {\n  BGP          BGPConfig `json:\"bgp,omitempty\"`\n  NodeSelector map[string]string `json:\"nodeselector,omitempty\"`\n  RawConfig    string `json:\"raw,omitempty\"`\n}\n\ntype BGPConfig struct {\n  Routers []Router `json:\"routers\"`\n  BFDProfiles []BFDProfile `json:\"bfdProfiles,omitempty\"`\n}\n\n// Router represent a neighbor router we want FRR to connect to\ntype Router struct {\n  ASN uint32 `json:\"asn\"`\n  ID string `json:\"id,omitempty\"`\n  VRF string `json:\"vrf,omitempty\"`\n  Neighbors []Neighbor `json:\"neighbors,omitempty\"`\n  PrefixesIPV4 []string `json:\"prefixesIpV4,omitempty\"`\n  PrefixesIPV6 []string `json:\"prefixesIpV6,omitempty\"`\n}\n\ntype Neighbor struct {\n  Address string `json:\"address\"`\n  Port uint16 `json:\"port,omitempty\"`\n  PasswordSecret v1.SecretReference `json:\"password,omitempty\"`\n  HoldTime metav1.Duration `json:\"holdTime,omitempty\"`\n  KeepaliveTime metav1.Duration `json:\"keepaliveTime,omitempty\"`\n  EBGPMultiHop bool `json:\"ebgpMultiHop,omitempty\"`\n  BFDProfile string `json:\"bfdProfile,omitempty\"`\n  ToAdvertise Advertise `json:\"toAdvertise,omitempty\"`\n  ToReceive Receive `json:\"toReceive,omitempty\"`\n}\n\ntype Advertise struct {\n  AllowedPrefixes `json:\"allowed,omitempty\"`\n  PrefixesWithLocalPref []LocalPrefPrefixes `json:\"withLocalPref,omitempty\"`\n  PrefixesWithCommunity []CommunityPrefixes `json:\"withCommunity,omitempty\"`\n}\n\ntype Receive struct {\n  AllowedPrefixes `json:\"allowed,omitempty\"`\n}\n\ntype AllowMode string\n\nconst (\n  AllowAll AllowMode = \"all\"\n  AllowRestricted AllowMode = \"filtered\"\n)\n\ntype AllowedPrefixes struct {\n  Prefixes []string `json:\"prefixes,omitempty\"`\n  Mode     string     `json:\"mode,omitempty\"` // default is filtered. When \"all\" is specified all the prefixes\n}                                             // configured for the given router are advertised, regardless of the content of\n                                              // prefixes\n\ntype LocalPrefPrefixes struct {\n  Prefixes  []string `json:\"prefixes,omitempty\"`\n  LocalPref int      `json:\"localPref,omitempty\"`\n}\n\ntype CommunityPrefixes struct {\n  Prefixes  []string `json:\"prefixes,omitempty\"`\n  Community string   `json:\"community,omitempty\"`\n}\n\ntype BFDProfile struct {\n  Name string `json:\"name\"`\n  ReceiveInterval *uint32 `json:\"receiveInterval,omitempty\"`\n  TransmitInterval *uint32 `json:\"transmitInterval,omitempty\"`\n  DetectMultiplier *uint32 `json:\"detectMultiplier,omitempty\"`\n  EchoInterval *uint32 `json:\"echoInterval,omitempty\"`\n  EchoMode *bool `json:\"echoMode,omitempty\"`\n  PassiveMode *bool `json:\"passiveMode,omitempty\"`\n  MinimumTTL *uint32 `json:\"minimumTtl,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Debugging MetalLB Containers\nDESCRIPTION: Command to attach an ephemeral debug container to MetalLB speaker pods for troubleshooting, specifically designed for distroless-based containers.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/troubleshooting/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl debug -it -n metallb-system -c <ephemeral container name> --target=speaker --image=<ephemeral image name> <speaker pod>\n```\n\n----------------------------------------\n\nTITLE: Configuring BFD on a BGP Neighbor in FRR\nDESCRIPTION: Example showing the FRR configuration syntax to enable BFD on a BGP neighbor, where the BFD profile is specified for the connection.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/bgp-bfd.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nneighbor <A.B.C.D|X:X::X:X|WORD> bfd profile BFDPROF\n```\n\n----------------------------------------\n\nTITLE: Running the ConfigMap to CRD Conversion Tool using Docker\nDESCRIPTION: Commands to extract the current MetalLB ConfigMap and run the conversion tool using Docker. The tool will generate a resources.yaml file containing the new CRD-based configuration.\nSOURCE: https://github.com/metallb/metallb/blob/main/configmaptocrs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get configmap -n metallb-system -o yaml config > config.yaml\ndocker run -d -v $(pwd):/var/input quay.io/metallb/configmaptocrs\n```\n\n----------------------------------------\n\nTITLE: Defining BGPPeer with VRF in MetalLB CR\nDESCRIPTION: YAML example of a BGPPeer custom resource definition with the proposed 'vrf' field added. This shows how users would configure MetalLB to establish a BGP peering session from within a specific VRF.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/vrf-announcement.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: peer\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 10.2.2.254\n  vrf: red\n```\n\n----------------------------------------\n\nTITLE: Creating Test Service for MetalLB\nDESCRIPTION: Command to create a test nginx service in the MetalLB development environment using kubectl.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f dev-env/testsvc.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Autolinks in GitHub Flavored Markdown\nDESCRIPTION: Shows how GitHub Flavored Markdown automatically converts absolute URLs into clickable links without requiring explicit link syntax.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\nThis is a link to https://example.com.\n```\n\n----------------------------------------\n\nTITLE: Observing BGP Peering in MetalLB Development Environment\nDESCRIPTION: Command to check the BGP peering status in the MetalLB development environment using the FRR container.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec frr vtysh -c \"show ip bgp summary\"\n```\n\n----------------------------------------\n\nTITLE: Diagram: Network Flow With VRF\nDESCRIPTION: ASCII diagram showing the network traffic flow between a client, DCGW, and a node using VRF. This configuration helps avoid asymmetric routing by providing a separate routing table for different interfaces.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/vrf-announcement.md#2025-04-21_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n\n\n\n               ┌─────────┐\n               │ eth0    │\n               │         │\n       ┌───────┴─────────┴───────────┐\n       │                             │               ┌──────────────┐\n       │                      ┌──────┤               │              │\n       │                      │      ├────────┐      │              │\n       │                      │      │        │      │              │\n       │                      │ VRF  │ eth1   │◄─────┤     DCGW     │◄───────  Client\n       │                      │      │        │      │              │\n       │                  ────┼────► ├────────┘      │              │\n       │                      └──────┤               │              │\n       │                      Node   │               └──────────────┘\n       │                             │\n       └─────────────────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Installing MetalLB with Kustomize (Experimental FRR-K8s Mode)\nDESCRIPTION: This Kustomize configuration deploys MetalLB in the experimental FRR-K8s mode. It references the appropriate remote kustomization file for this mode.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# kustomization.yml\nnamespace: metallb-system\n\nresources:\n  - github.com/metallb/metallb/config/frr-k8s?ref=main\n```\n\n----------------------------------------\n\nTITLE: Running BGP-Focused E2E Tests\nDESCRIPTION: Command to run only BGP-related test suites\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ninv e2etest --bgp-mode frr --focus BGP\n```\n\n----------------------------------------\n\nTITLE: Configuration for Allowing Route Reception in FRR\nDESCRIPTION: YAML configuration demonstrating how to configure MetalLB FRR to accept incoming routes from a specific BGP peer using the toReceive.allowed.allowAll parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: frrk8s.metallb.io/v1alpha1\nkind: FRRConfiguration\nmetadata:\n  name: accept-all-router1\n  namespace: metallb-system\nspec:\n  bgp:\n    routers:\n    - asn: 64512\n      neighbors:\n      - address: 172.18.0.6\n        asn: 64512\n        port: 179\n        toReceive:\n          allowed:\n            allowAll: true\n```\n\n----------------------------------------\n\nTITLE: Running MetalLB Components in Development\nDESCRIPTION: Commands to run the MetalLB controller and speaker components during development, specifying required flags for Kubernetes cluster connection and configuration\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/community/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmetallb$ go run ./controller/main.go ./controller/service.go -namespace metallb-system -kubeconfig $KUBECONFIG\n\nmetallb$ go run ./speaker/main.go ./speaker/*controller.go -namespace metallb-system -kubeconfig $KUBECONFIG -node-name node0\n```\n\n----------------------------------------\n\nTITLE: Sample Enhanced BGPAdvertisement and L2Advertisement YAML Configurations\nDESCRIPTION: Example YAML configurations for enhanced BGPAdvertisement and L2Advertisement Custom Resources with node selectors.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: bgpadvertisement\n  namespace: metallb-system\nspec:\n    ipaddresspools:\n      - pool1\n      - pool2\n    nodeSelector:\n    - matchExpressions:\n      - key: kubernetes.io/hostname\n        operator: In\n        values: [hostA, hostB]\n\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: l2advertisement\n  namespace: metallb-system\nspec:\n    ipaddresspools:\n      - pool1\n      - pool2\n    nodeSelectors:\n    - matchExpression:\n      - key: kubernetes.io/hostname\n        operator: In\n        values: [hostA, hostB]\n```\n\n----------------------------------------\n\nTITLE: UML Component Diagram for MetalLB BGP Implementation\nDESCRIPTION: Detailed UML component diagram showing the architecture of MetalLB's BGP implementation, including the relationships between config, services, nodes, and various packages. The diagram illustrates how the BGP session interface will be modified to support multiple BGP implementations including FRR.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/0001-frr.md#2025-04-21_snippet_0\n\nLANGUAGE: uml\nCODE:\n```\n┌───────────────┐\n│               │\n│    config     ├──┐\n│ <<ConfigMap>> │  │                                         ┌───────────────┐\n│               │  │                                       ┌─┤  speakerlist  │\n└───────────────┘  │                                       │ │  <<package>>  │\n                   │                                       │ │               │\n┌───────────────┐  │ ┌───────────────┐  ┌───────────────┐  │ └───────────────┘\n│               │  │ │               │  │               │  │\n│   services    ├──┼─┤      k8s      ├──┤     main      ├──┤\n│  <<Service>>  │  │ │  <<package>>  │  │  <<package>>  │  │\n│               │  │ │               │  │               │  │\n└───────────────┘  │ └───────────────┘  └───────┬───────┘  │\n                   │                    <<use>> │          │ ┌───────────────┐\n                   │                            │          │ │               │\n┌───────────────┐  │reconcile           ┌───────▼───────┐  │ │    config     │\n│               │  │                    │               │  └─┤  <<package>>  │\n│     nodes     │  │                    │   Protocol    │    │               │\n│    <<Node>>   ├──┘                    │ <<interface>> │    └───────────────┘\n│               │                       │               │\n└───────────────┘                       └───────▲───────┘\n                                                │<<implements>>\n                                     ┌──────────┴─────────┐\n                                     │                    │\n                          ┌──────────┴────────┐  ┌────────┴──────┐\n                          │       main::      │  │     main::    │\n                          │ layer2_controller │  │ bgp_controller│\n                          │     <<class>>     │  │   <<class>>   │\n                          │                   │  │               │\n                          └───────────────────┘  └───────┬───────┘\n                                                         │\n                                                         │  <<use>>\n                                                 ┌───────▼───────┐\n                                                 │               │\n                                                 │    session    │\n                                                 │ <<interface>> │\n                                                 │               │\n                                                 └───────▲───────┘\n                                                         │ <<implement>>\n                                             ┌───────────┴─────────────┐\n                                             │                         │\n                                     ┌───────┴───────┐         ┌───────┴───────┐\n                                     │               │         │               │\n                                     │  bgp_metallb  │         │    bgp_frr    │\n                                     │  <<package>>  │         │  <<package>>  │\n                                     │               │         │               │\n                                     └───────────────┘         └───────┬───────┘\n                                                                       │\n                                                                       │\n                                                               ┌───────┴───────┐\n                                                               │               │\n                                                               │      frr      │\n                                                               │ <<container>> │\n                                                               │               │\n                                                               └───────────────┘\n```\n\n----------------------------------------\n\nTITLE: Creating Unordered Lists in Markdown\nDESCRIPTION: Demonstrates how to create unordered (bulleted) lists with nested items. Lists can use hyphens, asterisks, or plus signs as bullet markers.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n- Lorem ipsum dolor sit amet\n- Consectetur adipiscing elit\n  - Vestibulum laoreet porttitor sem\n  - Ac tristique libero volutpat at\n- Nulla volutpat aliquam velit\n  - Phasellus iaculis neque\n  - Purus sodales ultricies\n- Faucibus porta lacus fringilla vel\n```\n\n----------------------------------------\n\nTITLE: IPAddressPool Status Definition in YAML and Go\nDESCRIPTION: Defines the structure for exposing IP address pool allocation status, including counts of assigned and available IPv4/IPv6 addresses.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/crd-status.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.0/24\n  - 192.168.9.1-192.168.9.5\n  - fc00:f853:0ccd:e799::/124\nstatus:\n  availableIPV4: 45\n  availableIPV6: 145\n  assignedIPV4: 5\n  assignedIPV6: 52\n```\n\nLANGUAGE: go\nCODE:\n```\ntype IPAddressPoolStatus struct {\n    assignedIPV4  int\n    assignedIPV6  int\n    availableIPV4 int\n    availableIPV6 int\n}\n```\n\n----------------------------------------\n\nTITLE: FRR Configuration for ToR Switch Emulation in Testing\nDESCRIPTION: This snippet shows a sample FRR (Free Range Routing) configuration used to emulate a ToR (Top of Rack) switch in the testing environment. It includes interface configuration and BGP setup with unnumbered peers.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nfrr defaults datacenter\nhostname tor\nno ipv6 forwarding\n!\ninterface eth00\n    ipv6 nd ra-interval 10\n    no ipv6 nd suppress-ra\nexit\n!\ninterface eth01\n    ipv6 nd ra-interval 10\n    no ipv6 nd suppress-ra\nexit\n!\ninterface lo\n    ip address 200.100.100.1/24 //for testing\nexit\n!\nrouter bgp 65001\n    bgp router-id 11.11.11.254\n    neighbor MTLB peer-group\n    neighbor MTLB passive\n    neighbor MTLB remote-as external\n    neighbor MTLB description LEAF-MTLB\n    neighbor eth00 interface peer-group MTLB\n    neighbor eth01 interface peer-group MTLB\n    !\n    address-family ipv4 unicast\n        redistribute connected\n        neighbor MTLB activate\n    exit-address-family\n    !\n    address-family ipv6 unicast\n        redistribute connected\n        neighbor MTLB activate\n    exit-address-family\n    exit\n```\n\n----------------------------------------\n\nTITLE: Displaying BFD Peer Counters in FRR\nDESCRIPTION: FRR command output showing packet and event counters for a BFD session, useful for monitoring the health and activity of the connection.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/bgp-bfd.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nfrr# show bfd peer 192.168.0.1 counters\n     peer 192.168.0.1\n             Control packet input: 126 packets\n             Control packet output: 247 packets\n             Echo packet input: 2409 packets\n             Echo packet output: 2410 packets\n             Session up events: 1\n             Session down events: 0\n             Zebra notifications: 4\n```\n\n----------------------------------------\n\nTITLE: Defining MetalLB BGPPeerSpec Structure in Go\nDESCRIPTION: Go struct definition for MetalLB BGP peer specification supporting both IP-based and interface-based BGP peering configurations.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype BGPPeerSpec struct {\n  Address string `json:\"peerAddress\"`\n  Interface string `json:\"interface\"`\n}\n```\n\n----------------------------------------\n\nTITLE: BGP Test Network Topology Diagram\nDESCRIPTION: ASCII diagram showing the network topology for BGP testing, including speakers and various hop configurations\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n  ┌────────────────────────────────────────────┐\n  │                exec network                │\n  │ ┌─────────┐                                │\n  │ │         │                                │\n  │ │ Speaker ├────┐      ┌─────────────────┐  │\n  │ │         │    │      │                 │  │\n  │ └─────────┘    │      │ ibgp-single-hop │  │\n  │                │      │                 │  │\n  │ ┌─────────┐    │      └─────────────────┘  │\n  │ │         │    │                           │\n  │ │ Speaker ├────┤   ┌───────────────────────┼──────────────────────┐\n  │ │         │    │   │                       │                          │\n  │ └─────────┘    │   │  ┌─────────────────┐  │       ┌────────────────┐ │\n  │                │   │  │                 │  │       │                │ │\n  │ ┌─────────┐    ├───┼──┤ ebgp-single-hop ├──┼───────┤ ibgp-multi-hop │ │\n  │ │         │    │   │  │                 │  │       │                │ │\n  │ │ Speaker │    │   │  └─────────────────┘  │       └────────────────┘ │\n  │ │         ├────┘   │                       │                          │\n  │ └─────────┘        │                       │       ┌────────────────┐ │\n  │                    │                       │       │                │ │\n  └────────────────────┼───────────────────────┘       │ ebgp-multi-hop │ │\n                       │                               │                │ │\n                       │       multi-hop-net           └────────────────┘ │\n                       │       172.30.0.0/16                              │\n                       │  fc00:f853:ccd:e798::/64                         │\n                       └──────────────────────────────────────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Sample L2Advertisement YAML Configuration\nDESCRIPTION: Example YAML configuration for an L2Advertisement Custom Resource, specifying IP pools to advertise via L2.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: l2advertisement\n  namespace: metallb-system\nspec:\n    ipaddresspools:\n      - pool1\n      - pool2\n```\n\n----------------------------------------\n\nTITLE: State Diagram Aligned to the Right\nDESCRIPTION: A Mermaid state diagram showing transitions between door states (open, closed, locked). Uses right alignment parameter and demonstrates state transitions with labeled actions.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid align=\"right\" */>}}\nstateDiagram-v2\n    open: Open Door\n    closed: Closed Door\n    locked: Locked Door\n    open   --> closed: Close\n    closed --> locked: Lock\n    locked --> closed: Unlock\n    closed --> open: Open\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Indented Code Block in Markdown\nDESCRIPTION: Demonstrates how to create a simple code block by indenting several lines of code by at least two spaces. This method does not support syntax highlighting.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\nBe impressed by my advanced code:\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n```\n\n----------------------------------------\n\nTITLE: Configuration Status Definition in YAML and Go\nDESCRIPTION: Defines the structure for exposing MetalLB configuration validation status, including error reporting.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/crd-status.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: ConfigurationStatus\nmetadata:\n  name: config-status\n  namespace: metallb-system\nstatus:\n    validConfig: false\n    error: \"peer 1.2.3.4 has myAsn different from 1.2.3.5, in FRR mode all myAsn must be equal\"\n```\n\nLANGUAGE: go\nCODE:\n```\ntype MetalLBConfigurationStatus struct {\n    validConfig bool\n    lastError   string\n}\n\ntype ConfigurationStatus struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n    Status            MetalLBConfigurationStatus `json:\"status,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Examining BGP IPv4 Routes in unnumbered-p2p-peer\nDESCRIPTION: This command shows the BGP IPv4 routing table on the unnumbered-p2p-peer, displaying the available routes, next hops, and path information. It includes both learned routes from AS 65000 and locally originated routes.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n> docker exec -it unnumbered-p2p-peer vtysh -c 'show bgp ipv4'\nBGP table version is 3, local router ID is 11.11.11.254, vrf id 0\nDefault local pref 100, local AS 65004\nStatus codes:  s suppressed, d damped, h history, * valid, > best, = multipath,\n               i internal, r RIB-failure, S Stale, R Removed\nNexthop codes: @NNN nexthop's vrf id, < announce-nh-self\nOrigin codes:  i - IGP, e - EGP, ? - incomplete\nRPKI validation codes: V valid, I invalid, N Not found\n\n    Network          Next Hop            Metric LocPrf Weight Path\n *= 5.5.5.5/32       eth02                    0             0 65000 i\n *=                  eth01                    0             0 65000 i\n *>                  eth00                    0             0 65000 i\n *> 200.100.100.0/24 0.0.0.0(unnumbered-p2p-peer)\n                                             0         32768 ?\n\nDisplayed  2 routes and 4 total paths\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Peer with Node Selectors\nDESCRIPTION: YAML configuration for BGP peer with specific node selectors to limit peer connections to certain nodes based on labels and hostname.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  myASN: 64512\n  peerASN: 64512\n  peerAddress: 172.30.0.3\n  peerPort: 180\n  nodeSelectors:\n  - matchLabels:\n      rack: frontend\n    matchExpressions:\n    - key: network-speed\n      operator: NotIn\n      values: [slow]\n  - matchExpressions:\n    - key: kubernetes.io/hostname\n      operator: In\n      values: [hostA, hostB]\n```\n\n----------------------------------------\n\nTITLE: Viewing BGP Summary from MetalLB FRR Container\nDESCRIPTION: This command displays the BGP summary from the MetalLB FRR container, showing the peering relationship with the unnumbered-p2p-peer, including IPv4 and IPv6 unicast information, AS numbers, and connection status.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n> k -n metallb-system exec -it -c frr frr-k8s-daemon-kzpz2 -- vtysh -c 'show bgp summary'\n\nIPv4 Unicast Summary (VRF default):\nBGP router identifier 172.19.0.3, local AS number 65000 vrf-id 0\nBGP table version 2\nRIB entries 3, using 288 bytes of memory\nPeers 1, using 13 KiB of memory\nPeer groups 1, using 64 bytes of memory\n\nNeighbor                  V         AS   MsgRcvd   MsgSent   TblVer  InQ OutQ  Up/Down State/PfxRcd   PfxSnt Desc\nunnumbered-p2p-peer(net0) 4      65004       512       512        2    0    0 00:25:15            1        2 TOR\n\nTotal number of neighbors 1\n\nIPv6 Unicast Summary (VRF default):\nBGP router identifier 172.19.0.3, local AS number 65000 vrf-id 0\nBGP table version 1\nRIB entries 1, using 96 bytes of memory\nPeers 1, using 13 KiB of memory\nPeer groups 1, using 64 bytes of memory\n\nNeighbor                  V         AS   MsgRcvd   MsgSent   TblVer  InQ OutQ  Up/Down State/PfxRcd   PfxSnt Desc\nunnumbered-p2p-peer(net0) 4      65004       512       512        1    0    0 00:25:15            0        1 TOR\n\nTotal number of neighbors 1\n```\n\n----------------------------------------\n\nTITLE: Using Loopback Interface to Control Source IP Selection\nDESCRIPTION: This code snippet demonstrates how adding an IP address to the loopback interface affects source IP selection. When a custom IP is configured on the loopback interface, the kernel uses it as the source IP for outbound traffic.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkind-worker:/# ip a s lo\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet 12.12.12.12/32 scope global lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\nkind-worker:/# ip route get 200.100.100.1\n200.100.100.1 via inet6 fe80::cc61:c8ff:fefc:2dce dev net0 src 12.12.12.12 uid 0\n    cache\n```\n\n----------------------------------------\n\nTITLE: Running L2-Focused E2E Tests\nDESCRIPTION: Command to run only L2-related test suites\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ninv e2etest --bgp-mode frr --focus L2\n```\n\n----------------------------------------\n\nTITLE: Defining BFDProfile Resource in Kubernetes\nDESCRIPTION: BFDProfile resource definition that represents the settings of a BFD session that can be associated with a BGP session. Includes metadata and specification fields.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/apis/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BFDProfile\nmetadata:\n  name: example-bfd-profile\nspec:\n  receiveInterval: 300\n  transmitInterval: 300\n  detectMultiplier: 3\n  echoInterval: 50\n  echoMode: false\n  passiveMode: false\n  minimumTtl: 0\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram with Configuration Directive\nDESCRIPTION: A Mermaid sequence diagram with custom initialization configuration. Uses monospace font and shows sequence numbers, demonstrating message exchange between participants and loop structures.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\n%%{init:{\"fontFamily\":\"monospace\", \"sequence\":{\"showSequenceNumbers\":true}}}%%\nsequenceDiagram\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating Definition Lists in Markdown\nDESCRIPTION: Demonstrates PHP Markdown Extra's definition list syntax. Definition lists consist of terms followed by a colon and their definitions, similar to a dictionary. Multiple terms can be associated with a definition.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\nApple\n: Pomaceous fruit of plants of the genus Malus in the family Rosaceae.\n: An American computer company.\n\nOrange\n: The fruit of an evergreen tree of the genus Citrus.\n\n  You can make juice out of it.\n: A telecommunication company.\n\n  You can't make juice out of it.\n```\n\n----------------------------------------\n\nTITLE: Checking IPv6 BGP Peering in MetalLB\nDESCRIPTION: Command to check the IPv6 BGP peering status in the MetalLB development environment.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec frr vtysh -c \"show bgp ipv6 unicast sum\"\n```\n\n----------------------------------------\n\nTITLE: Using Community Aliases in BGP Advertisement\nDESCRIPTION: This snippet shows how to reference the previously defined community aliases in a BGPAdvertisement resource, which simplifies the configuration by using readable names instead of numeric values.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: local\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n  aggregationLength: 32\n  localPref: 100\n  communities:\n  - vpn-only\n```\n\n----------------------------------------\n\nTITLE: Enhanced BGPAdvertisement Structure with Peer Selector in Go\nDESCRIPTION: Updated Go struct for BGPAdvertisement with peer selector for announcing IPs to specific BGP peers.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_10\n\nLANGUAGE: go\nCODE:\n```\ntype bgpAdvertisement struct {\n  Name                     string\n  IPAddressPools           []string\n  Peers                    []string\n  IPAddressPoolSelector    *metav1.LabelSelector\n  PeerSelector             *metav1.LabelSelector\n  AggregationLength        *int\n  LocalPref                *uint32\n  Communities              []string\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing BGP Summary from unnumbered-p2p-peer in MetalLB Environment\nDESCRIPTION: This command shows the BGP summary from the unnumbered-p2p-peer container, displaying IPv4 and IPv6 unicast information including peering status with Kubernetes nodes, router identifier, AS numbers, and connection status.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n> docker exec -it unnumbered-p2p-peer vtysh -c 'show bgp summary'\n\nIPv4 Unicast Summary (VRF default):\nBGP router identifier 11.11.11.254, local AS number 65004 vrf-id 0\nBGP table version 4\nRIB entries 3, using 288 bytes of memory\nPeers 3, using 39 KiB of memory\nPeer groups 1, using 64 bytes of memory\n\nNeighbor                  V         AS   MsgRcvd   MsgSent   TblVer  InQ OutQ  Up/Down State/PfxRcd   PfxSnt Desc\nkind-control-plane(eth00) 4      65000       510       510        4    0    0 00:24:43            1        2 k8s-node\nkind-worker(eth01)        4      65000       510       510        4    0    0 00:24:43            1        2 k8s-node\nkind-worker2(eth02)       4      65000       510       510        4    0    0 00:24:43            1        2 k8s-node\n\nTotal number of neighbors 3\n\nIPv6 Unicast Summary (VRF default):\nBGP router identifier 11.11.11.254, local AS number 65004 vrf-id 0\nBGP table version 3\nRIB entries 1, using 96 bytes of memory\nPeers 3, using 39 KiB of memory\nPeer groups 1, using 64 bytes of memory\n\nNeighbor                  V         AS   MsgRcvd   MsgSent   TblVer  InQ OutQ  Up/Down State/PfxRcd   PfxSnt Desc\nkind-control-plane(eth00) 4      65000       510       510        3    0    0 00:24:43            1        1 k8s-node\nkind-worker(eth01)        4      65000       510       510        3    0    0 00:24:43            1        1 k8s-node\nkind-worker2(eth02)       4      65000       510       510        3    0    0 00:24:43            1        1 k8s-node\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests with Custom Ginkgo Parameters\nDESCRIPTION: Command to run E2E tests with additional Ginkgo testing parameters\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ninv e2etest --bgp-mode frr --ginkgo-params=\"--until-it-fails -v\"\n```\n\n----------------------------------------\n\nTITLE: Configuration for Advertising Additional IPs in FRR\nDESCRIPTION: YAML configuration showing how to advertise an additional IP prefix to a specific BGP peer using the FRRConfiguration custom resource.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: frrk8s.metallb.io/v1alpha1\nkind: FRRConfiguration\nmetadata:\n  name: advertise-extra-router1\n  namespace: metallb-system\nspec:\n  bgp:\n    routers:\n    - asn: 64512\n      prefixesIpV4:\n      - 192.168.11.0/32\n      neighbors:\n      - address: 172.18.0.6\n        asn: 64512\n        port: 179\n        toAdvertise:\n          allowed:\n          - 192.168.11.0/32\n```\n\n----------------------------------------\n\nTITLE: Creating Mindmap with Mermaid in Go\nDESCRIPTION: This snippet demonstrates how to create a mindmap using Mermaid syntax within a Go template. It shows a hierarchical structure of concepts related to mindmaps.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_18\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\nmindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness<br/>and features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Resizing Images with URL Parameters in Markdown\nDESCRIPTION: Demonstrates how to resize images using URL parameters in Markdown, allowing for width and height adjustments using CSS values.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n![Minion](https://octodex.github.com/images/minion.png?width=20vw)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![Minion](https://octodex.github.com/images/minion.png?height=50px)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![Minion](https://octodex.github.com/images/minion.png?height=50px&width=40vw)\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests with FRR BGP Mode\nDESCRIPTION: Command to execute E2E tests with FRR BGP mode specified\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ninv e2etest --bgp-mode frr\n```\n\n----------------------------------------\n\nTITLE: Visualizing MetalLB Speaker Component Architecture with ASCII Diagram\nDESCRIPTION: An ASCII diagram illustrating the package structure and relationships between different components of the MetalLB speaker. It shows how config, services, nodes, k8s, main, speakerlist, and bgp packages interact with each other through various interfaces.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/speaker.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n┌───────────────┐\n│               │\n│    config     ├──┐\n│ <<ConfigMap>> │  │                                         ┌───────────────┐\n│               │  │reconcile                                │               │\n└───────────────┘  │                                       ┌─┤  speakerlist  │\n                   │                                       │ │  <<package>>  │\n                   │                                       │ │               │\n┌───────────────┐  │ ┌───────────────┐  ┌───────────────┐  │ └───────────────┘\n│               │  │ │               │  │               │  │\n│   services    ├──┼─┤      k8s      ├──┤     main      ├──┤\n│  <<Service>>  │  │ │  <<package>>  │  │  <<package>>  │  │\n│               │  │ │               │  │               │  │\n└───────────────┘  │ └───────────────┘  └───────┬───────┘  │\n                   │                    <<use>> │          │ ┌───────────────┐\n                   │                            │          │ │               │\n┌───────────────┐  │reconcile           ┌───────▼───────┐  │ │    config     │\n│               │  │                    │               │  └─┤  <<package>>  │\n│     nodes     │  │                    │   Protocol    │    │               │\n│    <<Node>>   ├──┘                    │ <<interface>> │    └───────────────┘\n│               │                       │               │\n└───────────────┘                       └───────▲───────┘\n                                                │<<implements>>\n                                     ┌──────────┴────────────┐\n                                     │                       │\n                          ┌──────────┴────────┐     ┌────────┴──────┐\n                          │       main::      │     │     main::    │\n                          │ layer2_controller │     │ bgp_controller│\n                          │     <<class>>     │     │   <<class>>   │\n                          │                   │     │               │\n                          └───────────────────┘     └───────┬───────┘\n                                                            │\n                                                            │  <<use>>\n                                                    ┌───────▼───────┐\n                                                    │               │\n                                                    │    session    │\n                                                    │ <<interface>> │\n                                                    │               │\n                                                    └───────▲───────┘\n                                                            │ <<implements>>\n                                                            │\n                                                    ┌───────┴───────┐\n                                                    │               │\n                                                    │     bgp       │\n                                                    │  <<package>>  │\n                                                    │               │\n                                                    └───────────────┘\n```\n\n----------------------------------------\n\nTITLE: Examining BGP Routes and Packet Source Selection in Linux\nDESCRIPTION: This snippet demonstrates how the Linux kernel selects source IPs when routing through BGP-learned routes. It shows the IP routing table, route lookup, and interface configuration on a Kubernetes worker node.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nkind-worker:/# ip route\n    200.100.100.0/24 nhid 68 via inet6 fe80::2c5f:eff:fec4:cf7b dev net0 proto bgp metric 20\nkind-worker:/# ip route get 200.100.100.1\n    200.100.100.1 via inet6 fe80::2c5f:eff:fec4:cf7b dev net0 src 172.20.20.4 uid 0\nkind-worker:/# ip a s eth0\n324: eth0@if325: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:14:14:04 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.20.20.4/24 brd 172.20.20.255 scope global eth0\n       valid_lft forever preferred_lft forever\n```\n\n----------------------------------------\n\nTITLE: Defining BGP Community Aliases in MetalLB\nDESCRIPTION: This YAML snippet demonstrates how to create aliases for BGP Communities using the Community CRD. It associates user-friendly names with BGP community values, allowing for more readable configuration.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: Community\nmetadata:\n  name: communities\n  namespace: metallb-system\nspec:\n  communities:\n  - name: vpn-only\n    value: 1234:1\n  - name: NO_ADVERTISE\n    value: 65535:65282\n```\n\n----------------------------------------\n\nTITLE: Node-Specific Interface Advertisement\nDESCRIPTION: YAML configuration demonstrating how to announce VIPs from specific interfaces on selected nodes.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/layer2-bind-interfaces.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: example-advertisement6\n  namespace: metallb-system\nspec:\n  ipaddresspools:\n    - pool1\n  nodeSelector:\n    - matchExpression:\n      - key: kubernetes.io/hostname\n        operator: In\n        values: [hostA, hostB]\n  interfaces:\n    - ens18\n```\n\n----------------------------------------\n\nTITLE: Checking Service IP Allocation in MetalLB\nDESCRIPTION: Command to check the IP address allocated to the test service by MetalLB.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc nginx\n```\n\n----------------------------------------\n\nTITLE: FRR BGP Configuration with VRF Example\nDESCRIPTION: Example of the resulting FRR configuration generated by MetalLB for a BGP peer within a VRF. Shows the complete configuration with router section, neighbor settings and address-family declarations.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/vrf-announcement.md#2025-04-21_snippet_4\n\nLANGUAGE: none\nCODE:\n```\nrouter bgp 64512 vrf red\n  no bgp ebgp-requires-policy\n  no bgp network import-check\n  no bgp default ipv4-unicast\n\n  bgp router-id 10.1.1.255\n\n  neighbor 10.2.2.254 remote-as 64512\n  neighbor 10.2.2.254 ebgp-multihop\n  neighbor 10.2.2.254 port 179\n  neighbor 10.2.2.254 timers 1 1\n  neighbor 10.2.2.254 password password\n  neighbor 10.2.2.254 update-source 10.1.1.254\n\n  address-family ipv4 unicast\n    neighbor 10.2.2.254 activate\n    neighbor 10.2.2.254 route-map 10.2.2.254-red-in in\n    network 172.16.1.10/24\n    neighbor 10.2.2.254 route-map 10.2.2.254-red-out out\n  exit-address-family\n```\n\n----------------------------------------\n\nTITLE: Creating Block Diagram with Mermaid in Go\nDESCRIPTION: This snippet demonstrates how to create a block diagram using Mermaid syntax within a Go template. It shows a simple structure with a database, blocks, and connections.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_22\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\nblock-beta\ncolumns 1\n  db((\"DB\"))\n  blockArrowId6<[\"&nbsp;&nbsp;&nbsp;\"]>(down)\n  block:ID\n    A\n    B[\"A wide one in the middle\"]\n    C\n  end\n  space\n  D\n  ID --> D\n  C --> D\n  style B fill:#969,stroke:#333,stroke-width:4px\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating Link References in Markdown\nDESCRIPTION: Demonstrates reference-style links in Markdown which allow defining URLs once and reusing them throughout the document. This simplifies maintenance of repeated links.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n[Example][somelinkID]\n\n[somelinkID]: https://example.com \"Go to example domain\"\n```\n\n----------------------------------------\n\nTITLE: Example ConfigMap with Invalid Resource Names\nDESCRIPTION: Example of a MetalLB ConfigMap containing invalid resource names (with underscores and uppercase letters) that will be automatically corrected by the conversion tool.\nSOURCE: https://github.com/metallb/metallb/blob/main/configmaptocrs/README.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - my-asn: 64512\n      peer-asn: 64512\n      peer-address: 10.96.0.100\n    address-pools:\n    - name: My_Ip_Space\n      protocol: bgp\n      addresses:\n      - 198.51.100.0/24\n      bgp-advertisements:\n      - aggregation-length: 32\n        localpref: 100\n        communities:\n        - 64512:1234\n```\n\n----------------------------------------\n\nTITLE: Configuring IPVS Mode in Kubernetes\nDESCRIPTION: This snippet shows how to enable strict ARP mode when using kube-proxy in IPVS mode. It involves editing the kube-proxy ConfigMap to set strictARP to true.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\nipvs:\n  strictARP: true\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Advertisement with Node Selectors\nDESCRIPTION: YAML configuration for BGP advertisement limited to specific nodes using node selectors.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/_advanced_bgp_configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  name: example\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - first-pool\n  nodeSelectors:\n  - matchLabels:\n      kubernetes.io/hostname: NodeA\n  - matchLabels:\n      kubernetes.io/hostname: NodeB\n```\n\n----------------------------------------\n\nTITLE: IP Address Pool Configuration\nDESCRIPTION: YAML configuration for defining IP address pools with different subnets.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/layer2-bind-interfaces.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: pool1\n  namespace: metallb-system\nspec:\n  addresses:\n    - 192.172.1.10-192.172.1.70\n\n---\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: pool2\n  namespace: metallb-system\nspec:\n  addresses:\n    - 192.168.1.128/26\n```\n\n----------------------------------------\n\nTITLE: Example LoadBalancer Service Configuration in Bash\nDESCRIPTION: A bash output showing a Kubernetes LoadBalancer service that would be advertised by MetalLB, with an external IP of 192.168.10.0.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/splitfrr-proposal.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nNAME    TYPE           CLUSTER-IP     EXTERNAL-IP    PORT(S)        AGE\nnginx   LoadBalancer   10.96.54.101   192.168.10.0   80:31906/TCP   19h\n```\n\n----------------------------------------\n\nTITLE: Creating Development Cluster with Custom BGP Backend\nDESCRIPTION: Command to create a development cluster specifying a custom BGP backend type using the --bgp-type parameter\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env --bgp-type native\n```\n\n----------------------------------------\n\nTITLE: Generating Timeline with Mermaid in Go\nDESCRIPTION: This snippet shows how to create a timeline using Mermaid syntax within a Go template. It illustrates the history of social media platforms.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_19\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\ntimeline\n    title History of Social Media Platform\n    2002 : LinkedIn\n    2004 : Facebook\n         : Google\n    2005 : Youtube\n    2006 : Twitter\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Basic Frontmatter Structure in TOML Format\nDESCRIPTION: An example of a basic frontmatter structure in TOML format for Hugo pages, showing the essential syntax with opening and closing '+++' delimiters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/frontmatter/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\n{{% include \"cont/frontmatter/frontmatter.toml\" %}}+++\n\n```\n\n----------------------------------------\n\nTITLE: Example MetalLB ConfigMap Input Format\nDESCRIPTION: Example of a MetalLB ConfigMap that defines BGP peers and address pools. This is the deprecated configuration format that will be converted to the new CRD format.\nSOURCE: https://github.com/metallb/metallb/blob/main/configmaptocrs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - my-asn: 64512\n      peer-asn: 64512\n      peer-address: 10.96.0.100\n    address-pools:\n    - name: my-ip-space\n      protocol: bgp\n      addresses:\n      - 198.51.100.0/24\n      bgp-advertisements:\n      - aggregation-length: 32\n        localpref: 100\n        communities:\n        - 64512:1234\n```\n\n----------------------------------------\n\nTITLE: MetalLB BGP Updates Metrics Example with VRF\nDESCRIPTION: Example of how the metallb_bgp_updates_total metric appears when BGP is used with VRF (Virtual Routing and Forwarding). An additional 'vrf' label is included to identify the VRF instance.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/prometheus-metrics/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# HELP metallb_bgp_updates_total Number of BGP UPDATE messages sent\n# TYPE metallb_bgp_updates_total counter\nmetallb_bgp_updates_total{peer=\"172.23.0.5:0\"} 1\nmetallb_bgp_updates_total{peer=\"172.23.0.5:0\" vrf=\"red\"} 1\n```\n\n----------------------------------------\n\nTITLE: Enabling API Server Audit Logs in MetalLB Development Environment\nDESCRIPTION: Instructions for enabling and viewing API server audit logs in the MetalLB development environment.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env -t, --with-api-audit\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec kind-control-plane cat /var/log/kubernetes/kube-apiserver-audit.log\n```\n\n----------------------------------------\n\nTITLE: Defining IPAddressPool Structure in Go\nDESCRIPTION: Go struct definition for the IPAddressPool, which is responsible for IP allocation without specifying advertisement details.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype IPAddressPool struct {\n  Name              string\n  Addresses         []string\n  AvoidBuggyIPs     bool\n  AutoAssign        *bool\n}\n```\n\n----------------------------------------\n\nTITLE: Activating Search Functionality in Hugo\nDESCRIPTION: Configuration to activate search functionality by adding the 'search' output format to the home outputs. This generates a search index file at the root of the public folder for Lunr search library.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[outputs]\n  home = [\"html\", \"rss\", \"search\"]\n```\n\n----------------------------------------\n\nTITLE: Automating IPVS Mode Configuration in Bash\nDESCRIPTION: These Bash commands automate the process of changing the kube-proxy ConfigMap to enable strict ARP mode. They include a dry-run option to preview changes and a command to apply the changes.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# see what changes would be made, returns nonzero returncode if different\nkubectl get configmap kube-proxy -n kube-system -o yaml | \\\nsed -e \"s/strictARP: false/strictARP: true/\" | \\\nkubectl diff -f - -n kube-system\n\n# actually apply the changes, returns nonzero returncode on errors only\nkubectl get configmap kube-proxy -n kube-system -o yaml | \\\nsed -e \"s/strictARP: false/strictARP: true/\" | \\\nkubectl apply -f - -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Building Hugo Site for Production\nDESCRIPTION: Command to generate the final static website files for deployment.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nhugo\n```\n\n----------------------------------------\n\nTITLE: Disabling Section Pages Configuration\nDESCRIPTION: Configuration for disabling the rendering of section pages while still maintaining them in the navigation structure, using the '_build' parameter with 'render = \"never\"'.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/frontmatter/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\ncollapsibleMenu = true\n[_build]\n  render = \"never\"\n```\n\n----------------------------------------\n\nTITLE: Running the ConfigMap to CRD Conversion Tool Directly Against a Cluster\nDESCRIPTION: Command to run the conversion tool directly against a Kubernetes cluster, which prints the resulting CRs to standard output. This approach doesn't require exporting the ConfigMap to a file first.\nSOURCE: https://github.com/metallb/metallb/blob/main/configmaptocrs/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl run configmaptocrs -n metallb-system --restart=Never -it --rm --image overriden --overrides '\n{\n  \"spec\": {\n    \"containers\": [\n      {\n        \"name\": \"configmaptocrs\",\n        \"image\": \"quay.io/metallb/configmaptocrs\",\n        \"command\": [\n          \"/configmaptocrs\",\n          \"-source\",\n          \"config\",\n          \"-only-data\",\n          \"-stdout\"\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"config\",\n            \"mountPath\": \"/var/input\"\n          }\n        ]\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"config\",\n        \"configMap\": {\n          \"name\": \"config\"\n        }\n      }\n    ]\n  }\n}'\n```\n\n----------------------------------------\n\nTITLE: Sample MetalLB ConfigMap Configuration\nDESCRIPTION: Example of an original MetalLB ConfigMap configuration containing BGP peer and address pool settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/migration_to_crds.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - my-asn: 64512\n      peer-asn: 64512\n      peer-address: 10.96.0.100\n    address-pools:\n    - name: my-ip-space\n      protocol: bgp\n      addresses:\n      - 198.51.100.0/24\n      bgp-advertisements:\n      - aggregation-length: 32\n        localpref: 100\n        communities:\n        - 64512:1234\n```\n\n----------------------------------------\n\nTITLE: Verifying IPv6 BGP Route Publication in MetalLB\nDESCRIPTION: Command to verify that an IPv6 route to the test service has been published by the MetalLB BGP speaker.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it speaker-c9fx8 -n metallb-system -c frr -- vtysh -c \"show bgp ipv6 unicast sum\"\n```\n\n----------------------------------------\n\nTITLE: Activating Dedicated Search Page in Hugo\nDESCRIPTION: Configuration to add a dedicated search page by adding the 'searchpage' output format to the home outputs. This generates a search.html file that can be accessed via the magnifier glass icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[outputs]\n  home = [\"html\", \"rss\", \"search\", \"searchpage\"]\n```\n\n----------------------------------------\n\nTITLE: Granting Required Privileges for MetalLB on OpenShift\nDESCRIPTION: Command to grant the speaker DaemonSet elevated privileges in OpenShift, enabling it to perform the raw networking operations required for load balancing functionality.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/installation/clouds.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\noc adm policy add-scc-to-user privileged -n metallb-system -z speaker\n```\n\n----------------------------------------\n\nTITLE: Hugo Configuration Settings\nDESCRIPTION: TOML configuration settings for Hugo's syntax highlighting options\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/highlight.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[markup]\n  [markup.highlight]\n    lineNumbersInTable = false\n    noClasses = false\n```\n\n----------------------------------------\n\nTITLE: Adding Icon to Menu Entry Configuration\nDESCRIPTION: Demonstrates how to add an icon to a menu entry using the 'menuPre' parameter to insert HTML code before the menu label, specifically using a GitHub icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/frontmatter/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ntitle = \"GitHub repo\"\nmenuPre = \"<i class='fab fa-github'></i> \"\n```\n\n----------------------------------------\n\nTITLE: Verifying BGP Route Publication in MetalLB\nDESCRIPTION: Command to verify that a route to the test service has been published by the MetalLB BGP speaker.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec frr vtysh -c \"show ip bgp detail\"\n```\n\n----------------------------------------\n\nTITLE: Testing Service Connectivity in MetalLB\nDESCRIPTION: Commands to test connectivity to the service IP allocated by MetalLB from the FRR container.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it frr bash\nbash-5.0# echo \"GET /\" | nc 192.168.10.0 80\n```\n\n----------------------------------------\n\nTITLE: Creating IPv6 Test Service for MetalLB\nDESCRIPTION: Command to create an IPv6 test nginx service in the MetalLB development environment.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f dev-env/testsvc_ipv6.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Public Webserver from Root in Hugo\nDESCRIPTION: Configuration settings for deploying a Hugo site on a public webserver from the root directory. This sets the base URL to the domain root.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = \"https://example.com/\"\n```\n\n----------------------------------------\n\nTITLE: Example Generated CRD-Based Configuration Output\nDESCRIPTION: The resulting CRD-based configuration generated by the conversion tool. It creates separate resources for BGPPeer, IPAddressPool, and BGPAdvertisement with the equivalent configuration from the original ConfigMap.\nSOURCE: https://github.com/metallb/metallb/blob/main/configmaptocrs/README.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# This was autogenerated by MetalLB's custom resource generator.\napiVersion: metallb.io/v1beta2\nkind: BGPPeer\nmetadata:\n  creationTimestamp: null\n  name: peer1\n  namespace: metallb-system\nspec:\n  holdTime: 1m30s\n  keepaliveTime: 0s\n  myASN: 64512\n  passwordSecret: {}\n  peerASN: 64512\n  peerAddress: 10.96.0.100\nstatus: {}\n---\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  creationTimestamp: null\n  name: my-ip-space\n  namespace: metallb-system\nspec:\n  addresses:\n  - 198.51.100.0/24\nstatus: {}\n---\napiVersion: metallb.io/v1beta1\nkind: BGPAdvertisement\nmetadata:\n  creationTimestamp: null\n  name: bgpadvertisement1\n  namespace: metallb-system\nspec:\n  aggregationLength: 32\n  communities:\n  - 64512:1234\n  ipAddressPools:\n  - my-ip-space\n  localPref: 100\nstatus: {}\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Public Webserver from Subdirectory in Hugo\nDESCRIPTION: Configuration settings for deploying a Hugo site on a public webserver from a subdirectory. This sets the base URL to include the subdirectory path and disables relative URLs.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = \"https://example.com/mysite/\"\nrelativeURLs = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Menu Entry Titles\nDESCRIPTION: Explains how to set a different title for a menu entry than the page title itself using the 'linkTitle' parameter, allowing for more concise menu labels.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/frontmatter/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = \"Install on Linux\"\nlinkTitle = \"Linux\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up IPv6 BGP Environment in MetalLB\nDESCRIPTION: Command to set up an IPv6 BGP environment for MetalLB development.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env -i ipv6 -p bgp -b frr\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up MetalLB Development Environment\nDESCRIPTION: Command to clean up the MetalLB development environment after use.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env-cleanup\n```\n\n----------------------------------------\n\nTITLE: Listening to Theme Variant Changes in JavaScript\nDESCRIPTION: A JavaScript event listener that responds to the 'themeVariantLoaded' custom event. This code demonstrates how to detect when a color variant has been fully loaded, either initially or through the variant selector, and access the variant name.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener( 'themeVariantLoaded', function( e ){\n  console.log( e.detail.variant ); // `relearn-light`\n});\n```\n\n----------------------------------------\n\nTITLE: Running Converter Directly in Kubernetes Cluster\nDESCRIPTION: Kubernetes command to run the conversion tool directly in-cluster using a temporary pod with the ConfigMap mounted.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/configuration/migration_to_crds.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl run configmaptocrs -n metallb-system --restart=Never -it --rm --image overriden --overrides '\n{\n  \"spec\": {\n    \"containers\": [\n      {\n        \"name\": \"configmaptocrs\",\n        \"image\": \"quay.io/metallb/configmaptocrs\",\n        \"command\": [\n          \"/configmaptocrs\",\n          \"-source\",\n          \"config\",\n          \"-only-data\",\n          \"-stdout\"\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"config\",\n            \"mountPath\": \"/var/input\"\n          }\n        ]\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"config\",\n        \"configMap\": {\n          \"name\": \"config\"\n        }\n      }\n    ]\n  }\n}'\n```\n\n----------------------------------------\n\nTITLE: Disabling Explicit Index URLs in Hugo\nDESCRIPTION: Configuration to disable appending 'index.html' to page links when the site is served via a webserver. This parameter is set in the params section of the Hugo configuration file.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  disableExplicitIndexURLs = true\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages with Weight Parameter\nDESCRIPTION: Shows how to control the order of pages in a menu by setting the 'weight' parameter to a numeric value, which affects the sorting of sibling menu entries.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/frontmatter/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ntitle = \"My page\"\nweight = 5\n```\n\n----------------------------------------\n\nTITLE: Installing Python Requirements for MetalLB Development\nDESCRIPTION: Command to install the required Python modules for the MetalLB development environment using pip.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Defining BGPPeer and BFDProfile Structures in Go\nDESCRIPTION: Go structs for BGPPeer and BFDProfile, representing external BGP peer configuration and BFD profile settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\ntype bgpPeer struct {\n  Name              string\n  MyASN             uint32\n  ASN               uint32\n  Addr              string\n  SrcAddr           string\n  Port              uint16\n  HoldTime          string\n  KeepaliveTime     string\n  RouterID          string\n  Password          string\n  BFDProfile        string\n  EBGPMultiHop      bool\n  NodeSelector      *metav1.LabelSelector\n  SecretPassword    corev1.SecretRef\n}\n\ntype bfdProfile struct {\n  Name             string  \n  ReceiveInterval  *uint32 \n  TransmitInterval *uint32 \n  DetectMultiplier *uint32 \n  EchoInterval     *uint32 \n  EchoMode         bool    \n  PassiveMode      bool    \n  MinimumTTL       *uint32 \n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Home Button for Multiple Languages in Hugo\nDESCRIPTION: Configuration for customizing the home button appearance for different languages. This example shows settings for English and Pirate languages with custom Font Awesome icons.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[languages]\n[languages.en]\n[languages.en.params]\nlandingPageName = \"<i class='fa-fw fas fa-home'></i> Home\"\n[languages.pir]\n[languages.pir.params]\nlandingPageName = \"<i class='fa-fw fas fa-home'></i> Arrr! Homme\"\n```\n\n----------------------------------------\n\nTITLE: Viewing IP Routes in unnumbered-p2p-peer\nDESCRIPTION: This command displays the IP routing table in the unnumbered-p2p-peer container, showing BGP learned routes and their next hops. It demonstrates the use of IPv6 link-local addresses as next hops for IPv4 routes in an unnumbered BGP configuration.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n> docker exec -it unnumbered-p2p-peer ip route\n5.5.5.5 nhid 21 proto bgp metric 20\n        nexthop via inet6 fe80::dcad:beff:feff:1160 dev eth00 weight 1\n        nexthop via inet6 fe80::dcad:beff:feff:1161 dev eth01 weight 1\n        nexthop via inet6 fe80::dcad:beff:feff:1162 dev eth02 weight 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Theme Variant in Hugo Configuration\nDESCRIPTION: Sets the custom theme variant in the Hugo configuration file. This TOML configuration tells Hugo to use the custom 'my-branding' theme variant that was created in the CSS file.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  themeVariant = \"my-branding\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Shortcode Dependencies in Hugo\nDESCRIPTION: Configuration to register a custom shortcode's dependencies in the Hugo configuration file. This tells the theme about the relationship between the shortcode and its dependency loader.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n[params.relearn.dependencies]\n  [params.relearn.dependencies.myshortcode]\n    name = \"MyShortcode\"\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies\nDESCRIPTION: List of Python package dependencies required for MetalLB development including build tools, version management, and code formatting packages.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n# non-version specific\ninvoke\nsemver\nPyYAML\nblack\n```\n\n----------------------------------------\n\nTITLE: Adding Taxonomy Shortcuts to Hugo Menu Configuration\nDESCRIPTION: Configuration to add shortcuts to tag and category listing pages in the Hugo navigation menu with Font Awesome icons.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/taxonomy.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fas fa-tags'></i> Tags\"\nurl = \"/tags\"\n\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fas fa-layer-group'></i> Categories\"\nurl = \"/categories\"\n```\n\n----------------------------------------\n\nTITLE: Mermaid Global Configuration in Hugo Config File\nDESCRIPTION: Configuration for Mermaid in the Hugo configuration file (hugo.toml). Sets the default theme to dark and enables zoom functionality for all Mermaid diagrams site-wide.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  mermaidInitialize = \"{ \\\"theme\\\": \\\"dark\\\" }\"\n  mermaidZoom = true\n```\n\n----------------------------------------\n\nTITLE: Creating Chapter Page with Hugo Command\nDESCRIPTION: Command to create a new chapter page using Hugo's chapter archetype\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nhugo new --kind chapter <name>/_index.md\n```\n\n----------------------------------------\n\nTITLE: Activating Print Support in Hugo\nDESCRIPTION: Configuration to enable print functionality for chapters or entire site by adding the 'print' output format to home, section, and page outputs. This adds a printer icon to the top bar.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[outputs]\n  home = [\"html\", \"rss\", \"print\", \"search\"]\n  section = [\"html\", \"rss\", \"print\"]\n  page = [\"html\", \"rss\", \"print\"]\n```\n\n----------------------------------------\n\nTITLE: Defining L2Advertisement Struct in Go\nDESCRIPTION: Go struct definition for the L2Advertisement type that allows configuring interface announcement settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/layer2-bind-interfaces.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype L2Advertisement struct {\n  Name                     string `yaml:\"name\"`\n  IPAddressPools           []string `yaml:\"ipAddressPools\"`\n  IPAddressPoolSelector    *metav1.LabelSelector `yaml:\"ipAddressPoolSelector\"`\n  NodeSelector             *metav1.LabelSelector `yaml:\"nodeSelector\"`\n  Interfaces               []string `yaml:\"interfaces\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Parent Headless Branch Bundle in Hugo (Option 2)\nDESCRIPTION: Configuration for parent headless branch bundle to prevent child pages from appearing in the main menu.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n[_build]\n  render = \"never\"\n  list = \"never\"\n  publishResources = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Image Effects in Hugo.toml\nDESCRIPTION: Example configuration for setting default image effects in the Hugo configuration file (hugo.toml). This defines which effects are enabled by default for all images.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  [params.imageEffects]\n    border = false\n    lazy = true\n    lightbox = true\n    shadow = false\n```\n\n----------------------------------------\n\nTITLE: Using 'children' Shortcode in Hugo Templates\nDESCRIPTION: Basic usage of the 'children' shortcode in Hugo to list child pages with weight-based sorting.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* children sort=\"weight\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Custom Archetype Template Structure\nDESCRIPTION: Template structure for creating custom archetypes in Hugo\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"<kind>\"\n+++\n\n```\n\n----------------------------------------\n\nTITLE: Fenced Code Block with JavaScript Syntax Highlighting\nDESCRIPTION: Shows how to create fenced code blocks using triple backticks with language specifier for JavaScript. This enables syntax highlighting according to the specified language.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    name: \"Claus\",\n    surname: \"Santa\",\n    profession: \"courier\",\n    age: 666,\n    address: {\n        city: \"North Pole\",\n        postalCode: 1,\n        country: \"Arctic\"\n    },\n    friends: [ \"Dasher\", \"Dancer\", \"Prancer\", \"Vixen\", \"Comet\", \"Cupid\", \"Donder\", \"Blitzen\", \"Rudolph\" ]\n};\n```\n\n----------------------------------------\n\nTITLE: More Button Implementation Example\nDESCRIPTION: Example implementation of a button with area overlay found in layouts/partials/topbar/button/more.html. Demonstrates practical usage of the area-button functionality.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/topbar/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nlayouts/partials/topbar/button/more.html\n```\n\n----------------------------------------\n\nTITLE: Complete Theme Variant Configuration Example in Hugo TOML\nDESCRIPTION: Comprehensive example showing all possible theme variant configurations including auto modes and custom names.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  [[params.themeVariant]]\n    identifier = \"relearn-auto\"\n    name = \"Relearn Light/Dark\"\n    auto = []\n  [[params.themeVariant]]\n    identifier = \"relearn-light\"\n  [[params.themeVariant]]\n    identifier = \"relearn-dark\"\n  [[params.themeVariant]]\n    identifier = \"zen-auto\"\n    name = \"Zen Light/Dark\"\n    auto = [ \"zen-light\", \"zen-dark\" ]\n  [[params.themeVariant]]\n    identifier = \"zen-light\"\n  [[params.themeVariant]]\n    identifier = \"zen-dark\"\n  [[params.themeVariant]]\n    identifier = \"neon\"\n```\n\n----------------------------------------\n\nTITLE: Using 'children' Partial in Hugo Templates\nDESCRIPTION: Implementation of the 'children' functionality using a partial template with parameters passed as a dictionary.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/children.html\" (dict\n  \"page\" .\n  \"sort\" \"weight\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Creating Hugo Front Matter with Go Templates\nDESCRIPTION: Front matter template for Hugo pages that converts filename to title case and sets current date. Uses YAML format with Go template functions to dynamically generate content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/archetypes/default.md#2025-04-21_snippet_0\n\nLANGUAGE: go-template\nCODE:\n```\n---\ntitle: \"{{ replace .TranslationBaseName \"-\" \" \" | title }}\"\ndate: {{ .Date }}\ndraft: true\n---\n```\n\n----------------------------------------\n\nTITLE: File Path Patterns for Content Creation\nDESCRIPTION: Shows the supported file path patterns for creating new pages in either the content or static folders. Supports both Markdown and HTML formats with specific directory structures.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/layouts/partials/initial.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<TITLE>/_index.md\n<TITLE>/index.md\n<TITLE>.md\n<TITLE>/index.html\n```\n\n----------------------------------------\n\nTITLE: Defining L2Advertisement Structure in Go\nDESCRIPTION: Go struct for L2Advertisement, representing the intention to advertise IPs via L2 protocol.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/pool-configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype l2Advertisement struct {\n  Name                     string\n  IPAddressPools           []string\n  IPAddressPoolSelector    *metav1.LabelSelector\n}\n```\n\n----------------------------------------\n\nTITLE: Changing to the New Site Directory\nDESCRIPTION: Command to navigate into the newly created Hugo site directory.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd my-new-site\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Theme Variants in Hugo TOML\nDESCRIPTION: Configuration for enabling multiple theme variants with a variant selector in the menu footer.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  themeVariant = [ \"relearn-light\", \"relearn-dark\" ]\n```\n\n----------------------------------------\n\nTITLE: Children Shortcode with Infinite Depth and Hidden Pages in Hugo\nDESCRIPTION: Using the 'children' shortcode to display all descendants (infinite depth) including pages hidden from the menu.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{%/* children depth=\"999\" showhidden=\"true\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring VSCode Front Matter in JSON\nDESCRIPTION: JSON configuration for VSCode Front Matter extension, showing how to reference snippets file for Hugo theme integration.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  ...\n  \"frontMatter.extends\": [\n      \"./vscode-frontmatter/snippets.en.json\"\n  ]\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Mermaid with Partial Template\nDESCRIPTION: Example of using Mermaid within a Hugo partial template. This provides direct programmatic control over the Mermaid diagram, allowing for parameters to be passed as a dictionary.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/mermaid.html\" (dict\n  \"page\"    .\n  \"content\" \"graph LR;\\nIf --> Then\\nThen --> Else\"\n  \"align\"   \"center\"\n  \"zoom\"    \"true\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Mermaid Configuration in Page Frontmatter\nDESCRIPTION: Example of configuring Mermaid through a page's frontmatter. This allows overriding the site-wide settings on a per-page basis, setting the theme to dark and enabling zoom.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmermaidInitialize = \"{ \\\"theme\\\": \\\"dark\\\" }\"\nmermaidZoom = true\n```\n\n----------------------------------------\n\nTITLE: Customizing Menu Width with CSS Variables\nDESCRIPTION: CSS variables to customize the menu width for different screen sizes. These can be defined in the custom-header.html file to override the default responsive menu widths.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_10\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --MENU-WIDTH-S: 14.375rem;\n    --MENU-WIDTH-M: 14.375rem;\n    --MENU-WIDTH-L: 18.75rem;\n}\n```\n\n----------------------------------------\n\nTITLE: Children Shortcode with Div Container and Element Styles in Hugo\nDESCRIPTION: Using the 'children' shortcode with div elements for both container and individual items, with specified depth parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{%/* children containerstyle=\"div\" style=\"div\" depth=\"3\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Loading jQuery in Custom Header HTML\nDESCRIPTION: HTML code to load jQuery library from static directory for custom theme modifications after jQuery was removed from the core distribution.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"{{\"js/jquery.min.js\"| relURL}}\" defer></script>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Shortcode with JavaScript Dependencies in Hugo\nDESCRIPTION: Go template code for a custom shortcode that requires JavaScript dependencies. This sets a store value to indicate the shortcode is being used on the page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n{{- .Page.Store.Set \"hasMyShortcode\" true }}\n```\n\n----------------------------------------\n\nTITLE: Service L2 Status Definition in YAML and Go\nDESCRIPTION: Defines the structure for exposing Layer 2 service announcement status including node and interface information.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/crd-status.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: ServiceL2Status\nmetadata:\n  name: service1\n  namespace: servicenamespace\n  labels:\n    metallb.io/node: worker0\n    metallb.io/service: service1\nstatus:\n    node: worker0\n    interfaces:\n        - eth0\n        - eth1\n```\n\nLANGUAGE: go\nCODE:\n```\ntype MetalLBServiceL2Status struct {\n    Node       string\n    Interfaces []InterfaceInfo\n}\n\ntype ServiceL2Status struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n    Status            MetalLBServiceL2Status `json:\"status,omitempty\"`\n}\n\ntype InterfaceInfo struct {\n    Name string `json:\"name,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Including Content via Hugo Partial\nDESCRIPTION: Demonstrates including content using Hugo partials with a dictionary of parameters including the page context and file path.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/include.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/include .html\" (dict\n  \"page\" .\n  \"file\" \"shortcodes/INCLUDE_ME.md\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Example of Effective Image Settings Configuration\nDESCRIPTION: Shows the resulting combined image settings after applying defaults, frontmatter overrides, and explicit URL parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\nborder = true\nlazy = true\nlightbox = false\nshadow = false\nbg-white = true\n```\n\n----------------------------------------\n\nTITLE: Custom Attachments Display with File Filtering\nDESCRIPTION: Attachments shortcode with custom title and file pattern filtering for PDF and MP4 files.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/attachments/index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{%/* attachments title=\"Related **files**\" pattern=\".*\\.(pdf|mp4)\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Basic Menu Shortcuts Configuration in TOML\nDESCRIPTION: Example configuration for adding custom menu shortcuts to the Hugo navigation menu, including GitHub links, showcases, documentation, credits and tags.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/menushortcuts.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fab fa-github'></i> GitHub repo\"\nidentifier = \"ds\"\nurl = \"https://github.com/McShelby/hugo-theme-relearn\"\nweight = 10\n\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fas fa-camera'></i> Showcases\"\nurl = \"showcase/\"\nweight = 11\n\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fas fa-bookmark'></i> Hugo Documentation\"\nidentifier = \"hugodoc\"\nurl = \"https://gohugo.io/\"\nweight = 20\n\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fas fa-bullhorn'></i> Credits\"\nurl = \"more/credits/\"\nweight = 30\n\n[[menu.shortcuts]]\nname = \"<i class='fa-fw fas fa-tags'></i> Tags\"\nurl = \"tags/\"\nweight = 40\n```\n\n----------------------------------------\n\nTITLE: Creating Custom CSS Theme Variant by Importing Existing Theme\nDESCRIPTION: Creates a custom CSS theme variant by importing an existing theme (relearn-light) and overriding specific properties for syntax highlighting. This approach allows for maintaining updates from the base theme while applying customizations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n@import \"theme-relearn-light.css\";\n\n:root {\n  --CODE-theme: neon; /* name of the chroma stylesheet file */\n  --CODE-BLOCK-color: rgba( 226, 228, 229, 1 ); /* fallback color for code text */\n  --CODE-BLOCK-BG-color: rgba( 40, 42, 54, 1 ); /* fallback color for code background */\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Hugo Site using CLI\nDESCRIPTION: Command to initialize a new Hugo website project directory structure.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo new site my-new-site\n```\n\n----------------------------------------\n\nTITLE: Mermaid with Codefence Syntax\nDESCRIPTION: Example of using Mermaid with codefence syntax, which is more portable across platforms like GitHub. Shows a simple graph with parameters for alignment and zoom functionality.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```mermaid { align=\"center\" zoom=\"true\" }\ngraph LR;\n    If --> Then\n    Then --> Else\n```\n```\n\n----------------------------------------\n\nTITLE: Basic Notice Shortcode Implementation\nDESCRIPTION: Shows the basic implementation of the notice shortcode with named parameters for style, title, and icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"primary\" title=\"There may be pirates\" icon=\"skull-crossbones\" */%}}\nIt is all about the boxes.\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Parent Headless Branch Bundle Configuration in TOML\nDESCRIPTION: Configuration for a parent headless branch bundle that prevents both the parent and child pages from appearing in the menu section.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/menushortcuts.en.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[_build]\n  render = \"never\"\n  list = \"never\"\n  publishResources = false\n```\n\n----------------------------------------\n\nTITLE: Info-styled Attachments with Descending Sort\nDESCRIPTION: Attachments shortcode styled as info box with descending sort order.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/attachments/index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* attachments style=\"info\" sort=\"desc\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: i18n Translation String Configuration in TOML\nDESCRIPTION: Configuration example for customizing the shortcuts title translation string in Hugo's i18n system.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/menushortcuts.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[Shortcuts-Title]\nother = \"<Your value>\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Variant Generator with JavaScript\nDESCRIPTION: This JavaScript code initializes the variant generator by calling the generator function on the 'variants' object, targeting the Mermaid graph container.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/generator/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.variants && variants.generator( '#R-vargenerator' );\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabs Shortcode in Hugo Templates\nDESCRIPTION: Shows how to implement the tabs shortcode in Hugo templates, demonstrating the syntax for creating tabbed content with different programming examples.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{</* tabs title=\"hello.\" */>}}\n{{%/* tab title=\"py\" */%}}\n```python\nprint(\"Hello World!\")\n```\n{{%/* /tab */%}}\n{{%/* tab title=\"sh\" */%}}\n```bash\necho \"Hello World!\"\n```\n{{%/* /tab */%}}\n{{%/* tab title=\"c\" */%}}\n```c\nprintf\"Hello World!\");\n```\n{{%/* /tab */%}}\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating Dependency Loader for Custom Shortcode in Hugo\nDESCRIPTION: Go template code for loading JavaScript dependencies for a custom shortcode. This example adds jQuery from a CDN when the shortcode is used on a page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n{{- if eq .location \"footer\" }}\n  <script src=\"https://www.unpkg.com/jquery/dist/jquery.js\"></script>\n{{- end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Requirement Diagram with Mermaid in Go\nDESCRIPTION: This snippet shows how to create a requirement diagram using Mermaid syntax within a Go template. It defines a requirement and an element that satisfies it.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\n    requirementDiagram\n\n    requirement test_req {\n    id: 1\n    text: the test text.\n    risk: high\n    verifymethod: test\n    }\n\n    element test_entity {\n    type: simulation\n    }\n\n    test_entity - satisfies -> test_req\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Notice Shortcode with Positional Parameters\nDESCRIPTION: Demonstrates how to use the notice shortcode with positional parameters instead of named ones.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice primary \"There may be pirates\" \"skull-crossbones\" */%}}\nIt is all about the boxes.\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Taxonomies in Hugo Frontmatter\nDESCRIPTION: Example of how to add taxonomies to a page's frontmatter using categories as an array and tags as a single string.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/taxonomy.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ncategories = [\"taxonomy\", \"content\"]\ntags = \"tutorial\"\ntitle = \"Taxonomy\"\n```\n\n----------------------------------------\n\nTITLE: Button Implementation Using Hugo Partials\nDESCRIPTION: Alternative implementation using Hugo partials instead of shortcodes, allowing for button creation from within templates.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/button.html\" (dict\n    \"page\" .\n    \"href\" \"https://gohugo.io/\"\n    \"content\" \"Get Hugo\"\n)}}\n{{ partial \"shortcodes/button.html\" (dict\n  \"page\" .\n  \"href\" \"https://gohugo.io/\"\n  \"style\" \"warning\"\n  \"icon\" \"dragon\"\n  \"content\" \"Get Hugo\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Simple Page Title Configuration in TOML\nDESCRIPTION: Basic title configuration for a simple page in Hugo.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/menushortcuts.en.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\ntitle = \"Credits\"\n```\n\n----------------------------------------\n\nTITLE: Setting Image Effects via URL Parameters in Markdown\nDESCRIPTION: Example of how to set image effects directly in the image URL as query parameters. This disables the lightbox effect and enables a custom bg-white effect.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.en.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n![Minion](https://octodex.github.com/images/minion.png?lightbox=false&bg-white=true)\n```\n\n----------------------------------------\n\nTITLE: Creating Content Pages within a Chapter\nDESCRIPTION: Commands to create standard content pages and nested section pages within a chapter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nhugo new basics/first-content.md\nhugo new basics/second-content/_index.md\n```\n\n----------------------------------------\n\nTITLE: Creating Sankey Diagram with Mermaid in Go\nDESCRIPTION: This snippet demonstrates how to create a Sankey diagram using Mermaid syntax within a Go template. It shows energy flow from an electricity grid to different destinations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_20\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\nsankey-beta\n\n%% source,target,value\nElectricity grid,Over generation / exports,104.453\nElectricity grid,Heating and cooling - homes,113.726\nElectricity grid,H2 conversion,27.14\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Warning Notice with Custom Title and Icon\nDESCRIPTION: Demonstrates how to override the default title and icon in a warning-style notice with custom values.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"warning\" title=\"Here are dragons\" icon=\"dragon\" */%}}\nA **warning** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring TOML Front Matter for Hidden MetalLB Documentation Page\nDESCRIPTION: TOML front matter configuration for a hidden documentation page in the MetalLB project. The configuration sets visibility options, description, tags, title, and weight for sorting. This template is marked as hidden and includes a custom piratify shortcode for themed styling.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-4/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\nalwaysopen = false\ndescrption = \"This be a hidden demo child plank\"\nhidden = true\ntags = [\"children\", \"the hidden\"]\ntitle = \"plank 4 (hidden)\"\nweight = 40\n+++\n```\n\n----------------------------------------\n\nTITLE: Creating an Icon-Only Button in Hugo\nDESCRIPTION: Example showing how to create a button with only an icon and no text content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" icon=\"download\" %}}{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Rendering Custom Taxonomy Lists with Hugo Partials\nDESCRIPTION: Example of how to use the term-list.html partial to display a custom taxonomy list on a page with configurable icon and taxonomy name.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/taxonomy.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"term-list.html\" (dict\n  \"page\" .\n  \"taxonomy\" \"categories\"\n  \"icon\" \"layer-group\"\n) }}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Hugo Project Folder Structure\nDESCRIPTION: A plaintext representation of a typical Hugo project folder structure, showing the hierarchy of content folders and how they map to website URLs.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/pages/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncontent\n├── level-one\n│   ├── level-two\n│   │   ├── level-three\n│   │   │   ├── level-four\n│   │   │   │   ├── _index.md       <-- /level-one/level-two/level-three/level-four\n│   │   │   │   ├── page-4-a.md     <-- /level-one/level-two/level-three/level-four/page-4-a\n│   │   │   │   ├── page-4-b.md     <-- /level-one/level-two/level-three/level-four/page-4-b\n│   │   │   │   └── page-4-c.md     <-- /level-one/level-two/level-three/level-four/page-4-c\n│   │   │   ├── _index.md           <-- /level-one/level-two/level-three\n│   │   │   ├── page-3-a.md         <-- /level-one/level-two/level-three/page-3-a\n│   │   │   ├── page-3-b.md         <-- /level-one/level-two/level-three/page-3-b\n│   │   │   └── page-3-c.md         <-- /level-one/level-two/level-three/page-3-c\n│   │   ├── _index.md               <-- /level-one/level-two\n│   │   ├── page-2-a.md             <-- /level-one/level-two/page-2-a\n│   │   ├── page-2-b.md             <-- /level-one/level-two/page-2-b\n│   │   └── page-2-c.md             <-- /level-one/level-two/page-2-c\n│   ├── _index.md                   <-- /level-one\n│   ├── page-1-a.md                 <-- /level-one/page-1-a\n│   ├── page-1-b.md                 <-- /level-one/page-1-b\n│   └── page-1-c.md                 <-- /level-one/page-1-c\n├── _index.md                       <-- /\n└── page-top.md                     <-- /page-top\n```\n\n----------------------------------------\n\nTITLE: Using openapi Partial in Hugo Templates\nDESCRIPTION: Alternative approach using Hugo partials to display OpenAPI specifications. This method provides more flexibility when integrating OpenAPI documentation into custom templates.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/openapi/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/openapi.html\" (dict\n  \"page\" .\n  \"src\"  \"https://petstore3.openapi.io/api/v3/openapi.json\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Default Page Template Structure\nDESCRIPTION: Default template structure for a regular content page in Hugo\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n+++\ntitle = \"{{ replace .Name \"-\" \" \" | title }}\"\n+++\n\nLorem Ipsum.\n```\n\n----------------------------------------\n\nTITLE: Rendering Mathematical Formula with MathJax in Hugo (Codefence Syntax)\nDESCRIPTION: Example of using codefence syntax to render a mathematical formula with center alignment in Hugo using MathJax.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/math.en.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```math { align=\"center\" }\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\n```\n```\n\n----------------------------------------\n\nTITLE: Custom Color Notice with Markdown Title and Font Awesome Icon\nDESCRIPTION: Demonstrates using a custom color (fuchsia), markdown formatting in the title, and a Font Awesome brand icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_19\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice color=\"fuchsia\" title=\"**Hugo**\" icon=\"fa-fw fab fa-hackerrank\" */%}}\nVictor? Is it you?\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Chapter Frontmatter\nDESCRIPTION: Hugo frontmatter template that defines the basic structure for a new documentation chapter. Sets the archetype as 'chapter', generates a title by replacing hyphens with spaces, and assigns a default weight of 1 for content ordering.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/archetypes/chapter.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"chapter\"\ntitle = \"{{ replace .Name \"-\" \" \" | title }}\"\nweight = 1\n+++\n```\n\n----------------------------------------\n\nTITLE: Positional Parameter Expand Shortcode in Hugo\nDESCRIPTION: Demonstrates using the expand shortcode with positional parameters instead of named ones.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/expand.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* expand \"Expand me...\" */%}}Thank you!{{%/* /expand */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Frontmatter for MetalLB Taxonomy Documentation\nDESCRIPTION: TOML-formatted frontmatter for a Hugo documentation page that defines metadata including categories, tags, title and weight. It also includes a custom shortcode 'piratify' in the content section.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/taxonomy.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ncategories = [\"taxonomy\", \"content\"]\ntags = \"tutorrrial\"\ntitle = \"Taxonomy\"\nweight = 8\n+++\n```\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Icons Using Hugo Partials\nDESCRIPTION: Demonstrates how to use Hugo partials to implement Font Awesome icons by passing parameters as dictionaries.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/icon.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/icon.html\" (dict\n    \"page\" .\n    \"icon\" \"exclamation-triangle\"\n)}}\n{{ partial \"shortcodes/icon.html\" (dict\n    \"page\" .\n    \"icon\" \"angle-double-up\"\n)}}\n{{ partial \"shortcodes/icon.html\" (dict\n    \"page\" .\n    \"icon\" \"skull-crossbones\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Chapter Page Template Structure\nDESCRIPTION: Default template structure for a chapter page in Hugo\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"chapter\"\ntitle = \"{{ replace .Name \"-\" \" \" | title }}\"\nweight = 1\n+++\n\nLorem Ipsum.\n```\n\n----------------------------------------\n\nTITLE: Complex Expand Shortcode with Markdown in Hugo\nDESCRIPTION: Demonstrates using the expand shortcode with complex markdown content including lists, formatting, and code blocks.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/expand.en.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n{{%/* expand title=\"Show me almost **endless** possibilities\" */%}}\nYou can add standard markdown syntax:\n\n- multiple paragraphs\n- bullet point lists\n- _emphasized_, **bold** and even **_bold emphasized_** text\n- [links](https://example.com)\n- etc.\n\n```plaintext\n...and even source code\n```\n\n> the possibilities are endless (almost - including other shortcodes may or may not work)\n{{%/* /expand */%}}\n```\n\n----------------------------------------\n\nTITLE: Red Color Notice without Title and Icon\nDESCRIPTION: Shows a notice with the red color style without any title or icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_16\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"red\" */%}}\nA **red** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring TOML Front Matter for MetalLB Documentation Page\nDESCRIPTION: TOML configuration block defining metadata for a documentation page, including description, tags, and title properties.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-3/test3.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\ndescription = \"This is a plain page test nested in a parent\"\ntags = [\"children\", \"non-hidden\"]\ntitle = \"page 3-1\"\n```\n\n----------------------------------------\n\nTITLE: Partial Template Implementation of Expand in Hugo\nDESCRIPTION: Shows how to implement the expand functionality using Hugo partials with a dictionary of parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/expand.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/expand.html\" (dict\n  \"page\"  .\n  \"title\" \"Expand me...\"\n  \"content\" \"Thank you!\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Disabling Language Switching Button in Hugo Relearn Theme\nDESCRIPTION: TOML configuration to disable the language switching button in the Hugo Relearn Theme. This setting removes the option for users to change languages in the browser interface.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/i18n/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: TOML\nCODE:\n```\n[params]\n  disableLanguageSwitchingButton = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Private Webserver (LAN) in Hugo\nDESCRIPTION: Configuration settings for deploying a Hugo site on a private local area network. This sets the base URL to the root and enables relative URLs for local access.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = \"/\"\nrelativeURLs = true\n```\n\n----------------------------------------\n\nTITLE: Using openapi with Local File in Hugo\nDESCRIPTION: Example showing how to reference a local OpenAPI specification file. This approach is useful when you want to host the OpenAPI definition within your project rather than referencing an external URL.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/openapi/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{</* openapi src=\"petstore.json\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating Home Page with Hugo Command\nDESCRIPTION: Command to create a new home page using Hugo's home archetype\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhugo new --kind home _index.md\n```\n\n----------------------------------------\n\nTITLE: Implementing Nested Tabs with Styling\nDESCRIPTION: An advanced example showing how to implement nested tab views with custom styling and colors.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n{{</* tabs groupid=\"main\" style=\"primary\" title=\"Rationale\" icon=\"thumbtack\" */>}}\n{{</* tab title=\"Text\" */>}}\n  Simple text is possible here...\n  {{</* tabs groupid=\"tabs-example-language\" */>}}\n  {{%/* tab title=\"python\" */%}}\n  Python is **super** easy.\n\n  - most of the time.\n  - if you don't want to output unicode\n  {{%/* /tab */%}}\n  {{%/* tab title=\"bash\" */%}}\n  Bash is for **hackers**.\n  {{%/* /tab */%}}\n  {{</* /tabs */>}}\n{{</* /tab */>}}\n\n{{</* tab title=\"Code\" style=\"default\" color=\"darkorchid\" */>}}\n  ...but no markdown\n  {{</* tabs groupid=\"tabs-example-language\" */>}}\n  {{%/* tab title=\"python\" */%}}\n  ```python\n  print(\"Hello World!\")\n  ```\n  {{%/* /tab */%}}\n  {{%/* tab title=\"bash\" */%}}\n  ```bash\n  echo \"Hello World!\"\n  ```\n  {{%/* /tab */%}}\n  {{</* /tabs */>}}\n{{</* /tab */>}}\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Basic Expand Shortcode Usage in Hugo\nDESCRIPTION: Shows the basic syntax for using the expand shortcode with named parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/expand.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* expand title=\"Expand me...\" */%}}Thank you!{{%/* /expand */%}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Shortcode Template for Including Markdown Content\nDESCRIPTION: A Hugo shortcode template that appears to use a 'piratify' function to transform or include content from other Markdown files. The file includes Hugo front matter with a title and description.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/include.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ndescrption = \"Displays content from other Marrrkdown files\"\ntitle = \"Include\"\n+++\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Tip Style Notice Implementation\nDESCRIPTION: Shows how to implement a notice with the tip style, which typically displays with a tip-specific icon and styling.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"tip\" */%}}\nA **tip** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Setting Theme Configuration in Hugo\nDESCRIPTION: Hugo configuration snippet for specifying the Relearn theme in the hugo.toml file.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ntheme = \"hugo-theme-relearn\"\n```\n\n----------------------------------------\n\nTITLE: Multilingual Menu Configuration in TOML\nDESCRIPTION: Comprehensive example of configuring menu shortcuts for multiple languages (English and Pirate) in Hugo, including language-specific settings and menu items.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/menushortcuts.en.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[languages]\n  [languages.en]\n    title = \"Hugo Relearn Theme\"\n    weight = 1\n    languageName = \"English\"\n    [languages.en.params]\n      landingPageName = \"<i class='fa-fw fas fa-home'></i> Home\"\n\n  [[languages.en.menu.shortcuts]]\n    name = \"<i class='fa-fw fab fa-github'></i> GitHub repo\"\n    identifier = \"ds\"\n    url = \"https://github.com/McShelby/hugo-theme-relearn\"\n    weight = 10\n\n  [[languages.en.menu.shortcuts]]\n    name = \"<i class='fa-fw fas fa-camera'></i> Showcases\"\n    pageRef = \"showcase/\"\n    weight = 11\n\n  [[languages.en.menu.shortcuts]]\n    name = \"<i class='fa-fw fas fa-bookmark'></i> Hugo Documentation\"\n    identifier = \"hugodoc\"\n    url = \"https://gohugo.io/\"\n    weight = 20\n\n  [[languages.en.menu.shortcuts]]\n    name = \"<i class='fa-fw fas fa-bullhorn'></i> Credits\"\n    pageRef = \"more/credits/\"\n    weight = 30\n\n  [[languages.en.menu.shortcuts]]\n    name = \"<i class='fa-fw fas fa-tags'></i> Tags\"\n    pageRef = \"tags/\"\n    weight = 40\n```\n\n----------------------------------------\n\nTITLE: Implementing Hugo Children Shortcode\nDESCRIPTION: Hugo shortcode that renders child pages with specific styling parameters. Configures container style as 'div', heading style as 'h2', and enables descriptions.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/more/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{%children containerstyle=\"div\" style=\"h2\" description=\"true\" %}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Tab Group with Different Group ID\nDESCRIPTION: An example showing how to create a tab view with a different group ID that doesn't synchronize with other groups.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n{{</* tabs groupid=\"b\" */>}}\n{{%/* tab title=\"json\" */%}}\n{{</* highlight json \"linenos=true\" */>}}\n{ \"Hello\": \"World\" }\n{{</* /highlight */>}}\n{{%/* /tab */%}}\n{{%/* tab title=\"XML stuff\" */%}}\n```xml\n<Hello>World</Hello>\n```\n{{%/* /tab */%}}\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Initially Expanded Shortcode Example in Hugo\nDESCRIPTION: Shows how to create an initially expanded section using the open parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/expand.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{%/* expand title=\"Expand me...\" open=\"true\" */%}}No need to press you!{{%/* /expand */%}}\n```\n\n----------------------------------------\n\nTITLE: Home Page Template Structure\nDESCRIPTION: Default template structure for a home page in Hugo\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"home\"\ntitle = \"{{ replace .Name \"-\" \" \" | title }}\"\n+++\n\nLorem Ipsum.\n```\n\n----------------------------------------\n\nTITLE: Warning Notice without Title and Icon\nDESCRIPTION: Shows how to remove the title and icon from a warning-style notice by setting them to space characters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"warning\" title=\" \" icon=\" \" */%}}\nA **warning** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Using the Piratify Shortcode in Hugo Templates\nDESCRIPTION: Hugo shortcode implementation that calls the 'piratify' function, which appears to be a custom shortcode for applying pirate-themed effects or transformations to content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional Content Languages for Mixed-Language Search in Hugo\nDESCRIPTION: TOML configuration to enable search functionality for mixed-language content. This setting allows the search to index content in additional languages beyond the page's primary language.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/i18n/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: TOML\nCODE:\n```\n[params]\n  additionalContentLanguage = [ \"en\" ]\n```\n\n----------------------------------------\n\nTITLE: Using openapi Shortcode in Hugo\nDESCRIPTION: Example of how to use the openapi shortcode to display OpenAPI specifications. This snippet demonstrates the shortcode syntax for referencing external API documentation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/openapi/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{</* openapi src=\"https://petstore3.openapi.io/api/v3/openapi.json\" */>}}\n```\n\n----------------------------------------\n\nTITLE: Area Button Implementation Template\nDESCRIPTION: Basic HTML template pattern for area overlay buttons found in layouts/partials/topbar/func/area-button.html. Used as foundation for implementing buttons with area overlays like the more button.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/topbar/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\nlayouts/partials/topbar/func/area-button.html\n```\n\n----------------------------------------\n\nTITLE: Implementing Tab Group Example with Group ID\nDESCRIPTION: Shows how to implement tabs with group IDs for synchronized tab selection across multiple tab views.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n{{</* tabs groupid=\"a\" */>}}\n{{%/* tab title=\"json\" */%}}\n{{</* highlight json \"linenos=true\" */>}}\n{ \"Hello\": \"World\" }\n{{</* /highlight */>}}\n{{%/* /tab */%}}\n{{%/* tab title=\"_**XML**_ stuff\" */%}}\n```xml\n<Hello>World</Hello>\n```\n{{%/* /tab */%}}\n{{%/* tab title=\"text\" */%}}\n    Hello World\n{{%/* /tab */%}}\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Second Tab Group with Same Group ID\nDESCRIPTION: An example showing how to create a second tab view that synchronizes with the first one using the same group ID.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{</* tabs groupid=\"a\" */>}}\n{{%/* tab title=\"json\" */%}}\n{{</* highlight json \"linenos=true\" */>}}\n{ \"Hello\": \"World\" }\n{{</* /highlight */>}}\n{{%/* /tab */%}}\n{{%/* tab title=\"XML stuff\" */%}}\n```xml\n<Hello>World</Hello>\n```\n{{%/* /tab */%}}\n{{</* /tabs */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Hugo Project with CLI\nDESCRIPTION: A shell command for initializing a new Hugo website project using the built-in 'new site' command.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/pages/index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhugo new site <new_project>\n```\n\n----------------------------------------\n\nTITLE: Grey Color Notice with Icon\nDESCRIPTION: Example of a notice with the grey color style and a custom icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"grey\" icon=\"bug\" */%}}\nA **grey** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Flowchart with YAML Title in Mermaid\nDESCRIPTION: A Mermaid flowchart example with a YAML title block. Demonstrates a decision tree with various node styles and link text, showing different edge shapes and formatting possibilities.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\n---\ntitle: Example Diagram\n---\ngraph LR;\n    A[Hard edge] -->|Link text| B(Round edge)\n    B --> C{<strong>Decision</strong>}\n    C -->|One| D[Result one]\n    C -->|Two| E[Result two]\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Configuration Example for Author Settings\nDESCRIPTION: Example of the updated author configuration syntax in hugo.toml that adheres to Hugo standards. Shows the change from the previous flat structure to the newer nested structure.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  author = \"Hugo\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  author.name = \"Hugo\"\n```\n\n----------------------------------------\n\nTITLE: Creating a JavaScript Action Button in Hugo\nDESCRIPTION: Example showing how to create a button that executes JavaScript code when clicked, including the this.blur() call to unselect the button after action.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_16\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button style=\"primary\" icon=\"bullhorn\" href=\"javascript:alert('Hello world!');this.blur();\" %}}Shout it out{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: XML Example for Tab Content\nDESCRIPTION: An XML snippet that represents a simple Hello World element, used as content in a tab example.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<Hello>World</Hello>\n```\n\n----------------------------------------\n\nTITLE: Displaying Hello World in C using Tabs\nDESCRIPTION: A C code snippet that prints 'Hello World!' to the console, shown as part of a tabs example.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_2\n\nLANGUAGE: c\nCODE:\n```\nprintf(\"Hello World!\");\n```\n\n----------------------------------------\n\nTITLE: Creating a Home Page with Hugo\nDESCRIPTION: Command to generate a home page using a specific archetype template.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nhugo new --kind home _index.md\n```\n\n----------------------------------------\n\nTITLE: Basic Include Example in Hugo\nDESCRIPTION: Simple example showing basic usage of the include shortcode with a file path.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/include.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* include \"shortcodes/INCLUDE_ME.md\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Piratify Shortcode in Hugo Template\nDESCRIPTION: Hugo shortcode implementation that likely transforms content into a pirate-themed style or language. The shortcode named 'piratify' is used to wrap content for transformation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Advanced Theme Variant Configuration in Hugo TOML\nDESCRIPTION: Advanced configuration using tables with suboptions for theme variants.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  [[params.themeVariant]]\n    identifier = \"relearn-light\"\n  [[params.themeVariant]]\n    identifier = \"relearn-dark\"\n```\n\n----------------------------------------\n\nTITLE: Rendering Quadrant Chart with Mermaid in Go\nDESCRIPTION: This snippet demonstrates how to create a quadrant chart using Mermaid syntax within a Go template. The chart shows the reach and engagement of various campaigns.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\npie title Pets adopted by volunteers\n    title Reach and engagement of campaigns\n    x-axis Low Reach --> High Reach\n    y-axis Low Engagement --> High Engagement\n    quadrant-1 We should expand\n    quadrant-2 Need to promote\n    quadrant-3 Re-evaluate\n    quadrant-4 May be improved\n    Campaign A: [0.3, 0.6]\n    Campaign B: [0.45, 0.23]\n    Campaign C: [0.57, 0.69]\n    Campaign D: [0.78, 0.34]\n    Campaign E: [0.40, 0.34]\n    Campaign F: [0.35, 0.78]\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo to Allow HTML in Markdown\nDESCRIPTION: TOML configuration to enable unsafe rendering in Hugo's Goldmark renderer, which allows using native HTML elements in Markdown content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.renderer]\n    unsafe = true\n```\n\n----------------------------------------\n\nTITLE: Implementing Severity-Style Buttons in Hugo\nDESCRIPTION: Examples of creating buttons with different severity styles (info, note, tip, warning) to convey different levels of importance.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" style=\"info\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"note\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"tip\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"warning\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Tab Shortcode Implementation in Go\nDESCRIPTION: Example of using the tab shortcode with named parameters in Hugo templates to create a tab with C code.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tab.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* tab title=\"c\" */%}}\n```c\nprintf(\"Hello World!\");\n```\n{{%/* /tab */%}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Chapter Page with Hugo\nDESCRIPTION: Command to generate a new chapter page using the chapter archetype.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nhugo new --kind chapter basics/_index.md\n```\n\n----------------------------------------\n\nTITLE: Creating Links with Tooltips in Markdown\nDESCRIPTION: Shows how to add tooltip text to links that appears when hovering over the link. This is achieved by adding quoted text after the URL in the link definition.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n[Upstage](https://github.com/upstage/ \"Visit Upstage!\")\n```\n\n----------------------------------------\n\nTITLE: Displaying Python Code in a Tab\nDESCRIPTION: Example of using the tab shortcode to display Python code with explicit language flagging.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tab.en.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nprintf(\"Hello World!\");\n```\n\n----------------------------------------\n\nTITLE: Using Icon Shortcode with Named Parameters in Hugo\nDESCRIPTION: Demonstrates how to use the icon shortcode with named parameters to display Font Awesome icons in Hugo.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/icon.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* icon icon=\"exclamation-triangle\" */%}}\n{{%/* icon icon=\"angle-double-up\" */%}}\n{{%/* icon icon=\"skull-crossbones\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Auto Theme Variants in Hugo TOML\nDESCRIPTION: Explicit configuration of light and dark mode variants for auto theme switching.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  themeVariantAuto = [ \"learn\", \"neon\" ]\n```\n\n----------------------------------------\n\nTITLE: Setting Target Window for Button Links in Hugo\nDESCRIPTION: Examples showing how to control the target window for button links using the target parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" target=\"_self\" %}}Get Hugo in same window{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" %}}Get Hugo in new Window/Frame (default){{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Brand Color Buttons in Hugo\nDESCRIPTION: Examples of creating buttons with brand color styles (primary, secondary, accent) for consistent design language.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" style=\"primary\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"secondary\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"accent\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Basic Children Shortcode Example in Hugo\nDESCRIPTION: Default usage of the 'children' shortcode without any parameters to list direct child pages.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{%/* children  */%}}\n```\n\n----------------------------------------\n\nTITLE: Basic Mermaid Graph Example with Shortcode\nDESCRIPTION: A simple example demonstrating how to create a basic flowchart using the Mermaid shortcode. This shows the relationship between 'If', 'Then', and 'Else' nodes.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{< mermaid align=\"center\">}}\ngraph LR;\n    If --> Then\n    Then --> Else\n{{< /mermaid >}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning Badge in Hugo Markdown\nDESCRIPTION: This snippet illustrates the use of a Hugo shortcode to display a 'Breaking' change warning badge in the documentation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n{{% badge style=\"warning\" title=\" \" %}}Breaking{{% /badge %}}\n```\n\n----------------------------------------\n\nTITLE: Rendering Mermaid Graph for Color Visualization in HTML\nDESCRIPTION: This snippet creates a div element with Mermaid graph initialization for visualizing color relationships. It uses custom styling and JavaScript to make the graph interactive.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/generator/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"R-vargenerator\" class=\"mermaid zoomable\" style=\"background-color: var(--INTERNAL-MAIN-TEXT-color);\">Graph</div>\n```\n\n----------------------------------------\n\nTITLE: Including Content with Positional Parameters in Hugo\nDESCRIPTION: Shows how to use the include shortcode with positional parameters to include external files.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/include.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* include \"shortcodes/INCLUDE_ME.md\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Generating XY Chart with Mermaid in Go\nDESCRIPTION: This snippet shows how to create an XY chart using Mermaid syntax within a Go template. It displays sales revenue data over a year using both bar and line representations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_21\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\nxychart-beta\n    title \"Sales Revenue\"\n    x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]\n    y-axis \"Revenue (in $)\" 4000 --> 11000\n    bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]\n    line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Button Shortcode Implementation with Shortcode Parameters\nDESCRIPTION: Shows how to implement the button shortcode using named parameters to create a customized button.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"warning\" icon=\"dragon\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Color-Named Buttons in Hugo\nDESCRIPTION: Examples of creating buttons with specific color names (blue, green, grey, orange, red) for visual variety.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" style=\"blue\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"green\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"grey\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"orange\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"red\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Displaying editURL Site Parameter in Hugo Content\nDESCRIPTION: Example of using the siteparam shortcode to display the value of the editURL parameter defined in hugo.toml.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n`editURL` value: {{%/* siteparam name=\"editURL\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Mermaid with Shortcode Syntax\nDESCRIPTION: Example of using Mermaid with Hugo shortcode syntax, specifying alignment and zoom parameters. Creates a simple flowchart showing relationships.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid align=\"center\" zoom=\"true\" */>}}\ngraph LR;\n    If --> Then\n    Then --> Else\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Image in Markdown\nDESCRIPTION: This code snippet shows how to embed an image in Markdown, specifically displaying the Relearn theme's hero image from GitHub.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n![Image of the Relearn theme in light and dark mode on phone, tablet and desktop](https://github.com/McShelby/hugo-theme-relearn/raw/main/images/hero.png)\n```\n\n----------------------------------------\n\nTITLE: Attachments Partial Implementation in Hugo\nDESCRIPTION: Example of using the attachments functionality as a partial template with parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/attachments/index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/attachments.html\" (dict\n  \"page\" .\n  \"sort\" \"asc\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Overriding Image Effects in Page Frontmatter\nDESCRIPTION: Example of how to override default image effects in a page's frontmatter. This enables the border effect for all images on the page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.en.md#2025-04-21_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[imageEffects]\n  border = true\n```\n\n----------------------------------------\n\nTITLE: Custom Styled Attachments with Brand Icon\nDESCRIPTION: Attachments shortcode with custom color and Font Awesome brand icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/attachments/index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{%/* attachments color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with Left-Positioned Icon in Hugo\nDESCRIPTION: Example showing how to create a button with an icon positioned to the left of the text (default position).\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" icon=\"download\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Rendering Mathematical Formula with MathJax in Hugo (Shortcode Syntax)\nDESCRIPTION: Example of using shortcode syntax to render a mathematical formula with center alignment in Hugo using MathJax.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/math.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{</* math align=\"center\" */>}}\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\n{{</* /math */>}}\n```\n\n----------------------------------------\n\nTITLE: Class Diagram Using Codefence Syntax\nDESCRIPTION: A Mermaid class diagram showing inheritance relationships between Animal, Duck, Fish, and Zebra classes. Demonstrates class properties, methods, and inheritance hierarchy using codefence syntax.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n```mermaid\nclassDiagram\n    Animal <|-- Duck\n    Animal <|-- Fish\n    Animal <|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n      +String beakColor\n      +swim()\n      +quack()\n    }\n    class Fish{\n      -int sizeInFeet\n      -canEat()\n    }\n    class Zebra{\n      +bool is_wild\n      +run()\n    }\n```\n```\n\n----------------------------------------\n\nTITLE: Badge Partial Template Implementation in Go\nDESCRIPTION: Examples of implementing badges using partial templates with dictionary parameters for advanced customization.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/badge.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/badge.html\" (dict\n    \"page\"    .\n    \"content\" \"Important\"\n)}}\n{{ partial \"shortcodes/badge.html\" (dict\n  \"page\"  .\n  \"style\" \"primary\"\n  \"title\" \"Version\"\n  \"content\" \"6.6.6\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Notice Implementation Using Hugo Partial\nDESCRIPTION: Shows how to use the notice functionality as a Hugo partial instead of a shortcode, using a dictionary to pass parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/notice.html\" (dict\n  \"page\"  .\n  \"style\" \"primary\"\n  \"title\" \"There may be pirates\"\n  \"icon\" \"skull-crossbones\"\n  \"content\" \"It is all about the boxes.\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Warning Style Notice Implementation\nDESCRIPTION: Shows how to implement a notice with the warning style, which typically displays with a warning-specific icon and styling.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"warning\" */%}}\nA **warning** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: User Journey Diagram\nDESCRIPTION: A Mermaid user journey diagram showing a typical working day. Divided into sections for going to work and returning home, with ratings for each activity and participants indicated.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_11\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\njourney\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 3: Me\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Basic Attachments Shortcode Usage in Hugo\nDESCRIPTION: Simple example of using the attachments shortcode with ascending sort order.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/attachments/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* attachments sort=\"asc\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Severity Button with All Defaults in Hugo\nDESCRIPTION: Example showing a button with a severity style that uses all default values for icons and text.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_14\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" style=\"tip\" %}}{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Generating Git Graph with Mermaid in Go\nDESCRIPTION: This snippet demonstrates how to create a Git graph using Mermaid syntax within a Go template. It shows a simple branching and merging scenario.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_16\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\ngitGraph\n    commit\n    commit\n    branch develop\n    checkout develop\n    commit\n    commit\n    checkout main\n    merge develop\n    commit\n    commit\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Entity Relationship Model with Custom Theme\nDESCRIPTION: A Mermaid entity relationship diagram using the 'forest' theme. Shows relationships between customers, orders, products, and related entities with various cardinality notations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\n%%{init:{\"theme\":\"forest\"}}%%\nerDiagram\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : has\n    CUSTOMER ||--o{ ORDER : places\n    CUSTOMER ||--o{ INVOICE : \"liable for\"\n    DELIVERY-ADDRESS ||--o{ ORDER : receives\n    INVOICE ||--|{ ORDER : covers\n    ORDER ||--|{ ORDER-ITEM : includes\n    PRODUCT-CATEGORY ||--|{ PRODUCT : contains\n    PRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for MetalLB Documentation\nDESCRIPTION: This snippet defines the front matter section of a Hugo documentation page for the MetalLB project. It sets the page title by replacing hyphens with spaces in the file name and applying title case formatting.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/archetypes/default.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n+++\ntitle = \"{{ replace .Name \"-\" \" \" | title }}\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Front Matter for MetalLB Markdown Rules Documentation\nDESCRIPTION: This code snippet defines the Hugo front matter for a documentation page about Markdown rules. It includes content tags, sets the page title to 'Marrrkdown rules', assigns a weight of 4 for page ordering, and includes a piratify shortcode that likely transforms content into pirate speech.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ntags = [\"Content\"]\ntitle = \"Marrrkdown rules\"\nweight = 4\n+++\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Default Notice with Positional Parameters\nDESCRIPTION: Example of using the default style notice with positional parameters for title and icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_17\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice default \"Pay Attention to this Note!\" \"skull-crossbones\" */%}}\nSome serious information.\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Color-Based Badge Examples in Go\nDESCRIPTION: Examples showing badge implementation with different color styles and brand colors.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/badge.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* badge style=\"blue\" icon=\"palette\" title=\"Color\" %}}Blue{{% /badge */%}}\n{{%/* badge style=\"green\" icon=\"palette\" title=\"Color\" %}}Green{{% /badge */%}}\n{{%/* badge style=\"grey\" icon=\"palette\" title=\"Color\" %}}Grey{{% /badge */%}}\n```\n\n----------------------------------------\n\nTITLE: Creating an Internal Link Button in Hugo\nDESCRIPTION: Example showing how to create a button that links to an internal page within the Hugo site.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"/index.html\" %}}Home{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Constructing C4 Diagram with Mermaid in Go\nDESCRIPTION: This snippet shows how to create a complex C4 diagram using Mermaid syntax within a Go template. It illustrates a system context diagram for an Internet Banking System with various components and relationships.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_17\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\nC4Context\n    title System Context diagram for Internet Banking System\n    Enterprise_Boundary(b0, \"BankBoundary0\") {\n    Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\")\n    Person(customerB, \"Banking Customer B\")\n    Person_Ext(customerC, \"Banking Customer C\", \"desc\")\n\n    Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\")\n\n    System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n\n    Enterprise_Boundary(b1, \"BankBoundary\") {\n\n        SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n\n        System_Boundary(b2, \"BankBoundary2\") {\n        System(SystemA, \"Banking System A\")\n        System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\")\n        }\n\n        System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n        SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\")\n\n        Boundary(b3, \"BankBoundary3\", \"boundary\") {\n        SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\")\n        SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\")\n        }\n    }\n    }\n\n    BiRel(customerA, SystemAA, \"Uses\")\n    BiRel(SystemAA, SystemE, \"Uses\")\n    Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\")\n    Rel(SystemC, customerA, \"Sends e-mails to\")\n\n    UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\")\n    UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\")\n    UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\")\n    UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\")\n    UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\")\n\n    UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Pie Chart with Zoom Disabled\nDESCRIPTION: A Mermaid pie chart showing pets adopted by volunteers, with zoom functionality explicitly disabled. Shows distribution between dogs, cats, and rats with their respective quantities.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid zoom=\"false\" */>}}\npie title Pets adopted by volunteers\n    \"Dogs\" : 386\n    \"Cats\" : 85\n    \"Rats\" : 15\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Front Matter in TOML for MetalLB Home Page\nDESCRIPTION: This snippet uses TOML syntax to define the front matter for a Hugo home page. It sets the archetype to 'home' and creates a dynamic title that transforms the page name by replacing hyphens with spaces and applying title case formatting.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/archetypes/home.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"home\"\ntitle = \"{{ replace .Name \"-\" \" \" | title }}\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Cleaning up leader election resources in Kubernetes after upgrading to MetalLB 0.7.0\nDESCRIPTION: Commands to delete Kubernetes resources associated with leader election that are no longer needed after upgrading to MetalLB 0.7.0. This cleanup removes endpoints, rolebinding, and role resources in the metallb-system namespace.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/release-notes/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -nmetallb-system endpoints metallb-speaker\nkubectl delete -nmetallb-system rolebinding leader-election\nkubectl delete -nmetallb-system role leader-election\n```\n\n----------------------------------------\n\nTITLE: Using siteparam Shortcode with Positional Parameter in Hugo\nDESCRIPTION: Example of using the siteparam shortcode with a positional parameter instead of a named parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* siteparam \"editURL\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Hugo Shortcodes for MetalLB Changelog\nDESCRIPTION: This snippet defines custom Hugo shortcodes used throughout the changelog to format version numbers, change types, and other metadata. It includes shortcodes for minimum Hugo version, breaking changes, general changes, and new features.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% badge color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" title=\" \" %}}0.121.0{{% /badge %}}\n\n{{% badge style=\"warning\" title=\" \" %}}Breaking{{% /badge %}}\n\n{{% badge style=\"note\" title=\" \" %}}Change{{% /badge %}}\n\n{{% badge style=\"info\" icon=\"plus-circle\" title=\" \" %}}New{{% /badge %}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Child Pages with Hugo Shortcode\nDESCRIPTION: Uses Hugo's children shortcode to display all child pages of the current page, including hidden ones. This is a common pattern in documentation sites to show hierarchical content structure.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-3/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{% children showhidden=\"true\" %}}\n```\n\n----------------------------------------\n\nTITLE: Basic Badge Shortcode Usage in Go Templates\nDESCRIPTION: Examples of basic badge shortcode usage with different parameters like style, title, and icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/badge.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* badge %}}Important{{% /badge */%}}\n{{%/* badge style=\"primary\" title=\"Version\" %}}6.6.6{{% /badge */%}}\n{{%/* badge style=\"red\" icon=\"angle-double-up\" %}}Captain{{% /badge */%}}\n{{%/* badge style=\"info\" %}}New{{% /badge */%}}\n{{%/* badge color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" %}}Awesome{{% /badge */%}}\n```\n\n----------------------------------------\n\nTITLE: Resources with Info Style and Descending Order\nDESCRIPTION: Example of using the resources shortcode with info styling and descending sort order.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/resources/index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* resources style=\"info\" sort=\"desc\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Adding Subscript and Superscript with HTML in Markdown\nDESCRIPTION: Shows how to create subscript and superscript text using HTML's sub and sup elements for formatting scientific notation or mathematical expressions.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\nHow many liters H<sub>2</sub>O fit into 1dm<sup>3</sup>?\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for MetalLB What's New Page\nDESCRIPTION: Sets up the TOML front matter configuration for a Hugo documentation page. Configures the page title, weight for ordering, and table of contents settings.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndisableToc = false\ntitle = \"What's New\"\nweight = 2\n+++\n```\n\n----------------------------------------\n\nTITLE: VRF Network Topology Diagram\nDESCRIPTION: ASCII diagram showing the VRF network topology including node configuration and container connectivity\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n                                                                                           ┌─────────────────────┐\n                                                                                           │                     │\n                                                                                           │                     │\n                                                                                        ┌──┤  ibgp-vrf-multi-hop │\n                                           ┌──────────────────────┐                     │  │                     │\n                                           │                      │                     │  │                     │\n                                           │                      │                     │  └─────────────────────┘\n┌───────────────────────┐               ┌──┤  ebgp-vrf-single-hop ├─────────────────────┤\n│                       │               │  │                      │                     │  ┌─────────────────────┐\n│                       │               │  │                      │   vrf-multihop-net  │  │                     │\n│   ┌─────────┐         │               │  └──────────────────────┘                     │  │                     │\n│   │         │  ┌──────┤               │                                               └──┤  ebgp-vrf-multi-hop │\n│   │ Speaker │  │      │               │                                                  │                     │\n│   │         │  │   ───┼───────────────┤                                                  │                     │\n│   └─────────┘  │   VRF│  vrf-net      │  ┌──────────────────────┐                        └─────────────────────┘\n│                │      │               │  │                      │\n│                └──────┤               │  │                      │\n│                       │               └──┤  ibgp-vrf-single-hop │\n│                  Node │                  │                      │\n│                       │                  │                      │\n└───────────────────────┘                  └──────────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Using Resources Shortcode\nDESCRIPTION: Basic usage of the resources shortcode to display page bundle resource titles.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/resources/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* resources sort=\"asc\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for Custom Theming\nDESCRIPTION: Front matter configuration in TOML format for a Hugo website page. It assigns the page to 'custom' and 'theming' categories, sets the title to 'Brrrand'n', and defines a weight of 24 for content ordering in the site structure.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ncategories = [\"custom\", \"theming\"]\ntitle = \"Brrrand'n\"\nweight = 24\n+++\n```\n\n----------------------------------------\n\nTITLE: Green Color Notice with Title\nDESCRIPTION: Example of a notice with the green color style and a custom title.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"green\" title=\"Green\" */%}}\nA **green** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Writing Paragraphs in Markdown\nDESCRIPTION: Demonstrates how to create paragraph blocks in Markdown. Paragraphs are separated by empty lines and form the basic text structure.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus.\n\nEt legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\n```\n\n----------------------------------------\n\nTITLE: Inline Code Formatting in Markdown\nDESCRIPTION: Shows how to format inline code snippets by wrapping them with backticks. This is useful for displaying code within regular text.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\nIn this example, `<div></div>` is marked as code.\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter in Markdown for MetalLB Contributing Page\nDESCRIPTION: This code snippet defines the front matter section for a Markdown document about contributing to MetalLB. It sets the page description and title using TOML-style syntax within +++ delimiters, and includes a template directive.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/dev/contributing/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ndescription = \"What to know if you want to contribute\"\ntitle = \"Contributing\"\n+++\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for CNCF Sandbox Proposal\nDESCRIPTION: Structured markdown document containing the complete proposal for MetalLB's transition to CNCF Sandbox, including motivations, goals, work items, and alternatives.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/cncf-sandbox-proposal.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Community Future - Proposal to Move to the CNCF Sandbox\n\n## Summary\n\nMetalLB was originally written by Dave Anderson and was later transitioned to a\nteam of [maintainers](https://metallb.universe.tf/community/maintainers/) that\ncurrently maintain the project. The maintainers come from different companies\nand desire a neutral home that can own assets of the project, such as the\ndomain names.\n\nThis proposal is for MetalLB to apply to become a [CNCF Sandbox\nProject](https://www.cncf.io/sandbox-projects/).\n\n## Motivation\n\nWhile Dave Anderson is no longer actively involved with the project, he still\nowns the MetalLB domain names. When discussing what to do with them,\ntransferring them to an individual or the employer of one or more of the\nmaintainers doesn't seem like an ideal solution. An alternative which is\nbecoming increasingly common in the open source ecosystem is to use an open\nsource foundation as a neutral home for those assets.\n\nThe CNCF seems like the most natural foundation home for MetalLB given its\ncoupling to the Kubernetes project, which is also part of the CNCF.\n\n### Goals\n\n- Align with other CNCF ecosystem projects in terms of policies and processes.\n- Transfer assets to a neutral third party (i.e. domains).\n- Gain more visibility in the CNCF ecosystem to attract others who may be\n  interested in contributing to MetalLB development and maintenance.\n\n### Non-Goals\n\n- No changes to the MetalLB code are in scope of this proposal. This\n  proposal is only about the community future.\n- No changes to committer processes are proposed here. We already have a\n  documented [process for adding and removing\n  maintainers](https://metallb.universe.tf/community/maintainers/).\n\n## Proposal\n\nApply to become a [CNCF Sandbox\nproject](https://www.cncf.io/sandbox-projects/).\n\nThe [Goals](#goals) section discusses some of the immediate changes we should\nexpect, but some of the other services provided by the CNCF may be very\nbeneficial to MetalLB in the future. The CNCF web site does a nice job\ndiscussing what services they offer projects on the\n[Services for CNCF Projects](https://www.cncf.io/services-for-projects/) page.\n\n## Design Details\n\n### Work Items\n\n- (russellb) Write this proposal.\n- (everyone) Provide feedback on initial proposal, reach consensus.\n- (russellb) If approved, apply through the [proposal form](https://docs.google.com/forms/d/1bJhG1MuM981uQXcnBMv4Mj9yfV5_q5Kwk3qhBCLa_5A/viewform).\n- (danderson) If accepted, transfer project assets as appropriate to CNCF. This\n  includes transferring domains to CNCF, and likely MetalLB trademark\n  assignment to the CNCF. See the CNCF [IP\n  Policy](https://github.com/cncf/foundation/blob/master/charter.md#11-ip-policy).\n- (russellb) Work with CNCF on any other CNCF onboarding tasks required, such\n  as adding CNCF info to the web site footer.\n\n## Alternatives\n\n### Don't Apply to the CNCF Sandbox\n\nThis alternative is mostly the status quo, except we would need to decide which\nindividual or maintainer Dave should transfer domains to.\n```\n\n----------------------------------------\n\nTITLE: Using Icon Shortcode in Standard Content\nDESCRIPTION: Example of how to integrate the icon shortcode within regular text content in Hugo.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/icon.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nBuilt with {{%/* icon heart */%}} by Relearn and Hugo\n```\n\n----------------------------------------\n\nTITLE: Children Shortcode with Description Parameter in Hugo\nDESCRIPTION: Using the 'children' shortcode with description parameter set to true to display short text descriptions below each child page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* children description=\"true\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hugo Version Badge in Markdown\nDESCRIPTION: This snippet shows how to use a Hugo shortcode to display a version badge with custom styling.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n{{% badge color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" title=\" \" %}}0.93.0{{% /badge %}}\n```\n\n----------------------------------------\n\nTITLE: Resources with Custom Title and File Pattern\nDESCRIPTION: Example of using the resources shortcode with a custom title and file pattern to filter specific image file types.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/resources/index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{%/* resources title=\"Related **files**\" pattern=\".*\\.(png|jpg|gif)\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Marking Text with HTML in Markdown\nDESCRIPTION: Demonstrates how to highlight text in the document's accent color using HTML's mark tag, which requires HTML rendering to be enabled in Hugo configuration.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<mark>Parts</mark> of this text <mark>are marked!</mark>\n```\n\n----------------------------------------\n\nTITLE: Inserting Basic Images in Markdown\nDESCRIPTION: Demonstrates the basic syntax for inserting images in Markdown, which includes an exclamation mark followed by square brackets for alt text and parentheses for the image URL.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_25\n\nLANGUAGE: markdown\nCODE:\n```\n![Spock](https://octodex.github.com/images/spocktocat.png)\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Page Frontmatter for MetalLB Image Effects Documentation\nDESCRIPTION: TOML frontmatter configuration for a Hugo page that defines the title 'Image Effects' and assigns it a weight of 5 in the navigation order.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ntitle = \"Image Effects\"\nweight = 5\n+++\n```\n\n----------------------------------------\n\nTITLE: Diagram: Network Flow Without VRF\nDESCRIPTION: ASCII diagram showing the network traffic flow between a client, DCGW (Data Center Gateway), and a node without using VRF. This illustrates the standard routing scenario that can lead to asymmetric routing issues.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/vrf-announcement.md#2025-04-21_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n             ▲\n             │\n             │\n        ┌────┴────┐\n        │ eth0    │\n        │         │\n┌───────┴─────────┴───────────┐\n│                             │               ┌──────────────┐\n│                             │               │              │\n│                             ├────────┐      │              │\n│                             │        │      │              │\n│                             │ eth1   │◄─────┤     DCGW     │◄───────  Client\n│                             │        │      │              │\n│                             ├────────┘      │              │\n│                             │               │              │\n│                      Node   │               └──────────────┘\n│                             │\n└─────────────────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Configuring a Pirate-themed Hugo Home Page\nDESCRIPTION: A Hugo configuration front matter block that sets up a home page with pirate theming. It defines the archetype as 'home', sets the page title, and uses the piratify shortcode to apply pirate styling to the content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n+++\narchetype = \"home\"\ntitle = \"Cap'n Hugo Relearrrn Theme\"\n+++\n{{< piratify true >}}\n```\n\n----------------------------------------\n\nTITLE: Using Resources via Partial\nDESCRIPTION: Alternative implementation calling the resources functionality from a Hugo partial.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/resources/index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/resources.html\" (dict\n  \"page\" .\n  \"sort\" \"asc\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Resources with Custom Color and Icon\nDESCRIPTION: Example of using the resources shortcode with a custom color and Font Awesome brand icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/resources/index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{%/* resources color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" /*/%}}\n```\n\n----------------------------------------\n\nTITLE: Using Text Substitution with SmartyPants in Markdown\nDESCRIPTION: Shows how SmartyPants extension automatically converts certain character combinations into typographic entities for better formatting.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nDouble quotes `\"` and single quotes `'` of enclosed text are replaced by **\"double curly quotes\"** and **'single curly quotes'**.\n\nDouble dashes `--` and triple dashes `---` are replaced by en-dash **--** and em-dash **---** entities.\n\nDouble arrows pointing left `<<` or right `>>` are replaced by arrow **<<** and **>>** entities.\n\nThree consecutive dots `...` are replaced by an ellipsis **...** entity.\n```\n\n----------------------------------------\n\nTITLE: Using Image References in Markdown\nDESCRIPTION: Illustrates how to use reference-style links for images in Markdown, allowing for easier reuse of images throughout a document.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_27\n\nLANGUAGE: markdown\nCODE:\n```\n![La Forge][laforge]\n\n[laforge]: https://octodex.github.com/images/trekkie.jpg \"Geordi La Forge\"\n```\n\n----------------------------------------\n\nTITLE: Setting Hugo Build Configuration Parameters\nDESCRIPTION: Front matter configuration block that disables rendering, listing and resource publishing for a Hugo content file. Also includes a custom shortcode 'piratify'.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/more/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\n[_build]\n  render = \"never\"\n  list = \"never\"\n  publishResources = false\n+++\n```\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Displaying MetalLB Version Badges in Markdown\nDESCRIPTION: Markdown code showing version and application type badges for the MetalLB Helm chart using shield.io.\nSOURCE: https://github.com/metallb/metallb/blob/main/charts/metallb/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Version: 0.0.0](https://img.shields.io/badge/Version-0.0.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: v0.0.0](https://img.shields.io/badge/AppVersion-v0.0.0-informational?style=flat-square)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Archetype Page\nDESCRIPTION: Command to create a new page using a custom archetype\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nhugo new --kind <kind> <name>/_index.md\n```\n\n----------------------------------------\n\nTITLE: Using the Children Shortcode in Hugo with Relearn Theme\nDESCRIPTION: This shortcode displays child pages with specific container styling, heading level, and descriptions enabled. It's used to create an automatic table of contents or section listing.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{%children containerstyle=\"div\" style=\"h2\" description=\"true\" %}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Hello World in Python using Tabs\nDESCRIPTION: A simple Python snippet that prints 'Hello World!' to the console, shown as part of a tabs example.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nprint(\"Hello World!\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo for Unsafe HTML Rendering in Markdown\nDESCRIPTION: Configuration snippet for enabling unsafe HTML rendering in Hugo's Goldmark renderer, which is necessary for formatted parameters containing HTML.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n[markup.goldmark.renderer]\n  unsafe = true\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Tables in GitHub Flavored Markdown\nDESCRIPTION: Demonstrates how to create tables using pipes as column dividers and dashes to separate the header row. Pipes do not need to be vertically aligned for the table to render correctly.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n| Option | Description |\n|--------|-------------|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n```\n\n----------------------------------------\n\nTITLE: Applying CSS Classes to Images in Markdown\nDESCRIPTION: Shows how to apply CSS classes to images in Markdown using URL parameters, including examples for shadow, border, alignment, and inline styling.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_29\n\nLANGUAGE: markdown\nCODE:\n```\n![Spidertocat](https://octodex.github.com/images/spidertocat.png?classes=shadow)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![DrOctocat](https://octodex.github.com/images/droctocat.png?classes=border)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![Supertocat](https://octodex.github.com/images/okal-eltocat.jpg?classes=left)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![Riddlocat](https://octodex.github.com/images/riddlocat.jpg?classes=right)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![Spidertocat](https://octodex.github.com/images/spidertocat.png?classes=inline)\n![DrOctocat](https://octodex.github.com/images/droctocat.png?classes=inline)\n![Supertocat](https://octodex.github.com/images/okal-eltocat.jpg?classes=inline)\n![Riddlocat](https://octodex.github.com/images/riddlocat.jpg?classes=inline)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![X-tocat](https://octodex.github.com/images/xtocat.jpg?classes=shadow,border,left)\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for Headless Page\nDESCRIPTION: TOML configuration block that sets up a headless child page in Hugo. Specifies the page title, description, tags and build settings to prevent the page from being rendered.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndescription = \"This is a demo child page\"\ntags = [\"children\", \"headless\", \"non-hidden\"]\ntitle = \"page 1-1-2 (headless)\"\n[_build]\n  render = \"never\"\n+++\n```\n\n----------------------------------------\n\nTITLE: JSON Example for Tab Content\nDESCRIPTION: A JSON snippet that represents a simple Hello World object, used as content in a tab example.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{ \"Hello\": \"World\" }\n```\n\n----------------------------------------\n\nTITLE: MetalLB Repository Links in Markdown\nDESCRIPTION: Markdown links to MetalLB homepage and source code repository.\nSOURCE: https://github.com/metallb/metallb/blob/main/charts/metallb/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n**Homepage:** <https://metallb.universe.tf>\n\n## Source Code\n\n* <https://github.com/metallb/metallb>\n```\n\n----------------------------------------\n\nTITLE: Creating Default Pages with Hugo Commands\nDESCRIPTION: Commands to create new default pages in Hugo\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/archetypes/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nhugo new <chapter>/<name>/_index.md\n```\n\nLANGUAGE: shell\nCODE:\n```\nhugo new <chapter>/<name>.md\n```\n\n----------------------------------------\n\nTITLE: GANTT Chart for Project Planning\nDESCRIPTION: A Mermaid GANTT chart showing a project timeline for adding GANTT functionality to Mermaid. Includes completed, active, and future tasks with dependencies, critical paths, and durations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/mermaid.en.md#2025-04-21_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n{{</* mermaid */>}}\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to Mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2              :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to Mermaid                      :1d\n{{</* /mermaid */>}}\n```\n\n----------------------------------------\n\nTITLE: Python Quicksort One-liner with Wrap\nDESCRIPTION: Complex Python one-liner implementing quicksort algorithm with line wrapping enabled\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/highlight.en.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# Quicksort Python One-liner\nlambda L: [] if L==[] else qsort([x for x in L[1:] if x< L[0]]) + L[0:1] + qsort([x for x in L[1:] if x>=L[0]])\n# Some more stuff\n```\n\n----------------------------------------\n\nTITLE: Displaying Formatted Nested Parameter in Hugo Content\nDESCRIPTION: Example of using the siteparam shortcode to display a nested parameter that contains Markdown and HTML formatting.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nFormatted parameter: {{%/* siteparam name=\"siteparam.test.text\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Output for Image with Effects\nDESCRIPTION: Shows how the image effects get rendered in the HTML output. The parameters are converted to CSS classes that can be styled with CSS.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/imageeffects.en.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://octodex.github.com/images/minion.png?lightbox=false&bg-white=true\" loading=\"lazy\" alt=\"Minion\" class=\"bg-white border lazy nolightbox noshadow\">\n```\n\n----------------------------------------\n\nTITLE: Disabling Lightbox for Images in Markdown\nDESCRIPTION: Demonstrates how to disable the lightbox feature for images in Markdown using a URL parameter, and how to wrap an image in a link when lightbox is enabled by default.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n![Homercat](https://octodex.github.com/images/homercat.png?lightbox=false)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[![Homercat](https://octodex.github.com/images/homercat.png?lightbox=false)](https://octodex.github.com/#homercat)\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for MetalLB Documentation\nDESCRIPTION: Hugo front matter configuration in TOML format defining metadata for a demo child plank page. It specifies tags, title, and build instructions to prevent rendering of this content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndescrption = \"This be a demo child plank\"\ntags = [\"children\", \"headless\", \"non-hidden\"]\ntitle = \"plank 1-1-2 (headless)\"\n[_build]\n  render = \"never\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Links in Markdown\nDESCRIPTION: Demonstrates how to create explicit links in Markdown when you want to use non-absolute URLs or custom link text. The syntax uses square brackets for text and parentheses for the URL.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n[Assemble](http://assemble.io)\n```\n\n----------------------------------------\n\nTITLE: Integrating Button Shortcode within HTML Form in Hugo\nDESCRIPTION: Example showing how to use the button shortcode within an HTML form element for submission actions like search.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_18\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"../../search.html\" method=\"get\">\n  <input name=\"search-by-detail\" class=\"search-by\" type=\"search\">\n  {{%/* button type=\"submit\" style=\"secondary\" icon=\"search\" %}}Search{{% /button */%}}\n</form>\n```\n\n----------------------------------------\n\nTITLE: Displaying Font Awesome Icon in Markdown\nDESCRIPTION: This snippet demonstrates how to use a shortcode to display a Font Awesome icon within Markdown content. It's used in the context of showing an edit button.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button style=\"transparent\" icon=\"pen\" %}}{{% /button %}}\n```\n\n----------------------------------------\n\nTITLE: Children Shortcode with Custom Heading Styles in Hugo\nDESCRIPTION: Configuring the 'children' shortcode with custom container and element styles using heading tags, limited depth, and descriptions.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/_index.en.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n{{%/* children containerstyle=\"div\" style=\"h2\" depth=\"3\" description=\"true\" */%}}\n```\n\n----------------------------------------\n\nTITLE: MetalLB Requirements Table in Markdown\nDESCRIPTION: Markdown table showing MetalLB's dependencies and version requirements.\nSOURCE: https://github.com/metallb/metallb/blob/main/charts/metallb/README.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Repository | Name | Version |\n|------------|------|----------|\n|  | crds | 0.0.0 |\n| https://metallb.github.io/frr-k8s | frr-k8s | 0.0.17 |\n```\n\n----------------------------------------\n\nTITLE: Orange Color Notice with Title and Icon\nDESCRIPTION: Demonstrates a notice with the orange color style that includes both a custom title and icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"orange\" title=\"Orange\" icon=\"bug\" */%}}\nA **orange** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Using Custom Hugo Shortcode\nDESCRIPTION: This snippet demonstrates the use of a custom Hugo shortcode named 'piratify' which likely transforms content into pirate-speak.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/children-1-1-1-1-1-1/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Adding Tooltips to Images in Markdown\nDESCRIPTION: Shows how to add a tooltip to an image in Markdown by including the tooltip text in quotes after the image URL.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_26\n\nLANGUAGE: markdown\nCODE:\n```\n![Picard](https://octodex.github.com/images/jean-luc-picat.jpg \"Jean Luc Picard\")\n```\n\n----------------------------------------\n\nTITLE: Displaying Plaintext Source Code in Markdown\nDESCRIPTION: Example of using a code block with plaintext syntax highlighting in markdown. This demonstrates how to format and display source code or other text content with proper formatting preservation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/INCLUDE_ME.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n...and even source code\n```\n\n----------------------------------------\n\nTITLE: Hugo Children Shortcode with Hidden Pages Option\nDESCRIPTION: A Hugo shortcode that displays child pages of the current page. The showhidden parameter is set to true to ensure that hidden child pages are also displayed in the list.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{% children showhidden=\"true\" %}}\n```\n\n----------------------------------------\n\nTITLE: Transparent Style Notice with Title and Icon\nDESCRIPTION: Shows how to create a transparent style notice with custom title and icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_18\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"transparent\" title=\"Pay Attention to this Note!\" icon=\"skull-crossbones\" */%}}\nSome serious information.\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Using Piratify Shortcode in Hugo Template\nDESCRIPTION: Implementation of a custom Hugo shortcode called 'piratify' that likely transforms content in some way related to the MetalLB showcase.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/showcase/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Ordered Lists in Markdown\nDESCRIPTION: Demonstrates how to create ordered and nested lists in Markdown. The numbers used in the markdown syntax are irrelevant as Markdown will automatically number items consecutively.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n1. Lorem ipsum dolor sit amet\n3. Consectetur adipiscing elit\n    1. Integer molestie lorem at massa\n    7. Facilisis in pretium nisl aliquet\n99. Nulla volutpat aliquam velit\n    1. Faucibus porta lacus fringilla vel\n    1. Aenean sit amet erat nunc\n17. Eget porttitor lorem\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with Right-Positioned Icon in Hugo\nDESCRIPTION: Example showing how to create a button with an icon positioned to the right of the text using the iconposition parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" icon=\"download\" iconposition=\"right\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Frontmatter for MetalLB Documentation Chapter\nDESCRIPTION: TOML frontmatter configuration for a Hugo documentation page that defines a chapter structure with metadata including archetype, title, and navigation weight.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"chapter\"\ntitle = \"Content\"\nweight = 2\n+++\n```\n\n----------------------------------------\n\nTITLE: Displaying New Feature Badge in Hugo Markdown\nDESCRIPTION: This code shows how to use a Hugo shortcode to display a 'New' feature badge with an icon in the documentation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n{{% badge style=\"info\" icon=\"plus-circle\" title=\" \" %}}New{{% /badge %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Keyboard Shortcuts with HTML in Markdown\nDESCRIPTION: Demonstrates how to format keyboard shortcuts using HTML's kbd element, which visually styles the text to resemble keyboard keys.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\nPress <kbd>STRG</kbd> <kbd>ALT</kbd> <kbd>DEL</kbd> to end your shift early.\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Chapter Parameters in TOML\nDESCRIPTION: TOML front matter configuration that defines a Hugo documentation chapter with metadata like archetype, visibility status, title and ordering weight.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/dev/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\narchetype = \"chapter\"\nhidden = true\ntitle = \"Development\"\nweight = 4\n```\n\n----------------------------------------\n\nTITLE: Customizing Main Area Max Width with CSS Variables\nDESCRIPTION: CSS variable to customize the maximum width of the main content area. This can be defined in the custom-header.html file to override the default maximum width constraint.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_11\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --MAIN-WIDTH-MAX: 80.25rem;\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Bold Text in Markdown\nDESCRIPTION: Shows how to make text bold by enclosing it with double asterisks (**), which increases the font weight to indicate importance.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nI am rendered with **bold text**\n```\n\n----------------------------------------\n\nTITLE: Basic Button Shortcode Usage in Hugo\nDESCRIPTION: Basic examples of the button shortcode implementation that creates clickable buttons with different styles and icons.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{% button href=\"https://gohugo.io/\" %}}Get Hugo{{% /button %}}\n{{% button href=\"https://gohugo.io/\" style=\"warning\" icon=\"dragon\" %}}Get Hugo{{% /button %}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Front Matter Configuration for MetalLB Demo Page\nDESCRIPTION: Hugo front matter configuration for a demo child page in the MetalLB documentation. It sets the page to always be open in the navigation, provides a description, defines tags for categorization, and sets the page title.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n+++\nalwaysopen = true\ndescription = \"This is a demo child page\"\ntags = [\"children\", \"non-hidden\"]\ntitle = \"page 1-1\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Build Parameters in TOML\nDESCRIPTION: TOML configuration block that sets Hugo build parameters. It prevents the file from being rendered or listed, and disables publishing of associated resources.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/more/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[_build]\n  render = \"never\"\n  list = \"never\"\n  publishResources = false\n```\n\n----------------------------------------\n\nTITLE: Creating Strikethrough Text in GitHub Flavored Markdown\nDESCRIPTION: Shows how to create strikethrough text using double tildes (~~). This is a GitHub Flavored Markdown extension that visually crosses out text.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n~~Strike through this text~~\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontmatter for a Hidden Page in Hugo\nDESCRIPTION: YAML/TOML frontmatter block that configures a page to be hidden from navigation menus, and specifies its title, description, and tags.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-1/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n+++\ndescription = \"This is a hidden demo child page\"\nhidden = true\ntags = [\"children\", \"the hidden\"]\ntitle = \"page 1-1-1 (hidden)\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Hugo Front Matter Definition in TOML\nDESCRIPTION: TOML front matter block defining the page title for a Hugo content page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/more/credits/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ntitle = \"Credits\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Adding Horizontal Rules in Markdown\nDESCRIPTION: Demonstrates how to add horizontal rules using three consecutive dashes. Horizontal rules create a visual break between content sections.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus.\n\n---\n\nEt legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\n```\n\n----------------------------------------\n\nTITLE: Note Style Notice Implementation\nDESCRIPTION: Shows how to implement a notice with the note style, which typically displays with a note-specific icon and styling.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"note\" */%}}\nA **notice** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for Hidden MetalLB Demo Page\nDESCRIPTION: TOML front matter configuration that sets up a hidden demo page with specific tags and title. The configuration includes metadata properties for visibility control and categorization.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndescrption = \"This be a hidden demo child plank\"\nhidden = true\ntags = [\"children\", \"the hidden\"]\ntitle = \"plank 1-1-1-1-1 (hidden)\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for a Hidden Page\nDESCRIPTION: This TOML-formatted front matter configures a hidden page in Hugo. It sets the page to be hidden in navigation, provides a description, adds tags, and assigns a weight for ordering.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-4/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\nalwaysopen = false\ndescription = \"This is a hidden demo child page\"\nhidden = true\ntags = [\"children\", \"the hidden\"]\ntitle = \"page 4 (hidden)\"\nweight = 40\n+++\n```\n\n----------------------------------------\n\nTITLE: Creating Headings in Markdown\nDESCRIPTION: Shows how to create heading elements (h1 through h6) using the hash symbol (#). Each heading level is denoted by the number of hash symbols used.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# h1 Heading\n\n## h2 Heading\n\n### h3 Heading\n\n#### h4 Heading\n\n##### h5 Heading\n\n###### h6 Heading\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter in Hugo Markdown\nDESCRIPTION: This code snippet defines the front matter for a Hugo markdown page, specifying a description, tags, and title for a demo child plank.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/children-1-1-1-1-1-1/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ndescrption = \"This be a non-hidden demo child plank on a hidden parrrent plank\"\ntags = [\"children\", \"the hidden\"]\ntitle = \"plank 1-1-1-1-1-1\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Using Piratify Shortcode in MetalLB Documentation\nDESCRIPTION: Implementation of a custom Hugo shortcode called 'piratify' that applies pirate-themed styling or transformations to the content. This shortcode is used to theme the hidden documentation page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-4/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Enabling HTML in Markdown for Hugo\nDESCRIPTION: Configuration snippet for hugo.toml that enables unsafe HTML rendering in Markdown to support direct HTML icon implementation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/icon.en.md#2025-04-21_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[markup.goldmark.renderer]\n    unsafe = true\n```\n\n----------------------------------------\n\nTITLE: Using Hugo Piratify Shortcode in Markdown\nDESCRIPTION: This code snippet demonstrates the use of a Hugo shortcode called 'piratify' which likely transforms content into pirate-speak. The shortcode is empty, suggesting it might process surrounding content or work as a page-level transformer.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/generator/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Taxonomy Front Matter\nDESCRIPTION: A front matter block in Hugo that shows the syntax for defining optional parameters for taxonomy pages.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/tags/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\n+++\n```\n\n----------------------------------------\n\nTITLE: Using siteparam Shortcode with Named Parameter in Hugo\nDESCRIPTION: Example of using the siteparam shortcode with a named parameter to retrieve site parameter values.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* siteparam name=\"editURL\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Launching Hugo's Development Server\nDESCRIPTION: Command to start Hugo's built-in development server with live reload functionality.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nhugo serve\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for Syntax Highlighting\nDESCRIPTION: TOML configuration block that sets up the title and description for a Hugo documentation page focused on syntax highlighting functionality.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/highlight.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndescription = \"Render code with a syntax highlighter\"\ntitle = \"Highlight\"\n+++\n```\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify true >}}\n```\n\n----------------------------------------\n\nTITLE: Using the Piratify Hugo Shortcode in MetalLB Documentation\nDESCRIPTION: This snippet demonstrates the use of a custom Hugo shortcode called 'piratify' that likely transforms content into pirate-speak. The shortcode is empty and doesn't contain any parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-1/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Using Icon Shortcode with Positional Parameters in Hugo\nDESCRIPTION: Shows how to implement the icon shortcode using positional parameters to display Font Awesome icons in Hugo.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/icon.en.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n{{%/* icon exclamation-triangle */%}}\n{{%/* icon angle-double-up */%}}\n{{%/* icon skull-crossbones */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for Vanity URL in MetalLB\nDESCRIPTION: YAML front matter configuration for a Hugo page that sets up a vanity URL. It specifies a title of 'vanity url' and uses the 'vanityurl' layout template to handle URL redirection.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/metallb.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"vanity url\"\nlayout: vanityurl\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Frontmatter for MetalLB Documentation\nDESCRIPTION: Hugo frontmatter that defines metadata for a child documentation page in the MetalLB project. It includes a title, description (with a typo), and tags indicating it's a non-hidden child page.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-2/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ndescrption = \"This be a demo child plank\"\ntags = [\"children\", \"non-hidden\"]\ntitle = \"plank 1-1-2-2\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Sample Chapter Content in Markdown\nDESCRIPTION: Example markdown content for a chapter page showing title and description format.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/installation/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n# Basics\n\nDiscover what this Hugo theme is all about and the core concepts behind it.\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Frontmatter for MetalLB Demo Plank\nDESCRIPTION: Defines the frontmatter for a demo child plank in Hugo. The frontmatter includes a description, tags for categorization (children and non-hidden), and a title identifier.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-3/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n+++\ndescrption = \"This be a demo child plank\"\ntags = [\"children\", \"non-hidden\"]\ntitle = \"plank 1-1-3\"\n+++\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Calling Dependency Loader from Custom Partials in Hugo\nDESCRIPTION: Go template code for calling the dependency loader from custom partials with a specific location. This allows integration of the dependency system with custom template locations.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_15\n\nLANGUAGE: go\nCODE:\n```\n{{- partial \"dependencies.html\" (dict \"page\" . \"location\" \"mylocation\") }}\n```\n\n----------------------------------------\n\nTITLE: Network Diagram for Unnumbered BGP Testing on Primary Interface\nDESCRIPTION: This Mermaid diagram illustrates the test setup for unnumbered BGP on primary interfaces. It shows a topology with a ToR (Top of Rack) switch connecting to two Kubernetes nodes with pods, highlighting the point-to-point connections required for testing.\nSOURCE: https://github.com/metallb/metallb/blob/main/design/unnumbered-bgp.md#2025-04-21_snippet_5\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    subgraph Rack0\n        direction LR\n        subgraph ToR0\n            direction TB\n            A1[eth0] -.- A{Routing}\n            A -.- A3[eth00]\n            A -.- A4[eth01]\n\n            BGP(BGP)\n\n        end\n\n        %% Top Right Subgraph\n        subgraph Node1\n            direction TB\n            B1 --- B2(cni)\n            B2 --- B3\n            subgraph Pod1[pod]\n              B3[eth0]\n            end\n            BGP-N1(BGP process)\n        end\n\n        %% Bottom Right Subgraph\n        subgraph Node0\n            direction TB\n            C1 --- C2(cni)\n            C2 --- C3\n            subgraph Pod2[pod]\n              C3[eth0]\n            end\n            BGP-N0(BGP process)\n        end\n\n        %% Connections between subgraphs\n        A3 -- point-to-point ------ B1[eth0]\n        A4 -- point-to-point ------ C1[eth0]\n    end\n\n    %% Define styles for subgraphs and nodes\n    classDef node fill:#f0f0f0,stroke:#000000,stroke-width:1px;\n    class Node0 node;\n    class Node1 node;\n```\n\n----------------------------------------\n\nTITLE: Configuring File System Deployment in Hugo\nDESCRIPTION: Configuration settings for deploying a Hugo site to be viewed directly from the file system. This sets the base URL to the root and enables relative URLs for file:// protocol access.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\nbaseURL = \"/\"\nrelativeURLs = true\n```\n\n----------------------------------------\n\nTITLE: Adding Deferred JavaScript in HTML\nDESCRIPTION: This HTML snippet demonstrates how to add a deferred JavaScript file to a page, which is required for custom scripts after upgrading to version 5.0.0.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<script defer src=\"myscript.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple IP Address Pools in MetalLB\nDESCRIPTION: This snippet demonstrates how to create multiple IPAddressPool resources in MetalLB, allowing for the allocation of different IP ranges. It shows two separate pools, one with a single CIDR range and another with multiple IP ranges including IPv6.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/content/faq/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.0/24\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: second-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.9.1-192.168.9.5\n  - fc00:f853:0ccd:e799::/124\n```\n\n----------------------------------------\n\nTITLE: Configuring Print Output Format in Hugo\nDESCRIPTION: This snippet shows how to configure the print output format in Hugo's configuration file to revert changes made in version 5.1.0.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[outputFormats]\n  [outputFormats.print]\n    name= \"print\"\n    baseName = \"index\"\n    path = \"_print\"\n    isHTML = true\n    mediaType = 'text/html'\n    permalinkable = false\n```\n\n----------------------------------------\n\nTITLE: Creating Advanced Custom Buttons in Hugo\nDESCRIPTION: Example of a button with custom color, Font Awesome brand icon, and Markdown-formatted title text.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_13\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" %}}Get **Hugo**{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Using Tabs as Hugo Partial\nDESCRIPTION: An example of how to implement the tabs functionality as a Hugo partial instead of a shortcode, passing parameters as a dictionary.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/tabs.html\" (dict\n  \"page\"  .\n  \"title\" \"hello.\"\n  \"content\" (slice\n    (dict\n      \"title\" \"py\"\n      \"content\" (\"```python\\nprint(\\\"Hello World!\\\")\\n```\" | .RenderString)\n    )\n    (dict\n      \"title\" \"sh\"\n      \"content\" (\"```bash\\necho \\\"Hello World!\\\"\\n```\" | .RenderString)\n    )\n    (dict\n      \"title\" \"c\"\n      \"content\" (\"```c\\nprintf(\\\"Hello World!\\\");\\n```\" | .RenderString)\n    )\n  )\n)}}\n```\n\n----------------------------------------\n\nTITLE: Tab Partial Implementation in Go\nDESCRIPTION: Example of using the tab functionality through a partial template in Hugo, demonstrating how to programmatically create tabs.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tab.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/tab.html\" (dict\n  \"page\"  .\n  \"title\" \"c\"\n  \"content\" (\"```c\\nprintf(\\\"Hello World!\\\")\\n```\" | .RenderString)\n)}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Headless Branch Bundle in Hugo (Option 1)\nDESCRIPTION: Configuration for making a page file a headless branch bundle to prevent it from appearing in the main menu while still being rendered.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = \"Showcase\"\n[_build]\n  render = \"always\"\n  list = \"never\"\n  publishResources = true\n```\n\n----------------------------------------\n\nTITLE: Configuring MathJax in Hugo Configuration File\nDESCRIPTION: Example of configuring MathJax settings globally in the Hugo configuration file, setting the display alignment to left.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/math.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  mathJaxInitialize = \"{ \\\"chtml\\\": { \\\"displayAlign\\\": \\\"left\\\" } }\"\n```\n\n----------------------------------------\n\nTITLE: Configuring MathJax in Hugo Page Frontmatter\nDESCRIPTION: Example of configuring MathJax settings for a specific page in the frontmatter, setting the display alignment to left.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/math.en.md#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\nmathJaxInitialize = \"{ \\\"chtml\\\": { \\\"displayAlign\\\": \\\"left\\\" } }\"\n```\n\n----------------------------------------\n\nTITLE: Redefining the End Area in Hugo Relearn Theme\nDESCRIPTION: This snippet shows how to redefine the 'end' area of the topbar by creating a custom file in your installation. It demonstrates setting the 'onempty' parameter to 'disable' for the more button, making it always visible regardless of content status.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/topbar/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"topbar/button/more.html\" (dict\n  \"page\" .\n  \"onempty\" \"disable\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Rendering Mathematical Formula with MathJax in Hugo (Partial Syntax)\nDESCRIPTION: Example of using partial syntax to render a mathematical formula with center alignment in Hugo using MathJax, passing parameters as a dictionary.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/math.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/math.html\" (dict\n  \"page\"    .\n  \"content\" \"$$left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\"\n  \"align\"   \"center\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Including Content with Named Parameters in Hugo\nDESCRIPTION: Demonstrates how to use the include shortcode with named parameters to include external files in Hugo pages.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/include.en.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{{%/* include file=\"shortcodes/INCLUDE_ME.md\" */%}}\n```\n\n----------------------------------------\n\nTITLE: Creating Blockquotes in Markdown\nDESCRIPTION: Demonstrates how to create blockquotes using the > symbol. Blockquotes can be nested by using multiple > symbols, which is useful for showing hierarchical quotes.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n> Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n>\n> > Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n>\n> Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\n```\n\n----------------------------------------\n\nTITLE: Creating Footnotes in PHP Markdown\nDESCRIPTION: Shows how to create footnotes in PHP Markdown Extra. Footnotes consist of a marker in the text that becomes a superscript number and a footnote definition that appears in a list, typically at the end of the document.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\nThat's some text with a footnote[^1]\n\n[^1]: And that's the footnote.\n\nThat's some more text with a footnote.[^someid]\n\n[^someid]:\n    Anything of interest goes here.\n\n    Blue light glows blue.\n```\n\n----------------------------------------\n\nTITLE: Using HTML Directly for Advanced Font Awesome Features\nDESCRIPTION: Shows how to implement icons using direct HTML for advanced Font Awesome customization options.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/icon.en.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\nBuilt with <i class=\"fas fa-heart\"></i> by Relearn and Hugo\n```\n\n----------------------------------------\n\nTITLE: Hugo Frontmatter and Template Structure for MetalLB Maintainer Documentation\nDESCRIPTION: This snippet shows the Hugo frontmatter metadata and a template directive for a page documenting MetalLB maintainer information. It defines the page title and description using TOML format, followed by a custom shortcode 'piratify'.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/dev/maintaining/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n+++\ndescription = \"What to know as a maintainer\"\ntitle = \"Maintaining\"\n+++\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Python Line Number Example\nDESCRIPTION: Python code example showing line numbers with custom starting offset and multiple print statements\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/highlight.en.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# the hardest part is to start writing code; here's a kickstart; just copy and paste this; it's free; the next lines will cost you serious credits\nprint(\"Hello\")\nprint(\" \")\nprint(\"World\")\nprint(\"!\")\n```\n\n----------------------------------------\n\nTITLE: Creating Aligned Tables in GitHub Flavored Markdown\nDESCRIPTION: Shows how to create tables with column alignment in GitHub Flavored Markdown. Adding colons to the separator line specifies alignment (left, center, or right) for that column.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n| Option | Number | Description |\n|-------:|:------:|:------------|\n| data   | 1      | path to data files to supply the data that will be passed into templates. |\n| engine | 2      | engine to be used for processing templates. Handlebars is the default. |\n| ext    | 3      | extension to be used for dest files. |\n```\n\n----------------------------------------\n\nTITLE: Hugo Children Shortcode\nDESCRIPTION: Hugo shortcode to display child pages with hidden pages shown using the children shortcode parameter.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/_index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{% children showhidden=\"true\" %}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Special Style Buttons in Hugo\nDESCRIPTION: Examples of creating buttons with special styles (default, transparent) for specific design requirements.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" style=\"default\" %}}Get Hugo{{% /button */%}}\n{{%/* button href=\"https://gohugo.io/\" style=\"transparent\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Creating Task Lists in Markdown\nDESCRIPTION: Shows how to create task lists with checked and unchecked items in GitHub Flavored Markdown. These items are non-clickable and can be nested.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n- [x] Basic Test\n- [ ] More Tests\n  - [x] View\n  - [x] Hear\n  - [ ] Smell\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Icons for Severity Buttons in Hugo\nDESCRIPTION: Example showing how to override the default icon for a severity-styled button with a custom icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_11\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" icon=\"dragon\" style=\"warning\" %}}Get Hugo{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Severity Style Badge Examples in Go\nDESCRIPTION: Implementation of badges with different severity styles including info, note, tip, and warning.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/badge.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{%/* badge style=\"info\" %}}New{{% /badge */%}}\n{{%/* badge style=\"note\" %}}Change{{% /badge */%}}\n{{%/* badge style=\"tip\" %}}Optional{{% /badge */%}}\n{{%/* badge style=\"warning\" %}}Breaking{{% /badge */%}}\n```\n\n----------------------------------------\n\nTITLE: Reverting OpenAPI Syntax Highlighting in CSS\nDESCRIPTION: CSS snippet to revert the OpenAPI syntax highlighting theme to 'obsidian' for both normal viewing and printing in custom theme variants.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n--OPENAPI-CODE-theme: obsidian;\n--PRINT-OPENAPI-CODE-theme: obsidian;\n```\n\n----------------------------------------\n\nTITLE: Headless Branch Bundle Configuration in TOML\nDESCRIPTION: Configuration for creating a headless branch bundle in Hugo to prevent pages from appearing in the menu section while maintaining shortcut functionality.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/menushortcuts.en.md#2025-04-21_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\ntitle = \"Showcase\"\n[_build]\n  render = \"always\"\n  list = \"never\"\n  publishResources = true\n```\n\n----------------------------------------\n\nTITLE: Setting Title for Child Page in Hugo\nDESCRIPTION: Configuration for setting the title of a child page that will be contained in the sitemap but not in the main menu.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntitle = \"Credits\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Change Badge in Hugo Markdown\nDESCRIPTION: This snippet demonstrates the use of a Hugo shortcode to display a 'Change' badge in the documentation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/migration/_index.en.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n{{% badge style=\"note\" title=\" \" %}}Change{{% /badge %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Nested Parameters with Formatting in Hugo Configuration\nDESCRIPTION: Example of defining a nested parameter with Markdown and HTML formatting in the hugo.toml configuration file.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n[params]\n  [params.siteparam.test]\n    text = \"A **nested** parameter <b>with</b> formatting\"\n```\n\n----------------------------------------\n\nTITLE: Default Home Button Configuration in Hugo\nDESCRIPTION: Default configuration for the home button if not specified for a specific language. This sets a Font Awesome home icon with the text 'Home'.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/customization/_index.en.md#2025-04-21_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\nlandingPageName = \"<i class='fa-fw fas fa-home'></i> Home\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Hello World in Bash using Tabs\nDESCRIPTION: A simple Bash command that outputs 'Hello World!' to the console, shown as part of a tabs example.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/tabs.en.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho \"Hello World!\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Theme Variant in Hugo TOML\nDESCRIPTION: Basic configuration to set a single theme variant using the themeVariant parameter in hugo.toml.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  themeVariant = \"relearn-light\"\n```\n\n----------------------------------------\n\nTITLE: Using siteparam as a Partial in Hugo Templates\nDESCRIPTION: Example of calling the siteparam functionality from a partial template using a dictionary with page context and parameter name.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/siteparam.en.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n{{ partial \"shortcodes/siteparam.html\" (dict\n  \"page\" .\n  \"name\" \"editURL\"\n)}}\n```\n\n----------------------------------------\n\nTITLE: Formatting Italic Text in Markdown\nDESCRIPTION: Demonstrates how to italicize text by enclosing it with underscores (_), which emphasizes the text with an italic font style.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/cont/markdown.en.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nI am rendered with _italicized text_\n```\n\n----------------------------------------\n\nTITLE: Creating Development Cluster with Default BGP FRR Backend\nDESCRIPTION: Command to create a development cluster using the default FRR BGP backend configuration\nSOURCE: https://github.com/metallb/metallb/blob/main/e2etest/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ninv dev-env\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto Theme Mode in Hugo TOML\nDESCRIPTION: Configuration for enabling automatic theme switching based on OS settings with an additional variant option.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[params]\n  themeVariant = [ \"auto\", \"red\" ]\n```\n\n----------------------------------------\n\nTITLE: Custom Favicon HTML Template\nDESCRIPTION: HTML template for implementing a custom favicon with a specific file type.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/branding/_index.en.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"icon\" href=\"/images/favicon.bmp\" type=\"image/bmp\">\n```\n\n----------------------------------------\n\nTITLE: Basic Python Hello World Example\nDESCRIPTION: Simple Python print statement demonstrating basic syntax highlighting\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/highlight.en.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nprint(\"Hello World!\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Chapter Front Matter in TOML\nDESCRIPTION: Front matter configuration for a Hugo documentation chapter page that defines metadata like archetype, visibility, title and weight. Uses TOML format with children shortcode directive.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/dev/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\narchetype = \"chapter\"\nhidden = true\ntitle = \"Development\"\nweight = 4\n+++\n```\n\nLANGUAGE: hugo\nCODE:\n```\n{{%children containerstyle=\"div\" style=\"h2\" description=\"true\" %}}\n```\n\n----------------------------------------\n\nTITLE: Info Notice with Rich Markdown Content\nDESCRIPTION: Example of an info-style notice with rich markdown content including paragraphs, lists, text styling, links, and code blocks.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"info\" */%}}\nAn **information** disclaimer\n\nYou can add standard markdown syntax:\n\n- multiple paragraphs\n- bullet point lists\n- _emphasized_, **bold** and even ***bold emphasized*** text\n- [links](https://example.com)\n- etc.\n\n```plaintext\n...and even source code\n```\n\n> the possibilities are endless (almost - including other shortcodes may or may not work)\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Default Expand Shortcode Example in Hugo\nDESCRIPTION: Example of using the expand shortcode with default parameters.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/expand.en.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n{{%/* expand */%}}Yes, you did it!{{%/* /expand */%}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with Empty Icon in Hugo\nDESCRIPTION: Example showing how to create a button with a space character as the icon parameter to override default icons.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/button.en.md#2025-04-21_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n{{%/* button href=\"https://gohugo.io/\" icon=\" \" %}}{{% /button */%}}\n```\n\n----------------------------------------\n\nTITLE: Primary Brand Color Notice with Title\nDESCRIPTION: Example of implementing a notice with the primary brand color style and a custom title.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_9\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"primary\" title=\"Primary\" */%}}\nA **primary** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Secondary Brand Color Notice with Icon\nDESCRIPTION: Example of implementing a notice with the secondary brand color style and a custom icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_10\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"secondary\" icon=\"stopwatch\" */%}}\nA **secondary** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for MetalLB Showcase Page\nDESCRIPTION: Front matter configuration for a Hugo page titled 'Showcase'. The build settings ensure the page is always rendered but never included in lists, while publishing all associated resources.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/showcase/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ntitle = \"Showcase\"\n[_build]\n  render = \"always\"\n  list = \"never\"\n  publishResources = true\n+++\n```\n\n----------------------------------------\n\nTITLE: Accent Brand Color Notice Implementation\nDESCRIPTION: Shows how to implement a notice with the accent brand color style without any custom title or icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_11\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"accent\" */%}}\nAn **accent** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Blue Color Notice without Title and Icon\nDESCRIPTION: Demonstrates a notice with the blue color style without any title or icon.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.en.md#2025-04-21_snippet_12\n\nLANGUAGE: go\nCODE:\n```\n{{%/* notice style=\"blue\" */%}}\nA **blue** disclaimer\n{{%/* /notice */%}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Frontmatter Configuration\nDESCRIPTION: TOML frontmatter configuration for a demo documentation page, specifying metadata like visibility settings, description, tags and weight for ordering.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\nalwaysopen = false\ndescription = \"This is a demo child page\"\ntags = [\"children\", \"non-hidden\"]\ntitle = \"page 1\"\nweight = 10\n+++\n```\n\n----------------------------------------\n\nTITLE: Defining Hugo Frontmatter in TOML for MetalLB Documentation\nDESCRIPTION: This snippet contains the frontmatter metadata for a Hugo content page written in TOML format. It defines the description, tags, and title for a demo child plank in the MetalLB documentation.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-1/_index.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndescrption = \"This be a demo child plank\"\ntags = [\"children\", \"non-hidden\"]\ntitle = \"plank 1-1-2-1\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Including Hugo Shortcode in MetalLB Documentation\nDESCRIPTION: A Hugo shortcode called 'piratify' that likely transforms content into pirate-speak, fitting with the maritime theme of MetalLB (Metal Load Balancer).\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-2/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Setting up Hugo Frontmatter with Piratify Template\nDESCRIPTION: Hugo frontmatter configuration for a notice page with a pirate-themed description, followed by a piratify template tag call.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/notice.pir.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n+++\ndescrption = \"Disclaimerrrs t' help ye strrructurrre yer plank\"\ntitle = \"Notice\"\n+++\n{{< piratify >}}\n```\n\n----------------------------------------\n\nTITLE: Hugo Frontmatter Configuration\nDESCRIPTION: TOML-formatted frontmatter defining the page title and description for Hugo static site generator\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/dev/maintaining/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n+++\ndescription = \"What to know as a maintainer\"\ntitle = \"Maintaining\"\n+++\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Header for MetalLB\nDESCRIPTION: Standard Apache License 2.0 copyright header used in the MetalLB project. It declares that the software is licensed under Apache 2.0 terms, which permits usage, modification, and distribution with certain conditions.\nSOURCE: https://github.com/metallb/metallb/blob/main/dev-env/deepcopy_header.txt#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n/*\nCopyright 2023.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n```\n\n----------------------------------------\n\nTITLE: Including MetalLB Changelog in Hugo Documentation\nDESCRIPTION: A Hugo shortcode that includes the content of CHANGELOG.md file from the basics directory. The 'true' parameter likely indicates to render the markdown content.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/basics/history/_index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{% include \"basics/CHANGELOG.md\" true %}}\n```\n\n----------------------------------------\n\nTITLE: Using Piratify Shortcode in Hugo Markdown\nDESCRIPTION: A Hugo shortcode that appears to transform content into pirate-speak. This shortcode is used without any content inside it.\nSOURCE: https://github.com/metallb/metallb/blob/main/website/themes/hugo-theme-relearn/exampleSite/content/shortcodes/children/children-1/children-1-1/children-1-1-2/_index.pir.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< piratify >}}\n```"
  }
]
[
  {
    "owner": "opencart",
    "repo": "opencart",
    "content": "TITLE: Creating a Basic Flot Plot in JavaScript\nDESCRIPTION: This snippet demonstrates the basic syntax for creating a Flot plot, passing a placeholder element, data, and options to the plot function.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar plot = $.plot(placeholder, data, options)\n```\n\n----------------------------------------\n\nTITLE: Creating Stream Objects from Various Sources with GuzzleHttp\\Psr7\\Utils\nDESCRIPTION: Shows how to use Utils::streamFor() to create stream objects from different source types including strings, file handles, and generators. The method accepts multiple resource types and returns a PSR-7 StreamInterface object.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$stream = GuzzleHttp\\Psr7\\Utils::streamFor('foo');\n$stream = GuzzleHttp\\Psr7\\Utils::streamFor(fopen('/path/to/file', 'r'));\n\n$generator = function ($bytes) {\n    for ($i = 0; $i < $bytes; $i++) {\n        yield ' ';\n    }\n}\n\n$stream = GuzzleHttp\\Psr7\\Utils::streamFor($generator(100));\n```\n\n----------------------------------------\n\nTITLE: Adding Headers to PSR-7 Response in PHP\nDESCRIPTION: Demonstrates how to add a custom header to a PSR-7 response object. This method creates a new response with the added header.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$response->withHeader('My-Custom-Header', 'My Custom Message');\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor-CodeMirror-Plugin Options\nDESCRIPTION: This code snippet demonstrates the available configuration options for the CodeMirror plugin. It includes settings for auto-closing brackets and tags, code formatting, search tools, line numbers, and various other features.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/plugins/codemirror/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.codemirror = {\n\t\n\t// Whether or not you want Brackets to automatically close themselves\n\tautoCloseBrackets: true,\n\n     // Whether or not you want tags to automatically close themselves\n\tautoCloseTags: true,\n\n     // Whether or not to automatically format code should be done when the editor is loaded\n\tautoFormatOnStart: true, \n\t\n\t// Whether or not to automatically format code which has just been uncommented\n\tautoFormatOnUncomment: true,\n\t\n\t// Whether or not to continue a comment when you press Enter inside a comment block\n\tcontinueComments: true,\n\n     // Whether or not you wish to enable code folding (requires 'lineNumbers' to be set to 'true')\n\tenableCodeFolding: true,\n\t\n\t// Whether or not to enable code formatting\n\tenableCodeFormatting: true,\n\t\n\t// Whether or not to enable search tools, CTRL+F (Find), CTRL+SHIFT+F (Replace), CTRL+SHIFT+R (Replace All), CTRL+G (Find Next), CTRL+SHIFT+G (Find Previous)\n\tenableSearchTools: true,\n\t\n\t// Whether or not to highlight all matches of current word/selection\n\thighlightMatches: true,\n\n     // Whether, when indenting, the first N*tabSize spaces should be replaced by N tabs\n\tindentWithTabs: false,\n\n     // Whether or not you want to show line numbers\n\tlineNumbers: true,\n\t\n\t// Whether or not you want to use line wrapping\n\tlineWrapping: true,\n\n     // Define the language specific mode 'htmlmixed' for html  including (css, xml, javascript), 'application/x-httpd-php' for php mode including html, or 'text/javascript' for using java script only \n\tmode: 'htmlmixed',\n\t\n\t// Whether or not you want to highlight matching braces\n\tmatchBrackets: true,\n\t\n\t// Whether or not you want to highlight matching tags\n\tmatchTags: true,\n\n\t// Whether or not to show the showAutoCompleteButton   button on the toolbar\n\tshowAutoCompleteButton: true,\n     \n     // Whether or not to show the comment button on the toolbar\n\tshowCommentButton: true,\n\n\t// Whether or not to show the format button on the toolbar\n\tshowFormatButton: true,\n\n     // Whether or not to show the search Code button on the toolbar\n\tshowSearchButton: true,\n\n     // Whether or not to show Trailing Spaces\n\tshowTrailingSpace: true,\n\t\n\t// Whether or not to show the uncomment button on the toolbar\n\tshowUncommentButton: true,\n\n     // Whether or not to highlight the currently active line\n\tstyleActiveLine: true,\n\n     // Set this to the theme you wish to use (codemirror themes)\n\ttheme: 'default',\n\t\n\t// \"Whether or not to use Beautify for auto formatting On start\n\tuseBeautifyOnStart: false\n};\n```\n\n----------------------------------------\n\nTITLE: Sending HTTP Requests with Guzzle in PHP\nDESCRIPTION: Demonstrates how to use Guzzle to send synchronous and asynchronous HTTP requests. It shows creating a client, making a GET request, accessing response data, and sending an asynchronous request with a promise.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/README.md#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$client = new \\GuzzleHttp\\Client();\n$response = $client->request('GET', 'https://api.github.com/repos/guzzle/guzzle');\n\necho $response->getStatusCode(); // 200\necho $response->getHeaderLine('content-type'); // 'application/json; charset=utf8'\necho $response->getBody(); // '{\"id\": 1420053, \"name\": \"guzzle\", ...}'\n\n// Send an asynchronous request.\n$request = new \\GuzzleHttp\\Psr7\\Request('GET', 'http://httpbin.org');\n$promise = $client->sendAsync($request)->then(function ($response) {\n    echo 'I completed! ' . $response->getBody();\n});\n\n$promise->wait();\n```\n\n----------------------------------------\n\nTITLE: Promise Rejection Handling\nDESCRIPTION: Example demonstrating how to handle promise rejection by registering an onRejected callback that receives the rejection reason.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise();\n$promise->then(null, function ($reason) {\n    echo $reason;\n});\n\n$promise->reject('Error!');\n// Outputs \"Error!\"\n```\n\n----------------------------------------\n\nTITLE: Using AppendStream to Combine Multiple Streams in PHP\nDESCRIPTION: Demonstrates how to use AppendStream to read from multiple streams sequentially. This allows combining several streams to be read one after another, with the ability to add new streams dynamically.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$a = Psr7\\Utils::streamFor('abc, ');\n$b = Psr7\\Utils::streamFor('123.');\n$composed = new Psr7\\AppendStream([$a, $b]);\n\n$composed->addStream(Psr7\\Utils::streamFor(' Above all listen to me'));\n\necho $composed; // abc, 123. Above all listen to me.\n```\n\n----------------------------------------\n\nTITLE: Installing Guzzle via Composer\nDESCRIPTION: Shows the recommended method for installing Guzzle using Composer, a dependency management tool for PHP.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\ncomposer require guzzlehttp/guzzle\n```\n\n----------------------------------------\n\nTITLE: Using LazyOpenStream for On-Demand File Operations in PHP\nDESCRIPTION: Shows how to use LazyOpenStream to lazily read or write to a file that is opened only after an IO operation takes place. This optimizes resource usage by only opening files when needed.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$stream = new Psr7\\LazyOpenStream('/path/to/file', 'r');\n// The file has not yet been opened...\n\necho $stream->read(10);\n// The file is opened and read from only when needed.\n```\n\n----------------------------------------\n\nTITLE: Creating a Function-Based Stream with FnStream in PHP\nDESCRIPTION: Demonstrates how to use FnStream to create stream implementations based on a hash of functions. This allows for easy testing and extension of streams without creating concrete classes.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$stream = Psr7\\Utils::streamFor('hi');\n$fnStream = Psr7\\FnStream::decorate($stream, [\n    'rewind' => function () use ($stream) {\n        echo 'About to rewind - ';\n        $stream->rewind();\n        echo 'rewound!';\n    }\n]);\n\n$fnStream->rewind();\n// Outputs: About to rewind - rewound!\n```\n\n----------------------------------------\n\nTITLE: Reading Stream Subsets with LimitStream in PHP\nDESCRIPTION: Demonstrates how to use LimitStream to read a subset or slice of an existing stream. This is useful for breaking large files into smaller pieces, such as for Amazon S3's multipart upload API.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$original = Psr7\\Utils::streamFor(fopen('/tmp/test.txt', 'r+'));\necho $original->getSize();\n// >>> 1048576\n\n// Limit the size of the body to 1024 bytes and start reading from byte 2048\n$stream = new Psr7\\LimitStream($original, 1024, 2048);\necho $stream->getSize();\n// >>> 1024\necho $stream->tell();\n// >>> 0\n```\n\n----------------------------------------\n\nTITLE: Rejection Recovery in Promise Chain\nDESCRIPTION: Example showing how rejection recovery works in a promise chain. If an onRejected callback returns a value (not a rejection), downstream onFulfilled callbacks are invoked with that value.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise();\n$promise\n    ->then(null, function ($reason) {\n        return \"It's ok\";\n    })\n    ->then(function ($value) {\n        assert($value === \"It's ok\");\n    });\n\n$promise->reject('Error!');\n```\n\n----------------------------------------\n\nTITLE: Interoperating Between GuzzleHttp and React Promises in PHP\nDESCRIPTION: Demonstrates how to use GuzzleHttp promises with React promises, showing promise resolution when a foreign promise is returned inside a then callback.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_16\n\nLANGUAGE: php\nCODE:\n```\n// Create a React promise\n$deferred = new React\\Promise\\Deferred();\n$reactPromise = $deferred->promise();\n\n// Create a Guzzle promise that is fulfilled with a React promise.\n$guzzlePromise = new GuzzleHttp\\Promise\\Promise();\n$guzzlePromise->then(function ($value) use ($reactPromise) {\n    // Do something something with the value...\n    // Return the React promise\n    return $reactPromise;\n});\n```\n\n----------------------------------------\n\nTITLE: Payment Method Implementation in OpenCart 4.0.2.0 (New Format)\nDESCRIPTION: Updated implementation of payment methods in OpenCart 4.0.2.0. This new format includes an option_data array and changes 'title' to 'name' to support multiple payment options per payment extension.\nSOURCE: https://github.com/opencart/opencart/blob/master/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$method_data = [];\n\nif ($status) {\n    $option_data['bank_transfer'] = [\n        'code' => 'bank_transfer.bank_transfer',\n        'name' => $this->language->get('heading_title')\n    ];\n\n    $method_data = [\n        'code'       => 'bank_transfer',\n        'name'       => $this->language->get('heading_title'),\n        'option'     => $option_data,\n        'sort_order' => $this->config->get('payment_bank_transfer_sort_order')\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Flot Chart Grid and Interaction Options\nDESCRIPTION: This snippet shows the structure of grid and interaction configuration options for Flot charts. It includes settings for visibility, colors, margins, borders, markings, and interactivity.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\ngrid: {\n    show: boolean\n    aboveData: boolean\n    color: color\n    backgroundColor: color/gradient or null\n    margin: number or margin object\n    labelMargin: number\n    axisMargin: number\n    markings: array of markings or (fn: axes -> array of markings)\n    borderWidth: number or object with \"top\", \"right\", \"bottom\" and \"left\" properties with different widths\n    borderColor: color or null or object with \"top\", \"right\", \"bottom\" and \"left\" properties with different colors\n    minBorderMargin: number or null\n    clickable: boolean\n    hoverable: boolean\n    autoHighlight: boolean\n    mouseActiveRadius: number\n}\n\ninteraction: {\n    redrawOverlayInterval: number or -1\n}\n```\n\n----------------------------------------\n\nTITLE: Running the Promise Task Queue in an Event Loop\nDESCRIPTION: Shows how to run the promise task queue to ensure promises are resolved in an asynchronous event loop context.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n// Get the global task queue\n$queue = GuzzleHttp\\Promise\\Utils::queue();\n$queue->run();\n```\n\n----------------------------------------\n\nTITLE: Using JMESPath Search Function in PHP\nDESCRIPTION: Shows two ways to use the JMESPath search function in PHP: directly and through the PSR-4 compliant Env class. Both methods take a JMESPath expression and data as arguments.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/mtdowling/jmespath.php/README.rst#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$result = JmesPath\\search($expression, $data);\n\n// or, if you require PSR-4 compliance.\n$result = JmesPath\\Env::search($expression, $data);\n```\n\n----------------------------------------\n\nTITLE: Configuring Axis Options in Flot Charts (JavaScript)\nDESCRIPTION: Comprehensive configuration options for x and y axes in Flot charts, including visibility, positioning, formatting, scaling, and tick customization properties.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_12\n\nLANGUAGE: js\nCODE:\n```\nxaxis, yaxis: {\n    show: null or true/false\n    position: \"bottom\" or \"top\" or \"left\" or \"right\"\n    mode: null or \"time\" (\"time\" requires jquery.flot.time.js plugin)\n    timezone: null, \"browser\" or timezone (only makes sense for mode: \"time\")\n\n    color: null or color spec\n    tickColor: null or color spec\n    font: null or font spec object\n\n    min: null or number\n    max: null or number\n    autoscaleMargin: null or number\n    \n    transform: null or fn: number -> number\n    inverseTransform: null or fn: number -> number\n    \n    ticks: null or number or ticks array or (fn: axis -> ticks array)\n    tickSize: number or array\n    minTickSize: number or array\n    tickFormatter: (fn: number, object -> string) or string\n    tickDecimals: null or number\n\n    labelWidth: null or number\n    labelHeight: null or number\n    reserveSpace: null or true\n    \n    tickLength: null or number\n\n    alignTicksWithAxis: null or number\n}\n```\n\n----------------------------------------\n\nTITLE: Rejection Forwarding with Exception Handling\nDESCRIPTION: Example showing how exceptions thrown in rejection callbacks are forwarded to subsequent rejection callbacks in the promise chain.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise();\n$promise->then(null, function ($reason) {\n    throw new Exception($reason);\n})->then(null, function ($reason) {\n    assert($reason->getMessage() === 'Error!');\n});\n\n$promise->reject('Error!');\n```\n\n----------------------------------------\n\nTITLE: Configuring robots.txt rules for OpenCart store\nDESCRIPTION: Defines search engine crawler instructions to avoid indexing dynamic URLs with various query parameters. This prevents duplicate content issues by blocking crawling of pages with pagination, sorting, filtering, and other dynamic parameters that don't represent unique content.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/robots.txt#2025-04-19_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nuser-agent: *\nDisallow: /*?page=$\nDisallow: /*&page=$\nDisallow: /*?sort=\nDisallow: /*&sort=\nDisallow: /*?order=\nDisallow: /*&order=\nDisallow: /*?limit=\nDisallow: /*&limit=\nDisallow: /*?filter_name=\nDisallow: /*&filter_name=\nDisallow: /*?filter_sub_category=\nDisallow: /*&filter_sub_category=\nDisallow: /*?filter_description=\nDisallow: /*&filter_description=\nDisallow: /*?filter_group=\nDisallow: /*&filter_group=\n```\n\n----------------------------------------\n\nTITLE: Required PHP Extensions Configuration\nDESCRIPTION: Essential PHP extensions that need to be enabled in php.ini for OpenCart functionality.\nSOURCE: https://github.com/opencart/opencart/blob/master/INSTALL.md#2025-04-19_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\nextension=curl;\nextension=gd;\nextension=zip;\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Axes in Flot (JavaScript)\nDESCRIPTION: This snippet demonstrates how to configure multiple x and y axes in Flot charts. It shows how to set up a single x axis at the top and two y axes, with the second y axis positioned on the right and having a minimum value of 20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    xaxes: [ { position: \"top\" } ],\n    yaxes: [ { }, { position: \"right\", min: 20 } ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Resolving a Basic Promise in PHP\nDESCRIPTION: Demonstrates how to create a Promise object with wait and cancel functions, and how to resolve and wait for the promise to complete.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_13\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise(\n    function () use (&$promise) {\n        $promise->resolve('waited');\n    },\n    function () {\n        // do something that will cancel the promise computation (e.g., close\n        // a socket, cancel a database query, etc...)\n    }\n);\n\nassert('waited' === $promise->wait());\n```\n\n----------------------------------------\n\nTITLE: Setting POST Fields and Files in Guzzle 4.x\nDESCRIPTION: Demonstrates how to set POST fields and add files to a request body using the new PostBody interface in Guzzle 4.x. This replaces the previous methods on the request object.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$request = $client->createRequest('POST', '/');\n$request->getBody()->setField('foo', 'bar');\n$request->getBody()->addFile(new PostFile('file_key', fopen('/path/to/content', 'r')));\n```\n\n----------------------------------------\n\nTITLE: Enabling Deprecation Warnings in Guzzle\nDESCRIPTION: Code snippet showing how to enable E_USER_DEPRECATED warnings in Guzzle to identify usage of deprecated methods. This allows developers to identify code that needs updating.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n\\Guzzle\\Common\\Version::$emitWarnings = true;\n```\n\n----------------------------------------\n\nTITLE: Native Function Calls in Guzzle 7.0\nDESCRIPTION: Example showing the change in internal native function calls in Guzzle 7.0, where all functions are now prefixed with a slash for better method overloading protection.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// Before:\ncurl_version();\n\n// After:\n\\curl_version();\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Promise as Deferred Pattern in PHP\nDESCRIPTION: Shows how a promise in GuzzleHttp is also the deferred value, allowing direct resolution of the promise.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n$promise = new Promise();\n$promise->then(function ($value) { echo $value; });\n// The promise is the deferred value, so you can deliver a value to it.\n$promise->resolve('foo');\n// prints \"foo\"\n```\n\n----------------------------------------\n\nTITLE: Namespacing Flot Plugins with IIFE in JavaScript\nDESCRIPTION: Shows how to wrap a plugin in an Immediately Invoked Function Expression (IIFE) to avoid name collisions with other libraries and ensure jQuery compatibility.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/PLUGINS.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n(function ($) {\n    // plugin definition\n    // ...\n})(jQuery);\n```\n\n----------------------------------------\n\nTITLE: Prepending Content to PSR-7 HTTP Message Body by Rewriting in PHP\nDESCRIPTION: Illustrates how to prepend content to a PSR-7 message body by rewriting the entire content. This method involves reading the existing content, rewinding the stream, and writing new content followed by the original content.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n// assuming our response body stream only contains: \"abcd\"\n$body = $response->getBody();\n$body->rewind();\n$contents = $body->getContents(); // abcd\n// seeking the stream to beginning\n$body->rewind();\n$body->write('ef'); // stream contains \"efcd\"\n$body->write($contents); // stream contains \"efabcd\"\n```\n\n----------------------------------------\n\nTITLE: Appending Content to PSR-7 HTTP Message Body in PHP\nDESCRIPTION: Shows how to append content to a PSR-7 message body using the write() method of StreamInterface.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$response->getBody()->write('Hello'); // writing directly\n$body = $request->getBody(); // which is a `StreamInterface`\n$body->write('xxxxx');\n```\n\n----------------------------------------\n\nTITLE: Non-unwrapping Promise Resolution with wait(false)\nDESCRIPTION: Example showing how to force a promise to resolve without unwrapping its state by passing false to the wait() method, which prevents exceptions from being thrown.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$promise = new Promise();\n$promise->reject('foo');\n// This will not throw an exception. It simply ensures the promise has\n// been resolved.\n$promise->wait(false);\n```\n\n----------------------------------------\n\nTITLE: Implementing a Data Transformation Hook in Flot\nDESCRIPTION: Demonstrates how to use the processDatapoints hook to transform data before plotting. This example multiplies all y-coordinates by 2, showing how to traverse and modify the normalized data points.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_54\n\nLANGUAGE: javascript\nCODE:\n```\nfunction multiply(plot, series, datapoints) {\n    var points = datapoints.points, ps = datapoints.pointsize;\n    for (var i = 0; i < points.length; i += ps)\n        points[i + 1] *= 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Relativizing URIs in PHP using Guzzle PSR-7\nDESCRIPTION: Demonstrates how to use the UriResolver::relativize method to convert absolute URIs to relative references. This is useful for generating relative links in documents or creating self-contained downloadable archives.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\n$base = new Uri('http://example.com/a/b/');\necho UriResolver::relativize($base, new Uri('http://example.com/a/b/c'));  // prints 'c'.\necho UriResolver::relativize($base, new Uri('http://example.com/a/x/y'));  // prints '../x/y'.\necho UriResolver::relativize($base, new Uri('http://example.com/a/b/?q')); // prints '?q'.\necho UriResolver::relativize($base, new Uri('http://example.org/a/b/'));   // prints '//example.org/a/b/'.\n```\n\n----------------------------------------\n\nTITLE: Running OpenCart Locally with Docker on Windows\nDESCRIPTION: Instructions for running OpenCart locally using Docker on Windows. Requires Docker Desktop to be installed on the local machine.\nSOURCE: https://github.com/opencart/opencart/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* make sure you have Docker Desktop installed on your Local Machine\n* in the terminal in the file containing the projects run `docker-compose up -d`\n```\n\n----------------------------------------\n\nTITLE: Building AWS CRT PHP from Source on Windows\nDESCRIPTION: Complete batch commands sequence for building the AWS CRT PHP extension on Windows using Visual Studio 2019 with the PHP SDK.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\n> git clone --recursive https://github.com/awslabs/aws-crt-php.git\n> git clone https://github.com/microsoft/php-sdk-binary-tools.git C:\\php-sdk\n> C:\\php-sdk\\phpsdk-vs16-x64.bat\n\nC:\\php-sdk\\\n$ cd <your-path-to-aws-crt-php>\n\n<your-path-to-aws-crt-php>\\\n$ phpize\n\n# --with-prefix only required when your php runtime in system path is different than the runtime you wish to use.\n<your-path-to-aws-crt-php>\\\n$ configure --enable-awscrt=shared --with-prefix=<your-path-to-php-prefix>\n\n<your-path-to-aws-crt-php>\\\n$ nmake\n\n<your-path-to-aws-crt-php>\\\n$ nmake generate-php-ini\n\n# check .\\php-win.ini, it now has the full path to php_awscrt.dll that you can manually load to your php runtime, or you can run the following command to run tests and load the required native extension for awscrt.\n<your-path-to-aws-crt-php>\\\n$ .\\dev-scripts\\run_tests.bat <your-path-to-php-binary>\n```\n\n----------------------------------------\n\nTITLE: Implementing CachingStream for Seekable Access to Non-Seekable Streams in PHP\nDESCRIPTION: Demonstrates how to use CachingStream to enable seeking over previously read bytes on non-seekable streams. This is useful when transferring non-seekable content that needs to be rewound, like during HTTP redirects.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$original = Psr7\\Utils::streamFor(fopen('http://www.google.com', 'r'));\n$stream = new Psr7\\CachingStream($original);\n\n$stream->read(1024);\necho $stream->tell();\n// 1024\n\n$stream->seek(0);\necho $stream->tell();\n// 0\n```\n\n----------------------------------------\n\nTITLE: Handling Click Events in Flot Charts\nDESCRIPTION: This example demonstrates how to enable and handle click events on a Flot chart. It shows how to access the clicked coordinates and highlight the clicked data point.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n$.plot($(\"#placeholder\"), [ d ], { grid: { clickable: true } });\n\n$(\"#placeholder\").bind(\"plotclick\", function (event, pos, item) {\n    alert(\"You clicked at \" + pos.x + \", \" + pos.y);\n    // axis coordinates for other axes, if present, are in pos.x2, pos.x3, ...\n    // if you need global screen coordinates, they are pos.pageX, pos.pageY\n\n    if (item) {\n        highlight(item.series, item.datapoint);\n        alert(\"You clicked a point!\");\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Binding Custom Event Handlers in Flot\nDESCRIPTION: Shows how to use the bindEvents hook to add custom event handling to a Flot plot. This example adds a mousedown handler that displays the coordinates of the click position.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\nfunction (plot, eventHolder) {\n    eventHolder.mousedown(function (e) {\n        alert(\"You pressed the mouse at \" + e.pageX + \" \" + e.pageY);\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Series Options in Flot Charts\nDESCRIPTION: Defines the core configuration options for series styling in Flot charts, including lines, points, and bars properties. Contains settings for visibility, styling, dimensions, and positioning of chart elements.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nseries: {\n    lines, points, bars: {\n        show: boolean\n        lineWidth: number\n        fill: boolean or number\n        fillColor: null or color/gradient\n    }\n\n    lines, bars: {\n        zero: boolean\n    }\n\n    points: {\n        radius: number\n        symbol: \"circle\" or function\n    }\n\n    bars: {\n        barWidth: number\n        align: \"left\", \"right\" or \"center\"\n        horizontal: boolean\n    }\n\n    lines: {\n        steps: boolean\n    }\n\n    shadowSize: number\n    highlightColor: color or number\n}\n\ncolors: [ color1, color2, ... ]\n```\n\n----------------------------------------\n\nTITLE: Converting PSR-7 Streams to PHP Stream Resources with StreamWrapper\nDESCRIPTION: Demonstrates how to use StreamWrapper to convert a PSR-7 stream into a PHP native stream resource. This allows using PSR-7 streams with functions that require PHP stream resources.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7\\StreamWrapper;\n\n$stream = GuzzleHttp\\Psr7\\Utils::streamFor('hello!');\n$resource = StreamWrapper::getResource($stream);\necho fread($resource, 6); // outputs hello!\n```\n\n----------------------------------------\n\nTITLE: Setting Flot Plot Options\nDESCRIPTION: Demonstrates how to set plot options for Flot, showing an example that configures both lines and points to be visible for all series.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar options = {\n    series: {\n        lines: { show: true },\n        points: { show: true }\n    }\n};\n\t\n$.plot(placeholder, data, options);\n```\n\n----------------------------------------\n\nTITLE: Using FulfilledPromise for Pre-Resolved Values in PHP\nDESCRIPTION: Shows how to create a FulfilledPromise when you already have a value, which immediately invokes any fulfilled callbacks attached to it.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_14\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\FulfilledPromise;\n\n$promise = new FulfilledPromise('value');\n\n// Fulfilled callbacks are immediately invoked.\n$promise->then(function ($value) {\n    echo $value;\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Plot Initialization\nDESCRIPTION: JavaScript code showing the basic syntax for creating a Flot plot with data and options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n$.plot($(\"#placeholder\"), data, options);\n```\n\n----------------------------------------\n\nTITLE: Event System Usage in Guzzle 5.0\nDESCRIPTION: Demonstrates how event listeners were implemented in Guzzle 5.0 using the event system to modify requests before sending.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Event\\BeforeEvent;\n$client = new GuzzleHttp\\Client();\n// Get the emitter and listen to the before event.\n$client->getEmitter()->on('before', function (BeforeEvent $e) {\n    // Guzzle v5 events relied on mutation\n    $e->getRequest()->setHeader('X-Foo', 'Bar');\n});\n```\n\n----------------------------------------\n\nTITLE: Promise Forwarding with Multiple Promises\nDESCRIPTION: Example showing how to forward promises in a chain, where returning a promise in a 'then' callback causes subsequent promises to wait for the returned promise to be fulfilled.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise();\n$nextPromise = new Promise();\n\n$promise\n    ->then(function ($value) use ($nextPromise) {\n        echo $value;\n        return $nextPromise;\n    })\n    ->then(function ($value) {\n        echo $value;\n    });\n\n// Triggers the first callback and outputs \"A\"\n$promise->resolve('A');\n// Triggers the second callback and outputs \"B\"\n$nextPromise->resolve('B');\n```\n\n----------------------------------------\n\nTITLE: Accessing Point Offset in Flot.js Plot with Multiple Axes\nDESCRIPTION: Demonstrates how to calculate the offset of a data point within the placeholder div when working with multiple axes. The method returns an object with left and top properties representing the offset.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\no = pointOffset({ x: xpos, y: ypos, xaxis: 2, yaxis: 3 })\n// o.left and o.top now contains the offset within the div\n```\n\n----------------------------------------\n\nTITLE: Custom Unit Suffix Formatter for Flot Chart Ticks\nDESCRIPTION: Example of a custom tick formatter function that adds appropriate unit suffixes (B, kB, MB) based on the value magnitude.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_21\n\nLANGUAGE: js\nCODE:\n```\nfunction suffixFormatter(val, axis) {\n    if (val > 1000000)\n        return (val / 1000000).toFixed(axis.tickDecimals) + \" MB\";\n    else if (val > 1000)\n        return (val / 1000).toFixed(axis.tickDecimals) + \" kB\";\n    else\n        return val.toFixed(axis.tickDecimals) + \" B\";\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Plot Data Series in Flot.js\nDESCRIPTION: Shows how to retrieve the normalized data series from a Flot.js plot and iterate through them to access properties like color. This demonstrates how to inspect the internal data representation used by Flot.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\nvar series = plot.getData();\nfor (var i = 0; i < series.length; ++i)\n    alert(series[i].color);\n```\n\n----------------------------------------\n\nTITLE: Data Format Specification for Flot\nDESCRIPTION: Shows the structure of the datapoints.format array that specifies how data points are normalized and plotted on axes. This configuration controls data normalization and axis scaling behavior.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    x, y: boolean,\n    number: boolean,\n    required: boolean,\n    defaultValue: value,\n    autoscale: boolean\n}\n```\n\n----------------------------------------\n\nTITLE: Basic JMESPath Usage in PHP\nDESCRIPTION: Demonstrates how to use the JMESPath\\search function to extract elements from a PHP array using a JMESPath expression. This example shows searching for 'foo.*.baz' in a nested array structure.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/mtdowling/jmespath.php/README.rst#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nrequire 'vendor/autoload.php';\n\n$expression = 'foo.*.baz';\n\n$data = [\n    'foo' => [\n        'bar' => ['baz' => 1],\n        'bam' => ['baz' => 2],\n        'boo' => ['baz' => 3]\n    ]\n];\n\nJmesPath\\search($expression, $data);\n// Returns: [1, 2, 3]\n```\n\n----------------------------------------\n\nTITLE: Appending Values to PSR-7 Response Headers in PHP\nDESCRIPTION: Shows how to append an additional value to an existing header in a PSR-7 response object. This creates a new response with the appended header value.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$response->withAddedHeader('My-Custom-Header', 'The second message');\n```\n\n----------------------------------------\n\nTITLE: Complete Flot Data Specification Example\nDESCRIPTION: A complete example showing multiple data series with labels and coordinates, ready to be passed to the Flot plot function.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n[ { label: \"Foo\", data: [ [10, 1], [17, -14], [30, 5] ] },\n  { label: \"Bar\", data: [ [11, 13], [19, 11], [30, -7] ] }\n]\n```\n\n----------------------------------------\n\nTITLE: Complete Debug Plugin Implementation for Flot in JavaScript\nDESCRIPTION: A full example of a debug plugin that alerts series information. Demonstrates hooks usage, option handling, and proper plugin structure with versioning.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/PLUGINS.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n(function ($) {\n    function init(plot) {\n        var debugLevel = 1;\n\n        function checkDebugEnabled(plot, options) {\n            if (options.debug) {\n                debugLevel = options.debug;\n                plot.hooks.processDatapoints.push(alertSeries);\n            }\n        }\n\n        function alertSeries(plot, series, datapoints) {\n            var msg = \"series \" + series.label;\n            if (debugLevel > 1) {\n                msg += \" with \" + series.data.length + \" points\";\n                alert(msg);\n            }\n        }\n\n        plot.hooks.processOptions.push(checkDebugEnabled);\n    }\n\n    var options = { debug: 0 };\n      \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: \"simpledebug\",\n        version: \"0.1\"\n    });\n})(jQuery);\n```\n\n----------------------------------------\n\nTITLE: Series-Specific Options Structure for Flot Plugins in JavaScript\nDESCRIPTION: Demonstrates how to organize plugin options that should be applied to individual series. This example shows a downsample plugin with algorithm and maxpoints options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/PLUGINS.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar options = {\n    series: {\n        downsample: {\n            algorithm: null,\n            maxpoints: 1000\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling CKEditor-CodeMirror-Plugin in Configuration\nDESCRIPTION: This snippet shows how to enable the CodeMirror plugin in CKEditor's configuration file. It also includes an example for enabling the plugin in inline mode.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/plugins/codemirror/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.extraPlugins = 'codemirror';\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.extraPlugins = 'sourcedialog,codemirror';\n```\n\n----------------------------------------\n\nTITLE: Updating Event Listener Attachment in Guzzle 4.x\nDESCRIPTION: Shows how to migrate event listener attachment from Guzzle 3.x to 4.x syntax using the new Emitter interface instead of EventDispatcher.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$mock = new Mock();\n// 3.x\n$request->getEventDispatcher()->addSubscriber($mock);\n$request->getEventDispatcher()->removeSubscriber($mock);\n// 4.x\n$request->getEmitter()->attach($mock);\n$request->getEmitter()->detach($mock);\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Handling in Clipboard Plugin for CKEditor\nDESCRIPTION: This code snippet shows the configuration option for enabling or disabling built-in support for pasting and dropping images in the Clipboard plugin of CKEditor 4.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.clipboard_handleImages\n```\n\n----------------------------------------\n\nTITLE: Setting Editor to Read-Only Mode\nDESCRIPTION: Using editor.setReadOnly() method to make the editor read-only or editable. This updates the Backspace key state in keystrokeHandler.blockedKeystrokes.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_71\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.setReadOnly(true); // Make editor read-only\neditor.setReadOnly(false); // Make editor editable\n```\n\n----------------------------------------\n\nTITLE: Complete Flot Series Object Format\nDESCRIPTION: Illustrates the full format for a Flot series object with all possible configuration options including styling, labeling, and axis assignment.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    color: color or number\n    data: rawdata\n    label: string\n    lines: specific lines options\n    bars: specific bars options\n    points: specific points options\n    xaxis: number\n    yaxis: number\n    clickable: boolean\n    hoverable: boolean\n    shadowSize: number\n    highlightColor: color or number\n}\n```\n\n----------------------------------------\n\nTITLE: Working Directly with PSR-7 HTTP Message Body in PHP\nDESCRIPTION: Shows how to work directly with the body of a PSR-7 response object. This method is useful for performing few operations on the body.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$response->getBody()->write('hello');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Header Values as Array from PSR-7 Objects in PHP\nDESCRIPTION: Shows how to get an array of values from a header in both PSR-7 request and response objects using getHeader() method.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// getting value from request headers\n$request->getHeader('Content-Type'); // will return: [\"text/html\", \"charset=UTF-8\"]\n// getting value from response headers\n$response->getHeader('My-Custom-Header'); // will return:  [\"My Custom Message\",  \"The second message\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Axis in Flot (JavaScript)\nDESCRIPTION: This JavaScript code snippet demonstrates how to configure a time-based x-axis in Flot. It sets the axis mode to 'time' and specifies a custom time format for tick labels using the 'timeformat' option.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nxaxis: {\n    mode: \"time\",\n    timeformat: \"%Y/%m/%d\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Alignment Classes in CKEditor 4.4\nDESCRIPTION: Sets CSS classes for image alignment using the config.image2_alignClasses option. This replaces inline styles with classes for aligned images.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.image2_alignClasses = [ 'align-left', 'align-center', 'align-right' ];\n```\n\n----------------------------------------\n\nTITLE: Using Repository onWidget Method in CKEditor (JavaScript)\nDESCRIPTION: Shows how to use the new repository.onWidget() method introduced in CKEditor 4.5. This method provides a convenient way to listen to widget events through the repository.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.widgets.repository.onWidget('widgetCreated', function(evt) {\n  console.log('Widget created:', evt.widget);\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Dialog State in CKEditor Embed Plugin (JavaScript)\nDESCRIPTION: Demonstrates the usage of the new dialog#setState() method in the context of the Embed plugin dialog. This method is used to indicate that a resource is being loaded.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dialog.add('embed', function(editor) {\n  return {\n    // Dialog definition\n    onShow: function() {\n      this.setState(CKEDITOR.DIALOG_STATE_LOADING);\n      // Perform resource loading\n      this.setState(CKEDITOR.DIALOG_STATE_IDLE);\n    }\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Color Theme Configuration\nDESCRIPTION: Example of defining custom colors for data series using an array of hex color values. Shows how to set up a custom color theme for the chart.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\ncolors: [\"#d18b2c\", \"#dba255\", \"#919733\"]\n```\n\n----------------------------------------\n\nTITLE: Defining and Using Hooks in Flot\nDESCRIPTION: Demonstrates how to define a simple draw hook function and pass it to the Flot plotting library. This example shows the basic pattern for registering callback functions that modify the plotting process.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n// define a simple draw hook\nfunction hellohook(plot, canvascontext) { alert(\"hello!\"); };\n\n// pass it in, in an array since we might want to specify several\nvar plot = $.plot(placeholder, data, { hooks: { draw: [hellohook] } });\n\n// we can now find it again in plot.hooks.draw[0] unless a plugin\n// has added other hooks\n```\n\n----------------------------------------\n\nTITLE: Customizing Tick Labels in Flot Charts\nDESCRIPTION: Example of setting custom tick positions and labels on a Flot chart axis using an array of value-label pairs.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_18\n\nLANGUAGE: js\nCODE:\n```\nticks: [[0, \"zero\"], [1.2, \"one mark\"], [2.4, \"two marks\"]]\n```\n\n----------------------------------------\n\nTITLE: Configuring JavaScript Links in Anchor Tags in CKEditor\nDESCRIPTION: New configuration option to allow JavaScript code in href attributes of anchor tags. This improves flexibility for advanced link handling.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.linkJavaScriptLinksAllowed = true;\n```\n\n----------------------------------------\n\nTITLE: Drawing Horizontal Line in Flot Chart Background\nDESCRIPTION: This snippet demonstrates how to draw a horizontal line in the background of a Flot chart by setting the 'from' and 'to' values of the y-axis to the same value.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nmarkings: [ { yaxis: { from: 1, to: 1 } }, ... ]\n```\n\n----------------------------------------\n\nTITLE: Specifying Color Gradients in Flot Charts\nDESCRIPTION: This example shows how to define a color gradient for use in Flot charts. It specifies an array of colors to create a gradient effect.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n{ colors: [ color1, color2, ... ] }\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared Spaces in CKEditor (JavaScript)\nDESCRIPTION: Demonstrates the new ability to pass DOM elements to the config.sharedSpaces option in CKEditor 4.5. This allows for more flexible configuration of shared toolbar and bottom bar spaces.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.replace('editor', {\n  sharedSpaces: {\n    top: document.getElementById('toolbarContainer'),\n    bottom: document.getElementById('bottomBarContainer')\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Stream Decorators with StreamDecoratorTrait in PHP\nDESCRIPTION: Demonstrates how to create a custom stream decorator using the StreamDecoratorTrait. This example implements a stream that executes a callback when EOF is reached.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nuse Psr\\Http\\Message\\StreamInterface;\nuse GuzzleHttp\\Psr7\\StreamDecoratorTrait;\n\nclass EofCallbackStream implements StreamInterface\n{\n    use StreamDecoratorTrait;\n\n    private $callback;\n\n    private $stream;\n\n    public function __construct(StreamInterface $stream, callable $cb)\n    {\n        $this->stream = $stream;\n        $this->callback = $cb;\n    }\n\n    public function read($length)\n    {\n        $result = $this->stream->read($length);\n\n        // Invoke the callback when EOF is hit.\n        if ($this->eof()) {\n            ($this->callback)();\n        }\n\n        return $result;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Exception from wait() on Rejected Promise\nDESCRIPTION: Example demonstrating that calling wait() on a rejected promise throws an exception. If the rejection reason is not an Exception, a RejectionException is thrown.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$promise = new Promise();\n$promise->reject('foo');\n$promise->wait();\n```\n\n----------------------------------------\n\nTITLE: Generating Vertical Stripes in Flot Chart Background\nDESCRIPTION: This function creates vertical stripes in the background of a Flot chart. It generates markings for every other unit on the x-axis within the visible range.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nmarkings: function (axes) {\n    var markings = [];\n    for (var x = Math.floor(axes.xaxis.min); x < axes.xaxis.max; x += 2)\n        markings.push({ xaxis: { from: x, to: x + 1 } });\n    return markings;\n}\n```\n\n----------------------------------------\n\nTITLE: Using CKEDITOR.tools.getCookie and setCookie Methods\nDESCRIPTION: New methods introduced in CKEditor 4.5.6 for accessing cookies. These methods allow you to get and set cookie values within the CKEditor environment.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example of using the new cookie methods\nCKEDITOR.tools.setCookie('myCookieName', 'cookieValue');\nvar cookieValue = CKEDITOR.tools.getCookie('myCookieName');\n```\n\n----------------------------------------\n\nTITLE: Simple Line Plot Example\nDESCRIPTION: JavaScript code demonstrating how to create a simple line plot from point (0,0) to (1,1) with a maximum y-axis value of 1.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n$.plot($(\"#placeholder\"), [ [[0, 0], [1, 1]] ], { yaxis: { max: 1 } });\n```\n\n----------------------------------------\n\nTITLE: Customizing Month Names in Flot (JavaScript)\nDESCRIPTION: This JavaScript code snippet shows how to customize month names for a time-based axis in Flot. It provides an example of setting Danish month names using the 'monthNames' option.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nmonthNames: [\"jan\", \"feb\", \"mar\", \"apr\", \"maj\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n```\n\n----------------------------------------\n\nTITLE: Basic Series Configuration Example\nDESCRIPTION: Demonstrates how to configure basic line and point series with fill and transparency options. Shows practical implementation of series options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nvar options = {\n    series: {\n        lines: { show: true, fill: true, fillColor: \"rgba(255, 255, 255, 0.8)\" },\n        points: { show: true, fill: false }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Font Options for Flot Chart Axes\nDESCRIPTION: Object structure for configuring font properties on chart axes, including size, style, weight, family, variant and color settings.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_14\n\nLANGUAGE: js\nCODE:\n```\n{\n    size: 11,\n    lineHeight: 13,\n    style: \"italic\",\n    weight: \"bold\",\n    family: \"sans-serif\",\n    variant: \"small-caps\",\n    color: \"#545454\"\n}\n```\n\n----------------------------------------\n\nTITLE: Resolving a Promise with Value Chaining\nDESCRIPTION: Example demonstrating how to resolve a promise and chain multiple 'then' callbacks. The return value from each callback is passed to the next callback in the chain.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise();\n$promise\n    ->then(function ($value) {\n        // Return a value and don't break the chain\n        return \"Hello, \" . $value;\n    })\n    // This then is executed after the first then and receives the value\n    // returned from the first then.\n    ->then(function ($value) {\n        echo $value;\n    });\n\n// Resolving the promise triggers the $onFulfilled callbacks and outputs\n// \"Hello, reader.\"\n$promise->resolve('reader.');\n```\n\n----------------------------------------\n\nTITLE: Updating Guzzle ExponentialBackoffPlugin Usage in PHP\nDESCRIPTION: This snippet demonstrates the changes in using the Guzzle ExponentialBackoffPlugin, which has been renamed to BackoffPlugin. The usage has changed to use a factory method for creating the plugin instance.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_16\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Http\\Plugin\\ExponentialBackoffPlugin;\n\n$backoffPlugin = new ExponentialBackoffPlugin($maxRetries, array_merge(\n        ExponentialBackoffPlugin::getDefaultFailureCodes(), array(429)\n    ));\n\n$client->addSubscriber($backoffPlugin);\n```\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Plugin\\Backoff\\BackoffPlugin;\nuse Guzzle\\Plugin\\Backoff\\HttpBackoffStrategy;\n\n// Use convenient factory method instead -- see implementation for ideas of what\n// you can do with chaining backoff strategies\n$backoffPlugin = BackoffPlugin::getExponentialBackoff($maxRetries, array_merge(\n        HttpBackoffStrategy::getDefaultFailureCodes(), array(429)\n    ));\n$client->addSubscriber($backoffPlugin);\n```\n\n----------------------------------------\n\nTITLE: Flot Data Series Array Format\nDESCRIPTION: Shows the basic format for Flot data as an array of series. Each series can be represented in different ways.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n[ series1, series2, ... ]\n```\n\n----------------------------------------\n\nTITLE: Splitting HTTP Headers into Individual Values with GuzzleHttp\\Psr7\\Header\nDESCRIPTION: Demonstrates how to use Header::splitList() to split a HTTP header with comma-separated values into individual items. This is useful for headers like accept, cache-control, and if-none-match.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$knownEtags = Header::splitList($request->getHeader('if-none-match'));\n```\n\n----------------------------------------\n\nTITLE: Flot Legend Label Formatter Example\nDESCRIPTION: Demonstrates how to use a custom label formatter function to make legend labels clickable by wrapping them in anchor tags.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nlabelFormatter: function(label, series) {\n    // series is the series object for the label\n    return '<a href=\"#' + label + '\">' + label + '</a>';\n}\n```\n\n----------------------------------------\n\nTITLE: Structure of Clicked Item Object in Flot Charts\nDESCRIPTION: This snippet shows the structure of the 'item' object passed to the click event handler in Flot charts. It contains information about the clicked data point and its series.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nitem: {\n    datapoint: the point, e.g. [0, 2]\n    dataIndex: the index of the point in the data array\n    series: the series object\n    seriesIndex: the index of the series\n    pageX, pageY: the global screen coordinates of the point\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Margins for Flot Chart Grid\nDESCRIPTION: This snippet demonstrates how to set custom margins for each side of the Flot chart grid using an object with top, left, bottom, and right properties.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nmargin: {\n    top: top margin in pixels\n    left: left margin in pixels\n    bottom: bottom margin in pixels\n    right: right margin in pixels\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Gradients to Bars in Flot Charts\nDESCRIPTION: This snippet demonstrates how to apply a gradient fill to bars in a Flot chart. It creates a fade effect from top to bottom of each bar.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nbars: {\n    show: true,\n    lineWidth: 0,\n    fill: true,\n    fillColor: { colors: [ { opacity: 0.8 }, { opacity: 0.1 } ] }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Event Listener Functions in Guzzle 4.x\nDESCRIPTION: Demonstrates migration from addListener() to on() method for adding event listeners in Guzzle 4.x.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n// 3.x\n$request->getEventDispatcher()->addListener('foo', function (Event $event) { /* ... */ } );\n// 4.x\n$request->getEmitter()->on('foo', function (Event $event, $name) { /* ... */ } );\n```\n\n----------------------------------------\n\nTITLE: Flot Legend Custom Sorting Example\nDESCRIPTION: Shows how to create a custom comparator function for sorting legend entries alphabetically in ascending order.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nsorted: function(a, b) {\n    // sort alphabetically in ascending order\n    return a.label == b.label ? 0 : (\n        a.label > b.label ? 1 : -1\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Tick Size for Time Axis (JavaScript)\nDESCRIPTION: This JavaScript code snippet demonstrates how to set the minimum tick size for a time-based axis in Flot. It specifies that the minimum interval between ticks should be 1 month.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nminTickSize: [1, \"month\"]\n```\n\n----------------------------------------\n\nTITLE: Disabling Interactivity for Specific Series in Flot Charts\nDESCRIPTION: This snippet demonstrates how to disable interactivity (hovering and clicking) for a specific data series in a Flot chart by setting 'clickable' to false in the series options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n{ data: [...], label: \"Foo\", clickable: false }\n```\n\n----------------------------------------\n\nTITLE: Defining Data Series in Flot Charts\nDESCRIPTION: This example shows how to define a data series for a Flot chart. It specifies a label and an array of data points.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n$.plot($(\"#placeholder\"), [ { label: \"Foo\", data: [[0, 10], [7, 3]] } ], ...);\n```\n\n----------------------------------------\n\nTITLE: Creating Fake Selection in CKEditor 4.3 Beta\nDESCRIPTION: Shows how to create a virtual selection of any element while keeping the real selection hidden using the new fake() method introduced in CKEditor 4.3 Beta.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nselection.fake()\n```\n\n----------------------------------------\n\nTITLE: Configuring iframe_attributes in CKEditor 4\nDESCRIPTION: Configuration option for the Iframe Dialog plugin to override the default sandbox attribute behavior. This option can be used to customize security restrictions on iframe elements.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.iframe_attributes\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Iterative Promise Resolution in PHP\nDESCRIPTION: Shows how promise chaining is handled iteratively with constant stack size, even with thousands of chained promises.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire 'vendor/autoload.php';\n\nuse GuzzleHttp\\Promise\\Promise;\n\n$parent = new Promise();\n$p = $parent;\n\nfor ($i = 0; $i < 1000; $i++) {\n    $p = $p->then(function ($v) {\n        // The stack size remains constant (a good thing)\n        echo xdebug_get_stack_depth() . ', ';\n        return $v + 1;\n    });\n}\n\n$parent->resolve(0);\nvar_dump($p->wait()); // int(1000)\n```\n\n----------------------------------------\n\nTITLE: Accessing Editor Content in CKEditor 4 (JavaScript)\nDESCRIPTION: Demonstrates usage of the getData() method to retrieve editor content. This method is mentioned in the context of bug fixes related to content retrieval.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar content = editor.getData();\n```\n\n----------------------------------------\n\nTITLE: Finding DOM Elements in CKEditor 4.3 Beta\nDESCRIPTION: Illustrates the usage of new methods for finding DOM elements introduced in CKEditor 4.3 Beta, such as document.find() and document.findOne().\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\ndocument.find()\ndocument.findOne()\n```\n\n----------------------------------------\n\nTITLE: Configuring styleSet in CKEditor 4\nDESCRIPTION: Configuration option for the Styles Combo plugin to define custom styles, with the ability to indicate the language of styles in the dropdown menu.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.styleSet\n```\n\n----------------------------------------\n\nTITLE: Configuring embed_keepOriginalContent in CKEditor 4\nDESCRIPTION: Configuration option for the Media Embed plugin to control whether the plugin regenerates the entire content of embed widgets or preserves original content.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.embed_keepOriginalContent\n```\n\n----------------------------------------\n\nTITLE: Custom Point Symbol Implementation\nDESCRIPTION: Shows how to implement a custom cross symbol for data points using canvas drawing operations. Includes context parameters and sizing calculations.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nfunction cross(ctx, x, y, radius, shadow) {\n    var size = radius * Math.sqrt(Math.PI) / 2;\n    ctx.moveTo(x - size, y - size);\n    ctx.lineTo(x + size, y + size);\n    ctx.moveTo(x - size, y + size);\n    ctx.lineTo(x + size, y - size);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring uploadImage_supportedTypes in CKEditor 4\nDESCRIPTION: Configuration option for the Upload Image plugin to specify which image formats are accepted for upload. This allows customization of supported image file types.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.uploadImage_supportedTypes\n```\n\n----------------------------------------\n\nTITLE: Reversing Y-Axis Direction in Flot\nDESCRIPTION: Example showing how to reverse the direction of a y-axis in Flot charts using transform and inverseTransform functions.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_16\n\nLANGUAGE: js\nCODE:\n```\nyaxis: {\n    transform: function (v) { return -v; },\n    inverseTransform: function (v) { return -v; }\n}\n```\n\n----------------------------------------\n\nTITLE: Exception Handling in Promise wait() Function\nDESCRIPTION: Example showing how exceptions in a wait function cause the promise to be rejected and the exception to be thrown when wait() is called.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$promise = new Promise(function () use (&$promise) {\n    throw new Exception('foo');\n});\n\n$promise->wait(); // throws the exception.\n```\n\n----------------------------------------\n\nTITLE: Using versionCheck configuration in CKEditor 4\nDESCRIPTION: Configuration option for controlling the notification system that informs users about the editor version being up-to-date and secure.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.versionCheck\n```\n\n----------------------------------------\n\nTITLE: Example of config.tabletools_scopedHeaders Configuration Option in CKEditor 4.20\nDESCRIPTION: Configuration option that controls the behavior of table headers with and without the scope attribute. This was added in CKEditor 4.20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.tabletools_scopedHeaders`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-tabletools_scopedHeaders)\n```\n\n----------------------------------------\n\nTITLE: Example of Autocomplete followingSpace Configuration Option in CKEditor 4.20\nDESCRIPTION: Configuration option for the Autocomplete plugin that finishes an accepted match with a space. This API change was introduced in CKEditor 4.20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n[`followingSpace`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_plugins_autocomplete_configDefinition.html#property-followingSpace)\n```\n\n----------------------------------------\n\nTITLE: Using DroppingStream to Limit Data Size in PHP\nDESCRIPTION: Shows how to create a DroppingStream that starts dropping data once the size of the underlying stream becomes too full. This helps prevent memory issues when dealing with large data streams.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n// Create an empty stream\n$stream = Psr7\\Utils::streamFor();\n\n// Start dropping data when the stream has more than 10 bytes\n$dropping = new Psr7\\DroppingStream($stream, 10);\n\n$dropping->write('01234567890123456789');\necho $stream; // 0123456789\n```\n\n----------------------------------------\n\nTITLE: Example of autoParagraph Configuration Option in CKEditor\nDESCRIPTION: Configuration option that controls whether CKEditor automatically creates paragraph elements. This was referenced in a fixed issue for CKEditor 4.19.1.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n[autoParagraph](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-autoParagraph)\n```\n\n----------------------------------------\n\nTITLE: Manually Setting Tick Values in Flot Charts\nDESCRIPTION: Example of explicitly setting tick positions on a Flot chart axis using an array of values.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_17\n\nLANGUAGE: js\nCODE:\n```\nticks: [0, 1.2, 2.4]\n```\n\n----------------------------------------\n\nTITLE: Setting Background Gradient for Flot Chart Grid\nDESCRIPTION: This snippet demonstrates how to set a background gradient for the grid of a Flot chart. It creates a gradient from black to gray.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\ngrid: {\n    backgroundColor: { colors: [\"#000\", \"#999\"] }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting CKEditor Enter Mode to DIV\nDESCRIPTION: Configuration setting that determines the element created when pressing Enter in CKEditor, with ENTER_DIV creating <div> elements.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.enterMode = CKEDITOR.ENTER_DIV;\n```\n\n----------------------------------------\n\nTITLE: Registering Callbacks with Promise's then Method\nDESCRIPTION: Example showing how to register fulfillment and rejection callbacks with a Promise object's then method. The callbacks are triggered when the promise is resolved.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\n\n$promise = new Promise();\n$promise->then(\n    // $onFulfilled\n    function ($value) {\n        echo 'The promise was fulfilled.';\n    },\n    // $onRejected\n    function ($reason) {\n        echo 'The promise was rejected.';\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Captioned Image Class in CKEditor 4.4\nDESCRIPTION: Sets the class for captioned images using the config.image2_captionedClass option. This is recommended for backward compatibility when upgrading to CKEditor 4.4.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.image2_captionedClass = 'caption';\n```\n\n----------------------------------------\n\nTITLE: Applying Style to Editor Content in CKEditor 4.4\nDESCRIPTION: Demonstrates the usage of CKEDITOR.editor.applyStyle() method to apply a style to the editor content. This method was introduced as part of the widget styles feature.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.applyStyle(style);\n```\n\n----------------------------------------\n\nTITLE: Configuring colorButton_contentsCss in CKEditor 4\nDESCRIPTION: Configuration option for the Color Button plugin to add custom CSS to the color button menu content, allowing for custom styling of the color picker interface.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.colorButton_contentsCss\n```\n\n----------------------------------------\n\nTITLE: Creating a Logarithmic X-Axis in Flot\nDESCRIPTION: Example of using the transform and inverseTransform functions to create a logarithmic x-axis scale in a Flot chart.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_15\n\nLANGUAGE: js\nCODE:\n```\nxaxis: {\n    transform: function (v) { return Math.log(v); },\n    inverseTransform: function (v) { return Math.exp(v); }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Editor Title in CKEditor Preview Plugin\nDESCRIPTION: This code snippet demonstrates how to access the editor's title property, which is now used by the Preview plugin for the title of the preview window in CKEditor 4.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor#title\n```\n\n----------------------------------------\n\nTITLE: Removing Style from Editor Content in CKEditor 4.4\nDESCRIPTION: Shows how to use CKEDITOR.editor.removeStyle() method to remove a style from the editor content. This method complements the applyStyle() method for widget styles.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.removeStyle(style);\n```\n\n----------------------------------------\n\nTITLE: Example of CKEDITOR.tools.convertToPx Method in CKEditor\nDESCRIPTION: Utility method for converting various CSS length units to pixels. This was referenced in a fixed issue for CKEditor 4.19.1 where it gave invalid results if the helper calculator element was deleted from the DOM.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n[`CKEDITOR.tools#convertToPx()`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_tools.html#method-convertToPx)\n```\n\n----------------------------------------\n\nTITLE: Adding External Plugins in CKEditor 4.2.2\nDESCRIPTION: Shows how to add external plugins using the addExternal() method, which now handles paths including file names as specified in CKEditor 4.2.2 fix.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_62\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.plugins.addExternal()\n```\n\n----------------------------------------\n\nTITLE: Prepending Content to PSR-7 HTTP Message Body Using String Manipulation in PHP\nDESCRIPTION: Demonstrates an alternative method to prepend content to a PSR-7 message body by manipulating the content as a string before writing it back to the stream.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$body = $response->getBody();\n$body->rewind();\n$contents = $body->getContents(); // efabcd\n$contents = 'ef'.$contents;\n$body->rewind();\n$body->write($contents);\n```\n\n----------------------------------------\n\nTITLE: Using Custom EofCallbackStream in PHP\nDESCRIPTION: Shows how to use the custom EofCallbackStream decorator in practice. The example demonstrates attaching a callback that triggers when the end of the stream is reached.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$original = Psr7\\Utils::streamFor('foo');\n\n$eofStream = new EofCallbackStream($original, function () {\n    echo 'EOF!';\n});\n\n$eofStream->read(2);\n$eofStream->read(1);\n// echoes \"EOF!\"\n$eofStream->seek(0);\n$eofStream->read(3);\n// echoes \"EOF!\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Color Button Colors in CKEditor\nDESCRIPTION: Configuration option for the Color Button plugin that allows defining custom colors in the color palette.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.colorButton_colors\n```\n\n----------------------------------------\n\nTITLE: Handling Required Attribute in CKEditor 4\nDESCRIPTION: Event handler for the editor.required event that is triggered when working with textarea elements that have the required attribute. This was introduced in CKEditor 4.2.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_66\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.on('required', function(evt) {\n    // Handle required validation\n});\n```\n\n----------------------------------------\n\nTITLE: Simple Flot Series Object Example\nDESCRIPTION: A simple example of a Flot series object with just label and data properties, which are the most commonly used options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    label: \"y = 3\",\n    data: [[0, 3], [10, 3]]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Color Button in CKEditor 4 (JavaScript)\nDESCRIPTION: Sets the config option to hide the \"Automatic\" option in the color picker dialog. This option allows customizing the color selection UI.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.colorButton_enableAutomatic = false;\n```\n\n----------------------------------------\n\nTITLE: Default Tick Formatter Function in Flot\nDESCRIPTION: The default tick formatter function used by Flot to format axis tick labels, showing how to access axis properties.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_20\n\nLANGUAGE: js\nCODE:\n```\nfunction formatter(val, axis) {\n    return val.toFixed(axis.tickDecimals);\n}\n```\n\n----------------------------------------\n\nTITLE: Adding HTML Parser Filter Rules in CKEditor 4.3 Beta\nDESCRIPTION: Demonstrates how to add filter rules that apply to all elements, including non-editable ones, using the addRules() method with an additional argument in CKEditor 4.3 Beta.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nfilter.addRules()\n```\n\n----------------------------------------\n\nTITLE: Updating Undo Manager State in CKEditor\nDESCRIPTION: The undoManager.update() method refreshes the command state for undo/redo operations. CKEditor 4.1.1 fixed an issue where this didn't properly refresh the command state.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_75\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.undoManager.update();\n```\n\n----------------------------------------\n\nTITLE: Custom Pi-Based Tick Generator Function for Flot Charts\nDESCRIPTION: Example of a custom tick generator function that creates ticks at multiples of π, suitable for trigonometric functions.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_19\n\nLANGUAGE: js\nCODE:\n```\nfunction piTickGenerator(axis) {\n    var res = [], i = Math.floor(axis.min / Math.PI);\n    do {\n        var v = i * Math.PI;\n        res.push([v, i + \"\\u03c0\"]);\n        ++i;\n    } while (v < axis.max);\n    return res;\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Tick Formatter for Date Display (JavaScript)\nDESCRIPTION: This JavaScript code snippet shows how to create a custom tick formatter function for a time-based axis in Flot. It formats the date to display as 'day/month' (e.g., 24/12 for December 24).\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\ntickFormatter: function (val, axis) {\n    var d = new Date(val);\n    return d.getUTCDate() + \"/\" + (d.getUTCMonth() + 1);\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Weekday Names in Flot (JavaScript)\nDESCRIPTION: This JavaScript code snippet demonstrates how to customize weekday names for a time-based axis in Flot. It provides an example of setting French weekday names using the 'dayNames' option.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\ndayNames: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"]\n```\n\n----------------------------------------\n\nTITLE: Setting Tick Count for Flot Axis (JavaScript)\nDESCRIPTION: This snippet shows the updated syntax for specifying the number of ticks on an axis in Flot. It demonstrates the change from using 'noTicks' to simply specifying the number as 'ticks'.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nxaxis: { ticks: 10 }\n```\n\n----------------------------------------\n\nTITLE: Using Advanced Content Filter with ShiftEnterMode\nDESCRIPTION: Setting up the Advanced Content Filter to register a default rule for config.shiftEnterMode configuration to properly handle element filtering.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_69\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.shiftEnterMode = CKEDITOR.ENTER_BR;\n```\n\n----------------------------------------\n\nTITLE: Adding Custom CSS to Editor Content in CKEditor 4.4\nDESCRIPTION: Uses the editor.addContentsCss() method to add custom CSS files to the editor content. This allows for custom styling of editor content.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.addContentsCss( '/css/custom.css' );\n```\n\n----------------------------------------\n\nTITLE: Inserting Elements into Range in CKEditor 4.3 Beta\nDESCRIPTION: Shows how to insert an element into a specific range using the new insertElementIntoRange() method introduced in CKEditor 4.3 Beta.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\neditable.insertElementIntoRange()\n```\n\n----------------------------------------\n\nTITLE: Retrieving PSR-7 HTTP Message Body Contents in PHP\nDESCRIPTION: Demonstrates how to get the contents of a PSR-7 stream. It's important to rewind the stream before getting contents to ensure all data is retrieved.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$body = $response->getBody();\n$body->rewind(); // or $body->seek(0);\n$bodyText = $body->getContents();\n```\n\n----------------------------------------\n\nTITLE: Creating a Flot Plot using jQuery Chaining\nDESCRIPTION: An alternative syntax for creating a Flot plot using jQuery's chainable methods, allowing access to the plot object via the data attribute.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar plot = $(\"#placeholder\").plot(data, options).data(\"plot\");\n```\n\n----------------------------------------\n\nTITLE: Setting Editor Content with setData Method\nDESCRIPTION: Using the editor.setData() method to programmatically set the editor's content. This had a bug in Firefox and IE where no selection was made on the editable element after execution.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_67\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.setData('<p>New content</p>');\n```\n\n----------------------------------------\n\nTITLE: Specifying Gradient Styles in Flot\nDESCRIPTION: Example of using a gradient style specification with brightness and opacity parameters in Flot charts.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{brightness: x, opacity: y }\n```\n\n----------------------------------------\n\nTITLE: Inserting Elements into CKEditor\nDESCRIPTION: Fix for the insertElement() method when there is no selection in the editor. This prevents exceptions and ensures proper element insertion.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.insertElement(CKEDITOR.dom.element.createFromHtml('<p>New content</p>'));\n```\n\n----------------------------------------\n\nTITLE: Example of config.removeButtons Configuration Option Enhancement in CKEditor 4.20\nDESCRIPTION: Enhanced configuration option that now allows providing a list of buttons as an array. This API change was introduced in CKEditor 4.20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.removeButtons`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-removeButtons)\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEDITOR with ENTER_BR Mode\nDESCRIPTION: Example of setting the enterMode configuration option to CKEDITOR.ENTER_BR, which affects how line breaks are handled in the editor.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.enterMode = CKEDITOR.ENTER_BR\n```\n\n----------------------------------------\n\nTITLE: Defining Complex Color Gradients in Flot Charts\nDESCRIPTION: This example shows how to create more complex color gradients in Flot charts by specifying opacity and brightness for each color stop.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n{ colors: [{ opacity: 0.8 }, { brightness: 0.6, opacity: 0.8 } ] }\n```\n\n----------------------------------------\n\nTITLE: Adding an Iframe to a Dialog in CKEditor 4\nDESCRIPTION: The CKEDITOR.dialog.addIframe() method allows adding iframe elements to dialog windows. Version 4.1.3 fixed an issue with incorrect iframe sizing.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_68\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dialog.addIframe('myDialog', 'My Frame', 'frame.html', 800, 600);\n```\n\n----------------------------------------\n\nTITLE: Specifying Axis Range in Flot (JavaScript)\nDESCRIPTION: This snippet demonstrates how to specify a range on axes for markings in Flot. It shows the new syntax for defining colored areas (previously called coloredAreas) as ranges on the axes.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n{ xaxis: { from: 0, to: 10 }}\n```\n\n----------------------------------------\n\nTITLE: Disabling Table Selection for Specific Tables\nDESCRIPTION: Using a data attribute to mark specific tables to be ignored by the Table Selection plugin.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_31\n\nLANGUAGE: HTML\nCODE:\n```\ndata-cke-tableselection-ignored\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Style Handler in CKEditor 4.4\nDESCRIPTION: Uses CKEDITOR.style.addCustomHandler() to register a custom style handler. This method was introduced to support applying styles to widgets.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.style.addCustomHandler()\n```\n\n----------------------------------------\n\nTITLE: Example of entities_processNumerical Configuration Option in CKEditor\nDESCRIPTION: Configuration option for processing numerical entities. This was referenced in a fixed issue for CKEditor 4.20 where some entities were wrongly encoded when this option was set to true.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n[`entities_processNumerical = true`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-entities_processNumerical)\n```\n\n----------------------------------------\n\nTITLE: Using AstRuntime in PHP for JMESPath Evaluation\nDESCRIPTION: Demonstrates how to use the AstRuntime class to evaluate JMESPath expressions. This runtime parses and caches the AST in memory, suitable for low to moderate expression reuse.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/mtdowling/jmespath.php/README.rst#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$runtime = new JmesPath\\AstRuntime();\n$runtime('foo.bar', ['foo' => ['bar' => 'baz']]);\n// > 'baz'\n```\n\n----------------------------------------\n\nTITLE: Selecting All Languages for Highlight.js Download in JavaScript\nDESCRIPTION: This JavaScript snippet automates the process of selecting all language checkboxes on the Highlight.js download page. It uses a querySelectorAll to target all checkbox inputs and sets their checked property to true.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/daux_libraries/README.md#2025-04-19_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n$$(\"input[type=checkbox]\").forEach(function(checkbox) { checkbox.checked=true; })\n```\n\n----------------------------------------\n\nTITLE: Default Format Array for Data Points in Flot\nDESCRIPTION: Illustrates the default format array used by Flot for typical 2D plotting. Each point has an x-coordinate and a y-coordinate, both required to be numeric values.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    { x: true, number: true, required: true },\n    { y: true, number: true, required: true }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Active Enter Mode in CKEditor 4.3 Beta\nDESCRIPTION: Demonstrates how to dynamically change the Enter mode in CKEditor 4.3 Beta using the new setActiveEnterMode() method. This allows adjusting editor behavior based on context.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.setActiveEnterMode()\n```\n\n----------------------------------------\n\nTITLE: Custom Evaluator for node.getAscendant() Method in JavaScript\nDESCRIPTION: Added functionality to pass a custom evaluator to the node.getAscendant() method, allowing for more flexible ancestor node selection.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode.getAscendant(function(node) {\n    // Custom evaluation logic\n    return true; // or false\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Attribute for Preloaded Language in CKEditor\nDESCRIPTION: Fix for setting the 'dir' attribute when preloading a language in CKEDITOR.lang. This ensures proper text direction for different languages.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.lang.load('ar', 'ar', function() {\n    console.log(CKEDITOR.lang.ar.dir); // Outputs: 'rtl'\n});\n```\n\n----------------------------------------\n\nTITLE: Adding and Removing Classes in CKEditor DOM Elements\nDESCRIPTION: Enhancement to make element.addClass() chainable, similar to element.removeClass(). This improves consistency and allows for more concise code when manipulating element classes.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nelement.addClass('class1').addClass('class2');\nelement.removeClass('class1').removeClass('class2');\n```\n\n----------------------------------------\n\nTITLE: Rejection Forwarding with RejectedPromise\nDESCRIPTION: Example demonstrating how to forward rejections down the promise chain by returning a RejectedPromise in a callback.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\Promise;\nuse GuzzleHttp\\Promise\\RejectedPromise;\n\n$promise = new Promise();\n$promise->then(null, function ($reason) {\n    return new RejectedPromise($reason);\n})->then(null, function ($reason) {\n    assert($reason === 'Error!');\n});\n\n$promise->reject('Error!');\n```\n\n----------------------------------------\n\nTITLE: Configuring Enhanced Image Maximum Size in CKEditor\nDESCRIPTION: Configuration option for the Enhanced Image plugin that allows setting a maximum size that an image can be resized to with the resizer.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.image2_maxSize\n```\n\n----------------------------------------\n\nTITLE: Example of config.editorplaceholder_delay Configuration Option in CKEditor 4.19.1\nDESCRIPTION: Configuration option for delaying the placeholder before it is toggled when changing editor content. This API change was introduced in CKEditor 4.19.1.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.editorplaceholder_delay`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-editorplaceholder_delay)\n```\n\n----------------------------------------\n\nTITLE: Basic Flot Plugin Structure in JavaScript\nDESCRIPTION: Demonstrates the fundamental structure for creating a Flot plugin with an initialization function. The plugin adds a custom attribute to the plot object.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/PLUGINS.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction myCoolPluginInit(plot) {\n    plot.coolstring = \"Hello!\";\n};\n\n$.plot.plugins.push({ init: myCoolPluginInit, options: { ... } });\n\n// if $.plot is called, it will return a plot object with the\n// attribute \"coolstring\"\n```\n\n----------------------------------------\n\nTITLE: Listing CSS Components of Moono-lisa Skin for CKEditor 4\nDESCRIPTION: This snippet outlines the various CSS files that compose the Moono-lisa skin, including their purposes and loading behavior. It covers the main CSS file and its dependencies for different UI components.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/skins/moono-lisa/readme.md#2025-04-19_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\neditor.css: the main CSS file. It's simply loading several other files, for easier maintenance,\nmainui.css: the file contains styles of entire editor outline structures,\ntoolbar.css: the file contains styles of the editor toolbar space (top),\nrichcombo.css: the file contains styles of the rich combo ui elements on toolbar,\npanel.css: the file contains styles of the rich combo drop-down, it's not loaded\nuntil the first panel open up,\nelementspath.css: the file contains styles of the editor elements path bar (bottom),\nmenu.css: the file contains styles of all editor menus including context menu and button drop-down,\nit's not loaded until the first menu open up,\ndialog.css: the CSS files for the dialog UI, it's not loaded until the first dialog open,\nreset.css: the file defines the basis of style resets among all editor UI spaces,\npreset.css: the file defines the default styles of some UI elements reflecting the skin preference,\neditor_XYZ.css and dialog_XYZ.css: browser specific CSS hacks.\n```\n\n----------------------------------------\n\nTITLE: Example of Dialog Validation Methods in CKEditor\nDESCRIPTION: Methods for validating dialog input values. These were mentioned in fixed issues for CKEditor 4.19.1 related to incorrect function composition and parameter value propagation.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n[`dialog.validate#functions`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dialog_validate.html#method-functions)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[dialog.validate](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dialog_validate.html)\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Flot Chart Axis Labels\nDESCRIPTION: Example of the HTML structure generated by Flot for x-axis labels, showing the CSS classes applied to label containers for styling purposes.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<div class='flot-x-axis flot-x1-axis'>\n    <div class='flot-tick-label'>January 2013</div>\n    ...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Preserving Zero Margins in Paste from Word Plugin\nDESCRIPTION: Configuration option that allows keeping any margin-*: 0 style that would otherwise be removed when pasting content with the Paste from Word plugin.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.pasteFromWord_keepZeroMargins\n```\n\n----------------------------------------\n\nTITLE: Checking for File Transfer in CKEditor Clipboard Plugin\nDESCRIPTION: This code snippet shows a new method added to the clipboard data transfer object to check if the current transfer operation is a file transfer in CKEditor 4.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.plugins.clipboard.dataTransfer#isFileTransfer()\n```\n\n----------------------------------------\n\nTITLE: Example of CKEDITOR.tools.debounce Method in CKEditor 4.19.1\nDESCRIPTION: Utility method for postponing a function execution until the given milliseconds have elapsed since the last time it was invoked. This API change was introduced in CKEditor 4.19.1.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n[`CKEDITOR.tools#debounce()`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_tools.html#method-debounce)\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Authentication in Guzzle 3.7.0\nDESCRIPTION: Example of setting up HTTP Basic or Digest authentication using client configuration instead of the deprecated CurlAuthPlugin. Shows the new path-based approach for authentication options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$client->getConfig()->setPath('request.options/auth', array('user', 'pass', 'Basic|Digest');\n```\n\n----------------------------------------\n\nTITLE: Working with PSR-7 HTTP Message Body Separately in PHP\nDESCRIPTION: Illustrates how to work with the body of a PSR-7 response object separately. This method is useful for multiple operations on the body.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$body = $response->getBody();\n// operations on body, eg. read, write, seek\n// ...\n// replacing the old body\n$response->withBody($body); \n// this last statement is optional as we working with objects\n// in this case the \"new\" body is same with the \"old\" one\n// the $body variable has the same value as the one in $request, only the reference is passed\n```\n\n----------------------------------------\n\nTITLE: Example of config.coreStyles_toggleSubSup Configuration Option in CKEditor 4.20\nDESCRIPTION: Configuration option that disallows setting subscript and superscript on the same element simultaneously using UI buttons. Added in CKEditor 4.20 and turned off by default.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.coreStyles_toggleSubSup`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-coreStyles_toggleSubSup)\n```\n\n----------------------------------------\n\nTITLE: Decoding HTML Entities in CKEditor 4.4\nDESCRIPTION: Demonstrates the usage of CKEDITOR.tools.htmlDecode() method to decode HTML entities. This utility method was added in CKEditor 4.4.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar decodedString = CKEDITOR.tools.htmlDecode( '&lt;p&gt;Hello&lt;/p&gt;' );\n```\n\n----------------------------------------\n\nTITLE: Example of Mentions and Emoji Plugin Configuration Options for Following Space\nDESCRIPTION: Configuration options that add a space after an accepted autocompletion match in the Mentions and Emoji plugins. This feature was extended in CKEditor 4.20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n[`configDefinition.followingSpace`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_plugins_mentions_configDefinition.html#property-followingSpace)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.emoji_followingSpace`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-emoji_followingSpace)\n```\n\n----------------------------------------\n\nTITLE: Setting Flot Options Using New Series Object Syntax\nDESCRIPTION: Example of the new style for setting series options in Flot 0.6 and later, placing options like lines within a series object.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n$.plot(placeholder, data, { series: { lines: { show: true }}})\n```\n\n----------------------------------------\n\nTITLE: Using trigger_deprecation Function in PHP with Symfony Deprecation Contracts\nDESCRIPTION: This example demonstrates how to use the `trigger_deprecation()` function to generate deprecation notices. The function requires the package name, version introducing the deprecation, and a message with optional formatting arguments.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/symfony/deprecation-contracts/README.md#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ntrigger_deprecation('symfony/blockchain', '8.9', 'Using \"%s\" is deprecated, use \"%s\" instead.', 'bitcoin', 'fabcoin');\n```\n\n----------------------------------------\n\nTITLE: Preventing Stream Seeking with NoSeekStream in PHP\nDESCRIPTION: Shows how to use NoSeekStream to wrap a stream and prevent seeking operations. This is useful when you want to ensure that a stream is only read sequentially.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n$original = Psr7\\Utils::streamFor('foo');\n$noSeek = new Psr7\\NoSeekStream($original);\n\necho $noSeek->read(3);\n// foo\nvar_export($noSeek->isSeekable());\n// false\n$noSeek->seek(0);\nvar_export($noSeek->read(3));\n// NULL\n```\n\n----------------------------------------\n\nTITLE: Creating Streaming Responses in Guzzle 4.x\nDESCRIPTION: Shows how to create a streaming response using the new 'stream' option in Guzzle 4.x. This replaces the previous PhpStreamRequestFactory approach used in Guzzle 3.x.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n// 3.0\nuse Guzzle\\Stream\\PhpStreamRequestFactory;\n$request = $client->get('/');\n$factory = new PhpStreamRequestFactory();\n$stream = $factory->fromRequest($request);\n$data = $stream->read(1024);\n\n// 4.0\n$response = $client->get('/', ['stream' => true]);\n// Read some data off of the stream in the response body\n$data = $response->getBody()->read(1024);\n```\n\n----------------------------------------\n\nTITLE: Implementing CSRF Token for File Uploads\nDESCRIPTION: The getCsrfToken method provides security for file uploads. The token is automatically sent by the File Browser and File Tools plugins during file uploads to enhance security.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Getting a CSRF token\nvar token = CKEDITOR.tools.getCsrfToken();\n\n// The token is automatically included in file uploads\n// No additional code needed for File Browser and File Tools plugins\n```\n\n----------------------------------------\n\nTITLE: Example of config.autolink_urlRegex Configuration Option in CKEditor\nDESCRIPTION: Configuration option for the Autolink plugin that defines the regular expression pattern for detecting URLs. This was mentioned in a fixed issue for CKEditor 4.20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.autolink_urlRegex`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-autolink_urlRegex)\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Headers in Guzzle 3.7.0\nDESCRIPTION: Example of setting default headers for requests using the client's configuration instead of the deprecated setDefaultHeaders method. Shows the new configuration path approach.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$client->getConfig()->setPath('request.options/headers/{header_name}', 'value');\n```\n\nLANGUAGE: php\nCODE:\n```\n$client->getConfig()->setPath('request.options/headers', array('header_name' => 'value'));\n```\n\n----------------------------------------\n\nTITLE: Inserting Text into Editable Area\nDESCRIPTION: Using the editable.insertText() method to programmatically insert text into the editor. This had an issue with character loss when RegExp replace controls were being inserted.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_70\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.editable().insertText('Sample text');\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration Files in CKEditor\nDESCRIPTION: The config.customConfig setting allows loading custom configuration files. CKEditor 4.1.2 fixed a race condition when loading multiple custom config files.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_72\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.customConfig = 'path/to/my/custom/config.js';\n```\n\n----------------------------------------\n\nTITLE: Updating Guzzle LogPlugin Usage in PHP\nDESCRIPTION: This snippet shows the changes in using the Guzzle LogPlugin. The namespace has changed, and the verbosity parameter has been replaced with a message format string.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_15\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Common\\Log\\ClosureLogAdapter;\nuse Guzzle\\Http\\Plugin\\LogPlugin;\n\n/** @var \\Guzzle\\Http\\Client */\n$client;\n\n// $verbosity is an integer indicating desired message verbosity level\n$client->addSubscriber(new LogPlugin(new ClosureLogAdapter(function($m) { echo $m; }, $verbosity = LogPlugin::LOG_VERBOSE);\n```\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Log\\ClosureLogAdapter;\nuse Guzzle\\Log\\MessageFormatter;\nuse Guzzle\\Plugin\\Log\\LogPlugin;\n\n/** @var \\Guzzle\\Http\\Client */\n$client;\n\n// $format is a string indicating desired message format -- @see MessageFormatter\n$client->addSubscriber(new LogPlugin(new ClosureLogAdapter(function($m) { echo $m; }, $format = MessageFormatter::DEBUG_FORMAT);\n```\n\n----------------------------------------\n\nTITLE: CKEditor Config Setting Description\nDESCRIPTION: Configuration example showing the explicit setting of useComputedState to true, as mentioned in the API changes section.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.useComputedState = true;\n```\n\n----------------------------------------\n\nTITLE: Example of Dialog UI Element Methods in CKEditor\nDESCRIPTION: Methods for setting values in dialog checkbox and radio elements. These were mentioned in a fixed issue for CKEditor 4.19.1 where they were not chainable as documented.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n[`checkbox.setValue`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_ui_dialog_checkbox.html#method-setValue)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[`radio.setValue`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_ui_dialog_radio.html#method-setValue)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Request Headers Configuration in Guzzle 3.7.0\nDESCRIPTION: Example of retrieving default headers from a client's configuration using the new path-based approach instead of the deprecated getDefaultHeaders method.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$client->getConfig()->getPath('request.options/headers')\n```\n\n----------------------------------------\n\nTITLE: Removing Headers from PSR-7 HTTP Messages in PHP\nDESCRIPTION: Demonstrates how to remove specific headers from PSR-7 request and response objects using withoutHeader() method. This creates new objects without the specified headers.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n// removing a header from Request, removing deprecated \"Content-MD5\" header\n$request->withoutHeader('Content-MD5'); \n\n// removing a header from Response\n// effect: the browser won't know the size of the stream\n// the browser will download the stream till it ends\n$response->withoutHeader('Content-Length');\n```\n\n----------------------------------------\n\nTITLE: Configuring baseFloatZIndex in CKEditor 4\nDESCRIPTION: Configuration option to set the base value for the z-index CSS property of floating dialog elements in CKEditor, which affects the stacking order of dialogs.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.baseFloatZIndex\n```\n\n----------------------------------------\n\nTITLE: Displaying Current Timestamp (JavaScript)\nDESCRIPTION: This code snippet shows how to display the current timestamp in JavaScript using the Date object's getTime() method. It demonstrates how to obtain a JavaScript timestamp, which is the number of milliseconds since January 1, 1970 00:00:00 UTC.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nalert((new Date()).getTime())\n```\n\n----------------------------------------\n\nTITLE: Creating Bookmarks in CKEditor 4.2.2\nDESCRIPTION: Shows how to create bookmarks using the createBookmark2() method, which now correctly normalizes offsets as fixed in CKEditor 4.2.2.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_64\n\nLANGUAGE: JavaScript\nCODE:\n```\nrange.createBookmark2()\n```\n\n----------------------------------------\n\nTITLE: Flot Raw Data Points Format\nDESCRIPTION: Demonstrates the format for raw data points in a Flot series, where each point is an array containing x and y coordinates.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n[ [x1, y1], [x2, y2], ... ]\n```\n\n----------------------------------------\n\nTITLE: Inserting Unicode Directional Markers in JavaScript\nDESCRIPTION: Demonstrates how to prepend Unicode directional markers (U+202A or U+202B) to input values to change text direction in CKEditor dialogs.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"\\u202A\" // Left-to-Right Embedding\n\"\\u202B\" // Right-to-Left Embedding\n```\n\n----------------------------------------\n\nTITLE: Using RejectedPromise for Pre-Rejected Values in PHP\nDESCRIPTION: Shows how to create a RejectedPromise when you already have an error, which immediately invokes any rejection callbacks attached to it.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_15\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Promise\\RejectedPromise;\n\n$promise = new RejectedPromise('Error');\n\n// Rejected callbacks are immediately invoked.\n$promise->then(null, function ($reason) {\n    echo $reason;\n});\n```\n\n----------------------------------------\n\nTITLE: Generating UTC Timestamp (PHP)\nDESCRIPTION: This PHP code snippet demonstrates how to generate a UTC timestamp for a specific date. It uses the strtotime() function to convert a date string to a Unix timestamp and then multiplies it by 1000 to convert it to milliseconds for JavaScript compatibility.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_24\n\nLANGUAGE: php\nCODE:\n```\nstrtotime(\"2002-02-20 UTC\") * 1000\n```\n\n----------------------------------------\n\nTITLE: Moving Cursor to Editable Position in CKEditor 4.3 Beta\nDESCRIPTION: Demonstrates the usage of the new moveToClosestEditablePosition() method for moving the cursor to the nearest editable position in CKEditor 4.3 Beta.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\nrange.moveToClosestEditablePosition()\n```\n\n----------------------------------------\n\nTITLE: Example of Flot Raw Data Points\nDESCRIPTION: A concrete example of raw data points for a Flot series, showing specific x,y coordinate pairs.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n[ [1, 3], [2, 14.01], [3.5, 3.14] ]\n```\n\n----------------------------------------\n\nTITLE: Installing Guzzle Promises via Composer\nDESCRIPTION: Command to install the Guzzle Promises library using Composer package manager.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncomposer require guzzlehttp/promises\n```\n\n----------------------------------------\n\nTITLE: Handling Color Values in CKEditor Tools\nDESCRIPTION: This code snippet refers to the CKEDITOR.tools.color object, which has been updated to support new color syntax and improve handling of HSL/HSLA values in CKEditor 4.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.color\n```\n\n----------------------------------------\n\nTITLE: Retrieving Header Values as String from PSR-7 Objects in PHP\nDESCRIPTION: Demonstrates how to get comma-separated values from a header in both PSR-7 request and response objects using getHeaderLine() method.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// getting value from request headers\n$request->getHeaderLine('Content-Type'); // will return: \"text/html; charset=UTF-8\"\n// getting value from response headers\n$response->getHeaderLine('My-Custom-Header'); // will return:  \"My Custom Message; The second message\"\n```\n\n----------------------------------------\n\nTITLE: Creating Markings in Flot Chart Background\nDESCRIPTION: This example shows how to define markings in the background of a Flot chart. It specifies a red rectangular area between x-axis values 0 and 2, and y-axis value 10.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nmarkings: [ { xaxis: { from: 0, to: 2 }, yaxis: { from: 10, to: 10 }, color: \"#bb0000\" }, ... ]\n```\n\n----------------------------------------\n\nTITLE: Allowing Dashes in Element Names for Content Rules in JavaScript\nDESCRIPTION: Updated the string format of allowed content rules to allow dashes in element names. This enhances flexibility in defining content rules for CKEditor.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.allowedContent = 'element-with-dash';\n```\n\n----------------------------------------\n\nTITLE: Synchronous Promise Resolution with wait()\nDESCRIPTION: Example demonstrating how to synchronously resolve a promise using the wait() method with a custom wait function that resolves the promise.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$promise = new Promise(function () use (&$promise) {\n    $promise->resolve('foo');\n});\n\n// Calling wait will return the value of the promise.\necho $promise->wait(); // outputs \"foo\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Enter Mode in CKEditor\nDESCRIPTION: The config.enterMode setting determines how Enter key presses are handled. This can be set to CKEDITOR.ENTER_BR to create line breaks instead of paragraphs.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_73\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.enterMode = CKEDITOR.ENTER_BR;\n```\n\n----------------------------------------\n\nTITLE: Processing Check Comment in JavaScript\nDESCRIPTION: This comment suggests that there's a check in the code to determine if something has been previously processed. It's likely used to prevent duplicate operations or initializations.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/themes/daux/js/mermaid.mjs.LICENSE.txt#2025-04-19_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n/*! Check if previously processed */\n```\n\n----------------------------------------\n\nTITLE: Adding <main> Element to CKEDITOR.dtd in JavaScript\nDESCRIPTION: Added the <main> element to the CKEDITOR.dtd object, allowing it to be recognized and handled properly by the editor.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dtd['main'] = {};\n```\n\n----------------------------------------\n\nTITLE: Creating Preview with Callback in CKEditor Preview Plugin\nDESCRIPTION: This code snippet illustrates the addition of a callback parameter to the createPreview method in the Preview plugin of CKEditor 4, allowing for more flexible preview creation.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.plugins.preview#createPreview()\n```\n\n----------------------------------------\n\nTITLE: Using a Flot Plugin with Debug Option in JavaScript\nDESCRIPTION: Shows how to enable and configure the debug plugin when creating a plot. The debug level is set to 2 to display more detailed information.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/PLUGINS.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n    $.plot($(\"#placeholder\"), [...], { debug: 2 });\n```\n\n----------------------------------------\n\nTITLE: Running Daux.io with Docker (Bash)\nDESCRIPTION: Docker command to run Daux.io, mounting the current directory and preserving user permissions.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --rm -it -w /build -v \"$PWD\":/build -u \"$(id -u):$(id -g)\" daux/daux.io daux\n```\n\n----------------------------------------\n\nTITLE: Example of config.image2_defaultLockRatio Configuration Option in CKEditor 4.20\nDESCRIPTION: Configuration option for setting the default value of the \"Lock ratio\" option in the Enhanced Image dialog. This was added in CKEditor 4.20.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n[`config.image2_defaultLockRatio`](https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html#cfg-image2_defaultLockRatio)\n```\n\n----------------------------------------\n\nTITLE: JavaScript Comment Style Example\nDESCRIPTION: An example showing the proper way to format comments in Flot JavaScript code, with empty lines above and below comment blocks.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar a = 5;\n\n// We're going to loop here\n// TODO: Make this loop faster, better, stronger!\n\nfor (var x = 0; x < 10; x++) {}\n```\n\n----------------------------------------\n\nTITLE: Checking if Variable is Array in CKEditor 4.2.2\nDESCRIPTION: Demonstrates the usage of isArray() method to check if a variable is an array, which now works across frames as fixed in CKEditor 4.2.2.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_63\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.isArray()\n```\n\n----------------------------------------\n\nTITLE: Integrating GuzzleHttp Promises with React Event Loop\nDESCRIPTION: Demonstrates how to integrate GuzzleHttp promises with a React event loop using a periodic timer to run the task queue.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_18\n\nLANGUAGE: php\nCODE:\n```\n$loop = React\\EventLoop\\Factory::create();\n$loop->addPeriodicTimer(0, [$queue, 'run']);\n```\n\n----------------------------------------\n\nTITLE: Middleware Implementation in Guzzle 6.0\nDESCRIPTION: Shows the new middleware-based approach in Guzzle 6.0 for modifying requests, using handler stacks and PSR-7 compatible immutable messages.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Middleware;\n// Create a handler stack that has all of the default middlewares attached\n$handler = GuzzleHttp\\HandlerStack::create();\n// Push the handler onto the handler stack\n$handler->push(Middleware::mapRequest(function (RequestInterface $request) {\n    // Notice that we have to return a request object\n    return $request->withHeader('X-Foo', 'Bar');\n}));\n// Inject the handler into the client\n$client = new GuzzleHttp\\Client(['handler' => $handler]);\n```\n\n----------------------------------------\n\nTITLE: Managing Tab Spaces in CKEditor\nDESCRIPTION: The config.tabSpaces setting configures how many spaces should be inserted when the Tab key is pressed. This interacts with the Advanced Content Filter.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_74\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.tabSpaces = 4; // Insert 4 spaces when Tab is pressed\n```\n\n----------------------------------------\n\nTITLE: Using wait() on Already Resolved Promise\nDESCRIPTION: Example showing that calling wait() on an already fulfilled promise simply returns the resolved value without invoking the wait function.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/promises/README.md#2025-04-19_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$promise = new Promise(function () { die('this is not called!'); });\n$promise->resolve('foo');\necho $promise->wait(); // outputs \"foo\"\n```\n\n----------------------------------------\n\nTITLE: Request Interface Method Definition\nDESCRIPTION: Interface method signatures for port management in Guzzle HTTP requests\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nGuzzleHttp\\Message\\RequestInterface::setPort()\nGuzzleHttp\\Message\\RequestInterface::getPort()\n```\n\n----------------------------------------\n\nTITLE: Setting Request POST Fields in Guzzle\nDESCRIPTION: Example showing how scalar values can be set as POST fields in Guzzle HTTP requests\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nGuzzleHttp\\json_decode()\n```\n\n----------------------------------------\n\nTITLE: Converting Dual Axes Configuration to Multiple Axes in Flot 0.7\nDESCRIPTION: Shows how to convert from the old dual axes configuration format to the new multiple axes array format in Flot 0.7. This change supports an unlimited number of axes while maintaining backward compatibility.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    xaxis: { ... }, x2axis: { ... },\n    yaxis: { ... }, y2axis: { ... }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    xaxes: [ { ... }, { ... } ],\n    yaxes: [ { ... }, { ... } ]\n}\n```\n\n----------------------------------------\n\nTITLE: Correct JavaScript Spacing Example\nDESCRIPTION: An example demonstrating the correct spacing style for JavaScript code in Flot, without extra spaces around parameter lists, loop definitions, and array indices.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfor (var i = 0; i < data.length; i++) {\t\t// This block is correct!\n\tif (data[i] > 1) {\n\t\tdata[i] = 2;\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Editor Title in CKEditor 4\nDESCRIPTION: The config.title setting allows changing the human-readable title of the editor instance. This was introduced in CKEditor 4.2.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_65\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.title = \"My Custom Editor Title\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Daux.io Title (JSON)\nDESCRIPTION: JSON configuration to set the title of the documentation in Daux.io.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/README.md#2025-04-19_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"title\": \"Daux.io\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Flot Options Using Old Syntax\nDESCRIPTION: Example of the old style for setting lines options directly in the Flot initialization. This syntax was deprecated in Flot 0.6.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n$.plot(placeholder, data, { lines: { show: true }})\n```\n\n----------------------------------------\n\nTITLE: Setting Values in a Collection using Nested Paths in PHP\nDESCRIPTION: Example of using the new setPath method in Guzzle's Collection class to set values using nested keys. This allows setting deeply nested array values with a path-like syntax.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$collection->setPath('foo/baz/bar', 'test'); echo $collection['foo']['bar']['bar'];\n```\n\n----------------------------------------\n\nTITLE: Configuring Redirects in Guzzle 4.x\nDESCRIPTION: Demonstrates how to configure redirects using the new 'allow_redirects' request option in Guzzle 4.x. This replaces the previous configureRedirects() method.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n// Standard redirects with a default of a max of 5 redirects\n$request = $client->createRequest('GET', '/', ['allow_redirects' => true]);\n\n// Strict redirects with a custom number of redirects\n$request = $client->createRequest('GET', '/', [\n    'allow_redirects' => ['max' => 5, 'strict' => true]\n]);\n```\n\n----------------------------------------\n\nTITLE: Incorrect JavaScript Spacing Example\nDESCRIPTION: An example demonstrating incorrect spacing in JavaScript code, with extra spaces around parameter lists, loop definitions, and array indices that should be avoided according to Flot's style guidelines.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfor ( var i = 0; i < data.length; i++ ) {\t// This block is wrong!\n\tif ( data[ i ] > 1 ) {\n\t\tdata[ i ] = 2;\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Using Protected Source in Title Element in CKEditor\nDESCRIPTION: Fix for Protected Source functionality in the <title> element. This ensures that protected content is properly handled in the document title.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/CHANGES.md#2025-04-19_snippet_46\n\nLANGUAGE: HTML\nCODE:\n```\n<title><!--{cke_protected}%3Cscript%3E-->Protected Title<!--{/cke_protected}--></title>\n```\n\n----------------------------------------\n\nTITLE: Generating PHPStan Baseline\nDESCRIPTION: Command to regenerate the PHPStan baseline after making codebase changes.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/scssphp/scssphp/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmake phpstan-baseline\n```\n\n----------------------------------------\n\nTITLE: Injecting Custom CurlMulti Object in PHP\nDESCRIPTION: Example of how to inject a custom CurlMulti object into each client as it is created using a listener on the ServiceBuilder's create_client event.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$multi = new Guzzle\\Http\\Curl\\CurlMulti();\n$builder = Guzzle\\Service\\Builder\\ServiceBuilder::factory('/path/to/config.json');\n$builder->addListener('service_builder.create_client', function ($event) use ($multi) {\n    $event['client']->setCurlMulti($multi);\n}\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Daux.io via Composer (Bash)\nDESCRIPTION: Commands to install Daux.io globally using Composer and generate documentation.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer global require daux/daux.io\n\n# Next to your `docs` folder, run\ndaux generate\n```\n\n----------------------------------------\n\nTITLE: Describing JavaScript and Asset Components of Moono-lisa Skin\nDESCRIPTION: This snippet describes the non-CSS components of the Moono-lisa skin, including the main JavaScript file and image assets. It explains the role of skin.js in registering the skin and its features.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/skins/moono-lisa/readme.md#2025-04-19_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nskin.js: the only JavaScript part of the skin that registers the skin, its browser specific files and its icons and defines the Chameleon feature,\nimages/: contains a fill general used images,\ndev/: contains SVG and PNG source of the skin icons.\n```\n\n----------------------------------------\n\nTITLE: Creating JavaScript Timestamp (Python)\nDESCRIPTION: This Python code snippet shows how to create a JavaScript-compatible timestamp from a Python datetime object. It uses the calendar.timegm() function to convert the datetime to UTC seconds and then multiplies by 1000 to get milliseconds.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ncalendar.timegm(datetime_object.timetuple()) * 1000\n```\n\n----------------------------------------\n\nTITLE: Updating HTTP Request Methods in Guzzle 4.x\nDESCRIPTION: Shows changes in how HTTP requests are created and sent between Guzzle 3.x and 4.x versions.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n// 3.0\n$request = $client->get('/');\n$response = $request->send();\n\n// 4.0\n$response = $client->get('/');\n\n// or, to mirror the previous behavior\n$request = $client->createRequest('GET', '/');\n$response = $client->send($request);\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Tests\nDESCRIPTION: Command to execute all PHPUnit tests from the root directory of the project.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/scssphp/scssphp/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nvendor/bin/phpunit tests\n```\n\n----------------------------------------\n\nTITLE: Verifying CKEditor installation through sample URL\nDESCRIPTION: Shows the URL pattern to access CKEditor's sample pages for verifying proper installation. The snippet provides both a generic format and a specific example URL.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/README.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://<your site>/<CKEditor installation path>/samples/index.html\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://www.example.com/ckeditor/samples/index.html\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Test Outputs\nDESCRIPTION: Command to rebuild all test outputs after making changes to test inputs, updating the tests/outputs directory and sass-spec exclusion list.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/scssphp/scssphp/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nBUILD=1 vendor/bin/phpunit tests\n```\n\n----------------------------------------\n\nTITLE: Correct JavaScript Line Wrapping Example\nDESCRIPTION: An example showing correct line wrapping for statements with complex logic, keeping the entire condition on one line when it does not exceed the recommended line length.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nif (a == 1 && b == 2 && c == 3) {}\t\t// This block is correct!\n```\n\n----------------------------------------\n\nTITLE: Updating Guzzle ServiceDescription Usage in PHP\nDESCRIPTION: This snippet demonstrates the changes in using the Guzzle ServiceDescription class. The main change is renaming 'Commands' to 'Operations' in method names and parameter types.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_14\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Service\\Description\\ServiceDescription;\n\n$sd = new ServiceDescription();\n$sd->getCommands();     // @returns ApiCommandInterface[]\n$sd->hasCommand($name);\n$sd->getCommand($name); // @returns ApiCommandInterface|null\n$sd->addCommand($command); // @param ApiCommandInterface $command\n```\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Service\\Description\\ServiceDescription;\n\n$sd = new ServiceDescription();\n$sd->getOperations();           // @returns OperationInterface[]\n$sd->hasOperation($name);\n$sd->getOperation($name);       // @returns OperationInterface|null\n$sd->addOperation($operation);  // @param OperationInterface $operation\n```\n\n----------------------------------------\n\nTITLE: Accessing OpenCart Upgrade Script\nDESCRIPTION: URL pattern to access the OpenCart upgrade script after uploading new files. Replace '<yourstore.com>' with the actual domain and subdirectory if applicable.\nSOURCE: https://github.com/opencart/opencart/blob/master/UPGRADE.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`http://<yourstore.com>/install`\n```\n\n----------------------------------------\n\nTITLE: Configuring SCAYT Plugin in CKEditor 4\nDESCRIPTION: Configuration code to enable the SCAYT plugin in CKEditor 4's config.js file. This adds spell-checking capabilities to the editor instance.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/plugins/scayt/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.extraPlugins = 'scayt';\n```\n\n----------------------------------------\n\nTITLE: Backing up OpenCart database via Admin Panel\nDESCRIPTION: Command to access the database backup tool in the OpenCart admin panel. This step is crucial before beginning the upgrade process to ensure data safety.\nSOURCE: https://github.com/opencart/opencart/blob/master/UPGRADE.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Admin -> System -> tools -> Backup`\n```\n\n----------------------------------------\n\nTITLE: Migrating Grid tickColor to Axes-specific Configuration in Flot\nDESCRIPTION: Demonstrates how to migrate from using the deprecated grid.tickColor option to the new axis-specific tickColor options. This change allows for more precise control over axis appearance.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/NEWS.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{ grid: { tickColor: \"#000\" }}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{ xaxis: { tickColor: \"#000\"}, yaxis: { tickColor: \"#000\"} }\n```\n\n----------------------------------------\n\nTITLE: Applying GNU GPL Notice to Source Files\nDESCRIPTION: This snippet provides a template for adding the GNU GPL notice to the start of each source file in a program. It includes placeholders for the program name, copyright year, and author name.\nSOURCE: https://github.com/opencart/opencart/blob/master/LICENSE.md#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: Flot Legend Customization Options\nDESCRIPTION: Shows all available options for customizing the Flot legend, including positioning, formatting, styling, and sorting options.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nlegend: {\n    show: boolean\n    labelFormatter: null or (fn: string, series object -> string)\n    labelBoxBorderColor: color\n    noColumns: number\n    position: \"ne\" or \"nw\" or \"se\" or \"sw\"\n    margin: number of pixels or [x margin, y margin]\n    backgroundColor: null or color\n    backgroundOpacity: number between 0 and 1\n    container: null or jQuery object/DOM element/jQuery expression\n    sorted: null/false, true, \"ascending\", \"descending\", \"reverse\", or a comparator\n}\n```\n\n----------------------------------------\n\nTITLE: MPL License Text Block\nDESCRIPTION: Full text block of the Mozilla Public License Version 1.1, containing license definitions and terms for software distribution and usage.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/LICENSE.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nMOZILLA PUBLIC LICENSE\nVersion 1.1\n\n1. Definitions.\n\n     1.0.1. \"Commercial Use\" means distribution or otherwise making the\n     Covered Code available to a third party.\n\n     1.1. \"Contributor\" means each entity that creates or contributes to\n     the creation of Modifications.\n\n     1.2. \"Contributor Version\" means the combination of the Original\n     Code, prior Modifications used by a Contributor, and the Modifications\n     made by that particular Contributor.\n\n     1.3. \"Covered Code\" means the Original Code or Modifications or the\n     combination of the Original Code and Modifications, in each case\n     including portions thereof.\n\n     1.4. \"Electronic Distribution Mechanism\" means a mechanism generally\n     accepted in the software development community for the electronic\n     transfer of data.\n\n     1.5. \"Executable\" means Covered Code in any form other than Source\n     Code.\n\n     1.6. \"Initial Developer\" means the individual or entity identified\n     as the Initial Developer in the Source Code notice required by Exhibit\n     A.\n\n     1.7. \"Larger Work\" means a work which combines Covered Code or\n     portions thereof with code not governed by the terms of this License.\n\n     1.8. \"License\" means this document.\n\n     1.8.1. \"Licensable\" means having the right to grant, to the maximum\n     extent possible, whether at the time of the initial grant or\n     subsequently acquired, any and all of the rights conveyed herein.\n\n     1.9. \"Modifications\" means any addition to or deletion from the\n     substance or structure of either the Original Code or any previous\n     Modifications. When Covered Code is released as a series of files, a\n     Modification is:\n          A. Any addition to or deletion from the contents of a file\n          containing Original Code or previous Modifications.\n\n          B. Any new file that contains any part of the Original Code or\n          previous Modifications.\n\n     1.10. \"Original Code\" means Source Code of computer software code\n     which is described in the Source Code notice required by Exhibit A as\n     Original Code, and which, at the time of its release under this\n     License is not already Covered Code governed by this License.\n\n     1.10.1. \"Patent Claims\" means any patent claim(s), now owned or\n     hereafter acquired, including without limitation,  method, process,\n     and apparatus claims, in any patent Licensable by grantor.\n\n     1.11. \"Source Code\" means the preferred form of the Covered Code for\n     making modifications to it, including all modules it contains, plus\n     any associated interface definition files, scripts used to control\n     compilation and installation of an Executable, or source code\n     differential comparisons against either the Original Code or another\n     well known, available Covered Code of the Contributor's choice. The\n     Source Code can be in a compressed or archival form, provided the\n     appropriate decompression or de-archiving software is widely available\n     for no charge.\n\n     1.12. \"You\" (or \"Your\")  means an individual or a legal entity\n     exercising rights under, and complying with all of the terms of, this\n     License or a future version of this License issued under Section 6.1.\n     For legal entities, \"You\" includes any entity which controls, is\n     controlled by, or is under common control with You. For purposes of\n     this definition, \"control\" means (a) the power, direct or indirect,\n     to cause the direction or management of such entity, whether by\n     contract or otherwise, or (b) ownership of more than fifty percent\n     (50%) of the outstanding shares or beneficial ownership of such\n     entity.\n\n2. Source Code License.\n\n     2.1. The Initial Developer Grant.\n     The Initial Developer hereby grants You a world-wide, royalty-free,\n     non-exclusive license, subject to third party intellectual property\n     claims:\n          (a)  under intellectual property rights (other than patent or\n          trademark) Licensable by Initial Developer to use, reproduce,\n          modify, display, perform, sublicense and distribute the Original\n          Code (or portions thereof) with or without Modifications, and/or\n          as part of a Larger Work; and\n\n          (b) under Patents Claims infringed by the making, using or\n          selling of Original Code, to make, have made, use, practice,\n          sell, and offer for sale, and/or otherwise dispose of the\n          Original Code (or portions thereof).\n\n          (c) the licenses granted in this Section 2.1(a) and (b) are\n          effective on the date Initial Developer first distributes\n          Original Code under the terms of this License.\n\n          (d) Notwithstanding Section 2.1(b) above, no patent license is\n          granted: 1) for code that You delete from the Original Code; 2)\n          separate from the Original Code;  or 3) for infringements caused\n          by: i) the modification of the Original Code or ii) the\n          combination of the Original Code with other software or devices.\n\n     2.2. Contributor Grant.\n     Subject to third party intellectual property claims, each Contributor\n     hereby grants You a world-wide, royalty-free, non-exclusive license\n\n          (a)  under intellectual property rights (other than patent or\n          trademark) Licensable by Contributor, to use, reproduce, modify,\n          display, perform, sublicense and distribute the Modifications\n          created by such Contributor (or portions thereof) either on an\n          unmodified basis, with other Modifications, as Covered Code\n          and/or as part of a Larger Work; and\n\n          (b) under Patent Claims infringed by the making, using, or\n          selling of  Modifications made by that Contributor either alone\n          and/or in combination with its Contributor Version (or portions\n          of such combination), to make, use, sell, offer for sale, have\n          made, and/or otherwise dispose of: 1) Modifications made by that\n          Contributor (or portions thereof); and 2) the combination of\n          Modifications made by that Contributor with its Contributor\n          Version (or portions of such combination).\n\n          (c) the licenses granted in Sections 2.2(a) and 2.2(b) are\n          effective on the date Contributor first makes Commercial Use of\n          the Covered Code.\n\n          (d)    Notwithstanding Section 2.2(b) above, no patent license is\n          granted: 1) for any code that Contributor has deleted from the\n          Contributor Version; 2)  separate from the Contributor Version;\n          3)  for infringements caused by: i) third party modifications of\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for x64 PHP with VS2017\nDESCRIPTION: Batch commands to set environment variables for building AWS CRT PHP for x64 PHP on Windows using Visual Studio 2017 compiler.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nset CMAKE_GENERATOR=Visual Studio 15 2017\nset CMAKE_GENERATOR_PLATFORM=x64\n```\n\n----------------------------------------\n\nTITLE: Payment Method Implementation in OpenCart 4.0.2.0 (Old Format)\nDESCRIPTION: Example of how payment methods were implemented before OpenCart 4.0.2.0. This code initializes a bank transfer payment method with its code, title, and sort order.\nSOURCE: https://github.com/opencart/opencart/blob/master/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$method_data = [];\n\nif ($status) {\n    $method_data = [\n        'code'       => 'bank_transfer',\n        'title'      => $this->language->get('heading_title'),\n        'sort_order' => $this->config->get('payment_bank_transfer_sor[UPGRADE.md](UPGRADE.md)t_order')\n    ];\n}\n```\n\n----------------------------------------\n\nTITLE: URL Behavior Change in PHP Guzzle Client\nDESCRIPTION: Demonstration of how URL behavior has changed in Guzzle, where URLs no longer have a default path value of '/' if no path was specified.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n// Before:\n$request = $client->get('http://www.foo.com');\necho $request->getUrl();\n// >> http://www.foo.com/\n\n// After:\n$request = $client->get('http://www.foo.com');\necho $request->getUrl();\n// >> http://www.foo.com\n```\n\n----------------------------------------\n\nTITLE: Generating Static Files with Daux.io (Bash)\nDESCRIPTION: Command to generate a complete set of static HTML pages from Markdown documentation.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndaux --source=docs --destination=static\n```\n\n----------------------------------------\n\nTITLE: Converting XML Service Description to JSON for Zendesk REST API\nDESCRIPTION: This snippet shows the conversion of an XML-based service description to a JSON format for the Zendesk REST API. It includes definitions for various group-related operations with their HTTP methods, URIs, and parameters.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<client>\n    <commands>\n        <!-- Groups -->\n        <command name=\"list_groups\" method=\"GET\" uri=\"groups.json\">\n            <doc>Get a list of groups</doc>\n        </command>\n        <command name=\"search_groups\" method=\"GET\" uri='search.json?query=\"{{query}} type:group\"'>\n            <doc>Uses a search query to get a list of groups</doc>\n            <param name=\"query\" type=\"string\" required=\"true\" />\n        </command>\n        <command name=\"create_group\" method=\"POST\" uri=\"groups.json\">\n            <doc>Create a group</doc>\n            <param name=\"data\" type=\"array\" location=\"body\" filters=\"json_encode\" doc=\"Group JSON\"/>\n            <param name=\"Content-Type\" location=\"header\" static=\"application/json\"/>\n        </command>\n        <command name=\"delete_group\" method=\"DELETE\" uri=\"groups/{{id}}.json\">\n            <doc>Delete a group by ID</doc>\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n        </command>\n        <command name=\"get_group\" method=\"GET\" uri=\"groups/{{id}}.json\">\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n        </command>\n        <command name=\"update_group\" method=\"PUT\" uri=\"groups/{{id}}.json\">\n            <doc>Update a group</doc>\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n            <param name=\"data\" type=\"array\" location=\"body\" filters=\"json_encode\" doc=\"Group JSON\"/>\n            <param name=\"Content-Type\" location=\"header\" static=\"application/json\"/>\n        </command>\n    </commands>\n</client>\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\":       \"Zendesk REST API v2\",\n    \"apiVersion\": \"2012-12-31\",\n    \"description\":\"Provides access to Zendesk views, groups, tickets, ticket fields, and users\",\n    \"operations\": {\n        \"list_groups\":  {\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"groups.json\",\n            \"summary\":   \"Get a list of groups\"\n        },\n        \"search_groups\":{\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"search.json?query=\\\"{query} type:group\\\"\",\n            \"summary\":   \"Uses a search query to get a list of groups\",\n            \"parameters\":{\n                \"query\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Zendesk Search Query\",\n                    \"type\":       \"string\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"create_group\": {\n            \"httpMethod\":\"POST\",\n            \"uri\":       \"groups.json\",\n            \"summary\":   \"Create a group\",\n            \"parameters\":{\n                \"data\":        {\n                    \"type\":       \"array\",\n                    \"location\":   \"body\",\n                    \"description\":\"Group JSON\",\n                    \"filters\":    \"json_encode\",\n                    \"required\":   true\n                },\n                \"Content-Type\":{\n                    \"type\":    \"string\",\n                    \"location\":\"header\",\n                    \"static\":  \"application/json\"\n                }\n            }\n        },\n        \"delete_group\": {\n            \"httpMethod\":\"DELETE\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Delete a group\",\n            \"parameters\":{\n                \"id\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to delete by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"get_group\":    {\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Get a ticket\",\n            \"parameters\":{\n                \"id\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to get by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"update_group\": {\n            \"httpMethod\":\"PUT\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Update a group\",\n            \"parameters\":{\n                \"id\":          {\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to update by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                },\n                \"data\":        {\n                    \"type\":       \"array\",\n                    \"location\":   \"body\",\n                    \"description\":\"Group JSON\",\n                    \"filters\":    \"json_encode\",\n                    \"required\":   true\n                },\n                \"Content-Type\":{\n                    \"type\":    \"string\",\n                    \"location\":\"header\",\n                    \"static\":  \"application/json\"\n                }\n            }\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Header Existence in PSR-7 Request and Response in PHP\nDESCRIPTION: Illustrates how to check if a specific header exists in PSR-7 request and response objects. Returns a boolean value indicating presence of the header.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/docs/PSR7-Usage.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$request->hasHeader('My-Custom-Header'); // will return false\n$response->hasHeader('My-Custom-Header'); // will return true\n```\n\n----------------------------------------\n\nTITLE: Styling Plot Container\nDESCRIPTION: HTML markup showing how to set dimensions for the plot container using inline styles.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/README.md#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"placeholder\" style=\"width:600px;height:300px\"></div>\n```\n\n----------------------------------------\n\nTITLE: Enabling AWS CRT Extension in PHP Configuration\nDESCRIPTION: Configuration line that needs to be added to php.ini file to enable the AWS Common Runtime extension. The path should point to the built awscrt.so module file.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-sdk-php/CRT_INSTRUCTIONS.md#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nextension=path/to/aws-crt-php/modules/awscrt.so\n```\n\n----------------------------------------\n\nTITLE: SIL Open Font License Version 1.1 Terms\nDESCRIPTION: The complete SIL Open Font License (OFL) v1.1 that governs font software usage, modification, and redistribution. Specifies conditions for bundling fonts with software while maintaining their open source nature.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/LICENSE.md#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n-----------------------------------------------------------\n\nPREAMBLE\nThe goals of the Open Font License (OFL) are to stimulate worldwide\ndevelopment of collaborative font projects, to support the font creation\nefforts of academic and linguistic communities, and to provide a free and\nopen framework in which fonts may be shared and improved in partnership\nwith others.\n\n[...full license text...]\n```\n\n----------------------------------------\n\nTITLE: Installing AWS CRT PHP with Composer and PECL\nDESCRIPTION: Commands to install the AWS Common Runtime PHP bindings using package managers PECL and Composer. This is the simplest installation method for UNIX platforms.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npecl install awscrt\ncomposer require aws/aws-crt-php\n```\n\n----------------------------------------\n\nTITLE: Displaying GNU GPL Notice in Interactive Mode\nDESCRIPTION: This snippet shows how to display a short notice about the GNU GPL when a program starts in interactive mode. It includes placeholders for the program name, copyright year, and author name.\nSOURCE: https://github.com/opencart/opencart/blob/master/LICENSE.md#2025-04-19_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n<program>  Copyright (C) <year>  <name of author>\n\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n```\n\n----------------------------------------\n\nTITLE: Changelog Format in Markdown\nDESCRIPTION: Structured changelog documentation following semantic versioning format, detailing changes across different categories including Added, Deprecated, Removed, and Fixed sections.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nAll notable changes to this project will be documented in this file, in reverse chronological order by release.\n\n## 1.0.1 - 2016-08-06\n\n### Added\n\n- Nothing.\n\n### Deprecated\n\n- Nothing.\n\n### Removed\n\n- Nothing.\n\n### Fixed\n\n- Updated all `@return self` annotation references in interfaces to use\n  `@return static`, which more closelly follows the semantics of the\n  specification.\n- Updated the `MessageInterface::getHeaders()` return annotation to use the\n  value `string[][]`, indicating the format is a nested array of strings.\n- Updated the `@link` annotation for `RequestInterface::withRequestTarget()`\n  to point to the correct section of RFC 7230.\n- Updated the `ServerRequestInterface::withUploadedFiles()` parameter annotation\n  to add the parameter name (`$uploadedFiles`).\n- Updated a `@throws` annotation for the `UploadedFileInterface::moveTo()`\n  method to correctly reference the method parameter (it was referencing an\n  incorrect parameter name previously).\n\n## 1.0.0 - 2016-05-18\n\nInitial stable release; reflects accepted PSR-7 specification.\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Plot Container\nDESCRIPTION: HTML markup for creating a placeholder div to contain the Flot graph.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"placeholder\"></div>\n```\n\n----------------------------------------\n\nTITLE: Using PHP Environment Variables for HTTP Proxy Configuration\nDESCRIPTION: Environment variables that can be used to configure HTTP and HTTPS proxies in Guzzle, along with timeout settings\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nHTTP_PROXY\nHTTPS_PROXY\nGUZZLE_CURL_SELECT_TIMEOUT\n```\n\n----------------------------------------\n\nTITLE: jQuery Alternate Syntax for Flot with Other Libraries\nDESCRIPTION: Example showing how to use Flot with other libraries like Mootools or Prototype by using jQuery keyword instead of $ symbol.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/FAQ.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\njQuery.plot // instead of $.plot\njQuery(something) // instead of $(something)\n```\n\n----------------------------------------\n\nTITLE: BSD-2 License Terms\nDESCRIPTION: The BSD 2-clause license specifying terms for software redistribution and modification. Similar to BSD-3 but with fewer restrictions, requiring only copyright notice preservation and disclaimer inclusion.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/LICENSE.md#2025-04-19_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n[...full license text...]\n```\n\n----------------------------------------\n\nTITLE: Incorrect JSON Data Format Example for Flot\nDESCRIPTION: Example showing incorrect format of JSON data that causes issues with Flot charts. The data points are strings instead of numbers, which is a common mistake.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/FAQ.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n[[\"0\", \"-2.13\"], [\"5\", \"4.3\"]]\n```\n\n----------------------------------------\n\nTITLE: Building AWS CRT PHP from Source on UNIX\nDESCRIPTION: Step-by-step shell commands to clone, configure, build, and test the AWS CRT PHP extension from GitHub source on UNIX platforms.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ git clone --recursive https://github.com/awslabs/aws-crt-php.git\n$ cd aws-crt-php\n$ phpize\n$ ./configure\n$ make\n$ ./dev-scripts/run_tests.sh\n```\n\n----------------------------------------\n\nTITLE: Version Details in Markdown Format\nDESCRIPTION: Structured changelog entries documenting version history, changes, fixes and improvements for the Guzzle HTTP client library.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Change Log\n\nPlease refer to [UPGRADING](UPGRADING.md) guide for upgrading to a major version.\n\n## 7.9.2 - 2024-07-24\n\n### Fixed\n\n- Adjusted handler selection to use cURL if its version is 7.21.2 or higher, rather than 7.34.0\n```\n\n----------------------------------------\n\nTITLE: Running PHP Tests for JMESPath Library\nDESCRIPTION: Provides commands to run the test suite for the jmespath.php library using PHPUnit. Includes commands for running both the main test suite and performance tests.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/mtdowling/jmespath.php/README.rst#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake test\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake perf\n```\n\n----------------------------------------\n\nTITLE: Running Sass-Spec Compatibility Tests\nDESCRIPTION: Command to enable and run full sass-spec compatibility test suite.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/scssphp/scssphp/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nTEST_SASS_SPEC=1 vendor/bin/phpunit tests\n```\n\n----------------------------------------\n\nTITLE: FlexSearch.js Library Header Comment\nDESCRIPTION: Header comment block for FlexSearch.js v0.7.31 (Bundle) containing copyright information, author attribution, license details, and repository link.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/daux_libraries/search.min.js.LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**!\n * FlexSearch.js v0.7.31 (Bundle)\n * Copyright 2018-2022 Nextapps GmbH\n * Author: Thomas Wilkerling\n * Licence: Apache-2.0\n * https://github.com/nextapps-de/flexsearch\n */\n```\n\n----------------------------------------\n\nTITLE: Guzzle Client Factory Method Update in PHP\nDESCRIPTION: Example of updating a Guzzle client factory method to use Collection::fromConfig instead of the deprecated Inspector::fromConfig.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/guzzle/UPGRADING.md#2025-04-19_snippet_12\n\nLANGUAGE: php\nCODE:\n```\nuse Guzzle\\Common\\Collection;\n\nclass YourClient extends \\Guzzle\\Service\\Client\n{\n    public static function factory($config = array())\n    {\n        $default = array();\n        $required = array('base_url', 'username', 'api_key');\n        $config = Collection::fromConfig($config, $default, $required);\n\n        $client = new self(\n            $config->get('base_url'),\n            $config->get('username'),\n            $config->get('api_key')\n        );\n        $client->setConfig($config);\n\n        $client->setDescription(ServiceDescription::factory(__DIR__ . DIRECTORY_SEPARATOR . 'client.json'));\n\n        return $client;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring IIS for Clean URLs (XML)\nDESCRIPTION: XML configuration for IIS web.config to enable clean URLs for Daux.io documentation.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/README.md#2025-04-19_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<configuration>\n    <system.webServer>\n        <rewrite>\n            <rules>\n                <rule name=\"Main Rule\" stopProcessing=\"true\">\n                    <match url=\".*\" />\n                    <conditions logicalGrouping=\"MatchAll\">\n                        <add\n                            input=\"{REQUEST_FILENAME}\"\n                            matchType=\"IsFile\"\n                            negate=\"true\"\n                        />\n                        <add\n                            input=\"{REQUEST_FILENAME}\"\n                            matchType=\"IsDirectory\"\n                            negate=\"true\"\n                        />\n                    </conditions>\n                    <action\n                        type=\"Rewrite\"\n                        url=\"index.php\"\n                        appendQueryString=\"false\"\n                    />\n                </rule>\n            </rules>\n        </rewrite>\n    </system.webServer>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Running PHPStan Analysis\nDESCRIPTION: Command to run static analysis using PHPStan.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/scssphp/scssphp/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake phpstan\n```\n\n----------------------------------------\n\nTITLE: Building AWS CRT PHP with AWS-LC Instead of OpenSSL\nDESCRIPTION: Command to build AWS CRT PHP using AWS-LC instead of OpenSSL to avoid version compatibility issues on UNIX systems.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nUSE_OPENSSL=OFF make\n```\n\n----------------------------------------\n\nTITLE: js-yaml License Comment in JavaScript\nDESCRIPTION: This comment provides license and version information for the js-yaml library, version 4.1.0. It indicates that the library is released under the MIT license and provides a link to the GitHub repository.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/themes/daux/js/mermaid.mjs.LICENSE.txt#2025-04-19_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\n```\n\n----------------------------------------\n\nTITLE: Installing getallheaders Polyfill for PHP >= 5.6\nDESCRIPTION: This command installs the latest version of the getallheaders polyfill using Composer for PHP versions 5.6 and above.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/ralouphie/getallheaders/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer require ralouphie/getallheaders\n```\n\n----------------------------------------\n\nTITLE: Creating a BufferStream with Size Limit in PHP\nDESCRIPTION: Shows how to create a BufferStream with a defined high water mark (hwm). BufferStream provides a buffer that can be written to and read from, returning false when the buffer exceeds the configured size limit.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/guzzlehttp/psr7/README.md#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuse GuzzleHttp\\Psr7;\n\n// When more than 1024 bytes are in the buffer, it will begin returning\n// false to writes. This is an indication that writers should slow down.\n$buffer = new Psr7\\BufferStream(1024);\n```\n\n----------------------------------------\n\nTITLE: Debugging AWS CRT PHP Extension with PHPBrew\nDESCRIPTION: Commands for building debug versions of PHP using PHPBrew to help debug the AWS CRT PHP extension with different PHP versions.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n# PHP 8 example\n$ phpbrew install --stdout -j 8 8.0 +default -- CFLAGS=-Wno-error --disable-cgi --enable-debug\n# PHP 5.5 example\n$ phpbrew install --stdout -j 8 5.5 +default -openssl -mbstring -- CFLAGS=\"-w -Wno-error\" --enable-debug --with-zlib=/usr/local/opt/zlib\n$ phpbrew switch php-8.0.6 # or whatever version is current, it'll be at the end of the build output\n$ phpize\n$ ./configure\n$ make CMAKE_BUILD_TYPE=Debug\n```\n\n----------------------------------------\n\nTITLE: Installing getallheaders Polyfill for PHP < 5.6\nDESCRIPTION: This command installs version 2.x of the getallheaders polyfill using Composer for PHP versions below 5.6.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/ralouphie/getallheaders/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer require ralouphie/getallheaders \"^2\"\n```\n\n----------------------------------------\n\nTITLE: Installing AWS CRT PHP with Composer on Windows\nDESCRIPTION: Command to install the AWS Common Runtime PHP bindings on Windows using Composer after manually building the extension.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/aws/aws-crt-php/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncomposer require aws/aws-crt-php\n```\n\n----------------------------------------\n\nTITLE: Setting Linux File Permissions\nDESCRIPTION: Commands to set proper file permissions for OpenCart configuration files on Linux/Unix systems.\nSOURCE: https://github.com/opencart/opencart/blob/master/INSTALL.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nchmod 0777 config.php\nchmod 0777 admin/config.php\n```\n\n----------------------------------------\n\nTITLE: Configuring Daux.io Theme (JSON)\nDESCRIPTION: JSON configuration to set the theme for Daux.io HTML output.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/README.md#2025-04-19_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"html\": { \"theme\": \"daux-green\" }\n}\n```\n\n----------------------------------------\n\nTITLE: Production Error Display Configuration\nDESCRIPTION: Configuration change required when deploying OpenCart to production, disabling error display for security.\nSOURCE: https://github.com/opencart/opencart/blob/master/INSTALL.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$_['error_display'] = false;\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to JavaScript Timestamp (C#)\nDESCRIPTION: This C# code snippet defines a method to convert a System.DateTime object to a JavaScript timestamp. It calculates the number of milliseconds since January 1, 1970, which is the format used by JavaScript for timestamps.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/API.md#2025-04-19_snippet_26\n\nLANGUAGE: csharp\nCODE:\n```\npublic static int GetJavascriptTimestamp(System.DateTime input)\n{\n    System.TimeSpan span = new System.TimeSpan(System.DateTime.Parse(\"1/1/1970\").Ticks);\n    System.DateTime time = input.Subtract(span);\n    return (long)(time.Ticks / 10000);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Excanvas Support for IE8\nDESCRIPTION: HTML conditional comment to include Excanvas.js for Internet Explorer 8 and below to enable canvas support.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/README.md#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--[if lte IE 8]><script language=\"javascript\" type=\"text/javascript\" src=\"excanvas.min.js\"></script><![endif]-->\n```\n\n----------------------------------------\n\nTITLE: Initializing Document Load Listener in JavaScript\nDESCRIPTION: This comment indicates that the code should wait for the document to be fully loaded before starting execution. It's a common practice in web development to ensure all DOM elements are available.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/themes/daux/js/mermaid.mjs.LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/*!\\n   * Wait for document loaded before starting the execution\\n   */\n```\n\n----------------------------------------\n\nTITLE: Displaying the MIT License Text in OpenCart Project\nDESCRIPTION: The MIT License text that grants permission to use, modify and distribute software under specific conditions. The license includes clauses about warranty disclaimers and liability limitations.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/LICENSE.md#2025-04-19_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nThe MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n```\n\n----------------------------------------\n\nTITLE: Running PHP Code Sniffer\nDESCRIPTION: Command to check code against PSR12 coding standards using PHP_CodeSniffer.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/scssphp/scssphp/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nvendor/bin/phpcs --standard=PSR12 --extensions=php bin src tests *.php\n```\n\n----------------------------------------\n\nTITLE: BSD-3 License Terms\nDESCRIPTION: The BSD 3-clause license that allows software redistribution and modification while requiring preservation of copyright notices and disclaimers. Includes three main conditions for redistribution.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/LICENSE.md#2025-04-19_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n[...full license text...]\n```\n\n----------------------------------------\n\nTITLE: Using CompilerRuntime in PHP for JMESPath Evaluation\nDESCRIPTION: Shows how to use the CompilerRuntime class for JMESPath evaluation. This runtime compiles expressions to PHP source code, providing better performance for moderate to high expression reuse.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/mtdowling/jmespath.php/README.rst#2025-04-19_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// Note: The cache directory argument is optional.\n$runtime = new JmesPath\\CompilerRuntime('/path/to/compile/folder');\n$runtime('foo.bar', ['foo' => ['bar' => 'baz']]);\n// > 'baz'\n```\n\n----------------------------------------\n\nTITLE: Displaying Sponsor Logo in HTML\nDESCRIPTION: This HTML snippet creates a clickable image link to the Blackfire.io documentation, displaying the Blackfire logo as a sponsor of Twig.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/twig/twig/README.rst#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://docs.blackfire.io/introduction?utm_source=twig&utm_medium=github_readme&utm_campaign=logo\">\n    <img src=\"https://static.blackfire.io/assets/intemporals/logo/png/blackfire-io_secondary_horizontal_transparent.png?1\" width=\"255px\" alt=\"Blackfire.io\">\n</a>\n```\n\n----------------------------------------\n\nTITLE: Incorrect JavaScript Line Wrapping Example\nDESCRIPTION: An example showing incorrect line wrapping for statements with complex logic, where the statement is broken arbitrarily despite not exceeding the 80 character limit.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/jquery/flot/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nif (a == 1 &&\t\t// This block is wrong!\n\tb == 2 &&\n\tc == 3) {}\n```\n\n----------------------------------------\n\nTITLE: Linking to PSR-7 Interfaces Method List in Markdown\nDESCRIPTION: Provides a markdown link to the PSR-7 interfaces method list document.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* [`PSR-7 Interfaces Method List`](docs/PSR7-Interfaces.md)\n```\n\n----------------------------------------\n\nTITLE: DOMPurify License Comment in JavaScript\nDESCRIPTION: This comment block contains the license information for DOMPurify version 3.0.6. It specifies the Apache license 2.0 and Mozilla Public License 2.0 as the governing licenses for the library.\nSOURCE: https://github.com/opencart/opencart/blob/master/tools/daux.io/themes/daux/js/mermaid.mjs.LICENSE.txt#2025-04-19_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n/*! @license DOMPurify 3.0.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.6/LICENSE */\n```\n\n----------------------------------------\n\nTITLE: GNU LGPL License Header\nDESCRIPTION: The header section of the GNU Lesser General Public License version 2.1, including copyright notice and initial preamble.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/admin/view/javascript/ckeditor/LICENSE.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n```\n\n----------------------------------------\n\nTITLE: Markdown Heading and Link Structure\nDESCRIPTION: Basic markdown structure consisting of a header and link to the main changelog location.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/symfony/deprecation-contracts/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCHANGELOG\n=========\n\nThe changelog is maintained for all Symfony contracts at the following URL:\nhttps://github.com/symfony/contracts/blob/main/CHANGELOG.md\n```\n\n----------------------------------------\n\nTITLE: Linking to PSR-7 Usage Guide in Markdown\nDESCRIPTION: Provides a markdown link to the PSR-7 usage guide document.\nSOURCE: https://github.com/opencart/opencart/blob/master/upload/system/storage/vendor/psr/http-message/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n* [`PSR-7 Usage Guide`](docs/PSR7-Usage.md)\n```"
  }
]
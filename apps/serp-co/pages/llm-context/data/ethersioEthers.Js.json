[
  {
    "owner": "ethers-io",
    "repo": "ethers.js",
    "content": "TITLE: Handling Large Integers with ethers.js BigNumber\nDESCRIPTION: This snippet demonstrates creating and manipulating BigNumber objects from ethers.js to handle large integers that would exceed JavaScript's native number precision limits.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/src.ts/utils/test.txt#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// The above examples will not work with very large numbers,\n// since JavaScript only uses 53-bits for integers, so any value\n// greater than (2^53 - 1) will lose precision\n\n// Instead, you can use BigNumber, which is safe for any Ethereum value\nconst value = ethers.BigNumber.from(\"1000000000000000000\");\n\n// This works with hexadecimal strings as well\nconst value = ethers.BigNumber.from(\"0x1234\");\n```\n\n----------------------------------------\n\nTITLE: Converting Numbers to Strings with ethers.js Utilities\nDESCRIPTION: This snippet shows how to use ethers.js utility functions to convert numbers to string representations. It demonstrates formatting numbers to decimal strings and hexadecimal strings with the '0x' prefix.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/src.ts/utils/test.txt#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert the BigNumber to a decimal string\nconst decimalString = value.toString();\n\n// Convert the BigNumber to a hexadecimal string (with 0x prefix)\nconst hexString = value.toHexString();\n```\n\n----------------------------------------\n\nTITLE: Installing Ethers.js with npm\nDESCRIPTION: Command to install the Ethers.js library using npm package manager\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/home/ricmoo/some_project> npm install ethers\n```\n\n----------------------------------------\n\nTITLE: Importing Ethers.js in Browser\nDESCRIPTION: Example of importing the Ethers.js library in a browser environment using ES modules\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/README.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n    import { ethers } from \"./dist/ethers.min.js\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Converting Hexadecimal Strings to Numbers in JavaScript\nDESCRIPTION: This code shows how to parse a hexadecimal string into a JavaScript number. It includes examples with and without the '0x' prefix.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/src.ts/utils/test.txt#2025-04-14_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert a hexadecimal string to a number\nconst wei = parseInt(\"0x1234\", 16);\n\n// Or without the \"0x\" prefix\nconst wei = parseInt(\"1234\", 16);\n```\n\n----------------------------------------\n\nTITLE: Converting Decimal Strings to Numbers in JavaScript\nDESCRIPTION: This snippet demonstrates how to convert a string containing a decimal number to a JavaScript number using the built-in parseInt or parseFloat functions.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/src.ts/utils/test.txt#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Convert a string to a number\nconst wei = parseInt(\"1000000000000000000\");\n\n// This works too\nconst wei = parseFloat(\"1000000000000000000\");\n```\n\n----------------------------------------\n\nTITLE: Building ESM Files with npm and TypeScript\nDESCRIPTION: Commands used to generate the ESM files using TypeScript compiler with the tsconfig.esm.json configuration. The files are automatically generated during the build process and deleted during clean-up.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/misc/basedirs/lib.esm/README.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server. After running this command, the application can be accessed at http://localhost:4200/ with automatic reloading enabled for any source file changes.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/testcases/test-env/angular/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Reference Links Collection in Markdown\nDESCRIPTION: A structured collection of markdown links organized by categories including BIPs, BIP39 wordlists, EIPs, and general open standards used in blockchain technology. Each link provides access to official documentation and specifications.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/docs.wrm/links/specs.txt#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# BIPs\nlink-bip-39 [BIP-39](https://en.bitcoin.it/wiki/BIP_0039)\nlink-bip-32 [BIP-32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\nlink-bip-44 [BIP-44](https://en.bitcoin.it/wiki/BIP_0044)\n\n# BIP 39 lists\nlink-bip39-wordlists [BIP-39 Wordlists](https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md)\nlink-bip39-cz [Czech wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/czech.txt)\nlink-bip39-es [Spanish wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/spanish.txt)\nlink-bip39-en [English wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt)\nlink-bip39-fr [French wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/french.txt)\nlink-bip39-it [Italian wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/italian.txt)\nlink-bip39-ja [Japanese wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/japanese.txt)\nlink-bip39-ko [Korean wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/korean.txt)\nlink-bip39-pt [Portuguese wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/portuguese.txt)\nlink-bip39-zh_tw [Tradional Chinese wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/chinese_traditional.txt)\nlink-bip39-zh_cn [Simplified Chinese wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/chinese_simplified.txt)\n\n# EIPs; see https://eips.ethereum.org/all\nlink-eip-155 [EIP-155](https://eips.ethereum.org/EIPS/eip-155)\nlink-eip-191 [EIP-191](https://eips.ethereum.org/EIPS/eip-191)\nlink-eip-609 [EIP-609](https://eips.ethereum.org/EIPS/eip-609)\nlink-eip-634 [EIP-634](https://eips.ethereum.org/EIPS/eip-634)\nlink-eip-712 [EIP-712](https://eips.ethereum.org/EIPS/eip-712)\nlink-eip-1014 [EIP-1014](https://eips.ethereum.org/EIPS/eip-1014)\nlink-eip-1193 [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193)\nlink-eip-1559 [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\nlink-eip-1577 [EIP-1577](https://eips.ethereum.org/EIPS/eip-1577)\nlink-eip-2070 [EIP-2930](https://eips.ethereum.org/EIPS/eip-2070)\nlink-eip-2098 [EIP-2098](https://eips.ethereum.org/EIPS/eip-2098)\nlink-eip-2304 [EIP-2304](https://eips.ethereum.org/EIPS/eip-2304)\nlink-eip-2718 [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)\nlink-eip-2930 [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\nlink-eip-4788 [EIP-4844](https://eips.ethereum.org/EIPS/eip-4788)\nlink-eip-4844 [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n\n# Open Standards\nlink-base58 [Base58](https://en.bitcoinwiki.org/wiki/Base58)\nlink-cors [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)\nlink-crowdsale [Crowdsale Wallet](https://github.com/ethereum/pyethsaletool)\nlink-icap [ICAP Address](https://github.com/ethereum/wiki/wiki/Inter-exchange-Client-Address-Protocol-%28ICAP%29)\nlink-jsonrpc [link-jsonrpc](https://github.com/ethereum/wiki/wiki/JSON-RPC)\nlink-mit [MIT License](https://en.m.wikipedia.org/wiki/MIT_License)\nlink-namehash [namehash](https://docs.ens.domains/contract-api-reference/name-processing#hashing-names)\nlink-rlp [Recursive-Length Prefix](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/)\nlink-pbkdf2 [PBKDF2](https://en.wikipedia.org/wiki/PBKDF2)\nlink-solc-abi [ABI Specification](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#formal-specification-of-the-encoding)\nlink-solc-jsonabi [ABI JSON Specification](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json)\nlink-solc-errors [Solidity Custom Errors](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#errors)\nlink-solc-events [Solidity Events](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#events)\nlink-solc-output [solc standard output](https://solidity.readthedocs.io/en/v0.6.0/using-the-compiler.html#output-description)\nlink-solc-packed [Non-Standard Packed Mode](https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#non-standard-packed-mode)\nlink-uuid [UUID](https://www.ietf.org/rfc/rfc4122.txt)\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Artifacts\nDESCRIPTION: Command for scaffolding new Angular components. This can also be used to generate other Angular artifacts like directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/testcases/test-env/angular/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command to build the Angular application for production. The compiled files will be output to the dist/ directory.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/testcases/test-env/angular/README.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner. This will run all test specifications defined in the project.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/testcases/test-env/angular/README.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests. This requires installing a package that implements end-to-end testing capabilities before it can be used.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/testcases/test-env/angular/README.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command to display help information for the Angular CLI. This provides guidance on available commands and their options.\nSOURCE: https://github.com/ethers-io/ethers.js/blob/main/testcases/test-env/angular/README.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```"
  }
]
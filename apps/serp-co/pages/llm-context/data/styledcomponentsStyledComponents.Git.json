[
  {
    "owner": "styled-components",
    "repo": "styled-components.git",
    "content": "TITLE: Creating a Complete UI Component with styled-components in React\nDESCRIPTION: This comprehensive example demonstrates creating and using styled components within a React application. It creates styled Title and Wrapper components with specific styling and uses them in a React functional component.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/README.md#2025-04-17_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\nimport React from 'react';\n\nimport styled from 'styled-components';\n\n// Create a <Title> react component that renders an <h1> which is\n// centered, palevioletred and sized at 1.5em\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n// Create a <Wrapper> react component that renders a <section> with\n// some padding and a papayawhip background\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n\nfunction MyUI() {\n  return (\n    // Use them like any other React component – except they're styled!\n    <Wrapper>\n      <Title>Hello World, this is my first styled component!</Title>\n    </Wrapper>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Button Component with styled-components in JSX\nDESCRIPTION: This example demonstrates the basic usage of styled-components to create a styled button with grey text using the tagged template literal syntax.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nconst Button = styled.button`\n  color: grey;\n`;\n```\n\n----------------------------------------\n\nTITLE: Creating a Button Component with styled-components using Style Objects\nDESCRIPTION: This example shows how to create a styled button using the style objects syntax, which allows for easy porting of CSS from inline styles while still supporting advanced features.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/README.md#2025-04-17_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\nconst Button = styled.button({\n  color: 'grey',\n});\n```\n\n----------------------------------------\n\nTITLE: Using Refs with styled-components\nDESCRIPTION: Demonstrates how to use React refs with styled-components, allowing direct access to the underlying DOM elements through React's forwardRef API.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_12\n\nLANGUAGE: JSX\nCODE:\n```\nconst StyledInput = styled.input`\n  color: paleviolet;\n`;\n\nclass Form extends Component {\n  inputRef = React.createRef()\n\n  componentDidMount() {\n    if (this.inputRef) {\n      this.inputRef.current.focus()\n    }\n  }\n\n  render() {\n    return (\n      <StyledInput ref={this.inputRef} />\n    )\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Comprehensive Media Templates in styled-components\nDESCRIPTION: A more advanced implementation that generates media query templates for multiple screen sizes using Object.keys.reduce to create a reusable media utility.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// these sizes are arbitrary and you can set them to whatever you wish\nimport { css } from 'styled-components'\n\nconst sizes = {\n  giant: 1170,\n  desktop: 992,\n  tablet: 768,\n  phone: 376,\n}\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `\n  return accumulator\n}, {})\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Styled Button Component in styled-components\nDESCRIPTION: A simple example showing how to create a basic button component with styled-components using the styled.button template literal syntax.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst Button = styled.button`\n  padding: 0.5em 2em;\n\n  /* …more styles here… */\n`;\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Button with Props in styled-components\nDESCRIPTION: Demonstrates how to create a button component that adjusts its styles based on props. The button changes its padding when the 'small' prop is provided.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst Button = styled.button`\n  /* If it's a small button use less padding */\n  padding: ${props => props.small ? '0.25em 1em' : '0.5em 2em'};\n\n  /* …more styles here… */\n`;\n```\n\n----------------------------------------\n\nTITLE: Using useTheme Hook with ThemeProvider (JSX)\nDESCRIPTION: Shows the proper usage of the useTheme hook within a ThemeProvider context, including example components and theme implementation.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/src/utils/errors.md#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useTheme } from 'styled-components';\nexport function StyledCompoent({ children }) {\n  const theme = useTheme();\n  return <div style={{ width: theme.sizes.full }}>{children}</div>;\n}\n\nimport { StyledComponent } from './StyledComponent';\nimport { theme } from './theme';\nexport function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <StyledComponent />\n    </ThemeProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Media Query Utility with styled-components\nDESCRIPTION: A JavaScript utility that creates a media query function for handheld devices using styled-components' css tagged template literal.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// style-utils.js\nimport { css } from 'styled-components'\n\nexport const media = {\n  handheld: (...args) => css`\n    @media (max-width: 420px) {\n      ${css(...args)};\n    }\n  `,\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Media Templates to a Container Component\nDESCRIPTION: Shows how to use the media templates to apply different padding values based on screen size in a container component.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst Container = styled.div`\n  color: #333;\n  ${media.desktop`padding: 0 20px;`}\n  ${media.tablet`padding: 0 10px;`}\n  ${media.phone`padding: 0 5px;`}\n`\n```\n\n----------------------------------------\n\nTITLE: Creating Text Truncation Utility Function\nDESCRIPTION: A JavaScript utility function that generates CSS for text truncation, allowing for reuse across multiple styled components with configurable width.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// style-utils.js\nexport function truncate(width) {\n  return `\n    width: ${width};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Dynamic Styles with Styled Components in JavaScript\nDESCRIPTION: This snippet demonstrates how to create a styled button component with dynamic padding based on a 'small' prop. It showcases the use of a template literal and a function to determine the padding size.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/faq.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst Button = styled.button`\n  /* If it's a small button use less padding */\n  padding: ${props => props.small ? '0.25em 1em' : '0.5em 2em'};\n\n  /* …more styles here… */\n`;\n```\n\n----------------------------------------\n\nTITLE: Defining Theme Prop Function in ThemeProvider (JavaScript)\nDESCRIPTION: Demonstrates the correct way to return an object from the 'theme' prop function in ThemeProvider.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/src/utils/errors.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ntheme={() => ({})}\n```\n\n----------------------------------------\n\nTITLE: Example Theme Function in ThemeProvider (JavaScript)\nDESCRIPTION: Example of the correct way to return an object from a theme prop function in ThemeProvider to avoid the #7 error message.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/src/utils/errors.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ntheme={() => ({})}\n```\n\n----------------------------------------\n\nTITLE: Using Media Query Utility in styled-components\nDESCRIPTION: Example of how to apply the media query utility to a styled component to change font size for handheld devices.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { media } from '../style-utils'\n\n// Make the text smaller on handheld devices\nconst Box = styled.div`\n  font-size: 16px;\n  ${media.handheld`\n    font-size: 14px;\n  `};\n`\n```\n\n----------------------------------------\n\nTITLE: Using Truncate Utility with styled-components\nDESCRIPTION: Demonstrates importing and using the truncate utility function within a styled component to create a div with text truncation.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_6\n\nLANGUAGE: JSX\nCODE:\n```\nimport { truncate } from '../style-utils';\n\n// Make this div truncate the text with an ellipsis\nconst Box = styled.div`\n  ${ truncate('250px') }\n  background: papayawhip;\n`;\n```\n\n----------------------------------------\n\nTITLE: Using Small Button Component in JSX\nDESCRIPTION: Shows how to use the button component with and without the 'small' prop in a React component.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\n<Button>This is a normal button!</Button>\n<Button small>This is a small button!</Button>\n```\n\n----------------------------------------\n\nTITLE: Naming Stylis Plugins (JavaScript)\nDESCRIPTION: Demonstrates how to properly name a Stylis plugin to prevent styling collisions in styled-components configurations.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/src/utils/errors.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n----------------------------------------\n\nTITLE: CSS for Text Truncation with Ellipsis\nDESCRIPTION: Standard CSS approach for truncating text with an ellipsis when content overflows its container.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n```\n\n----------------------------------------\n\nTITLE: CSS for Text Truncation with Fixed Width\nDESCRIPTION: CSS example showing text truncation with a fixed width for the container element.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_4\n\nLANGUAGE: CSS\nCODE:\n```\n.truncate {\n  /* Needs to be specific width */\n  width: 250px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n```\n\n----------------------------------------\n\nTITLE: SCSS Mixin Example for Media Queries\nDESCRIPTION: A SCSS mixin example showing how to create a reusable media query for handheld devices, using @content to pass in styles.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/tips-and-tricks.md#2025-04-17_snippet_7\n\nLANGUAGE: SCSS\nCODE:\n```\n@mixin handheld {\n  @media (max-width: 420px) {\n    @content;\n  }\n}\n\n.box {\n  font-size: 16px;\n  @include handheld {\n    font-size: 14px;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Resulting CSS Output from Styled Components\nDESCRIPTION: This CSS snippet shows the generated output from the styled-components example above. It illustrates how the styles are duplicated for different classes, each representing a different state of the button.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/styled-components/docs/faq.md#2025-04-17_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.foo{\n  padding: 0.25em 1em;\n  /* …more styles here… */\n}\n.bar{\n  padding: 0.5em 2em;\n  /* …more styles here… */\n}\n```\n\n----------------------------------------\n\nTITLE: Adding styled-components Badge to Markdown Documentation\nDESCRIPTION: This snippet provides the Markdown code needed to add a styled-components badge to your project's README or documentation, showing that your project uses styled-components.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/README.md#2025-04-17_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n[![style: styled-components](https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg?colorB=daa357&colorA=db748e)](https://github.com/styled-components/styled-components)\n```\n\n----------------------------------------\n\nTITLE: Running development commands for styled-components\nDESCRIPTION: Essential commands for styled-components development workflow, including running tests, code style checks, building the library, and starting the development sandbox.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/CONTRIBUTING.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn run test\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn run prettier\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn run build\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace sandbox dev\n```\n\n----------------------------------------\n\nTITLE: Running Benchmarks in React Native Web\nDESCRIPTION: Commands to run the benchmarks locally and open the results in a browser. The benchmarks test mounting performance and style updates across different implementations.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/benchmarks/README.md#2025-04-17_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nyarn benchmarks\nopen ./packages/benchmarks/dist/index.html\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies and configuring repository for styled-components development\nDESCRIPTION: Commands for setting up the styled-components development environment, including forking the repository, cloning it locally, installing dependencies, and configuring the upstream remote.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/CONTRIBUTING.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:YOUR_USERNAME/styled-components.git\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add upstream git@github.com:styled-components/styled-components.git\n```\n\n----------------------------------------\n\nTITLE: Contributing workflow commands for styled-components\nDESCRIPTION: Git commands for the contribution workflow, including updating the local main branch, creating a feature branch, installing dependencies, adding a changeset, and pushing changes.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/CONTRIBUTING.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout main && git pull -f upstream/main\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b fix-something\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn changeset\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit push -u origin your-branch-name\n```\n\n----------------------------------------\n\nTITLE: Running benchmarks for styled-components\nDESCRIPTION: Commands for running the three different benchmarks (mounting a deep tree, mounting a wide tree, and updating dynamic styles) to measure performance.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/CONTRIBUTING.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd packages/benchmarks\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn run build\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn run open\n```\n\n----------------------------------------\n\nTITLE: Development Mode for Benchmarks\nDESCRIPTION: Commands to run the benchmarks in development/watch mode for continuous testing during development.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/packages/benchmarks/README.md#2025-04-17_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nyarn compile --watch\nyarn benchmarks --watch\n```\n\n----------------------------------------\n\nTITLE: Adding New Core Team Members Process in Markdown\nDESCRIPTION: Instructions for adding new members to the styled-components Core Team, including privately reaching out to candidates, opening a pull request, and the responsibilities of the person merging the PR.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/CORE_TEAM.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- An existing Core Team member reaches out privately to see if the individual is interested. If they are, open a pull request adding them to the list.\n- Existing Core Team members review the pull request. The person merging the PR is responsible for adding them to the [\"Core\" GitHub team](https://github.com/orgs/styled-components/teams/core) and for adding them as an owner to the npm package. (`npm owner add <npmusername>`)\n```\n\n----------------------------------------\n\nTITLE: NPM Package Owner Addition Command in Markdown\nDESCRIPTION: Command syntax for adding a new owner to the styled-components NPM package, referenced within the instructions for adding new Core Team members.\nSOURCE: https://github.com/styled-components/styled-components.git/blob/main/CORE_TEAM.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm owner add <npmusername>\n```"
  }
]
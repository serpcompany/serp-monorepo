[
  {
    "owner": "framework7io",
    "repo": "framework7",
    "content": "TITLE: Class-Based Syntax for Framework7 Components\nDESCRIPTION: Example showing the new class-based syntax for defining Framework7 components with TypeScript support. This approach extends the Component class from Framework7.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Component } from 'famework7';\n\nexport default class extends Component {\n  data() {\n    return { foo: 'bar' };\n  }\n  mounted() {\n    console.log('mounted');\n    this.onMounted(); // call method\n  }\n  onMounted() {\n    // ...\n  }\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Reusable Components in Framework7\nDESCRIPTION: Example showing how to create custom reusable components using Framework7.registerComponent method. This defines a custom list item component with data and template.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nFramework7.registerComponent('my-list-item', {\n  data() {\n    return { foo: 'bar' };\n  },\n  template: `\n    <li class=\"list-item\" id=\"{{foo}}\">...</li>\n  `,\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Component Mixins in Framework7\nDESCRIPTION: Example showing how to create and use mixins in Framework7 components to share functionality across multiple components. This implementation includes lifecycle hooks and data.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nconst mountedMixin = {\n  mounted() {\n    // do something on mounted\n    console.log('mounted');\n  },\n};\nconst defaultDataMixin = {\n  data() {\n    return { foo: 'bar' };\n  },\n};\n// extend component with mixins\nexport default {\n  mixins: [mountedMixin, defaultDataMixin],\n  data() {\n    return { john: 'doe' };\n  },\n  // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Framework7 Routes Configuration with Alias Support\nDESCRIPTION: Example of Framework7 routes configuration with alias support, showing how to set up alternative paths to the same page using the alias parameter in route definitions.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nroutes = [\n  {\n    path: '/foo/',\n    url: 'somepage.html',\n    alias: '/bar/',\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Registering Global Component Mixins in Framework7\nDESCRIPTION: Example showing how to register a global mixin using Framework7.registerComponentMixin and how to use it in a component. This allows sharing functionality across the entire application.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nFramework7.registerComponentMixin('default-data-mixin', {\n  data() {\n    return { foo: 'bar' };\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Router Parameters Usage in Framework7 Routes Configuration\nDESCRIPTION: Examples showing how to use router parameters in Framework7 routes. Demonstrates the use of URL patterns, parameter passing, and route configuration options including URL templates with parameter placeholders.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n{ path: '/somepage/', url: 'http://myserver/page/' }\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{ path: '/user/:userId/posts/:postId/', url: 'http://myserver/userpost/' }\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{ path: '/user/:userId/posts/:postId/', url: 'http://myserver/{{userId}}/{{postId}}' }\n```\n\n----------------------------------------\n\nTITLE: Framework7 Router Navigation with Props\nDESCRIPTION: Enhanced router navigation supporting component props passing through route options or navigate method parameters.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nrouter.navigate('/somepage/', { props: { foo: 'bar' } })\n```\n\n----------------------------------------\n\nTITLE: Implementing Async Data Method in Router Component using Promise.then\nDESCRIPTION: Example of using async data method in a Router Component that fetches user data and returns it as a promise. The component uses the await syntax to fetch and return JSON data.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  async data() {\n    const user = await fetch('some/path').then((res) => res.json());\n    return {\n      user,\n    };\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Framework7 Routes Configuration with Redirect Support\nDESCRIPTION: Example of Framework7 routes configuration with redirect support, showing how to set up route redirections to other routes in the application.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nroutes = [\n  {\n    path: '/foo/',\n    url: 'somepage.html',\n  },\n  {\n    path: '/bar/',\n    redirect: '/foo/',\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Alternative Promise-Based Data Implementation for Router Component\nDESCRIPTION: Alternative approach to creating a promise-based data method that resolves with user data once fetched. This method explicitly creates and returns a Promise object.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  data() {\n    return new Promise((resolve) => {\n      fetch('some/path')\n        .then((res) => res.json())\n        .then((user) => resolve({ user }));\n    });\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Importing Framework7 Core Objects in Phenome Components\nDESCRIPTION: Example showing how to directly import Framework7 instance, f7ready function, and theme from Framework7 packages for use in functional components.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nimport { f7, f7ready, theme } from 'framework7-react';\n\n// or\n\nimport { f7, f7ready, theme } from 'framework7-vue';\n```\n\n----------------------------------------\n\nTITLE: Using Custom Components in Framework7 Templates\nDESCRIPTION: Example showing how to use custom registered components in Framework7 templates by using the custom component tag name in HTML markup.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_28\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"list\">\n  <ul>\n    <my-list-item></my-list-item>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Loading Framework7 Lazy Modules\nDESCRIPTION: New methods introduced in v3.4.0 for loading F7 modules during runtime. Supports loading single modules or arrays of modules with customizable module paths.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\napp.loadModule(module);\napp.loadModules([module]);\n```\n\n----------------------------------------\n\nTITLE: Using $tick Method for DOM Updates in Framework7 Components\nDESCRIPTION: Example showing how to use the $tick method to safely execute code after the DOM has been updated following multiple state changes.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nthis.$setState({ foo: 'bar' });\nthis.$setState({ john: 'doe' });\nthis.$tick(() => {\n  // DOM updated\n});\n```\n\n----------------------------------------\n\nTITLE: Using $setState with Callback for DOM Updates\nDESCRIPTION: Example of using $setState with a callback function that executes after the DOM has been updated. This allows for synchronizing code execution with DOM rendering.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nthis.$setState({ foo: 'bar' }, () => {\n  // DOM updated\n});\n```\n\n----------------------------------------\n\nTITLE: Using $update Method to Trigger DOM Updates\nDESCRIPTION: Example of the $update method which can be used to trigger DOM updates after directly modifying component properties without using $setState.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nthis.foo = 'bar';\nthis.$update(() => {\n  // DOM updated\n});\n```\n\n----------------------------------------\n\nTITLE: Framework7 Development Build Commands\nDESCRIPTION: Collection of npm scripts available for creating development builds of various Framework7 packages including Core, Vue, React and Svelte. Build output is placed in the build/ folder.\nSOURCE: https://github.com/framework7io/framework7/blob/master/README.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbuild:dev\nbuild-core:dev\nbuild-react:dev\nbuild-vue:dev\nbuild-svelte:dev\n```\n\n----------------------------------------\n\nTITLE: Framework7 Production Build Commands\nDESCRIPTION: Collection of npm scripts available for creating production builds of various Framework7 packages including Core, Vue, React and Svelte. Build output is placed in the packages/ folder.\nSOURCE: https://github.com/framework7io/framework7/blob/master/README.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbuild:prod\nbuild-core:prod\nbuild-react:prod\nbuild-vue:prod\nbuild-svelte:prod\n```\n\n----------------------------------------\n\nTITLE: Framework7 Utility Methods\nDESCRIPTION: New utility methods added for generating unique numbers and random IDs based on masks.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\napp.utils.uniqueNumber();\napp.utils.id('xxxx-xxxx-xxxx-xxxx'); // returns e.g. 'd692-c811-e032-6028'\n```\n\n----------------------------------------\n\nTITLE: Framework7 Statusbar Configuration\nDESCRIPTION: New statusbar configuration parameters and methods added in v3.4.0 for Android customization including overlay and color options.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\napp.statusbar.overlaysWebView(overlays);\napp.statusbar.setTextColor(color);\n```\n\n----------------------------------------\n\nTITLE: Using Registered Global Mixins in Components\nDESCRIPTION: Example showing how to use previously registered global mixins in a Framework7 component by referencing them by name in the mixins array.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  mixins: ['default-data-mixin'],\n  data() {\n    return { john: 'doe' };\n  },\n  // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Formatting Range Knob Label in JavaScript\nDESCRIPTION: New formatLabel parameter added to Range component that allows passing a function to format the knob label value.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nformatLabel: function(value) {\n  return formattedValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Kitchen Sink Demos with NPM Scripts\nDESCRIPTION: NPM scripts for building and running Kitchen Sink demos for different Framework7 packages. These commands build the development version of the specified package and run the corresponding Kitchen Sink demo.\nSOURCE: https://github.com/framework7io/framework7/blob/master/README.md#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- `core` - build development version of Core (vanilla JS) Framework7 package and run core Kitchen Sink\n- `react` - build development version of Framework7 React package and run React Kitchen Sink\n- `vue` - build development version of Framework7 Vue package and run Vue Kitchen Sink\n- `svelte` - build development version of Framework7 Svelte package and run Svelte Kitchen Sink\n```\n\n----------------------------------------\n\nTITLE: Modal Configuration with HTML Data Attributes\nDESCRIPTION: Example showing how to configure modal parameters using HTML data attributes in Framework7 v5.5.5. This allows specifying modal behavior like swipe-to-close and close-on-escape directly in markup.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"sheet-modal\" data-swipe-to-close=\"true\" data-close-on-escape=\"true\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Clearing Previous Router Pages in JavaScript\nDESCRIPTION: New router method to remove all previous (stacked) pages from the DOM.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nrouter.clearPreviousPages()\n```\n\n----------------------------------------\n\nTITLE: HTML Route Configuration with Data Attributes\nDESCRIPTION: Example showing how to specify page route opening behavior using the data-open-in attribute in an anchor tag.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/about/\" data-open-in=\"popup\">About</a>\n```\n\n----------------------------------------\n\nTITLE: Specifying Default Value for Prompt Dialog in JavaScript\nDESCRIPTION: Added ability to specify a default value for Prompt dialogs by passing it as the last parameter to the prompt method.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\napp.dialog.prompt('Enter value', 'Title', callback, 'Default value');\n```\n\n----------------------------------------\n\nTITLE: Changing Swiper Direction Dynamically in JavaScript\nDESCRIPTION: New method added to Swiper to change direction from horizontal to vertical (and back) dynamically.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nswiper.changeDirection()\n```\n\n----------------------------------------\n\nTITLE: Initializing Panel with Custom Parameters in HTML\nDESCRIPTION: Example of auto-initializing a panel with custom parameters using data attributes, demonstrating the new panel initialization approach.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_18\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"panel panel-left panel-cover\" data-swipe=\"true\" data-visible-breakpoint=\"1200\">\n  ...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Large Transparent Navbar in HTML\nDESCRIPTION: HTML structure for implementing a large transparent Navbar, similar to iOS 13 style, using additional CSS classes.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_17\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"navbar navbar-large navbar-large-transparent\">\n  <div class=\"navbar-bg\"></div>\n  <div class=\"navbar-inner\">...</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Large Navbar in HTML\nDESCRIPTION: Updated HTML structure for large Navbar, now requiring the navbar-large class on the main navbar element.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"navbar navbar-large\">\n  <div class=\"navbar-bg\"></div>\n  <div class=\"navbar-inner\">...</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Initializing Navbar with Background in HTML\nDESCRIPTION: New HTML structure for Navbar component, including a navbar-bg element for better customization and transitions.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"navbar\">\n  <div class=\"navbar-bg\"></div>\n  <div class=\"navbar-inner\">...</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Moving 'open-in' Functionality to Component Router\nDESCRIPTION: Relocates 'open-in' functionality to the component router in Framework7.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nmoveOpenInToComponentRouter()\n```\n\n----------------------------------------\n\nTITLE: Implementing 'open-in' Functionality for React Router\nDESCRIPTION: Adds support for 'open-in' functionality with React components router in Framework7.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimplementOpenIn()\n```\n\n----------------------------------------\n\nTITLE: Implementing 'open-in' Functionality for Svelte Router\nDESCRIPTION: Adds support for 'open-in' functionality with Svelte components router in Framework7.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimplementOpenIn()\n```\n\n----------------------------------------\n\nTITLE: Removing Virtual Slides in Swiper using JavaScript\nDESCRIPTION: New methods added to Swiper to remove virtual selected slides or all virtual slides.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nswiper.virtual.removeSlide(indexes)\nswiper.virtual.removeAllSlides()\n```\n\n----------------------------------------\n\nTITLE: Implementing 'open-in' Functionality for Vue Router\nDESCRIPTION: Adds support for 'open-in' functionality with Vue components router in Framework7.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nimplementOpenIn()\n```\n\n----------------------------------------\n\nTITLE: Renaming Dark Mode Parameters in Framework7 Core\nDESCRIPTION: Updates dark mode related parameters, properties, events and methods in Framework7 core.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nrenameDarkModeParams()\n```\n\n----------------------------------------\n\nTITLE: Creating Topic Branch in Git\nDESCRIPTION: Commands for creating and checking out a topic branch based on master. This ensures contributors avoid working directly on the master branch to prevent conflicts when pulling updates.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CONTRIBUTING.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit branch master/my_contribution master\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout master/my_contribution\n```\n\n----------------------------------------\n\nTITLE: Checking for Whitespace Issues in Git\nDESCRIPTION: Command to check for unnecessary whitespace in code changes before committing. This helps maintain clean code and follows project coding standards.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CONTRIBUTING.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit diff --check\n```\n\n----------------------------------------\n\nTITLE: Installing Framework7 Dependencies\nDESCRIPTION: Command to install all required dependencies for Framework7 development using npm package manager\nSOURCE: https://github.com/framework7io/framework7/blob/master/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Updating 'themeDark' Prop in React Components\nDESCRIPTION: Renames the 'themeDark' prop to 'dark' in Framework7 React components.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nrename(\"themeDark\", \"dark\")\n```\n\n----------------------------------------\n\nTITLE: Updating 'themeDark' Prop in Svelte Components\nDESCRIPTION: Renames the 'themeDark' prop to 'dark' in Framework7 Svelte components.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nrename(\"themeDark\", \"dark\")\n```\n\n----------------------------------------\n\nTITLE: Renaming 'autoDarkTheme' Prop in Vue App Component\nDESCRIPTION: Changes the 'autoDarkTheme' prop to 'autoDarkMode' in the Framework7 Vue App component.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nrename(\"autoDarkTheme\", \"autoDarkMode\")\n```\n\n----------------------------------------\n\nTITLE: Updating 'themeDark' Prop in Vue Components\nDESCRIPTION: Renames the 'themeDark' prop to 'dark' in Framework7 Vue components.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nrename(\"themeDark\", \"dark\")\n```\n\n----------------------------------------\n\nTITLE: Updating Dark Mode Classes in Framework7 Core\nDESCRIPTION: Renames the 'theme-dark' class to 'dark' for dark mode functionality in Framework7 core.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nrename(\"theme-dark\", \"dark\")\n```\n\n----------------------------------------\n\nTITLE: Panel Close Bug Fix\nDESCRIPTION: Fix for panel close routine when panel was closed immediately. Addresses issue #4108.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npanel.close();\nsetImmediate(() => {\n  // Fixed panel close routine\n});\n```\n\n----------------------------------------\n\nTITLE: Panel Backdrop Processing Update\nDESCRIPTION: Fix to prevent backdrop processing when panel backdrop is disabled. Addresses issue #4069.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nif (panel.params.backdrop === false) return;\nprocessBackdrop();\n```\n\n----------------------------------------\n\nTITLE: Router Props History Update\nDESCRIPTION: Fix to maintain router props history when page is loaded with passed props.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nrouter.load({\n  props: {...},\n  keepProps: true\n});\n```\n\n----------------------------------------\n\nTITLE: Displaying Framework7 Version Release in Markdown\nDESCRIPTION: Shows how to format a version release header in a changelog using Markdown. It includes the version number, a link to compare changes, and the release date.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_40\n\nLANGUAGE: markdown\nCODE:\n```\n# [v3.0.0-beta.7](https://github.com/framework7io/framework7/compare/v3.0.0-beta.6...v3.0.0-beta.7) - June 9, 2018\n```\n\n----------------------------------------\n\nTITLE: Formatting Changelog Entries in Markdown\nDESCRIPTION: Demonstrates how to structure changelog entries using Markdown, including nested lists for different components and their respective changes or new features.\nSOURCE: https://github.com/framework7io/framework7/blob/master/CHANGELOG.md#2025-04-17_snippet_41\n\nLANGUAGE: markdown\nCODE:\n```\n- Core\n  - Lots of MD styles updated to new Material Design specification\n  - Cards\n    - New outline cards style\n  - Chips\n    - New outline style + tweaked iOS chips styles\n  - FAB\n    - New FAB-Extended style with additional text label support inside of FAB\n    - Support for FAB actions label\n```\n\n----------------------------------------\n\nTITLE: Displaying Sponsor Links and Logos in HTML Table Structure\nDESCRIPTION: This HTML snippet shows how sponsors are displayed in a table format with each cell containing a logo image and link to the sponsor's website. The table is organized in rows and columns with centered alignment.\nSOURCE: https://github.com/framework7io/framework7/blob/master/README.md#2025-04-17_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"middle\">\n  <a href=\"https://views4you.com/buy-instagram-followers/\" target=\"_blank\">\n    <img src=\"https://framework7.io/i/sponsors/buy-instagram-followers-v4y.png\" alt=\"Buy Instagram Followers - Real, Instant Delivery & Only $0.49\" width=\"160\">\n  </a>\n</td>\n```\n\n----------------------------------------\n\nTITLE: Rendering Sponsor Table in HTML\nDESCRIPTION: This HTML snippet creates a table to display sponsor logos and links for the Framework7 project. It uses nested tables for layout and includes multiple rows of sponsors.\nSOURCE: https://github.com/framework7io/framework7/blob/master/BACKERS.md#2025-04-17_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n  <tr>\n    <td align=\"center\" valign=\"middle\">\n      <a href=\"https://www.wfmbuddy.com/\" target=\"_blank\">\n        <img src=\"https://framework7.io/i/sponsors/wfmbuddy.png\" alt=\"WFM Buddy - Delighting your Workforce\" width=\"160\">\n      </a>\n    </td>\n    <!-- Additional sponsor cells -->\n  </tr>\n  <!-- Additional rows of sponsors -->\n</table>\n```\n\n----------------------------------------\n\nTITLE: Rendering Sponsor Links Grid in HTML\nDESCRIPTION: This HTML code creates a grid layout of sponsor logos and links using table elements. Each cell contains an anchor tag with an image, linking to the sponsor's website.\nSOURCE: https://github.com/framework7io/framework7/blob/master/BACKERS.md#2025-04-17_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"middle\">\n  <a href=\"https://casinos-without-license.com/\" target=\"_blank\">\n    <img src=\"https://framework7.io/i/sponsors/casino-without-swedish-license1.png\" alt=\"Casino Without Swedish License\" width=\"160\">\n  </a>\n</td>\n<td align=\"center\" valign=\"middle\">\n  <a href=\"https://betpokies.com/\" target=\"_blank\">\n    <img src=\"https://framework7.io/i/sponsors/betpokies.png\" alt=\"Expert Australian Online Casino Guide\" width=\"160\">\n  </a>\n</td>\n<!-- Additional sponsor cells omitted for brevity -->\n```"
  }
]
[
  {
    "owner": "vinerya",
    "repo": "faiss_vector_aggregator",
    "content": "TITLE: Simple Average Aggregation with Faiss\nDESCRIPTION: Aggregates embeddings using simple averaging based on the specified parameters. It takes an input folder containing the FAISS index and metadata, aggregates based on a column name, and outputs the aggregated data to a specified output folder.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom faiss_vector_aggregator import aggregate_embeddings\n\n# Aggregate embeddings using simple averaging\naggregate_embeddings(\n    input_folder=\"data/input\",\n    column_name=\"id\",\n    output_folder=\"data/output\",\n    method=\"average\"\n)\n```\n\n----------------------------------------\n\nTITLE: Centroid (K-Means) Aggregation with Faiss\nDESCRIPTION: Aggregates embeddings using K-Means clustering to find the centroid of embeddings for each document ID.  The function requires specification of input and output folders as well as the column name for aggregation.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom faiss_vector_aggregator import aggregate_embeddings\n\n# Aggregate embeddings using K-Means clustering to find the centroid\naggregate_embeddings(\n    input_folder=\"data/input\",\n    column_name=\"id\",\n    output_folder=\"data/output\",\n    method=\"centroid\"\n)\n```\n\n----------------------------------------\n\nTITLE: PCA Aggregation with Faiss\nDESCRIPTION: Reduces high-dimensional embeddings to a single representative vector using Principal Component Analysis (PCA). It requires an input folder, a column name for aggregation, and an output folder for the resulting aggregated embeddings.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom faiss_vector_aggregator import aggregate_embeddings\n\n# Aggregate embeddings using PCA\naggregate_embeddings(\n    input_folder=\"data/input\",\n    column_name=\"id\",\n    output_folder=\"data/output\",\n    method=\"pca\"\n)\n```\n\n----------------------------------------\n\nTITLE: Weighted Average Aggregation with Faiss\nDESCRIPTION: Aggregates embeddings using weighted averaging, allowing for different weights to be assigned to each embedding.  It utilizes an input folder, a column name for aggregation, an output folder for results, and an array of weights corresponding to each embedding.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom faiss_vector_aggregator import aggregate_embeddings\n\n# Example weights for the embeddings\nweights = [0.1, 0.3, 0.6]\n\n# Aggregate embeddings using weighted averaging\naggregate_embeddings(\n    input_folder=\"data/input\",\n    column_name=\"id\",\n    output_folder=\"data/output\",\n    method=\"weighted_average\",\n    weights=weights\n)\n```\n\n----------------------------------------\n\nTITLE: Attentive Pooling Aggregation with Faiss\nDESCRIPTION: Aggregates embeddings using an attention mechanism. The code takes an input folder, a column name for aggregation, and an output folder for the results, using attentive pooling as the aggregation method.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom faiss_vector_aggregator import aggregate_embeddings\n\n# Aggregate embeddings using Attentive Pooling\naggregate_embeddings(\n    input_folder=\"data/input\",\n    column_name=\"id\",\n    output_folder=\"data/output\",\n    method=\"attentive_pooling\"\n)\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Faiss Aggregator\nDESCRIPTION: Installs required dependencies like faiss-cpu, numpy, scipy, scikit-learn, and langchain using pip. These packages provide the necessary functionalities for handling FAISS indexes, numerical computations, statistical functions, clustering, and document/vector stores.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npip install faiss-cpu numpy scipy scikit-learn langchain\n```\n\n----------------------------------------\n\nTITLE: Installing Faiss Vector Aggregator\nDESCRIPTION: Installs the faiss_vector_aggregator package using pip. This command is used to install the library and its dependencies to use it in your Python environment.\nSOURCE: https://github.com/vinerya/faiss_vector_aggregator/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install faiss_vector_aggregator\n```"
  }
]
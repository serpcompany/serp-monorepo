[
  {
    "owner": "weaviate",
    "repo": "weaviate-python-client",
    "content": "TITLE: Authentication with Bearer Token in Weaviate Client\nDESCRIPTION: Shows how to initialize the Weaviate Client with Bearer token authentication by providing the token in the additional_headers parameter. This method can be used to authenticate with Weaviate instances that require token-based authentication.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclient = weaviate.Client(\n    url='http://localhost:8080',\n    additional_headers={\n        {\"authorization\": \"Bearer <MY_TOKEN>\"}\n    }\n)\n```\n\n----------------------------------------\n\nTITLE: Using Async Client with Context Manager\nDESCRIPTION: Example showing how to instantiate and use the WeaviateAsyncClient using the async context manager pattern for automatic connection handling.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nasync with weaviate.use_async_with_local() as client:\n    # Your code\n```\n\n----------------------------------------\n\nTITLE: Using OAuth Client Credentials Authentication with Weaviate\nDESCRIPTION: Shows how to authenticate to Weaviate using the OAuth client credentials flow, including optional scope configuration based on the identity provider setup.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclient_credentials_config = weaviate.AuthClientCredentials(\n    client_secret = \"client_secret\",\n    scope = \"scope1 scope2\" # optional, depends on the configuration of your identity provider\n)\nclient = weaviate.Client(\"https://localhost:8080\", auth_client_secret=client_credentials_config)\n```\n\n----------------------------------------\n\nTITLE: Checking Cluster Node Status in Weaviate\nDESCRIPTION: Shows how to retrieve the status of all nodes in a Weaviate cluster using the cluster attribute of the Client object. This can be used to monitor the health and availability of nodes in a distributed Weaviate deployment.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nclient.cluster.get_nodes_status()\n```\n\n----------------------------------------\n\nTITLE: Using Client as a Context Manager in Python\nDESCRIPTION: Example showing how to use the Weaviate client as a context manager, which automatically handles closing connections when exiting the managed block.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nwith weaviate.connect_to_local() as client:\n    # Your code\n```\n\n----------------------------------------\n\nTITLE: Querying Reference Properties in Python with Weaviate\nDESCRIPTION: Demonstrates how to query reference properties in Weaviate using the Python client. This example retrieves articles with their properties and linked Person objects.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nresult = client.query.get(\n  \"Article\", [\"title\", \"url\", \"wordCount\", LinkTo(link_on=\"caller\", linked_class=\"Person\", properties=[\"name\"])]\n     )\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional Properties for Weaviate Queries\nDESCRIPTION: Shows how to use the AdditionalProperties dataclass to specify additional metadata to retrieve in a Weaviate query, including UUID, vector, timestamps, and distance.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nquery = client.query.get(\"Test\").with_additional(\n            weaviate.AdditionalProperties(\n                uuid=True,\n                vector=True,\n                creationTimeUnix=True,\n                lastUpdateTimeUnix=True,\n                distance=True,\n            )\n        )\n```\n\n----------------------------------------\n\nTITLE: Configuring Replication Factor in Schema with Python\nDESCRIPTION: Demonstrates how to configure the replication factor in a class schema definition when using Weaviate Server v1.17.0 or later. The replication factor determines how many copies of each object are stored across the cluster.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nmy_class = {\n    \"class\": \"MyClass\",\n    ...,\n    \"replicationConfig\": {\n        \"factor\": 1\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with API Key in Weaviate Python Client\nDESCRIPTION: Demonstrates how to authenticate with the Weaviate server using an API key, creating a client with API key authentication.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclient = weaviate.Client(url, auth_client_secret=AuthApiKey(api_key=\"my-secret-key\"))\n```\n\n----------------------------------------\n\nTITLE: Using Client Without Context Manager in Python\nDESCRIPTION: Example showing how to use the Weaviate client without a context manager, explicitly handling connection closing with a try-finally block to avoid stale connections.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ntry:\n    client = weaviate.connect_to_local()\n    # Your code\nfinally:\n    client.close()\n```\n\n----------------------------------------\n\nTITLE: Initializing Embedded Weaviate Database in Python\nDESCRIPTION: Shows how to create an embedded Weaviate database instance directly from the Python client, which automatically launches a Weaviate database in the background.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom weaviate import Client\nfrom weaviate.embedded import EmbeddedOptions\n\n# Create the embedded client which automatically launches a Weaviate database in the background\nclient = Client(embedded_options=EmbeddedOptions())\n```\n\n----------------------------------------\n\nTITLE: Grouping Objects in Weaviate Query Results\nDESCRIPTION: Shows how to use the with_group_by method to group returned objects by property values, specifying the number of groups and objects per group.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n.with_group_by(properties=[\"caller\"], groups=2, objects_per_group=3)\n```\n\n----------------------------------------\n\nTITLE: Running Single File Unit Test in Python\nDESCRIPTION: Command to run a unit test for a single file in the Weaviate Python client package. It uses the unittest module and allows for optional verbose output.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/test/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m unittest path_to_file_dir.file\n```\n\nLANGUAGE: bash\nCODE:\n```\npython -m unittest test.gql.test_get -v # -v is optional, -v = verbose\n```\n\n----------------------------------------\n\nTITLE: Using Async Client with Manual Connection\nDESCRIPTION: Example demonstrating manual connection handling with the WeaviateAsyncClient when not using the context manager pattern.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclient = weaviate.use_async_with_local()\nawait client.connect()\n# Your code\nawait client.close()\n```\n\n----------------------------------------\n\nTITLE: Configuring Error Retries for Weaviate Batch Operations\nDESCRIPTION: Shows how to configure automatic retries for failed objects in batch operations using WeaviateErrorRetryConf, with options to include or exclude specific error messages.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom weaviate import WeaviateErrorRetryConf\n\nwith client.batch(\n    weaviate_error_retries=WeaviateErrorRetryConf(number_retries=3),\n) as batch:\n    # Your code\n```\n\n----------------------------------------\n\nTITLE: Configuring Selective Error Retries for Weaviate Batch Operations\nDESCRIPTION: Demonstrates how to exclude specific errors from retry attempts in batch operations, retrying all other errors.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nfrom weaviate import WeaviateErrorRetryConf\n\nwith client.batch(\n    weaviate_error_retries=WeaviateErrorRetryConf(number_retries=3, errors_to_exclude=[\"Ignore me\", \"other error to ignore\"]),\n) as batch:\n    # Your code\n```\n\n----------------------------------------\n\nTITLE: Configuring Inclusive Error Retries for Weaviate Batch Operations\nDESCRIPTION: Shows how to include only specific errors for retry attempts in batch operations, ignoring all other errors.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfrom weaviate import WeaviateErrorRetryConf\n\nwith client.batch(\n    weaviate_error_retries=WeaviateErrorRetryConf(number_retries=3, errors_to_include=[\"error to retry\", \"other error to test again\"]),\n) as batch:\n    # Your code\n```\n\n----------------------------------------\n\nTITLE: Building Python Package Distribution\nDESCRIPTION: Command to build source distribution and wheel for the Python package. This creates the distribution files in the dist directory.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/publishing.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython setup.py sdist bdist_wheel\n```\n\n----------------------------------------\n\nTITLE: Setting Consistency Level for Weaviate Queries\nDESCRIPTION: Demonstrates how to set the consistency level for queries using with_consistency_level and retrieve the consistency status in the response using with_additional.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nresp = (\n    client.query.get(\"Article\", [\"name\"])\n    .with_additional(\"isConsistent\")\n    .with_consistency_level(ConsistencyLevel.ALL)\n    .do()\n)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple GraphQL Queries with Aliases in Weaviate\nDESCRIPTION: Shows how to execute multiple GraphQL queries simultaneously using multi_get with aliases to distinguish between results.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclient.query.multi_get(\n        [\n           client.query.get(\"Ship\", [\"name\"]).with_alias(\"one\"),\n           client.query.get(\"Ship\", [\"size\"]).with_alias(\"two\"),\n           client.query.get(\"Person\", [\"name\"])\n        ]\n```\n\n----------------------------------------\n\nTITLE: Using nearText Filter with Autocorrect in Python\nDESCRIPTION: Demonstrates how to use the nearText filter with autocorrect enabled in a Weaviate query. This feature allows for automatic correction of misspelled concepts before executing the query.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .near_text(\n        {\n            'concepts': ['Ecconomy'],\n            'autocorrect': True\n        }\n    )\n```\n\n----------------------------------------\n\nTITLE: Using Ask Filter with Autocorrect in Python\nDESCRIPTION: Shows how to use the ask filter with autocorrect enabled in a Weaviate query. This feature automatically corrects spelling errors in the question before processing the query.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .with_ask(\n        {\n            'question': 'When was the last financial crysis?',\n            'autocorrect': True\n        }\n    )\n```\n\n----------------------------------------\n\nTITLE: Generating Coverage Report in Python\nDESCRIPTION: Command to generate a coverage report after running coverage tests. It skips 100% covered files and shows missing lines.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/test/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncoverage report -m --skip-covered # --skip-covered = skip 100% covered files, -m = show missing lines\n```\n\n----------------------------------------\n\nTITLE: Retrieving Additional Properties in Weaviate Query\nDESCRIPTION: Demonstrates various ways to retrieve additional properties in a Weaviate query using the with_additional method. This includes retrieving single or multiple properties, and using complex clauses.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/changelog.rst#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .with_additional('id')\n\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .with_additional(['id', 'certainty'])\n\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .with_additional(\n        {\n            'classification' : [\n                'basedOn',\n                'classifiedFields',\n                'completed',\n                'id',\n                'scope'\n            ]\n        }\n    )\n\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .with_additional(\n        {\n            'classification' : 'completed'\n        }\n    )\n\nclause = {\n    'token': [\n        'certainty',\n        'endPosition',\n        'entity',\n        'property',\n        'startPosition',\n        'word',\n    ]\n}\nsettings = {\n    'properties': [\"content\"],\n    'limit': 10,\n    'certainty': 0.8\n}\nclient.query\\\n    .get('Article', ['title', 'author'])\\\n    .with_additional(\n        (clause, settings)\n    )\n```\n\n----------------------------------------\n\nTITLE: RST Table of Contents Directive\nDESCRIPTION: Sphinx documentation table of contents configuration that specifies the documentation structure and included modules.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/index.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n   :hidden:\n   :caption: Contents:\n\n   modules\n   weaviate.exceptions\n   changelog\n   genindex\n```\n\n----------------------------------------\n\nTITLE: Running Full Package Coverage Test in Python\nDESCRIPTION: Command to run a coverage test for the entire Weaviate Python client package. It uses the coverage module with unittest and allows for optional verbose output.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/test/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncoverage run -m unittest -v # -v is optional, -v = verbose\n```\n\n----------------------------------------\n\nTITLE: Running Full Package Unit Test in Python\nDESCRIPTION: Command to run unit tests for the entire Weaviate Python client package. It uses the unittest module and allows for optional verbose output.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/test/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython -m unittest -v # -v is optional, -v = verbose\n```\n\n----------------------------------------\n\nTITLE: Running Single File Coverage Test in Python\nDESCRIPTION: Command to run a coverage test for a single file in the Weaviate Python client package. It uses the coverage module with unittest and allows for optional verbose output.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/test/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncoverage run -m unittest path_to_the_file_dir.file -v # -v is optional, -v = verbose\n```\n\nLANGUAGE: bash\nCODE:\n```\ncoverage run -m unittest test.gql.test_get -v # -v is optional, -v = verbose\n```\n\n----------------------------------------\n\nTITLE: Linting Python Code with Pylint\nDESCRIPTION: Commands to lint Python code using Pylint. It can be used on individual files, modules, or the entire package.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/test/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npylint path_to_the_file_or_module\n```\n\nLANGUAGE: bash\nCODE:\n```\npylint weaviate # for the whole package\n```\n\nLANGUAGE: bash\nCODE:\n```\npylint weaviate/batch # for the module batch\n```\n\nLANGUAGE: bash\nCODE:\n```\npylint weaviate/connect/connection.py # for the connection.py file\n```\n\n----------------------------------------\n\nTITLE: Documentation Structure for Near Media Module\nDESCRIPTION: RestructuredText markup defining the documentation structure for the near_media module and its submodules, including configuration for API documentation generation.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.queries.near_media.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\nweaviate.collections.queries.near_media\n========================================\n\n.. automodule:: weaviate.collections.queries.near_media\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n\n.. weaviate.collections.queries.near_media.generate module\n.. --------------------------------------------------------\n\n.. .. automodule:: weaviate.collections.queries.near_media.generate\n..    :members:\n..    :undoc-members:\n..    :show-inheritance:\n..    :private-members:\n\n.. weaviate.collections.queries.near_media.query module\n.. -----------------------------------------------------\n\n.. .. automodule:: weaviate.collections.queries.near_media.query\n..    :members:\n..    :undoc-members:\n..    :show-inheritance:\n..    :private-members:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Module Documentation Directive\nDESCRIPTION: Base module documentation directive for the main weaviate package, excluding specific client classes.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: weaviate\n   :members:\n   :exclude-members: Client,BatchClient,ClientBatchingContextManager\n   :undoc-members:\n   :inherited-members:\n```\n\n----------------------------------------\n\nTITLE: Installing Package Locally for Testing\nDESCRIPTION: Command to install the package locally from the current directory to verify the version is set correctly before publishing to PyPI.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/publishing.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npip install .\n```\n\n----------------------------------------\n\nTITLE: Uploading Package to PyPI with Twine\nDESCRIPTION: Command to upload the built distribution files to PyPI using twine. This makes the package available for installation via pip.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/publishing.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntwine upload dist/*\n```\n\n----------------------------------------\n\nTITLE: Tagging Git Release Version\nDESCRIPTION: Git command to create an annotated tag for the release version and push it to the remote repository. Tags should follow the format 'v0.2.5' or 'v0.2.5rc0' for release candidates.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/publishing.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit tag -a '<your tag>' -m '<some message for the tag>' && git push --tags\n```\n\n----------------------------------------\n\nTITLE: Checking Package Distribution Files with Twine\nDESCRIPTION: Command to verify the integrity of the distribution files before uploading to PyPI. This checks for common issues with package metadata and formatting.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/publishing.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntwine check dist/*\n```\n\n----------------------------------------\n\nTITLE: Commented out Sphinx configuration for tenants.sync submodule\nDESCRIPTION: Commented out Sphinx configuration for generating documentation for the weaviate.collections.tenants.sync submodule. This section is not currently active in the documentation build.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.tenants.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. weaviate.collections.tenants.sync\n.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. .. automodule:: weaviate.collections.tenants.sync\n..    :members:\n..    :undoc-members:\n..    :show-inheritance:\n..    :private-members:\n```\n\n----------------------------------------\n\nTITLE: Sphinx RST Module Documentation Structure\nDESCRIPTION: RST format documentation structure for the weaviate.connect module and its related submodules, including authentication, base functionality, helpers, integrations, and v4 API support.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.connect.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: weaviate.connect\n   :members:\n   :undoc-members:\n   :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Sphinx Documentation for Weaviate Backup Module in RST\nDESCRIPTION: ReStructuredText (RST) directives for documenting the Weaviate Python client's backup module and its submodules. The directives specify that members, undocumented members, inheritance information, and private members should be included in the generated documentation.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.backup.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nweaviate.backup\n===============\n\n.. automodule:: weaviate.backup\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n\nweaviate.backup.backup\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. automodule:: weaviate.backup.backup\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n\nweaviate.backup.backup_location\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. automodule:: weaviate.backup.backup_location\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Sphinx automodule configuration for weaviate.collections.tenants\nDESCRIPTION: Sphinx configuration for generating documentation for the weaviate.collections.tenants module. It includes all members, undocumented members, inheritance information, and private members of the module.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.tenants.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: weaviate.collections.tenants\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Sphinx AutoDoc Directive for Weaviate Collections Backups Module\nDESCRIPTION: This RST directive configures Sphinx to automatically generate documentation for the weaviate.collections.backups module, including all members, undocumented members, inheritance information, and private members.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.backups.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: weaviate.collections.backups\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Sphinx AutoDoc Directive for Weaviate Collections Backups Submodule\nDESCRIPTION: This RST directive configures Sphinx to automatically generate documentation for the weaviate.collections.backups.backups submodule, including all members, undocumented members, inheritance information, and private members.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.backups.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: weaviate.collections.backups.backups\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Sphinx Auto-Documentation Configuration\nDESCRIPTION: reStructuredText directives for auto-generating Python module documentation using Sphinx, including member visibility settings and inheritance details.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.classes.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: weaviate.collections.classes\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Weaviate Query Modules Structure in RST\nDESCRIPTION: ReStructuredText documentation layout defining the structure and organization of Weaviate's query-related modules and submodules.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.queries.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nweaviate.collections.queries\n============================\n\n.. automodule:: weaviate.collections.queries\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n\n.. toctree::\n   :maxdepth: 1\n\n   weaviate.collections.queries.bm25\n   weaviate.collections.queries.fetch_object_by_id\n   weaviate.collections.queries.fetch_objects\n   weaviate.collections.queries.fetch_objects_by_ids\n   weaviate.collections.queries.hybrid\n   weaviate.collections.queries.near_image\n   weaviate.collections.queries.near_media\n   weaviate.collections.queries.near_object\n   weaviate.collections.queries.near_text\n   weaviate.collections.queries.near_vector\n\nSubmodules\n----------\n\nweaviate.collections.queries.base\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. automodule:: weaviate.collections.queries.base\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for Weaviate Hybrid Query Module\nDESCRIPTION: RST configuration directives for generating documentation of the hybrid query module, including settings for member visibility and inheritance documentation.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.queries.hybrid.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: weaviate.collections.queries.hybrid\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Documenting Weaviate Cluster Module with Sphinx\nDESCRIPTION: Sphinx autodoc directive for documenting the weaviate.cluster module. The directive includes all members, undocumented members, inheritance information, and private members from the module.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.cluster.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: weaviate.cluster\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Documenting Weaviate Cluster Types Submodule with Sphinx\nDESCRIPTION: Sphinx autodoc directive for documenting the weaviate.cluster.types submodule. The directive includes all members, undocumented members, inheritance information, and private members from the submodule.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.cluster.rst#2025-04-21_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: weaviate.cluster.types\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Documenting Weaviate Debug Module Structure in RST\nDESCRIPTION: RST directives for documenting the weaviate.debug module and its types submodule. Uses automodule to automatically generate documentation from docstrings, exposing all members including private ones.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.debug.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nweaviate.debug\n==============\n\n.. automodule:: weaviate.debug\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n\n\nweaviate.debug.types\n^^^^^^^^^^^^^^^^^^^^\n\n.. automodule:: weaviate.debug.types\n   :members:\n   :undoc-members:\n   :show-inheritance:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for Weaviate Exceptions in reStructuredText\nDESCRIPTION: This snippet configures Sphinx documentation to automatically generate documentation for the weaviate.exceptions module. It includes all members, undocumented members, and shows inheritance information for exception classes.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.exceptions.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: weaviate.exceptions\n   :members:\n   :undoc-members:\n   :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Auth Module Documentation\nDESCRIPTION: Documentation directive for the authentication module including private members.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.rst#2025-04-21_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: weaviate.auth\n   :members:\n   :undoc-members:\n   :private-members:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Subpackages Tree Directive\nDESCRIPTION: Table of contents tree directive listing all subpackages of the weaviate module.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.rst#2025-04-21_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   weaviate.backup\n   weaviate.classes\n   weaviate.cluster\n   weaviate.collections\n   weaviate.connect\n   weaviate.debug\n   weaviate.gql\n   weaviate.outputs\n   weaviate.rbac\n   weaviate.users\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Config Module Documentation\nDESCRIPTION: Documentation directive for the configuration module.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.rst#2025-04-21_snippet_3\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: weaviate.config\n   :members:\n   :undoc-members:\n```\n\n----------------------------------------\n\nTITLE: ReStructuredText Embedded Module Documentation\nDESCRIPTION: Documentation directive for the embedded module functionality.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.rst#2025-04-21_snippet_4\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: weaviate.embedded\n   :members:\n   :undoc-members:\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for Weaviate Python Client Documentation\nDESCRIPTION: This code snippet defines the table of contents for the Weaviate Python client documentation using reStructuredText. It sets up a toctree directive with a maximum depth of 3 and includes the 'weaviate' module.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/modules.rst#2025-04-21_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n   :maxdepth: 3\n\n   weaviate\n```\n\n----------------------------------------\n\nTITLE: Project Structure Example in Bash\nDESCRIPTION: Example directory structure showing the organization of the Weaviate Python Client codebase including packages, sub-packages and modules.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/README.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nweaviate/\n├── __init__.py\n├── client.py\n├── sub_package1/\n│   ├── __init__.py\n│   ├── module1.py\n├── sub_package2/\n    ├── __init__.py\n    ├── module2.py\n    ├── sub_sub_package3/\n        ├── __init__.py\n        ├── module3.py\n```\n\n----------------------------------------\n\nTITLE: Generate RST Documentation Files\nDESCRIPTION: Command to generate RST documentation files using sphinx-apidoc, excluding the proto package from documentation generation.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/README.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsphinx-apidoc --module-first  -o ./docs ./weaviate \"*proto*\"\n```\n\n----------------------------------------\n\nTITLE: Build HTML Documentation\nDESCRIPTION: Command to build the HTML documentation locally from the docs directory.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/README.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake html\n```\n\n----------------------------------------\n\nTITLE: View HTML Documentation\nDESCRIPTION: Command to open the locally built HTML documentation in a web browser.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/README.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopen _build/html/index.html\n```\n\n----------------------------------------\n\nTITLE: Commented Documentation for Hybrid Generate Module\nDESCRIPTION: Commented-out RST configuration for the hybrid query generation module documentation.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.queries.hybrid.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. weaviate.collections.queries.hybrid.generate module\n.. ---------------------------------------------------\n\n.. .. automodule:: weaviate.collections.queries.hybrid.generate\n..    :members:\n..    :undoc-members:\n..    :show-inheritance:\n..    :private-members:\n```\n\n----------------------------------------\n\nTITLE: Commented Documentation for Hybrid Query Module\nDESCRIPTION: Commented-out RST configuration for the main hybrid query module documentation.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.queries.hybrid.rst#2025-04-21_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\n.. weaviate.collections.queries.hybrid.query module\n.. ------------------------------------------------\n\n.. .. automodule:: weaviate.collections.queries.hybrid.query\n..    :members:\n..    :undoc-members:\n..    :show-inheritance:\n..    :private-members:\n```\n\n----------------------------------------\n\nTITLE: Commented out Sphinx configuration for tenants.tenants submodule\nDESCRIPTION: Commented out Sphinx configuration for generating documentation for the weaviate.collections.tenants.tenants submodule. This section is not currently active in the documentation build.\nSOURCE: https://github.com/weaviate/weaviate-python-client/blob/main/docs/weaviate.collections.tenants.rst#2025-04-21_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\n.. weaviate.collections.tenants.tenants\n.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. .. automodule:: weaviate.collections.tenants.tenants\n..    :members:\n..    :undoc-members:\n..    :show-inheritance:\n..    :private-members:\n```"
  }
]
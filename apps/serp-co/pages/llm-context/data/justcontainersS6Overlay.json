[
  {
    "owner": "just-containers",
    "repo": "s6-overlay",
    "content": "TITLE: Implementing s6-overlay in a Docker Container with Ubuntu and Nginx\nDESCRIPTION: This Dockerfile demonstrates how to implement s6-overlay in a Ubuntu container running Nginx. It downloads and extracts the s6-overlay components, configures Nginx to run in foreground mode, and sets the entrypoint to the s6 init process.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Dockerfile\nCODE:\n```\n# Use your favorite image\nFROM ubuntu\nARG S6_OVERLAY_VERSION=3.2.0.3\n\nRUN apt-get update && apt-get install -y nginx xz-utils\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nCMD [\"/usr/sbin/nginx\"]\n\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp\nRUN tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz /tmp\nRUN tar -C / -Jxpf /tmp/s6-overlay-x86_64.tar.xz\nENTRYPOINT [\"/init\"]\n```\n\n----------------------------------------\n\nTITLE: Complete S6 Overlay Dockerfile Example\nDESCRIPTION: A complete Dockerfile example using busybox as the base image, installing s6-overlay, and setting the ENTRYPOINT to /init, which is the entry point script provided by s6-overlay.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM busybox\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp\nRUN tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz /tmp\nRUN tar -C / -Jxpf /tmp/s6-overlay-x86_64.tar.xz\nENTRYPOINT [\"/init\"]\n```\n\n----------------------------------------\n\nTITLE: Installing S6 Overlay in Dockerfile\nDESCRIPTION: Example Dockerfile commands to download and extract s6-overlay tarballs. It obtains the noarch and architecture-specific tarballs from GitHub and extracts them to the root directory, preserving file permissions.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: dockerfile\nCODE:\n```\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp\nRUN tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz /tmp\nRUN tar -C / -Jxpf /tmp/s6-overlay-x86_64.tar.xz\n```\n\n----------------------------------------\n\nTITLE: Verifying S6-Overlay Downloads with SHA256 in Docker\nDESCRIPTION: A Docker snippet demonstrating how to verify the integrity of s6-overlay downloads using SHA256 checksums. It adds both the main package files and their corresponding checksum files to the container, then validates them using the sha256sum command.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_20\n\nLANGUAGE: sh\nCODE:\n```\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz.sha256 /tmp\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz /tmp\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz.sha256 /tmp\nRUN cd /tmp && sha256sum -c *.sha256\n```\n\n----------------------------------------\n\nTITLE: Classic Service Definition for S6 Overlay\nDESCRIPTION: Example of a classic s6 service run script in /etc/services.d. This approach creates a supervised service for Nginx that will be automatically restarted if it fails.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n#!/command/execlineb -P\nnginx -g \"daemon off;\"\n```\n\n----------------------------------------\n\nTITLE: Modern S6-RC Service Type Definition\nDESCRIPTION: Defining a service type as longrun in the s6-rc format. This indicates that the service should be supervised and kept running.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nlongrun\n```\n\n----------------------------------------\n\nTITLE: Modern S6-RC Service Run Script\nDESCRIPTION: The run script for a modern s6-rc longrun service. Similar to the classic approach, but placed in the s6-rc.d directory structure.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n#!/command/execlineb -P\nnginx -g \"daemon off;\"\n```\n\n----------------------------------------\n\nTITLE: Docker Build and Run Commands for s6-overlay Demo\nDESCRIPTION: Commands for building and running the s6-overlay demo container. Shows how to build the image, run it with port mapping, and inspect the process hierarchy using 'docker top' to demonstrate the s6 supervision tree in action.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-host $ docker build -t demo .\ndocker-host $ docker run --name s6demo -d -p 80:80 demo\ndocker-host $ docker top s6demo acxf\nPID                 TTY                 STAT                TIME                COMMAND\n11735               ?                   Ss                  0:00                \\_ s6-svscan\n11772               ?                   S                   0:00                \\_ s6-supervise\n11773               ?                   Ss                  0:00                | \\_ s6-linux-init-s\n11771               ?                   Ss                  0:00                \\_ rc.init\n11812               ?                   S                   0:00                | \\_ nginx\n11814               ?                   S                   0:00                | \\_ nginx\n11816               ?                   S                   0:00                | \\_ nginx\n11813               ?                   S                   0:00                | \\_ nginx\n11815               ?                   S                   0:00                | \\_ nginx\n11779               ?                   S                   0:00                \\_ s6-supervise\n11785               ?                   Ss                  0:00                | \\_ s6-ipcserverd\n11778               ?                   S                   0:00                \\_ s6-supervise\ndocker-host $ curl --head http://127.0.0.1/\nHTTP/1.1 200 OK\nServer: nginx/1.18.0 (Ubuntu)\nDate: Mon, 17 Jan 2022 13:33:58 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Mon, 17 Jan 2022 13:32:11 GMT\nConnection: keep-alive\nETag: \"61e56fdb-264\"\nAccept-Ranges: bytes\n```\n\n----------------------------------------\n\nTITLE: Version 3.0.0.0 Changes in Markdown\nDESCRIPTION: Outlines a complete rewrite of s6-overlay with revamped build and installation systems, usage of s6-linux-init and s6-rc, and changes to binary locations for better compatibility.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 3.0.0.0\n\n* Completely revamp the build system and the installation system.\n  * Building is now a single `make` invocation.\n  * No more self-extracting installer.\n  * One to five tarballs to be installed, depending on user needs.\n  * Only one of these tarballs is architecture-dependent.\n* Use shell where beneficial. Execline is still used where it makes sense.\n* Take advantage of new skaware.\n  * Stage 1 is now handled by [s6-linux-init](https://skarnet.org/software/s6-linux-init/).\n    * The new `S6_CATCHALL_USER` variable can be used to run the catch-all logger as non-root.\n  * Stage 2 is now handled by [s6-rc](https://skarnet.org/software/s6-rc/).\n    * `fix-attrs`,`cont-init`/`cont-finish`, and `/etc/services.d` are\nstill supported; under the hood, they're run as s6-rc services.\n    * A `user` bundle is provided for users to put all their services in.\n* Move binaries out of the way.\n  * All skaware is installed under `/package` and accessible via `/command`.\n  * All binaries are accessed via PATH resolution, making it transparent.\n  * `/usr/bin` symlinks are provided in optional tarballs.\n  * Some distributions will provide skaware binaries in their own packages;\nthose will likely be accessible via `/bin` or `/usr/bin`, but the overlay\nscripts do not care.\n* All in all this is a complete rewrite of s6-overlay, but the transition\nfrom 2.1.0.2 to 3.0.0.0 should be painless for users.\n```\n\n----------------------------------------\n\nTITLE: Container Environment Access Script\nDESCRIPTION: Example of accessing container environment variables using with-contenv helper\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_19\n\nLANGUAGE: sh\nCODE:\n```\n#!/command/with-contenv sh\nenv\n```\n\n----------------------------------------\n\nTITLE: Service Run Script Configuration\nDESCRIPTION: Shell script to execute a daemon service with stdout/stderr redirection\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh\nexec 2>&1\nexec mydaemon-in-the-foreground-and-logging-to-stderr\n```\n\n----------------------------------------\n\nTITLE: Service Exit Code Handler in Shell\nDESCRIPTION: Shell script that handles service exit codes and writes them to the container results file. Handles both normal exits and signal terminations.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh\n\nif test \"$1\" -eq 256 ; then\n  e=$((128 + $2))\nelse\n  e=\"$1\"\nfi\n\necho \"$e\" > /run/s6-linux-init-container-results/exitcode\n```\n\n----------------------------------------\n\nTITLE: Advanced Service Finish Script\nDESCRIPTION: Conditional finish script that only halts the container on non-zero and non-signal exits\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\n#!/command/execlineb -S1\nif { eltest ${1} -ne 0 -a ${1} -ne 256 }\n/run/s6/basedir/bin/halt\n```\n\n----------------------------------------\n\nTITLE: Updating Path References for s6-overlay Commands\nDESCRIPTION: Example demonstrating the change from absolute path references to relying on PATH for s6-overlay commands. Users should update command references from absolute paths to short names.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/bin/s6-chmod\n```\n\nLANGUAGE: bash\nCODE:\n```\ns6-chmod\n```\n\n----------------------------------------\n\nTITLE: Logger Service Configuration\nDESCRIPTION: Shell script to configure logutil-service for handling service logs\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_15\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh\nexec logutil-service /var/log/myapp\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Directory Preparation Script\nDESCRIPTION: Shell script to create and configure logging directory with appropriate permissions for the nobody user\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh -e\nmkdir -p /var/log/myapp\nchown nobody:nogroup /var/log/myapp\nchmod 02755 /var/log/myapp\n```\n\n----------------------------------------\n\nTITLE: Halting a Container from Inside\nDESCRIPTION: Command to gracefully shut down a container from inside rather than attempting to control the supervision tree directly.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n/run/s6/basedir/bin/halt\n```\n\n----------------------------------------\n\nTITLE: Privilege Dropping with Shell\nDESCRIPTION: Example of dropping privileges using s6-setuidgid in shell format\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_18\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh\nexec s6-setuidgid daemon myservice\n```\n\n----------------------------------------\n\nTITLE: Privilege Dropping with Execline\nDESCRIPTION: Example of dropping privileges using s6-setuidgid in execline format\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_17\n\nLANGUAGE: execline\nCODE:\n```\n#!/command/execlineb -P\ns6-setuidgid daemon\nmyservice\n```\n\n----------------------------------------\n\nTITLE: Adding Service to User Bundle in s6-rc\nDESCRIPTION: Command for adding a service named 'foo' to the user bundle, ensuring it gets started at container boot time.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntouch /etc/s6-overlay/s6-rc.d/user/contents.d/foo\n```\n\n----------------------------------------\n\nTITLE: Fix Attributes Configuration Example\nDESCRIPTION: Configuration examples for fix-attrs.d showing MySQL data directory permissions setup\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/lib/mysql true mysql 0600 0700\n```\n\n----------------------------------------\n\nTITLE: S6-RC Log Directory Preparation\nDESCRIPTION: Execline script for creating and configuring log directory in s6-rc format\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_16\n\nLANGUAGE: execline\nCODE:\n```\nif { mkdir -p /var/log/myapp }\nif { chown nobody:nogroup /var/log/myapp }\nchmod 02755 /var/log/myapp\n```\n\n----------------------------------------\n\nTITLE: Updating Shebang for with-contenv Script\nDESCRIPTION: Example showing how to update the shebang line for scripts using with-contenv, which now resides in /command rather than /usr/bin.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/usr/bin/with-contenv\n```\n\nLANGUAGE: bash\nCODE:\n```\n#!/command/with-contenv\n```\n\n----------------------------------------\n\nTITLE: Nginx Configuration Initialization Script\nDESCRIPTION: Execline script for initializing Nginx configuration using confd with environment variables\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n#!/command/execlineb -P\n\nwith-contenv\ns6-envuidgid nginx\nmultisubstitute\n{\n  import -u -D0 UID\n  import -u -D0 GID\n  import -u CONFD_PREFIX\n  define CONFD_CHECK_CMD \"/usr/sbin/nginx -t -c {{ .src }}\"\n}\nconfd --onetime --prefix=\"${CONFD_PREFIX}\" --tmpl-uid=\"${UID}\" --tmpl-gid=\"${GID}\" --tmpl-src=\"/etc/nginx/nginx.conf.tmpl\" --tmpl-dest=\"/etc/nginx/nginx.conf\" --tmpl-check-cmd=\"${CONFD_CHECK_CMD}\" etcd\n```\n\n----------------------------------------\n\nTITLE: MySQL Log Directories Permission Configuration\nDESCRIPTION: Configuration for MySQL log directories showing permission and ownership settings\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/log/mysql-error-logs true nobody,32768:32768 0644 2700\n/var/log/mysql-general-logs true nobody,32768:32768 0644 2700\n/var/log/mysql-slow-query-logs true nobody,32768:32768 0644 2700\n```\n\n----------------------------------------\n\nTITLE: Version 3.2.0.0 Changes in Markdown\nDESCRIPTION: Documents the removal of default global timeout for services and improved support for unprivileged containers like those created by Kubernetes.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 3.2.0.0\n\n* There is no default global timeout for starting services anymore. Previously,\nif the services took more than 5 seconds to be brought up, they would\nfail; the intent was to detect hanged containers (waiting on a dysfunctional\nnetwork connection, for instance) and make them fail early, but it has\nproven to create more problems than it was solving - so the timeout has\nbeen removed. If you need it, you can, as before, use the `S6_CMD_WAIT_FOR_SERVICES_MAXTIME`\nvariable.\n* More unprivileged configurations are supported: you should now be\nable to use s6-overlay in containers created by Kubernetes, for instance.\n```\n\n----------------------------------------\n\nTITLE: Version 3.1.0.0 Changes in Markdown\nDESCRIPTION: Documents changes to how PATH is handled, removal of version numbers in tarballs, removal of justc-envdir, and changes to docker stop exit code behavior.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 3.1.0.0\n\n* `/etc/s6-overlay/config/global_path` isn't provided or taken into\naccount anymore. Instead, the initial value of PATH for all the services\nis inherited from the `PATH` environment variable, that you can set\nin the Dockerfile.\n* Generated tarballs don't encode the version numbers anymore.\n(The download URLs provided by GitHub still encode the version numbers,\nso there is no possible confusion on what tarball you're downloading.)\n* justc-envdir does not exist anymore: use s6-envdir with the new -L\noption if you need environment variables with unlimited length.\n* `docker stop` now normally exits 0 (or any predefined exit code\nin `/run/s6-linux-init-container-results/exitcode`) instead of 111.\n```\n\n----------------------------------------\n\nTITLE: Basic Service Finish Script\nDESCRIPTION: Simple finish script that sets exit code to 0 and halts the container\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/README.md#2025-04-23_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\n#!/command/execlineb -S0\n\nforeground { redirfd -w 1 /run/s6-linux-init-container-results/exitcode echo 0 }\n/run/s6/basedir/bin/halt\n```\n\n----------------------------------------\n\nTITLE: Accessing Supervised Services in v3\nDESCRIPTION: Example showing the change in path for accessing supervised services, which moved from /var/run/s6/services to /run/service in v3.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n/var/run/s6/services/foobar\n```\n\nLANGUAGE: bash\nCODE:\n```\n/run/service/foobar\n```\n\n----------------------------------------\n\nTITLE: Setting Service Dependencies in s6-rc\nDESCRIPTION: Commands to make a service named 'foo' depend on the 'base' service, ensuring proper startup order.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir /etc/s6-overlay/s6-rc.d/foo/dependencies.d && touch /etc/s6-overlay/s6-rc.d/foo/dependencies.d/base\n```\n\n----------------------------------------\n\nTITLE: Version 2.1.0.0 Changes in Markdown\nDESCRIPTION: Adds support for Docker's USER directive and introduces a new s6-overlay-preinit binary for better runtime configuration.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 2.1.0.0\n\n* Add initial support for Docker's `USER` directive.\n* Add a new binary to the tarball (`s6-overlay-preinit`), and move creating\n  a specific folder from the build-time to runtime.\n```\n\n----------------------------------------\n\nTITLE: Version 2.0.0.0 Changes in Markdown\nDESCRIPTION: Introduces a change from s6-envdir to justc-envdir for environment variable handling, with a new script to maintain backward compatibility.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 2.0.0.0\n\n* Starting with version `2.0.0.0`, `with-contenv` no longer uses `s6-envdir`, instead it\n  uses [justc-envdir](https://github.com/just-containers/justc-envdir), a small fork that\n  uses the entire contents of the files in the envdir. A new script is introduced, `with-contenv-legacy`,\n  in case you rely on the old behavior.\n```\n\n----------------------------------------\n\nTITLE: Version 2.1.0.2 Changes in Markdown\nDESCRIPTION: Introduces a new self-extracting installer that works correctly on all distributions regardless of /bin symlink configuration.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 2.1.0.2\n\n* Add a new self-extracting installer as an installation\n  option. It works correctly on all distros, whether or not `/bin` is a\n  symlink to `/usr/bin` or a directory.\n```\n\n----------------------------------------\n\nTITLE: Version 1.21.8.0 Changes in Markdown\nDESCRIPTION: Documents the change to disk syncing behavior on container exit, which is now disabled by default to prevent unintended syncing of all host block devices.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 1.21.8.0\n\n* Up to and including version `1.21.8.0`, the init system would call `s6-sync` to sync disks when\n  the container exited. This actually syncs all block devices on the hosts, which is\n  likely not what you want to do. As of version `1.22.0.0`, this is disabled by default, see the\n  README on how to re-enable it.\n```\n\n----------------------------------------\n\nTITLE: Version 2.0.0.1 Changes in Markdown\nDESCRIPTION: Documents fixing issues with shells overwriting the cd binary and improving tarball permissions for better security.\nSOURCE: https://github.com/just-containers/s6-overlay/blob/master/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### Version 2.0.0.1\n\n* Fix issues with shells overwriting the `cd`\n  binary [#278](https://github.com/just-containers/s6-overlay/issues/278)\n  and tarballs having too-loose permissions [#274](https://github.com/just-containers/s6-overlay/issues/274).\n```"
  }
]
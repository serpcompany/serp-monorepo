[
  {
    "owner": "deepgram",
    "repo": "deepgram-js-sdk",
    "content": "TITLE: Initializing Deepgram SDK\nDESCRIPTION: JavaScript code to initialize the Deepgram SDK client using an API key.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\n// - or -\n// const { createClient } = require(\"@deepgram/sdk\");\n\nconst deepgram = createClient(DEEPGRAM_API_KEY);\n```\n\n----------------------------------------\n\nTITLE: Installing Deepgram SDK via npm\nDESCRIPTION: Command to install the Deepgram SDK using npm or yarn package managers.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @deepgram/sdk\n# - or -\n# yarn add @deepgram/sdk\n```\n\n----------------------------------------\n\nTITLE: Live Audio Transcription with Deepgram SDK in JavaScript\nDESCRIPTION: Sets up a real-time connection for streaming audio to Deepgram. This example shows how to establish a connection, handle transcription events, and send audio data as it becomes available.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst dgConnection = deepgram.listen.live({ model: \"nova\" });\n\ndgConnection.on(LiveTranscriptionEvents.Open, () => {\n  dgConnection.on(LiveTranscriptionEvents.Transcript, (data) => {\n    console.log(data);\n  });\n\n  source.addListener(\"got-some-audio\", async (event) => {\n    dgConnection.send(event.raw_audio_data);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Transcribing Local Files with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to transcribe local audio files using Deepgram's prerecorded API. The example shows how to use a file stream or file buffer with the nova model for transcription.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.listen.prerecorded.transcribeFile(\n  fs.createReadStream(\"./examples/spacewalk.wav\"),\n  {\n    model: \"nova\",\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing a Voice Agent with Deepgram SDK in JavaScript\nDESCRIPTION: Comprehensive example of setting up a voice agent using Deepgram's agent API. Includes configuring audio settings, speech models, language models, handling agent events, and managing the WebSocket connection.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\nimport { AgentEvents } from \"@deepgram/sdk\";\n\nconst deepgram = createClient(DEEPGRAM_API_KEY);\n\n// Create an agent connection\nconst agent = deepgram.agent();\n\n// Set up event handlers\nagent.on(AgentEvents.Open, () => {\n  console.log(\"Connection opened\");\n\n  // Configure the agent once connection is established\n  agent.configure({\n    audio: {\n      input: {\n        encoding: \"linear16\",\n        sampleRate: 16000,\n      },\n      output: {\n        encoding: \"linear16\",\n        container: \"wav\",\n        sampleRate: 24000,\n      },\n    },\n    agent: {\n      listen: {\n        model: \"nova-3\",\n      },\n      speak: {\n        model: \"aura-asteria-en\",\n      },\n      think: {\n        provider: {\n          type: \"anthropic\",\n        },\n        model: \"claude-3-haiku-20240307\",\n        instructions: \"You are a helpful AI assistant. Keep responses brief and friendly.\",\n      },\n    },\n  });\n});\n\n// Handle agent responses\nagent.on(AgentEvents.AgentStartedSpeaking, (data) => {\n  console.log(\"Agent started speaking:\", data[\"total_latency\"]);\n});\n\nagent.on(AgentEvents.ConversationText, (message) => {\n  console.log(`${message.role} said: ${message.content}`);\n});\n\nagent.on(AgentEvents.Audio, (audio) => {\n  // Handle audio data from the agent\n  playAudio(audio); // Your audio playback implementation\n});\n\nagent.on(AgentEvents.Error, (error) => {\n  console.error(\"Error:\", error);\n});\n\nagent.on(AgentEvents.Close, () => {\n  console.log(\"Connection closed\");\n});\n\n// Send audio data\nfunction sendAudioData(audioData) {\n  agent.send(audioData);\n}\n\n// Keep the connection alive\nsetInterval(() => {\n  agent.keepAlive();\n}, 8000);\n```\n\n----------------------------------------\n\nTITLE: Text-to-Speech with REST API in Deepgram SDK in JavaScript\nDESCRIPTION: Simple example of using Deepgram's text-to-speech REST API to convert text to audio. Uses the aura-2-thalia-en voice model for synthesis.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result } = await deepgram.speak.request({ text }, { model: \"aura-2-thalia-en\" });\n```\n\n----------------------------------------\n\nTITLE: Transcribing Remote Audio Files with Deepgram SDK\nDESCRIPTION: Example of transcribing a remote audio file using the Deepgram SDK's prerecorded transcription feature.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.listen.prerecorded.transcribeUrl(\n  {\n    url: \"https://dpgr.am/spacewalk.wav\",\n  },\n  {\n    model: \"nova\",\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Text-to-Speech with WebSocket in Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to use Deepgram's streaming text-to-speech API via WebSocket. This approach allows for real-time audio synthesis and streaming of the generated audio.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nconst dgConnection = deepgram.speak.live({ model: \"aura-asteria-en\" });\n\ndgConnection.on(LiveTTSEvents.Open, () => {\n  console.log(\"Connection opened\");\n\n  // Send text data for TTS synthesis\n  dgConnection.sendText(text);\n\n  // Send Flush message to the server after sending the text\n  dgConnection.flush();\n\n  dgConnection.on(LiveTTSEvents.Close, () => {\n    console.log(\"Connection closed\");\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Text Intelligence Analysis with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to use Deepgram's text intelligence API to analyze text content. This example performs topic extraction and sentiment analysis on a sample paragraph about the phrase \"The quick brown fox jumps over the lazy dog\".\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nconst text = `The history of the phrase 'The quick brown fox jumps over the\nlazy dog'. The earliest known appearance of the phrase was in The Boston\nJournal. In an article titled \"Current Notes\" in the February 9, 1885, edition,\nthe phrase is mentioned as a good practice sentence for writing students: \"A\nfavorite copy set by writing teachers for their pupils is the following,\nbecause it contains every letter of the alphabet: 'A quick brown fox jumps over\nthe lazy dog.'\" Dozens of other newspapers published the phrase over the\nnext few months, all using the version of the sentence starting with \"A\" rather\nthan \"The\". The earliest known use of the phrase starting with \"The\" is from\nthe 1888 book Illustrative Shorthand by Linda Bronson.[3] The modern form\n(starting with \"The\") became more common even though it is slightly longer than\nthe original (starting with \"A\").`;\n\nconst { result, error } = await deepgram.read.analyzeText(\n  { text },\n  { language: \"en\", topics: true, sentiment: true }\n);\n```\n\n----------------------------------------\n\nTITLE: Generating Captions from Transcriptions with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to convert Deepgram transcription results into WebVTT or SRT caption formats. This is useful for creating subtitles for videos or other media content.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nimport { webvtt /* , srt */ } from \"@deepgram/captions\";\n\nconst { result, error } = await deepgram.listen.prerecorded.transcribeUrl(\n  {\n    url: \"https://dpgr.am/spacewalk.wav\",\n  },\n  {\n    model: \"nova\",\n  }\n);\n\nconst vttOutput = webvtt(result);\n// const srtOutput = srt(result);\n```\n\n----------------------------------------\n\nTITLE: Importing Deepgram SDK via ESM\nDESCRIPTION: HTML script tag with type=\"module\" to import the Deepgram SDK using ECMAScript modules from a CDN.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n  import { createClient } from \"https://cdn.jsdelivr.net/npm/@deepgram/sdk/+esm\";\n  const deepgram = createClient(\"deepgram-api-key\");\n\n  console.log(\"Deepgram Instance: \", deepgram);\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Transcription of Remote Files with Callback URL in JavaScript\nDESCRIPTION: Shows how to transcribe remote audio files asynchronously using a callback URL. This method is useful for longer files or when you want to receive results via webhook.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CallbackUrl } from \"@deepgram/sdk\";\n\nconst { result, error } = await deepgram.listen.prerecorded.transcribeUrlCallback(\n  {\n    url: \"https://dpgr.am/spacewalk.wav\",\n  },\n  new CallbackUrl(\"http://callback/endpoint\"),\n  {\n    model: \"nova\",\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Importing Deepgram SDK via UMD\nDESCRIPTION: HTML script tag to import the Deepgram SDK using UMD (Universal Module Definition) from a CDN.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/@deepgram/sdk\"></script>\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Transcription of Local Files with Callback URL in JavaScript\nDESCRIPTION: Demonstrates how to transcribe local audio files asynchronously using a callback URL and file stream. Results are sent to the specified callback endpoint when processing completes.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CallbackUrl } from \"@deepgram/sdk\";\n\nconst { result, error } = await deepgram.listen.prerecorded.transcribeFileCallback(\n  fs.createReadStream(\"./examples/spacewalk.wav\"),\n  new CallbackUrl(\"http://callback/endpoint\"),\n  {\n    model: \"nova\",\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Transcribing Local Files Using File Buffer in JavaScript\nDESCRIPTION: Alternative approach to transcribe local audio files using readFileSync to load the entire file into memory before transcription. Uses the nova model for processing.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.listen.prerecorded.transcribeFile(\n  fs.readFileSync(\"./examples/spacewalk.wav\"),\n  {\n    model: \"nova\",\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Transcription of Local Files with File Buffer in JavaScript\nDESCRIPTION: Alternative approach for asynchronous transcription using a file buffer instead of a stream. This uses readFileSync to load the entire file into memory before sending for processing.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CallbackUrl } from \"@deepgram/sdk\";\n\nconst { result, error } = await deepgram.listen.prerecorded.transcribeFileCallback(\n  fs.readFileSync(\"./examples/spacewalk.wav\"),\n  new CallbackUrl(\"http://callback/endpoint\"),\n  {\n    model: \"nova\",\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Using Deepgram SDK with UMD Import\nDESCRIPTION: JavaScript code snippet demonstrating how to use the Deepgram SDK after importing it via UMD.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  const { createClient } = deepgram;\n  const _deepgram = createClient(\"deepgram-api-key\");\n\n  console.log(\"Deepgram Instance: \", _deepgram);\n  // ...\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating an API Key with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to create a new API key for a project with specific scopes and permissions. The options parameter allows configuring key properties like expiration and access levels.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.createProjectKey(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Listing API Keys for a Project with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to retrieve all API keys associated with a specific project. This is useful for managing access to Deepgram services within a project.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectKeys(projectId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Specific API Key with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to get details for a specific API key using its project ID and key ID. Returns information about the key's permissions, creation date, and other properties.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectKey(projectId, projectKeyId);\n```\n\n----------------------------------------\n\nTITLE: Deleting an API Key with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to permanently delete an API key from a project. This immediately revokes access for any applications using the key.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nconst { error } = await deepgram.manage.deleteProjectKey(projectId, projectKeyId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Projects with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to get a list of all projects accessible by the current API key. This is useful for managing multiple Deepgram projects from a single application.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjects();\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Specific Project with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to get details for a specific project using its project ID. Returns information about the project's configuration, usage, and other relevant details.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProject(projectId);\n```\n\n----------------------------------------\n\nTITLE: Updating a Project with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to update a project's configuration using its project ID. The options parameter allows specifying which aspects of the project to modify.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.updateProject(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Configuration Variables Setup\nDESCRIPTION: JavaScript configuration showing the required variables for API key, file location, and MIME type setup.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst deepgramApiKey = \"YOUR_DEEPGRAM_API_KEY\";\nconst file = \"YOUR_FILE_LOCATION\";\nconst mimetype = \"YOUR_FILE_MIME_TYPE\";\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project Members with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to get a list of all member accounts in a specific project. This helps manage user access and permissions within a Deepgram project.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectMembers(projectId);\n```\n\n----------------------------------------\n\nTITLE: Removing a Member from a Project with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to remove a member from a project using their member ID. This revokes their access to the project and its resources.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nconst { error } = await deepgram.manage.removeProjectMember(projectId, projectMemberId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Member Scopes with Deepgram SDK in JavaScript\nDESCRIPTION: Demonstrates how to get the permission scopes assigned to a specific member in a project. This helps verify what actions a member can perform within the project.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectMemberScopes(projectId, projectMemberId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Model Details in Deepgram JS SDK\nDESCRIPTION: Fetches details of a specific model for a given project and model ID. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getModel(projectId, modelId);\n```\n\n----------------------------------------\n\nTITLE: Updating Project Member Scope in Deepgram JS SDK\nDESCRIPTION: Updates the scope for a specified member in a project. Requires projectId, projectMemberId, and options as parameters. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.updateProjectMemberScope(\n  projectId,\n  projectMemberId,\n  options\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Deepgram SDK with Custom API URL\nDESCRIPTION: Example of creating a Deepgram client with a custom API URL for all SDK methods.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\n// - or -\n// const { createClient } = require(\"@deepgram/sdk\");\n\nconst deepgram = createClient(DEEPGRAM_API_KEY, {\n  global: { fetch: { options: { url: \"https://api.beta.deepgram.com\" } } },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Deepgram SDK for Transcription Only\nDESCRIPTION: Example of creating a Deepgram client with a custom API URL for transcription endpoints only.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\n// - or -\n// const { createClient } = require(\"@deepgram/sdk\");\n\nconst deepgram = createClient(DEEPGRAM_API_KEY, {\n  listen: { fetch: { options: { url: \"http://localhost:8080\" } } },\n});\n```\n\n----------------------------------------\n\nTITLE: Overriding Fetch Transmitter in Deepgram SDK\nDESCRIPTION: Example of creating a Deepgram client with a custom fetch function for HTTP requests.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\n// - or -\n// const { createClient } = require(\"@deepgram/sdk\");\n\nconst yourFetch = async () => {\n  return Response(\"...etc\");\n};\n\nconst deepgram = createClient(DEEPGRAM_API_KEY, {\n  global: { fetch: { client: yourFetch } },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy for Browser Requests in Deepgram SDK\nDESCRIPTION: Example of setting up a proxy for making REST-based requests in a browser environment.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\n\nconst deepgram = createClient(\"proxy\", {\n  global: { fetch: { options: { proxy: { url: \"http://localhost:8080\" } } } },\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Headers for Fetch in Deepgram SDK\nDESCRIPTION: Example of adding custom headers to fetch requests in the Deepgram SDK.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createClient } from \"@deepgram/sdk\";\n\nconst deepgram = createClient(\"proxy\", {\n  global: { fetch: { options: { headers: { \"x-custom-header\": \"foo\" } } } },\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project Usage Requests in Deepgram JS SDK\nDESCRIPTION: Fetches all requests associated with a given project ID based on provided options. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectUsageRequests(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project Invites in Deepgram JS SDK\nDESCRIPTION: Fetches all invitations associated with a given project ID. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectInvites(projectId);\n```\n\n----------------------------------------\n\nTITLE: Sending Project Invite in Deepgram JS SDK\nDESCRIPTION: Sends an invitation to a provided email address for a specific project. Requires projectId and options as parameters. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.sendProjectInvite(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Deleting Project Invite in Deepgram JS SDK\nDESCRIPTION: Removes a specified invitation from a project. Requires projectId and email as parameters. Returns an error object if the operation fails.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nconst { error } = await deepgram.manage.deleteProjectInvite(projectId, email);\n```\n\n----------------------------------------\n\nTITLE: Leaving Project in Deepgram JS SDK\nDESCRIPTION: Removes the authenticated user from a specified project. Requires projectId as a parameter. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.leaveProject(projectId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Project Usage Request in Deepgram JS SDK\nDESCRIPTION: Fetches a specific request associated with a given project ID and request ID. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectUsageRequest(projectId, requestId);\n```\n\n----------------------------------------\n\nTITLE: Creating On-Prem Credentials in Deepgram JS SDK\nDESCRIPTION: Creates new on-premises credentials for a specified project with given options. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.onprem.createCredentials(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Summarizing Project Usage in Deepgram JS SDK\nDESCRIPTION: Retrieves usage information associated with a given project ID based on provided options. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectUsageSummary(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project Usage Fields in Deepgram JS SDK\nDESCRIPTION: Lists features, models, tags, languages, and processing methods used for requests in a specified project. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectUsageFields(projectId, options);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project Balances in Deepgram JS SDK\nDESCRIPTION: Fetches the list of balance information for a specified project. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectBalances(projectId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Project Balance in Deepgram JS SDK\nDESCRIPTION: Fetches balance information for a specified project and balance ID. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getProjectBalance(projectId, balanceId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Models for a Project in Deepgram JS SDK\nDESCRIPTION: Fetches all models available for a given project. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getAllModels(projectId, {});\n```\n\n----------------------------------------\n\nTITLE: Listing On-Prem Credentials in Deepgram JS SDK\nDESCRIPTION: Retrieves a list of on-premises credentials for a specified project. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.onprem.listCredentials(projectId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific On-Prem Credentials in Deepgram JS SDK\nDESCRIPTION: Fetches specific on-premises credentials for a given project and credential ID. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.onprem.getCredentials(projectId, credentialId);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Project with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to permanently delete a Deepgram project using its project ID. This operation cannot be undone and will remove all associated resources.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nconst { error } = await deepgram.manage.deleteProject(projectId);\n```\n\n----------------------------------------\n\nTITLE: Deleting On-Prem Credentials in Deepgram JS SDK\nDESCRIPTION: Removes specific on-premises credentials for a given project and credential ID. Returns a result or error object.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.onprem.deleteCredentials(projectId, credentialId);\n```\n\n----------------------------------------\n\nTITLE: Version Support Matrix in Markdown\nDESCRIPTION: Table showing which versions of the deepgram-js-sdk are currently supported with security updates. Versions 3.3.x and 2.4.x are supported, while versions below 2.4.x are not supported.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/SECURITY.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n| ------- | ------------------ |\n| 3.3.x   | :white_check_mark: |\n| 2.4.x   | :white_check_mark: |\n| < 2.4.x   | :x:                |\n```\n\n----------------------------------------\n\nTITLE: Package Dependencies Configuration for Local Testing\nDESCRIPTION: Package.json configuration showing how to reference the local SDK files instead of the npm package for testing.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"dependencies\": {\n    \"@deepgram/sdk\": \"file:../../\"\n  }\n```\n\n----------------------------------------\n\nTITLE: Installing Root Project Dependencies\nDESCRIPTION: Command to install dependencies in the root SDK folder before testing.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Building Deepgram SDK Project\nDESCRIPTION: Command to build the Deepgram SDK project from root directory.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Navigating to Example Project Directory\nDESCRIPTION: Command to change directory to the prerecorded example project folder.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/prerecorded\n```\n\n----------------------------------------\n\nTITLE: Installing Example Project Dependencies\nDESCRIPTION: Command to install dependencies for the example project.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Getting Authentication Token Details with Deepgram SDK in JavaScript\nDESCRIPTION: Shows how to retrieve details about the current authentication token using the Deepgram management API. This can be used to verify token permissions and expiration.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/README.md#2025-04-21_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nconst { result, error } = await deepgram.manage.getTokenDetails();\n```\n\n----------------------------------------\n\nTITLE: Running the Example Project\nDESCRIPTION: Command to execute the example project for testing.\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/examples/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test\n```\n\n----------------------------------------\n\nTITLE: Git Push Command Example\nDESCRIPTION: Example git command showing how to push a new branch to a forked repository\nSOURCE: https://github.com/deepgram/deepgram-js-sdk/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit push myname issue-12\n```"
  }
]
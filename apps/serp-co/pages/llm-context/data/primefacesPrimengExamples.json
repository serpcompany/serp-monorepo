[
  {
    "owner": "primefaces",
    "repo": "primeng-examples",
    "content": "TITLE: Generating Angular Code Artifacts (bash)\nDESCRIPTION: Uses the Angular CLI `generate` (or `g`) command to create boilerplate code for various Angular structures. Replace `component-name` with the desired name. The command supports generating components, directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-i18n/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\nLANGUAGE: bash\nCODE:\n```\nng generate directive|pipe|service|class|guard|interface|enum|module\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Component using Bash\nDESCRIPTION: This command uses the Angular CLI's code scaffolding capabilities to generate a new Angular component. Replace `component-name` with the desired name for the new component. This command creates the necessary component files (.ts, .html, .css/.scss, .spec.ts) and updates the relevant module.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Generating an Angular Component using Bash\nDESCRIPTION: This Angular CLI command scaffolds a new Angular component. Replace `component-name` with the desired name for the new component. It creates the necessary files (TypeScript, HTML, CSS/SCSS, spec) under the appropriate directory structure.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart-tailwind/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server using Bash\nDESCRIPTION: This command starts the Angular development server locally. It compiles the application and serves it, typically at `http://localhost:4200/`. The server watches source files and automatically reloads the application upon changes.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server (bash)\nDESCRIPTION: Executes the Angular CLI command `ng serve` to compile and serve the application locally for development. It watches source files for changes and automatically reloads the application. The server is typically accessible at `http://localhost:4200/`.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-i18n/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Starting the Angular Development Server using Bash\nDESCRIPTION: This command starts the Angular development server. It compiles the application and serves it locally, typically on `http://localhost:4200/`. The server watches for source file changes and automatically reloads the application.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart-tailwind/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Building the Angular Project using Bash\nDESCRIPTION: This command compiles the Angular application into an output directory (`dist/` by default). It performs optimizations like bundling, minification, and tree-shaking to prepare the application for deployment.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart-tailwind/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project using Bash\nDESCRIPTION: This command compiles the Angular application into an output directory named `dist/`. By default, it creates a production build, which includes optimizations like minification, tree-shaking, and Ahead-of-Time (AOT) compilation for better performance.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project for Production (bash)\nDESCRIPTION: Executes the Angular CLI command `ng build` to compile the application and bundle it for production deployment. The resulting build artifacts are stored in the `dist/` directory.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-i18n/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests using Bash\nDESCRIPTION: Executes the project's unit tests using the Karma test runner. This command finds and runs test specification files (typically `.spec.ts`) defined within the project.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart-tailwind/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests (Karma) using Bash\nDESCRIPTION: Executes the unit tests defined within the Angular project. This command typically uses the Karma test runner and Jasmine framework (or others depending on configuration) to run tests found in `.spec.ts` files.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests with Karma (bash)\nDESCRIPTION: Executes the project's unit tests using the `ng test` command via the Karma test runner. Requires Karma and related testing dependencies to be configured in the project.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-i18n/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help (bash)\nDESCRIPTION: Displays help information for the Angular CLI using the `ng help` command. This provides details on available commands, options, and usage. Further details can be found in the official Angular CLI documentation.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-i18n/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests (bash)\nDESCRIPTION: Executes the end-to-end (e2e) tests for the application using the `ng e2e` command. This requires a separate package that implements e2e testing capabilities (e.g., Cypress, Playwright) to be installed and configured first.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-i18n/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests using Bash\nDESCRIPTION: This command is used to execute end-to-end (e2e) tests for the Angular application. Note that Angular CLI requires a separate e2e testing framework (like Cypress or Protractor, though Protractor is deprecated) to be configured.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart-tailwind/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests using Bash\nDESCRIPTION: Executes the end-to-end (e2e) tests for the Angular application. This command requires a separate e2e testing framework (like Cypress or Protractor, although Protractor is deprecated) to be configured in the project, as Angular CLI does not include one by default.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Listing Angular CLI Generation Schematics using Bash\nDESCRIPTION: This command displays help information for the `ng generate` command, listing all available schematics that can be generated using the Angular CLI, such as components, directives, pipes, services, etc.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart-tailwind/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng generate --help\n```\n\n----------------------------------------\n\nTITLE: Listing Angular CLI Schematics using Bash\nDESCRIPTION: This command displays help information for the `ng generate` command, listing all available schematics that can be generated using the Angular CLI. Examples include components, directives, services, pipes, modules, etc.\nSOURCE: https://github.com/primefaces/primeng-examples/blob/main/primeng-quickstart/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng generate --help\n```"
  }
]
[
  {
    "owner": "blockscout",
    "repo": "blockscout",
    "content": "TITLE: Retrieving User Watchlist Addresses in BlockScout API\nDESCRIPTION: GET request to retrieve addresses from a user's watchlist. Returns a JSON array of addresses with their notification settings, methods, and other metadata.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"notification_settings\": {\n      \"native\": {\n        \"outcoming\": false,\n        \"incoming\": false\n      },\n      \"ERC-721\": {\n        \"outcoming\": true,\n        \"incoming\": false\n      },\n      \"ERC-20\": {\n        \"outcoming\": true,\n        \"incoming\": false\n      }\n    },\n    \"notification_methods\": {\n      \"email\": false\n    },\n    \"name\": \"test3\",\n    \"id\": 69,\n    \"exchange_rate\": null,\n    \"address_hash\": \"0x0000000000000000000000000000000000000008\",\n    \"address_balance\": null\n  },\n  {\n    \"notification_settings\": {\n      \"native\": {\n        \"outcoming\": false,\n        \"incoming\": true\n      },\n      \"ERC-721\": {\n        \"outcoming\": false,\n        \"incoming\": true\n      },\n      \"ERC-20\": {\n        \"outcoming\": false,\n        \"incoming\": false\n      }\n    },\n    \"notification_methods\": {\n      \"email\": true\n    },\n    \"name\": \"test2\",\n    \"id\": 68,\n    \"exchange_rate\": null,\n    \"address_hash\": \"0x0000000000000000000000000000000000000007\",\n    \"address_balance\": null\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Watchlist Entry with API\nDESCRIPTION: This endpoint allows adding an address to a user's watchlist with custom notification settings. The request includes the address hash, name, and detailed notification preferences for different token types.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_17\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/watchlist\n\nHeaders:\ncontent-type: multipart/mixed; boundary=plug_conn_test\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": true,\n      \"incoming\": false\n    },\n    \"ERC-20\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    }\n  },\n  \"notification_methods\": {\n    \"email\": false\n  },\n  \"name\": \"test26\",\n  \"address_hash\": \"0x000000000000000000000000000000000000007f\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Watchlist Address in BlockScout API\nDESCRIPTION: POST request to add a new address to the watchlist with specified notification settings, methods, and address details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": false,\n      \"incoming\": false\n    },\n    \"ERC-20\": {\n      \"outcoming\": true,\n      \"incoming\": false\n    }\n  },\n  \"notification_methods\": {\n    \"email\": false\n  },\n  \"name\": \"test4\",\n  \"address_hash\": \"0x0000000000000000000000000000000000000017\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Watchlist Entry in BlockScout API\nDESCRIPTION: This code demonstrates how to add an address to a watchlist with specific notification settings using a POST request. It configures different notification types and methods for the address being watched.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/watchlist\ncontent-type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-20\": {\n      \"outcoming\": false,\n      \"incoming\": false\n    }\n  },\n  \"notification_methods\": {\n    \"email\": true\n  },\n  \"name\": \"test2\",\n  \"address_hash\": \"0x0000000000000000000000000000000000000007\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-20\": {\n      \"outcoming\": false,\n      \"incoming\": false\n    }\n  },\n  \"notification_methods\": {\n    \"email\": true\n  },\n  \"name\": \"test2\",\n  \"id\": 68,\n  \"exchange_rate\": null,\n  \"address_hash\": \"0x0000000000000000000000000000000000000007\",\n  \"address_balance\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Blockchain Address Record Structure in JSON\nDESCRIPTION: Data structure containing blockchain address records with metadata including watchlist names, tags, verification status, and implementation details. Each record includes basic address information and user submission metadata like company name, email and submission date.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_43\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"watchlist_names\": [],\n  \"public_tags\": [],\n  \"private_tags\": [],\n  \"name\": null,\n  \"is_verified\": null,\n  \"is_contract\": false,\n  \"implementation_name\": null,\n  \"hash\": \"0x0000000000000000000000000000000000000024\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Heavy Index Operation Module in Elixir\nDESCRIPTION: Template for creating a new module in the Explorer.Migrator.HeavyDbIndexOperation namespace to handle a specific index operation with all required attributes and structure.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule Explorer.Migrator.HeavyDbIndexOperation.CreateYourNewIndex do\n  use Explorer.Migrator.HeavyDbIndexOperation\n  \n  @table_name :your_table\n  @index_name \"your_index_name\"\n  @operation_type :create\n  \n  # Choose one approach:\n  @table_columns [:column1, :column2]\n  # or\n  @query_string \"\"\"\n  CREATE INDEX ... \n  \"\"\"\n  \n  # The rest of the module is implementation of callbacks described below\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving Transaction Tags in BlockScout API\nDESCRIPTION: This code shows how to retrieve tags for a specific transaction using a GET request. It returns various types of tags including watchlist names, personal transaction tags, personal tags, and common tags.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/tags/transaction/0x0000000000000000000000000000000000000000000000000000000000000009\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"watchlist_names\": [],\n  \"personal_tx_tag\": {\n    \"label\": \"MyName\"\n  },\n  \"personal_tags\": [],\n  \"common_tags\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Private Address Tag in BlockScout API\nDESCRIPTION: HTTP POST request to add a private address tag with a name and associated blockchain address hash. This allows users to label addresses for easier identification and management.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/tags/address\n\n{\n  \"name\": \"MyName\",\n  \"address_hash\": \"0x3e9ac8f16c92bc4f093357933b5befbf1e16987b\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in BlockScout API\nDESCRIPTION: HTTP GET request to retrieve user profile information including nickname, name, email and avatar URL. The response includes user identification details that are used for authentication across the BlockScout platform.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/user/info\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Private Address Tags in BlockScout API\nDESCRIPTION: HTTP GET request to fetch all private address tags created by a user. This endpoint allows users to view and manage their collection of tagged addresses.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/user/tags/address\n```\n\n----------------------------------------\n\nTITLE: Create Address Tag Request\nDESCRIPTION: JSON request body for creating a new private address tag with name and address hash\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"MyName\",\n  \"address_hash\": \"0x3e9ac8f16c92bc4f093357933b5befbf1e16987b\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Index Using Query String in Elixir\nDESCRIPTION: Example of defining a heavy database index operation using the @query_string approach, which provides fine-grained control over index creation with custom conditions and options.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\n@query_string \"\"\"\nCREATE INDEX #{HeavyDbIndexOperationHelper.add_concurrently_flag?()} IF NOT EXISTS #{@index_name}\nON #{@table_name} (confirmation_id, block_number DESC)\nWHERE confirmation_id IS NULL;\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Listing API Keys in BlockScout\nDESCRIPTION: GET request to retrieve a list of API keys for the authenticated user. Returns an array of API key objects containing name and key.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_21\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/user/api_keys\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"test\",\n    \"api_key\": \"2ac16688-34e6-4fa4-8983-a9bc34c912f6\"\n  },\n  {\n    \"name\": \"test\",\n    \"api_key\": \"a55426db-04f0-40be-a146-1ced4558aa0c\"\n  },\n  {\n    \"name\": \"test\",\n    \"api_key\": \"d73fc23b-59f0-4e6f-a739-f4de30995101\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Smart Contract ABI with Getter and Setter Functions in JSON\nDESCRIPTION: This JSON snippet defines a smart contract ABI with two functions: a 'set' function that accepts a uint256 parameter and a 'get' function that returns a uint256 value. This is a common pattern for simple storage contracts in Ethereum.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_36\n\nLANGUAGE: json\nCODE:\n```\n[{\n  \"type\": \"function\",\n  \"stateMutability\": \"nonpayable\",\n  \"payable\": false,\n  \"outputs\": [],\n  \"name\": \"set\",\n  \"inputs\": [\n    {\n      \"type\": \"uint256\",\n      \"name\": \"x\"\n    }\n  ],\n  \"constant\": false\n},\n{\n  \"type\": \"function\",\n  \"stateMutability\": \"view\",\n  \"payable\": false,\n  \"outputs\": [\n    {\n      \"type\": \"uint256\",\n      \"name\": \"\"\n    }\n  ],\n  \"name\": \"get\",\n  \"inputs\": [],\n  \"constant\": true\n}]\n```\n\n----------------------------------------\n\nTITLE: Private Address Tag Creation Response in BlockScout API\nDESCRIPTION: JSON response after successfully creating a private address tag, containing the tag name, ID, address hash, and related address information including verification status and any existing tags.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"MyName\",\n  \"id\": 66,\n  \"address_hash\": \"0x3e9ac8f16c92bc4f093357933b5befbf1e16987b\",\n  \"address\": {\n    \"watchlist_names\": [],\n    \"public_tags\": [],\n    \"private_tags\": [],\n    \"name\": null,\n    \"is_verified\": false,\n    \"is_contract\": false,\n    \"implementation_name\": null,\n    \"hash\": \"0x3E9AC8f16C92bc4F093357933B5BEFBF1E16987B\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Media from External Source\nDESCRIPTION: Demonstrates how to fetch media from a URL using the NFTMediaHandler.Media.Fetcher.fetch_media/2 function. Returns a tuple containing the status, media type, and the fetched content.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/nft_media_handler/README.md#2025-04-22_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\n{:ok, media_type, body} = NFTMediaHandler.Media.Fetcher.fetch_media(\"http://example.com/media.jpg\", [])\n```\n\n----------------------------------------\n\nTITLE: Updating a Private Transaction Tag in BlockScout API\nDESCRIPTION: This code demonstrates how to update an existing private transaction tag using a PUT request. It requires the tag ID in the path and the updated transaction hash and name in the request body.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/account/v1/user/tags/transaction/57\ncontent-type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n  \"name\": \"name1\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n  \"name\": \"name1\",\n  \"id\": 57\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image to R2/S3 Storage\nDESCRIPTION: Shows how to upload an image to cloud storage using the NFTMediaHandler.R2.Uploader.upload_image/3 function. Returns a result tuple with the upload status.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/nft_media_handler/README.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\n{:ok, result} = NFTMediaHandler.R2.Uploader.upload_image(image_binary, \"image.jpg\", \"folder\")\n```\n\n----------------------------------------\n\nTITLE: Updated Address Tag Response in BlockScout API\nDESCRIPTION: JSON response after successfully updating a private address tag, containing the updated tag name, ID, address hash, and related address information including verification status.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name3\",\n  \"id\": 70,\n  \"address_hash\": \"0x000000000000000000000000000000000000007e\",\n  \"address\": {\n    \"watchlist_names\": [],\n    \"public_tags\": [],\n    \"private_tags\": [],\n    \"name\": null,\n    \"is_verified\": false,\n    \"is_contract\": false,\n    \"implementation_name\": null,\n    \"hash\": \"0x000000000000000000000000000000000000007E\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Private Transaction Tag in BlockScoutWeb API\nDESCRIPTION: This endpoint updates an existing private transaction tag. It requires the tag ID, transaction hash, and new name. The response includes the updated tag details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n  \"name\": \"name1\",\n  \"id\": 57\n}\n```\n\n----------------------------------------\n\nTITLE: Resizing an Image with NFTMediaHandler\nDESCRIPTION: Demonstrates how to resize an image using the NFTMediaHandler.Image.Resizer.resize/3 function. This code loads an image from a file, then processes it to create various thumbnail sizes.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/nft_media_handler/README.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\nimage = Vix.Vips.Image.new_from_file(\"path/to/image.jpg\")\nresized_images = NFTMediaHandler.Image.Resizer.resize(image, \"http://example.com/image.jpg\", \".jpg\")\n```\n\n----------------------------------------\n\nTITLE: Updating Private Address Tag in BlockScout API\nDESCRIPTION: HTTP PUT request to edit an existing private address tag by ID, allowing modification of tag name and address hash. This endpoint enables users to maintain up-to-date address labels.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/account/v1/user/tags/address/70\n\n{\n  \"name\": \"name3\",\n  \"address_hash\": \"0x000000000000000000000000000000000000007e\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring EthereumJSONRPC URLs and HTTP Options in Elixir\nDESCRIPTION: Mix configuration for setting up Parity URLs, trace URLs, and HTTP client options. Includes timeout settings and connection pool configuration for hackney.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/ethereum_jsonrpc/README.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :ethereum_jsonrpc,\n  url: \"http://localhost:8545\",\n  trace_url: \"http://localhost:8545\",\n  http: [recv_timeout: 60_000, timeout: 60_000, hackney: [pool: :ethereum_jsonrpc]]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Tags for Transaction in BlockScoutWeb API\nDESCRIPTION: This endpoint retrieves all tags associated with a specific transaction. It returns watchlist names, personal transaction tag, personal tags, and common tags.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"watchlist_names\": [],\n  \"personal_tx_tag\": {\n    \"label\": \"MyName\"\n  },\n  \"personal_tags\": [],\n  \"common_tags\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Private Transaction Tag in BlockScout API\nDESCRIPTION: This code demonstrates how to create a private transaction tag using a POST request to the BlockScout API. It includes the transaction hash and name in the request body and returns the created tag information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/tags/transaction\ncontent-type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000009\",\n  \"name\": \"MyName\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000009\",\n  \"name\": \"MyName\",\n  \"id\": 64\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Watchlist Address in BlockScout API\nDESCRIPTION: PUT request to modify an existing watchlist address with updated notification settings, methods, name, and address. Returns the updated address object.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    },\n    \"ERC-20\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    }\n  },\n  \"notification_methods\": {\n    \"email\": true\n  },\n  \"name\": \"test1\",\n  \"address_hash\": \"0x0000000000000000000000000000000000000006\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Address from Watchlist in BlockScout API\nDESCRIPTION: DELETE request to remove an address from the user's watchlist by its ID. Returns a success message upon completion.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Create API Key Response\nDESCRIPTION: Successful response from creating a new API key, returning the key name and generated API key.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test\",\n  \"api_key\": \"5dcfeb7d-6a73-47ed-8001-130692ebdf30\"\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP PUT Request for Updating Custom ABI in BlockScout\nDESCRIPTION: This HTTP request demonstrates how to update a custom ABI with ID 162 in BlockScout. The request includes the contract name, address, and ABI definition with set and get functions. This endpoint requires authentication as shown by the cookie in the response.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_37\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/account/v1/user/custom_abis/162\n\nHeaders:\ncontent-type: multipart/mixed; boundary=plug_conn_test\n\nBody:\n{\n  \"name\": \"test23\",\n  \"contract_address_hash\": \"0x0000000000000000000000000000000000000066\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Watchlist Address Update Response in BlockScout API\nDESCRIPTION: Response from updating a watchlist address showing the modified address object with its notification settings, methods, and metadata.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    },\n    \"ERC-20\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    }\n  },\n  \"notification_methods\": {\n    \"email\": true\n  },\n  \"name\": \"test1\",\n  \"id\": 67,\n  \"exchange_rate\": null,\n  \"address_hash\": \"0x0000000000000000000000000000000000000006\",\n  \"address_balance\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Smart Contract ABI Definition in JSON\nDESCRIPTION: Standard Ethereum smart contract ABI definition containing two functions: a nonpayable 'set' function that takes a uint256 parameter, and a view 'get' function that returns a uint256. The definition includes contract metadata like address, verification status, and tags.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_35\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"function\",\n  \"stateMutability\": \"nonpayable\",\n  \"payable\": false,\n  \"outputs\": [],\n  \"name\": \"set\",\n  \"inputs\": [\n    {\n      \"type\": \"uint256\",\n      \"name\": \"x\"\n    }\n  ],\n  \"constant\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Watchlist Retrieval API Response\nDESCRIPTION: Response from the watchlist retrieval endpoint, showing all addresses in the user's watchlist with their notification settings and address details. The response includes an array of watchlist entries with each entry containing detailed configuration.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_20\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\n\nHeaders:\nset-cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAmaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyMjBkAAVlbWFpbG0AAAAbdGVzdF91c2VyLTMyQGJsb2Nrc2NvdXQuY29tZAACaWRiAAABGWQABG5hbWVtAAAAC1VzZXIgVGVzdDIwZAAIbmlja25hbWVtAAAAC3Rlc3RfdXNlcjIwZAADdWlkbQAAABBibG9ja3Njb3V0fDAwMDIwZAAMd2F0Y2hsaXN0X2lkYgAAARk.vaGEF62HMb-YGk5JNfvq8xH6YkGmQaEEa1gpNIUmjJM; path=/; SameSite=Lax\ncontent-type: application/json; charset=utf-8\ncache-control: max-age=0, private, must-revalidate\nx-request-id: Fy1W2aiKtdsAq20AABhh\naccess-control-allow-credentials: true\naccess-control-allow-origin: *\naccess-control-expose-headers:\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"notification_settings\": {\n      \"native\": {\n        \"outcoming\": true,\n        \"incoming\": true\n      },\n      \"ERC-721\": {\n        \"outcoming\": true,\n        \"incoming\": false\n      },\n      \"ERC-20\": {\n        \"outcoming\": false,\n        \"incoming\": false\n      }\n    },\n    \"notification_methods\": {\n      \"email\": true\n    },\n    \"name\": \"test27\",\n    \"id\": 74,\n    \"exchange_rate\": null,\n    \"address_hash\": \"0x0000000000000000000000000000000000000080\",\n    \"address_balance\": null,\n    \"address\": {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": false,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000080\"\n    }\n  },\n  {\n    \"notification_settings\": {\n      \"native\": {\n        \"outcoming\": true,\n        \"incoming\": true\n      },\n      \"ERC-721\": {\n        \"outcoming\": true,\n        \"incoming\": false\n      },\n      \"ERC-20\": {\n        \"outcoming\": true,\n        \"incoming\": true\n      }\n    },\n    \"notification_methods\": {\n      \"email\": false\n    },\n    \"name\": \"test26\",\n    \"id\": 73,\n    \"exchange_rate\": null,\n    \"address_hash\": \"0x000000000000000000000000000000000000007f\",\n    \"address_balance\": null,\n    \"address\": {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": false,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000007f\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Contract ABI Data Structure in JSON\nDESCRIPTION: JSON structure defining a smart contract ABI with function definitions for 'set' and 'get' methods. Includes metadata like contract name, ID and address.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_29\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test7\",\n  \"id\": 128,\n  \"contract_address_hash\": \"0x000000000000000000000000000000000000001a\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom ABI in BlockScout\nDESCRIPTION: This endpoint creates a custom ABI for a contract. It requires the contract name, address, and ABI definition in the request body. The response includes the created ABI details along with contract information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_32\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"name\": \"test3\",\n  \"contract_address_hash\": \"0x0000000000000000000000000000000000000049\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"name\": \"test3\",\n  \"id\": 146,\n  \"contract_address_hash\": \"0x0000000000000000000000000000000000000049\",\n  \"contract_address\": {\n    \"watchlist_names\": [],\n    \"public_tags\": [],\n    \"private_tags\": [],\n    \"name\": null,\n    \"is_verified\": false,\n    \"is_contract\": true,\n    \"implementation_name\": null,\n    \"hash\": \"0x0000000000000000000000000000000000000049\"\n  },\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Watchlist from API\nDESCRIPTION: Endpoint for retrieving all addresses from a user's watchlist. This GET request retrieves the complete list of addresses the user is watching along with their associated notification settings.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_19\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/user/watchlist\n```\n\n----------------------------------------\n\nTITLE: Retrieving Public Tags Response in JSON\nDESCRIPTION: API response for retrieving a list of public tags. It includes user information, addresses, and tag details for multiple users.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_32\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"website\": \"website13\",\n    \"tags\": \"Tag17\",\n    \"submission_date\": \"2022-09-03T21:00:07.000000Z\",\n    \"is_owner\": false,\n    \"id\": 143,\n    \"full_name\": \"full name13\",\n    \"email\": \"test_user-37@blockscout.com\",\n    \"company\": \"company13\",\n    \"addresses\": [\n      \"0x000000000000000000000000000000000000007e\",\n      \"0x000000000000000000000000000000000000007f\",\n      \"0x0000000000000000000000000000000000000080\",\n      \"0x0000000000000000000000000000000000000081\",\n      \"0x0000000000000000000000000000000000000082\",\n      \"0x0000000000000000000000000000000000000083\",\n      \"0x0000000000000000000000000000000000000084\"\n    ],\n    \"additional_comment\": \"additional_comment13\"\n  },\n  // ... more entries ...\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Custom ABI in BlockScout\nDESCRIPTION: POST request to add a new custom ABI. Requires name, contract address, and ABI definition in the request body. Returns the created ABI object.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_24\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/custom_abis\nContent-Type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"name\": \"test25\",\n  \"contract_address_hash\": \"0x000000000000000000000000000000000000002c\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test25\",\n  \"id\": 143,\n  \"contract_address_hash\": \"0x000000000000000000000000000000000000002c\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Public Tag Requests in BlockScout API\nDESCRIPTION: This endpoint retrieves a list of requests to add public tags. It returns detailed information about each request, including user details, addresses, and tag information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_41\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"website\": \"website9\",\n    \"tags\": \"Tag14\",\n    \"submission_date\": \"2022-12-03T16:55:29.000000Z\",\n    \"is_owner\": false,\n    \"id\": 200,\n    \"full_name\": \"full name9\",\n    \"email\": \"test_user-13@blockscout.com\",\n    \"company\": \"company9\",\n    \"addresses_with_info\": [\n      {\n        \"watchlist_names\": [],\n        \"public_tags\": [],\n        \"private_tags\": [],\n        \"name\": null,\n        \"is_verified\": null,\n        \"is_contract\": false,\n        \"implementation_name\": null,\n        \"hash\": \"0x000000000000000000000000000000000000003D\"\n      },\n      // ... more addresses\n    ],\n    \"addresses\": [\n      \"0x000000000000000000000000000000000000003d\",\n      // ... more addresses\n    ],\n    \"additional_comment\": \"additional_comment9\"\n  },\n  // ... more request objects\n]\n```\n\n----------------------------------------\n\nTITLE: Creating API Key in BlockScout API\nDESCRIPTION: POST request to create a new API key with a specified name. Returns the name and the generated API key.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test\"\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring Blockchain Address Data in JSON\nDESCRIPTION: This JSON structure defines a data model for blockchain addresses and associated user information. It includes details such as user profile, submission dates, and multiple addresses with their properties like verification status and contract information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_42\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"website\": \"website4\",\n  \"tags\": \"Tag7;Tag8\",\n  \"submission_date\": \"2022-12-03T16:55:29.000000Z\",\n  \"is_owner\": false,\n  \"id\": 195,\n  \"full_name\": \"full name4\",\n  \"email\": \"test_user-8@blockscout.com\",\n  \"company\": \"company4\",\n  \"addresses_with_info\": [\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000020\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000021\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving API Keys List in BlockScout\nDESCRIPTION: This endpoint retrieves a list of API keys for the authenticated user. It returns an array of objects containing the name and API key for each entry.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_29\n\nLANGUAGE: JSON\nCODE:\n```\n[\n  {\n    \"name\": \"test\",\n    \"api_key\": \"00c90b31-db68-4de5-8022-32b6d9bdfaf2\"\n  },\n  {\n    \"name\": \"test\",\n    \"api_key\": \"936f1623-4cfb-4581-badf-ff82193cc55e\"\n  },\n  {\n    \"name\": \"test\",\n    \"api_key\": \"8af19684-7d84-4fa5-bc5e-98391204fa21\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sending DELETE Request to Remove Public Tags in BlockScout API\nDESCRIPTION: This snippet demonstrates how to send a DELETE request to remove public tags from a user account in the BlockScout API. It includes the required headers and body parameters.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_44\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/account/v1/user/public_tags/200 HTTP/1.1\nContent-Type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"remove_reason\": \"reason\"\n}\n```\n\n----------------------------------------\n\nTITLE: API Key Creation Response in BlockScout API\nDESCRIPTION: Response from creating a new API key, containing the name and the generated API key UUID for use in API requests.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test\",\n  \"api_key\": \"de9ef457-3f47-48d3-affa-79ad9d3b27b9\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating API Key in BlockScout\nDESCRIPTION: PUT request to update the name of an existing API key. Requires the API key in the URL and the new name in the request body.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_22\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/account/v1/user/api_keys/2b1d400d-713e-4bfc-8ef0-710555693138\nContent-Type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"name\": \"test_1\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test_1\",\n  \"api_key\": \"2b1d400d-713e-4bfc-8ef0-710555693138\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Public Tag Request Payload\nDESCRIPTION: Request body for submitting a new public tag request with company details, addresses and additional metadata.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_31\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website0\",\n  \"tags\": \"Tag0\",\n  \"is_owner\": true,\n  \"full_name\": \"full name0\",\n  \"email\": \"test_user-6@blockscout.com\",\n  \"company\": \"company0\",\n  \"addresses\": [\n    \"0x0000000000000000000000000000000000000009\",\n    \"0x000000000000000000000000000000000000000a\",\n    \"0x000000000000000000000000000000000000000b\",\n    \"0x000000000000000000000000000000000000000c\",\n    \"0x000000000000000000000000000000000000000d\"\n  ],\n  \"additional_comment\": \"additional_comment0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Custom ABI Request Body\nDESCRIPTION: Request payload for updating a custom ABI, containing contract name, address and ABI definition with get/set functions.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test27\",\n  \"contract_address_hash\": \"0x000000000000000000000000000000000000004b\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Custom ABIs Response in BlockScout API\nDESCRIPTION: Example JSON response from the GET /api/account/v1/user/custom_abis endpoint. It returns an array of custom ABI objects, each containing details like name, ID, contract address, and ABI definition.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_34\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"test18\",\n    \"id\": 161,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000058\",\n    \"contract_address\": {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": false,\n      \"is_contract\": true,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000058\"\n    },\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Updating API Key in BlockScout\nDESCRIPTION: This endpoint updates the name of an existing API key. It requires the API key as a path parameter and the new name in the request body.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_30\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"name\": \"test_1\"\n}\n```\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"name\": \"test_1\",\n  \"api_key\": \"e6fcab8c-d092-415d-a64e-caeebdab7e0a\"\n}\n```\n\n----------------------------------------\n\nTITLE: Create API Key Request\nDESCRIPTION: POST request to create a new API key with a specified name.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"test\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Private Transaction Tag in BlockScoutWeb API\nDESCRIPTION: This endpoint creates a new private transaction tag. It requires the transaction hash and name as input. The response includes the created tag's details including its ID.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000006\",\n  \"name\": \"MyName\",\n  \"id\": 61\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Public Tags Request in BlockScout API\nDESCRIPTION: This snippet demonstrates the JSON payload for submitting a request to add public tags to multiple addresses. It includes user information, addresses, and tag details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_39\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website11\",\n  \"tags\": \"Tag17\",\n  \"is_owner\": false,\n  \"full_name\": \"full name11\",\n  \"email\": \"test_user-24@blockscout.com\",\n  \"company\": \"company11\",\n  \"addresses\": [\n    \"0x0000000000000000000000000000000000000067\",\n    \"0x0000000000000000000000000000000000000068\",\n    \"0x0000000000000000000000000000000000000069\",\n    \"0x000000000000000000000000000000000000006a\",\n    \"0x000000000000000000000000000000000000006b\",\n    \"0x000000000000000000000000000000000000006c\",\n    \"0x000000000000000000000000000000000000006d\"\n  ],\n  \"additional_comment\": \"additional_comment11\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Private Transaction Tags in BlockScoutWeb API\nDESCRIPTION: This endpoint retrieves all private transaction tags for the authenticated user. It returns an array of tags, each containing the transaction hash, name, and ID.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000009\",\n    \"name\": \"name2\",\n    \"id\": 64\n  },\n  {\n    \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000008\",\n    \"name\": \"name1\",\n    \"id\": 63\n  },\n  {\n    \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000007\",\n    \"name\": \"name0\",\n    \"id\": 62\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Cache Tracking for Index Operations in MapCache\nDESCRIPTION: Code for adding a new key to the MapCache for tracking the completion status of a heavy index operation.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_7\n\nLANGUAGE: elixir\nCODE:\n```\nuse Explorer.Chain.MapCache,\n  # ... existing keys ...\n  key: :heavy_indexes_your_new_index_finished\n```\n\n----------------------------------------\n\nTITLE: Update Address Tag Request\nDESCRIPTION: JSON request body for updating an existing address tag with new name and address hash\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"name3\",\n  \"address_hash\": \"0x0000000000000000000000000000000000000016\"\n}\n```\n\n----------------------------------------\n\nTITLE: Public Tags Request Response in BlockScout API\nDESCRIPTION: This snippet shows the JSON response after successfully submitting a public tags request. It includes the submitted data along with additional information such as submission date and address details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_40\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website11\",\n  \"tags\": \"Tag17\",\n  \"submission_date\": \"2022-12-03T16:55:29.441979Z\",\n  \"is_owner\": false,\n  \"id\": 202,\n  \"full_name\": \"full name11\",\n  \"email\": \"test_user-24@blockscout.com\",\n  \"company\": \"company11\",\n  \"addresses_with_info\": [\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000067\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000068\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000069\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000006a\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000006b\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000006C\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000006D\"\n    }\n  ],\n  \"addresses\": [\n    \"0x0000000000000000000000000000000000000067\",\n    \"0x0000000000000000000000000000000000000068\",\n    \"0x0000000000000000000000000000000000000069\",\n    \"0x000000000000000000000000000000000000006a\",\n    \"0x000000000000000000000000000000000000006b\",\n    \"0x000000000000000000000000000000000000006c\",\n    \"0x000000000000000000000000000000000000006d\"\n  ],\n  \"additional_comment\": \"additional_comment11\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Universal Index Operations in config.exs\nDESCRIPTION: Configuration code for adding a heavy index operation that should run on all Blockscout instances regardless of chain type.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\nfor index_operation <- [\n      # Heavy DB index operations\n      Explorer.Migrator.HeavyDbIndexOperation.CreateAddressesVerifiedIndex,\n      Explorer.Migrator.HeavyDbIndexOperation.CreateLogsBlockHashIndex,\n      # ... other index operations ...\n      Explorer.Migrator.HeavyDbIndexOperation.YourNewIndex  # Add your module here\n    ] do\n  config :explorer, index_operation, enabled: true\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving Address Tags in BlockScout API\nDESCRIPTION: HTTP GET request to fetch all tags (personal, common, and watchlist) associated with a specific blockchain address. This endpoint provides comprehensive tag information for the address.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/tags/address/0x3e9ac8f16c92bc4f093357933b5befbf1e16987b\n```\n\n----------------------------------------\n\nTITLE: Implementing Update Cache for Heavy Index Operation in Elixir\nDESCRIPTION: Example of implementing the update_cache/0 callback to maintain the in-memory cache of migration completion status for performance-critical queries.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\ndef update_cache do\n  BackgroundMigrations.set_heavy_indexes_create_logs_block_hash_index_finished(true)\nend\n```\n\n----------------------------------------\n\nTITLE: Smart Contract Definitions JSON Response\nDESCRIPTION: JSON response containing smart contract definitions with their ABIs. Each contract contains a name, ID, contract address hash, and ABI defining a 'set' function to store values and a 'get' function to retrieve them.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"test20\",\n    \"id\": 141,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000027\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test19\",\n    \"id\": 140,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000026\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test18\",\n    \"id\": 139,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000025\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test17\",\n    \"id\": 138,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000024\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test16\",\n    \"id\": 137,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000023\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test15\",\n    \"id\": 136,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000022\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test14\",\n    \"id\": 135,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000021\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test13\",\n    \"id\": 134,\n    \"contract_address_hash\": \"0x0000000000000000000000000000000000000020\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test12\",\n    \"id\": 133,\n    \"contract_address_hash\": \"0x000000000000000000000000000000000000001f\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test11\",\n    \"id\": 132,\n    \"contract_address_hash\": \"0x000000000000000000000000000000000000001e\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test10\",\n    \"id\": 131,\n    \"contract_address_hash\": \"0x000000000000000000000000000000000000001d\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test9\",\n    \"id\": 130,\n    \"contract_address_hash\": \"0x000000000000000000000000000000000000001c\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n        \"inputs\": [],\n        \"constant\": true\n      }\n    ]\n  },\n  {\n    \"name\": \"test8\",\n    \"id\": 129,\n    \"contract_address_hash\": \"0x000000000000000000000000000000000000001b\",\n    \"abi\": [\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"nonpayable\",\n        \"payable\": false,\n        \"outputs\": [],\n        \"name\": \"set\",\n        \"inputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"x\"\n          }\n        ],\n        \"constant\": false\n      },\n      {\n        \"type\": \"function\",\n        \"stateMutability\": \"view\",\n        \"payable\": false,\n        \"outputs\": [\n          {\n            \"type\": \"uint256\",\n            \"name\": \"\"\n          }\n        ],\n        \"name\": \"get\",\n\n```\n\n----------------------------------------\n\nTITLE: Watchlist Creation API Response\nDESCRIPTION: Response from the watchlist creation endpoint, including the saved configuration and additional address details. The response contains the created watchlist entry with its assigned ID and the associated address information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_18\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\n\nHeaders:\nset-cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAmaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyMjBkAAVlbWFpbG0AAAAbdGVzdF91c2VyLTMyQGJsb2Nrc2NvdXQuY29tZAACaWRiAAABGWQABG5hbWVtAAAAC1VzZXIgVGVzdDIwZAAIbmlja25hbWVtAAAAC3Rlc3RfdXNlcjIwZAADdWlkbQAAABBibG9ja3Njb3V0fDAwMDIwZAAMd2F0Y2hsaXN0X2lkYgAAARk.vaGEF62HMb-YGk5JNfvq8xH6YkGmQaEEa1gpNIUmjJM; path=/; SameSite=Lax\ncontent-type: application/json; charset=utf-8\ncache-control: max-age=0, private, must-revalidate\nx-request-id: Fy1W2acnBbQAq20AAARF\naccess-control-allow-credentials: true\naccess-control-allow-origin: *\naccess-control-expose-headers:\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    },\n    \"ERC-721\": {\n      \"outcoming\": true,\n      \"incoming\": false\n    },\n    \"ERC-20\": {\n      \"outcoming\": true,\n      \"incoming\": true\n    }\n  },\n  \"notification_methods\": {\n    \"email\": false\n  },\n  \"name\": \"test26\",\n  \"id\": 73,\n  \"exchange_rate\": null,\n  \"address_hash\": \"0x000000000000000000000000000000000000007f\",\n  \"address_balance\": null,\n  \"address\": {\n    \"watchlist_names\": [],\n    \"public_tags\": [],\n    \"private_tags\": [],\n    \"name\": null,\n    \"is_verified\": false,\n    \"is_contract\": false,\n    \"implementation_name\": null,\n    \"hash\": \"0x000000000000000000000000000000000000007f\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Watchlist Entry by ID\nDESCRIPTION: Endpoint for removing an address from the user's watchlist using its ID. This DELETE request requires the watchlist entry ID to be specified in the URL path.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_21\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/account/v1/user/watchlist/72\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Private Transaction Tags in BlockScout API\nDESCRIPTION: This code shows how to retrieve all private transaction tags for the authenticated user. It returns an array of tag objects, each containing the transaction hash, name, and ID.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/user/tags/transaction\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000004\",\n    \"name\": \"name2\",\n    \"id\": 60\n  },\n  {\n    \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000003\",\n    \"name\": \"name1\",\n    \"id\": 59\n  },\n  {\n    \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000002\",\n    \"name\": \"name0\",\n    \"id\": 58\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Watchlist Deletion API Response\nDESCRIPTION: Response from the watchlist deletion endpoint, confirming the successful removal of the entry. Returns a simple confirmation message when the address has been removed from the watchlist.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_22\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\n\nHeaders:\nset-cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAmaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyMTdkAAVlbWFpbG0AAAAbdGVzdF91c2VyLTI5QGJsb2Nrc2NvdXQuY29tZAACaWRiAAABFmQABG5hbWVtAAAAC1VzZXIgVGVzdDE3ZAAIbmlja25hbWVtAAAAC3Rlc3RfdXNlcjE3ZAADdWlkbQAAABBibG9ja3Njb3V0fDAwMDE3ZAAMd2F0Y2hsaXN0X2lkYgAAARY.bngpdS3ELd9RFd1465ZhfhaitqcUi6xG4s0BoDGWoAw; path=/; SameSite=Lax\ncontent-type: application/json; charset=utf-8\ncache-control: max-age=0, private, must-revalidate\nx-request-id: Fy1W2aNXuJ9GNz0AABch\naccess-control-allow-credentials: true\naccess-control-allow-origin: *\naccess-control-expose-headers:\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Duplicate Watchlist Address in BlockScout API\nDESCRIPTION: Error response when attempting to create a watchlist entry for an address that already exists in the user's watchlist.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": {\n    \"watchlist_id\": [\n      \"Address already added to the watch list\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting API Key in BlockScout\nDESCRIPTION: DELETE request to remove an API key. Requires the API key to be deleted in the URL.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_23\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/account/v1/user/api_keys/3bd44c0d-290f-4dfc-9283-5f674080f8ef\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP DELETE Request for Removing Custom ABI in BlockScout\nDESCRIPTION: This HTTP request shows how to delete a custom ABI with ID 145 from BlockScout. The endpoint requires authentication as indicated by the set-cookie header in the response. The successful deletion returns a simple JSON message with 'OK' status.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_38\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/account/v1/user/custom_abis/145\n```\n\n----------------------------------------\n\nTITLE: Installing EthereumJSONRPC as a Dependency\nDESCRIPTION: Mix dependency configuration for including the EthereumJSONRPC application in other umbrella OTP applications.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/ethereum_jsonrpc/README.md#2025-04-22_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\ndef deps do\n  [\n    {:ethereum_jsonrpc, in_umbrella: true}\n  ]\nend\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Address Tag in BlockScoutWeb API\nDESCRIPTION: This endpoint allows deleting a private address tag. It requires the tag ID as a parameter and returns a success message upon completion.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting API Key in BlockScout\nDESCRIPTION: This endpoint deletes an API key. It requires the API key as a path parameter and returns a success message upon completion.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_31\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Response for Deleting Public Tags in BlockScout API\nDESCRIPTION: This snippet shows the expected successful response when deleting public tags. It includes the response headers and body with a confirmation message.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_45\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nSet-Cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAlaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyM2QABWVtYWlsbQAAABp0ZXN0X3VzZXItM0BibG9ja3Njb3V0LmNvbWQAAmlkYgAAAQhkAARuYW1lbQAAAApVc2VyIFRlc3QzZAAIbmlja25hbWVtAAAACnRlc3RfdXNlcjNkAAN1aWRtAAAAD2Jsb2Nrc2NvdXR8MDAwM2QADHdhdGNobGlzdF9pZGIAAAEI.-a6kcGlCbsFgQtwPNaGA4yaOOpSpyG_54rEROF3a6E0; path=/; SameSite=Lax\nContent-Type: application/json; charset=utf-8\nCache-Control: max-age=0, private, must-revalidate\nX-Request-Id: Fy1W2YdEq9snhiAAAA-h\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Origin: *\nAccess-Control-Expose-Headers: \n\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Update Watchlist Response\nDESCRIPTION: Successful response from updating a watchlist entry, including the updated watchlist data and address information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": false\n    },\n    \"ERC-721\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-20\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    }\n  },\n  \"notification_methods\": {\n    \"email\": true\n  },\n  \"name\": \"test21\",\n  \"id\": 70,\n  \"exchange_rate\": null,\n  \"address_hash\": \"0x0000000000000000000000000000000000000064\",\n  \"address_balance\": null,\n  \"address\": {\n    \"watchlist_names\": [],\n    \"public_tags\": [],\n    \"private_tags\": [],\n    \"name\": null,\n    \"is_verified\": false,\n    \"is_contract\": false,\n    \"implementation_name\": null,\n    \"hash\": \"0x0000000000000000000000000000000000000064\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Compile-time Environment Variable Usage Example\nDESCRIPTION: Demonstrates the recommended approach for accessing compile-time environment variables using Utils.CompileTimeEnvHelper, along with an example of what not to do.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_7\n\nLANGUAGE: elixir\nCODE:\n```\n# DO use this approach\nuse Utils.CompileTimeEnvHelper,\n    attribute_name: [:app, :test]\n\n# Access the value using the module attribute\n@attribute_name\n\n# DON'T use this approach\nApplication.compile_env(:app, :test)  # avoid direct compile_env calls\n```\n\n----------------------------------------\n\nTITLE: Address Tags Response in BlockScout API\nDESCRIPTION: JSON response containing all tags associated with an address, categorized as watchlist names, personal tags, and common tags. Each tag includes label, display name, and the associated address hash.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"watchlist_names\": [],\n  \"personal_tags\": [\n    {\n      \"label\": \"MyName\",\n      \"display_name\": \"MyName\",\n      \"address_hash\": \"0x3e9ac8f16c92bc4f093357933b5befbf1e16987b\"\n    }\n  ],\n  \"common_tags\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Index Operation Status in Elixir\nDESCRIPTION: Simple example of checking the completion status of a heavy index operation using the BackgroundMigrations cache.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_9\n\nLANGUAGE: elixir\nCODE:\n```\n# Check status\nBackgroundMigrations.heavy_indexes_your_new_index_finished?()\n```\n\n----------------------------------------\n\nTITLE: Listing Custom ABIs in BlockScout\nDESCRIPTION: GET request to retrieve a list of custom ABIs for the authenticated user. The response body is not provided in the example.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_26\n\nLANGUAGE: http\nCODE:\n```\nGET /api/account/v1/user/custom_abis\n```\n\n----------------------------------------\n\nTITLE: Conditional Schema Modification for Optimism Chain\nDESCRIPTION: Example of chain-specific schema modification using compile-time environment helper to check chain type.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\nuse Utils.CompileTimeEnvHelper,\n  chain_type: [:explorer, :chain_type]\n\nif @chain_type == :optimism do\n  # Schema modifications specific to Optimism\nend\n```\n\n----------------------------------------\n\nTITLE: Private Address Tags Response\nDESCRIPTION: JSON response listing all private address tags with their IDs and details\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"name2\",\n    \"id\": 60,\n    \"address_hash\": \"0x000000000000000000000000000000000000003f\"\n  },\n  {\n    \"name\": \"name1\",\n    \"id\": 59,\n    \"address_hash\": \"0x000000000000000000000000000000000000003e\"\n  },\n  {\n    \"name\": \"name0\",\n    \"id\": 58,\n    \"address_hash\": \"0x000000000000000000000000000000000000003d\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Creating Custom ABI in BlockScout\nDESCRIPTION: Example of an error response when trying to create a custom ABI that exceeds the limit per account. Returns a 422 status with an error message.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_25\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/custom_abis\nContent-Type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"name\": \"test21\",\n  \"contract_address_hash\": \"0x0000000000000000000000000000000000000028\",\n  \"abi\": [\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"nonpayable\",\n      \"payable\": false,\n      \"outputs\": [],\n      \"name\": \"set\",\n      \"inputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"x\"\n        }\n      ],\n      \"constant\": false\n    },\n    {\n      \"type\": \"function\",\n      \"stateMutability\": \"view\",\n      \"payable\": false,\n      \"outputs\": [\n        {\n          \"type\": \"uint256\",\n          \"name\": \"\"\n        }\n      ],\n      \"name\": \"get\",\n      \"inputs\": [],\n      \"constant\": true\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": {\n    \"name\": [\n      \"Max 15 ABIs per account\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Update Public Tags Response Body\nDESCRIPTION: JSON response payload containing the updated public tag information including submission date and detailed address information with watchlist status and contract details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_47\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website13\",\n  \"tags\": \"Tag20;Tag21\",\n  \"submission_date\": \"2022-12-03T16:55:30.000000Z\",\n  \"is_owner\": false,\n  \"id\": 203,\n  \"full_name\": \"full name13\",\n  \"email\": \"test_user-35@blockscout.com\",\n  \"company\": \"company13\",\n  \"addresses_with_info\": [\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000085\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000086\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000087\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000088\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x0000000000000000000000000000000000000089\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000008A\"\n    },\n    {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": null,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000008b\"\n    }\n  ],\n  \"addresses\": [\n    \"0x0000000000000000000000000000000000000085\",\n    \"0x0000000000000000000000000000000000000086\",\n    \"0x0000000000000000000000000000000000000087\",\n    \"0x0000000000000000000000000000000000000088\",\n    \"0x0000000000000000000000000000000000000089\",\n    \"0x000000000000000000000000000000000000008a\",\n    \"0x000000000000000000000000000000000000008b\"\n  ],\n  \"additional_comment\": \"additional_comment13\"\n}\n```\n\n----------------------------------------\n\nTITLE: Building Blockscout Docker Containers from Source\nDESCRIPTION: Commands to build and run Blockscout Docker containers from source code. This process builds the backend of the explorer and runs 9 Docker containers including Postgres, Redis, Blockscout backend, Nginx proxy, and 5 microservices.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/docker-compose/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd ./docker-compose\ndocker-compose up --build\n```\n\n----------------------------------------\n\nTITLE: Private Address Tags List Response in BlockScout API\nDESCRIPTION: JSON response containing an array of all private address tags created by the user, with each entry including tag name, ID, address hash, and related address information. The response is paginated and sorted by creation time.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"name2\",\n    \"id\": 69,\n    \"address_hash\": \"0x000000000000000000000000000000000000007c\",\n    \"address\": {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": false,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000007c\"\n    }\n  },\n  {\n    \"name\": \"name1\",\n    \"id\": 68,\n    \"address_hash\": \"0x000000000000000000000000000000000000007b\",\n    \"address\": {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": false,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000007B\"\n    }\n  },\n  {\n    \"name\": \"name0\",\n    \"id\": 67,\n    \"address_hash\": \"0x000000000000000000000000000000000000007a\",\n    \"address\": {\n      \"watchlist_names\": [],\n      \"public_tags\": [],\n      \"private_tags\": [],\n      \"name\": null,\n      \"is_verified\": false,\n      \"is_contract\": false,\n      \"implementation_name\": null,\n      \"hash\": \"0x000000000000000000000000000000000000007a\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Testing Nethermind with HTTP/WebSocket Setup Commands\nDESCRIPTION: Shell commands for configuring the test environment to use Nethermind with HTTP and WebSocket protocols.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/ethereum_jsonrpc/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nexport ETHEREUM_JSONRPC_CASE=EthereumJSONRPC.Case.Nethermind.HTTPWebSocket\nexport ETHEREUM_JSONRPC_WEB_SOCKET_CASE=EthereumJSONRPC.WebSocket.Case.Nethermind\nmix test --exclude no_nethermind\n```\n\n----------------------------------------\n\nTITLE: Code Formatting and Testing Commands\nDESCRIPTION: Series of commands for formatting Elixir code, running linters, dialyzer, security checks, and translation updates.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmix format\nmix credo --strict\nmix dialyzer --halt-exit-status\nmix sobelow --config\nmix gettext.extract --merge\ncd assets && npm run eslint\n```\n\n----------------------------------------\n\nTITLE: Testing Nethermind with Mox Setup Commands\nDESCRIPTION: Shell commands for configuring the test environment to use Nethermind with Mox testing framework.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/ethereum_jsonrpc/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nexport ETHEREUM_JSONRPC_CASE=EthereumJSONRPC.Case.Nethermind.Mox\nexport ETHEREUM_JSONRPC_WEB_SOCKET_CASE=EthereumJSONRPC.WebSocket.Case.Mox\nmix test --exclude no_nethermind\n```\n\n----------------------------------------\n\nTITLE: User Information Response in BlockScout API\nDESCRIPTION: JSON response containing user profile data including nickname, name, email address, and avatar URL. This response is returned after successful authentication.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"nickname\": \"test_user23\",\n  \"name\": \"User Test23\",\n  \"email\": \"test_user-37@blockscout.com\",\n  \"avatar\": \"https://example.com/avatar/test_user23\"\n}\n```\n\n----------------------------------------\n\nTITLE: Anti-pattern for Chain Type Configuration in Elixir\nDESCRIPTION: An example of the discouraged approach for handling chain-specific functionality using compile-time configuration.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\n# AVOID THIS\nuse Utils.CompileTimeEnvHelper,\n  chain_type: [:explorer, :chain_type]\n\nif @chain_type == :optimism do\n  def foo, do: :bar\nelse\n  def foo, do: :baz\nend\n```\n\n----------------------------------------\n\nTITLE: Error Response - API Key Limit\nDESCRIPTION: Error response when exceeding the maximum number of allowed API keys per account.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": {\n    \"name\": [\n      \"Max 3 keys per account\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP Response Headers - User Profile Request\nDESCRIPTION: Response headers from a successful user profile request, including authentication cookie, content type, cache control and CORS settings.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_35\n\nLANGUAGE: http\nCODE:\n```\nset-cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAlaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyNmQABWVtYWlsbQAAABp0ZXN0X3VzZXItN0BibG9ja3Njb3V0LmNvbWQAAmlkYcZkAARuYW1lbQAAAApVc2VyIFRlc3Q2ZAAIbmlja25hbWVtAAAACnRlc3RfdXNlcjZkAAN1aWRtAAAAD2Jsb2Nrc2NvdXR8MDAwNmQADHdhdGNobGlzdF9pZGHG.86gruprPiLE-Nf9xkOzjEcW2wfSnCCPly5fHTwHrF6c; path=/; HttpOnly\ncontent-type: application/json; charset=utf-8\ncache-control: max-age=0, private, must-revalidate\nx-request-id: FxF1Y2E03jhU4u4AAGSi\naccess-control-allow-credentials: true\naccess-control-allow-origin: *\naccess-control-expose-headers: \n```\n\n----------------------------------------\n\nTITLE: User Info Response Body\nDESCRIPTION: JSON response containing user profile information including nickname, name, email and avatar\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"nickname\": \"test_user4\",\n  \"name\": \"User Test4\",\n  \"email\": \"test_user-4@blockscout.com\",\n  \"avatar\": \"https://example.com/avatar/test_user4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Markdown Note for Database Reset Requirement in Pull Requests\nDESCRIPTION: A markdown snippet to be included in Pull Request descriptions when database schema changes require a re-index.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**NOTE**: A database reset and re-index is required\n```\n\n----------------------------------------\n\nTITLE: Testing Geth with Mox Setup Commands\nDESCRIPTION: Shell commands for configuring the test environment to use Geth with Mox testing framework.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/ethereum_jsonrpc/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nexport ETHEREUM_JSONRPC_CASE=EthereumJSONRPC.Case.Geth.Mox\nexport ETHEREUM_JSONRPC_WEB_SOCKET_CASE=EthereumJSONRPC.WebSocket.Case.Mox\nmix test --exclude no_geth\n```\n\n----------------------------------------\n\nTITLE: Documentation Link in Markdown\nDESCRIPTION: Markdown link pointing to the official BlockScout Docker integration documentation containing usage instructions and environment variable configuration details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/docker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# BlockScout Docker Integration\n\nFor usage instructions and ENV variables, see the [docker integration documentation](https://docs.blockscout.com/for-developers/deployment/docker-compose-deployment).\n```\n\n----------------------------------------\n\nTITLE: JSON Response Body - User Profile Data\nDESCRIPTION: JSON response containing user profile information including website, tags, submission date, ownership status, personal details and associated blockchain addresses.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_36\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website2\",\n  \"tags\": \"Tag2;Tag3\",\n  \"submission_date\": \"2022-09-03T21:00:07.000000Z\",\n  \"is_owner\": true,\n  \"id\": 132,\n  \"full_name\": \"full name2\",\n  \"email\": \"test_user-9@blockscout.com\",\n  \"company\": \"company2\",\n  \"addresses\": [\n    \"0x000000000000000000000000000000000000000f\",\n    \"0x0000000000000000000000000000000000000010\",\n    \"0x0000000000000000000000000000000000000011\",\n    \"0x0000000000000000000000000000000000000012\",\n    \"0x0000000000000000000000000000000000000013\",\n    \"0x0000000000000000000000000000000000000014\"\n  ],\n  \"additional_comment\": \"additional_comment2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Chain-specific Routes in Phoenix Router\nDESCRIPTION: How to configure chain-specific API endpoints using the chain_scope macro in the router.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\nscope \"/v2\", as: :api_v2 do\n  chain_scope :polygon_zkevm do\n    get(\"/zkevm-batch/:batch_number\", V2.TransactionController, :polygon_zkevm_batch)\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Updating Public Tags Request in JSON\nDESCRIPTION: Request body for updating a public tags request. It includes updated user information, addresses, and tag details.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_34\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website2\",\n  \"tags\": \"Tag2;Tag3\",\n  \"is_owner\": true,\n  \"full_name\": \"full name2\",\n  \"email\": \"test_user-9@blockscout.com\",\n  \"company\": \"company2\",\n  \"addresses\": [\n    \"0x000000000000000000000000000000000000000f\",\n    \"0x0000000000000000000000000000000000000010\",\n    \"0x0000000000000000000000000000000000000011\",\n    \"0x0000000000000000000000000000000000000012\",\n    \"0x0000000000000000000000000000000000000013\",\n    \"0x0000000000000000000000000000000000000014\"\n  ],\n  \"additional_comment\": \"additional_comment2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Update Public Tags Request Body\nDESCRIPTION: JSON request payload for updating public tags. Contains user details, website information, tag list, and associated addresses.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_46\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"website\": \"website13\",\n  \"tags\": \"Tag20;Tag21\",\n  \"is_owner\": false,\n  \"full_name\": \"full name13\",\n  \"email\": \"test_user-35@blockscout.com\",\n  \"company\": \"company13\",\n  \"addresses\": [\n    \"0x0000000000000000000000000000000000000085\",\n    \"0x0000000000000000000000000000000000000086\",\n    \"0x0000000000000000000000000000000000000087\",\n    \"0x0000000000000000000000000000000000000088\",\n    \"0x0000000000000000000000000000000000000089\",\n    \"0x000000000000000000000000000000000000008a\",\n    \"0x000000000000000000000000000000000000008b\"\n  ],\n  \"additional_comment\": \"additional_comment13\"\n}\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Non-existent Transaction Tags in BlockScout API\nDESCRIPTION: This code shows the error response when attempting to create a transaction tag for a transaction that doesn't exist. It includes error details in the response body.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/account/v1/user/tags/transaction\ncontent-type: multipart/mixed; boundary=plug_conn_test\n\n{\n  \"transaction_hash\": \"0x0000000000000000000000000000000000000000000000000000000000000008\",\n  \"name\": \"MyName\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": {\n    \"tx_hash\": [\n      \"Transaction does not exist\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Address Tags Response\nDESCRIPTION: JSON response showing personal, watchlist and common tags for an address\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"watchlist_names\": [],\n  \"personal_tags\": [\n    {\n      \"label\": \"MyName\",\n      \"display_name\": \"MyName\",\n      \"address_hash\": \"0x3e9ac8f16c92bc4f093357933b5befbf1e16987b\"\n    }\n  ],\n  \"common_tags\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Update Watchlist Request\nDESCRIPTION: PUT request to update an existing watchlist entry with notification settings and address information.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"notification_settings\": {\n    \"native\": {\n      \"outcoming\": false,\n      \"incoming\": false\n    },\n    \"ERC-721\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    },\n    \"ERC-20\": {\n      \"outcoming\": false,\n      \"incoming\": true\n    }\n  },\n  \"notification_methods\": {\n    \"email\": true\n  },\n  \"name\": \"test21\",\n  \"address_hash\": \"0x0000000000000000000000000000000000000064\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Public Tags Request Response in JSON\nDESCRIPTION: API response for deleting a public tags request. It returns a simple OK message upon successful deletion.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_33\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Transaction Tag in BlockScoutWeb API\nDESCRIPTION: This endpoint deletes a private transaction tag. It requires the tag ID as a parameter and returns a success message upon completion.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP Response Headers for Smart Contract API\nDESCRIPTION: Response headers from a successful API request for smart contract information, including authentication cookies and CORS settings.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_27\n\nLANGUAGE: plaintext\nCODE:\n```\nset-cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAlaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyOWQABWVtYWlsbQAAABt0ZXN0X3VzZXItMTJAYmxvY2tzY291dC5jb21kAAJpZGHJZAAEbmFtZW0AAAAKVXNlciBUZXN0OWQACG5pY2tuYW1lbQAAAAp0ZXN0X3VzZXI5ZAADdWlkbQAAAA9ibG9ja3Njb3V0fDAwMDlkAAx3YXRjaGxpc3RfaWRhyQ.MCpJsS-nb95ccHRtzOk7DbIRjEcTG34ONq4PrC5hOcU; path=/; HttpOnly\ncontent-type: application/json; charset=utf-8\ncache-control: max-age=0, private, must-revalidate\nx-request-id: FxF1Y2Y-qjXy0swAAGnC\naccess-control-allow-credentials: true\naccess-control-allow-origin: *\naccess-control-expose-headers: \n```\n\n----------------------------------------\n\nTITLE: Deleting a Private Transaction Tag in BlockScout API\nDESCRIPTION: This code demonstrates how to delete a private transaction tag using a DELETE request with the tag ID in the path. It returns a simple success message upon completion.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/account/v1/user/tags/transaction/61\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"OK\"\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Invalid Transaction Tag Creation in BlockScoutWeb API\nDESCRIPTION: This snippet shows the error response when attempting to create a transaction tag for a non-existent transaction. It returns a 422 status code with an error message.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": {\n    \"tx_hash\": [\n      \"Transaction does not exist\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Creating Custom ABI in BlockScout\nDESCRIPTION: This snippet shows an error response when trying to create a custom ABI. In this case, the error occurs due to exceeding the maximum allowed number of ABIs per account.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_33\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"errors\": {\n    \"name\": [\n      \"Max 15 ABIs per account\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response - Duplicate Address\nDESCRIPTION: Error response when attempting to add a duplicate address to watchlist.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API blueprint.md#2025-04-22_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"errors\": {\n    \"watchlist_id\": [\n      \"Address already added to the watch list\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Index-Dependent Functionality Handling in Elixir\nDESCRIPTION: Example of implementing functionality that gracefully handles the case when a required index might not be available yet by providing fallback behavior.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_10\n\nLANGUAGE: elixir\nCODE:\n```\n# Example of handling index-dependent functionality\ndef fetch_data(params) do\n  if BackgroundMigrations.heavy_indexes_your_new_index_finished?() do\n    # Use optimized query that relies on the index\n    fetch_with_index(params)\n  else\n    # Fallback behavior:\n    # - Return limited/partial results\n    # - Show \"functionality temporarily unavailable\" message\n    # - Use alternative query path that doesn't require the index\n    # - Return error with appropriate message\n    handle_index_not_ready(params)\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Creating Index Using Table Columns in Elixir\nDESCRIPTION: Simpler approach for creating a straightforward index on one or more columns using the @table_columns attribute without special conditions or expressions.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\n@table_columns [:column1, :column2]\n```\n\n----------------------------------------\n\nTITLE: Implementing Fallback Handler for Index Cache\nDESCRIPTION: Code snippet showing how to implement a fallback handler for the cache tracking system of a heavy index operation.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_8\n\nLANGUAGE: elixir\nCODE:\n```\ndefp handle_fallback(:heavy_indexes_your_new_index_finished) do\n  start_migration_status_task(\n    YourNewIndex,\n    &set_heavy_indexes_your_new_index_finished/1\n  )\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Chain-Specific Index Operations in runtime.exs\nDESCRIPTION: Configuration code for enabling an index operation conditionally based on chain type, allowing for chain-specific optimizations.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\n# Example for an Arbitrum-specific index\nconfig :explorer, Explorer.Migrator.HeavyDbIndexOperation.YourNewIndex,\n  enabled: ConfigHelper.chain_type() == :some_chain_type\n```\n\n----------------------------------------\n\nTITLE: Configuring Heavy Index Operation in Application.ex\nDESCRIPTION: Code snippet showing how to add a new heavy index operation module to the configurable_children list in the application configuration.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/explorer/lib/explorer/migrator/heavy_db_index_operation/README.md#2025-04-22_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\nconfigure_mode_dependent_process(\n  Explorer.Migrator.HeavyDbIndexOperation.YourNewIndex,\n  :indexer\n)\n```\n\n----------------------------------------\n\nTITLE: User Info Response Headers\nDESCRIPTION: HTTP response headers for user info endpoint showing cookie settings and CORS configuration\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/API.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nset-cookie: _explorer_key=SFMyNTY.g3QAAAABbQAAAAxjdXJyZW50X3VzZXJ0AAAAB2QABmF2YXRhcm0AAAAlaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIvdGVzdF91c2VyNGQABWVtYWlsbQAAABp0ZXN0X3VzZXItNEBibG9ja3Njb3V0LmNvbWQAAmlkYcRkAARuYW1lbQAAAApVc2VyIFRlc3Q0ZAAIbmlja25hbWVtAAAACnRlc3RfdXNlcjRkAAN1aWRtAAAAD2Jsb2Nrc2NvdXR8MDAwNGQADHdhdGNobGlzdF9pZGHE.Ovcc2Vzzv4fhFzmirtQjJ06gcqQwUHMMlju7VX24fyo; path=/; HttpOnly\ncontent-type: application/json; charset=utf-8\ncache-control: max-age=0, private, must-revalidate\nx-request-id: FxF1Y1_QfU9-YaIAAGdh\naccess-control-allow-credentials: true\naccess-control-allow-origin: *\naccess-control-expose-headers: \n```\n\n----------------------------------------\n\nTITLE: Testing Geth with HTTP/WebSocket Setup Commands\nDESCRIPTION: Shell commands for configuring the test environment to use Geth with HTTP and WebSocket protocols.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/ethereum_jsonrpc/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nexport ETHEREUM_JSONRPC_CASE=EthereumJSONRPC.Case.Geth.HTTPWebSocket\nexport ETHEREUM_JSONRPC_WEB_SOCKET_CASE=EthereumJSONRPC.WebSocket.Case.Geth\nmix test --exclude no_geth\n```\n\n----------------------------------------\n\nTITLE: Running Blockscout via Makefile\nDESCRIPTION: Alternative commands for starting and stopping Blockscout Docker containers using a Makefile. These commands utilize the same environment files as the docker-compose setup.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/docker-compose/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd ./docker\nmake start\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd ./docker\nmake stop\n```\n\n----------------------------------------\n\nTITLE: Feature Toggle Implementation in Phoenix Router\nDESCRIPTION: A pattern for implementing feature-toggled endpoints using the CheckFeature plug in Phoenix router pipelines.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\npipeline :my_feature do\n  plug(BlockScoutWeb.Plug.CheckFeature, feature_check: &my_feature_enabled?/0)\nend\n\nscope \"/my-feature\" do\n  pipe_through(:my_feature)\n  \n  get \"/data\", MyFeatureController, :index\nend\n```\n\n----------------------------------------\n\nTITLE: Conditional Repository Loading in Elixir Configuration\nDESCRIPTION: A pattern for conditionally loading feature-specific repositories based on environment variables at runtime.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\n# In config_helper.ex\next_repos = [\n  {parse_bool_env_var(\"MY_FEATURE_ENABLED\"), Explorer.Repo.MyFeature},\n  # other feature repos...\n]\n|> Enum.filter(&elem(&1, 0))\n|> Enum.map(&elem(&1, 1))\n```\n\n----------------------------------------\n\nTITLE: Recommended Pattern for Chain Type Configuration in Elixir\nDESCRIPTION: The preferred approach for handling chain-specific functionality using runtime configuration and pattern matching.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\n# DO THIS INSTEAD\nuse Utils.RuntimeEnvHelper,\n  chain_type: [:explorer, :chain_type]\n\ndef foo, do: chain_type() |> do_foo()\n\ndefp do_foo(:optimism), do: :bar\ndefp do_foo(_), do: :baz\n```\n\n----------------------------------------\n\nTITLE: Running Interactive Elixir Shell\nDESCRIPTION: Command to start IEx (Interactive Elixir) with the Phoenix server.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\niex -S mix phx.server\n```\n\n----------------------------------------\n\nTITLE: Starting Phoenix Server\nDESCRIPTION: Command to start the Phoenix server for BlockScout Web interface.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmix phx.server\n```\n\n----------------------------------------\n\nTITLE: Building Assets\nDESCRIPTION: Command to build front-end assets for production.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd assets && npm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the BlockScout Web interface assets.\nSOURCE: https://github.com/blockscout/blockscout/blob/master/apps/block_scout_web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd assets && npm install && cd ..\n```"
  }
]
[
  {
    "owner": "apache",
    "repo": "tomee",
    "content": "TITLE: Movie Entity Class Implementation in Java\nDESCRIPTION: JPA Entity class representing a Movie with basic properties like id, director, title and year. Includes standard getters and setters.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@Entity\npublic class Movie {\n\n    @Id @GeneratedValue\n    private long id;\n\n    private String director;\n    private String title;\n    private int year;\n\n    public Movie() {\n    }\n\n    public long getId() {\n        return id;\n    }\n\n    public void setId(long id) {\n        this.id = id;\n    }\n\n    public Movie(String director, String title, int year) {\n        this.director = director;\n        this.title = title;\n        this.year = year;\n    }\n\n    public String getDirector() {\n        return director;\n    }\n\n    public void setDirector(String director) {\n        this.director = director;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public int getYear() {\n        return year;\n    }\n\n    public void setYear(int year) {\n        this.year = year;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JUnit Test Case for Movies EJB\nDESCRIPTION: Test class demonstrating how to test the Movies EJB using EJBContainer API with an embedded database configuration.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npublic class MoviesTest extends TestCase {\n\n    public void test() throws Exception {\n\n        final Properties p = new Properties();\n        p.put(\"movieDatabase\", \"new://Resource?type=DataSource\");\n        p.put(\"movieDatabase.JdbcDriver\", \"org.hsqldb.jdbcDriver\");\n        p.put(\"movieDatabase.JdbcUrl\", \"jdbc:hsqldb:mem:moviedb\");\n\n        final Context context = EJBContainer.createEJBContainer(p).getContext();\n\n        Movies movies = (Movies) context.lookup(\"java:global/injection-of-entitymanager/Movies\");\n\n        movies.addMovie(new Movie(\"Quentin Tarantino\", \"Reservoir Dogs\", 1992));\n        movies.addMovie(new Movie(\"Joel Coen\", \"Fargo\", 1996));\n        movies.addMovie(new Movie(\"Joel Coen\", \"The Big Lebowski\", 1998));\n\n        List<Movie> list = movies.getMovies();\n        assertEquals(\"List.size()\", 3, list.size());\n\n        for (Movie movie : list) {\n            movies.deleteMovie(movie);\n        }\n\n        assertEquals(\"Movies.getMovies()\", 0, movies.getMovies().size());\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Basic Clustering Configuration to TomEE Host\nDESCRIPTION: XML configuration snippet showing how to add the SimpleTcpCluster to the Host section of server.xml. This enables basic clustering functionality between TomEE instances.\nSOURCE: https://github.com/apache/tomee/blob/main/docs/tomee-cluster.txt#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n...\n<Engine name=\"Catalina\" defaultHost=\"localhost\">\n\t...\n\t<Host name=\"localhost\"  appBase=\"webapps\"\n    unpackWARs=\"true\" autoDeploy=\"true\">\n\t\t\n\t\t<Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/> \n```\n\n----------------------------------------\n\nTITLE: Running TomEE Application with Maven in Shell\nDESCRIPTION: Shell command to clean, install, and run the TomEE application using Maven.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install tomee:run\n```\n\n----------------------------------------\n\nTITLE: Configuring TomEE Maven Plugin with Oracle JDBC in POM XML\nDESCRIPTION: Updates the TomEE Maven plugin configuration in pom.xml to include the Oracle JDBC driver. This ensures that TomEE has access to the Oracle JDBC driver when running the application.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<plugin>\n    <groupId>org.apache.tomee.maven</groupId>\n    <artifactId>tomee-maven-plugin</artifactId>\n    <version>${tomee.version}</version>\n    <configuration>\n      <tomeeVersion>${tomee.version}</tomeeVersion>\n      <tomeeClassifier>plume</tomeeClassifier>\n      <tomeeHttpPort>9080</tomeeHttpPort>\n      <tomeeShutdownPort>9005</tomeeShutdownPort>\n      <libs>\n        <lib>com.oracle.jdbc:ojdbc8:18.3.0.0</lib>\n      </libs>\n    </configuration>\n  </plugin>\n```\n\n----------------------------------------\n\nTITLE: Adding Oracle JDBC Dependency in Maven POM XML\nDESCRIPTION: Adds the Oracle JDBC driver dependency to the project's pom.xml file. This allows the project to use Oracle's JDBC driver for database connectivity.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>com.oracle.jdbc</groupId>\n  <artifactId>ojdbc8</artifactId>\n  <version>18.3.0.0</version>\n  <scope>provided</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Maven Repository in POM XML\nDESCRIPTION: Adds the Oracle Maven repository configuration to the project's pom.xml file. This allows Maven to download Oracle-specific dependencies.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<repository>\n  <id>maven.oracle.com</id>\n  <name>oracle-maven-repo</name>\n  <url>https://maven.oracle.com</url>\n  <layout>default</layout>\n  <releases>\n    <enabled>true</enabled>\n    <updatePolicy>always</updatePolicy>\n  </releases>\n</repository>\n```\n\n----------------------------------------\n\nTITLE: Stateful EJB with EntityManager Injection\nDESCRIPTION: Movies class demonstrating EntityManager injection using @PersistenceContext with EXTENDED persistence context type in a Stateful EJB.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n@Stateful\npublic class Movies {\n\n    @PersistenceContext(unitName = \"movie-unit\", type = PersistenceContextType.EXTENDED)\n    private EntityManager entityManager;\n\n    public void addMovie(Movie movie) throws Exception {\n        entityManager.persist(movie);\n    }\n\n    public void deleteMovie(Movie movie) throws Exception {\n        entityManager.remove(movie);\n    }\n\n    public List<Movie> getMovies() throws Exception {\n        Query query = entityManager.createQuery(\"SELECT m from Movie as m\");\n        return query.getResultList();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Server for Oracle Repository in XML\nDESCRIPTION: Updates the Maven settings.xml file to include server configuration for accessing the Oracle Maven repository. This includes authentication details and HTTP configuration.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<server>\n    <id>maven.oracle.com </id>\n    <username>YourOracleAccountUsername</username>\n    <password>YourOracleAccountPassword</password>\n    <configuration>\n        <basicAuthScope>\n        <host>ANY </host>\n        <port>ANY </port>\n        <realm>OAM 11g </realm>\n        </basicAuthScope>\n        <httpConfiguration>\n        <all>\n        <params>\n        <property>\n        <name>http.protocol.allow-circular-redirects </name>\n        <value>%b,true </value>\n        </property>\n        </params>\n        </all>\n        </httpConfiguration>\n    </configuration>\n</server>\n```\n\n----------------------------------------\n\nTITLE: JPA Persistence Configuration\nDESCRIPTION: persistence.xml configuration file defining the persistence unit for the Movie entity with JTA and non-JTA data sources.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" version=\"1.0\">\n\n  <persistence-unit name=\"movie-unit\">\n    <jta-data-source>movieDatabase</jta-data-source>\n    <non-jta-data-source>movieDatabaseUnmanaged</non-jta-data-source>\n    <class>org.superbiz.injection.jpa.Movie</class>\n\n    <properties>\n      <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"/>\n    </properties>\n  </persistence-unit>\n</persistence>\n```\n\n----------------------------------------\n\nTITLE: Displaying OpenEJB Deploy Command Help in Command Line\nDESCRIPTION: This command shows the help information specifically for the OpenEJB deploy command, including usage instructions and available options.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/README.txt#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenejb deploy --help\n```\n\n----------------------------------------\n\nTITLE: Configuring a DataSource in OpenEJB XML\nDESCRIPTION: Example of how to configure a DataSource resource in the openejb.xml file. This snippet demonstrates the XML and properties hybrid format used in OpenEJB configuration.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/conf/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Resource id=\"MyDataSource\" type=\"DataSource\">\n  username foo\n  password bar\n</Resource>\n```\n\n----------------------------------------\n\nTITLE: Adding Tomcat User for Application Deployment\nDESCRIPTION: This XML snippet shows how to add a user with manager role to the Tomcat users configuration file. This user is required for deploying the application to Tomcat.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/struts/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<user username=\"admin\" password=\"\" roles=\"manager\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Server Ports for Local TomEE Clustering\nDESCRIPTION: XML configuration to modify default ports in server.xml to allow running multiple TomEE instances on the same machine. Changes the shutdown port to 9005, HTTP connector to 9080, HTTPS connector to 9443, and AJP connector to 9009.\nSOURCE: https://github.com/apache/tomee/blob/main/docs/tomee-cluster.txt#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Server port=\"9005\" shutdown=\"SHUTDOWN\">\n\n<Connector port=\"9080\" protocol=\"HTTP/1.1\"\n\t\t\t   connectionTimeout=\"20000\"\n\t\t\t   redirectPort=\"9443\" />\n\t\t\t   \n<!--\n<Connector port=\"9443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\n\t\t   maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n\t\t   clientAuth=\"false\" sslProtocol=\"TLS\" />\n-->\n\n<Connector port=\"9009\" protocol=\"AJP/1.3\" redirectPort=\"9443\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring JVM Options for OpenEJB Windows Service\nDESCRIPTION: Example of JVM options configuration for the OpenEJB Windows service. Shows proper formatting with continuation symbols and warning about hidden characters that may break the configuration.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/service.readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n++JvmOptions=-Dopenejb.home=\"%openejb%\" ^\n++JvmOptions=-Xms128M ^[tab or space] <-- Will break here, no further options will be appended\n++JvmOptions=-Xmx512M ^\n++JvmOptions=-XX:MaxPermSize=256M <-- Last line has no continuation symbol\n```\n\n----------------------------------------\n\nTITLE: Configuring FarmWarDeployer for TomEE Cluster Deployment\nDESCRIPTION: XML configuration that sets up the FarmWarDeployer within the cluster configuration. This component handles deployment of web applications across the cluster using specified directories for temporary files, deployments, and watching for new applications.\nSOURCE: https://github.com/apache/tomee/blob/main/docs/tomee-cluster.txt#2025-04-23_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n...\n<Engine name=\"Catalina\" defaultHost=\"localhost\">\n\t...\n\t<Host name=\"localhost\"  appBase=\"webapps\"\n    unpackWARs=\"true\" autoDeploy=\"true\">\n\t\t\n\t\t<Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"> \t\n\t\t\t<Deployer className=\"org.apache.catalina.ha.deploy.FarmWarDeployer\"\n\t\t\t\ttempDir=\"cluster/temp\"\n\t\t\t\tdeployDir=\"cluster/webapps\"\n\t\t\t\twatchDir=\"cluster/watch\"\n\t\t\t\twatchEnabled=\"true\"/>\n\t\t</Cluster>\n\t...\n```\n\n----------------------------------------\n\nTITLE: Setting JAVA_HOME for TomEE Windows Service (Batch)\nDESCRIPTION: This snippet shows how to set the JAVA_HOME environment variable in the service.bat file to use a specific Java runtime for the TomEE Windows service. Replace [Full path to your JRE or JDK] with the actual path to the desired Java installation.\nSOURCE: https://github.com/apache/tomee/blob/main/tomee/apache-tomee/src/main/resources/service.readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nset \"JAVA_HOME=[Full path to your JRE or JDK]\"\n```\n\n----------------------------------------\n\nTITLE: Persistence Unit XML Configuration Template\nDESCRIPTION: Sample persistence.xml configuration showing JTA and non-JTA datasource setup with OpenJPA properties\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_62\n\nLANGUAGE: xml\nCODE:\n```\n<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" version=\"1.0\">\n    <persistence-unit name=\"{1}\">\n        <jta-data-source>java:openejb/Resource/myDataSource</jta-data-source>\n        <non-jta-data-source>java:openejb/Resource/myUnmanagedDataSource</non-jta-data-source>\n        <properties>\n            <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"/>\n        </properties>\n    </persistence-unit>\n</persistence>\n```\n\n----------------------------------------\n\nTITLE: Alternative DataSource Configuration Format\nDESCRIPTION: An alternative way to configure a DataSource in openejb.xml, using equals signs as separators instead of whitespace. This demonstrates the flexibility in the configuration syntax.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/conf/README.txt#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<Resource id=\"MyDataSource\" type=\"DataSource\">\n  username = foo\n  password = bar\n</Resource>\n```\n\n----------------------------------------\n\nTITLE: Configuring JVM Options for TomEE Windows Service (Batch)\nDESCRIPTION: This snippet demonstrates how to set JVM options for the TomEE Windows service. It includes options for setting the catalina base, initial and maximum heap size, and maximum PermGen space. The continuation symbol '^' is used to span multiple lines.\nSOURCE: https://github.com/apache/tomee/blob/main/tomee/apache-tomee/src/main/resources/service.readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\n++JvmOptions=-Dcatalina.base=\"%CATALINA_BASE%\" ^\n++JvmOptions=-Xms128M ^\n++JvmOptions=-Xmx512M ^\n++JvmOptions=-XX:MaxPermSize=256M\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenEJB Monitor Service Target\nDESCRIPTION: Command line syntax for configuring the OpenEJB monitor service in the shortcut properties. Demonstrates how to append the necessary parameter to enable the monitoring feature.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/service.readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\n..\\bin\\OpenEJBServer.exe //MS\n```\n\n----------------------------------------\n\nTITLE: Setting PATH Environment Variable for Unix-like Systems in Shell\nDESCRIPTION: This command adds the OPENEJB_HOME/bin directory to the PATH environment variable in Unix-like systems (Linux, macOS), allowing OpenEJB commands to be executed from any location.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/README.txt#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=$OPENEJB_HOME/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Analyzing Apache TomEE Web Access Log Entries\nDESCRIPTION: This log snippet shows the format of Apache TomEE web access log entries. Each line represents a single HTTP request, including the client IP, timestamp, request method, path, HTTP version, status code, and response size.\nSOURCE: https://github.com/apache/tomee/blob/main/tomee/tomee-webaccess/src/test/resources/test/log/localhost_access_log.2014-02-07.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n127.0.0.1 - tomee [07/Feb/2014:22:42:17 -0500] \"GET /webaccess/log-files HTTP/1.1\" 200 1617\n127.0.0.1 - tomee [07/Feb/2014:22:42:17 -0500] \"GET /webaccess/app/config.js HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:42:17 -0500] \"GET /webaccess/app/js/start.js HTTP/1.1\" 304 -\n```\n\n----------------------------------------\n\nTITLE: Setting PATH Environment Variable for Windows in Command Prompt\nDESCRIPTION: This command adds the OPENEJB_HOME/bin directory to the PATH environment variable in Windows, allowing OpenEJB commands to be executed from any location.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nset PATH=%OPENEJB_HOME%/bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Defining Validation Messages for Apache TomEE Properties\nDESCRIPTION: Resource bundle containing validation messages for various error scenarios in Apache TomEE, including missing classes, wrong class types, missing business methods, and create method issues.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\n1.cannot.validate=Error Message\n2.cannot.validate=Error Message: {0}\n3.cannot.validate=Error Message: {0}\n\n1.missing.class=Missing Class\n2.missing.class=Missing Class <{1}> {0}\n3.missing.class=Class {0} not found. Bean {2} element {1} defines class but class cannot be loaded\n\n1.no.busines.method=No such business method\n2.no.busines.method=Business method {0} not implemented.\n3.no.busines.method=Business method {1} not implemented. The method was declared in the {2} interface {3}, but not implemented in the ejb class\n\n1.no.home.create=No create method.\n2.no.home.create=No create method in {0}.\n3.no.home.create=The home interface {0} must declare at least one create method.\n```\n\n----------------------------------------\n\nTITLE: EJB Annotation Validation\nDESCRIPTION: Validation code for checking proper usage of @EJB annotations at class level, ensuring required 'beanInterface' and 'name' attributes are present.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_52\n\nLANGUAGE: Java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"ejbAnnotation.onClassWithNoBeanInterface\");\nfail(consumer.getJndiConsumerName(), \"ejbAnnotation.onClassWithNoName\");\n```\n\n----------------------------------------\n\nTITLE: Persistence Context Validation\nDESCRIPTION: Validation checks for @PersistenceContext annotation usage, ensuring it's only used with EntityManager and not with EntityManagerFactory.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_53\n\nLANGUAGE: Java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"persistenceContextAnnotation.onEntityManagerFactory\", persistenceContextRef.getName());\nfail(consumer.getJndiConsumerName(), \"persistenceContextAnnotation.onNonEntityManager\", persistenceContextRef.getName());\n```\n\n----------------------------------------\n\nTITLE: Java EJB Annotation Configuration\nDESCRIPTION: Validation messages for @EJB annotation usage with incorrect interface types and bean class references.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_69\n\nLANGUAGE: java\nCODE:\n```\n@EJB\n@Local\n@Remote\n```\n\n----------------------------------------\n\nTITLE: Persistence Unit Validation\nDESCRIPTION: Validation logic for @PersistenceUnit annotation usage, verifying correct application on EntityManagerFactory references.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_54\n\nLANGUAGE: Java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"persistenceUnitAnnotation.onEntityManager\", persistenceUnitRef.getName());\nfail(consumer.getJndiConsumerName(), \"persistenceUnitAnnotation.onNonEntityManagerFactory\", persistenceUnitRef.getName());\n```\n\n----------------------------------------\n\nTITLE: Resource Annotation Validation\nDESCRIPTION: Validation checks for @Resource annotation at class level, ensuring required 'name' and 'type' attributes are specified.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_55\n\nLANGUAGE: Java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"resourceAnnotation.onClassWithNoName\");\nfail(consumer.getJndiConsumerName(), \"resourceAnnotation.onClassWithNoType\");\n```\n\n----------------------------------------\n\nTITLE: Validating PersistenceContext Name Attribute\nDESCRIPTION: Validation check for missing required 'name' attribute on class-level @PersistenceContext annotations.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_56\n\nLANGUAGE: java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"persistenceUnitAnnotation.onClassWithNoName\", persistenceUnit.unitName());\n```\n\n----------------------------------------\n\nTITLE: Displaying OpenEJB Help Information in Command Line\nDESCRIPTION: This command displays the help information for OpenEJB, providing an overview of available commands and options.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/README.txt#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopenejb --help\n```\n\n----------------------------------------\n\nTITLE: Validating Persistence Units Existence\nDESCRIPTION: Validation for existence of persistence.xml when @PersistenceContextRef is used.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_57\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"persistenceContextRef.noPersistenceUnits\", refShortName, unitName);\n```\n\n----------------------------------------\n\nTITLE: Error Messages for Persistence Unit References\nDESCRIPTION: Error message definitions for missing, ambiguous, or invalid persistence unit references in EJB configurations\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_63\n\nLANGUAGE: text\nCODE:\n```\n# fail(componentName, \"persistenceUnitRef.noUnitName\", refShortName, join(\", \", availableUnits), sampleUnitName );\n1.persistenceUnitRef.noUnitName = @PersistenceUnit unitName required, multiple units available.\n2.persistenceUnitRef.noUnitName = @PersistenceUnit unitName required, multiple units available: ref \"{0}\", available units [{1}]\n3.persistenceUnitRef.noUnitName = Use of @PersistenceUnit witout a unitName is only allowed when there is only a single persistence.xml in the entire application defining exactly one persistence-unit. Available units for ref {0} are [{1}]. Add the unitName to your declaration, for example:\n    @PersistenceUnit(name=\"{0}\", unitName = \"{2}\")\n```\n\n----------------------------------------\n\nTITLE: Displaying OpenEJB Start Command Help in Command Line\nDESCRIPTION: This command displays the help information specifically for the OpenEJB start command, including usage instructions and available options.\nSOURCE: https://github.com/apache/tomee/blob/main/assembly/openejb-standalone/src/main/resources/README.txt#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nopenejb start --help\n```\n\n----------------------------------------\n\nTITLE: Checking PersistenceContext Unit Name\nDESCRIPTION: Validation when unitName is missing but multiple persistence units are available.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_58\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"persistenceContextRef.noUnitName\", refShortName, join(\", \", availableUnits), sampleUnitName );\n```\n\n----------------------------------------\n\nTITLE: Adding Oracle Plugin Repository in POM XML\nDESCRIPTION: Configures the Oracle plugin repository in the project's pom.xml file. This allows Maven to download Oracle-specific plugins if needed.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<pluginRepositories>\n    <pluginRepository>\n      <id>maven.oracle.com</id>\n      <name>oracle-maven-repo</name>\n      <url>https://maven.oracle.com</url>\n      <layout>default</layout>\n      <releases>\n        <enabled>true</enabled>\n        <updatePolicy>always</updatePolicy>\n      </releases>\n    </pluginRepository>\n</pluginRepositories>\n```\n\n----------------------------------------\n\nTITLE: Defining Timeout Method Validation Messages\nDESCRIPTION: Property definitions for validating timeout method signatures and return types\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_26\n\nLANGUAGE: properties\nCODE:\n```\ntimeout.badReturnType = Timeout method must return 'void'\ntimeout.badReturnType = Timeout method must return 'void': method {0} returns {1}\ntimeout.badReturnType = Timeout method \"{0}\" illegally returns {1} instead of void. Change the method signature to \"void {0}(javax.ejb.Timer)\"\n```\n\n----------------------------------------\n\nTITLE: Interceptor XML Configuration Example for Unused Interceptors\nDESCRIPTION: XML template showing how to bind an unused interceptor to an EJB in the deployment descriptor. This shows the correct structure of the interceptor-binding element including the ejb-name and interceptor-class elements.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_28\n\nLANGUAGE: xml\nCODE:\n```\n<interceptor-binding>\\r\\n\\  <ejb-name>Your ejb name here</ejb-name>\\r\\n\\  <interceptor-class>{0}</interceptor-class>\\r\\n<interceptor-binding>\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Missing Asynchronous Method Validation\nDESCRIPTION: Method call that validates if a specified asynchronous method exists in the bean class. It fails if the required method signature is not found in the class.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_33\n\nLANGUAGE: java\nCODE:\n```\nfail(\"Asynchronous\", \"asynchronous.missing\", asyncMethod.getMethodName(), beanClass.getName(), getParamters(asyncMethod));\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Asynchronous Method Return Type Validation\nDESCRIPTION: Method call that checks if an asynchronous method has a valid return type (void or Future<V>). It fails the validation if any other return type is detected.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_32\n\nLANGUAGE: java\nCODE:\n```\nfail(\"Asynchronous\", \"asynchronous.badReturnType\", asyncMethod.getMethodName(), returnType.getName(), beanClass.getName());\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Non-Public Asynchronous Method Warning\nDESCRIPTION: Method call that generates a warning when a non-public method in a class annotated with @Asynchronous is ignored. Only public methods can be asynchronous.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_35\n\nLANGUAGE: java\nCODE:\n```\nwarn(\"Asynchronous\", \"asynchronous.methodignored\", beanClass.getName(), methodName);\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Asynchronous Method Exception Type Validation\nDESCRIPTION: Method call that checks if an asynchronous method with void return type throws any ApplicationException, which is not allowed per EJB specification.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_34\n\nLANGUAGE: java\nCODE:\n```\nfail(\"Asynchronous\", \"asynchronous.badExceptionType\", asyncMethod.getMethodName(), beanClass.getName(), getParamters(asyncMethod));\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Remote Annotation Attributes\nDESCRIPTION: Code snippet showing the fail method call for handling cases where @Remote annotation is used without explicit interface declarations.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_39\n\nLANGUAGE: Java\nCODE:\n```\nfail(ejbName, \"ann.remote.noAttributes\", join(\", \", interfaces));\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for EJB Interface Declaration Conflict\nDESCRIPTION: Method call that fails validation when an EJB interface is declared as both business-local and business-remote, which is not allowed per the EJB specification.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_37\n\nLANGUAGE: java\nCODE:\n```\nfail(ejbName, \"xml.localRemote.conflict\", interfce);\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Local-Remote Conflict\nDESCRIPTION: Code snippet showing the fail method call for handling conflicts between @Local and @Remote annotations on bean classes.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_42\n\nLANGUAGE: Java\nCODE:\n```\nfail(ejbName, \"ann.localRemote.conflict\", join(\", \", interfaces));\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Local-Remote Ambiguity\nDESCRIPTION: Code snippet showing the fail method call for handling ambiguous usage of @Local and @Remote annotations on bean classes.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_41\n\nLANGUAGE: Java\nCODE:\n```\nfail(ejbName, \"ann.localRemote.ambiguous\", join(\", \", interfaces));\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for EJBHome Interface Check\nDESCRIPTION: Code snippet showing the fail method call for handling invalid usage of EJBHome interfaces with @Remote or @Local annotations.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_43\n\nLANGUAGE: Java\nCODE:\n```\nfail(ejbName, \"ann.remoteOrLocal.ejbHome\", annotationName, interfce.getName());\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for EJB Home Interface Validation\nDESCRIPTION: Code snippet showing the fail method call for validating EJB home interface annotations\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_44\n\nLANGUAGE: java\nCODE:\n```\nfail(ejbName, \"ann.remoteOrLocal.ejbHome\", annotationName, interfce.getName());\n```\n\n----------------------------------------\n\nTITLE: Warn Method Call for Method Annotation Validation\nDESCRIPTION: Code snippet showing the warn method call for validating method-level annotations\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_47\n\nLANGUAGE: java\nCODE:\n```\nwarn(bean, \"ignoredMethodAnnotation\", annotationType, beanType, className, methodName);\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for EJB Local Home Interface Validation\nDESCRIPTION: Code snippet showing the fail method call for validating EJB local home interface annotations\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_45\n\nLANGUAGE: java\nCODE:\n```\nfail(ejbName, \"ann.remoteOrLocal.ejbLocalHome\", annotationName, interfce.getName());\n```\n\n----------------------------------------\n\nTITLE: Warn Method Call for Class Annotation Validation\nDESCRIPTION: Code snippet showing the warn method call for validating class-level annotations\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_48\n\nLANGUAGE: java\nCODE:\n```\nwarn(bean, \"ignoredClassAnnotation\", annotationType, beanType, className);\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for EJB Object Interface Validation\nDESCRIPTION: Code snippet showing the fail method call for validating EJB object interface annotations\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_46\n\nLANGUAGE: java\nCODE:\n```\nfail(ejbName, \"ann.remoteOrLocal.ejbObject\", annotationName, interfce.getName());\n```\n\n----------------------------------------\n\nTITLE: Defining EJB Local Object Interface in Java\nDESCRIPTION: This snippet shows the structure of an EJB Local Object interface. It extends javax.ejb.EJBLocalObject and includes a create() method that throws a javax.ejb.CreateException.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_65\n\nLANGUAGE: Java\nCODE:\n```\npublic interface {0}Object extends javax.ejb.EJBLocalObject {\n    {0}Object create() throws javax.ejb.CreateException;\n}\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Persistence Context Validation\nDESCRIPTION: Code snippet showing the fail method call for validating persistence context type\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_49\n\nLANGUAGE: java\nCODE:\n```\nfail(bean, \"persistenceContextExtented.nonStateful\", refName, beanType);\n```\n\n----------------------------------------\n\nTITLE: XML Business Local Remote Interface Configuration\nDESCRIPTION: XML validation messages for incorrectly using <business-local> tag instead of <remote> tag for interfaces extending javax.ejb.EJBObject in ejb-jar.xml.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_68\n\nLANGUAGE: xml\nCODE:\n```\n<remote>{0}</remote>\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Entity Manager Resource Validation\nDESCRIPTION: Code snippet showing the fail method call for validating EntityManager resource references\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_50\n\nLANGUAGE: java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"resourceRef.onEntityManager\", refName);\n```\n\n----------------------------------------\n\nTITLE: Container Transaction EJB Name Required Error Message\nDESCRIPTION: Error message for when a container transaction requires an EJB name to be specified along with the transaction attribute.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\ncontainerTransaction.ejbNameRequired = Assinging a container-transaction requires the ejb-name of the bean to also be specified.  Fix container-transaction on method \"{0}\" with transaction attribute {1}.\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Entity Manager Factory Resource Validation\nDESCRIPTION: Code snippet showing the fail method call for validating EntityManagerFactory resource references\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_51\n\nLANGUAGE: java\nCODE:\n```\nfail(consumer.getJndiConsumerName(), \"resourceRef.onEntityManagerFactory\", refName);\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Bad Return Type Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when an AroundInvoke method has an incorrect return type.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"aroundInvoke.badReturnType\", aroundType, aroundInvoke.getMethodName(), returnType.getName(), aroundInvoke.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Validating Persistence Unit Name Uniqueness\nDESCRIPTION: Check for ambiguous persistence unit name matches when multiple units share the same name.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_59\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"persistenceContextRef.vagueMatches\", refShortName, unitName, possibleUnits.size(), join(\", \", possibleUnits));\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Bad Return Type Error Messages\nDESCRIPTION: Error messages for when an AroundInvoke method doesn't return java.lang.Object, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_5\n\nLANGUAGE: properties\nCODE:\n```\naroundInvoke.badReturnType = {0} method must return java.lang.Object\n\naroundInvoke.badReturnType = {0} method must return java.lang.Object: method \"{1}\" returns \"{2}\"\n\naroundInvoke.badReturnType = {0} method \"{1}\" in class {3} illegally returns {2} instead of java.lang.Object.  Change the method signature to \"java.lang.Object {1}(javax.ejb.InvocationContext) throws java.lang.Exception\"\n```\n\n----------------------------------------\n\nTITLE: Validating Persistence Unit Existence\nDESCRIPTION: Verification that referenced persistence unit exists in configuration.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_60\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"persistenceContextRef.noMatches\", refShortName, unitName, join(\", \", availableUnits));\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Missing Method Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when an AroundInvoke method is missing.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"aroundInvoke.missing\", aroundType, aroundInvoke.getMethodName(), aroundInvoke.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Checking PersistenceUnit Reference\nDESCRIPTION: Validation for required persistence.xml when @PersistenceUnit reference is used.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_61\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"persistenceUnitRef.noPersistenceUnits\", refShortName, unitName);\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Missing Method Error Messages\nDESCRIPTION: Error messages for when an AroundInvoke method is missing, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_9\n\nLANGUAGE: properties\nCODE:\n```\naroundInvoke.missing = {0} method missing\n\naroundInvoke.missing = {0} method missing: \"{1}\" in class {2}\n\naroundInvoke.missing = {0} method \"{1}\" not found in class {2}.  The required method signature is \"java.lang.Object {1}(javax.ejb.InvocationContext) throws java.lang.Exception\"\n```\n\n----------------------------------------\n\nTITLE: XML Business Local EJB Home Interface Configuration\nDESCRIPTION: XML validation messages for incorrectly using <business-local> tag instead of <home> tag for interfaces extending javax.ejb.EJBHome in ejb-jar.xml.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_66\n\nLANGUAGE: xml\nCODE:\n```\n<home>{0}</home>\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Invalid Arguments Error Messages\nDESCRIPTION: Error messages for when an AroundInvoke method has invalid arguments, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_11\n\nLANGUAGE: properties\nCODE:\n```\naroundInvoke.invalidArguments = Invalid {0} arguments\n\naroundInvoke.invalidArguments = Invalid {0} arguments: {1}({2})\n\naroundInvoke.invalidArguments = {0} method signature \"{1}({2})\" in class {3} has invalid arguments.  The required method signature is \"java.lang.Object {1}(javax.ejb.InvocationContext) throws java.lang.Exception\"\n```\n\n----------------------------------------\n\nTITLE: XML Business Local EJB Local Interface Configuration\nDESCRIPTION: XML validation messages for incorrectly using <business-local> tag instead of <local> tag for interfaces extending javax.ejb.EJBLocalObject in ejb-jar.xml.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_67\n\nLANGUAGE: xml\nCODE:\n```\n<local>{0}</local>\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Missing Method Possible Typo Error Messages\nDESCRIPTION: Error messages for when an AroundInvoke method might have a typo, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_13\n\nLANGUAGE: properties\nCODE:\n```\naroundInvoke.missing.possibleTypo = {0} method missing or invalid\n\naroundInvoke.missing.possibleTypo = {0} method missing or invalid: looked for \"{1}(javax.ejb.InvocationContext)\" in class {3}\n\naroundInvoke.missing.possibleTypo = {0} method missing or invalid.  There are {2} methods with the name \"{1}\" visible in class {3}, none have the required signature of \"java.lang.Object {1}(javax.ejb.InvocationContext) throws java.lang.Exception\"\n```\n\n----------------------------------------\n\nTITLE: Container Transaction Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when a container transaction references a non-existent EJB.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nfail(\"ContainerTransaction\", \"containerTransaction.noSuchEjbName\", method.getMethodName(), method.getEjbName(), transaction.getTransAttribute());\n```\n\n----------------------------------------\n\nTITLE: Callback Bad Return Type Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when a callback method has an incorrect return type.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_14\n\nLANGUAGE: java\nCODE:\n```\nfail(bean, \"callback.badReturnType\", type, callback.getMethodName(), returnType.getName(), callback.getClassName());\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Invalid Arguments Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when an AroundInvoke method has invalid arguments.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"aroundInvoke.invalidArguments\", aroundType, aroundInvoke.getMethodName(), getParameters(possibleMethods.get(0)), aroundInvoke.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Container Transaction No Such EJB Name Error Messages\nDESCRIPTION: Error messages for when a container transaction references an EJB that does not exist, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\ncontainerTransaction.noSuchEjbName = Referenced EJB does not exist\n\ncontainerTransaction.noSuchEjbName = Referenced EJB does not exist: {0} on method \"{1}\".\n\ncontainerTransaction.noSuchEjbName = Container-transaction refers to an EJB, {0}, that does not exist.  Fix container-transaction on method \"{0}\" with transaction attribute {1}.\n```\n\n----------------------------------------\n\nTITLE: Callback Bad Return Type Error Messages\nDESCRIPTION: Error messages for when a callback method doesn't return void, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_15\n\nLANGUAGE: properties\nCODE:\n```\ncallback.badReturnType = {0} method must return 'void'\n\ncallback.badReturnType = {0} method must return 'void': method {1} returns {2}\n\ncallback.badReturnType = {0} method \"{1}\" in class {3} illegally returns {2} instead of void.  Change the method signature to \"void {1}()\"\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Must Throw Exception Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when an AroundInvoke method doesn't declare 'throws Exception'.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"aroundInvoke.mustThrowException\", aroundType, aroundInvoke.getMethodName(), aroundInvoke.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Callback Missing Method Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when a callback method is missing.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_18\n\nLANGUAGE: java\nCODE:\n```\nfail(bean, \"callback.missing\", type, callback.getMethodName(), callback.getClassName());\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Must Throw Exception Error Messages\nDESCRIPTION: Error messages for when an AroundInvoke method doesn't declare 'throws Exception', with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_7\n\nLANGUAGE: properties\nCODE:\n```\naroundInvoke.mustThrowException = {0} method must declare 'throws Exception'\n\naroundInvoke.mustThrowException = {0} method must declare 'throws Exception': method \"{1}\"\n\naroundInvoke.mustThrowException = {0} method \"{1}\" must declare java.lang.Exception in the throws clause.  Change the method signature to \"java.lang.Object {1}(javax.ejb.InvocationContext) throws java.lang.Exception\"\n```\n\n----------------------------------------\n\nTITLE: Callback Invalid Arguments Error Messages\nDESCRIPTION: Error messages for when a callback method has invalid arguments, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_21\n\nLANGUAGE: properties\nCODE:\n```\ncallback.invalidArguments = Invalid {0} arguments\n\ncallback.invalidArguments = Invalid {0} arguments. Found: {1}({2}). Required: {1}({4})  \n\ncallback.invalidArguments = {0} method signature \"{1}({2})\" in class {3} has invalid arguments.  The required method signature is \"void {1}(4)\"\n```\n\n----------------------------------------\n\nTITLE: AroundInvoke Missing Method Possible Typo Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when an AroundInvoke method might have a typo.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nfail(componentName, \"aroundInvoke.missing.possibleTypo\", aroundType, aroundInvoke.getMethodName(), possibleMethods.size(), aroundInvoke.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Callback Missing Method Possible Typo Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when a callback method might have a typo.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_22\n\nLANGUAGE: java\nCODE:\n```\nfail(bean, \"callback.missing.possibleTypo\", type, callback.getMethodName(), possibleMethods.size(), callback.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Callback Bad Modifier Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when a callback method has invalid modifiers.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_16\n\nLANGUAGE: java\nCODE:\n```\nfail(bean, \"callback.badModifier\", type, callback.getMethodName(), callback.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Callback Missing Method Possible Typo Error Message\nDESCRIPTION: Error message for when a callback method might have a typo, with severity level 1.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_23\n\nLANGUAGE: properties\nCODE:\n```\ncallback.missing.possibleTypo = {0} method missing or invalid\n```\n\n----------------------------------------\n\nTITLE: Callback Bad Modifier Error Messages\nDESCRIPTION: Error messages for when a callback method has invalid modifiers (final or static), with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_17\n\nLANGUAGE: properties\nCODE:\n```\ncallback.badModifier = {0} method must not be final and static\n\ncallback.badModifier = {0} method must not be final and static : method {1}\n\ncallback.badModifier = {0} method \"{1}\" in class {2} must not be final and static\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Interceptor Callback Validation\nDESCRIPTION: Java method call that generates an error when interceptor callback methods have invalid signatures. It checks if the method properly follows the required signature pattern.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_29\n\nLANGUAGE: java\nCODE:\n```\nfail(\"Interceptor\", \"interceptor.callback.missingPossibleTypo\", type, callback.getMethodName(), possibleMethods.size(), interceptorClass.getName());\n```\n\n----------------------------------------\n\nTITLE: Callback Missing Method Error Messages\nDESCRIPTION: Error messages for when a callback method is missing, with three severity levels.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_19\n\nLANGUAGE: properties\nCODE:\n```\ncallback.missing = {0} method missing\n\ncallback.missing = {0} method missing: \"{1}\" in class {2}\n\ncallback.missing = {0} method \"{1}\" not found in class {2}.  The required method signature is \"void {1}()\"\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Injection Target Name Validation\nDESCRIPTION: Method call that warns about and corrects invalid injection target names, particularly when they incorrectly include 'set' prefix for setter methods. This helps maintain proper naming conventions.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_31\n\nLANGUAGE: java\nCODE:\n```\nwarn(bean, \"injectionTarget.nameContainsSet\", target.getInjectionTargetName(), shortNameInvalid, shortNameCorrect, correctName, reference.getName(), reference.getClass().getSimpleName());\n```\n\n----------------------------------------\n\nTITLE: Callback Invalid Arguments Validation Failure Call\nDESCRIPTION: Function call to handle validation failures when a callback method has invalid arguments.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_20\n\nLANGUAGE: java\nCODE:\n```\nfail(bean, \"callback.invalidArguments\", type, callback.getMethodName(), getParameters(possibleMethods.get(0)), callback.getClassName());\n```\n\n----------------------------------------\n\nTITLE: Error Messages for Invalid Bean Annotations\nDESCRIPTION: Error message definitions for when annotations are incorrectly applied to interfaces or abstract classes\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_64\n\nLANGUAGE: text\nCODE:\n```\n# fail(ejbName, \"interfaceAnnotatedAsBean\", annotationClass.getSimpleName(), beanClass.getName());\n1.interfaceAnnotatedAsBean = @{0} cannot be applied to an interface.\n2.interfaceAnnotatedAsBean = @{0} cannot be applied to an interface: {1}\n3.interfaceAnnotatedAsBean = Only concrete classes, not interfaces, are allowed to use the @{0} annotation. Either convert the interface {1} to a class so that it may be used as a valid bean or move the @{0} annotation to the classes that implement this interface.\n```\n\n----------------------------------------\n\nTITLE: Defining Callback Method Missing Error Messages\nDESCRIPTION: Property definitions for error messages when a callback method is missing or has invalid signature\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_24\n\nLANGUAGE: properties\nCODE:\n```\ncallback.missing.possibleTypo = {0} method missing or invalid: looked for \"void {1}({4})\" in class {3}\ncallback.missing.possibleTypo = {0} method missing or invalid. There are {2} methods with the name \"{1}\" visible in class {3}, none have the required signature of \"void {1}(4)\"\n```\n\n----------------------------------------\n\nTITLE: Importing Classloader in Python\nDESCRIPTION: Simple Python import statement for the classloader2 module within the TomEE project context\nSOURCE: https://github.com/apache/tomee/blob/main/server/openejb-http/src/test/resources/META-INF/resources/other/foo.txt#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom classloader2\n```\n\n----------------------------------------\n\nTITLE: Defining Session Synchronization Invalid Usage Messages\nDESCRIPTION: Property definitions for error messages when SessionSynchronization interface is improperly used\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_25\n\nLANGUAGE: properties\nCODE:\n```\ncallback.sessionSynchronization.invalidUse = Session synchronization annotations and configurations in deployment plan should not be used while SessionSynchronization interface is implemented by the bean class.\ncallback.sessionSynchronization.invalidUse = Session synchronization annotations and configurations in deployment plan should not be used while SessionSynchronization interface is implemented by the bean class {0}.\n```\n\n----------------------------------------\n\nTITLE: Importing Classloader Module in Python\nDESCRIPTION: A single line Python import statement that imports the classloader module. This appears to be part of the Apache TomEE project's Python utilities.\nSOURCE: https://github.com/apache/tomee/blob/main/server/openejb-http/src/test/resources/META-INF/resources/foo.txt#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom classloader\n```\n\n----------------------------------------\n\nTITLE: Defining Interceptor Callback Validation Messages\nDESCRIPTION: Property definitions for validating interceptor callback method signatures and parameters\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_27\n\nLANGUAGE: properties\nCODE:\n```\ninterceptor.callback.badReturnType = {0} method must return \"void\"\ninterceptor.callback.badReturnType = {0} method must return \"void\": method {2} returns {3} instead\ninterceptor.callback.badReturnType = method \"{2}\" in class {0} illegally returns {3} instead of void. Change the method signature to \"void {2}(javax.ejb.InvocationContext)\"\n```\n\n----------------------------------------\n\nTITLE: Importing web2 module in Python\nDESCRIPTION: This snippet imports the 'web2' module in Python. The purpose and functionality of this import are not clear from the given context.\nSOURCE: https://github.com/apache/tomee/blob/main/server/openejb-http/src/test/web/sub/bar.txt#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom web2\n```\n\n----------------------------------------\n\nTITLE: Java Method Call for Unused Interceptor Warning\nDESCRIPTION: Method call that generates a warning when an interceptor class is not used in any bean. This helps developers identify when interceptors are defined but not correctly bound to EJBs.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_30\n\nLANGUAGE: java\nCODE:\n```\nwarn(\"Interceptors\", \"interceptor.unused\", clazz);\n```\n\n----------------------------------------\n\nTITLE: Java Method Calls for Missing Main Class Validation\nDESCRIPTION: Method calls for both warning and failure cases when a Main-Class specified in the MANIFEST.MF file does not exist in the JAR. This is crucial for application client deployments.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_36\n\nLANGUAGE: java\nCODE:\n```\nwarn(\"client.missingMainClass\", className)\nfail(\"client.missingMainClass\", className)\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for XML Local-Remote Conflict\nDESCRIPTION: Code snippet showing the fail method call for handling conflicts between local and remote interface declarations in XML configurations.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_38\n\nLANGUAGE: Java\nCODE:\n```\nfail(ejbName, \"xml.localRemote.conflict\", interfce);\n```\n\n----------------------------------------\n\nTITLE: Fail Method Call for Local Annotation Attributes\nDESCRIPTION: Code snippet showing the fail method call for handling cases where @Local annotation is used without explicit interface declarations.\nSOURCE: https://github.com/apache/tomee/blob/main/container/openejb-core/src/main/resources/org/apache/openejb/config/rules/Messages_hi_input.txt#2025-04-23_snippet_40\n\nLANGUAGE: Java\nCODE:\n```\nfail(ejbName, \"ann.local.noAttributes\", join(\", \", interfaces));\n```\n\n----------------------------------------\n\nTITLE: Running the OpenEJB3 Embedded Remoting Example\nDESCRIPTION: Command to build and run the OpenEJB3 embedded remoting example using Maven.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/telephone-stateful/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n $ mvn clean install\n```\n\n----------------------------------------\n\nTITLE: Running Grinder Console for Load Testing in Shell\nDESCRIPTION: Shell command to execute the Grinder console for load testing the application.\nSOURCE: https://github.com/apache/tomee/blob/main/examples/xa-datasource/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n./grinder.sh\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Header Comment for TomEE Project\nDESCRIPTION: Standard license header that must be included at the top of all source files in the Apache TomEE project. It specifies that the code is licensed under Apache License 2.0 and includes references to copyright ownership and usage conditions.\nSOURCE: https://github.com/apache/tomee/blob/main/server/openejb-http/src/test/web/bar.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n# \n#    http://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Parsing TomEE Web Access Log Entries\nDESCRIPTION: These log entries show HTTP GET requests to various resources on a TomEE web server. Each line includes the client IP, timestamp, HTTP method, requested resource, protocol version, and response status code.\nSOURCE: https://github.com/apache/tomee/blob/main/tomee/tomee-webaccess/src/test/resources/test/log/localhost_access_log.2014-02-07.txt#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/container.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/growl.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/growl-container.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/scripting.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/script-sample-javascript.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/script-sample-groovy.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/logfiles.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/logfile-link.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/js/templates/sessions.handlebars HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/lib/codemirror/addon/hint/show-hint.js HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/lib/codemirror/addon/hint/anyword-hint.js HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/lib/codemirror/mode/javascript/javascript.js HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/app/lib/codemirror/mode/groovy/groovy.js HTTP/1.1\" 304 -\n127.0.0.1 - tomee [07/Feb/2014:22:44:04 -0500] \"GET /webaccess/rest/log/load/localhost_access_log.2014-02-07.txt?href=localhost_access_log.2014-02-07.txt&_=1391831044293 HTTP/1.1\" 200 25569\n```"
  }
]
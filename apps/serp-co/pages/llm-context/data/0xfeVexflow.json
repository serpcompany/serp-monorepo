[
  {
    "owner": "0xfe",
    "repo": "vexflow",
    "content": "TITLE: Creating a Music Score with VexFlow EasyScore API\nDESCRIPTION: This JavaScript snippet demonstrates how to use VexFlow's EasyScore API to create a simple music score. It sets up a renderer, creates a system with two voices, and adds a clef and time signature.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst { Factory, EasyScore, System } = Vex.Flow;\n\nconst vf = new Factory({\n  renderer: { elementId: 'output', width: 500, height: 200 },\n});\n\nconst score = vf.EasyScore();\nconst system = vf.System();\n\nsystem\n  .addStave({\n    voices: [\n      score.voice(score.notes('C#5/q, B4, A4, G#4', { stem: 'up' })),\n      score.voice(score.notes('C#4/h, C#4', { stem: 'down' })),\n    ],\n  })\n  .addClef('treble')\n  .addTimeSignature('4/4');\n\nvf.draw();\n```\n\n----------------------------------------\n\nTITLE: Rendering a Stave with VexFlow Native API\nDESCRIPTION: This JavaScript code uses VexFlow's low-level API to create an SVG renderer, set up a rendering context, and draw a stave with a clef and time signature. It demonstrates more fine-grained control over the rendering process.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst { Renderer, Stave } = Vex.Flow;\n\n// Create an SVG renderer and attach it to the DIV element with id=\"output\".\nconst div = document.getElementById('output');\nconst renderer = new Renderer(div, Renderer.Backends.SVG);\n\n// Configure the rendering context.\nrenderer.resize(500, 500);\nconst context = renderer.getContext();\ncontext.setFont('Arial', 10);\n\n// Create a stave of width 400 at position 10, 40.\nconst stave = new Stave(10, 40, 400);\n\n// Add a clef and time signature.\nstave.addClef('treble').addTimeSignature('4/4');\n\n// Connect it to the rendering context and draw!\nstave.setContext(context).draw();\n```\n\n----------------------------------------\n\nTITLE: Integrating VexFlow via CDN in HTML\nDESCRIPTION: This snippet demonstrates how to quickly add VexFlow to a web page using a script tag that references the library from a CDN. It includes a placeholder for custom code implementation.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/vexflow@4.2.2/build/cjs/vexflow.js\"></script>\n<script>\n  // YOUR CODE GOES HERE\n</script>\n```\n\n----------------------------------------\n\nTITLE: Synchronous Font Setting in VexFlow All Bundle\nDESCRIPTION: Sets the music font to Bravura in the full VexFlow bundle that includes all fonts. This is a synchronous operation that immediately changes the font stack.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/fonts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nVex.Flow.setMusicFont('Bravura');\n```\n\n----------------------------------------\n\nTITLE: Async Font Loading in VexFlow Core\nDESCRIPTION: Demonstrates asynchronous font loading in vexflow-core.js where fonts must be explicitly loaded before use. Uses await to ensure font is loaded before proceeding.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/fonts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nawait Vex.Flow.setMusicFont('Petaluma');\n```\n\n----------------------------------------\n\nTITLE: Importing VexFlow in Node.js\nDESCRIPTION: Basic example of importing the VexFlow library in a Node.js application using require(). This import works because of the exports field in vexflow/package.json.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/node/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst Vex = require('vexflow')\n```\n\n----------------------------------------\n\nTITLE: Generating PDF Output with VexFlow\nDESCRIPTION: Command to run a Node.js script that creates a PDF file containing VexFlow music notation.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/node/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnode pdf.js\n```\n\n----------------------------------------\n\nTITLE: Generating HTML Output with VexFlow\nDESCRIPTION: Command to run a Node.js script that generates HTML output containing VexFlow music notation.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/node/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode canvas.js > output.html\n```\n\n----------------------------------------\n\nTITLE: Creating SVG Output with VexFlow\nDESCRIPTION: Command to run a Node.js script that generates an SVG image file containing VexFlow music notation.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/node/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode svg.js > output.svg\n```\n\n----------------------------------------\n\nTITLE: Using Custom Render Context with VexFlow\nDESCRIPTION: Command to run a Node.js script that demonstrates implementing a custom RenderContext with VexFlow.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/node/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnode customcontext.js\n```\n\n----------------------------------------\n\nTITLE: Generating SMuFL and Gonville Font Glyphs\nDESCRIPTION: Commands to generate various SMuFL-compatible font glyphs including Gonville, Bravura, and Petaluma. The scripts convert font files to TypeScript glyph definitions used by VexFlow.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/fonts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Generate Gonville glyphs\n$ ./gonville2smufl.py @/gonville/Gonville-18_20200703.otf @/gonville/GonvilleSmufl.otf\n$ node fontgen_smufl.js @/gonville/GonvilleSmufl.otf ../../src/fonts/gonville_glyphs.ts\n\n# Generate Bravura glyphs\n$ node fontgen_smufl.js @/bravura/Bravura_1.392.otf ../../src/fonts/bravura_glyphs.ts\n\n# Generate Petaluma glyphs\n$ node fontgen_smufl.js @/petaluma/Petaluma_1.065.otf ../../src/fonts/petaluma_glyphs.ts\n\n# Generate Gonville glyphs\n$ node fontgen_gonville.js @/gonville/Gonville-18_20200703.otf../../src/fonts/gonville_glyphs.ts\n```\n\n----------------------------------------\n\nTITLE: Generating Text Font Metrics\nDESCRIPTION: Command to generate text metrics from a font file (*.otf) for use with TextFormatter in VexFlow modules.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/fonts/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ node fontgen_text.js MyFont.otf myfont_glyphs.ts\n```\n\n----------------------------------------\n\nTITLE: Generating Custom Font Glyphs\nDESCRIPTION: Command to generate custom glyph definitions after adding outlines to custom_glyphs.js and codes to valid_codes.json.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/fonts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ node fontgen_custom.js ../../src/fonts/\n```\n\n----------------------------------------\n\nTITLE: Installing VexFlow via npm\nDESCRIPTION: This command installs VexFlow from npm, suitable for projects using a bundler.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install vexflow\n```\n\n----------------------------------------\n\nTITLE: Starting HTTP Server for VexFlow ES Module Demo\nDESCRIPTION: Command to start a simple HTTP server in the main VexFlow directory to serve module examples. This server will make the ES module demo accessible at http://127.0.0.1:8080/demos/modules/module.html.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/modules/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ npx http-server\n\nStarting up http-server, serving ./\nAvailable on:\n  http://127.0.0.1:8080\nHit CTRL-C to stop the server\n\n```\n\n----------------------------------------\n\nTITLE: Installing and Building VexFlow\nDESCRIPTION: Commands for installing dependencies and building the VexFlow library before running demos.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\ngrunt\n```\n\n----------------------------------------\n\nTITLE: Starting Demo Web Server\nDESCRIPTION: Command to start a local web server for viewing the demos, particularly the web worker example.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/demos/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx http-server\n```\n\n----------------------------------------\n\nTITLE: Generating Reference Images in VexFlow\nDESCRIPTION: This command generates reference images from a known good revision of VexFlow, typically the most recent npm release.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/compare/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngrunt reference\n```\n\n----------------------------------------\n\nTITLE: Building Current Branch in VexFlow\nDESCRIPTION: Commands to checkout a feature branch and build it for testing.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/compare/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout my-new-feature-branch\ngrunt\n```\n\n----------------------------------------\n\nTITLE: Generating Test Images for Comparison in VexFlow\nDESCRIPTION: Commands to generate test images for both the current branch and the reference version to enable comparison between them.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/compare/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngrunt generate:current\ngrunt generate:reference\n```\n\n----------------------------------------\n\nTITLE: Updating StaveNote Ledger Line Offset Constant in JavaScript\nDESCRIPTION: This snippet shows a breaking change in VexFlow 4.0.1 where the constant for ledger line offset in StaveNote was renamed.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nStaveNote.LEDGER_LINE_OFFSET\n```\n\n----------------------------------------\n\nTITLE: Setting Font in CanvasContext and SVGContext in JavaScript\nDESCRIPTION: This snippet demonstrates a breaking change in VexFlow 4.0.1 regarding the setFont method in CanvasContext and SVGContext. The method now requires separate arguments for weight and style.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nsetFont(...)\n```\n\n----------------------------------------\n\nTITLE: Applying Accidentals to Notes in JavaScript\nDESCRIPTION: This snippet from VexFlow 1.2.84 shows the Accidental.ApplyAccidentals() method, which now handles TimeSigNote and applies accidentals to GraceNotes.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nAccidental.ApplyAccidentals()\n```\n\n----------------------------------------\n\nTITLE: Merging BoundingBoxes in JavaScript\nDESCRIPTION: This snippet from VexFlow 1.2.84 references a fix for the BoundingBox#mergeWith method when one box contains another.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nBoundingBox#mergeWith\n```\n\n----------------------------------------\n\nTITLE: Setting Key Line for StaveNote in JavaScript\nDESCRIPTION: This snippet from VexFlow 1.2.84 mentions rebuilding noteheads after calling StaveNote#setKeyLine.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nStaveNote#setKeyLine\n```\n\n----------------------------------------\n\nTITLE: Resetting StaveNote Properties in JavaScript\nDESCRIPTION: This snippet from VexFlow 1.2.84 ensures that StaveNote.extraLeftPx and StaveNote.extraRightPx are recalculated when StaveNote#reset is called.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nStaveNote#reset\n```\n\n----------------------------------------\n\nTITLE: Defining Roboto Slab Font Face for Latin Characters in CSS\nDESCRIPTION: This CSS snippet defines the @font-face rule for the Roboto Slab font, specifically for Latin characters. It sets the font-family, style, weight, and provides URLs for woff2 and woff formats. The unicode-range is specified for Latin characters.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/fonts/@/robotoslab/README.md#2025-04-22_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\n/* latin */\n@font-face {\n  font-family: 'Roboto Slab';\n  font-style: normal;\n  font-weight: 500;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/robotoslab/v16/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSmb2RjV9Ku1Q.woff2) format('woff2'),\n    url(https://fonts.gstatic.com/s/robotoslab/v16/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSmb2RlV9Su1cai.woff) format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC,\n    U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice\nDESCRIPTION: Standard boilerplate text to be included in files to apply the Apache License 2.0. The notice includes copyright information, license reference, and conditions for use, modification, and distribution.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/tools/fonts/@/robotoslab/LICENSE.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Commit Reference for VexFlow Fork\nDESCRIPTION: The git commit hash and date marking the point where VexFlow was permanently forked to the VexFlow organization.\nSOURCE: https://github.com/0xfe/vexflow/blob/master/VEXFLOW.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncommit b16796b2138d1d8304f1aca6f0401f6c3e34c902\nDate:   Mon Jul 3 12:58:17 2023 -0700\n```"
  }
]
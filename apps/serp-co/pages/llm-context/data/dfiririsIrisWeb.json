[
  {
    "owner": "dfir-iris",
    "repo": "iris-web",
    "content": "TITLE: Installing and Running IRIS using Docker Compose\nDESCRIPTION: This bash script outlines the steps to clone the IRIS repository, set up the environment, and run the application using Docker Compose.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#  Clone the iris-web repository\ngit clone https://github.com/dfir-iris/iris-web.git\ncd iris-web\n\n# Checkout to the last tagged version \ngit checkout v2.4.20\n# Copy the environment file \ncp .env.model .env\n\n# Pull the dockers\ndocker compose pull\n\n# Run IRIS \ndocker compose up\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for DFIR-IRIS Web Application\nDESCRIPTION: This snippet lists the required Python packages and their versions for the DFIR-IRIS web application. It includes core web framework components, database libraries, authentication modules, and various utility packages.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/source/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nazure-identity==1.10.0\nazure-keyvault-secrets==4.5.1\ncelery==5.4.0\nFlask==3.1.0\nFlask-Bcrypt==1.0.1\nFlask-Login==0.6.3\nFlask-SQLAlchemy==3.1.1\nFlask-WTF==1.2.2\nflask-marshmallow==1.2.1\nFlask-Caching==2.3.0\nflask-cors==5.0.0\nmarshmallow==3.23.1\nmarshmallow-sqlalchemy==1.1.0\ngunicorn==23.0.0\npsycopg2-binary==2.9.10\npyunpack==0.2.2\npackaging==21.3\nrequests==2.31.0\nSQLAlchemy==2.0.36\nSQLAlchemy-ImageAttach==1.1.0\nSQLAlchemy-Utils==0.41.2\nurllib3==1.26.18\nWerkzeug==3.1.3\nWTForms==3.2.1\nFlask-SocketIO==5.4.1\nalembic==1.7.5\nsetuptools~=70.3.0\npython-dateutil==2.8.2\npython-gnupg==0.4.8\npyminizip~=0.2.6\nPyJWT==2.4.0\ncryptography>=39.0.1\nldap3==2.9.1\npyintelowl>=4.4.0\npyotp==2.9.0\ngraphene==3.3\nqrcode[pil]==7.4.2\ndictdiffer==0.2.0\noic==1.7.0\n# unfortunately we are relying on a beta version here. I hope a definitive version gets released soon\ngraphql-server[flask]==3.0.0b7\ngraphene-sqlalchemy==3.0.0rc1\n```\n\n----------------------------------------\n\nTITLE: Installing Iris Web Chart with Helm\nDESCRIPTION: Helm command to install the Iris Web chart with a specified release name and values file in a given namespace.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm install my-release charts/ --values charts/values.yaml  -n <Name_Space>\n```\n\n----------------------------------------\n\nTITLE: Installing Iris with Make\nDESCRIPTION: Make command to install or upgrade Iris application using Helm.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake install-iris\n```\n\n----------------------------------------\n\nTITLE: Building and Watching IRIS UI for Development\nDESCRIPTION: This command builds the IRIS application and automatically rebuilds it when changes are detected. It's useful for active development work.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run watch\n```\n\n----------------------------------------\n\nTITLE: Building IRIS UI for Production\nDESCRIPTION: This command builds the IRIS application for production deployment. It creates optimized and minified assets ready for serving.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Cloning and Building Docker Images for Iris-Web on AWS EKS\nDESCRIPTION: Commands to clone the Iris-web repository and build Docker images for the web application and database. These images need to be pushed to AWS ECR for deployment.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/eks_manifest/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#  Clone the iris-web repository\n$ git clone https://github.com/dfir-iris/iris-web.git\n$ cd iris-web\n\n# Build the dockers (Build webApp and db docker images, skip the nginx because we using AWS ALB instead of nginx)\n# app & woker:\n$ docker build -t webapp:latest -f docker/webApp/Dockerfile .\n# DB:\n$ docker build -t db:latest -f docker/db/Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Deploying Iris-Web to AWS EKS using Makefile\nDESCRIPTION: Commands to deploy and delete the Iris-Web application on AWS EKS using the provided Makefile. The make create command deploys the application while make delete removes everything except the database.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/eks_manifest/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ make\n$ make create\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for IRIS UI Development\nDESCRIPTION: This command installs the necessary dependencies for developing the IRIS UI. It should be run before starting development work.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting IRIS UI Source Files\nDESCRIPTION: This command runs the linter on the source files of the IRIS UI. It helps maintain code quality and consistency across the project.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Auditing IRIS UI Packages for Vulnerabilities\nDESCRIPTION: This command checks for any known vulnerabilities in the packages used by the IRIS UI. It's an important step in maintaining the security of the application.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm audit\n```\n\n----------------------------------------\n\nTITLE: Adding DFIR-IRIS License Header to New Files\nDESCRIPTION: License header template to be added to new files in the DFIR-IRIS project, with ${current_year} to be replaced by the current year.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n#  IRIS Source Code\n#  Copyright (C) ${current_year} - DFIR-IRIS\n#  contact@dfir-iris.org\n#\n#  This program is free software; you can redistribute it and/or\n#  modify it under the terms of the GNU Lesser General Public\n#  License as published by the Free Software Foundation; either\n#  version 3 of the License, or (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n#  Lesser General Public License for more details.\n#\n#  You should have received a copy of the GNU Lesser General Public License\n#  along with this program; if not, write to the Free Software Foundation,\n#  Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n```\n\n----------------------------------------\n\nTITLE: Creating Alembic Migration Script for DFIR-IRIS Database Changes\nDESCRIPTION: Command to create a new Alembic migration script for database changes in DFIR-IRIS.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nalembic -c app/alembic.ini revision -m <What's changed>\n```\n\n----------------------------------------\n\nTITLE: Running All Tests for IRIS Web\nDESCRIPTION: Executes all unit tests with verbose output using Python's unittest module.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/tests/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython -m unittest --verbose\n```\n\n----------------------------------------\n\nTITLE: Running a Specific IRIS Web Test Case\nDESCRIPTION: Executes a single test case by specifying its fully qualified name with the unittest module.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/tests/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython -m unittest tests_rest.TestsRest.test_create_asset_should_not_fail\n```\n\n----------------------------------------\n\nTITLE: Checking for Outdated Packages in IRIS UI\nDESCRIPTION: This command lists any outdated packages in the IRIS UI project. It's useful for maintaining up-to-date dependencies.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm outdated\n```\n\n----------------------------------------\n\nTITLE: Listing Custom Wheel Files for DFIR-IRIS Modules\nDESCRIPTION: This snippet enumerates custom wheel files located in the 'dependencies' directory. These files represent DFIR-IRIS-specific modules and integrations, including document generation, EVTX parsing, and various analysis modules.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/source/requirements.txt#2025-04-23_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\ndependencies/docx_generator-0.8.0-py3-none-any.whl\ndependencies/iris_interface-1.2.0-py3-none-any.whl\ndependencies/evtx2splunk-2.0.1-py3-none-any.whl\ndependencies/iris_evtx-1.2.0-py3-none-any.whl\ndependencies/iris_check_module-1.0.1-py3-none-any.whl\ndependencies/iris_vt_module-1.2.1-py3-none-any.whl\ndependencies/iris_misp_module-1.3.0-py3-none-any.whl\ndependencies/iris_webhooks_module-1.0.8-py3-none-any.whl\ndependencies/iris_intelowl_module-0.1.0-py3-none-any.whl\ndependencies/iris_seika_module-1.0.0-py3-none-any.whl\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Requests Package Version Constraint\nDESCRIPTION: Defines a version constraint for the Python requests package, requiring version 2.31.0 or newer, but less than 3.0.0. This ensures compatibility with the current application while preventing breaking changes from major version updates.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/tests/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nrequests >= 2.31.0, < 3.0.0\n```\n\n----------------------------------------\n\nTITLE: Correct Python Import Style in DFIR-IRIS\nDESCRIPTION: Proper way to import multiple items in DFIR-IRIS Python code, with one import per line.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom app import app\nfrom app import db\n```\n\n----------------------------------------\n\nTITLE: Installing Nginx Ingress Controller with Helm\nDESCRIPTION: Commands to add the Nginx ingress controller Helm repository and install it in a specified namespace.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm install my-release ingress-nginx/ingress-nginx -n <Name_Space>\n```\n\n----------------------------------------\n\nTITLE: Checking Dependencies with Make\nDESCRIPTION: Make command to check if Helm and kubectl are installed, with automatic installation if missing.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake check-dependencies\n```\n\n----------------------------------------\n\nTITLE: Deleting Iris with Make\nDESCRIPTION: Make command to delete the Iris application using Helm from the specified namespace.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmake delete-iris\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Iris Web Chart with Helm\nDESCRIPTION: Helm command to uninstall and delete the Iris Web deployment from a specified namespace.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm delete my-release -n <Name_Space>\n```\n\n----------------------------------------\n\nTITLE: Listing Ingress Resources in Kubernetes\nDESCRIPTION: Kubectl command to list Ingress resources in a specified namespace.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get ingress -n <Name_Space>\n```\n\n----------------------------------------\n\nTITLE: Displaying Chart Information in Helm Template\nDESCRIPTION: Outputs basic information about the Helm chart including release name, chart name, version, and description.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/charts/templates/NOTES.txt#2025-04-23_snippet_0\n\nLANGUAGE: helm\nCODE:\n```\nRelease Name: {{ .Release.Name }}\nChart Name: {{ .Chart.Name }}\nChart Version: {{ .Chart.Version }}\nChart Description: {{ .Chart.Description }}\n```\n\n----------------------------------------\n\nTITLE: Conditional Ingress Resource Display in Helm Template\nDESCRIPTION: Shows information about deployed Ingress resources when ingress is enabled, including name, host, path, service name and port.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/charts/templates/NOTES.txt#2025-04-23_snippet_1\n\nLANGUAGE: helm\nCODE:\n```\n{{- if .Values.ingress.enabled }}\nIngress:\n- Name: {{ .Release.Name }}-ingress\n  Host: {{ index .Values.ingress.hosts 0 \"host\" }}\n  Path: {{ index .Values.ingress.hosts 0 \"paths\" 0 \"path\" }}\n  Service Name: {{ index .Values.ingress.hosts 0 \"paths\" 0 \"serviceName\" }}\n  Service Port: {{ index .Values.ingress.hosts 0 \"paths\" 0 \"servicePort\" }}\n{{- end }}\n```\n\n----------------------------------------\n\nTITLE: Conditional Application Access Instructions in Helm Template\nDESCRIPTION: Provides instructions for accessing the application based on whether ingress is enabled, including the domain URL if DNS is configured.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/charts/templates/NOTES.txt#2025-04-23_snippet_2\n\nLANGUAGE: helm\nCODE:\n```\n{{- if eq .Values.ingress.enabled true }}\nTo access your application, ensure that the necessary configurations are set up in your cluster.\n\n- If you have DNS set up:\n  - Access your application using the configured domain: http://{{ index .Values.ingress.hosts 0 \"host\" }}\n{{- else }}\nNo Ingress resources deployed.\n{{- end }}\n```\n\n----------------------------------------\n\nTITLE: Service Information Display in Helm Template\nDESCRIPTION: Shows information about the application service including service name and port, using variables from the values file.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/charts/templates/NOTES.txt#2025-04-23_snippet_3\n\nLANGUAGE: helm\nCODE:\n```\nEnsure that your application service ({{ index .Values.ingress.hosts 0 \"paths\" 0 \"serviceName\" }}) is up and running on port {{ index .Values.ingress.hosts 0 \"paths\" 0 \"servicePort\" }}.\n```\n\n----------------------------------------\n\nTITLE: Creating Git Feature Branch for DFIR-IRIS Development\nDESCRIPTION: Commands for creating and pushing a new feature branch from the develop branch in the DFIR-IRIS git repository.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit switch develop\ngit switch -c <branch-name>\ngit push --set-upstream origin <branch-name>\n```\n\n----------------------------------------\n\nTITLE: Rebasing DFIR-IRIS Feature Branch\nDESCRIPTION: Commands for rebasing a feature branch against the latest develop branch in the DFIR-IRIS git repository.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit switch -c <branch-name>\ngit rebase origin/develop\n```\n\n----------------------------------------\n\nTITLE: Setting up Python Virtual Environment for IRIS Web Testing\nDESCRIPTION: Creates a Python virtual environment, activates it, and installs required dependencies from requirements.txt.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/tests/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Activating Python Virtual Environment\nDESCRIPTION: Activates the previously created Python virtual environment before running tests.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/tests/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsource ./venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Installing Production Dependencies for IRIS UI\nDESCRIPTION: This command installs only the production dependencies for the IRIS UI. It's typically used in production environments or CI/CD pipelines.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/ui/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm ci\n```\n\n----------------------------------------\n\nTITLE: Deleting Iris-Web Deployment from AWS EKS\nDESCRIPTION: Commands to delete the Iris-Web application deployment from AWS EKS using the provided Makefile. This will remove all components except the database.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/eks_manifest/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ make\n$ make delete\n```\n\n----------------------------------------\n\nTITLE: Retrieving Admin Credentials for Iris-Web on AWS EKS\nDESCRIPTION: Commands to retrieve the administrator username and password from the Iris-Web application pod logs after deployment on AWS EKS. The credentials are displayed at the end of the pod logs.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/eks_manifest/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod -n iris-web\n# Copy the pod name and give it on the below command (pod name looks like \"pod/iris-app-deployment-🎲\")\n$ kubectl logs <pod_name> -n iris-web\n# You can see the credential at the end of the logs\n```\n\n----------------------------------------\n\nTITLE: Cloning Iris Web Repository\nDESCRIPTION: Git command to clone the Iris Web repository from GitHub.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/deploy/kubernetes/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/dfir-iris/iris-web.git\n```\n\n----------------------------------------\n\nTITLE: Incorrect Python Shebang Usage in DFIR-IRIS\nDESCRIPTION: Example of a shebang that should not be used in DFIR-IRIS Python files.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n#!/usr/bin/env python3\n```\n\n----------------------------------------\n\nTITLE: Incorrect Python Import Style in DFIR-IRIS\nDESCRIPTION: Example of multiple imports on a single line, which should be avoided in DFIR-IRIS Python code.\nSOURCE: https://github.com/dfir-iris/iris-web/blob/master/CODESTYLE.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom app import app, db\n```"
  }
]
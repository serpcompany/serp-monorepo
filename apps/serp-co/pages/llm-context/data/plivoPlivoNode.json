[
  {
    "owner": "plivo",
    "repo": "plivo-node",
    "content": "TITLE: Initializing Plivo Client with Direct Credentials\nDESCRIPTION: Initialize the Plivo client by directly providing authentication credentials.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nlet client = new plivo.Client('<auth_id>', '<auth_token>');\n```\n\n----------------------------------------\n\nTITLE: Initializing Plivo Client with Environment Variables\nDESCRIPTION: Initialize the Plivo client using authentication credentials stored in environment variables PLIVO_AUTH_ID and PLIVO_AUTH_TOKEN.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nlet client = new plivo.Client();\n```\n\n----------------------------------------\n\nTITLE: Sending SMS Message\nDESCRIPTION: Example of sending an SMS message using the Plivo client with source number, destination number, and message text.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nlet client = new plivo.Client();\n\nclient.messages.create({\n    src: '+14156667778',\n    dst: '14156667777',\n    text: 'Hello, this is a sample text from Plivo',\n}).then(function(response) {\n    console.log(response)\n});\n```\n\n----------------------------------------\n\nTITLE: Making Voice Call\nDESCRIPTION: Example of initiating a voice call using Plivo with source number, destination number, and answer URL.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nlet client = new plivo.Client();\n\nclient.calls.create(\n  '+14156667778',\n  '+14156667777',\n  'http://answer.url'\n).then(function(response) {\n  console.log(response)\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Resource Operations Pattern\nDESCRIPTION: Standard pattern for CRUD operations on Plivo resources including create, get, update, delete and list operations.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclient.resources.create(name,params); // Create\nclient.resources.get(id); // Get\nclient.resources.update(params); // Update\nclient.resources.delete(id); // Delete\nclient.resources.list({limit:5,offset:0}); // List all resources, max 20 at a time\n```\n\n----------------------------------------\n\nTITLE: Generating Plivo XML Response\nDESCRIPTION: Generate Plivo XML markup for voice applications using the XML generator.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nlet response = new plivo.Response();\nlet speak_body = \"Hello, world!\";\n\nresponse.addSpeak(speak_body);\nconsole.log(response.toXML());\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Response>\n  <Speak>Hello, world!</Speak>\n</Response>\n```\n\n----------------------------------------\n\nTITLE: Sending Interactive CTA URL Message with Plivo Node SDK\nDESCRIPTION: This snippet shows how to send an interactive CTA URL message using the Plivo Node SDK. It includes creating the interactive CTA URL structure and sending the message.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\n\nvar client = new plivo.Client(\"<auth_id>\",\"<auth_token>\");\n\nconst interactive = {\n        \"type\": \"cta_url\",\n        \"header\": {\n            \"type\": \"media\",\n            \"media\": \"https://xyz.com/s3/img.jpg\"\n        },\n        \"body\": {\n            \"text\": \"Know More\"\n        },\n        \"footer\": {\n            \"text\": \"Plivo\"\n        },\n        \"action\": {\n            \"buttons\": [\n                {\n                    \"title\": \"Click here\",\n                    \"cta_url\": \"https:plivo.com\"\n                }\n            ]\n        }\n    }\n\nclient.messages.create({\n  src:\"+14156667778\",\n  dst:\"+14156667777\",\n  type:\"whatsapp\",\n  interactive:interactive\n}).then(function (response) {\n  console.log(response);\n});\n```\n\n----------------------------------------\n\nTITLE: Sending Interactive List Message with Plivo Node SDK\nDESCRIPTION: This snippet demonstrates how to send an interactive list message using the Plivo Node SDK. It includes setting up the client, creating the interactive list structure, and sending the message.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\n\nvar client = new plivo.Client(\"<auth_id>\",\"<auth_token>\");\n\nconst interactive = {\n        \"type\": \"list\",\n        \"header\": {\n            \"type\": \"text\",\n            \"text\": \"Welcome to Plivo\"\n        },\n        \"body\": {\n            \"text\": \"You can review the list of rewards we offer\"\n        },\n        \"footer\": {\n            \"text\": \"Yours Truly\"\n        },\n        \"action\": {\n            \"buttons\": [{\n                \"title\": \"Click here\"\n            }],\n            \"sections\": [\n                {\n                    \"title\": \"SECTION_1_TITLE\",\n                    \"rows\": [\n                        {\n                            \"id\": \"SECTION_1_ROW_1_ID\",\n                            \"title\": \"SECTION_1_ROW_1_TITLE\",\n                            \"description\": \"SECTION_1_ROW_1_DESCRIPTION\"\n                        },\n                        {\n                            \"id\": \"SECTION_1_ROW_2_ID\",\n                            \"title\": \"SECTION_1_ROW_2_TITLE\",\n                            \"description\": \"SECTION_1_ROW_2_DESCRIPTION\"\n                        }\n                    ]\n                },\n                {\n                    \"title\": \"SECTION_2_TITLE\",\n                    \"rows\": [\n                        {\n                            \"id\": \"SECTION_2_ROW_1_ID\",\n                            \"title\": \"SECTION_2_ROW_1_TITLE\",\n                            \"description\": \"SECTION_2_ROW_1_DESCRIPTION\"\n                        },\n                        {\n                            \"id\": \"SECTION_2_ROW_2_ID\",\n                            \"title\": \"SECTION_2_ROW_2_TITLE\",\n                            \"description\": \"SECTION_2_ROW_2_DESCRIPTION\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n\nclient.messages.create({\n  src:\"+14156667778\",\n  dst:\"+14156667777\",\n  type:\"whatsapp\",\n  interactive:interactive\n}).then(function (response) {\n  console.log(response);\n});\n```\n\n----------------------------------------\n\nTITLE: Number Lookup\nDESCRIPTION: Perform a lookup operation on a phone number to retrieve its information.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nlet client = new plivo.Client('<auth_id>', '<auth_token>');\n\nclient.lookup.get('<number-goes-here>')\n.then(function(response) {\n    console.log(response);\n});\n```\n\n----------------------------------------\n\nTITLE: Sending Templated Location Message with Plivo Node SDK\nDESCRIPTION: This snippet demonstrates how to send a templated location message using the Plivo Node SDK. It includes creating the template with location parameters and sending the message.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\n\nvar client = new plivo.Client(\"<auth_id>\",\"<auth_token>\");\n\nconst template = {\n        \"name\": \"plivo_order_pickup\",\n        \"language\": \"en_US\",\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"location\",\n                        \"location\": {\n                            \"longitude\": \"122.148981\",\n                            \"latitude\": \"37.483307\",\n                            \"name\": \"Pablo Morales\",\n                            \"address\": \"1 Hacker Way, Menlo Park, CA 94025\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n\nclient.messages.create({\n  src:\"+14156667778\",\n  dst:\"+14156667777\",\n  type:\"whatsapp\",\n  template:template\n}).then(function (response) {\n  console.log(response);\n});\n```\n\n----------------------------------------\n\nTITLE: Sending Non-Templated Location Message with Plivo Node SDK\nDESCRIPTION: This snippet shows how to send a non-templated location message using the Plivo Node SDK. It includes creating the location object and sending the message.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\n\nvar client = new plivo.Client(\"<auth_id>\",\"<auth_token>\");\n\nconst location = {\n        \"longitude\": \"122.148981\",\n        \"latitude\": \"37.483307\",\n        \"name\": \"Pablo Morales\",\n        \"address\": \"1 Hacker Way, Menlo Park, CA 94025\"\n    }\n\nclient.messages.create({\n  src:\"+14156667778\",\n  dst:\"+14156667777\",\n  type:\"whatsapp\",\n  location:location\n}).then(function (response) {\n  console.log(response);\n});\n```\n\n----------------------------------------\n\nTITLE: Running PHLO (Plivo High Level Objects)\nDESCRIPTION: Execute a PHLO workflow using the PhloClient with authentication credentials.\nSOURCE: https://github.com/plivo/plivo-node/blob/master/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nlet plivo = require('plivo');\nvar PhloClient = plivo.PhloClient;\nvar phloClient = phlo = null;\n\nphloClient = new PhloClient('<auth-id>', '<auth-token>');\nphloClient.phlo('<phlo_id>').run().then(function (result) {\nconsole.log('Phlo run result', result);\n});\n```"
  }
]
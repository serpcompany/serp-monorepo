[
  {
    "owner": "oslo-project",
    "repo": "asn1",
    "content": "TITLE: Defining ASN1Encodable Interface in TypeScript\nDESCRIPTION: Defines an interface for ASN.1 encodable objects with class, form, and tag properties, plus a contents method that returns encoded data. References external ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Encodable.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface ASN1Encodable {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\n\tcontents(): Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Encoding ASN.1 Data to DER Format in TypeScript\nDESCRIPTION: Function definition for encoding ASN1Encodable values into DER-encoded Uint8Array format. Takes an ASN1Encodable value as input and returns the encoded data as a Uint8Array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/encodeASN1.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction encodeASN1(value: ASN1Encodable): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Parsing ASN.1 DER in TypeScript\nDESCRIPTION: Demonstrates how to parse ASN.1 DER encoded data and validate an Object Identifier (OID). The example shows how to extract and check if an OID matches the expected value '1.2.840.10045.4.3.2'.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseASN1NoLeftoverBytes } from \"@oslojs/asn1\";\n\nconst parsed = parseASN1NoLeftoverBytes(encoded);\nconst oid = parsed.sequence().at(0).objectIdentifier();\nif (!oid.is(\"1.2.840.10045.4.3.2\")) {\n\tthrow new Error(\"Invalid OID\");\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing ASN.1 Data in TypeScript\nDESCRIPTION: This function parses ASN.1-encoded data and returns an ASN1Value object along with the number of bytes decoded. It may throw ASN1ParseError if the data is invalid, and the implementation might accept BER-valid but DER-invalid values.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/parseASN1.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Value=/reference/main/ASN1Value\nfunction parseASN1(data: Uint8Array): [data: $$ASN1Value, size: number];\n```\n\n----------------------------------------\n\nTITLE: Parsing ASN.1 Data with TypeScript\nDESCRIPTION: Demonstrates how to parse ASN.1 encoded data and validate an Object Identifier (OID). The code shows error handling for invalid OIDs and uses type-safe parsing methods.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/README.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseASN1NoLeftoverBytes } from \"@oslojs/asn1\";\n\nconst parsed = parseASN1NoLeftoverBytes(encoded);\nconst oid = parsed.sequence().at(0).objectIdentifier();\nif (!oid.is(\"1.2.840.10045.4.3.2\")) {\n\tthrow new Error(\"Invalid OID\");\n}\n```\n\n----------------------------------------\n\nTITLE: ASN1Value Constructor Definition\nDESCRIPTION: Constructor for creating ASN1Value instances with class, form, tag and contents parameters\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(\n\tasn1Class: $$ASN1Class,\n\tform: $$ASN1Form,\n\ttag: number,\n\tcontents: Uint8Array\n): this;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Class Enumeration in TypeScript\nDESCRIPTION: Defines an enumeration for ASN.1 tag classes which categorize data elements in ASN.1 notation. The enumeration includes the four standard ASN.1 classes: Universal (for common data types), Application (for application-specific types), ContextSpecific (for context-dependent types), and Private (for privately defined types).\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Class.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ASN1Class {\n\tUniversal,\n\tApplication,\n\tContextSpecific,\n\tPrivate\n}\n```\n\n----------------------------------------\n\nTITLE: ASN1Value Usage Example\nDESCRIPTION: Example showing how to create and use ASN1Value to work with sequences and object identifiers\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/index.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sequence = new ASN1Value(ASN1Class.Universal, ASN1Form.Constructed, 16, contents).sequence();\nconst oid = sequence.at(0).objectIdentifier();\n```\n\n----------------------------------------\n\nTITLE: Encoding Object Identifiers in TypeScript for ASN.1\nDESCRIPTION: This function encodes an object identifier (OID) string into a Uint8Array. It takes a string representation of an OID as input and returns the encoded binary format as a Uint8Array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/encodeObjectIdentifier.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction encodeObjectIdentifier(oid: string): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Comparing ASN.1 Object Identifiers with string OIDs in TypeScript\nDESCRIPTION: This method compares an encoded ASN.1 Object Identifier with an unencoded string representation of an OID. It returns a boolean indicating whether they represent the same Object Identifier.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1ObjectIdentifier/is.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction is(oid: string): boolean;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Form Enumeration in TypeScript\nDESCRIPTION: TypeScript enumeration defining the two possible ASN.1 encoding forms: Primitive and Constructed. This enum is used to specify how ASN.1 data is encoded, where Primitive indicates a simple value and Constructed indicates a structure containing other ASN.1 values.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Form.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ASN1Form {\n\tPrimitive,\n\tConstructed\n}\n```\n\n----------------------------------------\n\nTITLE: Defining parseASN1NoLeftoverBytes Function in TypeScript\nDESCRIPTION: Function definition for parseASN1NoLeftoverBytes that parses ASN.1-encoded data into an ASN1Value object. Unlike the regular parseASN1 function, this throws an ASN1LeftoverBytesError if there are any leftover bytes after parsing.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/parseASN1NoLeftoverBytes.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction parseASN1NoLeftoverBytes(data: Uint8Array): $$ASN1Value;\n```\n\n----------------------------------------\n\nTITLE: Constructor for ASN1Sequence in TypeScript\nDESCRIPTION: Defines the constructor for ASN1Sequence class that takes an array of ASN1Value elements as input.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Sequence/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Value=/reference/main/ASN1Value\nfunction constructor(elements: $$ASN1Value[]): this;\n```\n\n----------------------------------------\n\nTITLE: ASN1Set Constructor Definition in TypeScript\nDESCRIPTION: Defines the constructor for the ASN1Set class that takes an array of ASN1Value elements as input.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Set/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Value=/reference/main/ASN1Value\nfunction constructor(elements: $$ASN1Value[]): this;\n```\n\n----------------------------------------\n\nTITLE: Constructing an ASN1Integer in TypeScript\nDESCRIPTION: Constructor for creating an ASN1Integer instance with a bigint value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Integer/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: bigint): this;\n```\n\n----------------------------------------\n\nTITLE: ASN1BitString Constructor Definition in TypeScript\nDESCRIPTION: Defines the constructor for the ASN1BitString class that takes bytes and length parameters to create a bit string representation.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1BitString/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(bytes: Uint8Array, length: number): this;\n```\n\n----------------------------------------\n\nTITLE: Installing @oslojs/asn1 package\nDESCRIPTION: Shows the npm command to install the @oslojs/asn1 package in a project.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/index.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @oslojs/asn1\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN.1 Object Identifier in TypeScript\nDESCRIPTION: Function definition for the objectIdentifier() method that decodes encoded content into an ASN1ObjectIdentifier. The method throws an ASN1DecodeError if the value is not a properly formatted object identifier.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/objectIdentifier.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1ObjectIdentifier=/reference/main/ASN1ObjectIdentifier\nfunction objectIdentifier(): $$ASN1ObjectIdentifier;\n```\n\n----------------------------------------\n\nTITLE: Constructor for ASN1UTF8String in TypeScript\nDESCRIPTION: Defines the constructor for creating an ASN1UTF8String instance with a Uint8Array value parameter.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTF8String/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: Uint8Array): this;\n```\n\n----------------------------------------\n\nTITLE: Example Usage of ASN1EncodableSequence with ASN1Integer in TypeScript\nDESCRIPTION: Example demonstrating how to create an ASN1EncodableSequence containing multiple ASN1Integer values. It shows the typical usage pattern for representing a sequence of integers in ASN.1 format.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSequence/index.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ASN1EncodableSequence, ASN1Integer } from \"@oslojs/asn1\";\n\nconst sequence = new ASN1EncodableSequence([\n\tnew ASN1Integer(1n),\n\tnew ASN1Integer(10n),\n\tnew ASN1Integer(100n)\n]);\n```\n\n----------------------------------------\n\nTITLE: Constructing ASN1GeneralizedTime in TypeScript\nDESCRIPTION: Constructor for creating an ASN1GeneralizedTime object. It takes year, month, date, hours, minutes, seconds, and milliseconds as parameters. Note that the month parameter is one-based, unlike JavaScript's Date object.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1GeneralizedTime/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(\n\tyear: number,\n\tmonth: number,\n\tdate: number,\n\thours: number,\n\tminutes: number,\n\tseconds: number,\n\tmilliseconds: number\n): this;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.sequence() Method in TypeScript\nDESCRIPTION: This code snippet defines the sequence() method of the ASN1Value class. It returns an ASN1Sequence object and may throw an ASN1DecodeError if the value is not a valid sequence.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/sequence.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction sequence(): ASN1Sequence;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.set() Method in TypeScript\nDESCRIPTION: Function signature for the set() method of ASN1Value class that decodes the encoded contents as an ASN.1 SET and returns an ASN1Set object. The method throws an ASN1DecodeError if the value is not a valid SET.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/set.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Set=/reference/main/ASN1Set\nfunction set(): $$ASN1Set;\n```\n\n----------------------------------------\n\nTITLE: Converting ASN1Value to BitString in TypeScript\nDESCRIPTION: Function definition for converting an ASN1Value to a bit string representation. Throws ASN1DecodeError if the value cannot be converted to a bit string format.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/bitString.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction bitString(): ASN1BitString;\n```\n\n----------------------------------------\n\nTITLE: Defining the ASN1Value.boolean() Method in TypeScript\nDESCRIPTION: Function signature for the ASN1Value.boolean() method that decodes encoded ASN.1 data into a boolean value. This method throws an ASN1DecodeError if the value is not a valid boolean.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/boolean.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Boolean=/reference/main/ASN1Boolean\nfunction boolean(): $$ASN1Boolean;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN.1 Enumerated Value in TypeScript\nDESCRIPTION: TypeScript definition for the enumerated() method of ASN1Value class. This method decodes the ASN.1 encoded content as an enumerated value and returns an ASN1Enumerated object. It throws an ASN1DecodeError if the value is not a valid enumerated value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/enumerated.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Enumerated=/reference/main/ASN1Enumerated\nfunction enumerated(): $$ASN1Enumerated;\n```\n\n----------------------------------------\n\nTITLE: Defining isSetOfSingleType Method for ASN1Set in TypeScript\nDESCRIPTION: This function checks if an ASN.1 set contains only values of a single type. It takes parameters for the ASN.1 class, type, and tag. The method returns a boolean indicating whether the set is of a single type.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Set/isSetOfSingleType.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction isSetOfSingleType(asn1Class: ASN1Class, type: ASN1Form, tag: number): boolean;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.null() Method in TypeScript\nDESCRIPTION: Function definition for the null() method that returns an ASN1Null type. This method throws an ASN1DecodeError if the value is not null.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/null.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction null(): $$ASN1Null\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN.1 Real Values in TypeScript\nDESCRIPTION: Function declaration for decoding ASN.1 encoded real values. Returns an ASN1Real type and throws ASN1DecodeError if the value is not a valid real number.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/real.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction real(): ASN1Real;\n```\n\n----------------------------------------\n\nTITLE: Converting ASN.1 GeneralizedTime to Date in TypeScript\nDESCRIPTION: TypeScript method definition for converting an ASN.1 GeneralizedTime value to a JavaScript Date object. The method takes no parameters and returns a Date instance.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1GeneralizedTime/toDate.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction toDate(): Date;\n```\n\n----------------------------------------\n\nTITLE: Converting ASN.1 UTCTime to Date in TypeScript\nDESCRIPTION: TypeScript function definition for converting an ASN.1 UTCTime value to a JavaScript Date object. Takes a century parameter (e.g. 20 for years 20xx) to properly interpret two-digit years.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTCTime/toDate.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction toDate(century: number): Date;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN.1 Generalized Time in TypeScript\nDESCRIPTION: Method definition for decoding ASN.1 generalized time values. Returns an ASN1GeneralizedTime object and throws ASN1DecodeError if the value is not a valid generalized time format.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/generalizedTime.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction generalizedTime(): $$ASN1GeneralizedTime;\n```\n\n----------------------------------------\n\nTITLE: Constructor for ASN1ObjectIdentifier in TypeScript\nDESCRIPTION: Defines the constructor for ASN1ObjectIdentifier that takes an encoded object identifier as a Uint8Array parameter.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1ObjectIdentifier/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(encoded: Uint8Array): this;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN1 Integer Value in TypeScript\nDESCRIPTION: This function decodes the encoded contents of an ASN1Value and returns an integer. It throws an ASN1DecodeError if the value is not an integer boolean.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/integer.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction integer(): ASN1Integer;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN.1 Octet String in TypeScript\nDESCRIPTION: Function declaration for decoding ASN.1 octet string values. Returns an ASN1OctetString type and throws ASN1DecodeError if the value is not a valid octet string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/octetString.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1OctetString=/reference/main/ASN1OctetString\nfunction octetString(): $$ASN1OctetString;\n```\n\n----------------------------------------\n\nTITLE: Validating ASN.1 Sequence Type Uniformity in TypeScript\nDESCRIPTION: Method signature for checking if all elements in an ASN.1 sequence are of the same specified type. Takes parameters for ASN1Class, ASN1Form type definition, and a numeric tag value to perform the validation. Returns a boolean indicating whether all sequence elements match the specified type.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Sequence/isSequenceOfSingleType.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction isSequenceOfSingleType(asn1Class: ASN1Class, type: ASN1Form, tag: number): boolean;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.utf8String() Method in TypeScript\nDESCRIPTION: This snippet defines the utf8String() method for the ASN1Value class. It decodes the encoded contents and returns an ASN1UTF8String. The method throws an ASN1DecodeError if the value is not a valid UTF-8 string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/utf8String.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction utf8String(): ASN1UTF8String;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1EncodableSequence Constructor in TypeScript\nDESCRIPTION: Constructor function for ASN1EncodableSequence that accepts an array of ASN1Encodable elements. This constructor initializes a new ASN.1 sequence with the provided elements.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSequence/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Encodable=/reference/main/ASN1Value\nfunction constructor(elements: $$ASN1Encodable[]): this;\n```\n\n----------------------------------------\n\nTITLE: Decoding UTC Time in ASN.1 - TypeScript Definition\nDESCRIPTION: Function definition for decoding ASN.1 UTC time values. Returns an ASN1UTCTime type and throws ASN1DecodeError if the value is not a valid UTC time.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/utcTime.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction utcTime(): $$ASN1UTCTime;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.ia5String() Method in TypeScript\nDESCRIPTION: A TypeScript function definition for the ia5String() method of the ASN1Value class. This method decodes ASN.1 encoded content and returns an ASN1IA5String object. It throws an ASN1DecodeError if the value is not a valid IA5 string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/ia5String.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1IA5String=/reference/main/ASN1IA5String\nfunction ia5String(): $$ASN1IA5String;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1EncodeError Class in TypeScript\nDESCRIPTION: This code snippet defines the ASN1EncodeError class that extends the Error class. It is used to represent errors that occur during ASN.1 encoding operations.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodeError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass ASN1EncodeError extends Error {\n    // Class implementation details would go here\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing ASN1OctetString in TypeScript\nDESCRIPTION: Constructor for the ASN1OctetString class. It takes a Uint8Array as a parameter to initialize the octet string value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1OctetString/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: Uint8Array): this;\n```\n\n----------------------------------------\n\nTITLE: Accessing ASN.1 Values by Index in TypeScript\nDESCRIPTION: Method definition for retrieving an ASN.1 value at a specified index from a sequence. Throws an error if the index exceeds the sequence length.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Sequence/at.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction at(index: number): $$ASN1Value;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Real Type in TypeScript\nDESCRIPTION: Defines the ASN1Real type as a union of four different representations for ASN.1 real values: zero value, special real values, decimal encoding, and binary encoding.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Real.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1RealZero=/reference/main/ASN1RealZero\n//$ ASN1SpecialReal=/reference/main/ASN1SpecialReal\n//$ ASN1RealDecimalEncoding=/reference/main/ASN1RealDecimalEncoding\n//$ ASN1RealBinaryEncoding=/reference/main/ASN1RealBinaryEncoding\ntype ASN1Real =\n\t| $$ASN1RealZero\n\t| $$ASN1SpecialReal\n\t| $$ASN1RealDecimalEncoding\n\t| $$ASN1RealBinaryEncoding;\n```\n\n----------------------------------------\n\nTITLE: Retrieving ASN1Set Contents in TypeScript\nDESCRIPTION: This method returns the contents of an ASN1Set as a Uint8Array. It's important to note that this method does not automatically sort the elements as required by DER when encoding the value. The function takes no parameters and returns a Uint8Array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Set/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Retrieving ASN.1 Values by Index in TypeScript\nDESCRIPTION: Defines the ASN1Set.at() method which returns the ASN.1 value at the specified index. The method throws an error if the index is out of bounds.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Set/at.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Value=/reference/main/ASN1Value\nfunction at(index: number): $$ASN1Value;\n```\n\n----------------------------------------\n\nTITLE: Defining RealBinaryEncodingBase Enum in TypeScript\nDESCRIPTION: Enumeration that defines three common binary encoding bases used in real number representations: Base2 (binary), Base8 (octal), and Base16 (hexadecimal).\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/RealBinaryEncodingBase.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum RealBinaryEncodingBase {\n\tBase2,\n\tBase8,\n\tBase16\n}\n```\n\n----------------------------------------\n\nTITLE: ASN1Enumerated Constructor in TypeScript\nDESCRIPTION: Constructor for creating an ASN1Enumerated instance. It takes a bigint value parameter to initialize the enumerated value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Enumerated/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: bigint): this;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1PrintableString.decodeText() Method in TypeScript\nDESCRIPTION: This snippet defines the decodeText() method for the ASN1PrintableString class. The method decodes the value to a string and throws an error if the value is invalid. It takes no parameters and returns a string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1PrintableString/decodeText.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction decodeText(): string;\n```\n\n----------------------------------------\n\nTITLE: Defining ISO 6093 Real Decimal Encoding Format Enum in TypeScript\nDESCRIPTION: Enumeration defining the three standard ISO 6093 numeric representation formats for real decimal encoding. Includes NR1, NR2, and NR3 format specifications used in ASN.1 encoding systems.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/RealDecimalEncodingFormat.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum RealDecimalEncodingFormat {\n\tISO6093NR1,\n\tISO6093NR2,\n\tISO6093NR3\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing ASN1IA5String Constructor in TypeScript\nDESCRIPTION: Constructor definition for ASN1IA5String class that takes a Uint8Array value parameter to create a new instance.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1IA5String/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: Uint8Array): this;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN1IA5String to String in TypeScript\nDESCRIPTION: This method decodes the value of an ASN1IA5String object to a string. It throws an error if the value contains invalid ASCII characters. The method takes no parameters and returns a string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1IA5String/decodeText.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nfunction decodeText(): string;\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialReal Enum in TypeScript for ASN.1\nDESCRIPTION: TypeScript enum definition for special real number values in ASN.1 notation. This enum provides symbolic constants for representing positive and negative infinity values in ASN.1 real number encoding.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/SpecialReal.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum SpecialReal {\n\tPlusInfinity,\n\tMinusInfinity\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1IA5String Properties Interface in TypeScript\nDESCRIPTION: Interface definition specifying the required properties for ASN1IA5String including class, form, tag, and value. References external ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1IA5String/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN1 Printable String in TypeScript\nDESCRIPTION: Function definition for converting ASN1 encoded data to a printable string format. Throws ASN1DecodeError if the value cannot be decoded as a printable string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/printableString.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1PrintableString=/reference/main/ASN1PrintableString\nfunction printableString(): $$ASN1PrintableString;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN1UTF8String to String in TypeScript\nDESCRIPTION: Function definition for decoding ASN1UTF8String values to a standard string. The method throws an error if it encounters invalid UTF-8 encoding.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTF8String/decodeText.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction decodeText(): string;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1IA5String contents() Method in TypeScript\nDESCRIPTION: Method signature for retrieving the contents of an ASN.1 IA5String as a Uint8Array. This method returns the raw byte representation of the IA5String value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1IA5String/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.numericString() Method in TypeScript\nDESCRIPTION: Function declaration for ASN1Value.numericString() which returns an ASN1NumericString type. This method decodes encoded ASN.1 content into a numeric string format and will throw an ASN1DecodeError if the value is not a valid numeric string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/numericString.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1NumericString=/reference/main/ASN1NumericString\nfunction numericString(): $$ASN1NumericString;\n```\n\n----------------------------------------\n\nTITLE: Decoding ASN1NumericString to Text in TypeScript\nDESCRIPTION: Function definition for decoding an ASN1NumericString value into a string format. The method throws an error if the value is invalid.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1NumericString/decodeText.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction decodeText(): string;\n```\n\n----------------------------------------\n\nTITLE: Defining contents() Method for ASN1SpecialReal in TypeScript\nDESCRIPTION: Function signature for the contents() method of the ASN1SpecialReal class, which returns a Uint8Array containing the encoded REAL value contents.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1SpecialReal/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Value.contents() Method in TypeScript\nDESCRIPTION: This code snippet defines the contents() method for the ASN1Value class. The method returns a Uint8Array representing the contents of the ASN1Value object.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Integer.contents() Method in TypeScript\nDESCRIPTION: This snippet defines the contents() method for the ASN1Integer class. The method returns a Uint8Array representing the contents of an ASN.1 integer.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Integer/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1OctetString contents Method - TypeScript\nDESCRIPTION: Method definition that retrieves the contents of an ASN1OctetString as a Uint8Array. This method provides access to the raw byte data stored in the octet string.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1OctetString/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: ASN1BitString.contents() Method Definition in TypeScript\nDESCRIPTION: Defines the contents() method for ASN1BitString class that returns the raw binary data as a Uint8Array. This method provides access to the underlying data of the ASN.1 BitString structure.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Boolean/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining contents() Method for ASN1Sequence in TypeScript\nDESCRIPTION: This code snippet defines the contents() method for the ASN1Sequence class. The method returns a Uint8Array representing the contents of the ASN.1 sequence.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Sequence/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining contents() Method for ASN1Null in TypeScript\nDESCRIPTION: This code snippet defines the contents() method for the ASN1Null class. The method takes no parameters and returns a Uint8Array, which likely represents the encoded contents of the ASN.1 NULL type.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Null/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1EncodableSequence contents() Method in TypeScript\nDESCRIPTION: Method definition for contents() which returns a Uint8Array. This method likely returns the raw byte contents of an ASN.1 encoded sequence.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSequence/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1RealZero contents Method in TypeScript\nDESCRIPTION: Method definition for contents() that returns a Uint8Array. This appears to be part of ASN.1 encoding functionality for representing zero values in real numbers.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealZero/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Retrieving ASN.1 Set Elements as Uint8Array in TypeScript\nDESCRIPTION: A TypeScript function that returns the contents of an ASN.1 encodable set as a Uint8Array. Important note: this method does not automatically sort the elements as required by the Distinguished Encoding Rules (DER) when encoding the value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSet/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contents of ASN1GeneralizedTime as Uint8Array in TypeScript\nDESCRIPTION: This method allows retrieving the raw contents of an ASN1GeneralizedTime object as a Uint8Array. It provides access to the underlying byte representation of the generalized time value for further processing or manipulation.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1GeneralizedTime/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Binary Contents from ASN1UTCTime in TypeScript\nDESCRIPTION: The contents() method of ASN1UTCTime class that returns the binary representation of the UTCTime value as a Uint8Array. This method allows access to the raw bytes of the encoded ASN.1 UTCTime data.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTCTime/contents.md.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1UTF8String.contents() Method in TypeScript\nDESCRIPTION: Function signature for the contents() method of the ASN1UTF8String class that returns the UTF8String's content as a Uint8Array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTF8String/contents.md.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining the contents() Method for ASN1PrintableString in TypeScript\nDESCRIPTION: Function signature for the contents() method of the ASN1PrintableString class. This method returns a Uint8Array representing the raw byte content of the ASN.1 PrintableString value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1PrintableString/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Properties Interface for ASN1ObjectIdentifier in TypeScript\nDESCRIPTION: Defines the Properties interface for ASN1ObjectIdentifier which includes class, form, tag, and encoded properties. The encoded property represents the encoded object identifier.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1ObjectIdentifier/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tencoded: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1ObjectIdentifier contents Method in TypeScript\nDESCRIPTION: Function definition for the contents() method that returns a Uint8Array. This method is part of the ASN1ObjectIdentifier class and is used to retrieve the binary contents of an ASN.1 object identifier.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1ObjectIdentifier/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Properties Interface for ASN1Sequence in TypeScript\nDESCRIPTION: Defines the Properties interface for ASN1Sequence with class, form, tag, and elements properties. This interface represents the structure of ASN1Sequence objects.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Sequence/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\n//$ ASN1Value=/reference/main/ASN1Value\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\telements: $$ASN1Value[];\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contents from ASN1NumericString in TypeScript\nDESCRIPTION: Definition of the contents() method for the ASN1NumericString class. This method returns the raw byte contents of the NumericString as a Uint8Array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1NumericString/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: ASN1Set Properties Interface Definition in TypeScript\nDESCRIPTION: Defines the interface for ASN1Set properties including class, form, tag, and elements. The properties define the structure and content of an ASN.1 set.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Set/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\n//$ ASN1Value=/reference/main/ASN1Value\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\telements: $$ASN1Value[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining contents() Method for ASN1Enumerated in TypeScript\nDESCRIPTION: This code snippet defines the contents() method for the ASN1Enumerated class. The method returns a Uint8Array, which likely represents the binary contents of the ASN.1 enumerated value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Enumerated/encodeContents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: ASN1BitString Properties Interface Definition in TypeScript\nDESCRIPTION: Defines the interface for ASN1BitString properties including class, form, tag, bytes, and length. References ASN1Class and ASN1Form from external files.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1BitString/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tbytes: Uint8Array;\n\tlength: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining contents() Function for ASN1RealBinaryEncoding in TypeScript\nDESCRIPTION: This function is defined within the ASN1RealBinaryEncoding class or interface. It returns a Uint8Array, which likely represents the binary encoding of an ASN.1 REAL value. The function takes no parameters, suggesting it operates on internal state of the ASN1RealBinaryEncoding instance.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealBinaryEncoding/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: ASN1NumericString Properties Interface Definition in TypeScript\nDESCRIPTION: Interface defining the properties of an ASN1NumericString, including class, form, tag, and value. The class implements ASN1Encodable.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1NumericString/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ASN1RealDecimalEncoding.contents() Method in TypeScript\nDESCRIPTION: Function signature for the contents() method of the ASN1RealDecimalEncoding class, which returns a Uint8Array containing the binary representation of an ASN.1 real value in decimal encoding.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealDecimalEncoding/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1GeneralizedTime Properties Interface in TypeScript\nDESCRIPTION: Interface definition for the properties of ASN1GeneralizedTime. It includes class, form, tag, and time components. The class and form properties are references to ASN1Class and ASN1Form types respectively.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1GeneralizedTime/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tyear: number;\n\tmonth: number;\n\tdate: number;\n\thours: number;\n\tminutes: number;\n\tseconds: number;\n\tmilliseconds: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Changeset Bug Fix Example\nDESCRIPTION: Example of a bug fix changeset markdown entry.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/CONTRIBUTING.md#2025-04-12_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nFix: Handle negative numbers in `sqrt()`\n```\n\n----------------------------------------\n\nTITLE: Installing ASN.1 Library via NPM\nDESCRIPTION: Shows the NPM installation command for adding the @oslojs/asn1 library to a project.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @oslojs/asn1\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1UTCTime Properties Interface in TypeScript\nDESCRIPTION: Interface definition for the properties of ASN1UTCTime. It includes class, form, tag, and time components (year, month, date, hours, minutes, seconds). The class and form properties reference other ASN.1 types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTCTime/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tyear: number;\n\tmonth: number;\n\tdate: number;\n\thours: number;\n\tminutes: number;\n\tseconds: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Changeset Feature Example\nDESCRIPTION: Example of a new feature changeset markdown entry.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/CONTRIBUTING.md#2025-04-12_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nFeat: Add `greet()`\n```\n\n----------------------------------------\n\nTITLE: Constructing ASN1UTCTime in TypeScript\nDESCRIPTION: Constructor for creating an ASN1UTCTime object. It takes year, month, date, hours, minutes, seconds, and milliseconds as parameters. Note that the month parameter is one-based, unlike the JavaScript Date object.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTCTime/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(\n\tyear: number,\n\tmonth: number,\n\tdate: number,\n\thours: number,\n\tminutes: number,\n\tseconds: number,\n\tmilliseconds: number\n): this;\n```\n\n----------------------------------------\n\nTITLE: Properties Interface for ASN1RealBinaryEncoding in TypeScript\nDESCRIPTION: Defines the Properties interface for ASN1RealBinaryEncoding, including ASN.1 class, form, mantissa, base, and exponent properties required for binary encoding of real values.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealBinaryEncoding/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\n//$ RealBinaryEncodingBase=/reference/main/RealBinaryEncodingBase\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\tmantissa: bigint;\n\tbase: $$RealBinaryEncodingBase;\n\texponent: bigint;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor Definition for ASN1PrintableString in TypeScript\nDESCRIPTION: Defines the constructor for the ASN1PrintableString class that accepts a Uint8Array value parameter. The constructor initializes a new instance of ASN1PrintableString with the provided byte array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1PrintableString/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: Uint8Array): this;\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1EncodableSet Properties Interface\nDESCRIPTION: Interface definition specifying the required properties for ASN1EncodableSet including class, form, tag, and elements array. Properties interface includes type definitions for ASN.1 specific attributes.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSet/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\telements: $$ASN1Encodable[];\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing ASN1Boolean in TypeScript\nDESCRIPTION: Constructor for creating an ASN1Boolean instance. It takes a boolean value as a parameter.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Boolean/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: boolean): this;\n```\n\n----------------------------------------\n\nTITLE: Initializing ASN1RealZero Constructor in TypeScript\nDESCRIPTION: Constructor definition for ASN1RealZero class that creates a new instance representing an ASN.1 real value of zero.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealZero/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(): this;\n```\n\n----------------------------------------\n\nTITLE: Constructor for ASN1RealBinaryEncoding in TypeScript\nDESCRIPTION: Defines the constructor for ASN1RealBinaryEncoding class that takes mantissa, base, and exponent parameters to initialize a binary encoded ASN.1 real value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealBinaryEncoding/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n//$ RealBinaryEncodingBase=/reference/main/RealBinaryEncodingBase\nfunction constructor(mantissa: bigint, base: $$RealBinaryEncodingBase, exponent: bigint): this;\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install project dependencies using the PNPM package manager.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i\n```\n\n----------------------------------------\n\nTITLE: Constructor Definition for ASN1RealDecimalEncoding in TypeScript\nDESCRIPTION: Defines the constructor for ASN1RealDecimalEncoding class. It takes an encoding format parameter of type RealDecimalEncodingFormat and a value parameter of type Uint8Array.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealDecimalEncoding/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(encodingFormat: $$RealDecimalEncodingFormat, value: Uint8Array): this;\n```\n\n----------------------------------------\n\nTITLE: Running Tests and Build Commands\nDESCRIPTION: Commands for running project tests and building the package using PNPM.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/CONTRIBUTING.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm test\n\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Constructing ASN1SpecialReal in TypeScript\nDESCRIPTION: Constructor for the ASN1SpecialReal class. It takes a RealDecimalEncodingFormat value as a parameter.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1SpecialReal/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: $$RealDecimalEncodingFormat): this;\n```\n\n----------------------------------------\n\nTITLE: Initializing ASN1EncodableSet Constructor\nDESCRIPTION: Constructor signature for creating an ASN1EncodableSet instance that takes an array of ASN1Encodable elements as parameter.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSet/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(elements: $$ASN1Encodable[]): this;\n```\n\n----------------------------------------\n\nTITLE: Creating an ASN1Null instance in TypeScript\nDESCRIPTION: Constructor for creating an ASN1Null instance that represents an ASN.1 null value. This constructor takes no parameters.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Null/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(): this;\n```\n\n----------------------------------------\n\nTITLE: ASN1Value Properties Interface\nDESCRIPTION: Interface defining the required properties for ASN1Value including class, form, and tag\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Value/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Properties Interface Definition for ASN1RealDecimalEncoding in TypeScript\nDESCRIPTION: Defines the Properties interface for ASN1RealDecimalEncoding. It specifies the class, form, encodingFormat, and value properties that make up an ASN1RealDecimalEncoding object.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealDecimalEncoding/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\tencodingFormat: $$RealDecimalEncodingFormat;\n\tvalue: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Properties Interface Definition for ASN1PrintableString in TypeScript\nDESCRIPTION: Defines the structure of properties available on the ASN1PrintableString class, including class, form, tag, and value. The class and form properties reference external ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1PrintableString/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1OctetString Properties Interface in TypeScript\nDESCRIPTION: Interface definition for the properties of ASN1OctetString. It includes class, form, tag, and value properties. The class and form properties are references to ASN1Class and ASN1Form types respectively.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1OctetString/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: ASN1Null Properties Interface Definition in TypeScript\nDESCRIPTION: Interface definition for the properties required by ASN1Null. It includes class type, form type, and tag number as mandatory properties. The class references external ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Null/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n}\n```\n\n----------------------------------------\n\nTITLE: ASN1Integer Properties Interface Definition in TypeScript\nDESCRIPTION: Interface defining the properties of an ASN1Integer, including class, form, tag, and value. References ASN1Class and ASN1Form types from external modules.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Integer/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: bigint;\n}\n```\n\n----------------------------------------\n\nTITLE: ASN1Enumerated Properties Interface in TypeScript\nDESCRIPTION: Interface defining the properties of an ASN1Enumerated object. It includes class, form, tag, and value properties with references to ASN1Class and ASN1Form.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Enumerated/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: bigint;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1Boolean Properties Interface in TypeScript\nDESCRIPTION: Interface defining the properties of ASN1Boolean, including class, form, tag, and value. It references ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1Boolean/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Properties Interface for ASN1UTF8String in TypeScript\nDESCRIPTION: Defines the Properties interface for ASN1UTF8String with class, form, tag, and value properties. The class and form properties reference external ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1UTF8String/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: Uint8Array;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1SpecialReal Properties Interface in TypeScript\nDESCRIPTION: Interface definition for the properties of ASN1SpecialReal. It includes class, form, tag, and value properties.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1SpecialReal/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\tvalue: $$RealDecimalEncodingFormat;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1RealZero Properties Interface in TypeScript\nDESCRIPTION: Interface definition specifying required properties for ASN1RealZero including class type, form, and tag number. References external ASN1Class and ASN1Form types.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1RealZero/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ASN1EncodableSequence Properties Interface in TypeScript\nDESCRIPTION: Interface defining the properties of ASN1EncodableSequence including class, form, tag, and elements. These properties represent the ASN.1 characteristics of the sequence.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1EncodableSequence/index.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n//$ ASN1Class=/reference/main/ASN1Class\n//$ ASN1Form=/reference/main/ASN1Form\n//$ ASN1Encodable=/reference/main/ASN1Encodable\ninterface Properties {\n\tclass: $$ASN1Class;\n\tform: $$ASN1Form;\n\ttag: number;\n\telements: $$ASN1Encodable[];\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Changesets\nDESCRIPTION: Commands for creating changesets to document minor features and patch fixes using the Auri tool.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/CONTRIBUTING.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm auri add minor\npnpm auri add patch\n```\n\n----------------------------------------\n\nTITLE: Retrieving Contents from ASN1BitString in TypeScript\nDESCRIPTION: Declaration of the contents() method for ASN1BitString class that returns the raw bit string data as a Uint8Array. This method allows access to the binary data stored in an ASN.1 BIT STRING value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1BitString/contents.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction contents(): Uint8Array;\n```\n\n----------------------------------------\n\nTITLE: Constructing an ASN1NumericString in TypeScript\nDESCRIPTION: Constructor for creating an ASN1NumericString instance from a Uint8Array value.\nSOURCE: https://github.com/oslo-project/asn1/blob/main/docs/pages/reference/main/ASN1NumericString/index.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction constructor(value: Uint8Array): this;\n```"
  }
]
[
  {
    "owner": "projectsveltos",
    "repo": "sveltos",
    "content": "TITLE: Rolling back to a snapshot using sveltosctl\nDESCRIPTION: This command executes sveltosctl inside a pod to rollback the Kubernetes configuration to a specific snapshot. It requires specifying the snapshot policy and the timestamp of the snapshot to revert to, effectively restoring the configuration to a previous state.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -it -n projectsveltos sveltosctl-0 -- ./sveltosctl snapshot rollback --snapshot=hourly --sample=2023-08-26:05:00:00\n```\n\n----------------------------------------\n\nTITLE: Cloning and Deploying Sveltos Demo Environment\nDESCRIPTION: Commands to clone the Sveltos addon-controller repository and set up a quick start demo environment. This creates a management cluster using Kind, deploys ClusterAPI, Sveltos, and provisions a workload cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/projectsveltos/addon-controller && cd addon-controller/\n\n$ make quickstart\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Mode 1 via Manifest\nDESCRIPTION: Commands to install Sveltos in Local Agent Mode using manifest files. This deploys agents directly in managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/manifest.yaml\n\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/default-instances.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring GitRepository in Flux for Kubernetes Add-ons - YAML\nDESCRIPTION: This YAML snippet defines a GitRepository resource in Flux to synchronize with a specified Git repository every minute. It includes important fields such as the repository URL, branch to watch, and secret reference for authentication. The 'projectsveltos.io/template' annotation enables Sveltos templating functionality for enhanced customization.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/use_cases/use_case_gitops.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\\napiVersion: source.toolkit.fluxcd.io/v1\\nkind: GitRepository\\nmetadata:\\n  name: flux-system\\n  namespace: flux-system\\n  annotations:\\n    projectsveltos.io/template: \\\"true\\\" # (1)\\nspec:\\n  interval: 1m0s # (2)\\n  ref:\\n    branch: main\\n  secretRef:\\n    name: flux-system\\n  timeout: 60s\\n  url: https://github.com/gianlucam76/kustomize.git # (3)\\n\"\n```\n\n----------------------------------------\n\nTITLE: Applying Kyverno ClusterProfile\nDESCRIPTION: Command to apply the ClusterProfile resource that will trigger the deployment of the Kyverno Helm chart to the matched clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f clusterprofile_kyverno.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Sveltos Helm Repository\nDESCRIPTION: Commands to add and update the Sveltos Helm repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nhelm repo add projectsveltos https://projectsveltos.github.io/helm-charts\n\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile for Kyverno Deployment in Kubernetes\nDESCRIPTION: This YAML defines a ClusterProfile that deploys Kyverno to clusters matching a specific label. It demonstrates how tenant admins can manage applications across their assigned clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\n  labels:\n    projectsveltos.io/serviceaccount-name: foo\n    projectsveltos.io/serviceaccount-namespace: default\nspec:\n  clusterSelector:\n    matchLabels:\n      org: foo.io\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Examining ClusterSummary Resource for Add-on Deployment Status\nDESCRIPTION: Example of a ClusterSummary resource that Sveltos creates when a cluster matches a ClusterProfile. The status section indicates whether add-ons are successfully provisioned or includes failure messages for troubleshooting.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterSummary\nmetadata:\n  name: deploy-kyverno-sveltos-mgmt\n  namespace: mgmt\nspec:\n  clusterName: mgmt\n  clusterNamespace: mgmt\n  clusterType: Sveltos\n  clusterProfileSpec:\n    clusterSelector:\n      matchLabels:\n        env: fv\n    helmCharts:\n    - chartName: kyverno/kyverno\n      chartVersion: v3.3.3\n      helmChartAction: Install\n      releaseName: kyverno-latest\n      releaseNamespace: kyverno\n      repositoryName: kyverno\n      repositoryURL: https://kyverno.github.io/kyverno/\nstatus:\n  dependencies: no dependencies\n  featureSummaries:\n  - featureID: Helm\n    hash: ujsdjTgHzPfqEx3bHtAIFcs3kjSvcuTkRCXc3o7AqrY=\n    lastAppliedTime: \"2024-05-10T14:25:58Z\"\n    status: Provisioned\n```\n\n----------------------------------------\n\nTITLE: Creating a Sveltos ClusterProfile for Deployment - YAML\nDESCRIPTION: This YAML snippet defines a Sveltos ClusterProfile that specifies the criteria for deploying resources to managed clusters. It references the previously defined GitRepository resource and indicates the directory to use for deployments. The label selector ensures that the application is deployed only on clusters matching specific criteria, represented by 'env=fv'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/use_cases/use_case_gitops.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\"cat > cluster_profile_flux.yaml <<EOF\\n---\\napiVersion: config.projectsveltos.io/v1beta1\\nkind: ClusterProfile\\nmetadata:\\n  name: deploy-helloworld-resources\\nspec:\\n  clusterSelector:\\n    matchLabels:\\n      env: fv\\n  policyRefs:\\n  - kind: GitRepository\\n    name: flux-system\\n    namespace: flux-system\\n    path: ./helloWorld/\\n    targetNamespace: eng\\nEOF\\n\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Multiple Helm Charts with Sveltos\nDESCRIPTION: Configuration for installing multiple Helm charts (Prometheus and Grafana) in sequence on clusters labeled with env=fv.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: prometheus-grafana\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  helmCharts:\n  - repositoryURL:    https://prometheus-community.github.io/helm-charts\n    repositoryName:   prometheus-community\n    chartName:        prometheus-community/prometheus\n    chartVersion:     26.0.0\n    releaseName:      prometheus\n    releaseNamespace: prometheus\n    helmChartAction:  Install\n  - repositoryURL:    https://grafana.github.io/helm-charts\n    repositoryName:   grafana\n    chartName:        grafana/grafana\n    chartVersion:     8.6.4\n    releaseName:      grafana\n    releaseNamespace: grafana\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos with Helm in an air-gapped environment\nDESCRIPTION: Commands for installing Sveltos using Helm in a network-restricted environment, showing how to add a private repository, update repos, install Sveltos with custom values, and verify the installation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/air_gapped_installation.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add projectsveltos <private-repo-url>\n\n$ helm repo update\n\n$ helm install projectsveltos projectsveltos/projectsveltos -n projectsveltos --create-namespace -f custom_values.yaml\n\n$ helm list -n projectsveltos\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Mode 2 via Kustomize\nDESCRIPTION: Commands to install Sveltos in Centralised Agent Mode using Kustomize.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nkustomize build https://github.com/projectsveltos/sveltos.git//kustomize/overlays/agentless-mode\\?timeout\\=120\\&ref\\=v0.51.1 |kubectl apply -f -\n\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/default-instances.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining Kyverno Helm Chart Deployment with ClusterProfile\nDESCRIPTION: YAML configuration for a ClusterProfile resource that deploys the Kyverno Helm chart to any cluster with the label 'env:fv'. It specifies the chart repository, version, release name, and namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_kyverno.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.7\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\nEOF\n```\n\n----------------------------------------\n\nTITLE: Complete ClusterProfile Example for Kyverno Deployment in YAML\nDESCRIPTION: This YAML snippet provides a complete example of a ClusterProfile for deploying Kyverno, including cluster selection, Helm chart configuration, and stopMatchingBehavior setting.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  stopMatchingBehavior: WithdrawPolicies\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Sample ClusterProfile for Installing Flux in Management Cluster\nDESCRIPTION: Example ClusterProfile for installing Flux in a management cluster using a Helm chart. This profile targets clusters with the 'cluster: mgmt' label and installs Flux from the community Helm chart repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux\nspec:\n  clusterSelector:\n    matchLabels:\n      cluster: mgmt\n  helmCharts:\n  - chartName: flux2/flux2\n    chartVersion: 2.12.4\n    helmChartAction: Install\n    releaseName: flux2\n    releaseNamespace: flux2\n    repositoryName: flux2\n    repositoryURL: https://fluxcd-community.github.io/helm-charts\n```\n\n----------------------------------------\n\nTITLE: GitRepository definition\nDESCRIPTION: This GitRepository resource defines the source for the Kustomize manifests. It points to a specific branch on a Git repository and sets an interval for synchronization.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  name: flux2\n  namespace: flux2\nspec:\n  interval: 1m0s\n  ref:\n    branch: main\n  timeout: 60s\n  url: https://github.com/gianlucam76/kustomize.git\n\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Mode 1 via Kustomize\nDESCRIPTION: Commands to install Sveltos in Local Agent Mode using Kustomize.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nkustomize build https://github.com/projectsveltos/sveltos.git//kustomize/base\\?timeout\\=120\\&ref\\=v0.51.1 |kubectl apply -f -\n\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/default-instances.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Network Policies with Templates in Sveltos\nDESCRIPTION: This YAML snippet demonstrates how to use the projectsveltos.io/instantiate annotation to dynamically create NetworkPolicy resources when a LoadBalancer Service is detected. The template uses event data to customize the policy with service-specific details like name, namespace, selectors, and ports.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/generators.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: network-policy\n      namespace: default\n      annotations:\n        projectsveltos.io/instantiate: ok # this annotation is what tells Sveltos to instantiate this ConfigMap\n    data:\n      networkpolicy.yaml: |\n        kind: NetworkPolicy\n        apiVersion: networking.k8s.io/v1\n        metadata:\n          name: front-{{ .Resource.metadata.name }}\n          namespace: {{ .Resource.metadata.namespace }}\n        spec:\n          podSelector:\n            matchLabels:\n              {{ range $key, $value := .Resource.spec.selector }}\n              {{ $key }}: {{ $value }}\n              {{ end }}\n          ingress:\n            - from:\n              - podSelector:\n                  matchLabels:\n                    app: internal\n              ports:\n                {{ range $port := .Resource.spec.ports }}\n                - port: {{ $port.port }}\n                {{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a HealthCheck with Lua Script for Deployment Replica Evaluation\nDESCRIPTION: This YAML defines a HealthCheck resource that uses a Lua script to evaluate the health of Deployments by comparing available replicas to requested replicas. The script identifies deployments as degraded when there's a difference between available and requested replicas.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n  name: deployment-replicas\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"apps\"\n    version: v1\n    kind: Deployment\n  evaluateHealth: |\n    function evaluate()\n      local statuses = {}\n      \n      status = \"Progressing\"\n      message = \"\"\n    \n      for _,resource in ipairs(resources) do\n        if resource.spec.replicas == 0 then\n          continue\n        end\n        \n        if resource.status ~= nil then\n          if resource.status.availableReplicas ~= nil then\n            if resource.status.availableReplicas == resource.spec.replicas then\n              status = \"Healthy\"\n              message = \"All replicas \" .. resource.spec.replicas .. \" are healthy\"\n            else\n              status = \"Progressing\"\n              message = \"expected replicas: \" .. resource.spec.replicas .. \" available: \" .. resource.status.availableReplicas\n            end\n          end\n          if resource.status.unavailableReplicas ~= nil then\n            status = \"Degraded\"\n            message = \"deployments have unavailable replicas\"\n          end\n        end\n        table.insert(statuses, {resource=resource, status = status, message = message})\n      end\n\n      local hs = {}\n      if #statuses > 0 then\n        hs.resources = statuses \n      end\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: Complete Sveltos Profile Example for Kyverno Deployment\nDESCRIPTION: A full Profile example showing how to deploy Kyverno to production clusters using Helm. This example includes the stopMatchingBehavior setting which determines what happens when a cluster no longer matches the profile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: Profile\nmetadata:\n  name: kyverno\n  namespace: eng\nspec:\n  stopMatchingBehavior: WithdrawPolicies\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Configuring Deployment Health Monitoring in Projectsveltos using HealthCheck Resource\nDESCRIPTION: This HealthCheck YAML definition monitors Kubernetes Deployments across clusters. It uses a Lua function to evaluate health status based on replica states: marking deployments as Healthy when available replicas match requested replicas, Progressing when they differ, and Degraded when unavailable replicas exist.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_deployment_health_notification.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n  name: deployment-replicas\nspec:\n  resourceSelectors:\n  - group: \"apps\"\n    version: v1\n    kind: Deployment\n  evaluateHealth: |\n    function evaluate()\n      local statuses = {}\n      status = \"Progressing\"\n      message = \"\"\n\n      for _,resource in ipairs(resources) do\n        if resource.status ~= nil then\n          if resource.status.availableReplicas ~= nil then\n            if resource.status.availableReplicas == resource.spec.replicas then\n              status = \"Healthy\"\n            else\n              status = \"Progressing\"\n              message = \"expected replicas: \" .. resource.spec.replicas .. \" available: \" .. resource.status.availableReplicas\n            end\n          end\n          if resource.status.unavailableReplicas ~= nil then\n            status = \"Degraded\"\n            message = \"deployments have unavailable replicas\"\n          end\n        end\n        table.insert(statuses, {resource=resource, status = status, message = message})\n      end\n      \n      local hs = {}\n      if #statuses > 0 then\n        hs.resources = statuses \n      end\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: Using Template Expressions in ClusterProfile Path Field\nDESCRIPTION: ClusterProfile that uses a template expression in the path field to dynamically determine which policies to apply based on cluster annotations. This enables environment-specific configurations.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_flux_region_west.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux-system\nspec:\n  clusterSelector:\n    matchLabels:\n      region: west\n  syncMode: Continuous\n  policyRefs:\n  - kind: GitRepository\n    name: flux-system\n    namespace: flux-system\n    path: '{{ index .Cluster.metadata.annotations \"environment\" }}/helloWorld'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring External Secret Operator (yaml)\nDESCRIPTION: This YAML configuration creates a SecretStore and ExternalSecret to fetch secrets from Google Cloud Secret Manager. The SecretStore defines how to authenticate with Google Cloud Secret Manager, and the ExternalSecret specifies which secret to fetch and where to store it in the Kubernetes cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/external_secret.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n\"cat > secretstore.yaml <<EOF\n---\napiVersion: external-secrets.io/v1beta1\nkind: SecretStore\nmetadata:\n  name: gcp-backend\nspec:\n  provider:\n      gcpsm:\n        auth:\n          secretRef:\n            secretAccessKeySecretRef:\n              name: gcpsm-secret\n              key: secret-access-credentials\n        projectID: $yourproject\n---\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: gcp-external-secret\nspec:\n  secretStoreRef:\n    kind: SecretStore\n    name: gcp-backend\n  target:\n    name: imported-secret\n  data:\n  - secretKey: content\n    remoteRef:\n      key: yoursecret\nEOF\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic EventTrigger with Conditional Actions\nDESCRIPTION: YAML configuration for an EventTrigger that conditionally creates or deletes resources based on CloudEvent type. The CloudEventAction field uses a template to evaluate the event type and determine whether to create or delete the namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: manage-namespace\nspec:\n  eventSourceName: user-operation\n  cloudEventAction:  \"{{ if eq .CloudEvent.type 'auth.example.com.logout' }}Delete{{ else }}Create{{ end }}\" # can be espressed as a template and instantiated using CloudEvent\n  policyRefs:\n  - name: namespace\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: namespace\n  namespace: default\n  annotations:\n    projectsveltos.io/instantiate: ok # ConfigMap contains a template and needs to be instantiated at run time\ndata:\n  namespace.yaml: |\n    kind: Namespace\n    apiVersion: v1\n    metadata:\n      name: {{ .CloudEvent.subject }} # The CloudEvent is available and can be used to instantiate the template\n```\n\n----------------------------------------\n\nTITLE: Comparing snapshots using sveltosctl\nDESCRIPTION: This command uses sveltosctl to compare two snapshots, identifying changes between them. It specifies the snapshot policy and the timestamps of the snapshots to compare, highlighting modifications made to the Kubernetes configuration.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl snapshot diff --snapshot=hourly --from-sample=2023-08-26:05:00:00 --to-sample=2023-08-26:05:20:00\n+-----------------------------------+---------------+-----------+----------------+----------+--------------------------------+\n|              CLUSTER              | RESOURCE TYPE | NAMESPACE |      NAME      |  ACTION  |            MESSAGE             |\n+-----------------------------------+---------------+-----------+----------------+----------+--------------------------------+\n| default/capi--clusterapi-workload | /Service      | test      | redis-follower | modified | use --raw-diff option to see   |\n|                                   |               |           |                |          | diff                           |\n+-----------------------------------+---------------+-----------+----------------+----------+--------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Excluding Specific Resources from Drift Detection (YAML)\nDESCRIPTION: Example of a ClusterProfile that deploys Kyverno and uses patches to add the 'projectsveltos.io/driftDetectionIgnore' annotation to a specific deployment. This annotation prevents Sveltos from tracking configuration drift for that particular resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/configuration_drift.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    metadata:\n      name: deploy-kyverno\n    spec:\n      clusterSelector:\n        matchLabels:\n          env: fv\n      syncMode: ContinuousWithDriftDetection\n      helmCharts:\n      - repositoryURL:    https://kyverno.github.io/kyverno/\n        repositoryName:   kyverno\n        chartName:        kyverno/kyverno\n        chartVersion:     v3.3.3\n        releaseName:      kyverno-latest\n        releaseNamespace: kyverno\n        helmChartAction:  Install\n      patches:\n      - target:\n          group: apps\n          version: v1\n          kind: Deployment\n          name: \"kyverno-admission-controller\"\n        patch: |\n          - op: add\n            path: /metadata/annotations/projectsveltos.io~1driftDetectionIgnore\n            value: \"ok\"\n```\n\n----------------------------------------\n\nTITLE: Defining Kubevela ClusterProfile with Kyverno Dependency\nDESCRIPTION: This YAML defines a ClusterProfile for installing Kubevela that depends on the Kyverno ClusterProfile. It targets production clusters and specifies Helm chart details for Kubevela installation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile \nmetadata: \n  name: cp-kubevela\nspec:\n  dependsOn:\n  - cp-kyverno\n  clusterSelector:\n    matchLabels:\n      env: production\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL: https://kubevela.github.io/charts\n    repositoryName: kubevela\n    chartName: kubevela/vela-core\n    chartVersion: 1.9.6\n    releaseName: kubevela-core-latest\n    releaseNamespace: vela-system\n    helmChartAction: Install\n```\n\n----------------------------------------\n\nTITLE: Example ClusterProfile and Resources Definition - YAML\nDESCRIPTION: This YAML configuration illustrates defining a ClusterProfile and associated resources in Sveltos. It selects clusters based on labels and uses a ConfigMap to deploy resources generated by ytt to selected managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\n    apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    metadata:\n      name: deploy-ytt-resources\n    spec:\n      clusterSelector:\n        matchLabels:\n          env: fv\n      templateResourceRefs:\n      - resource:\n          apiVersion: extension.projectsveltos.io/v1beta1\n          kind: YttSource\n          name: yttsource-flux\n          namespace: default\n        identifier: YttSource\n      policyRefs:\n      - kind: ConfigMap\n        name: ytt-resources\n        namespace: default\n    ---\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: ytt-resources\n      namespace: default\n      annotations:\n        projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\n    data:\n      resource.yaml: |\n        {{ (getResource \"YttSource\").status.resources }}\n```\n\n----------------------------------------\n\nTITLE: Nested Templates for Dynamic Values in Sveltos\nDESCRIPTION: This YAML snippet demonstrates nested templating in Sveltos, where a value itself contains a template that references cluster labels. This allows for dynamic configuration based on cluster metadata, such as retrieving the region from cluster labels.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n  Region:  {{ index .Cluster.metadata.labels \"region\" }}\n  Version: v1.2.0\n```\n\n----------------------------------------\n\nTITLE: Classifier Using Lua Script to Identify ACME ClusterIssuers in YAML\nDESCRIPTION: This Classifier uses a Lua script to identify clusters with a ClusterIssuer that uses the ACME staging v02 API from Let's Encrypt. It adds the label 'issuer: acme-staging-v02' to matching clusters by evaluating the spec.acme.server field.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/labels_management.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: Classifier\nmetadata:\n  name: acme-staging-v02\nspec:\n  classifierLabels:\n  - key: issuer\n    value: acme-staging-v02\n  deployedResourceConstraint:\n    resourceSelectors:\n    - group: \"cert-manager.io\"\n      version: v1\n      kind: ClusterIssuer\n      evaluate: |\n        function evaluate()\n          hs = {}\n          hs.matching = false\n          hs.message = \"\"\n          if obj.spec.acme ~= nil then\n            if string.find(obj.spec.acme.server, \"acme-staging-v02.api.letsencrypt.org\", 1, true) then\n              hs.matching = true\n            end\n          end\n          return hs\n        end\n```\n\n----------------------------------------\n\nTITLE: Deploying Helm Charts from Flux GitRepository in Sveltos\nDESCRIPTION: YAML example showing the helmCharts section of a ClusterProfile that references a Helm chart from a Flux GitRepository. This demonstrates the syntax for specifying a Flux source as the Helm chart repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nhelmCharts:\n  - repositoryURL:    gitrepository://flux-system/flux-system/charts/projectsveltos\n    releaseName:      projectsveltos\n    releaseNamespace: projectsveltos\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Configuring Continuous Drift Detection in ClusterProfile (YAML)\nDESCRIPTION: Example of a ClusterProfile resource with syncMode set to ContinuousWithDriftDetection. This configuration enables Sveltos to monitor managed clusters for any changes to resources deployed by this ClusterProfile and automatically remediate any detected drift.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/configuration_drift.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  syncMode: ContinuousWithDriftDetection\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Installing Single Helm Chart with Sveltos\nDESCRIPTION: Example of deploying a single Kyverno Helm chart to clusters labeled with env=prod using Sveltos ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Deploying Kyverno with a Policy using ClusterProfile in YAML\nDESCRIPTION: A ClusterProfile YAML configuration that deploys the Kyverno Helm chart and applies a policy to prevent the use of 'latest' image tags. It targets clusters that match the label selector 'env=fv'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/combining_all.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  helmCharts:\n  - chartName: kyverno/kyverno\n    chartVersion: v3.3.3\n    helmChartAction: Install\n    releaseName: kyverno-latest\n    releaseNamespace: kyverno\n    repositoryName: kyverno\n    repositoryURL: https://kyverno.github.io/kyverno/\n  policyRefs:\n  - kind: ConfigMap\n    name: disallow-latest-tag\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Classifier for Kubernetes v1.24.x Clusters in YAML\nDESCRIPTION: This Classifier identifies clusters running Kubernetes version 1.24.0 or higher but less than 1.25.0, and adds the label 'gatekeeper: v3-9' to them. This works with the corresponding ClusterProfile to deploy Gatekeeper 3.9.0.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/labels_management.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: Classifier\nmetadata:\n  name: deploy-gatekeeper-3-9\nspec:\n  classifierLabels:\n  - key: gatekeeper\n    value: v3-9\n  kubernetesVersionConstraints:\n  - comparison: GreaterThanOrEqualTo\n    version: 1.24.0\n  - comparison: LessThan\n    version: 1.25.0\n```\n\n----------------------------------------\n\nTITLE: Deploying NATS Secret using ClusterProfile in Sveltos\nDESCRIPTION: This ClusterProfile deploys a Secret to each production cluster, configuring Sveltos to connect to the NATS server. It depends on the `nats` ClusterProfile and uses `clusterSelector` to target production environments. The secret contains the NATS connection details, including URL, subjects, and authorization information.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-deploy-sveltos-nats-secret\nspec:\n  dependsOn:\n  - nats\n  clusterSelector:\n    matchLabels:\n      env: production\n  policyRefs:\n  - name: deploy-sveltos-nats-secret\n    namespace: default\n    kind: Secret\n---\napiVersion: v1\ndata:\n  sveltos-nats: YXBpVmVyc2lvbjogdjEKZGF0YToKICBzdmVsdG9zLW5hdHM6IGV3b2dJQ0p1WVhSeklqb0tJQ0FnZXdvZ0lDQWdJQ0pqYjI1bWFXZDFjbUYwYVc5dUlqb0tDWHNLQ1NBZ0lDQWlkWEpzSWpvZ0ltNWhkSE02THk5dVlYUnpMbTVoZEhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3Nk5ESXlNaUlzQ2drZ0lDQWdJbk4xWW1wbFkzUnpJam9nV3dvSkNTSjFjMlZ5TFc5d1pYSmhkR2x2YmlJS0NTQWdJQ0JkTEFvSklDQWdJQ0poZFhSb2IzSnBlbUYwYVc5dUlqb2dld29KQ1NKMWMyVnlJam9nZXdvSkNTQWdJQ0FpZFhObGNpSTZJQ0poWkcxcGJpSXNDZ2tKSUNBZ0lDSndZWE56ZDI5eVpDSTZJQ0p0ZVMxd1lYTnpkMjl5WkNJS0NRbDlDZ2tnSUNBZ2ZRb0pmUW9nSUNCOUNuMEsKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHN2ZWx0b3MtbmF0cwogIG5hbWVzcGFjZTogcHJvamVjdHN2ZWx0b3MKdHlwZTogT3BhcXVlCg==\nkind: Secret\nmetadata:\n  name: deploy-sveltos-nats-secret\n  namespace: default\ntype: addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Listing Registered Sveltos Clusters\nDESCRIPTION: Command to display all registered SveltosClusters across all namespaces, showing their ready status and Kubernetes version. This helps identify clusters that might not be properly connected to the management cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get sveltosclusters -A\n```\n\n----------------------------------------\n\nTITLE: Advanced Cluster Selection with matchExpressions in Sveltos Profiles\nDESCRIPTION: Example of using matchExpressions in the clusterSelector to create more complex selection criteria. This will match clusters that have the 'env' label set to either 'staging' or 'production'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nclusterSelector:\n  matchExpressions:\n  - {key: env, operator: In, values: [staging, production]}\n```\n\n----------------------------------------\n\nTITLE: Configuring Microsoft Teams Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that sends Microsoft Teams notifications when add-ons are deployed to clusters with the 'env=fv' label. This requires a secret containing the Teams webhook URL.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n  notifications:\n  - name: teams\n    type: Teams\n    notificationRef:\n      apiVersion: v1\n      kind: Secret\n      name: teams\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterProfile and Displaying Add-ons in Bash\nDESCRIPTION: This snippet demonstrates how to apply the ClusterProfile YAML file and then use sveltosctl to display the deployed add-ons across clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/addons.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f \"clusterprofile_kyverno.yaml\"\n\n$ sveltosctl show addons\n\n+--------------------------+---------------+-----------+----------------+---------+-------------------------------+------------------+\n|         CLUSTER          | RESOURCE TYPE | NAMESPACE |      NAME      | VERSION |             TIME              | CLUSTER PROFILES |\n+--------------------------+---------------+-----------+----------------+---------+-------------------------------+------------------+\n| projectsveltos/cluster12 | helm chart    | kyverno   | kyverno-latest | 3.2.5   | 2023-12-16 00:14:17 -0800 PST | kyverno          |\n| projectsveltos/cluster13 | helm chart    | kyverno   | kyverno-latest | 3.2.5   | 2023-12-16 00:14:17 -0800 PST | kyverno          |\n+--------------------------+---------------+-----------+----------------+---------+-------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Displaying Add-ons with Sveltosctl CLI in Bash\nDESCRIPTION: Executes the 'show addons' command using sveltosctl to display the deployed Kubernetes add-ons in clusters managed by Sveltos. It lists add-ons by cluster and includes filtering options based on namespace, cluster name, and ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/visibility.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons\n+-------------------------------------+---------------+-----------+----------------+---------+-------------------------------+------------------+\n|               CLUSTER               | RESOURCE TYPE | NAMESPACE |      NAME      | VERSION |             TIME              | CLUSTER PROFILE |\n+-------------------------------------+---------------+-----------+----------------+---------+-------------------------------+------------------+\n| default/sveltos-management-workload | helm chart    | kyverno   | kyverno-latest | v2.5.0  | 2022-09-30 11:48:45 -0700 PDT | clusterprofile1   |\n| default/sveltos-management-workload | :Pod          | default   | nginx          | N/A     | 2022-09-30 13:41:05 -0700 PDT | clusterprofile2   |\n+-------------------------------------+---------------+-----------+----------------+---------+-------------------------------+------------------+\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons --help\nUsage:\n  sveltosctl show features [options] [--namespace=<name>] [--cluster=<name>] [--clusterprofile=<name>] [--verbose]\n\n     --namespace=<name>      Show features deployed in clusters in this namespace. If not specified all namespaces are considered.\n     --cluster=<name>        Show features deployed in cluster with name. If not specified all cluster names are considered.\n     --clusterprofile=<name> Show features deployed because of this clusterprofile. If not specified all clusterprofile names are considered.\n```\n\n----------------------------------------\n\nTITLE: Defining GitOps ClusterProfile for Kustomize\nDESCRIPTION: YAML configuration for a ClusterProfile that integrates with FluxCD to deploy Kustomize manifests from a Git repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_flux.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux-system\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  kustomizationRefs:\n  - namespace: flux-system\n    name: flux-system\n    kind: GitRepository\n    path: ./helloWorld/\n    targetNamespace: eng\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining RoleRequest in Sveltos YAML\nDESCRIPTION: This YAML snippet defines a RoleRequest custom resource used in Sveltos for granting permissions to tenant admins. Dependencies include a management cluster and configured service accounts. Key parameters include `serviceAccountName`, `serviceAccountNamespace`, `clusterSelector`, and `roleRefs`. The output of processing this YAML is the assignment of permissions to specific tenant admins based on cluster labels.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/use_cases/use_case_multi-tenancy.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: RoleRequest\nmetadata:\n  name: full-access\nspec:\n  serviceAccountName: \"eng\"\n  serviceAccountNamespace: \"default\"\n  clusterSelector:\n    matchLabels:\n      env: prod\n  roleRefs:\n  - name: full-access\n    namespace: default\n    kind: ConfigMap\n\n```\n\n----------------------------------------\n\nTITLE: Defining a ClusterProfile with References to ConfigMap and Secret\nDESCRIPTION: YAML definition for a ClusterProfile that references both the nginx ConfigMap and the calico Secret. This profile will deploy both resources to any cluster with the label 'env: fv'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_deploy_nginx.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - name: nginx\n    namespace: default\n    kind: ConfigMap\n  - name: calico\n    namespace: default\n    kind: Secret\nEOF\n```\n\n----------------------------------------\n\nTITLE: Inspecting ClusterSummary Status\nDESCRIPTION: Command to extract and display the status section of a specific ClusterSummary, which contains information about add-on deployment success or failure. This helps diagnose issues with add-on deployments to managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get clustersummary <clustersummary name> -n <clustersummary namespace> -o jsonpath='{.status}'\n```\n\n----------------------------------------\n\nTITLE: Create Namespace using EventSource, EventTrigger and ConfigMap\nDESCRIPTION: This configuration uses an EventSource, EventTrigger, and ConfigMap to automatically create or delete a namespace based on user login/logout CloudEvents. The EventSource listens for `user-operation` events. The EventTrigger selects clusters labeled with `env: production` and triggers namespace creation or deletion based on the CloudEvent type.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: user-operation\nspec:\n  messagingMatchCriteria:\n  - subject: \"user-operation\"\n    cloudEventSource: \"auth.example.com\"\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: manage-namespace\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: production\n  eventSourceName: user-operation\n  oneForEvent: true\n  syncMode: ContinuousWithDriftDetection\n  cloudEventAction: '{{if eq .CloudEvent.type \"auth.example.com.logout\"}}Delete{{else}}Create{{end}}'\n  policyRefs:\n  - name: namespace\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: namespace\n  namespace: default\n  annotations:\n    projectsveltos.io/instantiate: ok\ndata:\n  namespace.yaml: |-\n    kind: Namespace\n    apiVersion: v1\n    metadata:\n      name: {{ .CloudEvent.subject }}\n```\n\n----------------------------------------\n\nTITLE: Comparing snapshots using sveltosctl with raw diff\nDESCRIPTION: This command uses sveltosctl to compare two snapshots and display the raw diff output, showing the exact changes made to the Kubernetes configuration. It specifies the snapshot policy, timestamps of the snapshots to compare, and includes the --raw-diff flag.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl snapshot diff --snapshot=hourly --from-sample=2023-08-26:05:00:00 --to-sample=2023-08-26:05:20:00 --raw-diff\n--- /Service test/redis-follower from /collection/snapshot/hourly/2023-08-26:05:00:00\n+++ /Service test/redis-follower from /collection/snapshot/hourly/2023-08-26:05:20:00\n@@ -13,7 +13,7 @@\n    # the port that this service should serve on\n  - port: 6379\n  selector:\n-    app: redis\n+    app: redis-follower\n    role: follower\n    tier: backend\n```\n\n----------------------------------------\n\nTITLE: Listing snapshots using sveltosctl\nDESCRIPTION: This command uses sveltosctl to list available snapshots, displaying the snapshot policy and creation date. This helps in identifying available configuration snapshots for comparison or rollback.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl snapshot list \n+-----------------+---------------------+\n| SNAPSHOT POLICY |        DATE         |\n+-----------------+---------------------+\n| hourly          | 2023-08-26:05:00:00 |\n+-----------------+---------------------+\n```\n\n----------------------------------------\n\nTITLE: Using sveltosctl to Display Deployment Status Across Clusters\nDESCRIPTION: This command uses the sveltosctl utility to show the status of all deployments across managed clusters. The output displays cluster names, deployment information, namespaces, and health status messages.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show resources --kind=deployment \n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx Ingress with Dependency on Cert-Manager in Sveltos\nDESCRIPTION: This YAML defines a ClusterProfile that deploys nginx ingress to clusters with the 'env=fv' label. It specifies a dependency on the cert-manager ClusterProfile, ensuring cert-manager is fully deployed and functional before nginx ingress installation begins.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on_with_health_checks.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: ingress-nginx\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kubernetes.github.io/ingress-nginx\n    repositoryName:   ingress-nginx\n    chartName:        ingress-nginx/ingress-nginx\n    chartVersion:     \"4.8.4\"\n    releaseName:      ingress-nginx\n    releaseNamespace: ingress-nginx\n    helmChartAction:  Install\n  dependsOn:\n  - cert-manager\n```\n\n----------------------------------------\n\nTITLE: Deploying and Validating Cert-Manager with Sveltos ClusterProfile\nDESCRIPTION: This YAML defines a ClusterProfile that deploys cert-manager to clusters with the 'env=fv' label. It includes health validation to ensure all deployments in the cert-manager namespace are fully operational before marking the profile as provisioned.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on_with_health_checks.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: cert-manager\nspec:\n  clusterSelector:\n    matchLabels: \n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://charts.jetstack.io\n    repositoryName:   jetstack\n    chartName:        jetstack/cert-manager\n    chartVersion:     v1.13.2\n    releaseName:      cert-manager\n    releaseNamespace: cert-manager\n    helmChartAction:  Install\n    values: |\n      installCRDs: true\n  validateHealths:\n  - name: deployment-health\n    featureID: Helm\n    group: \"apps\"\n    version: \"v1\"\n    kind: \"Deployment\"\n    namespace: cert-manager\n    script: |\n      function evaluate()\n        local hs = {healthy = false, message = \"available replicas not matching requested replicas\"}\n        if obj.status and obj.status.availableReplicas ~= nil and obj.status.availableReplicas == obj.spec.replicas then\n          hs.healthy = true\n        end\n        return hs\n      end\n```\n\n----------------------------------------\n\nTITLE: Deploying Prometheus and Grafana Helm Charts in Order\nDESCRIPTION: ClusterProfile configuration that demonstrates ordered deployment of Prometheus and Grafana helm charts. Prometheus chart is deployed first, followed by Grafana chart, using a continuous sync mode.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/manifest_order.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: prometheus-grafana\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://prometheus-community.github.io/helm-charts\n    repositoryName:   prometheus-community\n    chartName:        prometheus-community/prometheus\n    chartVersion:     26.0.0\n    releaseName:      prometheus\n    releaseNamespace: prometheus\n    helmChartAction:  Install\n  - repositoryURL:    https://grafana.github.io/helm-charts\n    repositoryName:   grafana\n    chartName:        grafana/grafana\n    chartVersion:     8.6.4\n    releaseName:      grafana\n    releaseNamespace: grafana\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Defining Helm Chart Deployment in ClusterProfile YAML\nDESCRIPTION: This YAML snippet illustrates how to specify a Helm chart deployment in the helmCharts field of a ClusterProfile, including repository details, chart information, and deployment options.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate Health Check Detection in Sveltos\nDESCRIPTION: YAML configuration for a HealthCheck resource that monitors cert-manager certificates and detects degraded status. The configuration includes a Lua function that evaluates certificate conditions and reports degraded certificates based on their Ready status.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_degrade_certificate_notification.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\nname: failed-cert\nspec:\n  resourceSelectors:\n  - group: \"cert-manager.io\"\n    version: \"v1\"\n    kind: \"Certificate\"\n  evaluateHealth: |\n    function evaluate()\n      local statuses = {}\n\n      for _,resource in ipairs(resources) do\n        if resource.status ~= nil then\n          if resource.status.conditions ~= nil then\n            for i, condition in ipairs(resource.status.conditions) do\n              if condition.type == \"Ready\" and condition.status == \"False\" then\n                status = \"Degraded\"\n                message = condition.message\n                table.insert(statuses, {resource=resource, status = status, message = message})\n              end\n            end\n          end\n        end\n      end\n\n      local hs = {}\n      if #statuses > 0 then\n        hs.resources = statuses \n      end\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile with Dynamic ConfigMap Selection in Sveltos\nDESCRIPTION: This YAML shows a ClusterProfile that uses templating to dynamically select a ConfigMap based on the cluster name. It demonstrates how to use cluster metadata in templates to customize configurations for different clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: hello-world-with-values\nspec:\n  clusterSelector:\n    matchLabels:\n      env: civo\n  kustomizationRefs:\n  - deploymentType: Remote\n    kind: GitRepository\n    name: flux-system\n    namespace: flux-system\n    path: ./template/helloWorld/\n    targetNamespace: eng\n    valuesFrom:\n    - kind: ConfigMap\n      name: hello-world-{{ .Cluster.metadata.name }}\n      namespace: civo\n```\n\n----------------------------------------\n\nTITLE: Listing Deployed Sveltos Add-ons\nDESCRIPTION: Command using sveltosctl to show all add-ons deployed by Sveltos across all managed clusters. An empty result indicates that no add-ons have been successfully deployed, pointing to potential configuration issues.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons\n```\n\n----------------------------------------\n\nTITLE: Registering a Cluster with sveltosctl Using Context\nDESCRIPTION: This command registers a cluster with Sveltos using the sveltosctl CLI, specifying the namespace, cluster name, context name, and labels. This approach is used when the kubeconfig has multiple contexts.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl register cluster \\\n    --namespace=<namespace> \\\n    --cluster=<cluster name> \\\n    --fleet-cluster-context=<context name> \\\n    --labels=key1=value1,key2=value2\n```\n\n----------------------------------------\n\nTITLE: Defining a ClusterProfile for Kustomize Deployment in Sveltos\nDESCRIPTION: This YAML defines a ClusterProfile that uses Flux's GitRepository to deploy Kustomize resources to clusters matching the specified label selector. It configures continuous synchronization and targets resources from the 'helloWorld' directory to the 'eng' namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: hello-world\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  kustomizationRefs:\n  - namespace: flux2\n    name: flux2\n    kind: GitRepository\n    path: ./helloWorld/\n    targetNamespace: eng\n```\n\n----------------------------------------\n\nTITLE: Defining Kyverno Installation ClusterProfile\nDESCRIPTION: This YAML defines a ClusterProfile for installing Kyverno using a Helm chart. It specifies the chart details, repository, and release information.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  helmCharts:\n  - chartName: kyverno/kyverno\n    chartVersion: v3.3.3\n    helmChartAction: Install\n    releaseName: kyverno-latest\n    releaseNamespace: kyverno\n    repositoryName: kyverno\n    repositoryURL: https://kyverno.github.io/kyverno/\n```\n\n----------------------------------------\n\nTITLE: Referencing Policies in Sveltos Profiles\nDESCRIPTION: Example of the policyRefs field which references ConfigMaps and Secrets containing Kubernetes resources to deploy. This shows both local and remote deployment types with different resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npolicyRefs:\n- kind: Secret\n  name: my-secret-1\n  namespace: my-namespace-1\n  deploymentType: Local\n- kind: Remote\n  name: my-configmap-1\n  namespace: my-namespace-1\n  deploymentType: Remote\n```\n\n----------------------------------------\n\nTITLE: Configuring Policy References in ClusterProfile YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the policyRefs field to reference ConfigMaps and Secrets containing Kubernetes resources for deployment, specifying deployment types and namespaces.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npolicyRefs:\n- kind: Secret\n  name: my-secret-1\n  namespace: my-namespace-1\n  deploymentType: Local\n- kind: Remote\n  name: my-configmap-1\n  namespace: my-namespace-1\n  deploymentType: Remote\n```\n\n----------------------------------------\n\nTITLE: Creating SveltosCluster Resource\nDESCRIPTION: This YAML snippet defines a SveltosCluster resource that represents the managed cluster within Sveltos. It specifies the necessary metadata, including the cluster name and namespace, as well as labels to manage deployments.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: SveltosCluster\nmetadata:\n    name: YOUR-CLUSTER-NAME\n    namespace: YOUR-CLUSTER-NAMESPACE\n    labels:\n        foo: bar\n        sveltos-agent: present\n```\n\n----------------------------------------\n\nTITLE: Defining EventSource for LoadBalancer Service Detection\nDESCRIPTION: YAML configuration that creates an EventSource to monitor Services with LoadBalancer IP addresses. Uses Lua evaluation function to check for loadBalancer.ingress presence.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_cross_cluster_configuration.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: load-balancer-service\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n  evaluate: |\n    function evaluate()\n      hs = {}\n      hs.matching = false\n      hs.message = \"\"\n      if obj.status.loadBalancer.ingress ~= nil then\n        hs.matching = true\n      end\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: Detecting Helm Chart Changes with sveltosctl\nDESCRIPTION: Shows how Sveltos can detect changes to deployed Helm charts. The output provides information about chart version upgrades and value changes across different namespaces.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/dryrun.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show dryrun           \n+-----------------------------+---------------+------------+----------------+---------------+--------------------------------+-----------------------------------+\n|           CLUSTER           | RESOURCE TYPE | NAMESPACE  |      NAME      |    ACTION     |            MESSAGE             |              PROFILE              |\n+-----------------------------+---------------+------------+----------------+---------------+--------------------------------+-----------------------------------+\n| default/clusterapi-workload | helm release  | kyverno    | kyverno-latest | Update Values | use --raw-diff to see full     | ClusterProfile/deploy-kyverno     |\n|                             |               |            |                |               | diff for helm values           |                                   |\n| default/clusterapi-workload | helm release  | prometheus | prometheus     | Upgrade       | Current version: \"23.4.0\".     | ClusterProfile/prometheus-grafana |\n|                             |               |            |                |               | Would move to version:         |                                   |\n|                             |               |            |                |               | \"26.0.0\"                       |                                   |\n| default/clusterapi-workload | helm release  | grafana    | grafana        | Upgrade       | Current version: \"6.58.9\".     | ClusterProfile/prometheus-grafana |\n|                             |               |            |                |               | Would move to version: \"8.6.4\" |                                   |\n+-----------------------------+---------------+------------+----------------+---------------+--------------------------------+-----------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Complex Template Modifications in Kubernetes with Sveltos\nDESCRIPTION: Shows how to modify container images within a deployment template using Sveltos. The example iterates over container specifications to change the image tag, providing a practical demonstration of dynamic template manipulations capable of processing all containers within a deployment structure.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/examples.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: info\n      namespace: default\n      annotations:\n        projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\n    data:\n      secret.yaml: |\n        {{ $currentContainers := (getField \"NginxDeployment\" \"spec.template.spec.containers\") }}\n        {{ $modifiedContainers := list }}\n        {{- range $element := $currentContainers }}\n          {{ $modifiedContainers = append $modifiedContainers (chainSetField $element \"image\" \"nginx:1.13\" ) }}\n        {{- end }}\n        {{ setField \"NginxDeployment\" \"spec.template.spec.containers\" $modifiedContainers }}\n```\n\n----------------------------------------\n\nTITLE: Specifying ClusterProfile Dependencies with DependsOn - YAML\nDESCRIPTION: This snippet illustrates the configuration of the 'DependsOn' property in a ClusterProfile YAML. It specifies that ClusterProfile A relies on another ClusterProfile B, ensuring that applications in B are deployed before those in A. The environment must support ClusterProfile management and ensure Sveltos can resolve dependencies. The primary parameter is a list of dependent profiles. The deployment is delayed until dependencies are satisfied, preventing conflicting changes and ensuring logical deployment sequences.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: clusterprofile-a\nspec:\n  dependsOn:\n  - clusterprofile_b\n\n```\n\n----------------------------------------\n\nTITLE: Defining Kyverno Admission Policies ClusterProfile with Dependency\nDESCRIPTION: This YAML defines a ClusterProfile for Kyverno admission policies that depends on another ClusterProfile named 'kyverno'. It targets production clusters and includes references to ConfigMaps containing Kyverno policies.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno-admission-policies\nspec:\n  clusterSelector:\n    matchLabels:\n      env: production\n  dependsOn:\n  - kyverno\n  policyRefs:\n  - kind: ConfigMap\n    name: disallow-latest-tag\n    namespace: default\n  - kind: ConfigMap\n    name: restrict-wildcard-verbs\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Configuring Tenant Cluster Reservation in Kubernetes\nDESCRIPTION: This YAML example demonstrates how to reserve clusters for a specific tenant using RoleRequest and ConfigMap. It grants full access to clusters with a specific label to a designated service account.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: full-access\n  namespace: default\ndata:\n  role.yaml: |\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRole\n    metadata:\n      name: foo-full-access\n    rules:\n    - apiGroups: [\"*\"]\n      resources: [\"*\"]\n      verbs: [\"*\"]\n\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: RoleRequest\nmetadata:\n  name: full-access\nspec:\n  serviceAccountName: \"foo\"\n  serviceAccountNamespace: \"default\"\n  clusterSelector:\n    matchLabels:\n      org: foo.io\n  roleRefs:\n  - name: full-access\n    namespace: default\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Diffing Snapshots using sveltosctl\nDESCRIPTION: This command uses `sveltosctl snapshot diff` to display the configuration changes between two snapshots. It compares snapshots taken on '2022-10-10' at '22:00:00' and '23:00:00' for the snapshot named 'hourly'. The output shows the changes in Kubernetes resources between those two points in time.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl snapshot diff --snapshot=hourly  --from-sample=2022-10-10:22:00:00 --to-sample=2022-10-10:23:00:00 \n+-------------------------------------+--------------------------+-----------+----------------+----------+------------------------------------+\n|               CLUSTER               |      RESOURCE TYPE       | NAMESPACE |      NAME      |  ACTION  |              MESSAGE               |\n+-------------------------------------+--------------------------+-----------+----------------+----------+------------------------------------+\n| default/sveltos-management-workload | helm release             | mysql     | mysql          | added    |                                    |\n| default/sveltos-management-workload | helm release             | nginx     | nginx-latest   | added    |                                    |\n| default/sveltos-management-workload | helm release             | kyverno   | kyverno-latest | modified | To version: v2.5.0 From            |\n|                                     |                          |           |                |          | version v2.5.3                     |\n| default/sveltos-management-workload | /Pod                     | default   | nginx          | added    |                                    |\n| default/sveltos-management-workload | kyverno.io/ClusterPolicy |           | no-gateway     | modified | To see diff compare ConfigMap      |\n|                                     |                          |           |                |          | default/kyverno-disallow-gateway-2 |\n|                                     |                          |           |                |          | in the from folderwith ConfigMap   |\n|                                     |                          |           |                |          | default/kyverno-disallow-gateway-2 |\n|                                     |                          |           |                |          | in the to folder                   |\n+-------------------------------------+--------------------------+-----------+----------------+----------+------------------------------------+\n\n```\n\n----------------------------------------\n\nTITLE: Modifying Deployment Fields in Kubernetes with Sveltos\nDESCRIPTION: Illustrates the usage of Sveltos's setField and removeField functions to manipulate deployment resources across Kubernetes clusters. It includes an example where the number of replicas of a deployment is modified and another where the replicas field is removed. These examples highlight how templates can adjust specific resource fields to match cluster requirements.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/examples.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  namespace: default\n  labels:\n    apps: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 1\nEOF\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: production\n  templateResourceRefs:\n  - resource:\n      apiVersion: apps/v1\n      kind: Deployment\n      name: nginx-deployment\n      namespace: default\n    identifier: NginxDeployment\n  policyRefs:\n  - kind: ConfigMap\n    name: info\n    namespace: default\n```\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: info\n      namespace: default\n      annotations:\n        projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\n    data:\n      secret.yaml: |\n        {{ setField \"NginxDeployment\" \"spec.replicas\" (int64 5) }}\n```\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: info\n      namespace: default\n      annotations:\n        projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\n    data:\n      secret.yaml: |\n        {{ removeField \"NginxDeployment\" \"spec.replicas\" }}\n```\n\n----------------------------------------\n\nTITLE: Creating Kyverno ClusterProfile in YAML\nDESCRIPTION: This snippet defines a ClusterProfile for deploying Kyverno using a Helm chart. It specifies the cluster selector, sync mode, and Helm chart details.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/addons.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Adding Environment Label to Deployments using Strategic Merge Patch\nDESCRIPTION: ClusterProfile configuration that demonstrates adding an 'environment: production' label to all deployments using a strategic merge patch. Includes Kyverno helm chart installation and policy references.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/post-renderer-patches.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n  policyRefs:\n  - name: disallow-latest\n    namespace: default\n    kind: ConfigMap\n  patches:\n  - target:\n      group: apps\n      version: v1\n      kind: Deployment\n      name: \".*\"\n    patch: |\n      - op: add\n        path: /metadata/labels/environment\n        value: production\n```\n\n----------------------------------------\n\nTITLE: Complete ClusterProfile with Rolling Update Strategy\nDESCRIPTION: Full ClusterProfile configuration example demonstrating rolling update strategy with 30% maxUpdate setting, Kyverno helm chart deployment, and health validation using Lua script.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/rolling_update_strategy.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  maxUpdate: 30%\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n    values: |\n      admissionController:\n        replicas: 1\n  validateHealths:\n  - name: deployment-health\n    featureID: Helm\n    group: \"apps\"\n    version: \"v1\"\n    kind: \"Deployment\"\n    namespace: kyverno\n    script: |\n      function evaluate()\n        hs = {}\n        hs.healthy = false\n        hs.message = \"available replicas not matching requested replicas\"\n        if obj.status ~= nil then\n          if obj.status.availableReplicas ~= nil then\n            if obj.status.availableReplicas == obj.spec.replicas then\n              hs.healthy = true\n            end\n          end\n        end\n        return hs\n      end\n```\n\n----------------------------------------\n\nTITLE: Sample ClusterProfile for deploying registry secrets to managed clusters\nDESCRIPTION: Example YAML configuration showing how to create a ClusterProfile and ConfigMap to deploy image pull secrets to air-gapped managed clusters using Sveltos' templating functionality.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/air_gapped_installation.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      environment: air-gapped\n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: image-pull-secret\n      namespace: default\n    identifier: ImagePullSecret\n  policyRefs:\n  - kind: ConfigMap\n    name: info\n    namespace: default\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: info\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\ndata:\n  secret.yaml: |\n    {{ copy \"ImagePullSecret\" }}\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile to install Flux\nDESCRIPTION: This ClusterProfile installs Flux using Helm. It specifies the chart name, version, repository, release name, and namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux\nspec:\n  clusterSelector:\n    matchLabels:\n      cluster: mgmt\n  helmCharts:\n  - chartName: flux2/flux2\n    chartVersion: 2.12.4\n    helmChartAction: Install\n    releaseName: flux2\n    releaseNamespace: flux2\n    repositoryName: flux2\n    repositoryURL: https://fluxcd-community.github.io/helm-charts\n\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Service with Load Balancer Configuration in YAML\nDESCRIPTION: Example Service definition with a load balancer class label that will be used to trigger automation. The label 'lb.buttah.cloud/class' with value 'internet' indicates this service needs external load balancer configuration.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    lb.buttah.cloud/class: internet\n  name: svc-a\n  namespace: test\nspec:\n  type: LoadBalancer\n  ports:\n  - name: test\n    port: 1234\n    protocol: TCP\n    targetPort: test\n  selector:\n    app.kubernetes.io/name: test\n```\n\n----------------------------------------\n\nTITLE: Selecting Clusters with matchLabels in Sveltos Profiles\nDESCRIPTION: Example of using the clusterSelector field with matchLabels to target clusters based on specific labels. This selector will match clusters that have the label 'env' set to 'prod'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nclusterSelector:\n    matchLabels:\n      env: prod\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile definition with templated path\nDESCRIPTION: This ClusterProfile defines a Kustomization deployment from a Git repository, with the path field defined as a template. The template retrieves the value of the annotation named __environment__ from the cluster's metadata.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux-system\nspec:\n  clusterSelector:\n    matchLabels:\n      region: west\n  syncMode: Continuous\n  kustomizationRefs:\n  - namespace: flux2\n    name: flux2\n    kind: GitRepository\n    path: '{{ index .Cluster.metadata.annotations \"environment\" }}/helloWorld'\n    targetNamespace: eng\n\n```\n\n----------------------------------------\n\nTITLE: Deploying OPA Gatekeeper 3.9 ClusterProfile in YAML\nDESCRIPTION: This ClusterProfile configures the deployment of OPA Gatekeeper version 3.9.0 to clusters with the label 'gatekeeper: v3-9'. It uses a Helm chart from the OPA Gatekeeper repository and sets continuous synchronization mode.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/labels_management.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-gatekeeper-3-9\nspec:\n  clusterSelector:\n    matchLabels:\n      gatekeeper: v3-9\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL: https://open-policy-agent.github.io/gatekeeper/charts\n    repositoryName: gatekeeper\n    chartName: gatekeeper/gatekeeper\n    chartVersion:  3.9.0\n    releaseName: gatekeeper\n    releaseNamespace: gatekeeper\n    helmChartAction: Install\n```\n\n----------------------------------------\n\nTITLE: Creating a Login Token for Dashboard Authentication\nDESCRIPTION: Command to create a 24-hour duration login token for the platform-admin service account, which will be used to authenticate with the Sveltos Dashboard.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/dashboard.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create token platform-admin --duration=24h\n```\n\n----------------------------------------\n\nTITLE: Inspecting Sveltos Pod Details for Troubleshooting\nDESCRIPTION: Commands to get detailed information about a specific Sveltos pod, including events and logs, to help diagnose issues with Sveltos components that are not running correctly.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl describe pod <pod-name> -n projectsveltos\n\n$ kubectl logs <pod-name> -n projectsveltos -f\n```\n\n----------------------------------------\n\nTITLE: Defining Helm Charts in Sveltos Profiles\nDESCRIPTION: Example of the helmCharts field which specifies helm charts to be deployed to matching clusters. This example deploys Kyverno with custom values for admission controller replicas.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n    values: |\n      admissionController:\n        replicas: 1\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile and ConfigMap for Resource Deployment\nDESCRIPTION: This YAML snippet describes a ClusterProfile and a ConfigMap that Sveltos utilizes to deploy resources generated by the jsonnet files to specified clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  templateResourceRefs:\n  - resource:\n      apiVersion: extension.projectsveltos.io/v1beta1\n      kind: JsonnetSource\n      name: jsonnetsource-flux\n      namespace: default\n    identifier: JsonnetSource\n  policyRefs:\n  - kind: ConfigMap\n    name: jsonnet-resources\n    namespace: default\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: jsonnet-resources\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\ndata:\n  resource.yaml: |\n    {{ (getResource \"JsonnetSource\").status.resources }}\n```\n\n----------------------------------------\n\nTITLE: Defining RoleRequest for Tenant Access in Kubernetes\nDESCRIPTION: This YAML snippet defines a RoleRequest custom resource to grant permissions to tenant admins. It specifies the service account, cluster selector, and role references for access control.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: RoleRequest\nmetadata:\n  name: full-access\nspec:\n  serviceAccountName: \"eng\"\n  serviceAccountNamespace: \"default\"\n  clusterSelector:\n    matchLabels:\n      dep: eng\n  roleRefs:\n  - name: full-access\n    namespace: default\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterProfile with Reloader for Rolling Upgrades in Kubernetes\nDESCRIPTION: YAML configuration for a ClusterProfile that enables the reloader feature to monitor ConfigMap changes and trigger rolling upgrades for resources that mount them.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/rolling_upgrade.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: nginx\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  reloader: true\n  policyRefs:\n  - name: nginx-data\n    namespace: default\n    kind: ConfigMap\n  - name: nginx\n    namespace: default\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Defining HealthCheck for Pods with Outdated Secrets in Kubernetes\nDESCRIPTION: This YAML defines a HealthCheck resource that identifies pods accessing secrets that have been modified since the pod's creation. It uses Lua for complex evaluation logic to ensure data integrity and security across namespaces.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/different_resources.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# This HealthChech instance finds all Pods instances in all namespaces mounting Secrets.\n# It identifies and reports any pods that are accessing Secrets that have been modified\n# since the pod's creation.\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n    name: list-pods-with-outdated-secret-data\nspec:\n    resourceSelectors:\n    - kind: Pod\n      group: \"\"\n      version: v1\n    - kind: Secret\n      group: \"\"\n      version: v1\n    evaluateHealth: |\n      function getKey(namespace, name)\n        return namespace .. \":\" .. name\n      end\n\n      --  Convert creationTimestamp \"2023-12-12T09:35:56Z\"\n      function convertTimestampString(timestampStr)\n        local convertedTimestamp = string.gsub(\n          timestampStr,\n          '(%d+)-(%d+)-(%d+)T(%d+):(%d+):(%d+)Z',\n          function(y, mon, d, h, mi, s)\n            return os.time({\n              year = tonumber(y),\n              month = tonumber(mon),\n              day = tonumber(d),\n              hour = tonumber(h),\n              min = tonumber(mi),\n              sec = tonumber(s)\n            })\n          end\n        )\n        return convertedTimestamp\n      end\n\n      function getLatestTime(times)\n        local latestTime = nil\n        for _, time in ipairs(times) do\n          if latestTime == nil or os.difftime(tonumber(time), tonumber(latestTime)) > 0 then\n            latestTime = time\n          end\n        end\n        return latestTime\n      end\n\n      function getSecretUpdateTime(secret)\n        local times = {}\n        if secret.metadata.managedFields ~= nil then\n          for _, mf in ipairs(secret.metadata.managedFields) do\n            if mf.time ~= nil then\n              table.insert(times, convertTimestampString(mf.time))\n            end\n          end\n        end\n\n        return getLatestTime(times)\n      end\n\n      function isPodOlderThanSecret(podTimestamp, secretTimestamp)\n        timeDifference = os.difftime(tonumber(podTimestamp), tonumber(secretTimestamp))\n        return  timeDifference < 0\n      end\n\n      function hasOutdatedSecret(pod, secrets)\n        podTimestamp = convertTimestampString(pod.metadata.creationTimestamp)\n\n        if pod.spec.containers ~= nil then\n          for _, container in ipairs(pod.spec.containers) do\n\n            if container.env ~= nil then\n              for _, env in ipairs(container.env) do\n                if env.valueFrom ~= nil and env.valueFrom.secretKeyRef ~= nil then\n                  key = getKey(pod.metadata.namespace, env.valueFrom.secretKeyRef.name)\n                  if isPodOlderThanSecret(podTimestamp, secrets[key]) then\n                    return true, \"secret \" .. key .. \" has been updated after pod creation\"\n                  end\n                end\n              end\n            end  \n\n            if  container.envFrom ~= nil then\n              for _, envFrom in ipairs(container.envFrom) do\n                if envFrom.secretRef ~= nil then\n                  key = getKey(pod.metadata.namespace, envFrom.secretRef.name)\n                  if isPodOlderThanSecret(podTimestamp, secrets[key]) then\n                    return true, \"secret \" .. key .. \" has been updated after pod creation\"\n                  end\n                end\n              end  \n            end\n          end\n        end\n\n        if pod.spec.initContainers ~= nil then\n          for _, initContainer in ipairs(pod.spec.initContainers) do\n            if initContainer.env ~= nil then\n              for _, env in ipairs(initContainer.env) do\n                if env.valueFrom ~= nil and env.valueFrom.secretKeyRef ~= nil then\n                  key = getKey(pod.metadata.namespace, env.valueFrom.secretKeyRef.name)\n                  if isPodOlderThanSecret(podTimestamp, secrets[key]) then\n                    return true, \"secret \" .. key .. \" has been updated after pod creation\"\n                  end\n                end\n              end\n            end\n          end\n        end\n\n        if pod.spec.volumes ~= nil then  \n          for _, volume in ipairs(pod.spec.volumes) do\n            if volume.secret ~= nil then\n              key = getKey(pod.metadata.namespace, volume.secret.secretName)\n              if isPodOlderThanSecret(podTimestamp, secrets[key]) then\n                return true, \"secret \" .. key .. \" has been updated after pod creation\"\n              end\n            end\n\n            if volume.projected ~= nil and volume.projected.sources ~= nil then\n              for _, projectedResource in ipairs(volume.projected.sources) do\n                if projectedResource.secret ~= nil then\n                  key = getKey(pod.metadata.namespace, projectedResource.secret.name)\n                  if isPodOlderThanSecret(podTimestamp, secrets[key]) then\n                    return true, \"secret \" .. key .. \" has been updated after pod creation\"\n                  end\n                end\n              end\n            end\n          end\n        end\n        \n        return false\n      end      \n\n      function evaluate()\n        local hs = {}\n        hs.message = \"\"\n\n        local pods = {}\n        local secrets = {}\n\n        -- Separate secrets and pods\n        for _, resource in ipairs(resources) do\n          local kind = resource.kind\n          if kind == \"Secret\" then\n            key = getKey(resource.metadata.namespace, resource.metadata.name)\n            updateTimestamp = getSecretUpdateTime(resource)\n            secrets[key] = updateTimestamp\n          elseif kind == \"Pod\" then\n            table.insert(pods, resource)\n          end\n        end\n\n        local podsWithOutdatedSecret = {}\n\n        for _, pod in ipairs(pods) do\n          outdatedData, message = hasOutdatedSecret(pod, secrets)\n          if outdatedData then\n            table.insert(podsWithOutdatedSecret, {resource= pod, status=\"Degraded\", message = message})\n          end\n        end\n\n        if #podsWithOutdatedSecret > 0 then\n          hs.resources = podsWithOutdatedSecret\n        end\n        return hs\n      end  \n```\n\n----------------------------------------\n\nTITLE: Creating Sveltos ClusterProfile for Kyverno Helm Chart Deployment\nDESCRIPTION: This YAML snippet defines a Sveltos ClusterProfile that installs the Kyverno Helm chart from its official repository. It targets clusters with the 'env=fv' label and specifies continuous synchronization.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_kyverno.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\nEOF\n```\n\n----------------------------------------\n\nTITLE: Validating Kyverno Deployment in Workload Cluster\nDESCRIPTION: Commands to switch to the workload cluster context and verify that the Kyverno pods are running correctly after deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config set-context kind-clusterapi-workload\n$ kind export kubeconfig --name clusterapi-workload\n\n$ kubectl get pods -n kyverno\nNAME                                             READY   STATUS    RESTARTS   AGE\nkyverno-admission-controller-6f6589ffb7-xh7dq    1/1     Running   0          102s\nkyverno-background-controller-6989c5bf45-mbkbh   1/1     Running   0          102s\nkyverno-cleanup-controller-788ffb4596-w6t46      1/1     Running   0          102s\nkyverno-reports-controller-bfb4856f8-5sd69       1/1     Running   0          102s\n```\n\n----------------------------------------\n\nTITLE: Defining Aggregated Resource Selection with Lua in Sveltos\nDESCRIPTION: This YAML snippet demonstrates how to use the aggregatedSelection field with a Lua script to perform complex filtering across multiple resource types. The example looks for HorizontalPodAutoscalers that don't have matching Deployments.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: sveltos-service\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"apps\"\n    version: \"v1\"\n    kind: \"Deployment\"\n  - kind: HorizontalPodAutoscaler\n    group: \"autoscaling\"\n    version: v2\n  aggregatedSelection: |\n      function getKey(namespace, name)\n        return namespace .. \":\" .. name\n      end\n\n      function evaluate()\n        local hs = {}\n        hs.message = \"\"\n\n        local deployments = {}\n        local autoscalers = {}\n        local deploymentsWithNoAutoscaler = {}\n\n        for _, resource in ipairs(resources) do\n          local kind = resource.kind\n          if kind == \"Deployment\" then\n            key = getKey(resource.metadata.namespace, resource.metadata.name)\n            deployments[key] = true\n          elseif kind == \"HorizontalPodAutoscaler\" then\n            table.insert(autoscalers, resource)\n          end\n        end\n\n        -- Check for each horizontalPodAutoscaler if there is a matching Deployment\n        for _,hpa in ipairs(autoscalers) do\n            key = getKey(hpa.metadata.namespace, hpa.spec.scaleTargetRef.name)\n            if hpa.spec.scaleTargetRef.kind == \"Deployment\" then\n              if not deployments[key] then\n                table.insert(unusedAutoscalers, hpa)\n              end\n            end\n        end\n\n        if #unusedAutoscalers > 0 then\n          hs.resources = unusedAutoscalers\n        end\n        return hs\n      end\n```\n\n----------------------------------------\n\nTITLE: Creating Sveltos ClusterProfile for Kyverno Policies Deployment\nDESCRIPTION: This YAML snippet defines a Sveltos ClusterProfile that deploys Kyverno policies from a Git repository. It depends on the Kyverno Helm chart installation and targets the 'kyverno' directory in the Git repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_kyverno_policies.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno-policies\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - kind: GitRepository\n    name: flux-system\n    namespace: flux-system\n    path: kyverno\n  dependsOn: \n  - deploy-kyverno\nEOF\n```\n\n----------------------------------------\n\nTITLE: Adding Drift Detection Config Argument to Addon Controller (YAML)\nDESCRIPTION: Example of the argument needed to configure the addon-controller deployment to use a custom drift detection configuration. This argument points to the ConfigMap containing patches for the drift-detection-manager.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/configuration_drift.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- args:\n  ...\n  - --drift-detection-config=drift-detection\n```\n\n----------------------------------------\n\nTITLE: Creating RoleRequest for Service Account 'hr'\nDESCRIPTION: This RoleRequest grants the 'hr' service account, defined in the 'default' namespace, access to the 'bar-resource' namespace in all clusters matching the 'env=internal' label selector. It references a ConfigMap (bar-shared-access) containing the RBAC Role.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\n# RoleRequest gives service account 'hr' access to the namespace\n# 'human-resource' in all clusters matching the label\n# selector env=internal\napiVersion: lib.projectsveltos.io/v1beta1\nkind: RoleRequest\nmetadata:\n  name: bar-access\nspec:                       \n  serviceAccountName: \\\"hr\\\"\n  serviceAccountNamespace: \\\"default\\\"\n  clusterSelector:\n    matchLabels:\n      env: internal\n  roleRefs:\n  - name: bar-shared-access\n    namespace: default\n    kind: ConfigMap\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Flux GitRepository Resource for Kubernetes Add-ons\nDESCRIPTION: This YAML snippet defines a GitRepository resource that Flux uses to sync with a Git repository containing Kubernetes manifests. It specifies the repository URL, branch, and sync interval.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  name: flux-system\n  namespace: flux-system\nspec:\n  interval: 1m0s\n  ref:\n    branch: main\n  secretRef:\n    name: flux-system\n  timeout: 60s\n  url: https://github.com/gianlucam76/yaml_flux.git\n```\n\n----------------------------------------\n\nTITLE: Configuring EventSource for Namespace Monitoring in Kubernetes\nDESCRIPTION: Defines an EventSource that monitors namespaces labeled with 'secret: required' to trigger Secret replication.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/generators.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: requiring-credentials\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Namespace\"\n    labelFilters:\n    - key: secret\n      operation: Equal\n      value: required\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile Configuration for OCI Registry\nDESCRIPTION: This example shows how to configure a ClusterProfile to deploy a Helm chart from an OCI registry. It defines the repository URL, name, chart details, release name, and namespace. The syncMode is set to Continuous, meaning Sveltos will monitor the chart and update the deployment if the chart changes.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: vault\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    oci://registry-1.docker.io/bitnamicharts\n    repositoryName:   oci-vault\n    chartName:        vault\n    chartVersion:     0.7.2\n    releaseName:      vault\n    releaseNamespace: vault\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Displaying Tenant Admin Permissions Using Sveltosctl\nDESCRIPTION: This command uses `sveltosctl` to display the RBAC permissions granted to each tenant admin across managed clusters. It provides a table showing cluster, admin, namespace, API groups, resources, resource names, and verbs.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n\"$ sveltosctl show admin-rbac       \n+---------------------------------------------+-------+----------------+------------+-----------+----------------+-------+\n|                   CLUSTER                   | ADMIN |   NAMESPACE    | API GROUPS | RESOURCES | RESOURCE NAMES | VERBS |\n+---------------------------------------------+-------+----------------+------------+-----------+----------------+-------+\n| Cluster:default/sveltos-management-workload | eng   | build          | *          | *         | *              | *     |\n| Cluster:default/sveltos-management-workload | eng   | ci-cd          | *          | *         | *              | *     |\n| Cluster:default/sveltos-management-workload | hr    | human-resource | *          | *         | *              | *     |\n| SveltosCluster:gke/prod-cluster             | eng   | build          | *          | *         | *              | *     |\n| SveltosCluster:gke/prod-cluster             | eng   | ci-cd          | *          | *         | *              | *     |\n| SveltosCluster:gke/prod-cluster             | hr    | human-resource | *          | *         | *              | *     |\n+---------------------------------------------+-------+----------------+------------+-----------+----------------+-------+\"\n```\n\n----------------------------------------\n\nTITLE: Profile Definition with Kyverno and Lua validation\nDESCRIPTION: This example shows a Profile definition that deploys the Kyverno Helm chart and validates the health of the deployments using a Lua script. The Lua script checks if the number of available replicas matches the requested replicas for each deployment within the kyverno namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\napiVersion: config.projectsveltos.io/v1beta1\nkind: Profile\nmetadata:\n  name: kyverno\n  namespace: eng\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n    validateHealths:\n    - name: deployment-health\n      featureID: Helm\n      group: \\\"apps\\\"\n      version: \\\"v1\\\"\n      kind: \\\"Deployment\\\"\n      namespace: kyverno\n      script: |-\n        function evaluate()\n          hs = {}\n          hs.healthy = false\n          hs.message = \\\"available replicas not matching requested replicas\\\"\n          if obj.status ~= nil then\n            if obj.status.availableReplicas ~= nil then\n              if obj.status.availableReplicas == obj.spec.replicas then\n                hs.healthy = true\n              end\n            end\n          end\n          return hs\n        end\n\"\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterProfile for Nginx Deployment\nDESCRIPTION: YAML definition for a ClusterProfile resource that references the Nginx ConfigMap and targets clusters with the 'env:fv' label.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_nginx.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: nginx-deploy\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  policyRefs:\n  - name: nginx\n    namespace: default\n    kind: ConfigMap\nEOF\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile with Template-based PolicyRef Names\nDESCRIPTION: YAML definition for a ClusterProfile that uses templating in the name field of policyRef. The template dynamically references ConfigMaps based on the cluster name, allowing different configurations for different clusters using a consistent naming pattern.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-nginx\nspec:\n  clusterSelector:\n    matchLabels:\n      env: civo\n  policyRefs:\n  - name: nginx-{{ .Cluster.metadata.name }}\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Configuring EventTrigger for Secret Distribution\nDESCRIPTION: Defines an EventTrigger that processes namespace events and generates configuration for Secret replication to production clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/generators.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: distribute-credentials\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: production\n  eventSourceName: requiring-credentials\n  configMapGenerator:\n  - name: namespaces\n    namespace: default\n    nameFormat: \"{{ .Cluster.metadata.namespace }}-{{ .Cluster.metadata.name }}-namespaces\"  \n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: login-credentials\n      namespace: default\n    identifier: Credentials\n  - resource:\n      apiVersion: v1\n      kind: ConfigMap\n      name: \"{{ .Cluster.metadata.namespace }}-{{ .Cluster.metadata.name }}-namespaces\"\n      namespace: projectsveltos\n    identifier: Namespaces\n  policyRefs:\n  - kind: ConfigMap\n    name: info\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Creating Sveltos ClusterProfile for Nginx Ingress Deployment\nDESCRIPTION: This YAML snippet defines a Sveltos ClusterProfile that references a Flux GitRepository to deploy Nginx Ingress to clusters with the 'env=fv' label. It targets the 'nginx-ingress' directory in the Git repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_nginx_ingress.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-nginx-ingress\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - kind: GitRepository\n    name: flux-system\n    namespace: flux-system\n    path: nginx-ingress\nEOF\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile Configuration with Helm Chart Options\nDESCRIPTION: This example shows how to configure a ClusterProfile to set Helm chart options. The `disableHooks` field within the `options` section is set to `true`. This instructs Sveltos to disable Helm hooks during the deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: XXXX\nspec:\n  ...\n  helmCharts:\n   - repositoryURL:    <REPO URL>\n     repositoryName:   <REPO NAME>\n     chartName:        <CHART NAME>\n     chartVersion:     <CHART VERSION>\n     releaseName:      <...>\n     releaseNamespace: <...>\n     options:\n       disableHooks: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Sveltos to Distribute Secret (yaml)\nDESCRIPTION: This YAML configuration creates a ClusterProfile to distribute the `imported-secret` to managed clusters that match the label selector `env=fv`. It also defines a Secret named `info` that is annotated to indicate Sveltos content is a template.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/external_secret.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n\"cat > clusterprofile_extsecret.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: imported-secret\n      namespace: default\n    identifier: ExternalSecret\n  policyRefs:\n  - kind: Secret\n    name: info\n    namespace: default\n---  apiVersion: v1\nkind: Secret\nmetadata:\n  name: info\n  namespace: default\n  annotations:\n    projectsveltos.io/instantiate: ok  # add annotation to indicate Sveltos content is a template\ntype: addons.projectsveltos.io/cluster-profile\nstringData:\n  secret.yaml: |\n    {{ copy \\\"ExternalSecret\\\" }}\nEOF\"\n```\n\n----------------------------------------\n\nTITLE: ClusterHealthCheck Resource for Kyverno PolicyReports\nDESCRIPTION: This ClusterHealthCheck resource instructs Sveltos which clusters to watch for Kyverno PolicyReports. It uses a cluster selector to match clusters with the label `env: fv` and references the `HealthCheck` resource named `kyverno-policy-reports`.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: kyverno-policy-reports\n    type: HealthCheck\n    livenessSourceRef:\n      kind: HealthCheck\n      apiVersion: lib.projectsveltos.io/v1beta1\n      name: kyverno-policy-reports\n  notifications:\n  - name: event\n    type: KubernetesEvent\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring NGINX Ingress Controller with Security Context\nDESCRIPTION: ClusterProfile that installs NGINX ingress controller and applies a patch to configure security context with read-only root filesystem. Demonstrates modifying container specifications through patches.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/post-renderer-patches.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: nginx\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  helmCharts:\n  - chartName: nginx-stable/nginx-ingress\n    chartVersion: 1.1.3\n    helmChartAction: Install\n    releaseName: nginx-latest\n    releaseNamespace: nginx\n    repositoryName: nginx-stable\n    repositoryURL: https://helm.nginx.com/stable/\n  patches:\n  - patch: |-\n      apiVersion: apps/v1\n      kind: Deployment\n      metadata:\n        name:  nginx-latest-nginx-ingress-controller\n      spec:\n        template:\n          spec:\n            containers:\n            - name: nginx-ingress\n              imagePullPolicy: Always\n              securityContext:\n                readOnlyRootFilesystem: true\n    target:\n      group: apps\n      kind: Deployment\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Deploying Validation and Monitoring Resources with ClusterProfile in YAML\nDESCRIPTION: This YAML snippet defines a ClusterProfile named 'validation-and-monitoring' that deploys Kyverno, Prometheus, and Grafana across all production clusters. It uses HelmCharts to specify the deployment details for each tool.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/tiers.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: validation-and-monitoring\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  continueOnConflict: true\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n  - repositoryURL:    https://prometheus-community.github.io/helm-charts\n    repositoryName:   prometheus-community\n    chartName:        prometheus-community/prometheus\n    chartVersion:     26.0.0\n    releaseName:      prometheus\n    releaseNamespace: prometheus\n    helmChartAction:  Install\n  - repositoryURL:    https://grafana.github.io/helm-charts\n    repositoryName:   grafana\n    chartName:        grafana/grafana\n    chartVersion:     8.6.4\n    releaseName:      grafana\n    releaseNamespace: grafana\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: HealthCheck Resource for Pod Names Based on Deployment\nDESCRIPTION: This HealthCheck resource collects and displays pod names based on a deployment. It filters for Pod resources and uses a Lua script to extract the deployment name from the pod's labels.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n  name: pod-in-deployment\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \\\"\\\"\n    version: v1\n    kind: Pod\n  evaluateHealth: |\n    function setContains(set, key)\n      return set[key] ~= nil\n    end\n\n    function evaluate()\n      hs = {}\n      hs.status = \\\"Healthy\\\"\n      hs.message = \\\"\\\"\n      hs.ignore = true\n      if obj.metadata.labels ~= nil then\n        if setContains(obj.metadata.labels, \\\"app\\\") then\n          if obj.status.phase == \\\"Running\\\" then\n            hs.ignore = false\n            hs.message = \\\"Deployment: \\\" .. obj.metadata.labels[\\\"app\\\"]\n          end\n        end\n      end\n      return hs\n    end\n\"\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMap from Nginx YAML File\nDESCRIPTION: Command to create a ConfigMap resource that contains the Nginx deployment YAML file, which will be referenced by a ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap nginx --from-file=nginx_deploy.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a ClusterSet for Active/Passive Failover - YAML\nDESCRIPTION: Defines a ClusterSet named 'prod' that selects clusters with the label 'env: prod' and limits active clusters to 1 for failover scenarios.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/set.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterSet\nmetadata:\n  name: prod\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  maxReplicas: 1\n\n```\n\n----------------------------------------\n\nTITLE: Creating RoleRequest for Service Account 'eng'\nDESCRIPTION: This RoleRequest grants the 'eng' service account, defined in the 'default' namespace, access to the 'foo-eng' and 'foo-hr' namespaces in all clusters matching the 'env=internal' label selector.  It references a ConfigMap (foo-shared-access) containing the RBAC Roles.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\n# RoleRequest gives the service account 'eng' access to namespaces\n# 'ci-cd' and 'build' in all clusters matching the label\n# selector env=internal\napiVersion: lib.projectsveltos.io/v1beta1\nkind: RoleRequest\nmetadata:\n  name: foo-access\nspec:\n  serviceAccountName: \\\"eng\\\"\n  serviceAccountNamespace: \\\"default\\\"\n  clusterSelector:\n    matchLabels:\n      env: internal\n  roleRefs:\n  - name: foo-shared-access\n    namespace: default\n    kind: ConfigMap\"\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterProfile for Load Balancer\nDESCRIPTION: This snippet defines a ClusterProfile in YAML which is used to deploy a service configuration on the MGMT Cluster managed by addon-manager. Dependencies include the SveltosCluster kind and ConfigMaps for handling load balancer statuses. Key parameters include service names, namespaces, and the policy references for remote deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: \"lbs-894cbba1a1a9a95d0bdb13e08dbbeb6db3f2e672\"\n  annotations:\n    lb.buttah.cloud/name: \"svc-a\"\n    lb.buttah.cloud/namespace: \"default\"\nspec:\n  clusterRefs:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: \"cluster-a\"\n    namespace: \"cluster-a\"\n  templateResourceRefs:\n  - identifier: UpstreamLB\n    resource:\n      apiVersion: v1\n      kind: Service\n      name: \"lb-894cbba1a1a9a95d0bdb13e08dbbeb6db3f2e672\"\n      namespace: \"cluster-a\"\n  policyRefs:\n  - kind: ConfigMap\n    name: loadbalancer-class-handler-status\n    namespace: projectsveltos\n    deploymentType: Remote\n```\n\n----------------------------------------\n\nTITLE: Excluding Specific Fields from Drift Detection (YAML)\nDESCRIPTION: Example of using driftExclusions in a ClusterProfile to specify fields that should be excluded from drift detection using JSON Pointers. In this example, changes to the replicas field in Deployment resources won't trigger drift detection.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/configuration_drift.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: nginx\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  syncMode: ContinuousWithDriftDetection\n  helmCharts:\n  - repositoryURL:    https://helm.nginx.com/stable/\n    repositoryName:   nginx-stable\n    chartName:        nginx-stable/nginx-ingress\n    chartVersion:     1.3.1\n    releaseName:      nginx-latest\n    releaseNamespace: nginx\n    helmChartAction:  Install\n  driftExclusions:\n  - paths:\n    - \"/spec/replicas\"\n    target:\n      kind: Deployment\n```\n\n----------------------------------------\n\nTITLE: Deploying NATS using ClusterProfile in Sveltos\nDESCRIPTION: This ClusterProfile deploys the NATS messaging system to all Kubernetes clusters labeled with `env: production`. It installs the `nats/nats` Helm chart from the specified repository, version 1.2.9, into the `nats` namespace. The configuration includes setting up authorization with a default user and password.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: nats\nspec:\n  clusterSelector:\n    matchLabels:\n      env: production\n  helmCharts:\n  - chartName: nats/nats\n    chartVersion: 1.2.9\n    helmChartAction: Install\n    releaseName: nats\n    releaseNamespace: nats\n    repositoryName: nats\n    repositoryURL: https://nats-io.github.io/k8s/helm/charts/\n    values: |-\n      config:\n        merge:\n          authorization:\n            default_permissions:\n              publish: [\">\"]\n              subscribe:  [\">\"]\n            users:\n            - user: \"admin\"\n              password: \"my-password\"\n  syncMode: Continuous\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Configuration for Production in YAML\nDESCRIPTION: This YAML snippet configures Helm chart specifics for the production environment, using the 'finkinfridom/keydb' chart. The configuration specifies several parameters, such as the chart version, release name, and other deployment options like 'multiMaster' and 'activeReplicas'. It dynamically incorporates the managed cluster's name into service annotations, using Sveltos templating to adapt to different cluster environments.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/generate_sveltos_configuration.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhelmCharts:\n  - chartName: finkinfridom/keydb\n    chartVersion: 0.48.3\n    helmChartAction: Install\n    releaseName: keydb\n    releaseNamespace: production\n    repositoryName: finkinfridom\n    repositoryURL: https://raw.githubusercontent.com/finkinfridom/charts/main/charts/\n    values: |\n      imageTag: \"x86_64_v6.3.2\"\n      multiMaster: \"yes\"\n      activeReplicas: \"yes\"\n      service:\n        annotations:\n          tailscale.com/expose: \"true\"\n          tailscale.com/hostname: {{ .Cluster.metadata.name }}-keydb-production\n```\n\n----------------------------------------\n\nTITLE: Configuring Full Access ClusterRole in Kubernetes\nDESCRIPTION: This YAML snippet defines a ConfigMap containing a ClusterRole that grants full edit permissions. It's referenced by the RoleRequest to specify the permissions granted to tenant admins.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: full-access\n  namespace: default\ndata:\n  role.yaml: |\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRole\n    metadata:\n      name: eng-full-access\n    rules:\n    - apiGroups: [\"*\"]\n      resources: [\"*\"]\n      verbs: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Required RBAC Permissions for Token Rotation\nDESCRIPTION: YAML snippet showing the necessary RBAC permissions that must be granted to the ServiceAccount token used in the Kubeconfig. This allows creating new tokens for ServiceAccounts.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- apiGroups:\n  - \"\"\n  resources:\n  - serviceaccounts/token\n  verbs:\n    - create\n```\n\n----------------------------------------\n\nTITLE: Upgrading Sveltos Helm Chart to Enable Prometheus Metrics\nDESCRIPTION: Command to upgrade the Sveltos Helm chart and enable Prometheus metrics collection. This is required to allow Prometheus to collect metrics from the Sveltos management cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/grafanadashboard.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade <your release name> projectsveltos/projectsveltos -n projectsveltos --set prometheus.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Mode 2 via Helm\nDESCRIPTION: Commands to install Sveltos in Centralised Agent Mode using Helm.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhelm install projectsveltos projectsveltos/projectsveltos -n projectsveltos --create-namespace --set agent.managementCluster=true\n\nhelm list -n projectsveltos\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile with Namespace-less PolicyRef for Dynamic Resource Selection\nDESCRIPTION: YAML definition for a ClusterProfile that omits the namespace field in policyRef. This causes Sveltos to search for the ConfigMap in the same namespace as each matching cluster, allowing for dynamic resource selection per cluster namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - name: nginx\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Creating a Secret for Calico Deployment in Sveltos\nDESCRIPTION: Commands to download the Calico YAML manifest and create a Kubernetes Secret that can be referenced by a Sveltos ClusterProfile. The Secret must have the specific type 'addons.projectsveltos.io/cluster-profile' to be used by ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml\n\n$ kubectl create secret generic calico --from-file=calico.yaml --type=addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Creating a ClusterProfile with Flux GitRepository Reference\nDESCRIPTION: ClusterProfile definition that references a GitRepository as a policy source, targeting clusters with specific labels. The ClusterProfile applies policies from the 'template' path within the Git repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_flux.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux-template-example\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - kind: GitRepository\n    name: flux-system\n    namespace: flux-system\n    path: template\nEOF\n```\n\n----------------------------------------\n\nTITLE: Token Renewal Configuration for GKE Cluster\nDESCRIPTION: YAML configuration to add to the SveltosCluster resource for automatic token renewal with a GKE cluster, specifying hourly renewal interval and the ServiceAccount to use.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  tokenRequestRenewalOption:\n    renewTokenRequestInterval: 1h0m0s\n    saName: projectsveltos\n    saNamespace: projectsveltos\n```\n\n----------------------------------------\n\nTITLE: Health Validation Lua Script for Deployment Checks\nDESCRIPTION: Lua script that validates deployment health by checking if available replicas match requested replicas in the kyverno namespace. Returns a health status object with boolean healthy flag and optional message.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/rolling_update_strategy.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvalidateHealths:\n- name: deployment-health\n  featureID: Helm\n  group: \"apps\"\n  version: \"v1\"\n  kind: \"Deployment\"\n  namespace: kyverno\n  script: |\n    function evaluate()\n      hs = {}\n      hs.healthy = false\n      hs.message = \"available replicas not matching requested replicas\"\n      if obj.status ~= nil then\n        if obj.status.availableReplicas ~= nil then\n          if obj.status.availableReplicas == obj.spec.replicas then\n            hs.healthy = true\n          end\n        end\n      end\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMap with Role for Namespace Access (Tenant hr)\nDESCRIPTION: This ConfigMap defines a Role granting full access to the 'bar-resource' namespace. This role is referenced by a RoleRequest to grant the 'hr' service account access to this namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\n# ConfigMap contains a Role which gives\n# full access to the namespace human-resource\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: bar-shared-access\n  namespace: default\ndata:\n  ci_cd_role.yaml: |-\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: Role\n    metadata:\n      name: edit-role\n      namespace: bar-resource\n    rules:\n    - apiGroups: [\\\"*\\\"]\n      resources: [\\\"*\\\"]\n      verbs: [\\\"*\\\"]\"\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Mode 1 via Helm\nDESCRIPTION: Commands to install Sveltos in Local Agent Mode using Helm.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nhelm install projectsveltos projectsveltos/projectsveltos -n projectsveltos --create-namespace\n\nhelm list -n projectsveltos\n```\n\n----------------------------------------\n\nTITLE: Defining EventSource for User Operation Events\nDESCRIPTION: YAML definition of an EventSource that matches CloudEvents on the 'user-operation' subject from 'auth.example.com' source. This configuration is used to handle both user login and logout events in the same pipeline.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: user-operation\nspec:\n  messagingMatchCriteria:\n  - subject: \"user-operation\"\n    cloudEventSource: \"auth.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Registering Kamaji Tenant Cluster with Sveltos\nDESCRIPTION: This command registers a Kamaji tenant cluster with Sveltos, providing the namespace, cluster name, kubeconfig path, and labels. This example specifically registers a tenant cluster named 'tenant-00'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl register cluster \\\n    --namespace=projectsveltos \\\n    --cluster=tenant-00 \\\n    --kubeconfig=~/demo/kamaji/kubeconfig/tenant-00-admin.kubeconfig \\\n    --labels=tcp=tenant-00\n```\n\n----------------------------------------\n\nTITLE: Advanced Cluster Selection using MatchExpressions in YAML\nDESCRIPTION: This YAML snippet shows how to use matchExpressions in the clusterSelector for more complex and flexible cluster selection criteria.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nclusterSelector:\n  matchExpressions:\n  - {key: env, operator: In, values: [staging, production]}\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile Configuration with CRD Upgrade Option\nDESCRIPTION: This example shows how to configure a ClusterProfile to enable CRD upgrades for Helm charts. The `upgradeCRDs` field within the `upgradeOptions` section is set to `true`. This instructs Sveltos to patch CRDs before upgrading the Helm chart.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n...\n  helmCharts:\n  - repositoryURL:    <REPO URL>\n    repositoryName:   <REPO NAME>\n    chartName:        <CHART NAME>\n    chartVersion:     <CHART VERSION>\n    releaseName:      <...>\n    releaseNamespace: <...>\n    options:\n      upgradeOptions:\n        upgradeCRDs: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Discord Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that sends Discord notifications when add-ons are deployed to clusters with the 'env=fv' label. This requires a secret containing the Discord channel ID and token.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n  notifications:\n  - name: discord\n    type: Discord\n    notificationRef:\n      apiVersion: v1\n      kind: Secret\n      name: discord\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterProfile with DryRun SyncMode in YAML\nDESCRIPTION: Example of how to configure a ClusterProfile with syncMode set to DryRun. This configuration allows for simulating operations without making actual changes to matching clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/dryrun.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  syncMode: DryRun\n  ...\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Secret for Harbor using BasicAuth\nDESCRIPTION: This YAML defines a Kubernetes Secret for authenticating with a Harbor registry using BasicAuth. The Secret stores the username and password after base64 encoding.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: creds\n  namespace: default\ndata:\n  username: # base64 of user\n  password: # base64 of pass\n```\n\n----------------------------------------\n\nTITLE: Lua Script for Deployment Health Validation\nDESCRIPTION: This Lua script validates the health of a Kubernetes Deployment by checking if the number of available replicas matches the requested replicas. The script expects a 'obj' variable containing the Deployment object and returns a table with 'healthy' (boolean) and 'message' (string) fields indicating the health status.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\n\"function evaluate()\n  hs = {}\n  hs.healthy = false\n  hs.message = \\\"available replicas not matching requested replicas\\\"\n  if obj.status ~= nil then\n    if obj.status.availableReplicas ~= nil then\n      if obj.status.availableReplicas == obj.spec.replicas then\n        hs.healthy = true\n      end\n    end\n  end\n  return hs\nend\n\"\n```\n\n----------------------------------------\n\nTITLE: Generating HealthCheckReport for Pods with Outdated Secrets in Kubernetes\nDESCRIPTION: This YAML snippet shows a HealthCheckReport generated based on the HealthCheck definition. It reports a pod named 'secret-dotfiles-pod' in the 'foo' namespace that is accessing an outdated secret.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/different_resources.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheckReport\nmetadata:\n  labels:\n    projectsveltos.io/healthcheck-name: list-pods-with-outdated-secret-data\n  name: list-pods-with-outdated-secret-data\n  namespace: projectsveltos\n  ...\nspec:\n  ...\n  healthCheckName: list-pods-with-outdated-secret-data\n  resourceStatuses:\n  - healthStatus: Degraded\n    message: secret foo:dotfile-secret has been updated after pod creation\n    objectRef:\n      apiVersion: v1\n      kind: Pod\n      name: secret-dotfiles-pod\n      namespace: foo\n...\n```\n\n----------------------------------------\n\nTITLE: Defining a ClusterProfile with Kyverno Helm Deployment and Lua Validation - YAML\nDESCRIPTION: The snippet demonstrates the definition of a ClusterProfile for deploying a Kyverno Helm chart to clusters labeled as 'env: prod'. It includes a 'validateHealths' section using Lua scripts to perform health checks on deployments within the Kyverno namespace. Dependencies include having a Kubernetes environment where Sveltos and Kyverno can operate, and Helm must be installed. Key parameters include the repository URL, chart details, and the validation script. Expected outputs are a successful deployment when health checks pass and an insight into deployment health.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n    validateHealths:\n    - name: deployment-health\n      featureID: Helm\n      group: \"apps\"\n      version: \"v1\"\n      kind: \"Deployment\"\n      namespace: kyverno\n      script: |\n        function evaluate()\n          hs = {}\n          hs.healthy = false\n          hs.message = \"available replicas not matching requested replicas\"\n          if obj.status ~= nil then\n            if obj.status.availableReplicas ~= nil then\n              if obj.status.availableReplicas == obj.spec.replicas then\n                hs.healthy = true\n              end\n            end\n          end\n          return hs\n        end\n\n```\n\n----------------------------------------\n\nTITLE: Deploying OPA Gatekeeper 3.10 ClusterProfile in YAML\nDESCRIPTION: This ClusterProfile configures the deployment of OPA Gatekeeper version 3.10.0 to clusters with the label 'gatekeeper: v3-10'. It uses a Helm chart from the OPA Gatekeeper repository and sets continuous synchronization mode.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/labels_management.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-gatekeeper-3-10\nspec:\n  clusterSelector:\n    matchLabels:\n      gatekeeper: v3-10\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL: https://open-policy-agent.github.io/gatekeeper/charts\n    repositoryName: gatekeeper\n    chartName: gatekeeper/gatekeeper\n    chartVersion:  3.10.0\n    releaseName: gatekeeper\n    releaseNamespace: gatekeeper\n    helmChartAction: Install\n```\n\n----------------------------------------\n\nTITLE: Defining an EventTrigger with ConfigMap\nDESCRIPTION: This YAML snippet defines an EventTrigger that references a ConfigMap containing a NetworkPolicy. It includes metadata for the EventTrigger and specifies the sourceClusterSelector and eventSourceName.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: service-network-policy\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: fv\n  eventSourceName: sveltos-service\n  oneForEvent: true\n  policyRefs:\n  - name: network-policy\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: network-policy\n  namespace: default\n  annotations:\n    projectsveltos.io/instantiate: ok # this annotation is what tells Sveltos to instantiate this ConfigMap\ndata:\n  networkpolicy.yaml: |\n    kind: NetworkPolicy\n    apiVersion: networking.k8s.io/v1\n    metadata:\n      name: front-{{ .Resource.metadata.name }}\n      namespace: {{ .Resource.metadata.namespace }}\n    spec:\n      podSelector:\n        matchLabels:\n          {{ range $key, $value := .Resource.spec.selector }}\n          {{ $key }}: {{ $value }}\n          {{ end }}\n      ingress:\n        - from:\n          - podSelector:\n              matchLabels:\n                app: internal\n          ports:\n            {{ range $port := .Resource.spec.ports }}\n            - port: {{ $port.port }}\n            {{ end }}\n\n```\n\n----------------------------------------\n\nTITLE: Example JsonnetSource Status with Resources\nDESCRIPTION: This YAML snippet illustrates the status of a JsonnetSource instance that includes JSON resources generated by jsonnet, ready for deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extension.projectsveltos.io/v1beta1\nkind: JsonnetSource\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"extension.projectsveltos.io/v1beta1\",\"kind\":\"JsonnetSource\",\"metadata\":{\"annotations\":{},\"name\":\"jsonnetsource-configmap\",\"namespace\":\"default\"},\"spec\":{\"kind\":\"ConfigMap\",\"name\":\"jsonnet\",\"namespace\":\"default\",\"path\":\"./main.jsonnet\",\"variables\":{\"namespace\":\"production\"}}}\n  creationTimestamp: \"2023-05-26T08:28:48Z\"\n  generation: 1\n  name: jsonnetsource-configmap\n  namespace: default\n  resourceVersion: \"121599\"\n  uid: eea93390-771d-4176-92fe-2b761b803764\nspec:\n  kind: ConfigMap\n  name: jsonnet\n  namespace: default\n  path: ./main.jsonnet\n  variables:\n    namespace: production\nstatus:\n  resources: |\n    ---\n    {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"name\":\"my-deployment\",\"namespace\":\"production\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"my-app\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"my-app\"}},\"spec\":{\"containers\":[{\"image\":\"my-image:latest\",\"name\":\"my-container\",\"ports\":[{\"containerPort\":8080}]}]}}}}\n    ---\n    {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"name\":\"my-service\",\"namespace\":\"production\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"app\":\"my-app\"},\"type\":\"LoadBalancer\"}}\n```\n\n----------------------------------------\n\nTITLE: Profile Definition with DependsOn\nDESCRIPTION: This example shows a Profile definition that depends on another Profile. Sveltos will deploy the add-ons and applications defined in 'profile_a' only after all add-ons and applications in 'profile_b' have been successfully deployed.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/profile.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\napiVersion: config.projectsveltos.io/v1beta1\nkind: Profile\nmetadata:\n  name: profile_a\n  namespace: eng\nspec:\n  dependsOn:\n  - profile_b\n\"\n```\n\n----------------------------------------\n\nTITLE: Using ConfigMap for Helm Values\nDESCRIPTION: Configuration examples showing how to use ConfigMaps to manage Helm chart values externally.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncleanupController:\n  livenessProbe:\n    httpGet:\n      path: /health/liveness\n      port: 9443\n      scheme: HTTPS\n    initialDelaySeconds: 16\n    periodSeconds: 31\n    timeoutSeconds: 5\n    failureThreshold: 2\n    successThreshold: 1\n```\n\nLANGUAGE: yaml\nCODE:\n```\nadmissionController:\n  readinessProbe:\n    httpGet:\n      path: /health/readiness\n      port: 9443\n      scheme: HTTPS\n    initialDelaySeconds: 6\n    periodSeconds: 11\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Techsupport YAML for Data Collection\nDESCRIPTION: These YAML configurations define the Techsupport CRD used for on-demand or scheduled diagnostic data collection from Kubernetes clusters. The setup includes defining delivery methods and specifying data from management and managed clusters. Key dependencies include having Kubernetes and the Sveltos CRD installed. The YAML files must be appropriately formatted and placed within the cluster environment to be effective.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/techsupport.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncat > techsupport.yaml <<EOF\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: Techsupport\nmetadata:\n  name: techsupport\nspec:\n  onDemand: true  # Enables on-demand tech support collection\n\n  deliveryMethods:  # Defines how to delivery tech support\n    - name: slack   # name must be unique within a TechSupport instance\n      type: Slack   # Type can be Webex, Slack, Discord, Telegram, SMTP, SFTP\n      secretRef:\n        name: slack\n        namespace: default\n\n  # Data collection from the management cluster\n  fromManagement:\n    resources:  # Specific resources to collect\n      - group: \"\"  # Empty group indicates core Kubernetes resources\n        version: v1\n        kind: ConfigMap\n        namespace: projectsveltos\n      - group: \"\"\n        version: v1\n        kind: Secret\n        namespace: projectsveltos\n    logs:  # Collect logs from specific namespaces\n      - namespace: projectsveltos\n    events:  # Collect events from specified namespaces. Filter by type\n      - namespace: projectsveltos\n      - namespace: kube-system\n        type: Warning  # Only collect Warning events from kube-system\n\n  # Data collection from managed clusters\n  fromManaged:\n    clusterSelector:  # Filter managed clusters for collection\n      matchLabels:\n        env: fv  # Only collect data from clusters with label \"env: fv\"\n    resources:  # Specific resources to collect\n      - group: \"\"\n        version: v1\n        kind: Secret\n        namespace: projectsveltos\n      - group: apps\n        version: v1\n        kind: Deployments\n        namespace: projectsveltos\n    logs:  # Collect logs from specific namespaces\n      - namespace: projectsveltos\n    events:  # Collect events from specified namespaces and types\n      - namespace: projectsveltos\n      - namespace: kube-system\n        type: Warning  # Only collect Warning events from kube-system\nEOF\n```\n\nLANGUAGE: yaml\nCODE:\n```\ncat > techsupport_advanced.yaml <<EOF\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: Techsupport\nmetadata:\n  name: hourly\nspec:\n  schedulingConfig:\n    schedule: \"00 * * * *\"\n\n  deliveryMethods:\n  - name: discord\n    type: Discord\n    secretRef:\n      name: discord\n      namespace: default\n  - name: telegram\n    type: Telegram\n    secretRef:\n      name: telegram\n      namespace: default\n\n  fromManaged:\n    clusterSelector:\n      matchLabels:\n        env: fv\n    logs:\n    - labelFilters:\n      - key: env\n        operation: Equal\n        value: production\n      - key: department\n        operation: Different\n        value: eng\n      namespace: default\n      sinceSeconds: 600\n    resources:\n    - group: \"apps\"\n      version: v1\n      kind: Deployment\n      labelFilters:\n      - key: env\n        operation: Equal\n        value: production\n      - key: department\n        operation: Different\n        value: eng\n      namespace: default\n    - group: \"\"\n      version: v1\n      kind: Service\n      labelFilters:\n      - key: env\n        operation: Equal\n        value: production\n      - key: department\n        operation: Different\n        value: eng\n      namespace: default\nEOF\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile with Registry Credentials Configuration\nDESCRIPTION: This example shows how to configure a ClusterProfile to use a Kubernetes Secret for authentication with a private registry. The `registryCredentialsConfig` section specifies the name and namespace of the Secret. The `helmCharts` specifies the OCI URL of the chart along with the name, chart, and version details.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: projectsveltos\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    oci://registry-1.docker.io/gianlucam76\n    repositoryName:   projectsveltos\n    chartName:        projectsveltos\n    chartVersion:     0.46.0\n    releaseName:      projectsveltos\n    releaseNamespace: projectsveltos\n    helmChartAction:  Install\n    registryCredentialsConfig:\n      credentials:\n        name: regcred\n        namespace: default\n```\n\n----------------------------------------\n\nTITLE: Finding Helm-related Secrets for Troubleshooting Deployment Issues\nDESCRIPTION: Command to identify Helm-related secrets in a namespace that might be causing the 'cannot re-use a name that is still in use' error when deploying Helm charts with Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n <your namespace> get secrets | grep helm\n```\n\n----------------------------------------\n\nTITLE: Verifying Managed Cluster Accessibility with Kubeconfig\nDESCRIPTION: Commands to validate that a kubeconfig file can successfully connect to a managed cluster. This helps determine if connectivity issues are due to an invalid kubeconfig or network problems.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBECONFIG=<directory of the provided cluster kubeconfig>\n$ kubectl get nodes\n$ kubectl get pods -A\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile referencing BasicAuth Secret\nDESCRIPTION: This YAML demonstrates configuring a ClusterProfile to reference a Kubernetes Secret storing BasicAuth credentials for registry authentication.  It sets the Secret's name and namespace, and optionally disables TLS verification.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n   registryCredentialsConfig:\n    credentials:\n     name: creds\n     namespace: default\n    insecureSkipTLSVerify: true\n```\n\n----------------------------------------\n\nTITLE: YttSource Instance Status - YAML\nDESCRIPTION: This YAML depicts the status of a YttSource instance, showing resources processed by the ytt controller. This includes service, deployment, and secret as outputs ready for deployment within Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: extension.projectsveltos.io/v1beta1\nkind: YttSource\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"extension.projectsveltos.io/v1beta1\",\"kind\":\"YttSource\",\"metadata\":{\"annotations\":{},\"name\":\"yttsource-sample\",\"namespace\":\"default\"},\"spec\":{\"kind\":\"ConfigMap\",\"name\":\"ytt\",\"namespace\":\"default\",\"path\":\"./\"}}\n  creationTimestamp: \"2023-05-22T06:27:31Z\"\n  generation: 1\n  name: yttsource-sample\n  namespace: default\n  resourceVersion: \"94517\"\n  uid: 4b0b4efb-57b4-4ffd-ab32-dc56fee21a09\nspec:\n  kind: ConfigMap\n  name: ytt\n  namespace: default\n  path: ./\nstatus:\n  resources: |\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: sample-app\n      labels:\n        environment: staging\n    spec:\n      selector:\n        app: sample-app\n      ports:\n      - protocol: TCP\n        port: 80\n        targetPort: 8080\n    ---\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: sample-app\n      labels:\n        environment: staging\n    spec:\n      replicas: 1\n      selector:\n        matchLabels:\n          environment: staging\n      template:\n        metadata:\n          labels:\n            environment: staging\n        spec:\n          containers:\n          - name: sample-app\n            image: nginx:latest\n            imagePullPolicy: IfNotPresent\n            ports:\n            - containerPort: 8080\n    ---\n    apiVersion: v1\n    kind: Secret\n    metadata:\n      name: application-settings\n    stringData:\n      app_mode: staging\n      certificates: /etc/ssl/staging\n      db_user: staging-user\n      db_password: staging-password\n```\n\n----------------------------------------\n\nTITLE: Configuring Sveltos EventSource to Monitor for Load Balancer Services\nDESCRIPTION: This EventSource definition listens for Kubernetes Services with the 'lb.buttah.cloud/class' label. It uses a Lua function to evaluate whether a service should be monitored based on the presence of this label.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# deploy on MGMT Cluster\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: loadbalancer-class-handler\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n    evaluate: |\n      function evaluate()\n        hs = {}\n        hs.matching = false\n        if obj.metadata.labels[\"lb.buttah.cloud/class\"] ~= nil then\n          hs.matching = true\n          return hs\n        end\n        return hs\n      end\n```\n\n----------------------------------------\n\nTITLE: Displaying DryRun Results with sveltosctl\nDESCRIPTION: Shows how to use the sveltosctl utility to display the results of a DryRun execution. The output provides a summary of potential actions that would be performed on matching clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/dryrun.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show dryrun\n\n+-------------------------------------+--------------------------+-----------+----------------+-----------+--------------------------------+------------------+\n|               CLUSTER               |      RESOURCE TYPE       | NAMESPACE |      NAME      |  ACTION   |            MESSAGE             | CLUSTER PROFILE  |\n+-------------------------------------+--------------------------+-----------+----------------+-----------+--------------------------------+------------------+\n| default/sveltos-management-workload | helm release             | kyverno   | kyverno-latest | Install   |                                | dryrun           |\n| default/sveltos-management-workload | helm release             | nginx     | nginx-latest   | Install   |                                | dryrun           |\n| default/sveltos-management-workload | :Pod                     | default   | nginx          | No Action | Object already deployed.       | dryrun           |\n|                                     |                          |           |                |           | And policy referenced by       |                  |\n|                                     |                          |           |                |           | ClusterProfile has not changed |                  |\n|                                     |                          |           |                |           | since last deployment.         |                  |\n| default/sveltos-management-workload | kyverno.io:ClusterPolicy |           | no-gateway     | Create    |                                | dryrun           |\n+-------------------------------------+--------------------------+-----------+----------------+-----------+--------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Configuring Telegram Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that sends Telegram notifications when add-ons are deployed to clusters with the 'env=fv' label. This requires a secret containing the Telegram chat ID and token.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n  notifications:\n  - name: telegram\n    type: Telegram\n    notificationRef:\n      apiVersion: v1\n      kind: Secret\n      name: telegram\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Deploying Postgres Instances with Sveltos\nDESCRIPTION: This bash script downloads Postgres configuration files and creates ConfigMaps, then applies a ClusterProfile to deploy Postgres instances on the managed services cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/production-postgres.yaml \nkubectl create configmap production-postgres --from-file=production-postgres.yaml\nwget https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/pre-production-postgres.yaml \nkubectl create configmap pre-production-postgres --from-file=pre-production-postgres.yaml\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/deploy-postgres-clusterprofile.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Selection with Label Matching in YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the clusterSelector field with matchLabels to target clusters based on specific labels.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/clusterprofile.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nclusterSelector:\n    matchLabels:\n      env: prod\n```\n\n----------------------------------------\n\nTITLE: Viewing ClusterProfile and ClusterSummary Resources\nDESCRIPTION: Command to list all ClusterProfile and ClusterSummary resources across all namespaces. These resources contain information about add-on configurations and their deployment status on managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get clustersummary,clusterprofile -A\n```\n\n----------------------------------------\n\nTITLE: Classifier for Kubernetes v1.25+ Clusters in YAML\nDESCRIPTION: This Classifier identifies clusters running Kubernetes version 1.25.0 or higher and adds the label 'gatekeeper: v3-10' to them. This works in conjunction with the corresponding ClusterProfile to deploy the appropriate Gatekeeper version.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/labels_management.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: Classifier\nmetadata:\n  name: deploy-gatekeeper-3-10\nspec:\n  classifierLabels:\n  - key: gatekeeper\n    value: v3-10\n  kubernetesVersionConstraints:\n  - comparison: GreaterThanOrEqualTo\n    version: 1.25.0\n```\n\n----------------------------------------\n\nTITLE: Creating a ConfigMap with Multiple Kubernetes Resources for Sveltos\nDESCRIPTION: YAML definition for creating a ConfigMap that contains two resources: a Namespace and a Deployment for nginx. When referenced by a ClusterProfile, these resources will be deployed to clusters matching the ClusterProfile's selector.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncat > nginx_cm.yaml <<EOF\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx\n  namespace: default\ndata:\n  namespace.yaml: |\n    kind: Namespace\n    apiVersion: v1\n    metadata:\n      name: nginx\n  deployment.yaml: |\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: nginx-deployment\n      namespace: nginx\n    spec:\n      replicas: 2 # number of pods to run\n      selector:\n        matchLabels:\n          app: nginx\n      template:\n        metadata:\n          labels:\n            app: nginx\n        spec:\n          containers:\n          - name: nginx\n            image: nginx:latest # public image from Docker Hub\n            ports:\n            - containerPort: 80\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Event-Based Deployment for Todo App\nDESCRIPTION: This YAML defines an EventSource to monitor the completion of the database table creation Job and an EventTrigger to deploy the todo app when the Job is complete. It uses Lua for evaluation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\nname: postgresql-job-completed\nspec:\ncollectResources: false\nresourceSelectors:\n- group: \"batch\"\n  version: \"v1\"\n  kind: \"Job\"\n  namespace: todo\n  evaluate: |\n    function evaluate()\n      hs = {}\n      hs.matching = false\n      hs.message = \"\"\n      if obj.metadata.name == \"todo-table\" then\n        if obj.status ~= nil then\n          if obj.status.succeeded == 1 then\n            hs.matching = true\n          end\n        end\n      end\n      return hs\n    end\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\nname: deploy-todo-app\nspec:\nsourceClusterSelector:\n  matchLabels:\n    env: fv\neventSourceName: postgresql-job-completed\nstopMatchingBehavior: LeavePolicies\npolicyRefs:\n- name: todo-app\n  namespace: default\n  kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Viewing Detailed Helm Values Changes with Raw-Diff\nDESCRIPTION: Demonstrates how to use the --raw-diff option to see the detailed changes in Helm chart values. This allows for precise inspection of configuration changes between deployed and proposed states.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/dryrun.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show dryrun --raw-diff\nProfile: ClusterProfile:deploy-kyverno Cluster: default/clusterapi-workload\n--- deployed values\n+++ proposed values\n@@ -1,6 +1,6 @@\n admissionController:\n     replicas: 3\n backgroundController:\n-    replicas: 1\n+    replicas: 3\n reportsController:\n-    replicas: 1\n+    replicas: 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Event Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that generates Kubernetes events when add-ons are deployed to clusters with the 'env=fv' label. This approach doesn't require additional secrets.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile for External Secret Replication\nDESCRIPTION: This YAML snippet defines a ClusterProfile that instructs Sveltos on replicating secrets managed by an External Secret Operator. It targets production clusters and links to the previously defined ConfigMap template.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: replicate-external-secret-operator-secret\nspec:\n  clusterSelector:\n    matchLabels:\n      env: production\n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: external-secret-operator\n      namespace: default\n    identifier: ESOSecret\n  policyRefs:\n  - kind: ConfigMap\n    name: replicate-external-secret-operator-secret\n    namespace: default\n\n```\n\n----------------------------------------\n\nTITLE: Verifying Sveltos Secret Propagation (bash)\nDESCRIPTION: This bash command uses the `sveltosctl` CLI to verify that Sveltos has propagated the secret to all managed clusters. It shows the list of addons deployed on clusters along with the resource type, namespace, name and cluster profiles associated with it.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/external_secret.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n\"$ sveltosctl show addons\n+-----------------------------+---------------+-----------+------+---------+-------------------------------+------------------+\n|           CLUSTER           | RESOURCE TYPE | NAMESPACE | NAME | VERSION |             TIME              | CLUSTER PROFILES |\n+-----------------------------+---------------+-----------+------+---------+-------------------------------+------------------+\n| default/clusterapi-workload | :Secret       | default   | eso  | N/A     | 2023-07-24 05:18:19 -0700 PDT | deploy-resources |\n| gke/production              | :Secret       | default   | eso  | N/A     | 2023-07-24 05:18:29 -0700 PDT | deploy-resources |\n+-----------------------------+---------------+-----------+------+---------+-------------------------------+------------------+\"\n```\n\n----------------------------------------\n\nTITLE: HealthCheck Resource for Kyverno PolicyReports\nDESCRIPTION: This HealthCheck resource examines Kyverno PolicyReports and reports resources violating policies. It selects PolicyReport resources from the `wgpolicyk8s.io` group and uses a Lua script to identify failed results and list the related resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n  name: deployment-replicas\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: wgpolicyk8s.io\n    version: v1alpha2\n    kind: PolicyReport\n  evaluateHealth: |\n    function evaluate()\n      local statuses  = {}\n      status = \\\"Healthy\\\"\n      message = \\\"\\\"\n\n      for _,resource in ipairs(resources) do\n        for i, result in ipairs(resource.results) do\n          if result.result == \\\"fail\\\" then\n            status = \\\"Degraded\\\"\n            for j, r in ipairs(result.resources) do\n              message = message .. \\\" \\\" .. r.namespace .. \\\"/\\\" .. r.name\n            end\n          end\n        end\n\n        if status ~= \\\"Healthy\\\" then\n          table.insert(statuses, {resource=resource, status = status, message = message})\n        end\n      end\n      \n      local hs = {}\n      if #statuses > 0 then\n        hs.resources = statuses \n      end\n      \n      return hs\n    end\n\"\n```\n\n----------------------------------------\n\nTITLE: Sveltos Detects Matching Clusters in a ClusterSet - YAML\nDESCRIPTION: This snippet shows the status of the ClusterSet 'prod' after Sveltos identifies matching clusters and selects one active cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/set.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterSet\nmetadata:\n  name: prod\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  maxReplicas: 1\nstatus:\n  matchingClusterRefs:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: cluster1\n    namespace: civo\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: cluster2\n    namespace: civo\n  namespace: civo\n  selectedClusterRefs:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: cluster2\n    namespace: civo\n\n```\n\n----------------------------------------\n\nTITLE: Viewing Detailed Resource Diffs with Raw-Diff Option\nDESCRIPTION: Demonstrates how to view detailed line-by-line changes for each resource using the --raw-diff option. This provides a comprehensive view of what would change in the cluster resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/dryrun.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show dryrun --raw-diff   \nCluster: default/clusterapi-workload\n--- deployed: ClusterPolicy disallow-latest-tag\n+++ proposed: ClusterPolicy disallow-latest-tag\n@@ -49,10 +49,10 @@\n               name: validate-image-tag\n               skipBackgroundRequests: true\n               validate:\n-                message: Using a mutable image tag e.g. 'latest' is not allowed.\n+                message: Using a mutable image tag e.g. 'latest' is not allowed in this cluster.\n                 pattern:\n                     spec:\n                         containers:\n                             - image: '!*:latest'\n-        validationFailureAction: audit\n+        validationFailureAction: Enforce\n     status: \"\"\n\nCluster: default/clusterapi-workload\n--- deployed: Deployment nginx-deployment\n+++ proposed: Deployment nginx-deployment\n@@ -22,7 +22,7 @@\n         uid: 9ba8bbc1-02fa-4cbb-9073-fe657482277d\n     spec:\n         progressDeadlineSeconds: 600\n-        replicas: 3\n+        replicas: 1\n         revisionHistoryLimit: 10\n         selector:\n             matchLabels:\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kyverno in West Region Clusters with ClusterProfile in YAML\nDESCRIPTION: This YAML snippet defines a ClusterProfile named 'kyverno' that targets clusters in the west region to upgrade Kyverno. It demonstrates how to use the 'tier' property to set deployment priority.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/tiers.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  tier: 50\n  clusterSelector:\n    matchLabels:\n      region: west\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Copying Secrets in Kubernetes with Sveltos\nDESCRIPTION: Demonstrates how to copy a Secret from the management cluster to matching managed clusters using Sveltos. The example involves creating a Docker registry Secret in the management cluster and referencing it in a ClusterProfile to deploy it across matched clusters. It emphasizes using ConfigMap annotations to mark templates in Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/examples.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: v1\ndata:\n  .dockerconfigjson: ewogICAgImF1dGhzIjogewogICAgICAgICJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CiAgICAgICAgICAgICJhdXRoIjogIkxXWWdjR0Z6YzNkdmNtUUsiCiAgICAgICAgfQogICAgfQp9Cg==\nkind: Secret\nmetadata:\n  name: imported-secret\n  namespace: default\ntype: kubernetes.io/dockerconfigjson\nEOF\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: production\n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: imported-secret\n      namespace: default\n    identifier: ExternalSecret\n  policyRefs:\n  - kind: ConfigMap\n    name: info\n    namespace: default\n```\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: info\n      namespace: default\n      annotations:\n        projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\n    data:\n      secret.yaml: |\n        {{ copy \"ExternalSecret\" }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Drift Detection in Helm Chart Values (YAML)\nDESCRIPTION: Example of how to configure drift detection when deploying Sveltos using the official Helm chart. This yaml snippet shows values that should be included in values.yaml to patch the drift-detection-manager before deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/configuration_drift.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\naddonController:\n  controller:\n    args:\n    - --diagnostics-address=:8443\n    - --report-mode=0\n    - --shard-key=\n    - --v=5\n    - --version=v0.44.0\n    argsAgentMgmtCluster:\n    - --diagnostics-address=:8443\n    - --report-mode=0\n    - --agent-in-mgmt-cluster\n    - --shard-key=\n    - --v=5\n    - --version=v0.44.0\n    - --drift-detection-config=drift-detection-config\nagent:\n  managementCluster: true\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile for Autoscaler\nDESCRIPTION: This YAML snippet defines a ClusterProfile resource that instructs Sveltos to find a Secret named 'autoscaler' in the 'default' namespace and makes it available via the identifier 'AutoscalerSecret'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: autoscaler\n      namespace: default\n    identifier: AutoscalerSecret\n  policyRefs:\n  - kind: ConfigMap\n    name: info\n    namespace: default\n\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile and ConfigMap in YAML\nDESCRIPTION: This YAML snippet defines a ClusterProfile named 'deploy-clusterprofiles' to select a management cluster and reference a ConfigMap called 'test'. The ConfigMap specifies a template in its data section to dynamically produce additional ClusterProfile resources for 'keydb-services-production' and 'keydb-services-staging'. This setup allows deploying specific Helm charts to managed clusters based on environment configurations. Dependencies include Kubernetes, Sveltos, and Helm.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/generate_sveltos_configuration.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-clusterprofiles\nspec:\n  clusterSelector:\n    matchLabels:      \n      type: mgmt   # Select the management cluster\n  policyRefs:\n  - name: test\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: test\n  namespace: default\n  annotations:\n    projectsveltos.io/template: ok\ndata:\n  keydb_clusterprofile.yaml: |\n    {{ $cluster := print \"{{ .Cluster.metadata.name }}\" }}\n    {{- range $env := (list \"production\" \"staging\") }}\n    ---\n    apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    metadata:\n      name: keydb-services-{{ $env }}\n    spec:\n      clusterSelector:\n        matchLabels:\n          purpose: edge # Select managed cluster\n      helmCharts:\n      - repositoryURL:    https://raw.githubusercontent.com/finkinfridom/charts/main/charts/\n        repositoryName:   finkinfridom\n        chartName:        finkinfridom/keydb\n        chartVersion:     \"0.48.3\"\n        releaseName:      keydb\n        releaseNamespace: {{ $env }}\n        helmChartAction:  Install\n        values: |\n          imageTag: \"x86_64_v6.3.2\"\n          multiMaster: \"yes\"\n          activeReplicas: \"yes\"\n          service:\n            annotations:\n              tailscale.com/expose: \"true\"\n              tailscale.com/hostname: {{ $cluster }}-keydb-{{ $env }}\n    {{- end }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Flux GitRepository for Sveltos\nDESCRIPTION: This YAML defines a Flux GitRepository resource that Sveltos uses as a source for Kubernetes manifests. It specifies a Git repository URL with a one-minute polling interval and targets the main branch.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  name: flux2\n  namespace: flux2\nspec:\n  interval: 1m0s\n  ref:\n    branch: main\n  timeout: 60s\n  url: ssh://git@github.com/gianlucam76/kustomize\n```\n\n----------------------------------------\n\nTITLE: Template-based Helm Configuration\nDESCRIPTION: Examples of using templates in Helm chart values for dynamic configuration based on cluster information.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-calico\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://projectcalico.docs.tigera.io/charts\n    repositoryName:   projectcalico\n    chartName:        projectcalico/tigera-operator\n    chartVersion:     v3.24.5\n    releaseName:      calico\n    releaseNamespace: tigera-operator\n    helmChartAction:  Install\n    values: |\n      installation:\n        calicoNetwork:\n          ipPools:\n          {{ range $cidr := .Cluster.spec.clusterNetwork.pods.cidrBlocks }}\n            - cidr: {{ $cidr }}\n              encapsulation: VXLAN\n          {{ end }}\n```\n\n----------------------------------------\n\nTITLE: Creating Kyverno ClusterPolicy ConfigMap\nDESCRIPTION: These commands download a Kyverno ClusterPolicy and create a ConfigMap containing the policy definition.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n\"  $ wget https://github.com/kyverno/policies/raw/main//best-practices/disallow-latest-tag/disallow-latest-tag.yaml\n  \n  $ kubectl create configmap kyverno-latest --from-file disallow-latest-tag.yaml\n\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Worker Node Readiness Check in SveltosCluster Configuration\nDESCRIPTION: This YAML configuration defines a SveltosCluster resource with a custom readiness check that verifies at least one worker node exists in the cluster. The check works by confirming that at least one node does not have the control-plane label, indicating it's a worker node.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/readiness_liveness_checks.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: SveltosCluster\nmetadata:\n  name: staging\n  namespace: default\nspec:\n  kubeconfigName: clusterapi-workload-sveltos-kubeconfig\n  readinessChecks:\n  - name: worker-node-check\n    condition: |-\n      function evaluate()\n        hs = {}\n        hs.pass = false\n\n        for _, resource in ipairs(resources) do\n          if  not (resource.metadata.labels and resource.metadata.labels[\"node-role.kubernetes.io/control-plane\"]) then\n            hs.pass = true\n          end\n        end\n\n        return hs\n      end\n    \n    resourceSelectors:\n    - group: \"\"\n      kind: Node\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Chaining Field Modifications in Kubernetes Deployments with Sveltos\nDESCRIPTION: Explains how to use chainSetField within Sveltos templates to perform multiple field modifications on a Kubernetes deployment resource. This example chains several setField operations to update multiple fields of the deployment, showcasing flexibility and control over resource configuration in managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/examples.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: info\n      namespace: default\n      annotations:\n        projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\n    data:\n      secret.yaml: |\n        {{ $depl := (getResource \"NginxDeployment\") }}\n        {{ $depl := (chainSetField $depl \"spec.replicas\" (int64 1) ) }}\n        {{ $depl := (chainSetField $depl \"metadata.namespace\" .Cluster.metadata.namespace ) }}\n        {{ $depl := (chainSetField $depl \"spec.template.spec.serviceAccountName\" \"default\" ) }}\n        {{ $depl := (chainSetField $depl \"spec.paused\" true ) }}\n        {{ toYaml $depl }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Secret for Google Cloud Credentials (bash)\nDESCRIPTION: These bash commands create a service account key and store it as a Kubernetes secret named `gcpsm-secret`. This secret is used by External Secrets Operator to authenticate with Google Cloud Secret Manager. The `kubectl create secret` command is used to store the credentials.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/external_secret.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"$ gcloud iam service-accounts keys create key.json --iam-account=external-secrets@$yourproject.iam.gserviceaccount.com\n\n$ kubectl create secret generic gcpsm-secret --from-file=secret-access-credentials=key.json\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Usage of Configurations with Sveltosctl in Bash\nDESCRIPTION: Runs 'show usage' using the sveltosctl tool to display information about clusters matched to a ClusterProfile and the deployment locations of specific ConfigMaps or Secrets. This helps in determining the impact of configuration changes.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/visibility.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show usage \n+----------------+--------------------+----------------------------+-------------------------------------+\n| RESOURCE KIND  | RESOURCE NAMESPACE |       RESOURCE NAME        |              CLUSTERS               |\n+----------------+--------------------+----------------------------+-------------------------------------+\n| ClusterProfile |                    | kyverno                    | default/sveltos-management-workload |\n| ConfigMap      | default            | kyverno-disallow-gateway   | default/sveltos-management-workload |\n+----------------+--------------------+----------------------------+-------------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Patching ServiceMonitor with Prometheus Label\nDESCRIPTION: Command to patch the Sveltos ServiceMonitor with the appropriate Prometheus label. This ensures that Prometheus can discover and scrape metrics from Sveltos components.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/grafanadashboard.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get servicemonitor -n projectsveltos\n$ kubectl patch servicemonitor addon-controller -n projectsveltos -p '{\"metadata\":{\"labels\":{\"prometheus\":\"example-label\"}}}' --type=merge\n```\n\n----------------------------------------\n\nTITLE: Ordered PostgreSQL Resource Deployment\nDESCRIPTION: ClusterProfile configuration showing ordered deployment of PostgreSQL-related resources using policyRefs. The deployment ConfigMap is applied before the service ConfigMap.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/manifest_order.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: postgresql\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - name: postgresql-deployment\n    namespace: default\n    kind: ConfigMap\n  - name: postgresql-service\n    namespace: default\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Generated ClusterProfile and ConfigMaps for Load Balancer Management\nDESCRIPTION: These resources are automatically generated from the EventTrigger for service 'svc-a'. The ClusterProfile references two ConfigMaps that contain the templates for creating a Service on the management cluster and handling the status updates.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n#  generated Ressource on MGMT Cluster from EventTrigger\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: sveltos-2z2p8p7olrro79biygp8\nspec:\n  clusterRefs:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: a\n    namespace: cluster-a\n  policyRefs:\n  - deploymentType: Local\n    kind: ConfigMap\n    name: sveltos-8dem6v44g95u8lh5oi55\n    namespace: projectsveltos\n  - deploymentType: Local\n    kind: ConfigMap\n    name: sveltos-uad8ick2n9mrde65usds\n    namespace: projectsveltos\nstatus:\n  matchingClusters:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: a\n    namespace: cluster-a\n---\napiVersion: v1\ndata:\n  service.yaml: |\n    kind: Service\n    apiVersion: v1\n    metadata:\n      name: \"lb-894cbba1a1a9a95d0bdb13e08dbbeb6db3f2e672\"\n      namespace: \"cluster-a\"\n      labels:\n        lb.buttah.cloud/class: \"internet\"\n        lb.buttah.cloud/cluster: \"a\"\n      annotations:\n        lb.buttah.cloud/name: \"svc-a\"\n        lb.buttah.cloud/namespace: \"default\"\n    spec:\n      ports:\n        - name: \"test\"\n          port: 1234\n          protocol: \"TCP\"\n          targetPort: 1111\n      selector:\n          cluster.x-k8s.io/cluster-name: \"a\"\n      type: LoadBalancer\nkind: ConfigMap\nmetadata:\n  name: sveltos-8dem6v44g95u8lh5oi55\n---\napiVersion: v1\ndata:\n  cp.yaml: |\n    apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    metadata:\n      name: \"lbs-894cbba1a1a9a95d0bdb13e08dbbeb6db3f2e672\"\n      annotations:\n        lb.buttah.cloud/name: \"svc-a\"\n        lb.buttah.cloud/namespace: \"default\"\n    spec:\n      clusterRefs:\n      - apiVersion: lib.projectsveltos.io/v1beta1\n        kind: SveltosCluster\n        name: \"a\"\n        namespace: \"cluster-a\"\n      templateResourceRefs:\n      - identifier: UpstreamLB\n        resource:\n          apiVersion: v1\n          kind: Service\n          name: \"lb-894cbba1a1a9a95d0bdb13e08dbbeb6db3f2e672\"\n          namespace: \"cluster-a\"\n      policyRefs:\n      - kind: ConfigMap\n        name: loadbalancer-class-handler-status\n        namespace: projectsveltos\n        deploymentType: Remote\nkind: ConfigMap\nmetadata:\n  name: sveltos-uad8ick2n9mrde65usds\n```\n\n----------------------------------------\n\nTITLE: Registering a Cluster with sveltosctl Using Kubeconfig\nDESCRIPTION: This command registers a cluster with Sveltos using the sveltosctl CLI, specifying the namespace, cluster name, kubeconfig file, and labels. This is the second step in the alternative registration process.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl register cluster \\\n    --namespace=monitoring \\\n    --cluster=prod-cluster \\\n    --kubeconfig=~/.kube/prod-cluster.config \\\n    --labels=environment=production,tier=backend\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Secret for Private Registry Authentication\nDESCRIPTION: This YAML defines a Kubernetes Secret for authenticating with a private registry. The Secret stores the username, password, and base64 encoded authentication string in the `auths` field. Replace `REDACTED` with your actual username and password/token.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n{\"auths\":{\"https://registry-1.docker.io/v1/\":{\"username\":\"REDACTED\",\"password\":\"REDACTED\",\"auth\":\"username:password base64 encoded\"}}}\n```\n\n----------------------------------------\n\nTITLE: Configuring EventTrigger for Namespace Creation Response\nDESCRIPTION: YAML configuration for an EventTrigger and ConfigMap template that creates a Namespace in response to a user login event. The EventTrigger references the 'user-login' EventSource and applies to clusters with the 'env: fv' label.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: create-namespace\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: fv\n  eventSourceName: user-login\n  oneForEvent: true\n  cloudEventAction: Create\n  policyRefs:\n  - name: namespace\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: namespace\n  namespace: default\n  annotations:\n    projectsveltos.io/instantiate: ok\ndata:\n  namespace.yaml: |\n    kind: Namespace\n    apiVersion: v1\n    metadata:\n      name: {{ .CloudEvent.subject }} # .CloudEvent is the triggering CloudEvent\n      labels:\n        organization: {{ ( index .CloudEvent.data `organization` ) }}\n```\n\n----------------------------------------\n\nTITLE: Setting Google Cloud Project and Enabling Secret Manager API (bash)\nDESCRIPTION: These bash commands configure the Google Cloud project to be used and enable the Secret Manager API. Replace `<your-google-cloud-project-name-here>` with your actual Google Cloud project name. These commands are prerequisites for interacting with Google Cloud Secret Manager.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/external_secret.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"$ yourproject=<your-google-cloud-project-name-here>\n\n$ gcloud config set project $yourproject\n\n$ gcloud services enable secretmanager.googleapis.com\"\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile for Kyverno Deployment in YAML\nDESCRIPTION: This snippet showcases a YAML configuration for a Sveltos ClusterProfile, which is utilized to manage the deployment of Kubernetes add-ons, specifically Kyverno. It includes details such as the cluster selector, synchronization mode, and Helm chart specifications for deploying the Kyverno policies.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/use_cases/use_case_hybrid_multicloud.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n  policyRefs:\n  - name: disallow-latest-tag # (1)\n    namespace: default\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile definition with templated values\nDESCRIPTION: This ClusterProfile defines a Kustomization deployment from a Git repository, using values expressed as templates. Sveltos will instantiate these templates using the Cluster instance and then use the instantiated key-value pairs to instantiate the output of the Kustomize build.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: hello-world-with-template\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  kustomizationRefs:\n  - deploymentType: Remote\n    kind: GitRepository\n    name: flux2\n    namespace: flux2\n    path: ./template/helloWorld/\n    targetNamespace: eng\n    values:\n      Region: '{{ index .Cluster.metadata.labels \"region\" }}'\n      Version: v1.2.0\n  reloader: false\n  stopMatchingBehavior: WithdrawPolicies\n  syncMode: Continuous\n\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterHealthCheck to Select and Monitor Managed Clusters\nDESCRIPTION: This YAML defines a ClusterHealthCheck that selects managed clusters with the label 'env=fv' and applies the previously defined HealthCheck. It also sets up notifications through Kubernetes Events when the health status changes.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: deployment\n    type: HealthCheck\n    livenessSourceRef:\n      kind: HealthCheck\n      apiVersion: lib.projectsveltos.io/v1beta1\n      name: deployment-replicas\n  notifications:\n  - name: event\n    type: KubernetesEvent\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile Re-deploys Add-ons after Cluster Change - YAML\nDESCRIPTION: This snippet illustrates how a ClusterProfile reacts to a change in the active cluster, re-deploying the add-ons to the new selected cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/set.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  helmCharts:\n  - chartName: kyverno/kyverno\n    chartVersion: v3.3.3\n    helmChartAction: Install\n    releaseName: kyverno-latest\n    releaseNamespace: kyverno\n    repositoryName: kyverno\n    repositoryURL: https://kyverno.github.io/kyverno/\n  setRefs:\n  - prod\nstatus:\n  matchingClusters:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: cluster1\n    namespace: civo\n\n```\n\n----------------------------------------\n\nTITLE: Registering EKS Cluster with Sveltos\nDESCRIPTION: These commands set up the environment to point to the Sveltos management cluster and register the EKS cluster using the generated kubeconfig. This is the final step in registering an EKS cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBECONFIG=<Sveltos management cluster>\n$ sveltosctl register cluster --namespace=<namespace> --cluster=<cluster name> \\\n    --kubeconfig=<path to Sveltos file with Kubeconfig> \\\n    --labels=env=test\n```\n\n----------------------------------------\n\nTITLE: Displaying Resources in Managed Clusters with Bash\nDESCRIPTION: Uses the 'show resources' command of sveltosctl to display Kubernetes resources like pods in managed clusters. This command requires specifying the kind and namespace of the resources to be displayed.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/visibility.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show resources --kind=pod --namespace=nginx\n+-----------------------------+---------------+-----------+-----------------------------------+-------------------+\n|           CLUSTER           |      GVK      | NAMESPACE |               NAME                |      MESSAGE      |\n+-----------------------------+---------------+-----------+-----------------------------------+-------------------+\n| default/clusterapi-workload | /v1, Kind=Pod | nginx     | nginx-deployment-85996f8dbd-7tctq | Deployment: nginx |\n|                             |               | nginx     | nginx-deployment-85996f8dbd-tz4gd | Deployment: nginx |\n| gke/pre-production          |               | nginx     | nginx-deployment-c4f7848dc-6jtwg  | Deployment: nginx |\n|                             |               | nginx     | nginx-deployment-c4f7848dc-trllk  | Deployment: nginx |\n| gke/production              |               | nginx     | nginx-deployment-676cf9b46d-k84pb | Deployment: nginx |\n|                             |               | nginx     | nginx-deployment-676cf9b46d-mmbl4 | Deployment: nginx |\n+-----------------------------+---------------+-----------+-----------------------------------+-------------------+\n```\n\n----------------------------------------\n\nTITLE: Full Code to Deploy Event Handlers and Services\nDESCRIPTION: This comprehensive snippet showcases the full YAML configuration needed to deploy EventSource and EventTrigger configurations. It includes resource evaluations to match load balancer classes and handles service and cluster profile deployments via locally and remotely defined ConfigMaps. Prerequisites include a compatible Sveltos environment and correctly organized label/annotation strategies.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: loadbalancer-class-handler\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n    evaluate: |\n      function evaluate()\n        hs = {}\n        hs.matching = false\n        if obj.metadata.labels[\"lb.buttah.cloud/class\"] ~= nil  then\n          hs.matching = true\n          return hs\n        end\n        return hs\n      end\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: loadbalancer-class-handler\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: prod\n  eventSourceName: loadbalancer-class-handler\n  oneForEvent: true\n  policyRefs:\n  - kind: ConfigMap\n    name: loadbalancer-class-handler-svc\n    namespace: projectsveltos\n    deploymentType: Local\n  - kind: ConfigMap\n    name: loadbalancer-class-handler-cp\n    namespace: projectsveltos\n    deploymentType: Local\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loadbalancer-class-handler-svc\n  namespace: projectsveltos\n  annotations:\n    projectsveltos.io/instantiate: \"true\"\ndata:\n  service.yaml: |\n    kind: Service\n    apiVersion: v1\n    metadata:\n      name: \"lb-{{ cat .Resource.metadata.name .Resource.metadata.namespace .Cluster.metadata.name | sha1sum }}\"\n      namespace: \"{{ .Cluster.metadata.namespace }}\"\n      labels:\n        lb.buttah.cloud/class: \"{{ get .Resource.metadata.labels `lb.buttah.cloud/class` }}\"\n        lb.buttah.cloud/cluster: \"{{ .Cluster.metadata.name }}\"\n      annotations:\n        lb.buttah.cloud/name: \"{{ .Resource.metadata.name }}\"\n        lb.buttah.cloud/namespace: \"{{ .Resource.metadata.namespace }}\"\n    spec:\n      ports:\n        {{- range $port := .Resource.spec.ports }}\n        - name: \"{{ $port.name }}\"\n          port: {{ $port.port }}\n          protocol: \"{{ $port.protocol }}\"\n          targetPort: {{ $port.nodePort }}\n        {{- end }}\n      selector:\n        cluster.x-k8s.io/cluster-name: \"{{ .Cluster.metadata.name }}\"\n      type: LoadBalancer\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loadbalancer-class-handler-cp\n  namespace: projectsveltos\n  annotations:\n    projectsveltos.io/instantiate: \"true\"\ndata:\n  cp.yaml: |\n    apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    metadata:\n      name: \"lbs-{{ cat .Resource.metadata.name .Resource.metadata.namespace .Cluster.metadata.name | sha1sum }}\"\n      annotations:\n        lb.buttah.cloud/name: \"{{ .Resource.metadata.name }}\"\n        lb.buttah.cloud/namespace: \"{{ .Resource.metadata.namespace }}\"\n    spec:\n      clusterRefs:\n      - apiVersion: lib.projectsveltos.io/v1beta1\n        kind: SveltosCluster\n        name: \"{{ .Cluster.metadata.name }}\"\n        namespace: \"{{ .Cluster.metadata.namespace }}\"\n      templateResourceRefs:\n      - identifier: UpstreamLB\n        resource:\n          apiVersion: v1\n          kind: Service\n          name: \"lb-{{ cat .Resource.metadata.name .Resource.metadata.namespace .Cluster.metadata.name | sha1sum }}\"\n          namespace: \"{{ .Cluster.metadata.namespace }}\"\n      policyRefs:\n      - kind: ConfigMap\n        name: loadbalancer-class-handler-status\n        namespace: projectsveltos\n        deploymentType: Remote\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loadbalancer-class-handler-status\n  namespace: projectsveltos\n  annotations:\n    projectsveltos.io/template: \"true\"\n    projectsveltos.io/subressources: \"status\"\ndata:\n  service.yaml: |\n    kind: Service\n    apiVersion: v1\n    metadata:\n      name: {{ get (getResource \"UpstreamLB\").metadata.annotations `lb.buttah.cloud/name` }}\n      namespace: {{ get (getResource \"UpstreamLB\").metadata.annotations `lb.buttah.cloud/namespace` }}\n    status:\n      loadBalancer:\n        ingress:\n          {{- range $ingress := (getResource \"UpstreamLB\").status.loadBalancer.ingress }}\n          - ip: \"{{ $ingress.ip }}\"\n          {{- end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Combined Kyverno and Kubevela ClusterProfile\nDESCRIPTION: This YAML defines a single ClusterProfile that combines the installation of both Kyverno and Kubevela for production clusters. It includes Helm chart details for both applications.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: cp-kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n  - repositoryURL:    https://kubevela.github.io/charts\n    repositoryName:   kubevela\n    chartName:        kubevela/vela-core\n    chartVersion:     1.9.6\n    releaseName:      kubevela-core-latest\n    releaseNamespace: vela-system\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMap for Service Patch on Cluster-a\nDESCRIPTION: This YAML snippet defines a ConfigMap to be deployed on cluster-a, including patch definitions for services. It depends on the 'projectsveltos.io' annotations for templates and subresources and constructs the service status path using resource metadata.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loadbalancer-class-handler-status\n  namespace: projectsveltos\n  annotations:\n    projectsveltos.io/template: \"true\"\n    projectsveltos.io/subressources: \"status\"\ndata:\n  service.yaml: |\n    kind: Service\n    apiVersion: v1\n    metadata:\n      name: {{ get (getResource \"UpstreamLB\").metadata.annotations `lb.buttah.cloud/name` }}\n      namespace: {{ get (getResource \"UpstreamLB\").metadata.annotations `lb.buttah.cloud/namespace` }}\n    status:\n      loadBalancer:\n        ingress:\n          {{- range $ingress := (getResource \"UpstreamLB\").status.loadBalancer.ingress }}\n          - ip: \"{{ $ingress.ip }}\"\n          {{- end }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Telegram Secret for Projectsveltos Notifications\nDESCRIPTION: Bash command to create a Kubernetes secret containing Telegram chat ID and token for use with Projectsveltos notifications. The secret is referenced by the ClusterHealthCheck resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic telegram \\\n  --from-literal=TELEGRAM_CHAT_ID=<your int64 chat id> \\\n  --from-literal=TELEGRAM_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Validating Nginx Deployment in Workload Cluster\nDESCRIPTION: Commands to switch to the workload cluster and verify that the Nginx pods and service are running correctly in the dev namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config set-context kind-clusterapi-workload\n$ kind export kubeconfig --name clusterapi-workload\n\n$ kubectl k get pods,svc -n dev\nNAME                       READY   STATUS    RESTARTS   AGE\npod/nginx-96b9d695-tmqgf   1/1     Running   0          46s\n\nNAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE\nservice/nginx-service   ClusterIP   10.225.11.22   <none>        80/TCP    46s\n```\n\n----------------------------------------\n\nTITLE: Classifier for Services with Specific Labels in YAML\nDESCRIPTION: This Classifier matches any cluster that has a Service with the label 'sveltos: fv' and adds the label 'sveltos-service: present' to the cluster. It uses resource selectors to identify specific Kubernetes resources based on their properties.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/labels_management.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: Classifier\nmetadata:\n  name: sveltos-service\nspec:\n  classifierLabels:\n  - key: sveltos-service\n    value: present\n  deployedResourceConstraint:\n    resourceSelectors:\n    - group: \"\"\n      version: v1\n      kind: Service\n      labelFilters:\n      - key: sveltos\n        operation: Equal\n        value: fv\n```\n\n----------------------------------------\n\nTITLE: Configuring EventTrigger and HTTPRoute Template in YAML\nDESCRIPTION: This YAML defines an EventTrigger that responds to events from the 'eng-http-service' EventSource. It includes a ConfigMap with a template for creating HTTPRoute resources based on the triggered Service events.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_api_gateway_contour.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: service-network-policy\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: fv\n  eventSourceName: eng-http-service\n  oneForEvent: true\n  policyRefs:\n  ...\n  - name: http-routes\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: http-routes\n  namespace: default\n  annotations:\n    projectsveltos.io/template: ok\ndata:\n  http-route.yaml: |\n    kind: HTTPRoute\n    apiVersion: gateway.networking.k8s.io/v1beta1\n    metadata:\n      name: {{ .Resource.metadata.name }}\n      namespace: {{ .Resource.metadata.namespace }}\n      labels:\n        {{ range $key, $value := .Resource.spec.selector }}\n        {{ $key }}: {{ $value }}\n        {{ end }}\n    spec:\n      parentRefs:\n      - group: gateway.networking.k8s.io\n        kind: Gateway\n        name: contour\n        namespace: projectcontour\n      hostnames:\n      - \"local.projectcontour.io\"\n      rules:\n      - matches:\n        - path:\n            type: PathPrefix\n            value: /{{ .Resource.metadata.name }}\n        backendRefs:\n        - kind: Service\n          name: {{ .Resource.metadata.name }}\n          port: {{ (index .Resource.spec.ports 0).port }}\n```\n\n----------------------------------------\n\nTITLE: Generating Kubeconfig for Sveltos Registration\nDESCRIPTION: This command generates a kubeconfig file with a ServiceAccount that has cluster-admin permissions for Sveltos to use. This is the first step in the alternative registration process.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl generate kubeconfig --create > ~/.kube/prod-cluster.config\n```\n\n----------------------------------------\n\nTITLE: Implementing EventTrigger with ConfigMaps for Load Balancer Automation\nDESCRIPTION: This YAML defines an EventTrigger that responds to events from the EventSource and creates new resources. It includes two ConfigMaps that define templates for creating a Service and a ClusterProfile in the management cluster based on the service in the managed cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# deploy on MGMT Cluster\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: loadbalancer-class-handler\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: prod\n  eventSourceName: loadbalancer-class-handler\n  oneForEvent: true\n  policyRefs:\n  - kind: ConfigMap\n    name: loadbalancer-class-handler-svc\n    namespace: projectsveltos\n    deploymentType: Local\n  - kind: ConfigMap\n    name: loadbalancer-class-handler-cp\n    namespace: projectsveltos\n    deploymentType: Local\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loadbalancer-class-handler-svc\n  namespace: projectsveltos\n  annotations:\n    projectsveltos.io/instantiate: \"true\"\ndata:\n  service.yaml: |\n    kind: Service\n    apiVersion: v1\n    metadata:\n      name: \"lb-{{ cat .Resource.metadata.name .Resource.metadata.namespace .Cluster.metadata.name | sha1sum }}\"\n      namespace: \"{{ .Cluster.metadata.namespace }}\"\n      labels:\n        lb.buttah.cloud/class: \"{{ get .Resource.metadata.labels `lb.buttah.cloud/class` }}\"\n        lb.buttah.cloud/cluster: \"{{ .Cluster.metadata.name }}\"\n      annotations:\n        lb.buttah.cloud/name: \"{{ .Resource.metadata.name }}\"\n        lb.buttah.cloud/namespace: \"{{ .Resource.metadata.namespace }}\"\n    spec:\n      ports:\n        {{- range $port := .Resource.spec.ports }}\n        - name: \"{{ $port.name }}\"\n          port: {{ $port.port }}\n          protocol: \"{{ $port.protocol }}\"\n          targetPort: {{ $port.nodePort }}\n        {{- end }}\n      selector:\n        cluster.x-k8s.io/cluster-name: \"{{ .Cluster.metadata.name }}\"\n      type: LoadBalancer\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: loadbalancer-class-handler-cp\n  namespace: projectsveltos\n  annotations:\n    projectsveltos.io/instantiate: \"true\"\ndata:\n  cp.yaml: |\n    apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    metadata:\n      name: \"lbs-{{ cat .Resource.metadata.name .Resource.metadata.namespace .Cluster.metadata.name | sha1sum }}\"\n      annotations:\n        lb.buttah.cloud/name: \"{{ .Resource.metadata.name }}\"\n        lb.buttah.cloud/namespace: \"{{ .Resource.metadata.namespace }}\"\n    spec:\n      clusterRefs:\n      - apiVersion: lib.projectsveltos.io/v1beta1\n        kind: SveltosCluster\n        name: \"{{ .Cluster.metadata.name }}\"\n        namespace: \"{{ .Cluster.metadata.namespace }}\"\n      templateResourceRefs:\n      - identifier: UpstreamLB\n        resource:\n          apiVersion: v1\n          kind: Service\n          name: \"lb-{{ cat .Resource.metadata.name .Resource.metadata.namespace .Cluster.metadata.name | sha1sum }}\"\n          namespace: \"{{ .Cluster.metadata.namespace }}\"\n      policyRefs:\n      - kind: ConfigMap\n        name: loadbalancer-class-handler-status\n        namespace: projectsveltos\n        deploymentType: Remote\n```\n\n----------------------------------------\n\nTITLE: Configuring GitRepository as YttSource - YAML\nDESCRIPTION: This YAML snippet defines a YttSource CRD instance using GitRepository as a source for the ytt controller. It specifies the namespace, name, kind, and path fields to instruct the controller to fetch files from the Git repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: extension.projectsveltos.io/v1beta1\nkind: YttSource\nmetadata:\n  name: yttsource-flux\nspec:\n  namespace: flux-system\n  name: flux-system\n  kind: GitRepository\n  path: ./deployment/\n```\n\n----------------------------------------\n\nTITLE: Creating Sveltos NATS Secret in Kubernetes\nDESCRIPTION: Bash command to create a Kubernetes Secret in the projectsveltos namespace. The Secret contains the NATS configuration that sveltos-agent will use to connect to NATS.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic -n projectsveltos sveltos-nats --from-file=sveltos-nats=nats-configuration\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile with Value Injection in Sveltos\nDESCRIPTION: This YAML defines a ClusterProfile that includes values for template substitution. It provides 'Region' and 'Version' values that Sveltos will inject into templates during deployment to clusters matching the label selector.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: hello-world-with-values\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  kustomizationRefs:\n  - deploymentType: Remote\n    kind: GitRepository\n    name: flux2\n    namespace: flux2\n    path: ./template/helloWorld/\n    targetNamespace: eng\n    values:\n      Region: east\n      Version: v1.2.0\n```\n\n----------------------------------------\n\nTITLE: Configuring sveltos-agent with JSON Patch in Helm values\nDESCRIPTION: Example Helm values configuration that uses JSON Patch (RFC6902) to customize the sveltos-agent deployment, replacing the container image and adding image pull secrets for private registry access.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/air_gapped_installation.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n...\nclassifierManager:\n  agentPatchConfigMap:\n    data:\n      image-patch: |-\n        - op: replace\n          path: /spec/template/spec/containers/0/image\n          value: registry.company.io/projectsveltos/sveltos-agent:dev\n        - op: add\n          path: /spec/template/spec/imagePullSecrets\n          value:\n            - name: my-registry-secret\n...\n```\n\n----------------------------------------\n\nTITLE: Checking Sveltos Pod Status in Management Cluster\nDESCRIPTION: Command to list all Sveltos pods in the projectsveltos namespace to verify that the control plane components are running properly. This is a fundamental step in troubleshooting Sveltos installation issues.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n projectsveltos\n```\n\n----------------------------------------\n\nTITLE: Extending Lua Capabilities with Custom Helper Functions\nDESCRIPTION: This section explains how to extend the functionality of Lua scripts in Sveltos by defining custom helper functions in a ConfigMap. It emphasizes the need to load this configuration in the addon-controller deployment to make the methods available for scripting.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/lua.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nTo load and utilize the custom functions, the`lua-methods` argument must be provided to the addon-controller deployment. Once loaded, the custom methods become available whenever Lua code is executed by Sveltos.\n```\n\n----------------------------------------\n\nTITLE: Viewing Helm Chart Changes in DryRun Mode\nDESCRIPTION: This command displays detected changes to deployed Helm charts, showing which charts would be updated, upgraded, or installed if the ClusterProfile were applied.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/dryrun.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsveltosctl show dryrun           \n+-----------------------------+---------------+------------+----------------+---------------+--------------------------------+-----------------------------------+\n|           CLUSTER           | RESOURCE TYPE | NAMESPACE  |      NAME      |    ACTION     |            MESSAGE             |              PROFILE              |\n+-----------------------------+---------------+------------+----------------+---------------+--------------------------------+-----------------------------------+\n| default/clusterapi-workload | helm release  | kyverno    | kyverno-latest | Update Values | use --raw-diff to see full     | ClusterProfile/deploy-kyverno     |\n|                             |               |            |                |               | diff for helm values           |                                   |\n| default/clusterapi-workload | helm release  | prometheus | prometheus     | Upgrade       | Current version: \"23.4.0\".     | ClusterProfile/prometheus-grafana |\n|                             |               |            |                |               | Would move to version:         |                                   |\n|                             |               |            |                |               | \"26.0.0\"                       |                                   |\n| default/clusterapi-workload | helm release  | grafana    | grafana        | Upgrade       | Current version: \"6.58.9\".     | ClusterProfile/prometheus-grafana |\n|                             |               |            |                |               | Would move to version: \"8.6.4\" |                                   |\n+-----------------------------+---------------+------------+----------------+---------------+--------------------------------+-----------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Creating a Service that Instantiates NetworkPolicy\nDESCRIPTION: This YAML defines a Kubernetes Service with specific labels. Upon creation of this Service, a NetworkPolicy is instantiated from the referenced ConfigMap based on the labels and ports defined.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\n  labels:\n    sveltos: fv\nspec:\n  selector:\n    app.kubernetes.io/name: MyApp\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 9376\n\n```\n\n----------------------------------------\n\nTITLE: Templated Output with Injected Values in Sveltos\nDESCRIPTION: This YAML shows the result of Sveltos value injection process, where template placeholders have been replaced with actual values from the ClusterProfile. The region is set to 'east' and the image version to 'v1.2.0'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-deployment\n  namespace:  test\n  labels:\n    region: east # Replaced value\nspec:\n  ...\n  image: nginx:v1.2.0 # Replaced value\n```\n\n----------------------------------------\n\nTITLE: Creating a Teams Secret for Projectsveltos Notifications\nDESCRIPTION: Bash command to create a Kubernetes secret containing the Microsoft Teams webhook URL for use with Projectsveltos notifications. The secret is referenced by the ClusterHealthCheck resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic teams \\\n  --from-literal=TEAMS_WEBHOOK_URL=\"<your URL>\" \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Advanced Path Templating with Conditional Logic in ClusterProfile\nDESCRIPTION: Complex ClusterProfile example showing conditional path selection using Go template syntax with if statements. The path is determined based on the Kubernetes version label of the target cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ncat > clusterprofile_flux_template_path.yaml <<EOF\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: flux-system\nspec:\n  clusterSelector:\n    matchLabels:\n      region: west\n  templateResourceRefs:\n  - resource:\n      apiVersion: lib.projectsveltos.io/v1beta1\n      kind: SveltosCluster\n      name: \"{{ .Cluster.metadata.name }}\"\n    identifier: Cluster\n  syncMode: Continuous\n  policyRefs:\n  - kind: GitRepository\n    name: flux-system\n    namespace: flux-system\n    path: |-\n      {{$path := index .Cluster.metadata.labels \"projectsveltos.io/k8s-version\" }}{{- if eq $path \"v1.29.8\"}}system/prod\n      {{- else}}system/test\n      {{- end}}\nEOF\n```\n\n----------------------------------------\n\nTITLE: ConfigMap with Subresource Annotation for Service Status Updates\nDESCRIPTION: YAML definition for a ConfigMap that contains a Service resource with status subresource information. The 'projectsveltos.io/subresources: status' annotation instructs Sveltos to update the status subresource when deploying this resource to managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\ndata:\n  service.yaml: |\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: sveltos-subresource\n      namespace: default\n    spec:\n      selector:\n        app: foo\n      ports:\n      - name: my-port\n        port: 443\n        protocol: TCP\n        targetPort: 1032\n      type: LoadBalancer\n    status:\n      loadBalancer:\n        ingress:\n        - ip: 1.1.1.1\nkind: ConfigMap\nmetadata:\n  annotations:\n    projectsveltos.io/subresources: status\n  name: load-balancer-service\n  namespace: default\n```\n\n----------------------------------------\n\nTITLE: Configuring drift-detection-manager with Strategic Merge Patch in Helm values\nDESCRIPTION: Example Helm values configuration that uses a Strategic Merge Patch to customize the drift-detection-manager deployment, specifying a private registry image source and image pull secrets.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/air_gapped_installation.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n...\naddonController:\n  driftDetectionManagerPatchConfigMap:\n    data:\n      patch: |-\n        apiVersion: apps/v1\n        kind: Deployment\n        metadata:\n          name: drift-detection-manager\n        spec:\n          template:\n            spec:\n              imagePullSecrets:\n                - name: my-registry-secret\n              containers:\n                - name: manager\n                  image: registry.company.io/projectsveltos/drift-detection-manager:dev\n...\n```\n\n----------------------------------------\n\nTITLE: Using Helper Functions in Lua for Resource Manipulation\nDESCRIPTION: This Lua snippet demonstrates the use of helper functions to manipulate Kubernetes resources. It fetches a secret, prints its name in upper case, splits the name by a delimiter, and encodes the name in base64 format. It relies on external libraries for string manipulation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/lua.md#2025-04-22_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nlocal strings = require(\"strings\")\n\nfunction evaluate()\n  local secret = getResource(resources, \"ExternalSecret\")\n  print(strings.ToUpper(secret.metadata.name))\n  local splitTable = strings.Split(secret.metadata.name, \"-\") -- metadata.name in the example imported-secret\n  for i, v in ipairs(splitTable) do\n    print(\"Element\", i, \":\", v)\n  end\n  local encoded = base64Encode(secret.metadata.name)\n```\n\n----------------------------------------\n\nTITLE: Checking Labels on Registered SveltosClusters\nDESCRIPTION: Command to display labels on all SveltosClusters, which is useful for verifying that cluster labels match the selectors defined in ClusterProfiles and Profiles.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get sveltosclusters -A --show-labels\n```\n\n----------------------------------------\n\nTITLE: Kyverno ClusterPolicy for Label Management\nDESCRIPTION: YAML configuration for a Kyverno ClusterPolicy that automatically adds admin labels to EventSource resources\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: add-labels\n  annotations:\n    policies.kyverno.io/title: Add Labels\n    policies.kyverno.io/description: >\n      Adds projectsveltos.io/admin-name label on each EventSource\n      created by tenant admin. It assumes each tenant admin is\n      represented in the management cluster by a ServiceAccount.\nspec:\n  background: false\n  rules:\n  - exclude:\n      any:\n      - clusterRoles:\n        - cluster-admin\n    match:\n      all:\n      - resources:\n          kinds:\n          - EventSource\n          - EventTrigger\n    mutate:\n      patchStrategicMerge:\n        metadata:\n          labels:\n            +(projectsveltos.io/serviceaccount-name): '{{serviceAccountName}}'\n            +(projectsveltos.io/serviceaccount-namespace): '{{serviceAccountNamespace}}'\n    name: add-labels\n  validationFailureAction: enforce\n```\n\n----------------------------------------\n\nTITLE: Templated Deployment with Placeholders in Sveltos\nDESCRIPTION: This YAML shows a Deployment manifest with templated values for region and version that Sveltos can replace with actual values during deployment. It demonstrates the template format used for value substitution.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-deployment\n  namespace:  test\n  labels:\n    region: {{ default \"west\" .Region }}  # Placeholder for region with default value \"west\"\nspec:\n  ...\n  image: nginx:{{ .Version }}  # Placeholder for image version\n```\n\n----------------------------------------\n\nTITLE: Installing JSONNET Controller using Kubernetes\nDESCRIPTION: This snippet shows the command to install the jsonnet controller in a Kubernetes cluster, enabling management of jsonnet files through Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f https://raw.githubusercontent.com/gianlucam76/jsonnet-controller/main/manifest/manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Chart Values in Sveltos\nDESCRIPTION: Example showing how to update Helm chart values directly in the ClusterProfile specification.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n    values: |\n      admissionController:\n        replicas: 1\n```\n\n----------------------------------------\n\nTITLE: Defining Service Event Detection with Lua in Sveltos\nDESCRIPTION: This YAML snippet defines an EventSource instance that uses a Lua script to trigger when a Service with the label 'sveltos: fv' is created or deleted. The evaluate function checks if the resource has the specific label.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: sveltos-service\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n    evaluate: |\n      function evaluate()\n        hs = {}\n        hs.matching = false\n        hs.message = \"\"\n        if obj.metadata.labels ~= nil then\n          for key, value in pairs(obj.metadata.labels) do\n            if key == \"sveltos\" then\n              if value == \"fv\" then\n                hs.matching = true\n              end\n            end\n          end\n        end\n        return hs\n      end\n```\n\n----------------------------------------\n\nTITLE: HealthCheck Resource for Deployment Images\nDESCRIPTION: This HealthCheck resource collects and displays deployment images from managed clusters. It selects Deployment resources in the `nginx` namespace and uses a Lua script to extract and report the image name for each container.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n\"---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n  name: deployment-replicas\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \\\"apps\\\"\n    version: v1\n    kind: Deployment\n    namespace: nginx\n  evaluateHealth: |\n    function evaluate()\n      hs = {}\n      hs.status = \\\"Progressing\\\"\n      hs.message = \\\"\\\"\n      if obj.status ~= nil then\n        if obj.status.availableReplicas ~= nil then\n          if obj.status.availableReplicas == obj.spec.replicas then\n            hs.status = \\\"Healthy\\\"\n          else\n            hs.status = \\\"Progressing\\\"\n          end\n        end\n        if obj.status.unavailableReplicas ~= nil then\n          hs.status = \\\"Degraded\\\"\n        end\n      end\n\n      for i, container in ipairs(obj.spec.template.spec.containers) do\n        hs.message = \\\"Image: \\\" .. container.image\n      end\n      return hs\n    end\n\"\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos and Cert-Manager with Helm\nDESCRIPTION: Commands to install cert-manager and Sveltos in the management cluster using Helm.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.16.1 --set crds.enabled=true\nhelm install projectsveltos projectsveltos/projectsveltos -n projectsveltos --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Sending CloudEvent representing user logout\nDESCRIPTION: This shell script defines a CloudEvent in JSON format representing a user logout event. The CloudEvent includes information such as the specversion, type, source, id, subject (username), data content type, and data (message). Note the difference of \"type\" compared to the login example.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nCLOUDEVENT_JSON=$(cat << EOF\n{\n  \"specversion\": \"1.0\",\n  \"type\": \"auth.example.com.logout\",\n  \"source\": \"auth.example.com\",\n  \"id\": \"10001\",\n  \"subject\": \"mgianluc\",\n  \"datacontenttype\": \"application/json\",\n  \"data\": {\n    \"message\": \"User mgianluc logout\"\n  }\n}\nEOF\n)\n```\n\n----------------------------------------\n\nTITLE: Downloading and Creating Todo App Config Map in Bash\nDESCRIPTION: This Bash snippet downloads a YAML file required for deploying a Todo application in a Kubernetes cluster, then creates the necessary config map named todo-app. Prerequisites include access to Kubernetes and the internet to fetch the YAML file. The process outputs the creation of a Kubernetes config map from the input YAML.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/todo_app.yaml\n\n$ kubectl create configmap todo-app --from-file todo_app.yaml\n```\n\n----------------------------------------\n\nTITLE: Commands to create Kustomize ConfigMap\nDESCRIPTION: These commands clone a Git repository, create a tarball archive of a specific directory, and then create a ConfigMap from that archive.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:gianlucam76/kustomize.git \n\n$ tar -czf kustomize.tar.gz -C kustomize/helloWorldWithOverlays .\n\n$ kubectl create configmap kustomize --from-file=kustomize.tar.gz\n\n```\n\n----------------------------------------\n\nTITLE: Generated Ingress Configuration in YAML\nDESCRIPTION: This YAML snippet shows the Ingress resource generated by Sveltos based on the EventTrigger and the matching Services. It includes paths for both 'my-service' and 'my-service-2' with their respective HTTPS ports.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_service_event_trigger.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\n    projectsveltos.io/hash: sha256:bc1e74450d20acedefca38f20cb998b7b24c12ac34e4b501d19b617568926140\n  creationTimestamp: \"2023-03-16T16:35:11Z\"\n  generation: 1\n  labels:\n    projectsveltos.io/reference-kind: ConfigMap\n    projectsveltos.io/reference-name: sveltos-l6hldpydjngao4r23evm\n    projectsveltos.io/reference-namespace: projectsveltos\n  name: ingress\n  namespace: default\n  ownerReferences:\n  - apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    name: sveltos-rgdn6jsy9zivek7e9mtz\n    uid: 29f3552b-be4b-447f-bfc0-aedbad5b21db\n  resourceVersion: \"6186\"\n  uid: 080a6713-4da1-45a4-b189-2ded216fc688\nspec:\n  ingressClassName: http-ingress\n  rules:\n  - http:\n      paths:\n      - backend:\n          service:\n            name: my-service\n            port:\n              number: 443\n        path: /my-service\n        pathType: Prefix\n      - backend:\n          service:\n            name: my-service-2\n            port:\n              number: 8443\n        path: /my-service-2\n        pathType: Prefix\nstatus:\n  loadBalancer: {}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Secret for Harbor Registry\nDESCRIPTION: This YAML defines a Kubernetes Secret for authenticating with a Harbor registry. The Secret stores the base64 encoded authentication string in the `auths` field. Replace `YWRtaW46SGFyYm9yMTIzNDU=` with your actual base64 encoded Harbor credentials.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n{\"auths\":{\"https://harbor.XXXX.k8s.civo.com\":{\"auth\":\"YWRtaW46SGFyYm9yMTIzNDU=\"}}}\n```\n\n----------------------------------------\n\nTITLE: Registering a Shared Application Cluster\nDESCRIPTION: Commands to create a namespace and register a new shared cluster with Sveltos. This cluster is labeled with 'type=app' and will be shared among different tenants, each with their own namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns apps\nsveltosctl register cluster --namespace=apps --cluster=shared --kubeconfig=<managed cluster kubeconfig> --labels=type=app\n```\n\n----------------------------------------\n\nTITLE: Configuring Event-Based Deployment for Database Entry Insertion\nDESCRIPTION: This YAML defines an EventSource to monitor the health of the todo app and an EventTrigger to deploy a Job for inserting data into the database when the app is healthy. It uses Lua for evaluation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\nname: todo-app-health\nspec:\ncollectResources: false\nresourceSelectors:\n- group: \"apps\"\n  version: \"v1\"\n  kind: \"Deployment\"\n  namespace: todo\n  evaluate: |\n    function evaluate()\n      hs = {}\n      hs.matching = false\n      hs.message = \"\"\n      if obj.metadata.name == \"todo-gitops\" then\n        if obj.status ~= nil then\n          if obj.status.availableReplicas ~= nil then\n            if obj.status.availableReplicas == obj.spec.replicas then\n              hs.matching = true\n            end\n          end\n        end\n      end\n      return hs\n    end\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\nname: insert-data\nspec:\nsourceClusterSelector:\n  matchLabels:\n    env: fv\neventSourceName: todo-app-health\nstopMatchingBehavior: LeavePolicies\npolicyRefs:\n- name: todo-insert-data\n  namespace: default\n  kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Labeling Management Cluster\nDESCRIPTION: Command to label the management cluster with type=mgmt.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label sveltoscluster -n mgmt mgmt type=mgmt\n```\n\n----------------------------------------\n\nTITLE: Checking ClusterProfile Status with Example YAML Output\nDESCRIPTION: Sample YAML that shows the status section of a ClusterProfile, indicating which clusters match the selection criteria. This helps troubleshoot why certain clusters may not be receiving configured add-ons.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstatus:\n  matchingClusters:\n  - apiVersion: cluster.x-k8s.io/v1beta1\n    kind: Cluster\n    name: clusterapi-workload\n    namespace: default\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: mgmt\n    namespace: mgmt\n```\n\n----------------------------------------\n\nTITLE: Configuring Event-Based Deployment for Database Table Creation\nDESCRIPTION: This YAML defines an EventSource to monitor the PostgreSQL Deployment's health and an EventTrigger to deploy a Job for creating a database table when the Deployment is healthy. It uses Lua for evaluation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\nname: postgresql-deployment-health\nspec:\ncollectResources: false\nresourceSelectors:\n- group: \"apps\"\n  version: \"v1\"\n  kind: \"Deployment\"\n  namespace: todo\n  evaluate: |\n    function evaluate()\n      hs = {}\n      hs.matching = false\n      hs.message = \"\"\n      if obj.metadata.name == \"postgresql\" then\n        if obj.status ~= nil then\n          if obj.status.availableReplicas ~= nil then\n            if obj.status.availableReplicas == obj.spec.replicas then\n              hs.matching = true\n            end\n          end\n        end\n      end\n      return hs\n    end\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\nname: deploy-insert-table-job\nspec:\nsourceClusterSelector:\n  matchLabels:\n    env: fv\neventSourceName: postgresql-deployment-health\nstopMatchingBehavior: LeavePolicies\npolicyRefs:\n- name: postgresql-job\n  namespace: default\n  kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile for Unauthorized Cluster Deployment\nDESCRIPTION: This YAML demonstrates a ClusterProfile that attempts to deploy Kyverno to clusters not assigned to the tenant. Sveltos will fail this deployment due to lack of permissions.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\n  labels:\n    projectsveltos.io/serviceaccount-name: foo\n    projectsveltos.io/serviceaccount-namespace: default\nspec:\n  clusterSelector:\n    matchLabels:\n      org: bar.io\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Decoding Kamaji Tenant Kubeconfig\nDESCRIPTION: This command retrieves the admin kubeconfig for a Kamaji tenant cluster from a Kubernetes secret, decodes it using base64, and saves it to a file. This is used before registering a Kamaji tenant cluster with Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get secrets -n {your namespace} <tenant_name>-admin-kubeconfig -o json \\\n| jq -r '.data[\"admin.conf\"]' \\\n| base64 --decode \\\n> <path to file with kubeconfig>/<tenant_name>-admin.kubeconfig\n```\n\n----------------------------------------\n\nTITLE: ConfigMap Definition for Lua Execution in Kubernetes\nDESCRIPTION: This YAML snippet defines a ConfigMap that includes Lua code for fetching and processing a Kubernetes Secret. The specified Lua script retrieves the secret, creates a new secret object, and encodes it as JSON to deploy configurations to matching clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/lua.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  annotations:\n    projectsveltos.io/lua: ok\n  name: lua\n  namespace: default\ndata:\n  lua.yaml: |-\n    local json = require(\"json\")\n\n    function evaluate()\n      local secret = getResource(resources, \"ExternalSecret\")\n      print(secret.metadata.name)\n\n      local secretObj = {\n        apiVersion = \"v1\",\n        kind = \"Secret\",\n        metadata = {\n          name = secret.metadata.name,\n          namespace = secret.metadata.namespace,\n        },\n        data = secret.data,\n      }\n\n      local hs = {}\n      hs.resources = json.encode(secretObj)\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile with Harbor Registry Configuration\nDESCRIPTION: This example shows how to configure a ClusterProfile to use a Kubernetes Secret for authentication with a Harbor registry and skip TLS verification. The `registryCredentialsConfig` section specifies the name and namespace of the Secret and sets `insecureSkipTLSVerify` to true. This allows Helm to access the private registry, but should only be used if your Harbor instance doesn't support TLS.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: projectsveltos\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  helmCharts:\n  - repositoryURL:    oci://harbor.4fc01642-cfc0-4c55-a139-d593c92b232f.k8s.civo.com/library\n    repositoryName:   projectsveltos\n    chartName:        projectsveltos\n    chartVersion:     0.38.1\n    releaseName:      projectsveltos\n    releaseNamespace: projectsveltos\n    helmChartAction:  Install\n    registryCredentialsConfig:\n      insecureSkipTLSVerify: true\n      credentials:\n        name: credentials\n        namespace: default\n```\n\n----------------------------------------\n\nTITLE: Creating Secret Resource for Sveltos Cluster Registration\nDESCRIPTION: This YAML snippet defines a Kubernetes Secret resource that stores the kubeconfig for a managed cluster. The Secret must include the kubeconfig in the data section under the key 'kubeconfig'. This is essential for the SveltosCluster resource to reference the kubeconfig correctly.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n    name: YOUR-CLUSTER-NAME-sveltos-kubeconfig\n    namespace: YOUR NAMESPACE\ndata: \n    kubeconfig: BASE64 ENCODED kubeconfig\ntype: Opaque\n```\n\n----------------------------------------\n\nTITLE: Deploying Cloudnative-pg\nDESCRIPTION: Command to deploy the Cloudnative-pg operator using a ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/cloudnative-pg.yaml\n```\n\n----------------------------------------\n\nTITLE: Registering a GKE Cluster with Sveltos\nDESCRIPTION: Command line example for registering a GKE cluster with Sveltos using sveltosctl, specifying the namespace, cluster name, kubeconfig path, and labels.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl register cluster --namespace=gke --cluster=cluster --kubeconfig=/tmp/GKE/kubeconfig --labels=env=production\n```\n\n----------------------------------------\n\nTITLE: Deploying PostgreSQL with ClusterProfile in Sveltos\nDESCRIPTION: This YAML snippet defines a ClusterProfile that instructs Sveltos to create a PostgreSQL Deployment and Service in clusters matching the label 'env: fv'. It references two ConfigMaps containing the actual resource definitions.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: postgresql\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  policyRefs:\n  - name: postgresql-deployment\n    namespace: default\n    kind: ConfigMap\n  - name: postgresql-service\n    namespace: default\n    kind: ConfigMap\n```\n\n----------------------------------------\n\nTITLE: Retrieving EKS Kubeconfig with AWS CLI\nDESCRIPTION: This command uses the AWS CLI to retrieve the kubeconfig for an EKS cluster by specifying the region and cluster name. This is the first step in registering an EKS cluster with Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ aws eks update-kubeconfig --region <the region the cluster created> --name <the name of the cluster>\n```\n\n----------------------------------------\n\nTITLE: Configuring Postgres Auto-deployment\nDESCRIPTION: Commands to apply configurations for automatic PostgreSQL deployment and data fetching.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/auto-deploy-postgres-cluster.yaml\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/fetch-postgres-data.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating CloudConfig Template for Azure\nDESCRIPTION: This snippet illustrates the creation of a CloudConfig template in YAML format that utilizes Sveltos templating syntax. It generates a ConfigMap and a Secret for Kubernetes that will be populated with values related to Azure resources and the cluster environment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: azure-cloud-provider\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"\ndata:\n  configmap.yaml: |\n    {{- $cluster := .InfrastructureProvider -}}\n    {{- $identity := (getResource \"InfrastructureProviderIdentity\") -}}\n    {{- $secret := (getResource \"InfrastructureProviderIdentitySecret\") -}}\n    {{- $subnetName := \"\" -}}\n    {{- $securityGroupName := \"\" -}}\n    {{- $routeTableName := \"\" -}}\n    {{- range $cluster.spec.networkSpec.subnets -}}\n      {{- if eq .role \"node\" -}}\n        {{- $subnetName = .name -}}\n        {{- $securityGroupName = .securityGroup.name -}}\n        {{- $routeTableName = .routeTable.name -}}\n        {{- break -}}\n      {{- end -}}\n    {{- end -}}\n    {{- $cloudConfig := dict\n      \"aadClientId\" $identity.spec.clientID\n      \"aadClientSecret\" (index $secret.data \"clientSecret\" |b64dec)\n      \"cloud\" $cluster.spec.azureEnvironment\n      \"loadBalancerName\" \"\"\n      \"loadBalancerSku\" \"Standard\"\n      \"location\" $cluster.spec.location\n      \"maximumLoadBalancerRuleCount\" 250\n      \"resourceGroup\" $cluster.spec.resourceGroup\n      \"routeTableName\" $routeTableName\n      \"securityGroupName\" $securityGroupName\n      \"securityGroupResourceGroup\" $cluster.spec.networkSpec.vnet.resourceGroup\n      \"subnetName\" $subnetName\n      \"subscriptionId\" $cluster.spec.subscriptionID\n      \"tenantId\" $identity.spec.tenantID\n      \"useInstanceMetadata\" true\n      \"useManagedIdentityExtension\" false\n      \"vmType\" \"vmss\"\n      \"vnetName\" $cluster.spec.networkSpec.vnet.name\n      \"vnetResourceGroup\" $cluster.spec.networkSpec.vnet.resourceGroup\n    -}}\n    ---\n    apiVersion: v1\n    kind: Secret\n    metadata:\n      name: azure-cloud-provider\n      namespace: kube-system\n    type: Opaque\n    data:\n      cloud-config: {{ $cloudConfig | toJson |b64enc }}\n    ---\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: dump-cluster-sveltos-object\n      namespace: default\n    data:\n      object: |\n        {{ .Cluster | toYaml | nindent 4 }}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Token Renewal Options in SveltosCluster Resource\nDESCRIPTION: YAML configuration that needs to be added to a SveltosCluster resource to enable automatic token renewal. This sets up how frequently tokens are renewed and which ServiceAccount to use for renewal.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntokenRequestRenewalOption:\n  renewTokenRequestInterval: 1h0m0s\n  saName: projectsveltos\n  saNamespace: projectsveltos\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Mode 2 via Manifest\nDESCRIPTION: Commands to install Sveltos in Centralised Agent Mode using manifest files. This deploys agents in the management cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/agents_in_mgmt_cluster_manifest.yaml\n\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/default-instances.yaml\n```\n\n----------------------------------------\n\nTITLE: Registering Application Cluster\nDESCRIPTION: Commands to create namespace and register a new cluster that requires PostgreSQL.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns coke\nsveltosctl register cluster --namespace=coke --cluster=my-app --kubeconfig=<managed cluster kubeconfig> --labels=postgres=required\n```\n\n----------------------------------------\n\nTITLE: Listing Sveltos Addons - Bash\nDESCRIPTION: This Bash command lists the addons managed by Sveltos in the specified cluster, showing details like resource type, namespace, and cluster profiles.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons \n+-------------------------------------+-----------------+-----------+----------------------+---------+-------------------------------+------------------+\n|               CLUSTER               |  RESOURCE TYPE  | NAMESPACE |         NAME         | VERSION |             TIME              | CLUSTER PROFILES |\n+-------------------------------------+-----------------+-----------+----------------------+---------+-------------------------------+------------------+\n| default/sveltos-management-workload | :Service        | staging   | sample-app           | N/A     | 2023-05-22 08:00:28 -0700 PDT | deploy-resources |\n| default/sveltos-management-workload | apps:Deployment | staging   | sample-app           | N/A     | 2023-05-22 08:00:28 -0700 PDT | deploy-resources |\n| default/sveltos-management-workload | :Secret         | staging   | application-settings | N/A     | 2023-05-22 08:00:28 -0700 PDT | deploy-resources |\n+-------------------------------------+-----------------+-----------+----------------------+---------+-------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMaps for Kyverno Policies\nDESCRIPTION: This bash script downloads Kyverno policy YAML files and creates ConfigMaps from them. These ConfigMaps are used in the Kyverno admission policies ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/kyverno/policies/main/best-practices/disallow-latest-tag/disallow-latest-tag.yaml\n\n$ kubectl create configmap disallow-latest-tag --from-file disallow-latest-tag.yaml\n\n$ wget https://raw.githubusercontent.com/kyverno/policies/main/other/res/restrict-wildcard-verbs/restrict-wildcard-verbs.yaml\n\n$ kubectl create configmap restrict-wildcard-verbs --from-file restrict-wildcard-verbs.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Registered Clusters\nDESCRIPTION: Command to verify that clusters have been successfully registered with Sveltos. The output shows both the management cluster and services cluster with their respective labels and readiness status.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get sveltoscluster -A --show-labels\nNAMESPACE          NAME      READY   VERSION        LABELS\nmgmt               mgmt      true    v1.29.2+k3s1   projectsveltos.io/k8s-version=v1.29.2,sveltos-agent=present,type=mgmt\nmanaged-services   services  true    v1.29.8+k3s1   projectsveltos.io/k8s-version=v1.29.8,sveltos-agent=present,type=services\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMap for Template\nDESCRIPTION: This YAML snippet defines a ConfigMap which includes an annotation to indicate that its content is a Sveltos template, allowing the use of the 'AutoscalerSecret' identifier within its data section for resource deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: info\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\ndata:\n  secret.yaml: |\n    # AutoscalerSecret now references the Secret default/autoscaler\n    apiVersion: v1\n    kind: Secret\n    metadata:\n      name: autoscaler\n      namespace: {{ (getResource \"AutoscalerSecret\").metadata.namespace }}\n    data:\n      token: {{ (getResource \"AutoscalerSecret\").data.token }}\n      ca.crt: {{ $data:=(getResource \"AutoscalerSecret\").data }} {{ (index $data \"ca.crt\") }}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring GitRepository with Templating in Sveltos\nDESCRIPTION: GitRepository resource configuration with the projectsveltos.io/template annotation that enables templating for all content within the Git repository. This is required to utilize templating features with Git sources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  name: flux-system\n  namespace: flux-system\n  annotations:\n    projectsveltos.io/template: \"true\"\nspec:\n  interval: 1m0s\n  ref:\n    branch: main\n  secretRef:\n    name: flux-system\n  timeout: 60s\n  url: https://github.com/gianlucam76/yaml_flux.git\n```\n\n----------------------------------------\n\nTITLE: Applying Nginx ClusterProfile\nDESCRIPTION: Command to apply the ClusterProfile resource that will trigger the deployment of Nginx to the matched clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f clusterprofile_nginx.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Nginx Deployment YAML Definition\nDESCRIPTION: YAML definition file for deploying Nginx, including namespace creation, deployment configuration with a single replica, and a ClusterIP service.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ncat > nginx_deploy.yaml <<EOF\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: dev\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\n  namespace: dev\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\n  namespace: dev\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n  type: ClusterIP\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Database Access Job\nDESCRIPTION: Commands to deploy and configure a Job that will access the PostgreSQL database.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/job-to-create-table.yaml\nkubectl label sveltoscluster -n coke my-app type=app\n```\n\n----------------------------------------\n\nTITLE: Configuring Renovate for Sveltos Resources in JSON\nDESCRIPTION: A basic Renovate configuration for Sveltos resources. It extends recommended configs, enables the dependency dashboard, removes PR and branch limits, and sets up the Sveltos manager to match YAML files.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/dependency-management.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\"config:recommended\", \":dependencyDashboard\"],\n  \"prHourlyLimit\": 0,\n  \"prConcurrentLimit\": 0,\n  \"branchConcurrentLimit\": 0,\n  \"sveltos\": {\n      \"fileMatch\": [\"^.*/*\\\\.yaml$\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Kyverno ClusterProfile for Production Clusters\nDESCRIPTION: This YAML defines a ClusterProfile for installing Kyverno on production clusters. It specifies the Helm chart details for Kyverno installation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/depends_on.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: cp-kyverno\nspec:\n  clusterSelector:\n    matchLabels:\n      env: production\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Verifying Cloudnative-pg Deployment\nDESCRIPTION: Command to verify that the Cloudnative-pg Helm chart has been deployed by Sveltos. The output shows the cluster, resource type, namespace, and other details about the deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsveltosctl show addons        \n+--------------------------+---------------+-------------+------+---------+--------------------------------+----------------------------+\n|         CLUSTER          | RESOURCE TYPE |  NAMESPACE  | NAME | VERSION |              TIME              |          PROFILES          |\n+--------------------------+---------------+-------------+------+---------+--------------------------------+----------------------------+\n| managed-services/services| helm chart    | cnpg-system | cnpg | 0.22.1  | 2024-10-25 15:47:54 +0200 CEST | ClusterProfile/deploy-cnpg |\n+--------------------------+---------------+-------------+------+---------+--------------------------------+----------------------------+\n```\n\n----------------------------------------\n\nTITLE: Displaying Deployed Add-ons with sveltosctl\nDESCRIPTION: This bash command and its output demonstrate how to use the sveltosctl tool to list add-ons deployed by Sveltos across clusters. The output shows three resources deployed to the 'eng' namespace from the 'hello-world' ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons\n+-------------------------------------+-----------------+-----------+----------------+---------+-------------------------------+---------------------------------+\n|               CLUSTER               |  RESOURCE TYPE  | NAMESPACE |      NAME      | VERSION |             TIME              |           PROFILES              |\n+-------------------------------------+-----------------+-----------+----------------+---------+-------------------------------+---------------------------------+\n| default/sveltos-management-workload | apps:Deployment | eng       | the-deployment | N/A     | 2023-05-16 00:48:11 -0700 PDT | ClusterProfile/hello-world      |\n| default/sveltos-management-workload | :Service        | eng       | the-service    | N/A     | 2023-05-16 00:48:11 -0700 PDT | ClusterProfile/hello-world      |\n| default/sveltos-management-workload | :ConfigMap      | eng       | the-map        | N/A     | 2023-05-16 00:48:11 -0700 PDT | ClusterProfile/hello-world      |\n+-------------------------------------+-----------------+-----------+----------------+---------+-------------------------------+---------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Defining EventTrigger and Ingress Template in YAML\nDESCRIPTION: This YAML snippet defines an EventTrigger that references the EventSource and a ConfigMap containing an Ingress template. It's configured to create a single Ingress for all matching Services, with dynamic path configuration based on the Services' names and ports.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_service_event_trigger.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: ingress-configuration\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: fv\n  eventSourceName: https-service\n  oneForEvent: false\n  policyRefs:\n  - name: ingress\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ingress\n  namespace: default\n  annotations:\n    projectsveltos.io/template: ok\ndata:\n  ingress.yaml: |\n    apiVersion: networking.k8s.io/v1\n    kind: Ingress\n    metadata:\n      name: ingress\n      namespace: default\n      annotations:\n        nginx.ingress.kubernetes.io/rewrite-target: /\n    spec:\n      ingressClassName: http-ingress\n      rules:\n        - http:\n            paths:\n            {{ range $resource := .Resources }}\n            - path: /{{ .metadata.name }}\n              pathType: Prefix\n              backend:\n                service:\n                  name: {{ .metadata.name }}\n                  port:\n                    {{ range .spec.ports }}\n                    {{ if or (eq .port 443 ) (eq .port 8443 ) }}\n                    number: {{ .port }}\n                    {{ end }}\n                    {{ end }}\n            {{ end }}\n```\n\n----------------------------------------\n\nTITLE: Generating Sveltos Kubeconfig for EKS\nDESCRIPTION: These commands set up the environment to point to the EKS kubeconfig and generate a Sveltos-compatible kubeconfig with a 24-hour expiration. This is the second step in registering an EKS cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBECONFIG=<directory of the EKS kubeconfig file>\n$ sveltosctl generate kubeconfig --create --expirationSeconds=86400 > eks_kubeconfig.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sveltos Version from Management Cluster\nDESCRIPTION: Command to identify the Sveltos version by retrieving the container image from the register-mgmt-cluster-job in the projectsveltos namespace. This is useful for troubleshooting and when getting support from the Sveltos team.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get job register-mgmt-cluster-job -n projectsveltos -o=jsonpath='{.spec.template.spec.containers[0].image}'\n```\n\n----------------------------------------\n\nTITLE: Labeling the Management Cluster\nDESCRIPTION: Command to label the management Sveltos cluster with 'type=mgmt'. This label helps identify the purpose of the cluster within the Sveltos environment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label sveltoscluster -n mgmt mgmt type=mgmt\n```\n\n----------------------------------------\n\nTITLE: Showing addons using sveltosctl\nDESCRIPTION: This command uses sveltosctl to display information about deployed addons, including cluster details, resource types, namespaces, names, versions, deployment times, and associated ClusterProfiles. It provides a summary of resources deployed across managed clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons \n+-----------------------------+-----------------+-----------+----------------+---------+-------------------------------+------------------+\n|           CLUSTER           |  RESOURCE TYPE  | NAMESPACE |      NAME      | VERSION |             TIME              | CLUSTER PROFILES |\n+-----------------------------+-----------------+-----------+----------------+---------+-------------------------------+------------------+\n| default/clusterapi-workload | :Service        | test      | frontend       | N/A     | 2023-08-26 04:53:22 -0700 PDT | guestbook        |\n| default/clusterapi-workload | apps:Deployment | test      | redis-leader   | N/A     | 2023-08-26 04:53:21 -0700 PDT | guestbook        |\n| default/clusterapi-workload | :Service        | test      | redis-leader   | N/A     | 2023-08-26 04:53:21 -0700 PDT | guestbook        |\n| default/clusterapi-workload | apps:Deployment | test      | redis-follower | N/A     | 2023-08-26 04:53:21 -0700 PDT | guestbook        |\n| default/clusterapi-workload | :Service        | test      | redis-follower | N/A     | 2023-08-26 04:53:22 -0700 PDT | guestbook        |\n| default/clusterapi-workload | apps:Deployment | test      | frontend       | N/A     | 2023-08-26 04:53:22 -0700 PDT | guestbook        |\n+-----------------------------+-----------------+-----------+----------------+---------+-------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Configuring JsonnetSource with ConfigMap\nDESCRIPTION: This YAML snippet defines a JsonnetSource instance that references a ConfigMap holding jsonnet files, instructing the jsonnet controller on the file path and variables to use.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: extension.projectsveltos.io/v1beta1\nkind: JsonnetSource\nmetadata:\n  name: jsonnetsource-configmap\nspec:\n  namespace: default\n  name: jsonnet\n  kind: ConfigMap\n  path: ./main.jsonnet\n  variables:\n    namespace: production\n```\n\n----------------------------------------\n\nTITLE: Viewing Detailed DryRun Diffs with Raw Diff Option\nDESCRIPTION: This command displays detailed line-by-line changes for each resource that would be affected by applying the ClusterProfile. The --raw-diff flag provides a comprehensive diff view of the proposed changes.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/dryrun.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show dryrun --raw-diff   \nCluster: default/clusterapi-workload\n--- deployed: ClusterPolicy disallow-latest-tag\n+++ proposed: ClusterPolicy disallow-latest-tag\n@@ -49,10 +49,10 @@\n               name: validate-image-tag\n               skipBackgroundRequests: true\n               validate:\n-                message: Using a mutable image tag e.g. 'latest' is not allowed.\n+                message: Using a mutable image tag e.g. 'latest' is not allowed in this cluster.\n                 pattern:\n                     spec:\n                         containers:\n                             - image: '!*:latest'\n-        validationFailureAction: audit\n+        validationFailureAction: Enforce\n     status: \"\"\n\nCluster: default/clusterapi-workload\n--- deployed: Deployment nginx-deployment\n+++ proposed: Deployment nginx-deployment\n@@ -22,7 +22,7 @@\n         uid: 9ba8bbc1-02fa-4cbb-9073-fe657482277d\n     spec:\n         progressDeadlineSeconds: 600\n-        replicas: 3\n+        replicas: 1\n         revisionHistoryLimit: 10\n         selector:\n             matchLabels:\n```\n\n----------------------------------------\n\nTITLE: Registering Managed Cluster\nDESCRIPTION: Command to register a managed cluster with Sveltos using sveltosctl.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns managed-services\nsveltosctl register cluster --namespace=managed-services --cluster=cluster --kubeconfig=<managed cluster kubeconfig> --labels=type=services\n```\n\n----------------------------------------\n\nTITLE: Defining EventSource for HTTPS Services in YAML\nDESCRIPTION: This YAML snippet defines an EventSource that monitors Services in the 'eng' namespace exposing HTTPS ports (443 or 8443). It uses a Lua function to evaluate if a Service matches the criteria.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_service_event_trigger.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: https-service\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n    namespace: eng\n  evaluate: |\n    function evaluate()\n      hs = {}\n      hs.matching = false\n      if obj.spec.ports ~= nil then\n        for _,p in pairs(obj.spec.ports) do\n          if p.port == 443 or p.port == 8443 then\n            hs.matching = true\n          end\n        end\n      end\n      return hs\n    end\n```\n\n----------------------------------------\n\nTITLE: EventTrigger Configuration with Kyverno\nDESCRIPTION: YAML configuration for EventTrigger that deploys Kyverno in response to events, with oneForEvent set to false\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventTrigger\nmetadata:\n  name: service-network-policy\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: fv\n  eventSourceName: <your eventSource name>\n  oneForEvent: false\n  helmCharts:\n  - repositoryURL:    https://kyverno.github.io/kyverno/\n    repositoryName:   kyverno\n    chartName:        kyverno/kyverno\n    chartVersion:     v3.3.3\n    releaseName:      kyverno-latest\n    releaseNamespace: kyverno\n    helmChartAction:  Install\n```\n\n----------------------------------------\n\nTITLE: Publishing CloudEvent using NATS CLI\nDESCRIPTION: This command publishes a CloudEvent to the NATS server using the NATS CLI (`nats pub`). It executes inside the `nats-box` pod in the `nats` namespace. The `KUBECONFIG` variable specifies the path to the production cluster's kubeconfig, and it authenticates with the NATS server using the provided username and password.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nKUBECONFIG=<production cluster kubeconfig> kubectl exec -it deployment/nats-box -n nats -- nats pub user-operation $CLOUDEVENT_JSON --user=admin --password=my-password\n```\n\n----------------------------------------\n\nTITLE: Deploying Cloudnative-pg Operator\nDESCRIPTION: Command to apply a ClusterProfile that deploys the Cloudnative-pg operator in the managed cluster with label 'type=services'. This operator will manage PostgreSQL databases.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/cloudnative-pg.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating a Discord Secret for Projectsveltos Notifications\nDESCRIPTION: Bash command to create a Kubernetes secret containing Discord channel ID and token for use with Projectsveltos notifications. The secret is referenced by the ClusterHealthCheck resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic discord \\\n  --from-literal=DISCORD_CHANNEL_ID=<your channel id> \\\n  --from-literal=DISCORD_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Configuring JsonnetSource with GitRepository\nDESCRIPTION: This YAML configuration defines a JsonnetSource instance that instructs the jsonnet controller to fetch jsonnet files from a specified Git repository path.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: extension.projectsveltos.io/v1beta1\nkind: JsonnetSource\nmetadata:\n  name: jsonnetsource-flux\nspec:\n  namespace: flux-system\n  name: flux-system\n  kind: GitRepository\n  path: ./variables/deployment.jsonnet\n  variables:\n    deploymentName: eng\n    namespace: staging\n    replicas: \"3\"\n```\n\n----------------------------------------\n\nTITLE: Granting Additional RBAC Permissions for Sveltos\nDESCRIPTION: This YAML snippet defines additional RBAC permissions needed by Sveltos for the demo, including access to ConfigMaps, Namespaces, and Secrets with full permissions.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  - namespaces \n  - secrets\n  verbs:\n  - \"*\"\n```\n\n----------------------------------------\n\nTITLE: Registering a Services Cluster with Sveltos\nDESCRIPTION: Commands to create a namespace and register a managed cluster with Sveltos using sveltosctl. The cluster is labeled with 'type=services' to identify it as the cluster where databases will be deployed.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns managed-services\nsveltosctl register cluster --namespace=managed-services --cluster=services --kubeconfig=<managed cluster kubeconfig> --labels=type=services\n```\n\n----------------------------------------\n\nTITLE: Creating and Labeling a Tenant Namespace\nDESCRIPTION: Commands to create a new tenant namespace ('coke') in the shared cluster and label it with 'postgres=required'. This triggers Sveltos to automatically deploy a dedicated PostgreSQL database for this namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nKUBECONFIG=<kubeconfig of your shared cluster> kubectl create namespace coke\nKUBECONFIG=<kubeconfig of your shared cluster> kubectl label namespace coke postgres=required\n```\n\n----------------------------------------\n\nTITLE: Editing Cluster Labels with kubectl\nDESCRIPTION: This command allows you to edit the labels of a registered cluster using kubectl. It opens the SveltosCluster resource in an editor where you can modify its properties.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl edit sveltoscluster prod-cluster -n monitoring\n```\n\n----------------------------------------\n\nTITLE: Accessing and Examining the Management Cluster\nDESCRIPTION: Commands to configure kubectl to use the management cluster context, export its kubeconfig, and examine the cluster nodes and managed Kubernetes clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config set-context kind-sveltos-management\n$ kind export kubeconfig --name sveltos-management\n\n$ kubectl get nodes\nNAME                               STATUS   ROLES           AGE   VERSION\nsveltos-management-control-plane   Ready    control-plane   69m   v1.32.2\nsveltos-management-worker          Ready    <none>          69m   v1.32.2\nsveltos-management-worker2         Ready    <none>          69m   v1.32.2\n\n$ kubectl get clusters --show-labels\nNAME                  CLUSTERCLASS   PHASE         AGE   VERSION   LABELS\nclusterapi-workload   quick-start    Provisioned   70m   v1.32.0   cluster.x-k8s.io/cluster-name=clusterapi-workload,env=fv,sveltos-agent=present,topology.cluster.x-k8s.io/owned=\n```\n\n----------------------------------------\n\nTITLE: Verifying Postgres Information Collection\nDESCRIPTION: This command checks if Postgres host/port information and credentials were successfully collected and stored in ConfigMaps and Secrets.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get configmap -n production-services postgres-host-port \nkubectl get configmap -n pre-production-services postgres-host-port\nkubectl get secret -n production-services postgres-credentials\nkubectl get secret -n pre-production-services postgres-credentials\n```\n\n----------------------------------------\n\nTITLE: Displaying Kubernetes resources with sveltosctl\nDESCRIPTION: This command displays Kubernetes resources deployed in clusters. The `--full` option shows complete resource details.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"$ sveltosctl show resources --full\"\n```\n\n----------------------------------------\n\nTITLE: Encoding a Kubernetes Secret with JSON in Lua\nDESCRIPTION: This Lua snippet showcases encoding a fetched Kubernetes Secret as a JSON object. It retrieves the secret and encodes it using the json library, demonstrating serialization of resource attributes for further processing.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/lua.md#2025-04-22_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nlocal json = require(\"json\")\n\nfunction evaluate()\n  local secret = getResource(resources, \"ExternalSecret\")\n  local encoded = json.encode(secret)\n  print(encoded)\n```\n\n----------------------------------------\n\nTITLE: Sending CloudEvent representing user login\nDESCRIPTION: This shell script defines a CloudEvent in JSON format representing a user login event. The CloudEvent includes information such as the specversion, type, source, id, subject (username), data content type, and data (message).\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nCLOUDEVENT_JSON=$(cat << EOF\n{\n  \"specversion\": \"1.0\",\n  \"type\": \"auth.example.com.login\",\n  \"source\": \"auth.example.com\",\n  \"id\": \"10001\",\n  \"subject\": \"mgianluc\",\n  \"datacontenttype\": \"application/json\",\n  \"data\": {\n    \"message\": \"User mgianluc login\"\n  }\n}\nEOF\n)\n```\n\n----------------------------------------\n\nTITLE: Inspecting ClusterProfile Status\nDESCRIPTION: Command to extract and display the status section of a specific ClusterProfile, which shows which clusters match the selection criteria. This helps verify that ClusterProfiles are correctly targeting the intended clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get clusterprofile <clusterprofile name> -n <clusterprofile namespace> -o jsonpath='{.status}'\n```\n\n----------------------------------------\n\nTITLE: Patching ClusterRole for Additional RBAC Permissions\nDESCRIPTION: Kubernetes command to patch the addon-controller-role-extra ClusterRole to grant additional permissions to Sveltos. This allows Sveltos to manage ConfigMaps and Secrets resources needed for the database deployment process.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch clusterrole addon-controller-role-extra -p '{\n  \"rules\": [\n    {               \n      \"apiGroups\": [\n        \"\"\n      ],            \n      \"resources\": [ \n        \"configmaps\",\n        \"secrets\"\n      ],        \n      \"verbs\": [\n        \"*\"\n      ]\n    }\n  ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Registering vCluster with Sveltos\nDESCRIPTION: This command registers a vCluster with Sveltos, providing the namespace, cluster name, kubeconfig path, and labels. This example specifically registers a vCluster named 'vcluster-dev' with the label 'env=dev'.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl register cluster \\\n    --namespace=projectsveltos \\\n    --cluster=vcluster-dev \\\n    --kubeconfig=~/demo/vcluster/multi-tenant/kubeconfig/vcluster-dev.yaml \\\n    --labels=env=dev\n```\n\n----------------------------------------\n\nTITLE: Alternative ConfigMap Creation Using Imperative Command\nDESCRIPTION: Bash command to create a ConfigMap imperatively using kubectl, which accomplishes the same result as the declarative YAML method shown earlier.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/raw_yaml.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap nginx --from-file=namespace.yaml --from-file=deployment.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Job to Production Cluster\nDESCRIPTION: This command deploys a Job to the production cluster that will connect to the production Postgres instance and create database tables.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/deploy-job-to-production.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Up Platform Administrator Access\nDESCRIPTION: Example commands to create a platform administrator service account and grant it cluster-admin access through a cluster role binding.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/dashboard.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create sa platform-admin\n$ kubectl create clusterrolebinding platform-admin-access --clusterrole cluster-admin --serviceaccount default:platform-admin\n```\n\n----------------------------------------\n\nTITLE: Creating a Secret in Google Cloud Secret Manager (bash)\nDESCRIPTION: These bash commands create a secret named `yoursecret` in Google Cloud Secret Manager and grant access to the `external-secrets` service account. Replace `yoursecret` and `yoursecret` with desired values and `<your-google-cloud-project-name-here>` with your actual Google Cloud project name.  A service account is created and granted roles/secretmanager.secretAccessor.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/external_secret.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"$ echo -ne '{\"password\":\"yoursecret\"}' | gcloud secrets create yoursecret --data-file=-\n\n$ gcloud iam service-accounts create external-secrets\n\n$ gcloud secrets add-iam-policy-binding yoursecret --member \\\"serviceAccount:external-secrets@$yourproject.iam.gserviceaccount.com\\\" --role \\\"roles/secretmanager.secretAccessor\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating a tarball of jsonnet files for ConfigMap source\nDESCRIPTION: This command creates a tarball containing jsonnet files from a specified directory, which can then be used to create a ConfigMap for the jsonnet controller.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ tar -czf jsonnet.tar.gz -C ~mgianluc/go/src/github.com/gianlucam76/jsonnet-examples/multiple-files .\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret using kubectl\nDESCRIPTION: This command creates a Kubernetes Secret named `regcred` in the `default` namespace from the `secret_content.yaml` file. It sets the type of the Secret to `kubernetes.io/dockerconfigjson`, which is required for Docker registry credentials. This Secret can then be used by Sveltos to authenticate with a private registry.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/helm_charts.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl create secret generic regcred  --from-file=.dockerconfigjson=secret_content.yaml --type=kubernetes.io/dockerconfigjson         \n```\n\n----------------------------------------\n\nTITLE: EventReport Instance for EventTrigger\nDESCRIPTION: This YAML snippet shows the structure of an EventReport generated when an event occurs within a managed cluster. It includes details about the event source and matching resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventReport\nmetadata:\n  creationTimestamp: \"2023-03-14T15:55:23Z\"\n  generation: 2\n  labels:\n    eventreport.projectsveltos.io/cluster-name: sveltos-management-workload\n    eventreport.projectsveltos.io/cluster-type: capi\n    projectsveltos.io/eventsource-name: sveltos-service\n  name: capi--sveltos-service--sveltos-management-workload\n  namespace: default\n  resourceVersion: \"7151\"\n  uid: 0b71c54c-7c0e-4478-b48e-0081e2432c58\nspec:\n  clusterName: sveltos-management-workload\n  clusterNamespace: default\n  clusterType: Capi\n  eventSourceName: sveltos-service\n  matchingResources:\n  - apiVersion: v1\n    kind: Service\n    name: my-service\n    namespace: default\n  resources: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7Imt1YmVjdGwua3ViZXJuZXRlcy5pby9sYXN0LWFwcGxpZWQtY29uZmlndXJhdGlvbiI6IntcImFwaVZlcnNpb25cIjpcInYxXCIsXCJraW5kXCI6XCJTZXJ2aWNlXCIsXCJtZXRhZGF0YVwiOntcImFubm90YXRpb25zXCI6e30sXCJsYWJlbHNcIjp7XCJzdmVsdG9zXCI6XCJmdlwifSxcIm5hbWVcIjpcIm15LXNlcnZpY2VcIixcIm5hbWVzcGFjZVwiOlwiZGVmYXVsdFwifSxcInNwZWNcIjp7XCJwb3J0c1wiOlt7XCJwb3J0XCI6ODAsXCJwcm90b2NvbFwiOlwiVENQXCIsXCJ0YXJnZXRQb3J0XCI6OTM3Nn1dLFwic2VsZWN0b3JcIjp7XCJhcHAua3ViZXJuZXRlcy5pby9uYW1lXCI6XCJNeUFwcFwifX19XG4ifSwiY3JlYXRpb25UaW1lc3RhbXAiOiIyMDIzLTAzLTE0VDE2OjAxOjE0WiIsImxhYmVscyI6eyJzdmVsdG9zIjoiZnYifSwibWFuYWdlZEZpZWxkcyI6W3siYXBpVmVyc2lvbiI6InYxIiwiZmllbGRzVHlwZSI6IkZpZWxkc1YxIiwiZmllbGRzVjEiOnsiZjptZXRhZGF0YSI6eyJmOmFubm90YXRpb25zIjp7Ii4iOnt9LCJmOmt1YmVjdGwua3ViZXJuZXRlcy5pby9sYXN0LWFwcGxpZWQtY29uZmlndXJhdGlvbiI6e319LCJmOmxhYmVscyI6eyIuIjp7fSwiZjpzdmVsdG9zIjp7fX19LCJmOnNwZWMiOnsiZjppbnRlcm5hbFRyYWZmaWNQb2xpY3kiOnt9LCJmOnBvcnRzIjp7Ii4iOnt9LCJrOntcInBvcnRcIjo4MCxcInByb3RvY29sXCI6XCJUQ1BcIn0iOnsiLiI6e30sImY6cG9ydCI6e30sImY6cHJvdG9jb2wiOnt9LCJmOnRhcmdldFBvcnQiOnt9fX0sImY6c2VsZWN0b3IiOnt9LCJmOnNlc3Npb25BZmZpbml0eSI6e30sImY6dHlwZSI6e319fSwibWFuYWdlciI6Imt1YmVjdGwtY2xpZW50LXNpZGUtYXBwbHkiLCJvcGVyYXRpb24iOiJVcGRhdGUiLCJ0aW1lIjoiMjAyMy0wMy0xNFQxNjowMToxNFoifV0sIm5hbWUiOiJteS1zZXJ2aWNlIiwibmFtZXNwYWNlIjoiZGVmYXVsdCIsInJlc291cmNlVmVyc2lvbiI6IjIyNTIiLCJ1aWQiOiIzNDg2ODE1Yi1kZjk1LTRhMzAtYjBjMi01MGFlOGEyNmI4ZWIifSwic3BlYyI6eyJjbHVzdGVySVAiOiIxMC4yMjUuMTY2LjExMyIsImNsdXN0ZXJJUHMiOlsiMTAuMjI1LjE2Ni4xMTMiXSwiaW50ZXJuYWxUcmFmZmljUG9saWN5IjoiQ2x1c3RlciIsImlwRmFtaWxpZXMiOlsiSVB2NCJdLCJpcEZhbWlseVBvbGljeSI6IlNpbmdsZVN0YWNrIiwicG9ydHMiOlt7InBvcnQiOjgwLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjkzNzZ9XSwic2VsZWN0b3IiOnsiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6Ik15QXBwIn0sInNlc3Npb25BZmZpbml0eSI6Ik5vbmUiLCJ0eXBlIjoiQ2x1c3RlcklQIn0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0KLS0t\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Kyverno ClusterPolicy for Automatic Label Addition\nDESCRIPTION: This YAML defines a Kyverno ClusterPolicy that automatically adds required labels to ClusterProfiles created by tenant admins. It ensures proper labeling for service account identification.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: add-labels\n  annotations:\n    policies.kyverno.io/title: Add Labels\n    policies.kyverno.io/description: >\n      Adds projectsveltos.io/admin-name label on each ClusterProfile\n      created by tenant admin. It assumes each tenant admin is\n      represented in the management cluster by a ServiceAccount.\nspec:\n  background: false\n  rules:\n  - exclude:\n      any:\n      - clusterRoles:\n        - cluster-admin\n    match:\n      all:\n      - resources:\n          kinds:\n          - ClusterProfile\n    mutate:\n      patchStrategicMerge:\n        metadata:\n          labels:\n            +(projectsveltos.io/serviceaccount-name): '{{serviceAccountName}}'\n            +(projectsveltos.io/serviceaccount-namespace): '{{serviceAccountNamespace}}'\n    name: add-labels\n  validationFailureAction: enforce\n```\n\n----------------------------------------\n\nTITLE: Downloading and Creating PostgreSQL Config Maps in Bash\nDESCRIPTION: This snippet downloads PostgreSQL deployment and service YAML files from a specified GitHub repository and creates the corresponding config maps in Kubernetes using Bash commands. It requires a working Kubernetes environment and internet access to retrieve the YAML files. Expected input is URLs to the YAML files, and the output is the creation of config maps named postgresql-deployment and postgresql-service.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/postgresql_deployment.yaml\n\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/postgresql_service.yaml\n\n$ kubectl create configmap postgresql-deployment --from-file postgresql_deployment.yaml \n\n$ kubectl create configmap postgresql-service --from-file postgresql_service.yaml \n```\n\n----------------------------------------\n\nTITLE: Verifying Deployment of Database Table Job\nDESCRIPTION: This bash command uses sveltosctl to show the deployed resources, including the new Job for creating the database table.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons                                       \n+-----------------------------+-----------------+-----------+------------+---------+-------------------------------+------------------------------+\n|           CLUSTER           |  RESOURCE TYPE  | NAMESPACE |    NAME    | VERSION |             TIME              |       CLUSTER PROFILES       |\n+-----------------------------+-----------------+-----------+------------+---------+-------------------------------+------------------------------+\n| default/clusterapi-workload | apps:Deployment | todo      | postgresql | N/A     | 2023-08-20 08:23:11 -0700 PDT | postgresql                   |\n| default/clusterapi-workload | :Service        | todo      | postgresql | N/A     | 2023-08-20 08:23:11 -0700 PDT | postgresql                   |\n| default/clusterapi-workload | batch:Job       | todo      | todo-table | N/A     | 2023-08-20 08:30:19 -0700 PDT | sveltos-2gv4dh8dl5fqy2z0amnx |\n+-----------------------------+-----------------+-----------+------------+---------+-------------------------------+------------------------------+\n```\n\n----------------------------------------\n\nTITLE: SveltosCluster Status Showing Token Renewal Information\nDESCRIPTION: YAML example showing how the SveltosCluster status field displays information about the last token renewal, including connection status and timestamp.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n status:\n    connectionStatus: Healthy\n    lastReconciledTokenRequestAt: \"2024-10-08T07:36:42Z\"\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for Sveltos Bucket and Uploader Deployment\nDESCRIPTION: This YAML configuration provides the template for deploying a bucket and uploader pod using Sveltos in a Kubernetes cluster. It defines the structure and parameters necessary for creating the resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/bring_your_own_controller.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncat > bucket.yaml <<EOF\n---\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector: \n    matchLabels:\n      env: production\n  templateResourceRefs:\n  - resource:\n      apiVersion: demo.projectsveltos.io/v1alpha1\n      kind: Bucket\n      name: sveltos-demo-bucket\n    identifier: Bucket\n  policyRefs:\n  - deploymentType: Local\n    kind: ConfigMap\n    name: bucket\n    namespace: default\n  - deploymentType: Remote\n    kind: ConfigMap\n    name: uploader\n    namespace: default\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: bucket\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"\ndata:\n  bucket.yaml: |\n    apiVersion: demo.projectsveltos.io/v1alpha1\n    kind: Bucket\n    metadata:\n      name: sveltos-demo-bucket\n      namespace: {{ .Cluster.metadata.namespace }}\n    spec:\n      bucketName: \"sveltos-demo-{{ .Cluster.metadata.name }}\"\n      location: us-central1\n      serviceAccount: serviceAccount:uploader@sveltos.iam.gserviceaccount.com\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: uploader\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"\ndata:\n  secret.yaml: |\n    apiVersion: v1\n    kind: Secret\n    metadata:\n      name: gcs-credentials\n      namespace: default\n      annotations:\n        bucket: {{ (getResource \"Bucket\").status.bucketURL }}\n    type: Opaque\n    data:\n      service-account.json: {{ (getResource \"Bucket\").status.serviceAccountCredentials }}\n  pod.yaml: |\n    apiVersion: v1\n    kind: Pod\n    metadata:\n      name: create-and-upload-to-gcs\n      namespace: default\n      annotations:\n        bucket: {{ (getResource \"Bucket\").status.bucketURL }}\n    spec:\n      containers:\n      - name: uploader\n        image: google/cloud-sdk:slim\n        command: [\"bash\"]\n        args:\n          - \"-c\"\n          - |\n            echo \"Hello world\" > /tmp/hello.txt\n            gcloud auth activate-service-account --key-file=/var/run/secrets/cloud.google.com/service-account.json\n            gsutil cp /tmp/hello.txt gs://{{ (getResource \"Bucket\").spec.bucketName }}\n        volumeMounts:\n          - name: gcp-sa\n            mountPath: /var/run/secrets/cloud.google.com/\n            readOnly: true\n      volumes:\n        - name: gcp-sa\n          secret:\n            secretName: gcs-credentials\nEOF\n\n```\n\n----------------------------------------\n\nTITLE: Querying Services with Sveltos Label\nDESCRIPTION: Shows how to list services with the sveltos=fv label selector across all namespaces\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get services -A --selector=sveltos=fv   \nNAMESPACE   NAME              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE\ndefault     another-service   ClusterIP   10.225.134.41    <none>        443/TCP   24m\ndefault     my-service        ClusterIP   10.225.166.113   <none>        80/TCP    52m\n```\n\n----------------------------------------\n\nTITLE: Diffing Snapshots with Raw Output\nDESCRIPTION: This command uses `sveltosctl snapshot diff` with the `--raw-diff` option to display the raw configuration changes between two snapshots. The first command shows that a ClusterPolicy was modified and suggests using the `--raw-diff` option for detailed changes. The second command then executes the diff with the raw output, revealing the specific lines that were added or removed in the ClusterPolicy.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl snapshot  diff --snapshot=hourly --from-sample=2023-01-17:14:56:00 --to-sample=2023-01-17:15:56:00\n+-------------------------------------------+--------------------------+-----------+-----------------------+----------+--------------------------------+\n|                  CLUSTER                  |      RESOURCE TYPE       | NAMESPACE |         NAME          |  ACTION  |            MESSAGE             |\n+-------------------------------------------+--------------------------+-----------+-----------------------+----------+--------------------------------+\n| default/capi--sveltos-management-workload | kyverno.io/ClusterPolicy |           | add-default-resources | modified | use --raw-diff option to see   |\n|                                           |                          |           |                       |          | diff                           |\n+-------------------------------------------+--------------------------+-----------+-----------------------+----------+--------------------------------+\n\n$ sveltosctl snapshot  diff --snapshot=hourly --from-sample=2023-01-17:14:56:00 --to-sample=2023-01-17:15:56:00 --raw-diff\n--- kyverno.io/ClusterPolicy add-default-resources from /snapshot/hourly/2023-01-17:14:56:00\n+++ kyverno.io/ClusterPolicy add-default-resources from /snapshot/hourly/2023-01-17:15:56:00\n@@ -37,7 +37,8 @@\n               \"operator\": \"In\",\n               \"value\": [\n                 \"CREATE\",\n-                \"UPDATE\"\n+                \"UPDATE\",\n+                \"DELETE\"\n               ]\n             }\n           ]\n\n```\n\n----------------------------------------\n\nTITLE: Verifying Database Credential Secret Creation\nDESCRIPTION: Command to verify that Sveltos has created a Secret containing the database credentials for the 'coke' namespace. The output shows a Secret named 'coke-app-credentials' has been created.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret -n apps\nNAME                         TYPE     DATA   AGE\ncoke-app-credentials          Opaque   2      0s\n```\n\n----------------------------------------\n\nTITLE: Listing NetworkPolicies\nDESCRIPTION: Displays the network policies created for each service across all namespaces\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get networkpolicy -A\nNAMESPACE   NAME                    POD-SELECTOR                          AGE\ndefault     front-another-service   app.kubernetes.io/name=MyApp-secure   8m40s\ndefault     front-my-service        app.kubernetes.io/name=MyApp          8m40s\n```\n\n----------------------------------------\n\nTITLE: Downloading and Creating PostgreSQL Job Config Map in Bash\nDESCRIPTION: This snippet focuses on downloading a PostgreSQL job YAML file and creating a config map named postgresql-job in Kubernetes using Bash. This operation requires internet access for the wget command and kubectl configured to interact with a Kubernetes cluster. The input is the YAML file's URL, and the output is the creation of the corresponding config map.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/postgresql_job.yaml\n\n$ kubectl create configmap postgresql-job --from-file postgresql_job.yaml\n```\n\n----------------------------------------\n\nTITLE: Downloading and Creating Todo Insert Data Config Map in Bash\nDESCRIPTION: This snippet assists in downloading a YAML file for data insertion into a Todo application and generating a config map called todo-insert-data in Kubernetes. It assumes kubectl is installed and configured, and internet access is available. The input URL is used to fetch the YAML file, with a config map being the generated output.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/todo_insert.yaml\n\n$ kubectl create configmap todo-insert-data --from-file todo_insert.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing SveltosClusters in a Namespace with kubectl\nDESCRIPTION: This bash command and output demonstrate how to list SveltosClusters in the 'civo' namespace, showing their readiness status, Kubernetes versions, and labels. This information is used for dynamic templating in Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get sveltoscluster -n civo --show-labels\nNAME             READY   VERSION        LABELS\npre-production   true    v1.29.2+k3s1   env=civo,projectsveltos.io/k8s-version=v1.29.2\nproduction       true    v1.28.7+k3s1   env=civo,projectsveltos.io/k8s-version=v1.28.7\n```\n\n----------------------------------------\n\nTITLE: Deploying a ClusterProfile with Reference to a ClusterSet - YAML\nDESCRIPTION: This snippet illustrates the creation of a ClusterProfile named 'kyverno' which references the 'prod' ClusterSet for deployments.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/set.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kyverno\nspec:\n  helmCharts:\n  - chartName: kyverno/kyverno\n    chartVersion: v3.3.3\n    helmChartAction: Install\n    releaseName: kyverno-latest\n    releaseNamespace: kyverno\n    repositoryName: kyverno\n    repositoryURL: https://kyverno.github.io/kyverno/\n  setRefs:\n  - prod # name of the ClusterSet\n\n```\n\n----------------------------------------\n\nTITLE: Configuring EventTrigger and Service Policy\nDESCRIPTION: YAML configuration for EventTrigger that deploys selector-less Services and Endpoints based on detected events. Includes templates for Service and Endpoint creation with dynamic values.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_cross_cluster_configuration.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta11\nkind: EventTrigger\nmetadata:\n  name: service-policy\nspec:\n  sourceClusterSelector:\n    matchLabels:\n      env: production\n  destinationClusterSelector:\n    matchLabels:\n      dep: eng\n  eventSourceName: load-balancer-service\n  oneForEvent: true\n  policyRefs:\n  - name: service-policy\n    namespace: default\n    kind: ConfigMap\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: service-policy\n  namespace: default\n  annotations:\n    projectsveltos.io/template: ok\ndata:\n  service.yaml: |\n    kind: Service\n    apiVersion: v1\n    metadata:\n      name: external-{{ .Resource.metadata.name }}\n      namespace: external\n    spec:\n      selector: {}\n      ports:\n        {{ range $port := .Resource.spec.ports }}\n        - port: {{ $port.port }}\n          protocol: {{ $port.protocol }}\n          targetPort: {{ $port.targetPort }}\n        {{ end }}\n  endpoint.yaml: |\n    kind: Endpoints\n    apiVersion: v1\n    metadata:\n      name: external-{{ .Resource.metadata.name }}\n      namespace: external\n    subsets:\n    - addresses:\n      - ip: {{ (index .Resource.status.loadBalancer.ingress 0).ip }}\n      ports:\n        {{ range $port := .Resource.spec.ports }}\n        - port: {{ $port.port }}\n        {{ end }}\n```\n\n----------------------------------------\n\nTITLE: Verifying the Creation of Google Cloud Storage Bucket\nDESCRIPTION: This command is used to verify the IAM permissions of the created Google Cloud Storage bucket by fetching its details.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/bring_your_own_controller.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ gsutil iam get gs://<BUCKET NAME>\n\n```\n\n----------------------------------------\n\nTITLE: Verifying Multi-Tenant Database Deployments\nDESCRIPTION: Command showing the status of Jobs across multiple tenant namespaces. This demonstrates that Sveltos has successfully deployed separate PostgreSQL databases for different tenants ('coke' and 'pepsi') and that both can access their respective databases.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nwatch KUBECONFIG=<kubeconfig of your shared cluster> kubectl get jobs -A \nNAMESPACE   NAME                          COMPLETIONS   DURATION   AGE\ncoke        coke-app-credentials-table    1/1           14s        5m10s\npepsi       pepsi-app-credentials-table   1/1           87s        113s\n```\n\n----------------------------------------\n\nTITLE: Creating a Webex Secret for Projectsveltos Notifications\nDESCRIPTION: Bash command to create a Kubernetes secret containing Webex room ID and token for use with Projectsveltos notifications. The secret is referenced by the ClusterHealthCheck resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic webex \\\n  --from-literal=WEBEX_ROOM_ID=<your channel id> \\\n  --from-literal=WEBEX_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Dashboard with Helm\nDESCRIPTION: Series of commands to install the Sveltos Dashboard using Helm, including adding the repository, updating it, installing the chart, and verifying the installation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/dashboard.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add projectsveltos https://projectsveltos.github.io/helm-charts\n\n$ helm repo update\n\n$ helm install sveltos-projectsveltos projectsveltos/sveltos-dashboard -n projectsveltos\n\n$ helm list -n projectsveltos\n```\n\n----------------------------------------\n\nTITLE: Displaying Pod Resources\nDESCRIPTION: This command displays Pod resources in the `nginx` namespace. The `--kind=pod` option filters for Pod resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n\"$ sveltosctl show resources --kind=pod --namespace=nginx\"\n```\n\n----------------------------------------\n\nTITLE: Creating a ClusterRoleBinding for Dashboard Access\nDESCRIPTION: Command to create a cluster role binding that grants specific permissions to a service account, allowing access to managed clusters in the management cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/dashboard.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create clusterrolebinding <binding_name> --clusterrole <role_name> --serviceaccount <namespace>:<service_account>\n```\n\n----------------------------------------\n\nTITLE: Customizing Drift Detection Manager with ConfigMap (YAML)\nDESCRIPTION: Example of a ConfigMap that contains patches to be applied to the drift-detection-manager before it's deployed in managed clusters. This allows customizing resource requests and container image for the drift detection component.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/configuration_drift.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: drift-detection\n  namespace: projectsveltos\ndata:\n  patch: |-\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: drift-detection-manager\n    spec:\n      template:\n        spec:\n          containers:\n            - name: manager\n              image: registry.company.io/projectsveltos/drift-detection-manager:dev\n              resources:\n                requests:\n                  memory: 256Mi\n```\n\n----------------------------------------\n\nTITLE: Applying ClusterProfile YAML file using kubectl\nDESCRIPTION: This command uses kubectl to apply a ClusterProfile defined in a YAML file obtained from a specified URL. This ClusterProfile will deploy all necessary resources in managed clusters matching the ClusterProfile's cluster selector, effectively deploying the guestbook application.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/snapshot_example/clusterprofile.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Installed Addons in Sveltos\nDESCRIPTION: This command displays the current installed addons in Sveltos, including details about deployments and cluster profiles.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons \n+-------------------------------------+-----------------+-----------+------+---------+-------------------------------+------------------+\n|               CLUSTER               |  RESOURCE TYPE  | NAMESPACE | NAME | VERSION |             TIME              | CLUSTER PROFILES |\n+-------------------------------------+-----------------+-----------+------+---------+-------------------------------+------------------+\n| default/sveltos-management-workload | apps:Deployment | staging   | eng  | N/A     | 2023-05-26 00:24:57 -0700 PDT | deploy-resources |\n+-------------------------------------+-----------------+-----------+------+---------+-------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Defining GitRepository for Flux - YAML\nDESCRIPTION: This YAML snippet configures a GitRepository instance for use with Flux in a Kubernetes management cluster. It specifies repository URL, interval, secret references, and other necessary attributes for syncing.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  finalizers:\n  - finalizers.fluxcd.io\n  name: flux-system\n  namespace: flux-system\nspec:\n  interval: 1m0s\n  ref:\n    branch: main\n  secretRef:\n    name: flux-system\n  timeout: 60s\n  url: ssh://git@github.com/gianlucam76/ytt-examples\n```\n\n----------------------------------------\n\nTITLE: Defining a Snapshot CRD in Kubernetes\nDESCRIPTION: This YAML snippet defines a Snapshot custom resource in Kubernetes.  It specifies a schedule using cron syntax for taking snapshots and a storage location for the snapshots. The snapshot will be taken hourly and the resulting data will be written to the /collection directory.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\n---\napiVersion: utils.projectsveltos.io/v1beta1\nkind: Snapshot\nmetadata:\n  name: hourly\nspec:\n  schedule: \"0 * * * *\" # (1)\n  storage: /collection # (2)\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Job Template for Postgres Table Creation\nDESCRIPTION: This bash script applies a ConfigMap containing a Job template that will be used to create database tables in the Postgres instances.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/configmap-with-templated-job.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving vCluster Kubeconfig from Secret\nDESCRIPTION: This command retrieves the kubeconfig for a vCluster from a Kubernetes secret, decodes it using base64, and saves it to a file. This is used before registering a vCluster with Sveltos.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/register-cluster.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get secret vc-vcluster-dev -n dev --template={{.data.config}} | base64 -d > ~/demo/vcluster/multi-tenant/kubeconfig/vcluster-dev.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMap with Roles for Namespace Access (Tenant eng)\nDESCRIPTION: This ConfigMap defines two Roles, each granting full access to a specific namespace (foo-eng and foo-hr). These roles are referenced by a RoleRequest to grant a service account access to these namespaces.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/multi-tenancy-sharing-cluster.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n\"# ConfigMap contains a Role which gives\n# full access to namespaces ci-cd and build\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: foo-shared-access\n  namespace: default\ndata:\n  ci_cd_role.yaml: |-\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: Role\n    metadata:\n      name: edit-role\n      namespace: foo-eng\n    rules:\n    - apiGroups: [\\\"*\\\"]\n      resources: [\\\"*\\\"]\n      verbs: [\\\"*\\\"]\n  build_role.yaml: |-\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: Role\n    metadata:\n      name: edit-role\n      namespace: foo-hr\n    rules:\n    - apiGroups: [\\\"*\\\"]\n      resources: [\\\"*\\\"]\n      verbs: [\\\"*\\\"]\"\n```\n\n----------------------------------------\n\nTITLE: ConfigMap with Nginx Configuration Data for Kubernetes\nDESCRIPTION: YAML definition of a ConfigMap named nginx-data containing the Nginx server configuration that will be mounted into the Nginx Deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/rolling_upgrade.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\ndata:\n  configmap.yaml: \"# nginx-config.yaml\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: nginx-config\\n  namespace: nginx\\ndata:\\n  nginx.conf: |\\n    server {\\n      listen 80;\\n      server_name example.com;\\n      \\n      location / {\\n        root /usr/share/nginx/html;\\n        index index.html;\\n      }\\n    }\\n\"\nkind: ConfigMap\nmetadata:\n  name: nginx-data\n  namespace: default\n```\n\n----------------------------------------\n\nTITLE: Port forwarding using kubectl\nDESCRIPTION: This command uses kubectl to set up port forwarding from the local machine to the 'frontend' service in the 'test' namespace within the Kubernetes cluster.  It allows accessing the service via localhost:8080.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ KUBECONFIG=test/fv/workload_kubeconfig kubectl port-forward -n test service/frontend 8080:80\n```\n\n----------------------------------------\n\nTITLE: Publishing CloudEvent using NATS CLI - Logout\nDESCRIPTION: This command publishes a CloudEvent to the NATS server using the NATS CLI (`nats pub`). It executes inside the `nats-box` pod in the `nats` namespace. The `KUBECONFIG` variable specifies the path to the production cluster's kubeconfig, and it authenticates with the NATS server using the provided username and password. This command triggers the logout event.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nKUBECONFIG=<production cluster kubeconfig> kubectl exec -it deployment/nats-box -n nats -- nats pub user-operation $CLOUDEVENT_JSON --user=admin --password=my-password\n```\n\n----------------------------------------\n\nTITLE: Displaying PostgreSQL ConfigMap Data Structure\nDESCRIPTION: Example of the structure of the PostgreSQL connection ConfigMap. It contains the external IP address and port for connecting to the database.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  external-ip: 212.2.242.242\n  port: \"5432\"\n```\n\n----------------------------------------\n\nTITLE: Viewing DryRun Results with sveltosctl Command\nDESCRIPTION: This bash command shows how to use the sveltosctl utility to display a summary of all potential changes that would have been made to the matching cluster during a dry run simulation.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/dryrun.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show dryrun\n\n+-------------------------------------+--------------------------+-----------+----------------+-----------+--------------------------------+------------------+\n|               CLUSTER               |      RESOURCE TYPE       | NAMESPACE |      NAME      |  ACTION   |            MESSAGE             | CLUSTER PROFILE  |\n+-------------------------------------+--------------------------+-----------+----------------+-----------+--------------------------------+------------------+\n| default/sveltos-management-workload | helm release             | kyverno   | kyverno-latest | Install   |                                | dryrun           |\n| default/sveltos-management-workload | helm release             | nginx     | nginx-latest   | Install   |                                | dryrun           |\n| default/sveltos-management-workload | :Pod                     | default   | nginx          | No Action | Object already deployed.       | dryrun           |\n|                                     |                          |           |                |           | And policy referenced by       |                  |\n|                                     |                          |           |                |           | ClusterProfile has not changed |                  |\n|                                     |                          |           |                |           | since last deployment.         |                  |\n| default/sveltos-management-workload | kyverno.io:ClusterPolicy |           | no-gateway     | Create    |                                | dryrun           |\n+-------------------------------------+--------------------------+-----------+----------------+-----------+--------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Displaying Admin-RBAC with Sveltosctl CLI in Bash\nDESCRIPTION: Executes the 'show admin-rbac' command using sveltosctl to list permissions granted to tenant admins across managed clusters, designating which resources they can access and modify.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/visibility.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show admin-rbac       \n+---------------------------------------------+-------+----------------+------------+-----------+----------------+-------+\n|                   CLUSTER                   | ADMIN |   NAMESPACE    | API GROUPS | RESOURCES | RESOURCE NAMES | VERBS |\n+---------------------------------------------+-------+----------------+------------+-----------+----------------+-------+\n| Cluster:default/sveltos-management-workload | eng   | build          | *          | *         | *              | *     |\n| Cluster:default/sveltos-management-workload | eng   | ci-cd          | *          | *         | *              | *     |\n| Cluster:default/sveltos-management-workload | hr    | human-resource | *          | *         | *              | *     |\n| SveltosCluster:gke/prod-cluster             | eng   | build          | *          | *         | *              | *     |\n| SveltosCluster:gke/prod-cluster             | eng   | ci-cd          | *          | *         | *              | *     |\n| SveltosCluster:gke/prod-cluster             | hr    | human-resource | *          | *         | *              | *     |\n+---------------------------------------------+-------+----------------+------------+-----------+----------------+-------+\n```\n\n----------------------------------------\n\nTITLE: Editing Cluster Role to Grant Permissions for Bucket Management\nDESCRIPTION: This snippet instructs the user to edit the Cluster Role to add permissions required for Sveltos to manage Google Cloud Storage buckets effectively.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/bring_your_own_controller.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl edit clusterrole addon-controller-role-extra\n\n```\n\n----------------------------------------\n\nTITLE: Applying Automatic PostgreSQL Database Deployment Configuration\nDESCRIPTION: Commands to apply Sveltos configurations that enable automatic deployment of PostgreSQL databases. These configurations instruct Sveltos to monitor for namespaces labeled with 'postgres=required' and deploy databases accordingly.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/auto-deploy-postgres-cluster-per-ns.yaml\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/fetch-postgres-data-per-ns.yaml\n```\n\n----------------------------------------\n\nTITLE: ConfigMap with Nginx Deployment Definition for Kubernetes\nDESCRIPTION: YAML definition of a ConfigMap named nginx containing the Deployment configuration that mounts the nginx-config ConfigMap, demonstrating the pattern for automatic rolling upgrades.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/rolling_upgrade.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\ndata:\n  deployment.yaml: |\n    # nginx-deployment.yaml\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: nginx-deployment\n      namespace: nginx\n    spec:\n      replicas: 1\n      selector:\n        matchLabels:\n          app: nginx\n      template:\n        metadata:\n          labels:\n            app: nginx\n        spec:\n          containers:\n            - name: nginx\n              image: nginx:latest\n              ports:\n                - containerPort: 80\n              volumeMounts:\n                - name: nginx-config-volume\n                  mountPath: /etc/nginx/conf.d/default.conf\n                  subPath: nginx.conf\n          volumes:\n            - name: nginx-config-volume\n              configMap:\n                name: nginx-config\nkind: ConfigMap\nmetadata:\n  name: nginx\n  namespace: default\n```\n\n----------------------------------------\n\nTITLE: Listing snapshots using sveltosctl\nDESCRIPTION: This command uses sveltosctl to list available snapshots, displaying the snapshot policy and creation date.  It shows the new snapshot created after the configuration change.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl snapshot list\n+-----------------+---------------------+\n| SNAPSHOT POLICY |        DATE         |\n+-----------------+---------------------+\n| hourly          | 2023-08-26:05:00:00 |\n| hourly          | 2023-08-26:05:20:00 |\n+-----------------+---------------------+\n```\n\n----------------------------------------\n\nTITLE: Monitoring Database Access Jobs\nDESCRIPTION: Command to watch the status of Jobs in the shared cluster. The output shows a successful Job in the 'coke' namespace that created a table in the PostgreSQL database.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nwatch KUBECONFIG=<kubeconfig of your shared cluster> kubectl get jobs -A \nNAMESPACE   NAME                          COMPLETIONS   DURATION   AGE\ncoke        coke-app-credentials-table    1/1           14s        2m10s\n```\n\n----------------------------------------\n\nTITLE: Adding RBAC Permissions\nDESCRIPTION: Patch command to grant additional RBAC permissions to Sveltos for managing ConfigMaps and Secrets.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch clusterrole addon-controller-role-extra -p '{\n  \"rules\": [\n    {               \n      \"apiGroups\": [\n        \"\"\n      ],            \n      \"resources\": [ \n        \"configmaps\",\n        \"secrets\"\n      ],        \n      \"verbs\": [\n        \"*\"\n      ]\n    }\n  ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Postgres Information using Sveltos Event Framework\nDESCRIPTION: This command applies configurations that leverage Sveltos' event framework to fetch Postgres credentials and service endpoints after deployment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/fetch-credentials.yaml\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/fetch-service-ip.yaml\n```\n\n----------------------------------------\n\nTITLE: Listing ConfigMaps for Template-based References in Sveltos\nDESCRIPTION: This bash command lists ConfigMaps in the 'civo' namespace that are used for dynamic value injection in Sveltos. These ConfigMaps have names that correspond to different cluster environments for targeted configuration.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get configmap -n civo                                                   \nNAME                                  DATA   AGE\nhello-world-pre-production            2      9m40s\nhello-world-production                2      9m45s\n```\n\n----------------------------------------\n\nTITLE: Configuring Slack Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that sends Slack notifications when add-ons are deployed to clusters with the 'env=fv' label. This requires a secret containing the Slack channel ID and token.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n  notifications:\n  - name: slack\n    type: Slack\n    notificationRef:\n      apiVersion: v1\n      kind: Secret\n      name: slack\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Checking sveltosctl CLI Version\nDESCRIPTION: Command to display the sveltosctl CLI version and Git commit information. This helps verify compatibility between client tools and the Sveltos control plane.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl version\nI0428 09:05:01.496691 2181388 version.go:64] \"Client Version:   v0.27.0-17-2fb25f7e7a15a3\"\nI0428 09:05:01.496715 2181388 version.go:65] \"Git commit:       2fb25f7e7a15a3adc351e569f79ec1f80ae1ac7e\"\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile using Kustomize from ConfigMap\nDESCRIPTION: This ClusterProfile uses a ConfigMap as the source for Kustomize resources.  It references a ConfigMap named 'kustomize' and specifies the path within the ConfigMap where the Kustomize configuration is located.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/kustomize.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: kustomize-with-configmap \nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  syncMode: Continuous\n  kustomizationRefs:\n  - namespace: default\n    name: kustomize\n    kind: ConfigMap\n    path: ./overlays/production/\n    targetNamespace: production\n\n```\n\n----------------------------------------\n\nTITLE: Creating an SMTP Secret for Projectsveltos Notifications\nDESCRIPTION: Bash command to create a Kubernetes secret containing SMTP configuration for email notifications in Projectsveltos. Contains recipients, sender information, and SMTP server details.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic smtp \\\n  --from-literal=SMTP_RECIPIENTS=<to email addresses> \\\n  --from-literal=SMTP_BCC=<optional, cc email addresses> \\\n  --from-literal=SMTP_BCC=<optional, bcc email addresses> \\\n  --from-literal=SMTP_SENDER=<send email address> \\\n  --from-literal=SMTP_PASSWORD=<sender app passowrd> \\\n  --from-literal=SMTP_HOST=<host> \\\n  --from-literal=SMTP_PORT=<OPTIONAL, SMTP SERVER PORT, DEFAULTS TO \"587\">\n  --type=addons.projectsveltos.io/cluster-profile \\\n```\n\n----------------------------------------\n\nTITLE: Viewing Replicated Secrets via Sveltosctl\nDESCRIPTION: Demonstrates how to verify the replicated Secrets using the sveltosctl command-line tool.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/generators.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons\n```\n\n----------------------------------------\n\nTITLE: Creating YttSource from ConfigMap - YAML\nDESCRIPTION: This YAML snippet defines a YttSource CRD instance referencing a ConfigMap. It specifies the metadata and spec necessary for the ytt controller to handle resources from the tarball included in the ConfigMap.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: extension.projectsveltos.io/v1beta1\nkind: YttSource\nmetadata:\n  name: yttsource-sample\nspec:\n  namespace: default\n  name: ytt\n  kind: ConfigMap\n  path: ./\n```\n\n----------------------------------------\n\nTITLE: Configuring Maintenance Window for Sveltos Cluster in YAML\nDESCRIPTION: This YAML defines a SveltosCluster resource with a maintenance window configured to allow updates from Friday 8PM to Monday 7AM. The activeWindow field uses cron expressions to specify the time range.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/features/cluster_maintenance_window.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: SveltosCluster\nmetadata:\n  name: cluster1\n  namespace: civo\nspec:\n  activeWindow:\n    from: 0 20 * * 5  # Friday 8PM (0 hour, 20th minute, any day of month, any month, Friday)\n    to: 0 7 * * 1    # Monday 7AM (0 hour, 7th minute, any day of month, any month, Monday)\n```\n\n----------------------------------------\n\nTITLE: Listing Services in Namespace 'eng' using Bash\nDESCRIPTION: This Bash command lists the Services in the 'eng' namespace, showing their names, types, cluster IPs, external IPs, ports, and ages.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_service_event_trigger.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get service -n eng\nNAME           TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)           AGE\nmy-service     ClusterIP   10.225.83.46   <none>        80/TCP,443/TCP    15m\nmy-service-2   ClusterIP   10.225.108.8   <none>        80/TCP,8443/TCP   14m\n```\n\n----------------------------------------\n\nTITLE: Creating a Slack Secret for Projectsveltos Notifications\nDESCRIPTION: Bash command to create a Kubernetes secret containing Slack channel ID and token for use with Projectsveltos notifications. The secret is referenced by the ClusterHealthCheck resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic slack \\\n  --from-literal=SLACK_CHANNEL_ID=<your channel id> \\\n  --from-literal=SLACK_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos Dashboard with kubectl\nDESCRIPTION: Command to deploy the Sveltos Dashboard using kubectl by applying a manifest file directly from the GitHub repository.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/dashboard.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/manifest/dashboard-manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining a Template ConfigMap in Sveltos\nDESCRIPTION: Example of a ConfigMap definition that uses templating to dynamically set values based on cluster metadata. The template references the Cluster resource to populate the ConfigMap name and data fields.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/example_flux_sources.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ncat > cm.yaml <<EOF\n# Sveltos will instantiate this template before deploying to matching managed cluster\n# Sveltos will get the ClusterAPI Cluster instance representing the cluster in the\n# managed cluster, and use that resource data to instintiate this ConfigMap before\n# deploying it\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Cluster.metadata.name }}\n  namespace: default\ndata:\n  controlPlaneEndpoint: \"{{ .Cluster.spec.controlPlaneEndpoint.host }}:{{ .Cluster.spec.controlPlaneEndpoint.port }}\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Implementing Sharding Annotation in Kubernetes Clusters\nDESCRIPTION: To enable sharding in Projectsveltos, add the 'sharding.projectsveltos.io/key' annotation to managed clusters. The shard controller will detect this annotation and automatically deploy a new set of Projectsveltos controllers to manage that shard.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/scalability/sharding.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nsharding.projectsveltos.io/key\n```\n\n----------------------------------------\n\nTITLE: Verifying Deployment of Todo App\nDESCRIPTION: This bash command uses sveltosctl to show all deployed resources, including the new todo app components.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons\n+-----------------------------+---------------------------+-----------+-------------+---------+-------------------------------+------------------------------+\n|           CLUSTER           |       RESOURCE TYPE       | NAMESPACE |    NAME     | VERSION |             TIME              |       CLUSTER PROFILES       |\n+-----------------------------+---------------------------+-----------+-------------+---------+-------------------------------+------------------------------+\n| default/clusterapi-workload | apps:Deployment           | todo      | postgresql  | N/A     | 2023-08-20 08:23:11 -0700 PDT | postgresql                   |\n| default/clusterapi-workload | :Service                  | todo      | postgresql  | N/A     | 2023-08-20 08:23:11 -0700 PDT | postgresql                   |\n| default/clusterapi-workload | batch:Job                 | todo      | todo-table  | N/A     | 2023-08-20 08:30:19 -0700 PDT | sveltos-2gv4dh8dl5fqy2z0amnx |\n| default/clusterapi-workload | :Service                  | todo      | todo-gitops | N/A     | 2023-08-20 08:36:17 -0700 PDT | sveltos-n7201iyuxbsyra94r59f |\n| default/clusterapi-workload | :ServiceAccount           | todo      | todo-gitops | N/A     | 2023-08-20 08:36:17 -0700 PDT | sveltos-n7201iyuxbsyra94r59f |\n| default/clusterapi-workload | apps:Deployment           | todo      | todo-gitops | N/A     | 2023-08-20 08:36:17 -0700 PDT | sveltos-n7201iyuxbsyra94r59f |\n| default/clusterapi-workload | networking.k8s.io:Ingress | todo      | todo        | N/A     | 2023-08-20 08:36:17 -0700 PDT | sveltos-n7201iyuxbsyra94r59f |\n+-----------------------------+---------------------------+-----------+-------------+---------+-------------------------------+------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Instantiating a NetworkPolicy from ConfigMap\nDESCRIPTION: This YAML snippet depicts the instantiation of a NetworkPolicy from the ConfigMap, using details from a created Service. It specifies the name, namespace, and ingress rules based on the Service's selector.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  annotations:\n    projectsveltos.io/hash: sha256:8e7e0a7848eef3f75aed25d1136631dd58bdb9761709a9c46153bb5d04d69e8b\n  creationTimestamp: \"2023-03-14T16:01:44Z\"\n  generation: 1\n  labels:\n    projectsveltos.io/reference-kind: ConfigMap\n    projectsveltos.io/reference-name: sveltos-evykjze69n3bz3gavzw4\n    projectsveltos.io/reference-namespace: projectsveltos\n  name: front-my-service\n  namespace: default\n  ownerReferences:\n  - apiVersion: config.projectsveltos.io/v1beta1\n    kind: ClusterProfile\n    name: sveltos-8ric1wghsf04cu8i1387\n    uid: ca908a7b-e9a7-457b-a077-81400b59902f\n  resourceVersion: \"2312\"\n  uid: 410e8da6-dddc-4c34-9045-8c3967119ae9\nspec:\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: internal\n    ports:\n    - port: 80\n      protocol: TCP\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: MyApp\n  policyTypes:\n  - Ingress\nstatus: {}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring PersistentVolume for sveltosctl Pod in Kubernetes\nDESCRIPTION: YAML configuration for the PersistentVolume claim used by sveltosctl when running as a pod. Defines a 1Gi ReadWriteOnce volume with the 'standard' storage class.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/sveltosctl.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  volumeClaimTemplates:\n  - metadata:\n      name: snapshot\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"standard\"\n      resources:\n        requests:\n          storage: 1Gi\n```\n\n----------------------------------------\n\nTITLE: Defining Secret Resource in Management Cluster\nDESCRIPTION: This YAML snippet defines a Secret within the management cluster that is managed by an External Secret Operator, which securely fetches secrets from a separate system.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\ndata:\n  key1: dmFsdWUx\n  key2: dmFsdWUy\nkind: Secret\nmetadata:\n  creationTimestamp: \"2024-05-27T13:51:00Z\"\n  name: external-secret-operator\n  namespace: default\n  resourceVersion: \"28731\"\n  uid: 99411506-8f5e-4846-9628-58f82b3d01be\ntype: Opaque\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Webex Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that sends Webex notifications when add-ons are deployed to clusters with the 'env=fv' label. This requires a secret containing the Webex room ID and token.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n  notifications:\n  - name: webex\n    type: Webex\n    notificationRef:\n      apiVersion: v1\n      kind: Secret\n      name: webex\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos on Management Cluster with Helm\nDESCRIPTION: Commands to install cert-manager and the Sveltos project on the management cluster using Helm. This installs the necessary components to enable Sveltos functionality for managing Kubernetes add-ons across clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.16.1 --set crds.enabled=true\nhelm install projectsveltos projectsveltos/projectsveltos -n projectsveltos --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Labeling Sveltos Clusters in Bash\nDESCRIPTION: This snippet shows how to add labels to Sveltos clusters using kubectl and then display the updated cluster information.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/addons.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label sveltosclusters cluster12 env=prod -n projectsveltos\n$ kubectl label sveltosclusters cluster13 env=prod -n projectsveltos\n$ kubectl get sveltosclusters -n projectsveltos --show-labels\n\nNAME        READY   VERSION          LABELS\ncluster12   true    v1.26.9+rke2r1   env=prod,sveltos-agent=present\ncluster13   true    v1.26.9+rke2r1   env=prod,sveltos-agent=present\n```\n\n----------------------------------------\n\nTITLE: Generated ConfigMap Example\nDESCRIPTION: Shows an example of the automatically generated ConfigMap storing namespace information for Secret replication.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/generators.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: default-workload-namespaces\n  namespace: projectsveltos\ndata:\n  namespaces: |\n    eng: \"ok\"\n    hr: \"ok\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Kyverno PolicyReport Resources\nDESCRIPTION: This command displays Kyverno PolicyReport resources. It shows the cluster, GVK, namespace, name, and associated messages indicating policy violations.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n\"$ sveltosctl show resources  \"\n```\n\n----------------------------------------\n\nTITLE: Deployed Load Balancer Service on Management Cluster\nDESCRIPTION: The final Service resource deployed on the management cluster by the addon-manager. This service has been assigned an IP address (1.1.1.1) by the load balancer implementation on the management cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_loadbalancer.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Service Deployed on MGMT Cluster from addon-manager\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    lb.buttah.cloud/class: internet\n  name: lb-894cbba1a1a9a95d0bdb13e08dbbeb6db3f2e672\n  namespace: cluster-a\nspec:\n  type: LoadBalancer\n  ports:\n  - name: test\n      port: 1234\n      protocol: TCP\n      targetPort: test\n  selector:\n      cluster.x-k8s.io/cluster-name: \"cluster-a\"\nstatus:\n  loadBalancer:\n    ingress:\n    - ip: 1.1.1.1\n```\n\n----------------------------------------\n\nTITLE: Deploying Job to Pre-Production Cluster\nDESCRIPTION: This command deploys a Job to the pre-production cluster that will connect to the pre-production Postgres instance and create database tables.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/managed-services.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/demos/main/managed-services/deploy-job-to-pre-production.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing Detailed Helm Values Changes with Raw Diff\nDESCRIPTION: This command shows detailed line-by-line changes to Helm chart values that would occur when applying the ClusterProfile, enabling precise review of configuration changes.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/dryrun.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsveltosctl show dryrun --raw-diff\nProfile: ClusterProfile:deploy-kyverno Cluster: default/clusterapi-workload\n--- deployed values\n+++ proposed values\n@@ -1,6 +1,6 @@\n admissionController:\n     replicas: 3\n backgroundController:\n-    replicas: 1\n+    replicas: 3\n reportsController:\n-    replicas: 1\n+    replicas: 3\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Account for Dashboard Authentication\nDESCRIPTION: Command to create a service account in a specified namespace for authentication with the Sveltos Dashboard.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/dashboard.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create sa <user> -n <namespace>\n```\n\n----------------------------------------\n\nTITLE: ConfigMap Definition for RoleRequest Permissions\nDESCRIPTION: This YAML snippet defines a ConfigMap used to store roles and permissions to be referenced in RoleRequests. Dependencies include the Kubernetes RBAC authorization system and an existing `default/full-access` ConfigMap. The role defined grants full access to resources through a specified ClusterRole.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/use_cases/use_case_multi-tenancy.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: full-access\n  namespace: default\ndata:\n  role.yaml: |\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRole\n    metadata:\n      name: eng-full-access\n    rules:\n    - apiGroups: [\"*\"]\n      resources: [\"*\"]\n      verbs: [\"*\"]\n\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMap for Replicating Secrets\nDESCRIPTION: This YAML snippet defines a ConfigMap that serves as a template for deploying a secret across production clusters. It includes an annotation to indicate Sveltos template content and a placeholder reference for the actual secret data.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: replicate-external-secret-operator-secret\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\"  # add annotation to indicate Sveltos content is a template\ndata:\n  secret.yaml: |\n    {{ copy \"ESOSecret\" }}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Kind Clusters\nDESCRIPTION: Command to list the created Kind clusters after the demo environment setup. It displays both the management and workload clusters that have been provisioned.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kind get clusters\nclusterapi-workload\nsveltos-management\n```\n\n----------------------------------------\n\nTITLE: Checking Deployed Resources with sveltosctl\nDESCRIPTION: This bash command uses sveltosctl to display the add-ons deployed by Sveltos, showing the PostgreSQL Deployment and Service.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/deployment_order/order_with_events.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons\n\n+-----------------------------+-----------------+-----------+------------+---------+-------------------------------+------------------+\n|           CLUSTER           |  RESOURCE TYPE  | NAMESPACE |    NAME    | VERSION |             TIME              | CLUSTER PROFILES |\n+-----------------------------+-----------------+-----------+------------+---------+-------------------------------+------------------+\n| default/clusterapi-workload | apps:Deployment | todo      | postgresql | N/A     | 2023-08-20 08:23:11 -0700 PDT | postgresql       |\n| default/clusterapi-workload | :Service        | todo      | postgresql | N/A     | 2023-08-20 08:23:11 -0700 PDT | postgresql       |\n+-----------------------------+-----------------+-----------+------------+---------+-------------------------------+------------------+\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Events Generated by Projectsveltos\nDESCRIPTION: Bash command to list events generated by Projectsveltos ClusterHealthCheck resources. Events provide information about deployment status with Normal type for successful deployments.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get events -n default --field-selector reason=ClusterHealthCheck\nLAST SEEN   TYPE      REASON               OBJECT                  MESSAGE\n31s         Normal    ClusterHealthCheck   clusterhealthcheck/hc   cluster Capi:default/sveltos-management-workload...\n16s         Warning   ClusterHealthCheck   clusterhealthcheck/hc   cluster Capi:default/sveltos-management-workload...\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMap from YAML file using kubectl\nDESCRIPTION: This command downloads a YAML file from a specified URL and then uses kubectl to create a ConfigMap named 'database' from the downloaded file.  The ConfigMap will contain the configurations for the Redis database component of the guestbook application.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/snapshot_example/database.yaml\n\n$ kubectl create configmap database --from-file database.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing Healthy SveltosClusters Output Example\nDESCRIPTION: Example output showing healthy SveltosClusters with proper READY status and version information. This helps establish a baseline for what properly functioning clusters should look like.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get sveltoscluster -A\nNAMESPACE        NAME            READY   VERSION\nprojectsveltos   vcluster-dev    true    v1.29.0+k3s1\nprojectsveltos   vcluster-prod   true    v1.29.0+k3s1\nmgmt             mgmt            true    v1.28.7+k3s1\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Connection in JSON Format\nDESCRIPTION: JSON configuration for connecting to a NATS server with authentication and subject subscriptions. The configuration specifies the NATS server URL, authentication credentials, and subjects to subscribe to.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"nats\":\n   {\n     \"configuration\":\n        {\n            \"url\": \"nats://nats.nats.svc.cluster.local:4222\",\n            \"subjects\": [\n                \"test\",\n                \"foo\"\n            ],\n            \"authorization\": {\n                \"user\": {\n                    \"user\": \"admin\",\n                    \"password\": \"my-password\"\n                }\n            }\n        }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile Definition to Deploy Resources\nDESCRIPTION: This YAML snippet outlines a ClusterProfile that specifies the resources to deploy based on criteria such as the cluster environment. It references the previously defined ConfigMap containing the Lua code for managing resources.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/lua.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  templateResourceRefs:\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: imported-secret\n      namespace: default\n    identifier: ExternalSecret\n  policyRefs:\n  - kind: ConfigMap\n    name: lua\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Defining ClusterProfile Resource for Azure\nDESCRIPTION: This snippet defines a ClusterProfile resource including references to template resources and policies. It specifies necessary identifiers for Azure cluster identity and secret resources for templating.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/template_generic_examples.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-resources\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  templateResourceRefs:\n  - resource:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: AzureClusterIdentity\n      name: azure-cluster-identity\n    identifier: InfrastructureProviderIdentity\n  - resource:\n      apiVersion: v1\n      kind: Secret\n      name: azure-cluster-identity-secret\n    identifier: InfrastructureProviderIdentitySecret\n  policyRefs:\n  - kind: ConfigMap\n    name: azure-cloud-provider\n    namespace: default\n\n```\n\n----------------------------------------\n\nTITLE: Installing Sveltos CRDs via Helm\nDESCRIPTION: Command to install Sveltos CRDs using the dedicated Helm chart.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhelm install projectsveltos/sveltos-crds projectsveltos/sveltos-crds\n```\n\n----------------------------------------\n\nTITLE: Handling Unhealthy Selected Clusters in a ClusterSet - YAML\nDESCRIPTION: Shows the updated status of the ClusterSet when the previously selected cluster becomes unhealthy, resulting in a new active cluster selection.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/set.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterSet\nmetadata:\n  name: prod\nspec:\n  clusterSelector:\n    matchLabels:\n      env: prod\n  maxReplicas: 1\nstatus:\n  matchingClusterRefs:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: cluster1\n    namespace: civo\n  selectedClusterRefs:\n  - apiVersion: lib.projectsveltos.io/v1beta1\n    kind: SveltosCluster\n    name: cluster1\n    namespace: civo\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Application with LoadBalancer Service\nDESCRIPTION: YAML configuration for deploying a sample application with a LoadBalancer type Service in the GKE cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_cross_cluster_configuration.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-deployment-50001\nspec:\n  selector:\n    matchLabels:\n      app: products\n      department: sales\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: products\n        department: sales\n    spec:\n      containers:\n      - name: hello\n        image: \"us-docker.pkg.dev/google-samples/containers/gke/hello-app:2.0\"\n        env:\n        - name: \"PORT\"\n          value: \"50001\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-lb-service\nspec:\n  type: LoadBalancer\n  selector:\n    app: products\n    department: sales\n  ports:\n  - protocol: TCP\n    port: 60000\n    targetPort: 50001\n```\n\n----------------------------------------\n\nTITLE: Manual CRD Update for Helm\nDESCRIPTION: Commands to manually update Sveltos CRDs before performing a Helm upgrade.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/install.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/v0.51.1/manifest/crds/sveltos_crds.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Database Connection ConfigMap Creation\nDESCRIPTION: Command to verify that Sveltos has created a ConfigMap containing the PostgreSQL database connection information. The output shows a ConfigMap named 'coke-lb-data' has been created.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get configmap -n apps                         \nNAME                        DATA   AGE\n...\ncoke-lb-data   2      58s\n```\n\n----------------------------------------\n\nTITLE: Defining EventSource for CloudEvent Filtering\nDESCRIPTION: YAML definition of an EventSource custom resource that filters CloudEvents based on subject and source. This example configures Sveltos to respond to messages on the user-login subject from auth.example.com/user-login source.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/nats.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: user-login\nspec:\n  messagingMatchCriteria:\n  - subject: \"user-login\"\n    cloudEventSource: \"auth.example.com/user-login\"\n```\n\n----------------------------------------\n\nTITLE: Creating Ytt ConfigMap - Bash\nDESCRIPTION: These Bash commands demonstrate creating a tarball of ytt files and adding it to a ConfigMap. This is a preparatory step for using ConfigMap or Secret as a source for the ytt controller.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ tar -czf ytt.tar.gz -C ~mgianluc/go/src/github.com/gianlucam76/ytt-examples/deployment .\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap ytt --from-file=ytt.tar.gz=ytt.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Generating Temporary Kubeconfig for GKE Using sveltosctl\nDESCRIPTION: Command line example showing how to generate a temporary Kubeconfig file for a GKE cluster using sveltosctl. Sets expiration to 24 hours (86400 seconds).\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl  generate kubeconfig --create --expirationSeconds=86400 >  /tmp/GKE/kubeconfig\n```\n\n----------------------------------------\n\nTITLE: Checking Deployed Add-ons with sveltosctl Command\nDESCRIPTION: Bash command that uses sveltosctl to display the resources deployed by Sveltos, showing ConfigMaps and Deployments managed by the ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/rolling_upgrade.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sveltosctl show addons          \n+-----------------------------+---------------------------------+-----------+---------------------+---------+-------------------------------+------------------------------+\n|           CLUSTER           |          RESOURCE TYPE          | NAMESPACE |        NAME         | VERSION |             TIME              |       CLUSTER PROFILES       |\n+-----------------------------+---------------------------------+-----------+---------------------+---------+-------------------------------+------------------------------+\n| default/clusterapi-workload | :ConfigMap                      | nginx     | nginx-config        | N/A     | 2023-08-09 05:00:45 -0700 PDT | nginx                        |\n| default/clusterapi-workload | apps:Deployment                 | nginx     | nginx-deployment    | N/A     | 2023-08-09 05:00:45 -0700 PDT | nginx                        |\n+-----------------------------+---------------------------------+-----------+---------------------+---------+-------------------------------+------------------------------+\n```\n\n----------------------------------------\n\nTITLE: Creating Test Pod for Service Access\nDESCRIPTION: YAML configuration for deploying a busybox pod to test cross-cluster service access.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_cross_cluster_configuration.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: busybox\n  name: busybox\n  namespace: policy-demo\nspec:\n  containers:\n  - args:\n    - /bin/sh\n    - -c\n    - sleep 360000\n    image: busybox:1.28\n    imagePullPolicy: Always\n    name: busybox\n  nodeSelector:\n    kubernetes.io/os: linux\n```\n\n----------------------------------------\n\nTITLE: Deploying a Job to Access the PostgreSQL Database\nDESCRIPTION: Command to apply a configuration that deploys a Job in the 'coke' namespace to create a table in the PostgreSQL database. This demonstrates that the application can successfully access the database.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/job-to-create-table-per-ns.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying PostgreSQL Secret Data Structure\nDESCRIPTION: Example of the structure of the PostgreSQL credentials Secret. It contains base64-encoded username and password for accessing the database.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/db-as-a-service-multiple-db-per-cluster.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  password: bTloaW9UYUFBdVE1cFBQY1QzWGN6RDF2R3JUYzF5d3NVRTcwUTJQQXVUaTNucEZhRVdEYXpsZ1pmcnAzYWZwdg==\n  user: dG9kbw==\n```\n\n----------------------------------------\n\nTITLE: Defining ConfigMaps for Secret Distribution\nDESCRIPTION: Configures two ConfigMaps: one for storing namespace information and another for defining the Secret replication template.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/generators.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: namespaces\n  namespace: default\n  annotations:\n    projectsveltos.io/instantiate: \"true\"\ndata:\n  namespaces: |\n    {{- range $v := .MatchingResources }}\n       {{ $v.Name }}: \"ok\"\n    {{- end }}\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: info\n  namespace: default\n  annotations:\n    projectsveltos.io/template: \"true\" \ndata:\n  secret.yaml: |\n    {{ $namespaces := ( ( index (getResource \"Namespaces\").data \"namespaces\" ) | fromYaml ) }}\n    {{- range $key, $value := $namespaces }}\n        apiVersion: v1\n        kind: Secret\n        metadata:\n          namespace: {{ $key }}\n          name: {{ (getResource \"Credentials\").metadata.name }}\n        data:\n          {{- range $secretKey, $secretValue := (getResource \"Credentials\").data }}\n            {{ $secretKey }} : {{ $secretValue }}\n          {{- end }}\n    ---\n    {{- end }}\n```\n\n----------------------------------------\n\nTITLE: Defining Kyverno ClusterPolicy for Labeling\nDESCRIPTION: This code snippet defines a Kyverno ClusterPolicy for automatically adding labels to HealthCheck resources created by tenant admins. Dependencies include a setup with Kyverno in the cluster and appropriate ServiceAccounts for each tenant admin. The expected input is a HealthCheck resource, and the output is the same resource with additional labels. The policy bypasses users with cluster-admin role.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/notifications.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: add-labels\n  annotations:\n    policies.kyverno.io/title: Add Labels\n    policies.kyverno.io/description: >-\n      Adds projectsveltos.io/admin-name label on each HealthCheck\n      created by tenant admin. It assumes each tenant admin is\n      represented in the management cluster by a ServiceAccount.\nspec:\n  background: false\n  rules:\n  - exclude:\n      any:\n      - clusterRoles:\n        - cluster-admin\n    match:\n      all:\n      - resources:\n          kinds:\n          - HealthCheck\n    mutate:\n      patchStrategicMerge:\n        metadata:\n          labels:\n            +(projectsveltos.io/serviceaccount-name): '{{serviceAccountName}}'\n            +(projectsveltos.io/serviceaccount-namespace): '{{serviceAccountNamespace}}'\n    name: add-labels\n  validationFailureAction: enforce\n\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets for Delivery Methods\nDESCRIPTION: These bash scripts demonstrate how to create Kubernetes secrets required for various delivery methods used in the Techsupport feature. Each secret associates necessary credentials with a delivery method. Dependencies include access to a Kubernetes environment and necessary credentials for each service (e.g., Slack token, Discord channel ID). The outputs are Kubernetes secret objects stored within the specified namespace.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/features/techsupport.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic slack \\\n  --from-literal=SLACK_CHANNEL_ID=<your channel id> \\\n  --from-literal=SLACK_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndeliveryMethods:\n- name: slack\n  type: Slack\n  secretRef:\n    name: slack\n    namespace: default\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic webex \\\n  --from-literal=WEBEX_ROOM_ID=<your channel id> \\\n  --from-literal=WEBEX_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndeliveryMethods:\n- name: webex\n  type: Webex\n  secretRef:\n    name: webext\n    namespace: default\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic discord \\\n  --from-literal=DISCORD_CHANNEL_ID=<your channel id> \\\n  --from-literal=DISCORD_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndeliveryMethods:\n- name: discord\n  type: Discord\n  secretRef:\n    name: discord\n    namespace: default\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic telegram \\\n  --from-literal=TELEGRAM_CHAT_ID=<your int64 chat id> \\\n  --from-literal=TELEGRAM_TOKEN=<your token> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndeliveryMethods:\n- name: telegram\n  type: Telegram\n  secretRef:\n    name: telegram\n    namespace: default\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic smtp \\\n  --from-literal=SMTP_RECIPIENTS=<COMMA-SEPARATED EMAIL ADDRESSES> \\\n  --from-literal=SMTP_CC=<OPTIONAL, COMMA-SEPARATED EMAIL ADDRESSES> \\\n  --from-literal=SMTP_BCC=<OPTIONAL, COMMA-SEPARATED EMAIL ADDRESSES> \\\n  --from-literal=SMTP_SENDER=<EMAIL ADDRESS> \\\n  --from-literal=SMTP_PASSWORD=<OPTIONAL, SMTP PASSWORD FOR EMAIL ADDRESS IF APPLICABLE> \\\n  --from-literal=SMTP_HOST=<SMTP SERVER HOSTNAME> \\\n  --from-literal=SMTP_PORT=<OPTIONAL, SMTP SERVER PORT, DEFAULTS TO \"587\"> \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndeliveryMethods:\n- name: smtp\n  type: SMTP\n  secretRef:\n    name: smtp\n    namespace: default\n```\n\nLANGUAGE: bash\nCODE:\n```\n$  kubectl create secret generic sftp \\\n  --from-literal=SFTP_HOST=<SFTP Server IP> \\\n  --from-literal=SFTP_PORT=<SFTP Server Port> \\\n  --from-literal=SFTP_USERNAME=<username> \\\n  --from-literal=SFTP_PASSWORD=<password, optional ... set SFTP_CERT otherwise>  \\\n  --from-literal=SFTP_CERT=<cert, optional ... set SFTP_PASSWORD otherwise>  \\\n  --from-literal=SFTP_PATH=\"/data/\" \\\n  --from-literal=SFTP_HOST_KEY=\"ssh-ed25519..., optional if not set insecure ignore host will be set\" \\\n  --type=addons.projectsveltos.io/cluster-profile\n```\n\nLANGUAGE: yaml\nCODE:\n```\ndeliveryMethods:\n- name: sftp\n  type: SFTP\n  secretRef:\n    name: sftp\n    namespace: default\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMap from YAML file using kubectl\nDESCRIPTION: This command downloads a YAML file from a specified URL and then uses kubectl to create a ConfigMap named 'frontend' from the downloaded file. The ConfigMap will contain the configurations for the PHP frontend component of the guestbook application.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/snapshot_example/frontend.yaml\n\n$ kubectl create configmap frontend --from-file frontend.yaml\n```\n\n----------------------------------------\n\nTITLE: Editing SveltosCluster Resource to Configure Token Renewal\nDESCRIPTION: Command for editing a SveltosCluster resource to add token renewal configuration.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl edit sveltoscluster -n gke cluster\n```\n\n----------------------------------------\n\nTITLE: Creating a ConfigMap from tarball for JsonnetSource\nDESCRIPTION: This command creates a Kubernetes ConfigMap resource from the previously created tarball of jsonnet files, enabling the jsonnet controller to utilize these files.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/jsonnet_extension.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap jsonnet --from-file=jsonnet.tar.gz=jsonnet.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Installing ytt Controller - Bash\nDESCRIPTION: This Bash command installs the ytt controller necessary for integrating Carvel ytt with Sveltos. This step is essential for setting up the environment and ensuring the required components are loaded.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/ytt_extension.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f https://raw.githubusercontent.com/gianlucam76/ytt-controller/main/manifest/manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying ConfigMap Resources with Sveltosctl\nDESCRIPTION: This command uses sveltosctl to show ConfigMap resources across clusters, specifically displaying kube-bench failure results. It demonstrates how to view centralized CIS Kubernetes Benchmark compliance results.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_cis_scan.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsveltosctl show resources --kind=configmap\n```\n\n----------------------------------------\n\nTITLE: Displaying Resource Information\nDESCRIPTION: This command displays the resources collected by the HealthCheck. It displays the cluster, GVK (Group, Version, Kind), namespace, name, and a message associated with the resource.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n\"$ sveltosctl show resources  \"\n```\n\n----------------------------------------\n\nTITLE: Applying database config with a broken service label using kubectl\nDESCRIPTION: This command applies a modified version of the database configuration where the redis-follower Service label selector is intentionally changed to introduce an error. It allows simulation of misconfiguration in the Kubernetes environment.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/snapshot.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f https://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/snapshot_example/database_broken.yaml\n```\n\n----------------------------------------\n\nTITLE: Connecting to Management Cluster for Raw YAML Deployment\nDESCRIPTION: Commands to reconnect to the management cluster before setting up a raw YAML deployment example.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/install/quick_start.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config set-context kind-sveltos-management\n$ kind export kubeconfig --name sveltos-management\n```\n\n----------------------------------------\n\nTITLE: Importing Sveltos Grafana Dashboard JSON\nDESCRIPTION: URL to import the Sveltos Grafana dashboard JSON configuration into Grafana. This dashboard provides visualizations for Sveltos metrics.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/optional/grafanadashboard.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttps://raw.githubusercontent.com/projectsveltos/sveltos/main/docs/assets/sveltosgrafanadashboard.json\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Notifications in Projectsveltos\nDESCRIPTION: YAML configuration for a ClusterHealthCheck resource that sends email notifications via SMTP when add-ons are deployed to clusters with the 'env=fv' label. This requires a secret containing SMTP server details and credentials.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/example_addon_notification.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: production\nspec:\n  clusterSelector:\n    matchLabels:\n      env: fv\n  livenessChecks:\n  - name: addons\n    type: Addons\n  notifications:\n  - name: smtp\n    type: SMTP\n    notificationRef:\n      apiVersion: v1\n      kind: Secret\n      name: smtp\n      namespace: default\n```\n\n----------------------------------------\n\nTITLE: Getting Pods Status in Kubernetes using kubectl\nDESCRIPTION: This snippet demonstrates how to retrieve the status of pods in a specific namespace within a Kubernetes cluster using the kubectl command.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/template/bring_your_own_controller.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n projectsveltos\n\n```\n\n----------------------------------------\n\nTITLE: ClusterProfile for Kyverno Deployment\nDESCRIPTION: This ClusterProfile deploys Kyverno and a ClusterPolicy to managed clusters matching the label selector `env=fv`. It installs Kyverno using Helm and applies a ClusterPolicy from a ConfigMap.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/observability/display_resources.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n\"  ---\n  apiVersion: config.projectsveltos.io/v1beta1\n  kind: ClusterProfile\n  metadata:\n    name: kyverno\n  spec:\n    clusterSelector:\n      matchLabels:\n        env: fv\n    helmCharts:\n    - chartName: kyverno/kyverno\n      chartVersion: v3.3.3\n      helmChartAction: Install\n      releaseName: kyverno-latest\n      releaseNamespace: kyverno\n      repositoryName: kyverno\n      repositoryURL: https://kyverno.github.io/kyverno/\n    policyRefs:\n    - deploymentType: Remote\n      kind: ConfigMap\n      name: kyverno-latest\n      namespace: default\n\"\n```\n\n----------------------------------------\n\nTITLE: Querying Sveltos Clusters in Bash\nDESCRIPTION: This snippet demonstrates how to list and display Sveltos clusters with their labels using kubectl.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/addons.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get sveltosclusters -n projectsveltos --show-labels\n\nNAME        READY   VERSION          LABELS\ncluster12   true    v1.26.9+rke2r1   sveltos-agent=present\ncluster13   true    v1.26.9+rke2r1   sveltos-agent=present\n```\n\n----------------------------------------\n\nTITLE: Defining EventSource for Services in YAML\nDESCRIPTION: This YAML snippet defines an EventSource that monitors for Service resources in the 'eng' namespace exposing port 80. It uses a Lua function to evaluate matching services.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/example_api_gateway_contour.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: eng-http-service\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n    namespace: eng\n    evaluate: |\n      function evaluate()\n        hs = {}\n        hs.matching = false\n        if obj.spec.ports ~= nil then\n          for _,p in pairs(obj.spec.ports) do\n            if p.port == 80 then\n              hs.matching = true\n            end\n          end\n        end\n        return hs\n      end\n```\n\n----------------------------------------\n\nTITLE: Token Renewal Process Flow Diagram\nDESCRIPTION: Mermaid flowchart showing the automatic token renewal process in Sveltos. It illustrates how sveltoscluster-manager checks for renewal intervals and updates tokens.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/register/token-renewal.md#2025-04-22_snippet_2\n\nLANGUAGE: mermaid\nCODE:\n```\n%% sveltoscluster-manager uses the token from the Secret to request a new token from the remote cluster (via the ServiceAccount).\n%% It then updates the Secret with the newly generated token, and finally writes\n%% the last renewal timestamp to the SveltosCluster status (lastReconciledTokenRequestAt).\nflowchart LR\n    A((SveltosCluster CR)) --> B[Check every 10 seconds if Renew Interval has passed]\n    B -->|Needs Renewal| C[Read existing Token from Secret]\n    C --> D[Use existing Token to request new Token from remote ServiceAccount]\n    D --> E[Remote cluster issues new Token]\n    E --> F[Update Secret with new Token in Kubeconfig]\n    F --> G[Write last token renewal time to SveltosCluster status]\n```\n\n----------------------------------------\n\nTITLE: Defining Service Event Detection with YAML in Sveltos\nDESCRIPTION: This YAML snippet defines an EventSource instance that triggers when a Service with the label 'sveltos: fv' is created or deleted. It uses the ResourceSelectors field to specify the resource type and label filters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/events/addon_event_deployment.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: EventSource\nmetadata:\n  name: sveltos-service\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: \"\"\n    version: \"v1\"\n    kind: \"Service\"\n    labelFilters:\n    - key: sveltos\n      operation: Equal\n      value: fv\n```\n\n----------------------------------------\n\nTITLE: Creating a ConfigMap for Kyverno Policy in Bash\nDESCRIPTION: Downloads a Kyverno policy that disallows the 'latest' tag in container images and creates a ConfigMap from it in the management cluster. This ConfigMap will be referenced in the ClusterProfile.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/addons/combining_all.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://raw.githubusercontent.com/kyverno/policies/main/best-practices/disallow-latest-tag/disallow-latest-tag.yaml\n\n$ kubectl create configmap disallow-latest-tag --from-file disallow-latest-tag.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterProfile with DryRun Mode in YAML\nDESCRIPTION: This snippet demonstrates how to configure a ClusterProfile with the syncMode set to DryRun, which allows for simulating operations without making actual changes to matching clusters.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/features/dryrun.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: deploy-kyverno\nspec:\n  syncMode: DryRun\n  ...\n```\n\n----------------------------------------\n\nTITLE: Viewing Unhealthy SveltosClusters Output Example\nDESCRIPTION: Example output showing an unhealthy SveltosCluster that lacks READY status and version information, indicating potential connectivity or authentication issues with the managed cluster.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get sveltoscluster -A\nNAMESPACE        NAME            READY   VERSION\nprojectsveltos   vcluster-dev\nmgmt             mgmt            true    v1.28.7+k3s1\n```\n\n----------------------------------------\n\nTITLE: Configuring Timezone for sveltosctl Pod in Kubernetes\nDESCRIPTION: YAML configuration for setting the timezone of the sveltosctl pod using a hostPath volume. This example mounts the Los Angeles timezone file from the host system.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/getting_started/sveltosctl/sveltosctl.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  volumes:\n  - hostPath:\n      path: /usr/share/zoneinfo/America/Los_Angeles\n      type: File\n    name: tz-config\n```\n\n----------------------------------------\n\nTITLE: Setting or Changing Labels on a SveltosCluster\nDESCRIPTION: Command to add or modify a label on a SveltosCluster. This is useful when labels need to be updated to match ClusterProfile selectors to enable add-on deployments.\nSOURCE: https://github.com/projectsveltos/sveltos/blob/main/docs/help_and_tutorials/troubleshooting.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label sveltoscluster <cluster-name> -n <cluster namespace> env=dev --overwrite\n```"
  }
]
[
  {
    "owner": "revenuecat",
    "repo": "purchases-flutter",
    "content": "TITLE: Adding purchases_flutter as a dependency in pubspec.yaml\nDESCRIPTION: Instructions for adding the purchases_flutter package as a dependency in a Flutter project's pubspec.yaml file. This is the first step to integrate the RevenueCat SDK into a Flutter application.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  purchases_flutter: ^latest_version\n```\n\n----------------------------------------\n\nTITLE: Using Store Error Handling in Flutter\nDESCRIPTION: Code example showing how to handle store errors when getting offerings in Flutter using try-catch and accessing the storeError from the platform exception details.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\ntry {\n  offerings = await Purchases.getOfferings();\n} on PlatformException catch (e) {\n  final storeError = e.details['storeError'];\n  // Do something with storeError if it exists\n}\n```\n\n----------------------------------------\n\nTITLE: Presenting RevenueCat Paywall in Flutter\nDESCRIPTION: Shows how to present a RevenueCat paywall unconditionally in a Flutter application. This is the basic implementation that displays the paywall to all users.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/README.md#2025-04-21_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nawait RevenueCatUI.presentPaywall();\n```\n\n----------------------------------------\n\nTITLE: Configuring RevenueCat SDK with StoreKit Version in Dart\nDESCRIPTION: This snippet demonstrates how to configure the RevenueCat SDK with a specific StoreKit version. It creates a PurchasesConfiguration object and sets the storeKitVersion property before calling the configure method.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: Dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.storeKitVersion = StoreKitVersion.storeKit1;\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Presenting Conditional RevenueCat Paywall in Flutter\nDESCRIPTION: Demonstrates how to conditionally present a RevenueCat paywall based on a user's entitlements. The paywall will only be shown if the user doesn't have the specified entitlement.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/README.md#2025-04-21_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nawait RevenueCatUI.presentPaywallIfNeeded(\"requiredEntitlementId\");\n```\n\n----------------------------------------\n\nTITLE: Setting PurchasesAreCompletedBy Configuration in Dart\nDESCRIPTION: This code snippet shows how to configure the RevenueCat SDK to specify that purchases are completed by the app. It sets the purchasesAreCompletedBy property of the PurchasesConfiguration object with a specific StoreKit version.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: Dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.purchasesAreCompletedBy = PurchasesAreCompletedByMyApp(\n    storeKitVersion: StoreKitVersion.storeKit2,\n);\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Recording Purchases on macOS with StoreKit 2 in Dart\nDESCRIPTION: Call this method to immediately detect a user's purchase on macOS when using StoreKit 2. This is necessary because by default, the SDK only detects purchases after the app is foregrounded.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nawait Purchases.recordPurchase(productID);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Purchase Completion in RevenueCat Flutter SDK\nDESCRIPTION: Demonstrates how to configure the SDK to let your app handle purchase completion instead of RevenueCat. Requires specifying which StoreKit version your app uses for iOS purchases.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.purchasesAreCompletedBy = PurchasesAreCompletedByMyApp(\n    storeKitVersion: StoreKitVersion.storeKit2,\n);\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Recording macOS StoreKit 2 Purchases in Flutter\nDESCRIPTION: Code to explicitly record a purchase made with StoreKit 2 on macOS so RevenueCat can detect it immediately instead of waiting for app foregrounding\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nawait Purchases.recordPurchase(productID);\n```\n\n----------------------------------------\n\nTITLE: Configuring StoreKit 1 Purchase Handling in Flutter\nDESCRIPTION: Configuration code to explicitly set up the SDK to use StoreKit 1 for handling purchases completed by the app\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.purchasesAreCompletedBy = PurchasesAreCompletedByMyApp(\n    storeKitVersion: StoreKitVersion.storeKit1,\n);\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Configuring StoreKit 1 Purchase Completion in RevenueCat Flutter SDK\nDESCRIPTION: Demonstrates how to configure the SDK when your app completes purchases using StoreKit 1.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/migrations/v7-MIGRATION.md#2025-04-21_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.purchasesAreCompletedBy = PurchasesAreCompletedByMyApp(\n    storeKitVersion: StoreKitVersion.storeKit1,\n);\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Adding RevenueCat UI Flutter dependency\nDESCRIPTION: Example of adding the purchases-ui-flutter dependency to a Flutter project's pubspec.yaml file.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  purchases_ui_flutter: 6.15.0\n```\n\n----------------------------------------\n\nTITLE: Installing RevenueCat UI Flutter Package in pubspec.yaml\nDESCRIPTION: Demonstrates how to add the purchases-ui-flutter dependency to a Flutter project's pubspec.yaml file with version 6.15.0.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  purchases_ui_flutter: 6.15.0\n```\n\n----------------------------------------\n\nTITLE: Configuring StoreKit 1 for Purchase Handling in Dart\nDESCRIPTION: Use this configuration to explicitly set the SDK to use StoreKit 1 for handling purchases completed by your app. This is necessary when not using StoreKit 2.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.purchasesAreCompletedBy = PurchasesAreCompletedByMyApp(\n    storeKitVersion: StoreKitVersion.storeKit1,\n);\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Presenting a RevenueCat Paywall in Dart\nDESCRIPTION: Code snippet showing how to present a RevenueCat paywall using the RevenueCatUI class.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: Dart\nCODE:\n```\nimport 'package:purchases_ui_flutter/purchases_ui_flutter.dart';\n\nawait RevenueCatUI.presentPaywallIfNeeded(\"pro\");\n```\n\n----------------------------------------\n\nTITLE: Implementing RevenueCat UI Paywall in Dart\nDESCRIPTION: Shows how to import and use the RevenueCatUI class to present a paywall in a Flutter application.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:purchases_ui_flutter/purchases_ui_flutter.dart';\n\nawait RevenueCatUI.presentPaywallIfNeeded(\"pro\");\n```\n\n----------------------------------------\n\nTITLE: Configuring InApp Messages in Dart\nDESCRIPTION: This snippet shows how to configure InApp Messages behavior when initializing the RevenueCat SDK. It sets the shouldShowInAppMessagesAutomatically property to false to disable automatic display of InApp Messages.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: Dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"api_key\");\nconfiguration.shouldShowInAppMessagesAutomatically = false;\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Recording Purchases on macOS with RevenueCat Flutter SDK\nDESCRIPTION: Shows how to manually record purchases on macOS when using StoreKit 2 to ensure immediate purchase detection.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/migrations/v7-MIGRATION.md#2025-04-21_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nawait Purchases.recordPurchase(productID);\n```\n\n----------------------------------------\n\nTITLE: Configuring InApp Messages in RevenueCat Flutter SDK\nDESCRIPTION: This snippet shows how to configure the RevenueCat SDK to disable automatic display of InApp Messages. It sets up a PurchasesConfiguration object with an API key and sets the shouldShowInAppMessagesAutomatically property to false.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: Dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"api_key\");\nconfiguration.shouldShowInAppMessagesAutomatically = false;\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Accessing Subscription Options in Dart\nDESCRIPTION: Demonstrates how to access different subscription options from a StoreProduct object, including base plan, default option, free offer, and trial offer.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/migrations/v5-MIGRATION.md#2025-04-21_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nfinal basePlan = storeProduct.subscriptionOptions?.firstWhere((option) => option.isBasePlan);\nfinal defaultOption = storeProduct.defaultOption\nfinal freeOffer = storeProduct.subscriptionOptions?.firstWhere((option) => option.freePhase != null);\nfinal trialOffer = storeProduct.subscriptionOptions?.firstWhere((option) => option.introPhase != null);\n```\n\n----------------------------------------\n\nTITLE: Configuring StoreKit Version in RevenueCat Flutter SDK\nDESCRIPTION: Shows how to configure a specific StoreKit version using the new storeKitVersion parameter instead of the deprecated usesStoreKit2IfAvailable.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/migrations/v7-MIGRATION.md#2025-04-21_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.storeKitVersion = StoreKitVersion.storeKit1;\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Configuring StoreKit Version in RevenueCat Flutter SDK\nDESCRIPTION: Shows how to configure a specific StoreKit version when initializing the RevenueCat SDK. The storeKitVersion parameter replaces the deprecated usesStoreKit2IfAvailable parameter.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.storeKitVersion = StoreKitVersion.storeKit1;\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: Configuring Purchase Completion Handler in RevenueCat Flutter SDK\nDESCRIPTION: Demonstrates how to configure the SDK to handle purchases completed by your app, replacing the deprecated Observer Mode with PurchasesAreCompletedBy.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/migrations/v7-MIGRATION.md#2025-04-21_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nPurchasesConfiguration configuration = PurchasesConfiguration(\"myAPIKey\");\nconfiguration.purchasesAreCompletedBy = PurchasesAreCompletedByMyApp(\n    storeKitVersion: StoreKitVersion.storeKit2,\n);\n\nPurchases.configure(configuration);\n```\n\n----------------------------------------\n\nTITLE: RevenueCat Flutter SDK API Changes - Deprecated APIs\nDESCRIPTION: Table showing the mapping of deprecated APIs between version 3.x and 4.0.0 of the RevenueCat Flutter SDK.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| 3.x | 4.0.0 |\n| :-: | :-: |\n| `Purchases.setup` | `Purchases.configure` |\n```\n\n----------------------------------------\n\nTITLE: Deprecated API Changes in RevenueCat Flutter SDK\nDESCRIPTION: List of deprecated API changes showing the mapping between version 3.x and 4.0.0 method names\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| 3.x | 4.0.0 |\n| :-: | :-: |\n| `Purchases.setup` | `Purchases.configure` |\n```\n\n----------------------------------------\n\nTITLE: Removed API Changes in RevenueCat Flutter SDK\nDESCRIPTION: Comprehensive list of removed APIs and their replacements in version 4.0.0, including type changes and method renames\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| 3.x | 4.0.0 |\n| :-: | :-: |\n| `IntroductoryPrice.periodUnit` (`String`) | `IntroductoryPrice.periodUnit` (`PeriodUnit`) |\n| `IntroductoryPrice.introPrice` | `IntroductoryPrice.price` |\n| `IntroductoryPrice.introPriceString` | `IntroductoryPrice.priceString` |\n| `IntroductoryPrice.introPricePeriod` | `IntroductoryPrice.period` |\n| `IntroductoryPrice.introPricePeriodNumberOfUnits` | `IntroductoryPrice.periodNumberOfUnits` |\n| `IntroductoryPrice.introPriceCycles` | `IntroductoryPrice.cycles` |\n| `Purchases.addAttributionData` | `Set<NetworkID>` |\n| `Purchases.identify` | `Purchases.logIn` |\n| `Purchases.createAlias` | `Purchases.logIn` |\n| `Purchases.reset` | `Purchases.logOut` |\n| `PurchasesAttributionNetwork` | `Set<NetworkID>` |\n```\n\n----------------------------------------\n\nTITLE: Syncing Purchases with Backend\nDESCRIPTION: Method added in version 2.0.0 that enables syncing local receipt purchases with the backend without risking a password prompt. Previously available on Android but added to iOS in this version.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: Dart\nCODE:\n```\nsyncPurchases\n```\n\n----------------------------------------\n\nTITLE: RevenueCat Flutter SDK API Changes - Renamed APIs\nDESCRIPTION: Table showing APIs that have been renamed in version 4.0.0 of the RevenueCat Flutter SDK for better consistency.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| 3.x | 4.0.0 |\n| :-: | :-: |\n| `PurchaserInfo` | `CustomerInfo` |\n| `Transaction` | `StoreTransaction` |\n| `Product` | `StoreProduct` |\n| `Discount` | `StoreProductDiscount` |\n| `PaymentDiscount` | `PromotionalOffer` |\n| `Package.product` | `Package.storeProduct` |\n| `Purchases.PurchaserInfoUpdateListener` | `Purchases.CustomerInfoUpdateListener` |\n| `Purchases.removePurchaserInfoUpdateListener` | `Purchases.removeCustomerInfoUpdateListener` |\n| `Purchases.restoreTransactions` | `Purchases.restorePurchases` |\n| `Purchases.getPurchaseInfo` | `Purchases.getCustomerInfo` |\n| `Purchases.invalidatePurchaserInfoCache` | `Purchases.invalidateCustomerInfoCache` |\n| `Purchases.getPaymentDiscount` | `Purchases.getPromotionalOffer` |\n```\n\n----------------------------------------\n\nTITLE: Adding Ready for Promoted Product Purchase Listener in Dart\nDESCRIPTION: Demonstrates how to add and remove a listener for ready for promoted product purchases in the RevenueCat Flutter SDK.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: dart\nCODE:\n```\naddReadyForPromotedProductPurchaseListener(ReadyForPromotedProductPurchaseListener listener)\nremoveReadyForPromotedProductPurchaseListener(ReadyForPromotedProductPurchaseListener listenerToRemove)\n```\n\n----------------------------------------\n\nTITLE: Setting Simulated Ask To Buy in Sandbox for iOS Testing\nDESCRIPTION: Method added in version 3.1.0 that allows developers to test deferred purchases by simulating 'Ask To Buy' behavior in sandbox environment.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: Dart\nCODE:\n```\nsetSimulatesAskToBuyInSandbox\n```\n\n----------------------------------------\n\nTITLE: Configuring Airship Integration in Dart\nDESCRIPTION: Shows how to set the Airship channel ID for integration with the RevenueCat Flutter SDK.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: dart\nCODE:\n```\nsetAirshipChannelID\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Store Error in Dart\nDESCRIPTION: Example showing how to handle store errors in iOS using try-catch block and accessing the storeError field from the platform exception details.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\ntry {\n  offerings = await Purchases.getOfferings();\n} on PlatformException catch (e) {\n  final storeError = e.details['storeError'];\n  // Do something with storeError if it exists\n}\n```\n\n----------------------------------------\n\nTITLE: Presenting Code Redemption Sheet for Offer Codes\nDESCRIPTION: Method added in version 2.0.0 for iOS to handle offer codes redemption, allowing users to redeem promotional offers.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: Dart\nCODE:\n```\npresentCodeRedemptionSheet\n```\n\n----------------------------------------\n\nTITLE: Checking RevenueCat SDK Configuration in Dart\nDESCRIPTION: Demonstrates how to check if the RevenueCat SDK has been configured using the isConfigured method.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: dart\nCODE:\n```\nisConfigured\n```\n\n----------------------------------------\n\nTITLE: Error Handling Helper for PurchasesErrorCode\nDESCRIPTION: Method added in version 1.0.0 to make handling errors easier by providing a way to extract error codes from PlatformExceptions.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: Dart\nCODE:\n```\nPurchasesErrorHelper.getErrorCode(PlatformException)\n```\n\n----------------------------------------\n\nTITLE: User Authentication Methods in RevenueCat SDK for Dart\nDESCRIPTION: Introduces new methods for user identification and authentication in the RevenueCat SDK.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: dart\nCODE:\n```\nlogIn\nlogOut\n```\n\n----------------------------------------\n\nTITLE: Checking Payment Capability in RevenueCat SDK for Dart\nDESCRIPTION: Demonstrates how to check if the device can make payments using the canMakePayments method.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: dart\nCODE:\n```\ncanMakePayments\n```\n\n----------------------------------------\n\nTITLE: Running Flutter Tests with FVM\nDESCRIPTION: Command to execute Flutter tests using the Flutter Version Manager (fvm)\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/DEVELOPMENT.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfvm flutter test\n```\n\n----------------------------------------\n\nTITLE: Closing RevenueCat SDK Resources in Dart\nDESCRIPTION: Shows how to release resources used by the RevenueCat SDK on Android using the close() method.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: dart\nCODE:\n```\nclose()\n```\n\n----------------------------------------\n\nTITLE: Creating Environment File Path\nDESCRIPTION: File path for environment configuration used in the release process.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/RELEASING.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nfastlane/.env\n```\n\n----------------------------------------\n\nTITLE: Running Fastlane Bump Command\nDESCRIPTION: Command to initiate the version bump process using Fastlane.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/RELEASING.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec fastlane bump\n```\n\n----------------------------------------\n\nTITLE: Adding RevenueCat Package Dependency\nDESCRIPTION: YAML configuration showing how to add the RevenueCat Purchases Flutter package to the project dependencies.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/revenuecat_examples/MagicWeather/README.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n    purchases_flutter: ^4.0.0\n```\n\n----------------------------------------\n\nTITLE: Updating Hybrid Common Version\nDESCRIPTION: Command to update the purchases-hybrid-common version number.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/RELEASING.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec fastlane update_hybrid_common version:x.x.x\n```\n\n----------------------------------------\n\nTITLE: Publishing Package Dry Run\nDESCRIPTION: Command to perform a dry run of the Flutter package publication process.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/RELEASING.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nflutter pub publish --dry-run\n```\n\n----------------------------------------\n\nTITLE: Manual Release Command\nDESCRIPTION: Fallback command for manually triggering the release process if automation fails.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/RELEASING.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec fastlane release\n```\n\n----------------------------------------\n\nTITLE: Version Bump Command\nDESCRIPTION: Fastlane command to bump version numbers, update changelog, and create a pull request.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane bump\n```\n\n----------------------------------------\n\nTITLE: Automatic Version Bump Command\nDESCRIPTION: Fastlane command to automatically bump version numbers, update changelog, and create a pull request without manual intervention.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane automatic_bump\n```\n\n----------------------------------------\n\nTITLE: Create Purchases UI Flutter Release Command\nDESCRIPTION: Fastlane command specifically for creating a release of the purchases_ui_flutter package.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane release_purchases_ui_flutter\n```\n\n----------------------------------------\n\nTITLE: RevenueCat Flutter SDK API Changes - Removed APIs\nDESCRIPTION: Table showing APIs that have been removed or replaced in version 4.0.0 of the RevenueCat Flutter SDK.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| 3.x | 4.0.0 |\n| :-: | :-: |\n| `IntroductoryPrice.periodUnit` (`String`) | `IntroductoryPrice.periodUnit` (`PeriodUnit`) |\n| `IntroductoryPrice.introPrice` | `IntroductoryPrice.price` |\n| `IntroductoryPrice.introPriceString` | `IntroductoryPrice.priceString` |\n| `IntroductoryPrice.introPricePeriod` | `IntroductoryPrice.period` |\n| `IntroductoryPrice.introPricePeriodNumberOfUnits` | `IntroductoryPrice.periodNumberOfUnits` |\n| `IntroductoryPrice.introPriceCycles` | `IntroductoryPrice.cycles` |\n| `Purchases.addAttributionData` | `Set<NetworkID>` |\n| `Purchases.identify` | `Purchases.logIn` |\n| `Purchases.createAlias` | `Purchases.logIn` |\n| `Purchases.reset` | `Purchases.logOut` |\n| `PurchasesAttributionNetwork` | `Set<NetworkID>` |\n```\n\n----------------------------------------\n\nTITLE: GitHub Release Current Version Command\nDESCRIPTION: Fastlane command to create a GitHub release using the current version number.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane github_release_current_version\n```\n\n----------------------------------------\n\nTITLE: GitHub Release Command\nDESCRIPTION: Fastlane command to create a general GitHub release.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane github_release\n```\n\n----------------------------------------\n\nTITLE: Run API Tests Command\nDESCRIPTION: Fastlane command to build and analyze the api_tester project for API verification.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane run_api_tests\n```\n\n----------------------------------------\n\nTITLE: Tag Current Branch Command\nDESCRIPTION: Fastlane command to tag the current branch with the current version number.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane tag_current_branch\n```\n\n----------------------------------------\n\nTITLE: Renamed API Changes in RevenueCat Flutter SDK\nDESCRIPTION: Complete list of renamed APIs showing the mapping between version 3.x and 4.0.0 class and method names\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/purchases_ui_flutter/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| 3.x | 4.0.0 |\n| :-: | :-: |\n| `PurchaserInfo` | `CustomerInfo` |\n| `Transaction` | `StoreTransaction` |\n| `Product` | `StoreProduct` |\n| `Discount` | `StoreProductDiscount` |\n| `PaymentDiscount` | `PromotionalOffer` |\n| `Package.product` | `Package.storeProduct` |\n| `Purchases.PurchaserInfoUpdateListener` | `Purchases.CustomerInfoUpdateListener` |\n| `Purchases.removePurchaserInfoUpdateListener` | `Purchases.removeCustomerInfoUpdateListener` |\n| `Purchases.restoreTransactions` | `Purchases.restorePurchases` |\n| `Purchases.getPurchaseInfo` | `Purchases.getCustomerInfo` |\n| `Purchases.invalidatePurchaserInfoCache` | `Purchases.invalidateCustomerInfoCache` |\n| `Purchases.getPaymentDiscount` | `Purchases.getPromotionalOffer` |\n```\n\n----------------------------------------\n\nTITLE: Update Hybrid Common Command\nDESCRIPTION: Fastlane command to update hybrid common pod and gradle dependencies.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane update_hybrid_common\n```\n\n----------------------------------------\n\nTITLE: Trigger Bump Command\nDESCRIPTION: Fastlane command to trigger a version bump process.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane trigger_bump\n```\n\n----------------------------------------\n\nTITLE: Installing RevenueCat Dependencies with Flutter\nDESCRIPTION: Command to install project dependencies using Flutter package manager.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/revenuecat_examples/MagicWeather/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nflutter pub get\n```\n\n----------------------------------------\n\nTITLE: Updating CocoaPods Repository\nDESCRIPTION: Command to update CocoaPods repository for iOS dependencies.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/revenuecat_examples/MagicWeather/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npod repo update\n```\n\n----------------------------------------\n\nTITLE: Cloning RevenueCat Flutter Repository\nDESCRIPTION: Git command to clone the RevenueCat Flutter sample repository.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/revenuecat_examples/MagicWeather/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RevenueCat/purchases-flutter.git\n```\n\n----------------------------------------\n\nTITLE: Configuring API Key for PurchaseTester\nDESCRIPTION: Bash command to replace the placeholder api_key with the actual API key in the integration test file using sed\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/DEVELOPMENT.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsed -i.bck s/api_key/$API_KEY/ revenuecat_examples/purchase_tester/integration_test/app_test.dart\n```\n\n----------------------------------------\n\nTITLE: Opening Xcode Project for Flutter iOS App\nDESCRIPTION: Command to open the Xcode project for a Flutter iOS app. This allows developers to access the Assets.xcassets folder for customizing launch screen assets.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/revenuecat_examples/purchase_tester/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopen ios/Runner.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Opening Xcode Workspace Command for Flutter iOS Project\nDESCRIPTION: Command to open the iOS portion of a Flutter project in Xcode for managing launch screen assets through the Xcode interface.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/api_tester/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopen ios/Runner.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Create Release Command\nDESCRIPTION: Fastlane command to create a new release of the package.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n[bundle exec] fastlane release\n```\n\n----------------------------------------\n\nTITLE: Updating Pod Dependencies\nDESCRIPTION: Command to update PurchasesHybridCommon pod in both MagicWeather and purchase_tester projects.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/RELEASING.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npod update PurchasesHybridCommon\n```\n\n----------------------------------------\n\nTITLE: Installing Xcode Command Line Tools with Fastlane\nDESCRIPTION: Command to install the latest version of Xcode command line tools, which is a prerequisite for using fastlane.\nSOURCE: https://github.com/revenuecat/purchases-flutter/blob/main/fastlane/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nxcode-select --install\n```"
  }
]
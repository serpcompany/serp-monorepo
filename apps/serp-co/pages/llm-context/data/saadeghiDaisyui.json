[
  {
    "owner": "saadeghi",
    "repo": "daisyui",
    "content": "TITLE: Creating Square and Circular Buttons with Icons in DaisyUI (HTML)\nDESCRIPTION: This snippet demonstrates how to create square and circular buttons with SVG icons using DaisyUI classes. The buttons use the 'btn', 'btn-square', and 'btn-circle' classes for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn $$btn-square\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\" stroke=\"currentColor\" class=\"size-[1.2em]\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\" /></svg>\n</button>\n<button class=\"$$btn $$btn-circle\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\" stroke=\"currentColor\" class=\"size-[1.2em]\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\" /></svg>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal Dialog with HTML Dialog Element in React/JSX\nDESCRIPTION: Creates a modal dialog using the HTML dialog element in a React/JSX context, opened with JavaScript and closed with a button or ESC key. Includes modal content and action buttons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n{/* Open the modal using document.getElementById('ID').showModal() method */}\n<button className=\"$$btn\" onClick={()=>document.getElementById('my_modal_1').showModal()}>open modal</button>\n<dialog id=\"my_modal_1\" className=\"$$modal\">\n  <div className=\"$$modal-box\">\n    <h3 className=\"font-bold text-lg\">Hello!</h3>\n    <p className=\"py-4\">Press ESC key or click the button below to close</p>\n    <div className=\"$$modal-action\">\n      <form method=\"dialog\">\n        {/* if there is a button in form, it will close the modal */}\n        <button className=\"$$btn\">Close</button>\n      </form>\n    </div>\n  </div>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Basic Menu Implementation in DaisyUI\nDESCRIPTION: Basic menu implementation with a simple list of items using DaisyUI's menu class. The menu has a base background color and rounded corners.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu bg-base-200 $$rounded-box w-56\">\n  <li><a>Item 1</a></li>\n  <li><a>Item 2</a></li>\n  <li><a>Item 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing a List Component with DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates how to create a list component using DaisyUI classes. It showcases a list of most played songs with images, titles, artists, and action buttons. The list uses the 'list' and 'list-row' classes for layout, and includes custom styling for text and buttons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/list/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"$$list bg-base-100 rounded-box shadow-md\">\n  \n  <li class=\"p-4 pb-2 text-xs opacity-60 tracking-wide\">Most played songs this week</li>\n  \n  <li class=\"$$list-row\">\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/1@94.webp\"/></div>\n    <div>\n      <div>Dio Lupa</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Remaining Reason</div>\n    </div>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path></g></svg>\n    </button>\n  </li>\n  \n  <li class=\"$$list-row\">\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/4@94.webp\"/></div>\n    <div>\n      <div>Ellie Beilish</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Bears of a fever</div>\n    </div>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path></g></svg>\n    </button>\n  </li>\n  \n  <li class=\"$$list-row\">\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/3@94.webp\"/></div>\n    <div>\n      <div>Sabrino Gardener</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Cappuccino</div>\n    </div>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path></g></svg>\n    </button>\n  </li>\n  \n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI Dependencies\nDESCRIPTION: This command installs the latest versions of Tailwind CSS, Tailwind CSS Vite plugin, and daisyUI as project dependencies. These are required for integrating Tailwind CSS and daisyUI into the Vite project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vite/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal Dialog with HTML Dialog Element in HTML\nDESCRIPTION: Creates a modal dialog using the HTML dialog element, opened with JavaScript and closed with a button or ESC key. Includes modal content and action buttons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn\" onclick=\"my_modal_1.showModal()\">open modal</button>\n<dialog id=\"my_modal_1\" class=\"$$modal\">\n  <div class=\"$$modal-box\">\n    <h3 class=\"text-lg font-bold\">Hello!</h3>\n    <p class=\"py-4\">Press ESC key or click the button below to close</p>\n    <div class=\"$$modal-action\">\n      <form method=\"dialog\">\n        <!-- if there is a button in form, it will close the modal -->\n        <button class=\"$$btn\">Close</button>\n      </form>\n    </div>\n  </div>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Implementing Closable Modal Dialog with Outside Click in React/JSX\nDESCRIPTION: Creates a modal dialog in React/JSX that can be closed by clicking outside the modal box. Uses a form with 'modal-backdrop' class to cover the screen and handle the close action.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: JSX\nCODE:\n```\n{/* Open the modal using document.getElementById('ID').showModal() method */}\n<button className=\"$$btn\" onClick={()=>document.getElementById('my_modal_2').showModal()}>open modal</button>\n<dialog id=\"my_modal_2\" className=\"$$modal\">\n  <div className=\"$$modal-box\">\n    <h3 className=\"font-bold text-lg\">Hello!</h3>\n    <p className=\"py-4\">Press ESC key or click outside to close</p>\n  </div>\n  <form method=\"dialog\" className=\"$$modal-backdrop\">\n    <button>close</button>\n  </form>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Creating Social Login Buttons with DaisyUI\nDESCRIPTION: HTML implementation of social login buttons with platform-specific styling and SVG logos. Each button uses the DaisyUI btn class with custom background colors, border colors and includes an SVG logo along with login text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn bg-[#03C755] text-white border-[#00b544]\">\n  <svg aria-label=\"Line logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><g fill-rule=\"evenodd\" stroke-linejoin=\"round\" fill=\"white\"><path fill-rule=\"nonzero\" d=\"M12.91 6.57c.232 0 .42.19.42.42 0 .23-.188.42-.42.42h-1.17v.75h1.17a.42.42 0 1 1 0 .84h-1.59a.42.42 0 0 1-.418-.42V5.4c0-.23.188-.42.42-.42h1.59a.42.42 0 0 1-.002.84h-1.17v.75h1.17zm-2.57 2.01a.421.421 0 0 1-.757.251l-1.63-2.217V8.58a.42.42 0 0 1-.42.42.42.42 0 0 1-.418-.42V5.4a.418.418 0 0 1 .755-.249L9.5 7.366V5.4c0-.23.188-.42.42-.42.23 0 .42.19.42.42v3.18zm-3.828 0c0 .23-.188.42-.42.42a.42.42 0 0 1-.418-.42V5.4c0-.23.188-.42.42-.42.23 0 .418.19.418.42v3.18zM4.868 9h-1.59c-.23 0-.42-.19-.42-.42V5.4c0-.23.19-.42.42-.42.232 0 .42.19.42.42v2.76h1.17a.42.42 0 1 1 0 .84M16 6.87C16 3.29 12.41.376 8 .376S0 3.29 0 6.87c0 3.208 2.846 5.896 6.69 6.405.26.056.615.172.705.394.08.2.053.518.026.722 0 0-.092.565-.113.685-.035.203-.16.79.693.432.854-.36 4.607-2.714 6.285-4.646C15.445 9.594 16 8.302 16 6.87\"></path></g></svg>\n  LINEでログイン\n</button>\n\n<!-- Slack -->\n<button class=\"$$btn bg-[#622069] text-white border-[#591660]\">\n  <svg aria-label=\"Slack logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g stroke-linecap=\"round\" stroke-width=\"78\"><path stroke=\"#36c5f0\" d=\"m110 207h97m0-97h.1v-.1\"></path><path stroke=\"#2eb67d\" d=\"m305 110v97m97 0v.1h.1\"></path><path stroke=\"#ecb22e\" d=\"m402 305h-97m0 97h-.1v.1\"></path><path stroke=\"#e01e5a\" d=\"M110 305h.1v.1m97 0v97\"></path></g></svg>\n  Login with Slack\n</button>\n\n<!-- LinkedIn -->\n<button class=\"$$btn bg-[#0967C2] text-white border-[#0059b3]\">\n  <svg aria-label=\"LinkedIn logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path fill=\"white\" d=\"M26.111,3H5.889c-1.595,0-2.889,1.293-2.889,2.889V26.111c0,1.595,1.293,2.889,2.889,2.889H26.111c1.595,0,2.889-1.293,2.889-2.889V5.889c0-1.595-1.293-2.889-2.889-2.889ZM10.861,25.389h-3.877V12.87h3.877v12.519Zm-1.957-14.158c-1.267,0-2.293-1.034-2.293-2.31s1.026-2.31,2.293-2.31,2.292,1.034,2.292,2.31-1.026,2.31-2.292,2.31Zm16.485,14.158h-3.858v-6.571c0-1.802-.685-2.809-2.111-2.809-1.551,0-2.362,1.048-2.362,2.809v6.571h-3.718V12.87h3.718v1.686s1.118-2.069,3.775-2.069,4.556,1.621,4.556,4.975v7.926Z\" fill-rule=\"evenodd\"></path></svg>\n  Login with LinkedIn\n</button>\n\n<!-- VK -->\n<button class=\"$$btn bg-[#47698F] text-white border-[#35567b]\">\n  <svg aria-label=\"VK logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2240 2240\"><g fill=\"white\"><path d=\"M2077 904q23 64-150 294-24 32-65 85-78 100-90 131-17 41 14 81 17 21 81 82h1l1 1 1 1 2 2q141 131 191 221 3 5 6.5 12.5t7 26.5-.5 34-25 27.5-59 12.5l-256 4q-24 5-56-5t-52-22l-20-12q-30-21-70-64t-68.5-77.5-61-58-56.5-15.5q-3 1-8 3.5t-17 14.5-21.5 29.5-17 52-6.5 77.5q0 15-3.5 27.5t-7.5 18.5l-4 5q-18 19-53 22h-115q-71 4-146-16.5t-131.5-53-103-66T648 1722l-25-24q-10-10-27.5-30t-71.5-91-106-151-122.5-211T165 943q-6-16-6-27t3-16l4-6q15-19 57-19l274-2q12 2 23 6.5t16 8.5l5 3q16 11 24 32 20 50 46 103.5t41 81.5l16 29q29 60 56 104t48.5 68.5T814 1348t34 14 27-5q2-1 5-5t12-22 13.5-47 9.5-81 0-125q-2-40-9-73t-14-46l-6-12q-25-34-85-43-13-2 5-24 17-19 38-30 53-26 239-24 82 1 135 13 20 5 33.5 13.5t20.5 24 10.5 32 3.5 45.5-1 55-2.5 70.5-1.5 82.5q0 11-1 42t-.5 48 3.5 40.5 11.5 39 22.5 24.5q8 2 17 4t26-11 38-34.5 52-67 68-107.5q60-104 107-225 4-10 10-17.5t11-10.5l4-3 5-2.5 13-3 20-.5 288-2q39-5 64 2.5t31 16.5z\"></path></g></svg>\n  Login with VK\n</button>\n\n<!-- WeChat -->\n<button class=\"$$btn bg-[#5EBB2B] text-white border-[#4eaa0c]\">\n  <svg aria-label=\"WeChat logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><g fill=\"white\"><path d=\"M11.606,3.068C5.031,3.068,0,7.529,0,12.393s4.344,7.681,4.344,7.681l-.706,2.676c-.093,.353,.284,.644,.602,.464l3.173-1.798c1.403,.447,4.381,.59,4.671,.603-.208-.721-.311-1.432-.311-2.095,0-3.754,3.268-9.04,10.532-9.04,.165,0,.331,.004,.496,.011-.965-4.627-5.769-7.827-11.195-7.827Zm-4.327,7.748c-.797,0-1.442-.646-1.442-1.442s.646-1.442,1.442-1.442,1.442,.646,1.442,1.442-.646,1.442-1.442,1.442Zm8.386,0c-.797,0-1.442-.646-1.442-1.442s.646-1.442,1.442-1.442,1.442,.646,1.442,1.442-.646,1.442-1.442,1.442Z\"></path><path d=\"M32,19.336c0-4.26-4.998-7.379-9.694-7.379-6.642,0-9.459,4.797-9.459,7.966s2.818,7.966,9.459,7.966c1.469,0,2.762-.211,3.886-.584l2.498,1.585c.197,.125,.447-.052,.394-.279l-.567-2.46c2.36-1.643,3.483-4.234,3.483-6.815Zm-12.73-.81c-.704,0-1.275-.571-1.275-1.275s.571-1.275,1.275-1.275,1.275,.571,1.275,1.275c0,.705-.571,1.275-1.275,1.275Zm6.373,0c-.704,0-1.275-.571-1.275-1.275s.571-1.275,1.275-1.275,1.275,.571,1.275,1.275-.571,1.275-1.275,1.275Z\"></path></g></svg>\n  Login with WeChat\n</button>\n\n<!-- Metamask -->\n<button class=\"$$btn  bg-white text-black border-[#e5e5e5]\">\n  <svg aria-label=\"MetaMask logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 507.83 470.86\"><defs><style>.b,.c,.d,.e,.f,.g,.j{stroke-linecap:round;stroke-linejoin:round}.b{fill:#e4761b;stroke:#e4761b}.c{fill:#d7c1b3;stroke:#d7c1b3}.d{fill:#233447;stroke:#233447}.e{fill:#cd6116;stroke:#cd6116}.f{fill:#e4751f;stroke:#e4751f}.g{fill:#f6851b;stroke:#f6851b}.j{fill:#763d16;stroke:#763d16}</style></defs><path d=\"M482.09.5 284.32 147.38l36.58-86.66z\" style=\"fill:#e2761b;stroke:#e2761b;stroke-linecap:round;stroke-linejoin:round\"/><path d=\"m25.54.5 196.18 148.27-34.79-88.05zM410.93 340.97l-52.67 80.7 112.7 31 32.4-109.91zM4.67 342.76l32.2 109.91 112.7-31-52.67-80.7z\" class=\"b\"/><path d=\"m143.21 204.62-31.41 47.51 111.9 4.97-3.97-120.25zM364.42 204.62l-77.51-69.16-2.59 121.64 111.71-4.97zM149.57 421.67l67.18-32.8-58.04-45.32zM290.88 388.87l67.38 32.8-9.34-78.12z\" class=\"b\"/><path d=\"m358.26 421.67-67.38-32.8 5.37 43.93-.6 18.48zM149.57 421.67l62.61 29.61-.4-18.48 4.97-43.93z\" class=\"c\"/><path d=\"m213.17 314.54-56.05-16.5 39.55-18.09zM294.46 314.54l16.5-34.59 39.75 18.09z\" class=\"d\"/><path d=\"m149.57 421.67 9.54-80.7-62.21 1.79zM348.72 340.97l9.54 80.7 52.67-78.91zM396.03 252.13l-111.71 4.97 10.34 57.44 16.5-34.59 39.75 18.09zM157.12 298.04l39.75-18.09 16.3 34.59 10.53-57.44-111.9-4.97z\" class=\"e\"/><path d=\"m111.8 252.13 46.91 91.42-1.59-45.51zM350.91 298.04l-1.99 45.51 47.11-91.42zM223.7 257.1l-10.53 57.44 13.12 67.77 2.98-89.24zM284.32 257.1l-5.36 35.77 2.38 89.44 13.32-67.77z\" class=\"f\"/><path d=\"m294.66 314.54-13.32 67.77 9.54 6.56 58.04-45.32 1.99-45.51zM157.12 298.04l1.59 45.51 58.04 45.32 9.54-6.56-13.12-67.77z\" class=\"g\"/><path d=\"m295.65 451.28.6-18.48-4.97-4.38h-74.93l-4.57 4.38.4 18.48-62.61-29.61 21.86 17.88 44.32 30.81h76.13l44.52-30.81 21.86-17.88z\" style=\"stroke-linecap:round;stroke-linejoin:round;fill:#c0ad9e;stroke:#c0ad9e\"/><path d=\"m290.88 388.87-9.54-6.56h-55.05l-9.54 6.56-4.97 43.93 4.57-4.38h74.93l4.97 4.38z\" style=\"stroke-linecap:round;stroke-linejoin:round;fill:#161616;stroke:#161616\"/><path d=\"m490.44 156.92 16.89-81.09L482.09.5 290.88 142.41l73.54 62.21 103.95 30.41 23.06-26.83-9.94-7.15 15.9-14.51-12.32-9.54 15.9-12.13zM.5 75.83l16.89 81.09-10.73 7.95L22.56 177l-12.12 9.54 15.9 14.51-9.94 7.15 22.86 26.83 103.95-30.41 73.54-62.21L25.54.5z\" class=\"j\"/><path d=\"m468.37 235.03-103.95-30.41 31.61 47.51-47.11 91.42 62.01-.79h92.43zM143.21 204.62 39.26 235.03 4.67 342.76H96.9l61.81.79-46.91-91.42zM284.32 257.1l6.56-114.69 30.22-81.69H186.93l29.82 81.69 6.95 114.69 2.39 36.17.2 89.04h55.05l.4-89.04z\" class=\"g\"/></svg>\n  Login with MetaMask\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Size Variants for DaisyUI Select Component - React/JSX\nDESCRIPTION: React/JSX implementation of DaisyUI select components with size variants. Uses defaultValue prop and disabled attribute with boolean value. Includes the same size classes as HTML version.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Xsmall\" class=\"$$select $$select-xs\">\n  <option disabled={true}>Xsmall</option>\n  <option>Xsmall Apple</option>\n  <option>Xsmall Orange</option>\n  <option>Xsmall Tomato</option>\n</select>\n<select defaultValue=\"Small\" class=\"$$select $$select-sm\">\n  <option disabled={true}>Small</option>\n  <option>Small Apple</option>\n  <option>Small Orange</option>\n  <option>Small Tomato</option>\n</select>\n<select defaultValue=\"Medium\" class=\"$$select $$select-md\">\n  <option disabled={true}>Medium</option>\n  <option>Medium Apple</option>\n  <option>Medium Orange</option>\n  <option>Medium Tomato</option>\n</select>\n<select defaultValue=\"Large\" class=\"$$select $$select-lg\">\n  <option disabled={true}>Large</option>\n  <option>Large Apple</option>\n  <option>Large Orange</option>\n  <option>Large Tomato</option>\n</select>\n<select defaultValue=\"Xlarge\" class=\"$$select $$select-xl\">\n  <option disabled={true}>Xlarge</option>\n  <option>Xlarge Apple</option>\n  <option>Xlarge Orange</option>\n  <option>Xlarge Tomato</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind CSS and Adding daisyUI Plugin in CSS - PostCSS\nDESCRIPTION: This snippet demonstrates how to set up Tailwind CSS and the daisyUI plugin within a global stylesheet, typically `app/globals.css`. The `@import` rule pulls in Tailwind’s base styles, and the `@plugin` directive adds daisyUI components. Requires that Tailwind and daisyUI are installed and referenced in the PostCSS pipeline. Previous styles should be removed to avoid conflicts.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nextjs/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Creating a Navbar with Icon, Indicator, and Dropdown - daisyUI - HTML\nDESCRIPTION: This snippet illustrates a navigation bar with the daisyUI framework, including a brand button, a cart indicator with SVG icon and badge, and a user avatar dropdown with profile options. Dependencies include daisyUI and Tailwind CSS for styling, and requires proper class prefixing if customizing with $$ variables. Key parameters involve badge values, menu items, and indicator content, accepting user interaction via buttons and dropdowns. Expected output is a styled, accessible navbar with actionable dropdowns; constraints include requiring the relevant CSS frameworks for styles and clean HTML structure for accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"flex-1\">\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"flex-none\">\n    <div class=\"$$dropdown $$dropdown-end\">\n      <div tabindex=\"0\" role=\"button\" class=\"$$btn $$btn-ghost $$btn-circle\">\n        <div class=\"$$indicator\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" /> </svg>\n          <span class=\"$$badge $$badge-sm $$indicator-item\">8</span>\n        </div>\n      </div>\n      <div\n        tabindex=\"0\"\n        class=\"$$card $$card-compact $$dropdown-content bg-base-100 z-1 mt-3 w-52 shadow\">\n        <div class=\"$$card-body\">\n          <span class=\"text-lg font-bold\">8 Items</span>\n          <span class=\"text-info\">Subtotal: $999</span>\n          <div class=\"$$card-actions\">\n            <button class=\"$$btn $$btn-primary $$btn-block\">View cart</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"$$dropdown $$dropdown-end\">\n      <div tabindex=\"0\" role=\"button\" class=\"$$btn $$btn-ghost $$btn-circle $$avatar\">\n        <div class=\"w-10 rounded-full\">\n          <img\n            alt=\"Tailwind CSS Navbar component\"\n            src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n        </div>\n      </div>\n      <ul\n        tabindex=\"0\"\n        class=\"$$menu $$menu-sm $$dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow\">\n        <li>\n          <a class=\"justify-between\">\n            Profile\n            <span class=\"$$badge\">New</span>\n          </a>\n        </li>\n        <li><a>Settings</a></li>\n        <li><a>Logout</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Theme Definition\nDESCRIPTION: Detailed example of creating a custom theme with color variables and other theme properties\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n@plugin \"daisyui/theme\" {\n  name: \"mytheme\";\n  default: true;\n  prefersdark: false;\n  color-scheme: light;\n\n  --color-base-100: oklch(98% 0.02 240);\n  --color-base-200: oklch(95% 0.03 240);\n  --color-base-300: oklch(92% 0.04 240);\n  --color-base-content: oklch(20% 0.05 240);\n  --color-primary: oklch(55% 0.3 240);\n  --color-primary-content: oklch(98% 0.01 240);\n  --color-secondary: oklch(70% 0.25 200);\n  --color-secondary-content: oklch(98% 0.01 200);\n  --color-accent: oklch(65% 0.25 160);\n  --color-accent-content: oklch(98% 0.01 160);\n  --color-neutral: oklch(50% 0.05 240);\n  --color-neutral-content: oklch(98% 0.01 240);\n  --color-info: oklch(70% 0.2 220);\n  --color-info-content: oklch(98% 0.01 220);\n  --color-success: oklch(65% 0.25 140);\n  --color-success-content: oklch(98% 0.01 140);\n  --color-warning: oklch(80% 0.25 80);\n  --color-warning-content: oklch(20% 0.05 80);\n  --color-error: oklch(65% 0.3 30);\n  --color-error-content: oklch(98% 0.01 30);\n\n  --radius-selector: 1rem;\n  --radius-field: 0.25rem;\n  --radius-box: 0.5rem;\n\n  --size-selector: 0.25rem;\n  --size-field: 0.25rem;\n\n  --border: 1px;\n\n  --depth: 1;\n  --noise: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Button Implementation with Different HTML Tags\nDESCRIPTION: Demonstrates how to apply button styles to various HTML elements including links, inputs, and form elements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<a role=\"button\" class=\"$$btn\">Link</a>\n<button type=\"submit\" class=\"$$btn\">Button</button>\n<input type=\"button\" value=\"Input\" class=\"$$btn\" />\n<input type=\"submit\" value=\"Submit\" class=\"$$btn\" />\n<input type=\"radio\" aria-label=\"Radio\" class=\"$$btn\" />\n<input type=\"checkbox\" aria-label=\"Checkbox\" class=\"$$btn\" />\n<input type=\"reset\" value=\"Reset\" class=\"$$btn\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring daisyUI with Default Settings in CSS\nDESCRIPTION: This CSS snippet demonstrates a full daisyUI configuration with all default settings. It includes theme selection, root element, inclusion/exclusion rules, prefix settings, and logging options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n@plugin \"daisyui\" {\n  themes: light --default, dark --prefersdark;\n  root: \":root\";\n  include: ;\n  exclude: ;\n  prefix: ;\n  logs: true;\n}\n```\n\n----------------------------------------\n\nTITLE: Including Compiled CSS in HTML\nDESCRIPTION: HTML link tag to include the compiled CSS file in web pages.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/postcss/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"./output.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS as a PostCSS Plugin - JavaScript (ESM)\nDESCRIPTION: This JavaScript snippet exports a PostCSS configuration object for use with Tailwind CSS in a Next.js project. It declares '@tailwindcss/postcss' as an active PostCSS plugin. Requires PostCSS loader, and the file should be named `postcss.config.mjs` to indicate ESM format. The config enables Tailwind to process CSS via PostCSS during builds, with no additional parameters.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nextjs/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n/** @type {import('postcss-load-config').Config} */\\nconst config = {\\n  plugins: {\\n    '@tailwindcss/postcss': {},\\n  },\\n};\\nexport default config;\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI Dependencies - Shell\nDESCRIPTION: This shell command installs Tailwind CSS, a PostCSS adapter for Tailwind, and the latest version of daisyUI into the project. It must be run in the root of your Next.js project. The installed packages are required for Tailwind-based styling and daisyUI components. Execution will update `package.json` and `node_modules`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nextjs/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss @tailwindcss/postcss daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Chat Component in HTML with DaisyUI\nDESCRIPTION: Implements a chat bubble component to show conversations with author image, name, time, etc. Supports modifiers for placement and color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"chat {PLACEMENT}\">\n  <div class=\"chat-image\"></div>\n  <div class=\"chat-header\"></div>\n  <div class=\"chat-bubble {COLOR}\">Message text</div>\n  <div class=\"chat-footer\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Footer with Newsletter Subscription Form in DaisyUI\nDESCRIPTION: A comprehensive footer that includes navigation links and a newsletter subscription form. Utilizes DaisyUI's join component to create a cohesive input field and button combination.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-base-200 text-base-content p-10\">\n  <nav>\n    <h6 class=\"$$footer-title\">Services</h6>\n    <a class=\"$$link $$link-hover\">Branding</a>\n    <a class=\"$$link $$link-hover\">Design</a>\n    <a class=\"$$link $$link-hover\">Marketing</a>\n    <a class=\"$$link $$link-hover\">Advertisement</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Company</h6>\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Legal</h6>\n    <a class=\"$$link $$link-hover\">Terms of use</a>\n    <a class=\"$$link $$link-hover\">Privacy policy</a>\n    <a class=\"$$link $$link-hover\">Cookie policy</a>\n  </nav>\n  <form>\n    <h6 class=\"$$footer-title\">Newsletter</h6>\n    <fieldset class=\"w-80\">\n      <label>Enter your email address</label>\n      <div class=\"$$join\">\n        <input\n          type=\"text\"\n          placeholder=\"username@site.com\"\n          class=\"$$input $$input-bordered $$join-item\" />\n        <button class=\"$$btn $$btn-primary $$join-item\">Subscribe</button>\n      </div>\n    </fieldset>\n  </form>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Creating Dropdown Menu with CSS Focus in HTML\nDESCRIPTION: This code demonstrates how to create a dropdown menu using CSS focus. It uses div elements with tabindex for better cross-browser compatibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS with Tailwind\nDESCRIPTION: PostCSS configuration file that enables Tailwind CSS processing.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/postcss/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n};\nexport default config;\n```\n\n----------------------------------------\n\nTITLE: Enabling All Themes in daisyUI PostCSS Configuration\nDESCRIPTION: Shows how to enable all available built-in daisyUI themes by setting the `themes` property to `all` within the PostCSS configuration block.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  themes: all;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Basic Button Implementation in DaisyUI\nDESCRIPTION: Shows how to create a default button using DaisyUI's btn class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn\">Default</button>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom daisyUI Theme in CSS\nDESCRIPTION: This CSS snippet demonstrates how to create a custom daisyUI theme with custom colors. It includes color definitions for various theme elements, border radius settings, and other theme-specific variables.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n@plugin \"daisyui/theme\" {\n  name: \"mytheme\";\n  default: true; /* set as default */\n  prefersdark: false; /* set as default dark mode (prefers-color-scheme:dark) */\n  color-scheme: light; /* color of browser-provided UI */\n\n  --color-base-100: oklch(98% 0.02 240);\n  --color-base-200: oklch(95% 0.03 240);\n  --color-base-300: oklch(92% 0.04 240);\n  --color-base-content: oklch(20% 0.05 240);\n  --color-primary: oklch(55% 0.3 240);\n  --color-primary-content: oklch(98% 0.01 240);\n  --color-secondary: oklch(70% 0.25 200);\n  --color-secondary-content: oklch(98% 0.01 200);\n  --color-accent: oklch(65% 0.25 160);\n  --color-accent-content: oklch(98% 0.01 160);\n  --color-neutral: oklch(50% 0.05 240);\n  --color-neutral-content: oklch(98% 0.01 240);\n  --color-info: oklch(70% 0.2 220);\n  --color-info-content: oklch(98% 0.01 220);\n  --color-success: oklch(65% 0.25 140);\n  --color-success-content: oklch(98% 0.01 140);\n  --color-warning: oklch(80% 0.25 80);\n  --color-warning-content: oklch(20% 0.05 80);\n  --color-error: oklch(65% 0.3 30);\n  --color-error-content: oklch(98% 0.01 30);\n\n  --radius-selector: 1rem; /* border radius of selectors (checkbox, toggle, badge) */\n  --radius-field: 0.25rem; /* border radius of fields (button, input, select, tab) */\n  --radius-box: 0.5rem; /* border radius of boxes (card, modal, alert) */\n\n  --size-selector: 0.25rem; /* base size of selectors (checkbox, toggle, badge) */\n  --size-field: 0.25rem; /* base size of fields (button, input, select, tab) */\n\n  --border: 1px; /* border size */\n\n  --depth: 1; /* only 0 or 1 – Adds a shadow and subtle 3D effect to components */\n  --noise: 0; /* only 0 or 1 - Adds a subtle noise effect to components */\n}\n```\n\n----------------------------------------\n\nTITLE: Including Specific DaisyUI Components using PostCSS\nDESCRIPTION: Demonstrates how to selectively include only specific components from the DaisyUI library using the new include functionality in PostCSS configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n@plugin \"daisyui\" {\n  include: toggle;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS Plugin\nDESCRIPTION: Configuration code showing how to add a plugin to the Tailwind CSS configuration file (tailwind.config.js). This example demonstrates adding the daisyUI plugin.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/9-best-tailwind-css-plugins-for-developers/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  plugins: [require(\"daisyui\")],\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Primary-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with primary color styling using the select-primary class. Creates a dropdown with primary theme color for text editor selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-primary\">\n  <option disabled selected>Pick a text editor</option>\n  <option>VScode</option>\n  <option>VScode fork</option>\n  <option>Another VScode fork</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick a text editor\" class=\"$$select $$select-primary\">\n  <option disabled={true}>Pick a text editor</option>\n  <option>VScode</option>\n  <option>VScode fork</option>\n  <option>Another VScode fork</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Navbar with Search Input and Dropdown in HTML using daisyUI\nDESCRIPTION: This snippet demonstrates a complex navbar with a search input and a dropdown menu. It uses 'input' class for the search field and 'dropdown' classes for the user menu dropdown, along with an avatar image.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"flex-1\">\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"flex gap-2\">\n    <input type=\"text\" placeholder=\"Search\" class=\"$$input $$input-bordered w-24 md:w-auto\" />\n    <div class=\"$$dropdown $$dropdown-end\">\n      <div tabindex=\"0\" role=\"button\" class=\"$$btn $$btn-ghost $$btn-circle $$avatar\">\n        <div class=\"w-10 rounded-full\">\n          <img\n            alt=\"Tailwind CSS Navbar component\"\n            src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n        </div>\n      </div>\n      <ul\n        tabindex=\"0\"\n        class=\"$$menu $$menu-sm $$dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow\">\n        <li>\n          <a class=\"justify-between\">\n            Profile\n            <span class=\"$$badge\">New</span>\n          </a>\n        </li>\n        <li><a>Settings</a></li>\n        <li><a>Logout</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic DaisyUI CDN Implementation\nDESCRIPTION: Adds the complete DaisyUI package and TailwindCSS browser package via CDN links. Includes the core stylesheet and required TailwindCSS dependency.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/cdn/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/daisyui@5\" rel=\"stylesheet\" type=\"text/css\" />\n<script src=\"https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Next.js App Using npm - Shell\nDESCRIPTION: This shell command uses npm to initialize a new Next.js project in the current directory. `npm create next-app@latest ./` downloads and runs the official Next.js starter, creating all necessary files and initial folder structure. Requires npm version 7+ and network connectivity to fetch dependencies. The output is a ready-to-develop Next.js project with default files.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nextjs/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create next-app@latest ./\n```\n\n----------------------------------------\n\nTITLE: Building a Half-Width Item Carousel with DaisyUI in HTML\nDESCRIPTION: Creates a carousel with half-width items using DaisyUI, where each item takes up 50% of the container width. This creates a peek-a-boo effect where users can see part of the next slide, encouraging horizontal scrolling through the image collection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel rounded-box w-96\">\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"\n      class=\"w-full\" />\n  </div>\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"\n      class=\"w-full\" />\n  </div>\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"\n      class=\"w-full\" />\n  </div>\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"\n      class=\"w-full\" />\n  </div>\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"\n      class=\"w-full\" />\n  </div>\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"\n      class=\"w-full\" />\n  </div>\n  <div class=\"$$carousel-item w-1/2\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"\n      class=\"w-full\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Login Buttons with HTML and CSS Classes\nDESCRIPTION: This code snippet demonstrates the implementation of various login buttons using HTML and CSS classes. Each button includes an SVG icon and text, styled with specific background colors, text colors, and border colors. The buttons are arranged in a grid layout.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_17\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"grid gap-4\">\n\n  <button class=\"btn bg-white text-black border-[#e5e5e5]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"black\"><rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\"></rect><path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"></path></g></svg>\n    Login with Email\n  </button>\n\n  <button class=\"btn bg-black text-white border-black\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"white\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"></path></svg>\n    Login with GitHub\n  </button>\n  \n  <button class=\"btn bg-white text-black border-[#e5e5e5]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g><path d=\"m0 0H512V512H0\" fill=\"#fff\"></path><path fill=\"#34a853\" d=\"M153 292c30 82 118 95 171 60h62v48A192 192 0 0190 341\"></path><path fill=\"#4285f4\" d=\"m386 400a140 175 0 0053-179H260v74h102q-7 37-38 57\"></path><path fill=\"#fbbc02\" d=\"m90 341a208 200 0 010-171l63 49q-12 37 0 73\"></path><path fill=\"#ea4335\" d=\"m153 219c22-69 116-109 179-50l55-54c-78-75-230-72-297 55\"></path></g></svg>\n    Login with Google\n  </button>\n  \n  <button class=\"btn bg-[#1A77F2] text-white border-[#005fd8]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path fill=\"white\" d=\"M8 12h5V8c0-6 4-7 11-6v5c-4 0-5 0-5 3v2h5l-1 6h-4v12h-6V18H8z\"></path></svg>\n    Login with Facebook\n  </button>\n  \n  <button class=\"btn bg-black text-white border-black\">\n    <svg width=\"16\" height=\"12\" viewBox=\"0 0 300 271\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" d=\"m236 0h46l-101 115 118 156h-92.6l-72.5-94.8-83 94.8h-46l107-123-113-148h94.9l65.5 86.6zm-16.1 244h25.5l-165-218h-27.4z\"/></svg>\n    Login with X\n  </button>\n  \n  <button class=\"btn bg-[#FEE502] text-[#181600] border-[#f1d800]\">\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#181600\" d=\"M255.5 48C299.345 48 339.897 56.5332 377.156 73.5996C414.415 90.666 443.871 113.873 465.522 143.22C487.174 172.566 498 204.577 498 239.252C498 273.926 487.174 305.982 465.522 335.42C443.871 364.857 414.46 388.109 377.291 405.175C340.122 422.241 299.525 430.775 255.5 430.775C241.607 430.775 227.262 429.781 212.467 427.795C148.233 472.402 114.042 494.977 109.892 495.518C107.907 496.241 106.012 496.15 104.208 495.248C103.486 494.706 102.945 493.983 102.584 493.08C102.223 492.177 102.043 491.365 102.043 490.642V489.559C103.126 482.515 111.335 453.169 126.672 401.518C91.8486 384.181 64.1974 361.2 43.7185 332.575C23.2395 303.951 13 272.843 13 239.252C13 204.577 23.8259 172.566 45.4777 143.22C67.1295 113.873 96.5849 90.666 133.844 73.5996C171.103 56.5332 211.655 48 255.5 48Z\"></path></svg>\n    카카오 로그인\n  </button>\n  \n  <button class=\"btn bg-black text-white border-black\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1195 1195\"><path fill=\"white\" d=\"M1006.933 812.8c-32 153.6-115.2 211.2-147.2 249.6-32 25.6-121.6 25.6-153.6 6.4-38.4-25.6-134.4-25.6-166.4 0-44.8 32-115.2 19.2-128 12.8-256-179.2-352-716.8 12.8-774.4 64-12.8 134.4 32 134.4 32 51.2 25.6 70.4 12.8 115.2-6.4 96-44.8 243.2-44.8 313.6 76.8-147.2 96-153.6 294.4 19.2 403.2zM802.133 64c12.8 70.4-64 224-204.8 230.4-12.8-38.4 32-217.6 204.8-230.4z\"></path></svg>\n    Login with Apple\n  </button>\n  \n  <button class=\"btn bg-[#FF9900] text-black border-[#e17d00]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><g fill=\"black\"><path d=\"M14.463 13.831c-1.753 1.294-4.291 1.981-6.478 1.981-3.066 0-5.825-1.131-7.912-3.019-.163-.147-.019-.35.178-.234 2.253 1.313 5.041 2.1 7.919 2.1 1.941 0 4.075-.403 6.041-1.238.294-.125.544.197.253.409z\"></path><path d=\"M15.191 13c-.225-.287-1.481-.137-2.047-.069-.172.019-.197-.128-.044-.238 1.003-.703 2.647-.5 2.838-.266.194.238-.05 1.884-.991 2.672-.144.122-.281.056-.219-.103.216-.528.688-1.709.463-1.997zM11.053 11.838l.003.003c.387-.341 1.084-.95 1.478-1.278.156-.125.128-.334.006-.509-.353-.488-.728-.884-.728-1.784v-3c0-1.272.088-2.438-.847-3.313-.738-.706-1.963-.956-2.9-.956-1.831 0-3.875.684-4.303 2.947-.047.241.131.369.287.403l1.866.203c.175-.009.3-.181.334-.356.159-.778.813-1.156 1.547-1.156.397 0 .847.144 1.081.5.269.397.234.938.234 1.397v.25c-1.116.125-2.575.206-3.619.666-1.206.522-2.053 1.584-2.053 3.147 0 2 1.259 3 2.881 3 1.369 0 2.116-.322 3.172-1.403.35.506.463.753 1.103 1.284a.395.395 0 0 0 .456-.044zm-1.94-4.694c0 .75.019 1.375-.359 2.041-.306.544-.791.875-1.331.875-.737 0-1.169-.563-1.169-1.394 0-1.641 1.472-1.938 2.863-1.938v.416z\"></path></g></svg>\n    Login with Amazon\n  </button>\n  \n  <button class=\"btn bg-[#2F2F2F] text-white border-black\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M96 96H247V247H96\" fill=\"#f24f23\"></path><path d=\"M265 96V247H416V96\" fill=\"#7eba03\"></path><path d=\"M96 265H247V416H96\" fill=\"#3ca4ef\"></path><path d=\"M265 265H416V416H265\" fill=\"#f9ba00\"></path></svg>\n    Login with Microsoft\n  </button>\n  \n  <button class=\"btn bg-[#03C755] text-white border-[#00b544]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><g fill-rule=\"evenodd\" stroke-linejoin=\"round\" fill=\"white\"><path fill-rule=\"nonzero\" d=\"M12.91 6.57c.232 0 .42.19.42.42 0 .23-.188.42-.42.42h-1.17v.75h1.17a.42.42 0 1 1 0 .84h-1.59a.42.42 0 0 1-.418-.42V5.4c0-.23.188-.42.42-.42h1.59a.42.42 0 0 1-.002.84h-1.17v.75h1.17zm-2.57 2.01a.421.421 0 0 1-.757.251l-1.63-2.217V8.58a.42.42 0 0 1-.42.42.42.42 0 0 1-.418-.42V5.4a.418.418 0 0 1 .755-.249L9.5 7.366V5.4c0-.23.188-.42.42-.42.23 0 .42.19.42.42v3.18zm-3.828 0c0 .23-.188.42-.42.42a.42.42 0 0 1-.418-.42V5.4c0-.23.188-.42.42-.42.23 0 .418.19.418.42v3.18zM4.868 9h-1.59c-.23 0-.42-.19-.42-.42V5.4c0-.23.19-.42.42-.42.232 0 .42.19.42.42v2.76h1.17a.42.42 0 1 1 0 .84M16 6.87C16 3.29 12.41.376 8 .376S0 3.29 0 6.87c0 3.208 2.846 5.896 6.69 6.405.26.056.615.172.705.394.08.2.053.518.026.722 0 0-.092.565-.113.685-.035.203-.16.79.693.432.854-.36 4.607-2.714 6.285-4.646C15.445 9.594 16 8.302 16 6.87\"></path></g></svg>\n    LINEでログイン\n  </button>\n  \n  <button class=\"btn bg-[#622069] text-white border-[#591660]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g stroke-linecap=\"round\" stroke-width=\"78\"><path stroke=\"#36c5f0\" d=\"m110 207h97m0-97h.1v-.1\"></path><path stroke=\"#2eb67d\" d=\"m305 110v97m97 0v.1h.1\"></path><path stroke=\"#ecb22e\" d=\"m402 305h-97m0 97h-.1v.1\"></path><path stroke=\"#e01e5a\" d=\"M110 305h.1v.1m97 0v97\"></path></g></svg>\n    Login with Slack\n  </button>\n  \n  <button class=\"btn bg-[#0967C2] text-white border-[#0059b3]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path fill=\"white\" d=\"M26.111,3H5.889c-1.595,0-2.889,1.293-2.889,2.889V26.111c0,1.595,1.293,2.889,2.889,2.889H26.111c1.595,0,2.889-1.293,2.889-2.889V5.889c0-1.595-1.293-2.889-2.889-2.889ZM10.861,25.389h-3.877V12.87h3.877v12.519Zm-1.957-14.158c-1.267,0-2.293-1.034-2.293-2.31s1.026-2.31,2.293-2.31,2.292,1.034,2.292,2.31-1.026,2.31-2.292,2.31Zm16.485,14.158h-3.858v-6.571c0-1.802-.685-2.809-2.111-2.809-1.551,0-2.362,1.048-2.362,2.809v6.571h-3.718V12.87h3.718v1.686s1.118-2.069,3.775-2.069,4.556,1.621,4.556,4.975v7.926Z\" fill-rule=\"evenodd\"></path></svg>\n    Login with LinkedIn\n  </button>\n  \n  <button class=\"btn bg-[#47698F] text-white border-[#35567b]\">\n    <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2240 2240\"><g fill=\"white\"><path d=\"M2077 904q23 64-150 294-24 32-65 85-78 100-90 131-17 41 14 81 17 21 81 82h1l1 1 1 1 2 2q141 131 191 221 3 5 6.5 12.5t7 26.5-.5 34-25 27.5-59 12.5l-256 4q-24 5-56-5t-52-22l-20-12q-30-21-70-64t-68.5-77.5-61-58-56.5-15.5q-3 1-8 3.5t-17 14.5-21.5 29.5-17 52-6.5 77.5q0 15-3.5 27.5t-7.5 18.5l-4 5q-18 19-53 22h-115q-71 4-146-16.5t-131.5-53-103-66T648 1722l-25-24q-10-10-27.5-30t-71.5-91-106-151-122.5-211T165 943q-6-16-6-27t3-16l4-6q15-19 57-19l274-2q12 2 23 6.5t16 8.5l5 3q16 11 24 32 20 50 46 103.5t41 81.5l16 29q29 60 56 104t48.5 68.5T814 1348t34 14 27-5q2-1 5-5t12-22 13.5-47 9.5-81 0-125q-2-40-9-73t-14-46l-6-12q-25-34-85-43-13-2 5-24 17-19 38-30 53-26 239-24 82 1 135 13 20 5 33.5 13.5t20.5 24 10.5 32 3.5 45.5-1 55-2.5 70.5-1.5 82.5q0 11-1 42t-.5 48 3.5 40.5 11.5 39 22.5 24.5q8 2 17 4t26-11 38-34.5 52-67 68-107.5q60-104 107-225 4-10 10-17.5t11-10.5l4-3 5-2.5 13-3 20-.5 288-2q39-5 64 2.5t31 16.5z\"></path></g></svg>\n    Login with VK\n  </button>\n  \n  <button class=\"btn bg-[#5EBB2B] text-white border-[#4eaa0c]\">\n\n```\n\n----------------------------------------\n\nTITLE: Complete Chat Bubble with Header and Footer\nDESCRIPTION: Demonstrates full chat bubble implementation including avatar, header with timestamp, message content, and delivery status footer\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/chat/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$chat $$chat-start\">\n  <div class=\"$$chat-image $$avatar\">\n    <div class=\"w-10 rounded-full\">\n      <img\n        alt=\"Tailwind CSS chat bubble component\"\n        src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$chat-header\">\n    Obi-Wan Kenobi\n    <time class=\"text-xs opacity-50\">12:45</time>\n  </div>\n  <div class=\"$$chat-bubble\">You were the Chosen One!</div>\n  <div class=\"$$chat-footer opacity-50\">Delivered</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Size Variations to Radio Buttons\nDESCRIPTION: Displays radio buttons of varying sizes using DaisyUI's size classes. The radio buttons are rendered in extra small to extra large sizes. The primary size classes used include `radio-xs`, `radio-sm`, `radio-md`, `radio-lg`, and `radio-xl`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-2\" class=\"$$radio $$radio-xs\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-2\" class=\"$$radio $$radio-sm\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-2\" class=\"$$radio $$radio-md\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-2\" class=\"$$radio $$radio-lg\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-2\" class=\"$$radio $$radio-xl\" checked=\"checked\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS and daisyUI in app.css using PostCSS\nDESCRIPTION: This snippet demonstrates how to configure Tailwind CSS and daisyUI plugins within a CSS entry file using PostCSS directives. It imports Tailwind, sets the source directory for HTML and JavaScript files, and registers the daisyUI plugin. This setup is required to ensure Tailwind CSS processes the correct files and applies daisyUI components during build. Ensure the referenced file paths are accurate for your project structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/cli/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"./public/*.{html,js}\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Implementing a Navbar with Icons at Start and End in HTML using daisyUI\nDESCRIPTION: This snippet shows how to create a navbar with icons at both the start and end, and a title in the center. It uses 'flex-none' for icon containers and 'flex-1' for the title container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"flex-none\">\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"inline-block h-5 w-5 stroke-current\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path> </svg>\n    </button>\n  </div>\n  <div class=\"flex-1\">\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"flex-none\">\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"inline-block h-5 w-5 stroke-current\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\"></path> </svg>\n    </button>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Primary Button in DaisyUI with HTML\nDESCRIPTION: A simple example showing how to create a primary-colored button using DaisyUI modifier classes. The btn-primary class automatically sets the correct background, text, and border colors.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/colors/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn btn-primary\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Social Login Buttons with SVG Icons in HTML using DaisyUI\nDESCRIPTION: A comprehensive set of login buttons for various social media platforms, each with custom styling and SVG icons. The buttons use DaisyUI's button class ($$btn) with specific background colors, text colors, and border styles that match each platform's branding.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_18\n\nLANGUAGE: html\nCODE:\n```\n<!-- Email -->\n<button class=\"$$btn bg-white text-black border-[#e5e5e5]\">\n  <svg aria-label=\"Email icon\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"black\"><rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\"></rect><path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"></path></g></svg>\n  Login with Email\n</button>\n\n<!-- GitHub -->\n<button class=\"$$btn bg-black text-white border-black\">\n  <svg aria-label=\"GitHub logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"white\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"></path></svg>\n  Login with GitHub\n</button>\n\n<!-- Google -->\n<button class=\"$$btn bg-white text-black border-[#e5e5e5]\">\n  <svg aria-label=\"Google logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g><path d=\"m0 0H512V512H0\" fill=\"#fff\"></path><path fill=\"#34a853\" d=\"M153 292c30 82 118 95 171 60h62v48A192 192 0 0190 341\"></path><path fill=\"#4285f4\" d=\"m386 400a140 175 0 0053-179H260v74h102q-7 37-38 57\"></path><path fill=\"#fbbc02\" d=\"m90 341a208 200 0 010-171l63 49q-12 37 0 73\"></path><path fill=\"#ea4335\" d=\"m153 219c22-69 116-109 179-50l55-54c-78-75-230-72-297 55\"></path></g></svg>\n  Login with Google\n</button>\n\n<!-- Facebook -->\n<button class=\"$$btn bg-[#1A77F2] text-white border-[#005fd8]\">\n  <svg aria-label=\"Facebook logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path fill=\"white\" d=\"M8 12h5V8c0-6 4-7 11-6v5c-4 0-5 0-5 3v2h5l-1 6h-4v12h-6V18H8z\"></path></svg>\n  Login with Facebook\n</button>\n\n<!-- X -->\n<button class=\"$$btn bg-black text-white border-black\">\n  <svg aria-label=\"X logo\" width=\"16\" height=\"12\" viewBox=\"0 0 300 271\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" d=\"m236 0h46l-101 115 118 156h-92.6l-72.5-94.8-83 94.8h-46l107-123-113-148h94.9l65.5 86.6zm-16.1 244h25.5l-165-218h-27.4z\"/></svg>\n  Login with X\n</button>\n\n<!-- Kakao -->\n<button class=\"$$btn bg-[#FEE502] text-[#181600] border-[#f1d800]\">\n  <svg aria-label=\"Kakao logo\" width=\"16\" height=\"16\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#181600\" d=\"M255.5 48C299.345 48 339.897 56.5332 377.156 73.5996C414.415 90.666 443.871 113.873 465.522 143.22C487.174 172.566 498 204.577 498 239.252C498 273.926 487.174 305.982 465.522 335.42C443.871 364.857 414.46 388.109 377.291 405.175C340.122 422.241 299.525 430.775 255.5 430.775C241.607 430.775 227.262 429.781 212.467 427.795C148.233 472.402 114.042 494.977 109.892 495.518C107.907 496.241 106.012 496.15 104.208 495.248C103.486 494.706 102.945 493.983 102.584 493.08C102.223 492.177 102.043 491.365 102.043 490.642V489.559C103.126 482.515 111.335 453.169 126.672 401.518C91.8486 384.181 64.1974 361.2 43.7185 332.575C23.2395 303.951 13 272.843 13 239.252C13 204.577 23.8259 172.566 45.4777 143.22C67.1295 113.873 96.5849 90.666 133.844 73.5996C171.103 56.5332 211.655 48 255.5 48Z\"></path></svg>\n  카카오 로그인\n</button>\n\n<!-- Apple -->\n<button class=\"$$btn bg-black text-white border-black\">\n  <svg aria-label=\"Apple logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1195 1195\"><path fill=\"white\" d=\"M1006.933 812.8c-32 153.6-115.2 211.2-147.2 249.6-32 25.6-121.6 25.6-153.6 6.4-38.4-25.6-134.4-25.6-166.4 0-44.8 32-115.2 19.2-128 12.8-256-179.2-352-716.8 12.8-774.4 64-12.8 134.4 32 134.4 32 51.2 25.6 70.4 12.8 115.2-6.4 96-44.8 243.2-44.8 313.6 76.8-147.2 96-153.6 294.4 19.2 403.2zM802.133 64c12.8 70.4-64 224-204.8 230.4-12.8-38.4 32-217.6 204.8-230.4z\"></path></svg>\n  Login with Apple\n</button>\n\n<!-- Amazon -->\n<button class=\"$$btn bg-[#FF9900] text-black border-[#e17d00]\">\n  <svg aria-label=\"Amazon logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><g fill=\"black\"><path d=\"M14.463 13.831c-1.753 1.294-4.291 1.981-6.478 1.981-3.066 0-5.825-1.131-7.912-3.019-.163-.147-.019-.35.178-.234 2.253 1.313 5.041 2.1 7.919 2.1 1.941 0 4.075-.403 6.041-1.238.294-.125.544.197.253.409z\"></path><path d=\"M15.191 13c-.225-.287-1.481-.137-2.047-.069-.172.019-.197-.128-.044-.238 1.003-.703 2.647-.5 2.838-.266.194.238-.05 1.884-.991 2.672-.144.122-.281.056-.219-.103.216-.528.688-1.709.463-1.997zM11.053 11.838l.003.003c.387-.341 1.084-.95 1.478-1.278.156-.125.128-.334.006-.509-.353-.488-.728-.884-.728-1.784v-3c0-1.272.088-2.438-.847-3.313-.738-.706-1.963-.956-2.9-.956-1.831 0-3.875.684-4.303 2.947-.047.241.131.369.287.403l1.866.203c.175-.009.3-.181.334-.356.159-.778.813-1.156 1.547-1.156.397 0 .847.144 1.081.5.269.397.234.938.234 1.397v.25c-1.116.125-2.575.206-3.619.666-1.206.522-2.053 1.584-2.053 3.147 0 2 1.259 3 2.881 3 1.369 0 2.116-.322 3.172-1.403.35.506.463.753 1.103 1.284a.395.395 0 0 0 .456-.044zm-1.94-4.694c0 .75.019 1.375-.359 2.041-.306.544-.791.875-1.331.875-.737 0-1.169-.563-1.169-1.394 0-1.641 1.472-1.938 2.863-1.938v.416z\"></path></g></svg>\n  Login with Amazon\n</button>\n\n<!-- Microsoft -->\n<button class=\"$$btn bg-[#2F2F2F] text-white border-black\">\n  <svg aria-label=\"Microsoft logo\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M96 96H247V247H96\" fill=\"#f24f23\"></path><path d=\"M265 96V247H416V96\" fill=\"#7eba03\"></path><path d=\"M96 265H247V416H96\" fill=\"#3ca4ef\"></path><path d=\"M265 265H416V416H265\" fill=\"#f9ba00\"></path></svg>\n  Login with Microsoft\n</button>\n\n<!-- Line -->\n```\n\n----------------------------------------\n\nTITLE: Outline Style Buttons\nDESCRIPTION: Demonstrates outline-styled buttons with various color combinations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-outline\">Default</button>\n<button class=\"$$btn $$btn-outline $$btn-primary\">Primary</button>\n<button class=\"$$btn $$btn-outline $$btn-secondary\">Secondary</button>\n<button class=\"$$btn $$btn-outline $$btn-accent\">Accent</button>\n<button class=\"$$btn $$btn-outline $$btn-info\">Info</button>\n<button class=\"$$btn $$btn-outline $$btn-success\">Success</button>\n<button class=\"$$btn $$btn-outline $$btn-warning\">Warning</button>\n<button class=\"$$btn $$btn-outline $$btn-error\">Error</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Card Component with DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic card component using DaisyUI classes. It includes a figure with an image, a card body with a title, description, and an action button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card bg-base-100 w-96 shadow-sm\">\n  <figure>\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"\n      alt=\"Shoes\" />\n  </figure>\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card Title</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing daisyUI Components Using Tailwind's @apply in PostCSS\nDESCRIPTION: This PostCSS snippet demonstrates how to globally change the appearance of daisyUI components by using the @apply directive to inject Tailwind utility classes (here, \"rounded-full\") into the base \"btn\" class. It requires a PostCSS setup with Tailwind CSS installed and configured. The code is placed in a CSS or PostCSS file; no direct parameters, but the impact is global, affecting all elements with the \"btn\" class, providing a project-wide customization mechanism.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/customize/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@utility btn {\n  @apply rounded-full;\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering a Responsive Table with DaisyUI Components in HTML\nDESCRIPTION: This snippet provides a complete HTML structure for a horizontally scrollable table using DaisyUI and Tailwind CSS. It includes rows with user avatars, checkboxes for selection, color-coded badges, and interactive detail buttons, showcasing how to combine DaisyUI component classes (such as 'table', 'avatar', 'badge', and 'btn') for an enhanced user interface. The table is designed for composability within applications that require rich visual tabular data; it requires DaisyUI and Tailwind CSS to be installed, and expects input data in the form of user information, jobs, and color preferences. Outputs are structured, accessible table rows; this snippet is best utilized in the body of a webpage, and assumes proper CSS framework configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"overflow-x-auto\\\">\\n  <table class=\\\"$$table\\\">\\n    <!-- head -->\\n    <thead>\\n      <tr>\\n        <th>\\n          <label>\\n            <input type=\\\"checkbox\\\" class=\\\"$$checkbox\\\" />\\n          </label>\\n        </th>\\n        <th>Name</th>\\n        <th>Job</th>\\n        <th>Favorite Color</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <!-- row 1 -->\\n      <tr>\\n        <th>\\n          <label>\\n            <input type=\\\"checkbox\\\" class=\\\"$$checkbox\\\" />\\n          </label>\\n        </th>\\n        <td>\\n          <div class=\\\"flex items-center gap-3\\\">\\n            <div class=\\\"$$avatar\\\">\\n              <div class=\\\"$$mask $$mask-squircle h-12 w-12\\\">\\n                <img\\n                  src=\\\"https://img.daisyui.com/images/profile/demo/2@94.webp\\\"\\n                  alt=\\\"Avatar Tailwind CSS Component\\\" />\\n              </div>\\n            </div>\\n            <div>\\n              <div class=\\\"font-bold\\\">Hart Hagerty</div>\\n              <div class=\\\"text-sm opacity-50\\\">United States</div>\\n            </div>\\n          </div>\\n        </td>\\n        <td>\\n          Zemlak, Daniel and Leannon\\n          <br />\\n          <span class=\\\"$$badge $$badge-ghost $$badge-sm\\\">Desktop Support Technician</span>\\n        </td>\\n        <td>Purple</td>\\n        <th>\\n          <button class=\\\"$$btn $$btn-ghost $$btn-xs\\\">details</button>\\n        </th>\\n      </tr>\\n      <!-- row 2 -->\\n      <tr>\\n        <th>\\n          <label>\\n            <input type=\\\"checkbox\\\" class=\\\"$$checkbox\\\" />\\n          </label>\\n        </th>\\n        <td>\\n          <div class=\\\"flex items-center gap-3\\\">\\n            <div class=\\\"$$avatar\\\">\\n              <div class=\\\"$$mask $$mask-squircle h-12 w-12\\\">\\n                <img\\n                  src=\\\"https://img.daisyui.com/images/profile/demo/3@94.webp\\\"\\n                  alt=\\\"Avatar Tailwind CSS Component\\\" />\\n              </div>\\n            </div>\\n            <div>\\n              <div class=\\\"font-bold\\\">Brice Swyre</div>\\n              <div class=\\\"text-sm opacity-50\\\">China</div>\\n            </div>\\n          </div>\\n        </td>\\n        <td>\\n          Carroll Group\\n          <br />\\n          <span class=\\\"$$badge $$badge-ghost $$badge-sm\\\">Tax Accountant</span>\\n        </td>\\n        <td>Red</td>\\n        <th>\\n          <button class=\\\"$$btn $$btn-ghost $$btn-xs\\\">details</button>\\n        </th>\\n      </tr>\\n      <!-- row 3 -->\\n      <tr>\\n        <th>\\n          <label>\\n            <input type=\\\"checkbox\\\" class=\\\"$$checkbox\\\" />\\n          </label>\\n        </th>\\n        <td>\\n          <div class=\\\"flex items-center gap-3\\\">\\n            <div class=\\\"$$avatar\\\">\\n              <div class=\\\"$$mask $$mask-squircle h-12 w-12\\\">\\n                <img\\n                  src=\\\"https://img.daisyui.com/images/profile/demo/4@94.webp\\\"\\n                  alt=\\\"Avatar Tailwind CSS Component\\\" />\\n              </div>\\n            </div>\\n            <div>\\n              <div class=\\\"font-bold\\\">Marjy Ferencz</div>\\n              <div class=\\\"text-sm opacity-50\\\">Russia</div>\\n            </div>\\n          </div>\\n        </td>\\n        <td>\\n          Rowe-Schoen\\n          <br />\\n          <span class=\\\"$$badge $$badge-ghost $$badge-sm\\\">Office Assistant I</span>\\n        </td>\\n        <td>Crimson</td>\\n        <th>\\n          <button class=\\\"$$btn $$btn-ghost $$btn-xs\\\">details</button>\\n        </th>\\n      </tr>\\n      <!-- row 4 -->\\n      <tr>\\n        <th>\\n          <label>\\n            <input type=\\\"checkbox\\\" class=\\\"$$checkbox\\\" />\\n          </label>\\n        </th>\\n        <td>\\n          <div class=\\\"flex items-center gap-3\\\">\\n            <div class=\\\"$$avatar\\\">\\n              <div class=\\\"$$mask $$mask-squircle h-12 w-12\\\">\\n                <img\\n                  src=\\\"https://img.daisyui.com/images/profile/demo/5@94.webp\\\"\\n                  alt=\\\"Avatar Tailwind CSS Component\\\" />\\n              </div>\\n            </div>\\n            <div>\\n              <div class=\\\"font-bold\\\">Yancy Tear</div>\\n              <div class=\\\"text-sm opacity-50\\\">Brazil</div>\\n            </div>\\n          </div>\\n        </td>\\n        <td>\\n          Wyman-Ledner\\n          <br />\\n          <span class=\\\"$$badge $$badge-ghost $$badge-sm\\\">Community Outreach Specialist</span>\\n        </td>\\n        <td>Indigo</td>\\n        <th>\\n          <button class=\\\"$$btn $$btn-ghost $$btn-xs\\\">details</button>\\n        </th>\\n      </tr>\\n    </tbody>\\n    <!-- foot -->\\n    <tfoot>\\n      <tr>\\n        <th></th>\\n        <th>Name</th>\\n        <th>Job</th>\\n        <th>Favorite Color</th>\\n        <th></th>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Enhancing daisyUI Buttons with Tailwind Utility Classes in HTML\nDESCRIPTION: This HTML example shows how you can augment daisyUI's default button with core Tailwind utility classes (\"rounded-full\", \"rounded-none\", \"px-16\") for further customization. It depends on both daisyUI and Tailwind CSS being available in the project. Key parameters include the combination of button and utility classes; expected output is customized buttons with unique border-radius and padding. This approach is flexible and non-destructive, but relies on careful class ordering if there are conflicting styles.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/customize/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn rounded-full\">One</button>\n<button class=\"btn rounded-none px-16\">Two</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Navigation Bar with DaisyUI\nDESCRIPTION: This code demonstrates how to implement a navigation bar using DaisyUI's navbar component. Content can be positioned using navbar-start, navbar-center, and navbar-end classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_47\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"navbar\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Card with Badge and Image in HTML using DaisyUI\nDESCRIPTION: This snippet shows how to create a card with an image, title badge, and content badges using DaisyUI classes. It includes a figure element for the image and badge components for additional information.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card bg-base-100 w-96 shadow-sm\">\n  <figure>\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"\n      alt=\"Shoes\" />\n  </figure>\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">\n      Card Title\n      <div class=\"$$badge $$badge-secondary\">NEW</div>\n    </h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <div class=\"$$badge $$badge-outline\">Fashion</div>\n      <div class=\"$$badge $$badge-outline\">Products</div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Responsive Menu Implementation\nDESCRIPTION: A responsive menu that switches between vertical orientation on small screens and horizontal orientation on large screens using DaisyUI's menu classes and Tailwind's responsive prefixes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu $$menu-vertical lg:$$menu-horizontal bg-base-200 $$rounded-box\">\n  <li><a>Item 1</a></li>\n  <li><a>Item 2</a></li>\n  <li><a>Item 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Button Component in HTML with DaisyUI\nDESCRIPTION: Creates a button component for user actions. Supports modifiers for color, style, behavior, size, and shape.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn {MODIFIER}\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind CSS and daisyUI Styles\nDESCRIPTION: This CSS snippet demonstrates how to import Tailwind CSS and add daisyUI as a plugin in the project's main CSS file. It replaces any existing styles with Tailwind CSS and daisyUI imports.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vite/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Tailwind CSS and React\nDESCRIPTION: This snippet shows how to add Tailwind CSS and React plugins to the Vite configuration file. It imports necessary modules and defines the configuration using defineConfig.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/react/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from \"vite\";\nimport tailwindcss from \"@tailwindcss/vite\";\nimport react from \"@vitejs/plugin-react\";\n\nexport default defineConfig({\n  plugins: [tailwindcss(), react()],\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Buttons with Loading Spinners in DaisyUI (HTML)\nDESCRIPTION: This snippet shows how to create buttons with loading spinners using DaisyUI. It includes a square button with only a spinner and a regular button with both a spinner and text, using 'btn', 'loading', and 'loading-spinner' classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_16\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn $$btn-square\">\n  <span class=\"$$loading $$loading-spinner\"></span>\n</button>\n\n<button class=\"$$btn\">\n  <span class=\"$$loading $$loading-spinner\"></span>\n  loading\n</button>\n```\n\n----------------------------------------\n\nTITLE: Opening a Responsive Modal Using DaisyUI showModal() in React (JSX)\nDESCRIPTION: This JSX snippet demonstrates how to integrate a DaisyUI-styled modal dialog in a React application by calling showModal() on the dialog element when a button is clicked. The modal uses responsive classes to move from bottom (on small screens) to center (on medium and larger screens). Closure is handled by form submission or pressing ESC. Dependencies include React, DaisyUI, and support for the dialog element. The modal is triggered via onClick and closes automatically on user interactions.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{/* Open the modal using document.getElementById('ID').showModal() method */}\\n<button className=\\\"$$btn\\\" onClick={()=>document.getElementById('my_modal_5').showModal()}>open modal</button>\\n<dialog id=\\\"my_modal_5\\\" className=\\\"$$modal $$modal-bottom sm:$$modal-middle\\\">\\n  <div className=\\\"$$modal-box\\\">\\n    <h3 className=\\\"font-bold text-lg\\\">Hello!</h3>\\n    <p className=\\\"py-4\\\">Press ESC key or click the button below to close</p>\\n    <div className=\\\"$$modal-action\\\">\\n      <form method=\\\"dialog\\\">\\n        {/* if there is a button in form, it will close the modal */}\\n        <button className=\\\"$$btn\\\">Close</button>\\n      </form>\\n    </div>\\n  </div>\\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI dependencies\nDESCRIPTION: This command installs the latest versions of Tailwind CSS, Tailwind CSS Vite plugin, and daisyUI using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/sveltekit/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Pricing Card Component with DaisyUI in HTML\nDESCRIPTION: This snippet shows how to implement a pricing card using DaisyUI classes. It includes a badge, pricing details, a list of features with icons, and a subscription button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card w-96 bg-base-100 shadow-sm\">\n  <div class=\"$$card-body\">\n    <span class=\"$$badge $$badge-xs $$badge-warning\">Most Popular</span>\n    <div class=\"flex justify-between\">\n      <h2 class=\"text-3xl font-bold\">Premium</h2>\n      <span class=\"text-xl\">$29/mo</span>\n    </div>\n    <ul class=\"mt-6 flex flex-col gap-2 text-xs\">\n      <li>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" /></svg>\n        <span>High-resolution image generation</span>\n      </li>\n      <li>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" /></svg>\n        <span>Customizable style templates</span>\n      </li>\n      <li>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" /></svg>\n        <span>Batch processing capabilities</span>\n      </li>\n      <li>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" /></svg>\n        <span>AI-driven image enhancements</span>\n      </li>\n      <li class=\"opacity-50\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4 me-2 inline-block text-base-content/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" /></svg>\n        <span class=\"line-through\">Seamless cloud integration</span>\n      </li>\n      <li class=\"opacity-50\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4 me-2 inline-block text-base-content/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" /></svg>\n        <span class=\"line-through\">Real-time collaboration tools</span>\n      </li>\n    </ul>\n    <div class=\"mt-6\">\n      <button class=\"$$btn $$btn-primary $$btn-block\">Subscribe</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Navbar with Dropdown using DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates a responsive navbar with a dropdown menu for mobile views and a horizontal menu for larger screens. It utilizes DaisyUI classes for styling and responsiveness.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"$$navbar-start\">\n    <div class=\"$$dropdown\">\n      <div tabindex=\"0\" role=\"button\" class=\"$$btn $$btn-ghost lg:hidden\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h8m-8 6h16\" /> </svg>\n      </div>\n      <ul\n        tabindex=\"0\"\n        class=\"$$menu $$menu-sm $$dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow\">\n        <li><a>Item 1</a></li>\n        <li>\n          <a>Parent</a>\n          <ul class=\"p-2\">\n            <li><a>Submenu 1</a></li>\n            <li><a>Submenu 2</a></li>\n          </ul>\n        </li>\n        <li><a>Item 3</a></li>\n      </ul>\n    </div>\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"$$navbar-center hidden lg:flex\">\n    <ul class=\"$$menu $$menu-horizontal px-1\">\n      <li><a>Item 1</a></li>\n      <li>\n        <details>\n          <summary>Parent</summary>\n          <ul class=\"p-2\">\n            <li><a>Submenu 1</a></li>\n            <li><a>Submenu 2</a></li>\n          </ul>\n        </details>\n      </li>\n      <li><a>Item 3</a></li>\n    </ul>\n  </div>\n  <div class=\"$$navbar-end\">\n    <a class=\"$$btn\">Button</a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Responsive Footer with DaisyUI in HTML\nDESCRIPTION: A responsive footer that's vertical by default but switches to horizontal for small screens and up. Contains three navigation sections with service, company, and legal links.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-neutral text-neutral-content p-10\">\n  <nav>\n    <h6 class=\"$$footer-title\">Services</h6>\n    <a class=\"$$link $$link-hover\">Branding</a>\n    <a class=\"$$link $$link-hover\">Design</a>\n    <a class=\"$$link $$link-hover\">Marketing</a>\n    <a class=\"$$link $$link-hover\">Advertisement</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Company</h6>\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Legal</h6>\n    <a class=\"$$link $$link-hover\">Terms of use</a>\n    <a class=\"$$link $$link-hover\">Privacy policy</a>\n    <a class=\"$$link $$link-hover\">Cookie policy</a>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Search Input with Icon Implementation in DaisyUI\nDESCRIPTION: A search input field with a magnifying glass icon using DaisyUI's input class. The component includes an SVG icon and a required search input field.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n      <path d=\"m21 21-4.3-4.3\"></path>\n    </g>\n  </svg>\n  <input type=\"search\" required placeholder=\"Search\" />\n</label>\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS for daisyUI\nDESCRIPTION: CSS configuration to import Tailwind CSS and enable daisyUI plugin in the application's CSS file\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/reactrouter/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Creating Footer with Logo and Social Icons using DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates how to create a footer component with a logo, company information, and social media icons using DaisyUI and Tailwind CSS classes. It includes SVG icons for Twitter, YouTube, and Facebook.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<footer class=\"$$footer $$sm:footer-horizontal bg-neutral text-neutral-content p-10\">\n  <aside>\n    <svg\n      width=\"50\"\n      height=\"50\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      class=\"fill-current\">\n      <path\n        d=\"M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z\"></path>\n    </svg>\n    <p>\n      ACME Industries Ltd.\n      <br />\n      Providing reliable tech since 1992\n    </p>\n  </aside>\n  <nav>\n    <h6 class=\"$$footer-title\">Social</h6>\n    <div class=\"grid grid-flow-col gap-4\">\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\n        </svg>\n      </a>\n    </div>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Installing Electron and CSS Libraries\nDESCRIPTION: Installs Electron along with Tailwind CSS and daisyUI using npm. These are the core dependencies required for building the Electron app with the specified styling framework.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm install electron tailwindcss@latest @tailwindcss/cli@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Setting a Single Default Theme in daisyUI PostCSS Configuration\nDESCRIPTION: Example configuring `dracula` as the sole available and default theme by setting `themes: dracula --default`. No other built-in themes will be included unless custom themes are added separately.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  themes: dracula --default;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Rendering a Basic daisyUI Button in HTML\nDESCRIPTION: This HTML example shows the base usage of a daisyUI button using the \"btn\" class, which gives it default styling as specified by daisyUI. It requires daisyUI and Tailwind CSS to be installed and configured in the project. The only major parameter is the class attribute, and the output is a single styled button element; customization is minimal but serves as a starting point for further enhancements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/customize/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Applying daisyUI Predefined Variants to Buttons in HTML\nDESCRIPTION: This HTML snippet demonstrates the use of daisyUI's additional variant classes (such as \"btn-primary\", \"btn-secondary\", \"btn-accent\", and \"btn-outline\") to create multiple styled button components. Dependencies include daisyUI and Tailwind CSS preconfigured in your build process. Each button uses a combination of classes to define its style and appearance; input parameters are the class names. The buttons render with distinct variant styles as defined by daisyUI, ideal for quick prototyping or theming with standard layouts.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/customize/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn btn-primary\">One</button>\n<button class=\"btn btn-secondary\">Two</button>\n<button class=\"btn btn-accent btn-outline\">Three</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Bottom-Aligned Dropdown in DaisyUI\nDESCRIPTION: Creates a dropdown menu that appears below the trigger button. This is the default dropdown behavior in DaisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-bottom\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click ⬇️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Badges with Icons using DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates how to create badges with different status indicators (info, success, warning, error) using DaisyUI classes. Each badge includes an SVG icon and text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-info\">\n  <svg class=\"size-[1em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m12,17v-5.5c0-.276-.224-.5-.5-.5h-1.5\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><circle cx=\"12\" cy=\"7.25\" r=\"1.25\" fill=\"currentColor\" stroke-width=\"2\"></circle></g></svg>\n  Info\n</div>\n<div class=\"$$badge $$badge-success\">\n  <svg class=\"size-[1em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><polyline points=\"7 13 10 16 17 8\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline></g></svg>\n  Success\n</div>\n<div class=\"$$badge $$badge-warning\">\n  <svg class=\"size-[1em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\"><g fill=\"currentColor\"><path d=\"M7.638,3.495L2.213,12.891c-.605,1.048,.151,2.359,1.362,2.359H14.425c1.211,0,1.967-1.31,1.362-2.359L10.362,3.495c-.605-1.048-2.119-1.048-2.724,0Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"></path><line x1=\"9\" y1=\"6.5\" x2=\"9\" y2=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"></line><path d=\"M9,13.569c-.552,0-1-.449-1-1s.448-1,1-1,1,.449,1,1-.448,1-1,1Z\" fill=\"currentColor\" data-stroke=\"none\" stroke=\"none\"></path></g></svg>\n  Warning\n</div>\n<div class=\"$$badge $$badge-error\">\n  <svg class=\"size-[1em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\"><rect x=\"1.972\" y=\"11\" width=\"20.056\" height=\"2\" transform=\"translate(-4.971 12) rotate(-45)\" fill=\"currentColor\" stroke-width=\"0\"></rect><path d=\"m12,23c-6.065,0-11-4.935-11-11S5.935,1,12,1s11,4.935,11,11-4.935,11-11,11Zm0-20C7.038,3,3,7.037,3,12s4.038,9,9,9,9-4.037,9-9S16.962,3,12,3Z\" stroke-width=\"0\" fill=\"currentColor\"></path></g></svg>\n  Error\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Dropdown with Popover API and Anchor Positioning in HTML\nDESCRIPTION: This code shows how to implement a dropdown using the new Popover API and CSS anchor positioning. It provides better layering and positioning control.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn\" popovertarget=\"popover-1\" style=\"anchor-name:--anchor-1\">\n  Button\n</button>\n<ul class=\"$$dropdown $$menu w-52 rounded-box bg-base-100 shadow-sm\"\n  popover id=\"popover-1\" style=\"position-anchor:--anchor-1\">\n  <li><a>Item 1</a></li>\n  <li><a>Item 2</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring DaisyUI Theme Settings\nDESCRIPTION: Shows how to enable and configure themes in daisyUI by adding theme settings to the plugin configuration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n@import \"tailwindcss\";\n- @plugin \"daisyui\";\n+ @plugin \"daisyui\" {\n+   themes: light --default, dark --prefersdark;\n+ }\n```\n\n----------------------------------------\n\nTITLE: Changing the Root Selector for daisyUI CSS Variables in PostCSS\nDESCRIPTION: Shows how to change the CSS selector where daisyUI global CSS variables are applied using the `root` property. This example scopes the variables to the `#my-app` element instead of the default `:root`, useful for shadow DOM or specific page sections.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  root: \"#my-app\";\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Creating a Carousel with Indicator Buttons using DaisyUI - HTML\nDESCRIPTION: This snippet demonstrates a responsive carousel with indicator buttons built with DaisyUI and Tailwind CSS in HTML. Each carousel item is wrapped with an anchor and assigned a unique id, while the set of styled buttons below link to each image, providing navigation via anchor links. Prerequisites include DaisyUI and Tailwind CSS setup; component structure relies on 'carousel', 'carousel-item', and 'btn' classes. Key parameters are the image sources, item ids, and button href attributes. Expected behavior is to scroll/snap to an image when its corresponding button is clicked; note that this uses browser anchor navigation rather than JavaScript-based controls.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel w-full\">\n  <div id=\"item1\" class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1625726411847-8cbb60cc71e6.webp\"\n      class=\"w-full\" />\n  </div>\n  <div id=\"item2\" class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1609621838510-5ad474b7d25d.webp\"\n      class=\"w-full\" />\n  </div>\n  <div id=\"item3\" class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1414694762283-acccc27bca85.webp\"\n      class=\"w-full\" />\n  </div>\n  <div id=\"item4\" class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1665553365602-b2fb8e5d1707.webp\"\n      class=\"w-full\" />\n  </div>\n</div>\n<div class=\"flex w-full justify-center gap-2 py-2\">\n  <a href=\"#item1\" class=\"$$btn $$btn-xs\">1</a>\n  <a href=\"#item2\" class=\"$$btn $$btn-xs\">2</a>\n  <a href=\"#item3\" class=\"$$btn $$btn-xs\">3</a>\n  <a href=\"#item4\" class=\"$$btn $$btn-xs\">4</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal with HTML Dialog Element in DaisyUI\nDESCRIPTION: This snippet shows how to create a modal dialog using DaisyUI with the HTML dialog element. It includes a button to open the modal and a form to close it.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_44\n\nLANGUAGE: html\nCODE:\n```\n<button onclick=\"my_modal.showModal()\">Open modal</button>\n<dialog id=\"my_modal\" class=\"modal\">\n  <div class=\"modal-box\">{CONTENT}</div>\n  <form method=\"dialog\" class=\"modal-backdrop\"><button>close</button></form>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeline with Icons and Text in DaisyUI\nDESCRIPTION: A timeline implementation showing Apple product history with dates, checkmark icons, and product names. Uses DaisyUI's timeline classes for layout with start, middle, and end content positioning. Includes connector lines between events using hr tags.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline\">\n  <li>\n    <div class=\"$$timeline-start\">1984</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">1998</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2001</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2007</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2015</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Hero with Overlay Image in HTML using DaisyUI\nDESCRIPTION: This snippet shows how to create a hero component with a background image and overlay using DaisyUI classes. It includes a semi-transparent overlay and centered content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/hero/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div\n  class=\"$$hero min-h-screen\"\n  style=\"background-image: url(https://img.daisyui.com/images/stock/photo-1507358522600-9f71e620c44e.webp);\"\n>\n  <div class=\"$$hero-overlay\"></div>\n  <div class=\"$$hero-content text-neutral-content text-center\">\n    <div class=\"max-w-md\">\n      <h1 class=\"mb-5 text-5xl font-bold\">Hello there</h1>\n      <p class=\"mb-5\">\n        Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem\n        quasi. In deleniti eaque aut repudiandae et a id nisi.\n      </p>\n      <button class=\"$$btn $$btn-primary\">Get Started</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Buttons with Icons in DaisyUI (HTML)\nDESCRIPTION: This snippet shows how to create buttons with icons using DaisyUI. The buttons include SVG icons positioned either before or after the text, using the 'btn' class for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\" stroke=\"currentColor\" class=\"size-[1.2em]\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\" /></svg>\n  Like\n</button>\n<button class=\"$$btn\">\n  Like\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\" stroke=\"currentColor\" class=\"size-[1.2em]\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\" /></svg>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Nested File Tree Menu with DaisyUI\nDESCRIPTION: A hierarchical file tree menu implementation using DaisyUI menu classes and SVG icons. Features nested folders with expandable details elements and file listings with associated icons. Uses custom styling classes for sizing and appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_16\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"$$menu $$menu-xs bg-base-200 rounded-box max-w-xs w-full\">\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        class=\"h-4 w-4\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n      </svg>\n      resume.pdf\n    </a>\n  </li>\n  <li>\n    <details open>\n      <summary>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"currentColor\"\n          class=\"h-4 w-4\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z\" />\n        </svg>\n        My Files\n      </summary>\n      <ul>\n        <li>\n          <a>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"currentColor\"\n              class=\"h-4 w-4\">\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n            </svg>\n            Project-final.psd\n          </a>\n        </li>\n        <li>\n          <a>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"currentColor\"\n              class=\"h-4 w-4\">\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n            </svg>\n            Project-final-2.psd\n          </a>\n        </li>\n        <li>\n          <details open>\n            <summary>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                class=\"h-4 w-4\">\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z\" />\n              </svg>\n              Images\n            </summary>\n            <ul>\n              <li>\n                <a>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke-width=\"1.5\"\n                    stroke=\"currentColor\"\n                    class=\"h-4 w-4\">\n                    <path\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n\n```\n\n----------------------------------------\n\nTITLE: Button Sizes in DaisyUI\nDESCRIPTION: Demonstrates different button size options from extra small to extra large using DaisyUI's size modifiers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-xs\">Xsmall</button>\n<button class=\"$$btn $$btn-sm\">Small</button>\n<button class=\"$$btn\">Medium</button>\n<button class=\"$$btn $$btn-lg\">Large</button>\n<button class=\"$$btn $$btn-xl\">Xlarge</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Centered Footer with Navigation Links and Social Icons using DaisyUI\nDESCRIPTION: This snippet shows how to create a centered footer with navigation links, social media icons, and copyright information using DaisyUI and Tailwind CSS classes. It includes a set of navigation links, clickable social media icons, and a copyright notice.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer $$footer-horizontal $$footer-center bg-base-200 text-base-content rounded p-10\">\n  <nav class=\"grid grid-flow-col gap-4\">\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <div class=\"grid grid-flow-col gap-4\">\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\n        </svg>\n      </a>\n    </div>\n  </nav>\n  <aside>\n    <p>Copyright © {new Date().getFullYear()} - All right reserved by ACME Industries Ltd</p>\n  </aside>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Menu with Responsive Icons and Badges in HTML\nDESCRIPTION: This snippet demonstrates a menu with SVG icons and dynamic badges that adjusts layout based on screen size. It requires Tailwind CSS and SVG for icons and badges representation. Key parameters include badge classes for size and type, enabling responsive behavior on different devices.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 lg:menu-horizontal rounded-box\">\n  <li>\n    <button>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" /></svg>\n      Inbox\n      <span class=\"badge badge-sm\">99+</span>\n    </button>\n  </li>\n  <li>\n    <button>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n      Updates\n      <span class=\"badge badge-xs badge-warning\">NEW</span>\n    </button>\n  </li>\n  <li>\n    <button>\n      Stats\n      <span class=\"badge badge-xs badge-info\"></span>\n    </button>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Setting up Elysia Server in TypeScript\nDESCRIPTION: This snippet sets up a server using the Elysia framework, integrates static file serving, and watches for CSS changes to rebuild using Tailwind CSS CLI. Key dependencies are Elysia's static plugin, `child_process` for executing commands, and `fs` for file system operations. The server listens on port 3000 and provides real-time CSS build on file changes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { Elysia } from \"elysia\";\nimport { staticPlugin } from '@elysiajs/static'\nimport { exec } from 'child_process'\nimport { watch } from 'fs'\n\nconst buildCSS = () =>\n  new Promise(resolve =>\n    exec('tailwindcss -i ./src/app.css -o ./public/output.css',\n      (_error, _stdout, stderr) => {\n        console.log(stderr);\n        resolve(null);\n      })\n  );\n\nawait buildCSS();\n\nconst watcher = watch('./public', { recursive: true },\n  async () => {\n    await buildCSS();\n  }\n);\n\nprocess.on('SIGINT', () => {\n  watcher.close();\n  process.exit(0);\n});\n\nconst app = new Elysia()\n\t.use(\n\t\tstaticPlugin({\n\t\t\tassets: \"public\",\n      prefix: \"\",\n\t\t}),\n\t)\n\t.listen(3000, ({ hostname, port }) => {\n\t\tconsole.log(`Server started http://${hostname}:${port}`);\n\t});\n```\n\n----------------------------------------\n\nTITLE: Rendering a Timeline UI with DaisyUI Classes in HTML\nDESCRIPTION: This snippet demonstrates building a vertical timeline component using DaisyUI utility classes and standard HTML. Each list item ('li') represents an event on the timeline, with a 'timeline-middle' div containing an SVG checkmark icon, a labeled timeline box, and horizontal rules ('hr') indicating sequence. Dependencies: DaisyUI (a Tailwind CSS plugin); inclusion of DaisyUI CSS styles is required for these classes. The key parameters are the event labels inside 'timeline-box' divs and SVG icons for visual status. Input is static content inside the list; the output is a styled timeline rendered in the browser. Limitations: This component is presentational and not interactive by default, and class prefixes like '$$' must be replaced with the correct DaisyUI classes in a real use case.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline\">\n  <li>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing Angular CLI Globally using Shell\nDESCRIPTION: Installs the latest version of the Angular Command Line Interface (CLI) globally using npm. This makes the `ng` command available system-wide for creating and managing Angular projects. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/angular/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install -g @angular/cli@latest\n```\n\n----------------------------------------\n\nTITLE: Implementing Hover-Triggered Dropdown in DaisyUI\nDESCRIPTION: Creates a dropdown menu that opens on hover instead of click. Uses the dropdown-hover modifier class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-hover\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Hover</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Snap-to-Start Carousel with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a horizontal carousel with snap-to-start functionality using DaisyUI classes. It includes multiple carousel items, each containing an image.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel rounded-box\">\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"\n      alt=\"Burger\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"\n      alt=\"Burger\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"\n      alt=\"Burger\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"\n      alt=\"Burger\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"\n      alt=\"Burger\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"\n      alt=\"Burger\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"\n      alt=\"Burger\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Two-Part Footer with DaisyUI in HTML\nDESCRIPTION: This code snippet demonstrates how to create a responsive two-part footer using DaisyUI classes. It includes sections for services, company information, legal links, a logo, and social media icons. The footer is designed to be responsive and uses utility classes for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-base-200 text-base-content p-10\">\n  <nav>\n    <h6 class=\"$$footer-title\">Services</h6>\n    <a class=\"$$link $$link-hover\">Branding</a>\n    <a class=\"$$link $$link-hover\">Design</a>\n    <a class=\"$$link $$link-hover\">Marketing</a>\n    <a class=\"$$link $$link-hover\">Advertisement</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Company</h6>\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Legal</h6>\n    <a class=\"$$link $$link-hover\">Terms of use</a>\n    <a class=\"$$link $$link-hover\">Privacy policy</a>\n    <a class=\"$$link $$link-hover\">Cookie policy</a>\n  </nav>\n</footer>\n<footer class=\"$$footer bg-base-200 text-base-content border-base-300 border-t px-10 py-4\">\n  <aside class=\"grid-flow-col items-center\">\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      class=\"fill-current\">\n      <path\n        d=\"M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z\"></path>\n    </svg>\n    <p>\n      ACME Industries Ltd.\n      <br />\n      Providing reliable tech since 1992\n    </p>\n  </aside>\n  <nav class=\"md:place-self-center md:justify-self-end\">\n    <div class=\"grid grid-flow-col gap-4\">\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\n        </svg>\n      </a>\n    </div>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI 5 via CDN in HTML\nDESCRIPTION: This snippet shows how to include daisyUI 5 and Tailwind CSS 4 using CDN links in an HTML file. It's recommended to install daisyUI as a dependency, but CDN can be used if necessary.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/daisyui@5\" rel=\"stylesheet\" type=\"text/css\" />\n<script src=\"https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4\"></script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Drawer with Persistent Sidebar in HTML\nDESCRIPTION: HTML code for a responsive drawer that is always visible on large screens and can be toggled on small screens. Uses the lg:drawer-open class for responsiveness.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/drawer/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"drawer lg:drawer-open\">\n  <input id=\"my-drawer-2\" type=\"checkbox\" class=\"drawer-toggle\" />\n  <div class=\"drawer-content flex flex-col items-center justify-center\">\n    <!-- Page content here -->\n    <label for=\"my-drawer-2\" class=\"btn btn-primary drawer-button lg:hidden\">\n      Open drawer\n    </label>\n  </div>\n  <div class=\"drawer-side\">\n    <label for=\"my-drawer-2\" aria-label=\"close sidebar\" class=\"drawer-overlay\"></label>\n    <ul class=\"menu bg-base-200 text-base-content min-h-full w-80 p-4\">\n      <!-- Sidebar content here -->\n      <li><a>Sidebar Item 1</a></li>\n      <li><a>Sidebar Item 2</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Grouping Elements with DaisyUI Join - HTML\nDESCRIPTION: This snippet demonstrates how to group buttons together using DaisyUI's join and join-item classes in HTML. It applies border radius automatically to the first and last item in the group, producing a visually unified button group. To use, add the join class to the parent div and join-item to each child element; requires DaisyUI and its dependencies configured in the project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/join/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"$$join\\\">\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Size and Thickness of Radial Progress in HTML\nDESCRIPTION: Explains how to custom configure the size and thickness of a radial progress bar in HTML using CSS variables '--size' and '--thickness'. Useful for applications requiring precise layout control.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$radial-progress\" style=\"--$$value:70; --$$size:12rem; --$$thickness: 2px;\" aria-valuenow=\"70\" role=\"progressbar\">70%</div>\n<div class=\"$$radial-progress\" style=\"--$$value:70; --$$size:12rem; --$$thickness: 2rem;\" aria-valuenow=\"70\" role=\"progressbar\">70%</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Placeholder Avatars with DaisyUI in HTML\nDESCRIPTION: Shows how to implement placeholder avatars with different sizes (w-24 to w-8), custom text content, and status indicators. Uses DaisyUI's avatar classes combined with utility classes for background, text, and border styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar $$avatar-placeholder\">\n  <div class=\"bg-neutral text-neutral-content w-24 rounded-full\">\n    <span class=\"text-3xl\">D</span>\n  </div>\n</div>\n<div class=\"$$avatar $$avatar-online $$avatar-placeholder\">\n  <div class=\"bg-neutral text-neutral-content w-16 rounded-full\">\n    <span class=\"text-xl\">AI</span>\n  </div>\n</div>\n<div class=\"$$avatar $$avatar-placeholder\">\n  <div class=\"bg-neutral text-neutral-content w-12 rounded-full\">\n    <span>SY</span>\n  </div>\n</div>\n<div class=\"$$avatar $$avatar-placeholder\">\n  <div class=\"bg-neutral text-neutral-content w-8 rounded-full\">\n    <span class=\"text-xs\">UI</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Building CSS with Tailwind CLI\nDESCRIPTION: Commands to build the final CSS file using Tailwind CSS executable, with optional watch mode for development.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/standalone/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n./tailwindcss -i input.css -o output.css --watch\n# For Windows\ntailwindcss.exe -i input.css -o output.css --watch\n```\n\n----------------------------------------\n\nTITLE: Implementing a Card with Image Overlay in HTML using DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a card with an image overlay effect using the 'image-full' class from DaisyUI. It includes an image, title, description, and a call-to-action button overlaid on the image.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card bg-base-100 $$image-full w-96 shadow-sm\">\n  <figure>\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"\n      alt=\"Shoes\" />\n  </figure>\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card Title</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Colored Theme Toggle\nDESCRIPTION: Theme toggle with custom background and border colors for both states\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" value=\"synthwave\" class=\"$$toggle $$theme-controller col-span-2 col-start-1 row-start-1 border-sky-400 bg-amber-300 [--tglbg:var(--color-sky-500)] checked:border-blue-800 checked:bg-blue-300 checked:[--tglbg:var(--color-blue-900)]\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Timeline with Icons and Text in DaisyUI\nDESCRIPTION: This HTML snippet creates a vertical timeline showing Apple product history with years on the left, icons in the middle, and product names on the right. It uses DaisyUI's timeline classes for styling and structure, and includes SVG checkmark icons for each timeline entry.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-start\">1984</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">1998</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2001</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2007</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2015</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Card Size Variations in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create cards of different sizes (XS, SM, MD, LG, XL) using DaisyUI classes. Each card includes a title, description, and a call-to-action button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card w-96 bg-base-100 $$card-xs shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Xsmall Card</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"justify-end $$card-actions\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n\n<div class=\"$$card w-96 bg-base-100 $$card-sm shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Small Card</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"justify-end $$card-actions\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n\n<div class=\"$$card w-96 bg-base-100 $$card-md shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Medium Card</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"justify-end $$card-actions\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n\n<div class=\"$$card w-96 bg-base-100 $$card-lg shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Large Card</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"justify-end $$card-actions\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n\n<div class=\"$$card w-96 bg-base-100 $$card-xl shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Xlarge Card</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"justify-end $$card-actions\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Closing DaisyUI Modal by Clicking Outside Using Hidden Checkbox (HTML)\nDESCRIPTION: This HTML snippet enhances the checkbox-controlled modal by allowing the modal to close when clicking outside it. The modal uses a backdrop label bound to the same hidden checkbox, so clicking the backdrop triggers modal closure. DaisyUI classes manage styling and roles, ensuring accessibility. Prerequisites are DaisyUI for styling, and correct placement before </body> tag for backdrop functionality. The input is any click event on the backdrop; output is modal closure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<!-- The button to open modal -->\\n<label for=\\\"my_modal_7\\\" class=\\\"$$btn\\\">open modal</label>\\n\\n<!-- Put this part before </body> tag -->\\n<input type=\\\"checkbox\\\" id=\\\"my_modal_7\\\" class=\\\"$$modal-toggle\\\" />\\n<div class=\\\"$$modal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"$$modal-box\\\">\\n    <h3 class=\\\"text-lg font-bold\\\">Hello!</h3>\\n    <p class=\\\"py-4\\\">This modal works with a hidden checkbox!</p>\\n  </div>\\n  <label class=\\\"$$modal-backdrop\\\" for=\\\"my_modal_7\\\">Close</label>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: React Day Picker Implementation\nDESCRIPTION: Complete React Day Picker implementation with state management and popover functionality using daisyUI styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useState } from \"react\";\nimport { DayPicker } from \"react-day-picker\";\n\nexport default function App() {\n  const [date, setDate] = useState<Date | undefined>();\n  return (\n    <>\n      <button popoverTarget=\"rdp-popover\" className=\"$$input $$input-border\" style={{ anchorName: \"--rdp\" } as React.CSSProperties}>\n        {date ? date.toLocaleDateString() : \"Pick a date\"}\n      </button>\n      <div popover=\"auto\" id=\"rdp-popover\" className=\"$$dropdown\" style={{ positionAnchor: \"--rdp\" } as React.CSSProperties}>\n        <DayPicker className=\"$$react-day-picker\" mode=\"single\" selected={date} onSelect={setDate} />\n      </div>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Phone Mockup with DaisyUI\nDESCRIPTION: This snippet shows how to create an iPhone mockup using DaisyUI. It includes camera and display components to create a realistic phone interface.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_42\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mockup-phone\">\n  <div class=\"mockup-phone-camera\"></div>\n  <div class=\"mockup-phone-display\">{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal Dialog with Close Button at Corner in HTML\nDESCRIPTION: Creates a modal dialog with a close button (X) positioned at the top-right corner. The modal can be closed using the X button or the ESC key.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn\" onclick=\"my_modal_3.showModal()\">open modal</button>\n<dialog id=\"my_modal_3\" class=\"$$modal\">\n  <div class=\"$$modal-box\">\n    <form method=\"dialog\">\n      <button class=\"$$btn $$btn-sm $$btn-circle $$btn-ghost absolute right-2 top-2\">✕</button>\n    </form>\n    <h3 class=\"text-lg font-bold\">Hello!</h3>\n    <p class=\"py-4\">Press ESC key or click on ✕ button to close</p>\n  </div>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Creating Menu with Icons in HTML\nDESCRIPTION: This code snippet creates a vertical menu with items that include icons using SVG elements. It requires Tailwind CSS for styling and classes for layouts and colors. The menu items are buttons embedded with SVG icons for graphic representation. Inputs are buttons, and outputs are styled menu items with icons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li>\n    <button>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" /></svg>\n      Item 2\n    </button>\n  </li>\n  <li>\n    <button>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n      Item 1\n    </button>\n  </li>\n  <li>\n    <button>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" /></svg>\n      Item 3\n    </button>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Hero with Login Form in HTML using DaisyUI\nDESCRIPTION: This code snippet illustrates how to create a hero component with a login form using DaisyUI classes. It includes a title, description, and a card with input fields for email and password.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/hero/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$hero bg-base-200 min-h-screen\">\n  <div class=\"$$hero-content flex-col lg:flex-row-reverse\">\n    <div class=\"text-center lg:text-left\">\n      <h1 class=\"text-5xl font-bold\">Login now!</h1>\n      <p class=\"py-6\">\n        Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem\n        quasi. In deleniti eaque aut repudiandae et a id nisi.\n      </p>\n    </div>\n    <div class=\"$$card bg-base-100 w-full max-w-sm shrink-0 shadow-2xl\">\n      <div class=\"$$card-body\">\n        <fieldset class=\"$$fieldset\">\n          <label class=\"$$label\">Email</label>\n          <input type=\"email\" class=\"$$input\" placeholder=\"Email\" />\n          <label class=\"$$label\">Password</label>\n          <input type=\"password\" class=\"$$input\" placeholder=\"Password\" />\n          <div><a class=\"$$link $$link-hover\">Forgot password?</a></div>\n          <button class=\"$$btn $$btn-neutral mt-4\">Login</button>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind Build Script to package.json - JSON\nDESCRIPTION: This JSON snippet defines a custom script 'build:css' in package.json, which invokes the Tailwind CLI to compile CSS. Requires: @tailwindcss/cli, Tailwind CSS, and daisyUI as dependencies. Input CSS is 'app.css' and output is generated as 'public/output.css'. This builds all required styles for the project frontend.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/htmx/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build:css\": \"npx @tailwindcss/cli -i app.css -o public/output.css\"\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Designing a Custom Color Card in DaisyUI HTML\nDESCRIPTION: This example shows how to apply custom colors to a card component using DaisyUI in HTML. It demonstrates changing the background and text colors while maintaining card structure and includes an action button. No additional setup is necessary, and it produces a card with distinct color contrast.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card bg-primary text-primary-content w-96\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card title!</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite with Tailwind CSS\nDESCRIPTION: Configuration for Vite to enable Tailwind CSS and Vike plugins in the project setup.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vike/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport tailwindcss from \"@tailwindcss/vite\";\nimport vike from \"vike/plugin\";\nimport { defineConfig } from \"vite\";\n\nexport default defineConfig({\n  plugins: [tailwindcss(), vike()],\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Accordion with Radio Inputs in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic accordion using radio inputs and DaisyUI classes. It includes three collapsible sections with questions and answers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/accordion/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$collapse bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-1\" checked=\"checked\" />\n  <div class=\"$$collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"$$collapse-content text-sm\">Click the \"Sign Up\" button in the top right corner and follow the registration process.</div>\n</div>\n<div class=\"$$collapse bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-1\" />\n  <div class=\"$$collapse-title font-semibold\">I forgot my password. What should I do?</div>\n  <div class=\"$$collapse-content text-sm\">Click on \"Forgot Password\" on the login page and follow the instructions sent to your email.</div>\n</div>\n<div class=\"$$collapse bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-1\" />\n  <div class=\"$$collapse-title font-semibold\">How do I update my profile information?</div>\n  <div class=\"$$collapse-content text-sm\">Go to \"My Account\" settings and select \"Edit Profile\" to make changes.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding an Image to the Side of a Card in DaisyUI HTML\nDESCRIPTION: This example depicts how to include an image on the side of a card component using DaisyUI and HTML. The card features both visual and textual content, and a primary action button. This layout is good for promoting content like movies or events, without needing additional frameworks.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card $$card-side bg-base-100 shadow-sm\">\n  <figure>\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1635805737707-575885ab0820.webp\"\n      alt=\"Movie\" />\n  </figure>\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">New movie is released!</h2>\n    <p>Click the button to watch on Jetflix app.</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Watch</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Info Color Alert in HTML with DaisyUI\nDESCRIPTION: This code shows how to implement an info-colored alert using DaisyUI classes. It includes an SVG icon and informational text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-info\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"h-6 w-6 shrink-0 stroke-current\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n  </svg>\n  <span>New software update available.</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Modifying a Button with daisyUI Utility Classes\nDESCRIPTION: This example shows how to modify a daisyUI button using additional daisyUI utility classes, specifically applying the 'btn-primary' class for color styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/use/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn btn-primary\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Loading Ball Animation in HTML with DaisyUI\nDESCRIPTION: This code demonstrates how to implement loading ball animations of different sizes using DaisyUI classes. It includes examples for extra small, small, medium, large, and extra large ball animations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-ball $$loading-xs\"></span>\n<span class=\"$$loading $$loading-ball $$loading-sm\"></span>\n<span class=\"$$loading $$loading-ball $$loading-md\"></span>\n<span class=\"$$loading $$loading-ball $$loading-lg\"></span>\n<span class=\"$$loading $$loading-ball $$loading-xl\"></span>\n```\n\n----------------------------------------\n\nTITLE: Creating a Hamburger Button Swap in HTML with DaisyUI\nDESCRIPTION: This example demonstrates how to implement a hamburger button that swaps between menu and close icons. It combines the Swap component with a button style and rotate effect.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/swap/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$btn $$btn-circle $$swap $$swap-rotate\">\n  <!-- this hidden checkbox controls the state -->\n  <input type=\"checkbox\" />\n\n  <!-- hamburger icon -->\n  <svg\n    class=\"$$swap-off fill-current\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"32\"\n    height=\"32\"\n    viewBox=\"0 0 512 512\">\n    <path d=\"M64,384H448V341.33H64Zm0-106.67H448V234.67H64ZM64,128v42.67H448V128Z\" />\n  </svg>\n\n  <!-- close icon -->\n  <svg\n    class=\"$$swap-on fill-current\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"32\"\n    height=\"32\"\n    viewBox=\"0 0 512 512\">\n    <polygon\n      points=\"400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49\" />\n  </svg>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Centered Full-Bleed Carousel using DaisyUI - HTML\nDESCRIPTION: This snippet implements a horizontally centered full-bleed carousel using DaisyUI and Tailwind CSS classes in HTML. It showcases multiple images inside a carousel that utilizes the 'carousel' and 'carousel-center' classes for layout, as well as utility classes like 'max-w-md', 'p-4', and 'rounded-box' for styling. Dependencies include Tailwind CSS with DaisyUI plugin configured; the images are statically sourced via URLs. There are no interactive controls in this example, making it ideal as a simple image showcase component. Expected input is a sequence of <img> tags within carousel-item containers; the component displays them in a horizontally scrollable format.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel $$carousel-center bg-neutral rounded-box max-w-md space-x-4 p-4\">\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"\n      class=\"rounded-box\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"\n      class=\"rounded-box\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"\n      class=\"rounded-box\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"\n      class=\"rounded-box\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"\n      class=\"rounded-box\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"\n      class=\"rounded-box\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"\n      class=\"rounded-box\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Integrating Action Buttons on Top of Card with DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates placing action buttons at the top of a card component using DaisyUI and HTML. The card is designed for dismissing actions and includes an SVG icon, showcasing responsiveness with DaisyUI's utility classes. It offers an alternative card interaction approach.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card bg-base-100 w-96 shadow-sm\">\n  <div class=\"$$card-body\">\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-square $$btn-sm\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n    <p>We are using cookies for no reason.</p>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Navbar with Title in HTML using daisyUI\nDESCRIPTION: This snippet shows how to create a simple navbar with only a title using daisyUI classes. It uses the 'navbar' class for the container and 'btn btn-ghost' for the title button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Opening a Responsive Modal Using DaisyUI showModal() in HTML\nDESCRIPTION: This snippet demonstrates how to open a modal dialog in vanilla HTML by invoking the showModal() method through an inline onclick event. Utilizing DaisyUI classes, the modal adapts its position responsively: at the bottom on small screens and centered on medium and larger screens. The modal can be closed by pressing ESC or clicking a designated button. Dependencies include DaisyUI for styling and browser support for the <dialog> element. Inputs include user interaction with the trigger button; outputs are the modal opening and closing accordingly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<!-- Open the modal using ID.showModal() method -->\\n<button class=\\\"$$btn\\\" onclick=\\\"my_modal_5.showModal()\\\">open modal</button>\\n<dialog id=\\\"my_modal_5\\\" class=\\\"$$modal $$modal-bottom sm:$$modal-middle\\\">\\n  <div class=\\\"$$modal-box\\\">\\n    <h3 class=\\\"text-lg font-bold\\\">Hello!</h3>\\n    <p class=\\\"py-4\\\">Press ESC key or click the button below to close</p>\\n    <div class=\\\"$$modal-action\\\">\\n      <form method=\\\"dialog\\\">\\n        <!-- if there is a button in form, it will close the modal -->\\n        <button class=\\\"$$btn\\\">Close</button>\\n      </form>\\n    </div>\\n  </div>\\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Aligning Dropdown to Start of Button in HTML\nDESCRIPTION: This snippet shows how to align a dropdown menu to the start of the button horizontally using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-start\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click ⬇️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Color Alert in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to create an error-colored alert using DaisyUI classes. It includes an SVG icon and an error message.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-error\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 shrink-0 stroke-current\" fill=\"none\" viewBox=\"0 0 24 24\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n  </svg>\n  <span>Error! Task failed successfully.</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Horizontal Icon-only Menu with Tooltips in DaisyUI\nDESCRIPTION: This code implements a horizontal menu with icon-only navigation items that display tooltips on hover. It utilizes the menu-horizontal class for the layout and includes SVG icons with tooltips for improved accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu $$menu-horizontal bg-base-200 $$rounded-box mt-6\">\n  <li>\n    <a class=\"$$tooltip\" data-tip=\"Home\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a class=\"$$tooltip\" data-tip=\"Details\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a class=\"$$tooltip\" data-tip=\"Stats\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n      </svg>\n    </a>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating a Centered Card with Padded Image in HTML using DaisyUI\nDESCRIPTION: This snippet shows how to create a card with centered content and a padded image using DaisyUI classes. It includes a figure element with padding, centered card body content, and a call-to-action button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card bg-base-100 w-96 shadow-sm\">\n  <figure class=\"px-10 pt-10\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"\n      alt=\"Shoes\"\n      class=\"rounded-xl\" />\n  </figure>\n  <div class=\"$$card-body items-center text-center\">\n    <h2 class=\"$$card-title\">Card Title</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dropdown with Details and Summary in HTML\nDESCRIPTION: This snippet demonstrates how to create a dropdown menu using the native HTML details and summary elements. It includes DaisyUI classes for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<details class=\"$$dropdown\">\n  <summary class=\"$$btn m-1\">open or close</summary>\n  <ul class=\"$$menu $$dropdown-content bg-base-100 $$rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</details>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Collapsible Menu with Submenu in HTML using DaisyUI\nDESCRIPTION: This code example demonstrates a responsive collapsible menu with nested submenus using DaisyUI classes. It features three main items, with the second item containing expandable submenus.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_21\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu lg:menu-horizontal bg-base-200 rounded-box lg:mb-64\">\n  <li><a>Item 1</a></li>\n  <li>\n    <details open>\n      <summary>Parent item</summary>\n      <ul>\n        <li><a>Submenu 1</a></li>\n        <li><a>Submenu 2</a></li>\n        <li>\n          <details open>\n            <summary>Parent</summary>\n            <ul>\n              <li><a>item 1</a></li>\n              <li><a>item 2</a></li>\n            </ul>\n          </details>\n        </li>\n      </ul>\n    </details>\n  </li>\n  <li><a>Item 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dividers with Different Horizontal Positions in DaisyUI\nDESCRIPTION: Examples of horizontal dividers with different text positioning options: start, default (center), and end positions. This demonstrates how to control the alignment of text within horizontal dividers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full\">\n  <div class=\"$$divider $$divider-horizontal $$divider-start\">Start</div>\n  <div class=\"$$divider $$divider-horizontal\">Default</div>\n  <div class=\"$$divider $$divider-horizontal $$divider-end\">End</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Scrollable Table with Pinned Headers in DaisyUI\nDESCRIPTION: Creates a scrollable table with alphabetically organized superhero names using DaisyUI's table component. The implementation uses table-pin-rows class for sticky headers and includes overflow handling for responsive design. The table has a fixed height of 96 units with horizontal scroll capability.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"h-96 overflow-x-auto\">\n  <table class=\"$$table $$table-pin-rows bg-base-200\">\n    <thead>\n      <tr>\n        <th>A</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Ant-Man</td></tr>\n      <tr><td>Aquaman</td></tr>\n      <tr><td>Asterix</td></tr>\n      <tr><td>The Atom</td></tr>\n      <tr><td>The Avengers</td></tr>\n    </tbody>\n    <!-- Additional sections removed for brevity -->\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Button Color Variants\nDESCRIPTION: Demonstrates all available color variants for buttons including neutral, primary, secondary, accent, and state colors.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-neutral\">Neutral</button>\n<button class=\"$$btn $$btn-primary\">Primary</button>\n<button class=\"$$btn $$btn-secondary\">Secondary</button>\n<button class=\"$$btn $$btn-accent\">Accent</button>\n<button class=\"$$btn $$btn-info\">Info</button>\n<button class=\"$$btn $$btn-success\">Success</button>\n<button class=\"$$btn $$btn-warning\">Warning</button>\n<button class=\"$$btn $$btn-error\">Error</button>\n```\n\n----------------------------------------\n\nTITLE: Pikaday Integration with Svelte\nDESCRIPTION: Svelte component implementation of Pikaday calendar with cleanup handling and daisyUI styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Pikaday from \"pikaday\";\n  let myDatepicker;\n  $effect(() => {\n    if (myDatepicker) {\n      const picker = new Pikaday({\n        field: myDatepicker\n      });\n      return () => picker.destroy();\n    }\n  });\n</script>\n\n<input type=\"text\" class=\"$$input $$pika-single\"  bind:this={myDatepicker} value=\"Pick a day\" />\n```\n\n----------------------------------------\n\nTITLE: Breadcrumbs with Icons Implementation\nDESCRIPTION: Enhanced breadcrumb navigation with SVG icons for each navigation item. Includes folder icons for directory levels and a document icon for the current page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/breadcrumbs/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$breadcrumbs text-sm\">\n  <ul>\n    <li>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-4 w-4 stroke-current\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path>\n        </svg>\n        Home\n      </a>\n    </li>\n    <li>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-4 w-4 stroke-current\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path>\n        </svg>\n        Documents\n      </a>\n    </li>\n    <li>\n      <span class=\"inline-flex items-center gap-2\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-4 w-4 stroke-current\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n        </svg>\n        Add Document\n      </span>\n    </li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Footer with DaisyUI and Social Icons\nDESCRIPTION: This code creates a footer component using DaisyUI classes that displays a logo, dynamic copyright year, and social media links. The footer adapts to different screen sizes with a horizontal layout on small screens and above. It includes SVG icons for Twitter, YouTube, and Facebook.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-neutral text-neutral-content items-center p-4\">\n  <aside class=\"grid-flow-col items-center\">\n    <svg\n      width=\"36\"\n      height=\"36\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      class=\"fill-current\">\n      <path\n        d=\"M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z\"></path>\n    </svg>\n    <p>Copyright © {new Date().getFullYear()} - All right reserved</p>\n  </aside>\n  <nav class=\"grid-flow-col gap-4 md:place-self-center md:justify-self-end\">\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        class=\"fill-current\">\n        <path\n          d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path>\n      </svg>\n    </a>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        class=\"fill-current\">\n        <path\n          d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\n      </svg>\n    </a>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        class=\"fill-current\">\n        <path\n          d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\n      </svg>\n    </a>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Rendering the Home Page View in Django - Python\nDESCRIPTION: This Python snippet defines a simple Django view function named 'home', which renders the 'index.html' template previously created. It is essential for serving the homepage where Tailwind/daisyUI classes are used. No extra dependencies beyond Django are required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nfrom django.shortcuts import render\n\ndef home(request):\n    return render(request, 'index.html')\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Spinner Animation in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create loading spinner animations of various sizes using DaisyUI classes. It includes examples for extra small, small, medium, large, and extra large spinners.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-spinner $$loading-xs\"></span>\n<span class=\"$$loading $$loading-spinner $$loading-sm\"></span>\n<span class=\"$$loading $$loading-spinner $$loading-md\"></span>\n<span class=\"$$loading $$loading-spinner $$loading-lg\"></span>\n<span class=\"$$loading $$loading-spinner $$loading-xl\"></span>\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS for Mary UI\nDESCRIPTION: JavaScript configuration for Tailwind CSS to work with Mary UI, including content paths and daisyUI plugin setup.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nexport default {\n  content: [\n    // You will probably also need those lines\n    \"./resources/**/**/*.{js,blade.php}\",\n    \"./app/View/Components/**/**/*.php\",\n    \"./app/Livewire/**/**/*.php\",\n\n    // Add mary\n    \"./vendor/robsontenorio/mary/src/View/Components/**/*.php\",\n  ],\n\n  // Add daisyUI\n  plugins: [require(\"daisyui\")],\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Centered Hero in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a centered hero component using DaisyUI classes. It includes a title, description, and a call-to-action button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/hero/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$hero bg-base-200 min-h-screen\">\n  <div class=\"$$hero-content text-center\">\n    <div class=\"max-w-md\">\n      <h1 class=\"text-5xl font-bold\">Hello there</h1>\n      <p class=\"py-6\">\n        Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem\n        quasi. In deleniti eaque aut repudiandae et a id nisi.\n      </p>\n      <button class=\"$$btn $$btn-primary\">Get Started</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Carousel with Next/Prev Controls using DaisyUI - HTML\nDESCRIPTION: This snippet provides a carousel featuring next and previous navigation controls, created using DaisyUI and Tailwind CSS. Each image slide includes two anchored circle buttons styled with 'btn-circle', functioning as prev/next controls via in-page anchor navigation to slides with unique ids. All actions are handled via HTML; no JavaScript is required. Dependencies include DaisyUI and Tailwind CSS, with 'carousel', 'carousel-item', and 'btn' utility classes used. Key parameters include the unique id for each slide and accurate hrefs in navigation buttons. The expected output is a horizontally oriented, full-width slider with overlayed navigation. Limitation: snapping behavior relies on browser's anchor navigation and may not have smooth transitions on all browsers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel w-full\">\n  <div id=\"slide1\" class=\"$$carousel-item relative w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1625726411847-8cbb60cc71e6.webp\"\n      class=\"w-full\" />\n    <div class=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n      <a href=\"#slide4\" class=\"$$btn $$btn-circle\">❮</a>\n      <a href=\"#slide2\" class=\"$$btn $$btn-circle\">❯</a>\n    </div>\n  </div>\n  <div id=\"slide2\" class=\"$$carousel-item relative w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1609621838510-5ad474b7d25d.webp\"\n      class=\"w-full\" />\n    <div class=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n      <a href=\"#slide1\" class=\"$$btn $$btn-circle\">❮</a>\n      <a href=\"#slide3\" class=\"$$btn $$btn-circle\">❯</a>\n    </div>\n  </div>\n  <div id=\"slide3\" class=\"$$carousel-item relative w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1414694762283-acccc27bca85.webp\"\n      class=\"w-full\" />\n    <div class=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n      <a href=\"#slide2\" class=\"$$btn $$btn-circle\">❮</a>\n      <a href=\"#slide4\" class=\"$$btn $$btn-circle\">❯</a>\n    </div>\n  </div>\n  <div id=\"slide4\" class=\"$$carousel-item relative w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1665553365602-b2fb8e5d1707.webp\"\n      class=\"w-full\" />\n    <div class=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n      <a href=\"#slide3\" class=\"$$btn $$btn-circle\">❮</a>\n      <a href=\"#slide1\" class=\"$$btn $$btn-circle\">❯</a>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using Fieldset with Text Inputs in HTML\nDESCRIPTION: This snippet showcases how to encapsulate a text input within a fieldset element, using the 'fieldset' and 'fieldset-legend' classes. It provides a structured way to group related inputs with a legend, suitable for forms that require group labels or optional fields.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <legend class=\"$$fieldset-legend\">What is your name?</legend>\n  <input type=\"text\" class=\"$$input\" placeholder=\"Type here\" />\n  <p class=\"$$label\">Optional</p>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Using Primary Color with Primary Content Text in daisyUI\nDESCRIPTION: This snippet demonstrates how to apply the primary background color and primary content text color to an element using daisyUI utility classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/utilities/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-primary text-primary-content\">Primary color</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind CSS and daisyUI to the project's CSS file\nDESCRIPTION: This CSS snippet shows how to import Tailwind CSS and add daisyUI as a plugin in the project's main CSS file. It replaces any existing styles with the Tailwind CSS import and daisyUI plugin declaration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/qwik/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Creating Extra Small Table with DaisyUI\nDESCRIPTION: HTML markup for a responsive table using DaisyUI's table and table-xs classes. The table displays employee data in a compact format with horizontal scrolling enabled through overflow-x-auto.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"$$table $$table-xs\">\n    <thead>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>company</th>\n        <th>location</th>\n        <th>Last Login</th>\n        <th>Favorite Color</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Littel, Schaden and Vandervort</td>\n        <td>Canada</td>\n        <td>12/16/2020</td>\n        <td>Blue</td>\n      </tr>\n      <tr>\n        <th>2</th>\n        <td>Hart Hagerty</td>\n        <td>Desktop Support Technician</td>\n        <td>Zemlak, Daniel and Leannon</td>\n        <td>United States</td>\n        <td>12/5/2020</td>\n        <td>Purple</td>\n      </tr>\n      <!-- Additional rows omitted for brevity -->\n    </tbody>\n    <tfoot>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>company</th>\n        <th>location</th>\n        <th>Last Login</th>\n        <th>Favorite Color</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Helper Dropdown with HTML and daisyUI\nDESCRIPTION: This HTML snippet defines the structure for a helper dropdown positioned next to regular text. It uses daisyUI classes (`dropdown`, `dropdown-end`, `btn`, `btn-circle`, `btn-ghost`, `text-info`, `card`, `card-sm`, `bg-base-100`, `rounded-box`) to style a small ghost button with an info icon that toggles a small informational card on focus or click. The `tabindex='0'` attributes ensure the elements are focusable and interactive, and `role='button'` defines the semantic role of the trigger element. The dropdown content is styled as a small card.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\nA normal text and a helper dropdown\n<div class=\"$$dropdown $$dropdown-end\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn $$btn-circle $$btn-ghost $$btn-xs text-info\">\n    <svg\n      tabindex=\"0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      class=\"h-4 w-4 stroke-current\">\n      <path\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n    </svg>\n  </div>\n  <div\n    tabindex=\"0\"\n    class=\"$$card $$card-sm $$dropdown-content bg-base-100 rounded-box z-1 w-64 shadow-sm\">\n    <div tabindex=\"0\" class=\"$$card-body\">\n      <h2 class=\"$$card-title\">You needed more info?</h2>\n      <p>Here is a description!</p>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Vertical Carousel with DaisyUI in HTML\nDESCRIPTION: Implements a vertical scrolling carousel using DaisyUI's carousel-vertical class. This carousel has a fixed height of 96 units and displays images that scroll vertically rather than horizontally, with rounded corners for visual appeal.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel $$carousel-vertical rounded-box h-96\">\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\" />\n  </div>\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\" />\n  </div>\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\" />\n  </div>\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\" />\n  </div>\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\" />\n  </div>\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\" />\n  </div>\n  <div class=\"$$carousel-item h-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Footer with Copyright Text using DaisyUI in HTML\nDESCRIPTION: This snippet shows how to create a simple footer component with copyright text using DaisyUI and Tailwind CSS classes. It includes a dynamic year display using JavaScript.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<footer class=\"$$footer $$sm:footer-horizontal $$footer-center bg-base-300 text-base-content p-4\">\n  <aside>\n    <p>Copyright © {new Date().getFullYear()} - All right reserved by ACME Industries Ltd</p>\n  </aside>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Controlling Modal Visibility with a Hidden Checkbox in DaisyUI (HTML)\nDESCRIPTION: This snippet illustrates using a hidden checkbox to manage the open/close state of a modal dialog, leveraging DaisyUI's checkbox toggle and modal classes. The modal is triggered by a label and closed by interacting with another label tied to the checkbox. No JavaScript is required—state is managed entirely by the checkbox and label relationship. Inputs involve user clicks on labels; outputs are modal visibility. This pattern is dependency-free beyond DaisyUI, but requires correct placement of the HTML structure for functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<!-- The button to open modal -->\\n<label for=\\\"my_modal_6\\\" class=\\\"$$btn\\\">open modal</label>\\n\\n<!-- Put this part before </body> tag -->\\n<input type=\\\"checkbox\\\" id=\\\"my_modal_6\\\" class=\\\"$$modal-toggle\\\" />\\n<div class=\\\"$$modal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"$$modal-box\\\">\\n    <h3 class=\\\"text-lg font-bold\\\">Hello!</h3>\\n    <p class=\\\"py-4\\\">This modal works with a hidden checkbox!</p>\\n    <div class=\\\"$$modal-action\\\">\\n      <label for=\\\"my_modal_6\\\" class=\\\"$$btn\\\">Close!</label>\\n    </div>\\n  </div>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Warning Color Alert in HTML with DaisyUI\nDESCRIPTION: This code demonstrates how to implement a warning-colored alert using DaisyUI classes. It includes an SVG icon and a warning message.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-warning\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 shrink-0 stroke-current\" fill=\"none\" viewBox=\"0 0 24 24\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n  </svg>\n  <span>Warning: Invalid email address!</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Navbar with Title and Icon in HTML using daisyUI\nDESCRIPTION: This example demonstrates a navbar with a title and an icon button. It uses 'flex-1' and 'flex-none' classes for layout control, and includes an SVG icon in the button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"flex-1\">\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"flex-none\">\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"inline-block h-5 w-5 stroke-current\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\"></path> </svg>\n    </button>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Color Variants to Textareas with DaisyUI HTML\nDESCRIPTION: This snippet showcases multiple textarea elements, each demonstrating a different color variant provided by DaisyUI. Color classes like `textarea-primary`, `textarea-secondary`, `textarea-accent`, etc., are applied to the base `textarea` class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/textarea/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<textarea type=\"text\" placeholder=\"Primary\" class=\"$$textarea $$textarea-primary\"></textarea>\n<textarea type=\"text\" placeholder=\"Secondary\" class=\"$$textarea $$textarea-secondary\"></textarea>\n<textarea type=\"text\" placeholder=\"Accent\" class=\"$$textarea $$textarea-accent\"></textarea>\n<textarea type=\"text\" placeholder=\"Neutral\" class=\"$$textarea $$textarea-neutral\"></textarea>\n<textarea type=\"text\" placeholder=\"Info\" class=\"$$textarea $$textarea-info\"></textarea>\n<textarea type=\"text\" placeholder=\"Success\" class=\"$$textarea $$textarea-success\"></textarea>\n<textarea type=\"text\" placeholder=\"Warning\" class=\"$$textarea $$textarea-warning\"></textarea>\n<textarea type=\"text\" placeholder=\"Error\" class=\"$$textarea $$textarea-error\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Implementing Code Mockup with Highlighted Line in HTML\nDESCRIPTION: This snippet shows how to create a code mockup with a highlighted line. It uses line numbers as prefixes and applies a warning background to the third line to highlight an error.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-code/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-code w-full\">\n  <pre data-prefix=\"1\"><code>npm i daisyui</code></pre>\n  <pre data-prefix=\"2\"><code>installing...</code></pre>\n  <pre data-prefix=\"3\" class=\"bg-warning text-warning-content\"><code>Error!</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI dependencies\nDESCRIPTION: This command installs the latest versions of Tailwind CSS, Tailwind CSS Vite plugin, and daisyUI using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/react/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Grouping Nested and Mixed Elements with DaisyUI Join - HTML\nDESCRIPTION: This snippet demonstrates grouping a mix of nested and direct child input, select, and button elements using join and join-item. DaisyUI's join utilities apply styling regardless of element nesting, enabling grouping of various interactive elements including inputs and buttons inside nested wrappers. Requires DaisyUI imported and relevant classes applied as shown; input parameters like placeholder and option items are customizable.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/join/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"$$join\\\">\\n  <div>\\n    <div>\\n      <input class=\\\"$$input $$join-item\\\" placeholder=\\\"Search\\\" />\\n    </div>\\n  </div>\\n  <select class=\\\"$$select $$join-item\\\">\\n    <option disabled selected>Filter</option>\\n    <option>Sci-fi</option>\\n    <option>Drama</option>\\n    <option>Action</option>\\n  </select>\\n  <div class=\\\"$$indicator\\\">\\n    <span class=\\\"$$indicator-item $$badge $$badge-secondary\\\">new</span>\\n    <button class=\\\"$$btn $$join-item\\\">Search</button>\\n  </div>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Footer with Links and Social Icons in DaisyUI\nDESCRIPTION: A footer component featuring service links, company information, and social media icons. Uses DaisyUI's footer and link components with horizontal layout on small screens and includes SVG icons for social media links.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-base-300 text-base-content p-10\">\n  <nav>\n    <h6 class=\"$$footer-title\">Services</h6>\n    <a class=\"$$link $$link-hover\">Branding</a>\n    <a class=\"$$link $$link-hover\">Design</a>\n    <a class=\"$$link $$link-hover\">Marketing</a>\n    <a class=\"$$link $$link-hover\">Advertisement</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Company</h6>\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Social</h6>\n    <div class=\"grid grid-flow-col gap-4\">\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\n        </svg>\n      </a>\n    </div>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Django Homepage HTML Template Linking Output CSS - HTML\nDESCRIPTION: This HTML file is a Django template that links the generated Tailwind CSS/daisyUI CSS file and displays a styled button using the daisyUI class. It uses Django's 'static' template tag to reference output.css. The HTML structure enables quick verification that integration works.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Django App</title>\n    {% load static %}\n    <link href=\"{% static 'css/output.css' %}\" rel=\"stylesheet\" type=\"text/css\" />\n</head>\n<body>\n    <button class=\"btn btn-primary\">Hello daisyUI</button>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Mega Menu with Submenu in HTML using DaisyUI\nDESCRIPTION: This snippet showcases a responsive mega menu with multiple levels of submenus using DaisyUI classes. It includes four main categories with various subcategories and items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_20\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu xl:menu-horizontal bg-base-200 rounded-box lg:min-w-max\">\n  <li>\n    <a>Solutions</a>\n    <ul>\n      <li><a>Design</a></li>\n      <li><a>Development</a></li>\n      <li><a>Hosting</a></li>\n      <li><a>Domain register</a></li>\n    </ul>\n  </li>\n  <li>\n    <a>Enterprise</a>\n    <ul>\n      <li><a>CRM software</a></li>\n      <li><a>Marketing management</a></li>\n      <li><a>Security</a></li>\n      <li><a>Consulting</a></li>\n    </ul>\n  </li>\n  <li>\n    <a>Products</a>\n    <ul>\n      <li><a>UI Kit</a></li>\n      <li><a>WordPress themes</a></li>\n      <li><a>WordPress plugins</a></li>\n      <li>\n        <a>Open source</a>\n        <ul>\n          <li><a>Auth management system</a></li>\n          <li><a>VScode theme</a></li>\n          <li><a>Color picker app</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a>Company</a>\n    <ul>\n      <li><a>About us</a></li>\n      <li><a>Contact us</a></li>\n      <li><a>Privacy policy</a></li>\n      <li><a>Press kit</a></li>\n    </ul>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing a DaisyUI List with Third Column Wrapping\nDESCRIPTION: This HTML snippet demonstrates the structure of a DaisyUI list component. It uses `<ul>` with the `list` class and `<li>` with the `list-row` class for each item. The `list-col-wrap` class is applied to the paragraph element (`<p>`) to make its content wrap below the other columns within the list row. Each row contains an image, text content (artist and song title), the wrapping description, and two icon buttons (play and like). Requires the DaisyUI CSS framework.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/list/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$list bg-base-100 rounded-box shadow-md\">\n  \n  <li class=\"p-4 pb-2 text-xs opacity-60 tracking-wide\">Most played songs this week</li>\n  \n  <li class=\"$$list-row\">\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/1@94.webp\"/></div>\n    <div>\n      <div>Dio Lupa</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Remaining Reason</div>\n    </div>\n    <p class=\"$$list-col-wrap text-xs\">\n      \"Remaining Reason\" became an instant hit, praised for its haunting sound and emotional depth. A viral performance brought it widespread recognition, making it one of Dio Lupa’s most iconic tracks.\n    </p>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path></g></svg>\n    </button>\n  </li>\n  \n  <li class=\"$$list-row\">\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/4@94.webp\"/></div>\n    <div>\n      <div>Ellie Beilish</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Bears of a fever</div>\n    </div>\n    <p class=\"$$list-col-wrap text-xs\">\n      \"Bears of a Fever\" captivated audiences with its intense energy and mysterious lyrics. Its popularity skyrocketed after fans shared it widely online, earning Ellie critical acclaim.\n    </p>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path></g></svg>\n    </button>\n  </li>\n  \n  <li class=\"$$list-row\">\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/3@94.webp\"/></div>\n    <div>\n      <div>Sabrino Gardener</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Cappuccino</div>\n    </div>\n    <p class=\"$$list-col-wrap text-xs\">\n      \"Cappuccino\" quickly gained attention for its smooth melody and relatable themes. The song’s success propelled Sabrino into the spotlight, solidifying their status as a rising star.\n    </p>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path></g></svg>\n    </button>\n  </li>\n  \n</ul>\n```\n\n----------------------------------------\n\nTITLE: Theme Swap with Icons\nDESCRIPTION: Advanced theme switcher implementation using swap component with sun and moon icons\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$swap $$swap-rotate\">\n  <!-- this hidden checkbox controls the state -->\n  <input type=\"checkbox\" class=\"$$theme-controller\" value=\"synthwave\" />\n\n  <!-- sun icon -->\n  <svg class=\"$$swap-off h-10 w-10 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z\" />\n  </svg>\n\n  <!-- moon icon -->\n  <svg class=\"$$swap-on h-10 w-10 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z\" />\n  </svg>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Creating Radio Buttons with DaisyUI\nDESCRIPTION: This code demonstrates how to implement radio buttons using DaisyUI. Radio inputs can be styled with various colors and sizes, and each group of radios must share the same name attribute.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_51\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"radio\" name=\"{name}\" class=\"radio {MODIFIER}\" />\n```\n\n----------------------------------------\n\nTITLE: Structuring Employee Data Table in HTML\nDESCRIPTION: This HTML snippet creates a table structure for displaying employee data. It includes table rows for multiple employees with details such as name, job title, company, location, last login date, and favorite color. The table also has a header and footer for column labels.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<td>Aland Wilber</td>\n        <td>Quality Control Specialist</td>\n        <td>Kshlerin, Rogahn and Swaniawski</td>\n        <td>Czech Republic</td>\n        <td>9/29/2020</td>\n        <td>Purple</td>\n        <th>18</th>\n      </tr>\n      <tr>\n        <th>19</th>\n        <td>Teddie Duerden</td>\n        <td>Staff Accountant III</td>\n        <td>Pouros, Ullrich and Windler</td>\n        <td>France</td>\n        <td>10/27/2020</td>\n        <td>Aquamarine</td>\n        <th>19</th>\n      </tr>\n      <tr>\n        <th>20</th>\n        <td>Lorelei Blackstone</td>\n        <td>Data Coordinator</td>\n        <td>Witting, Kutch and Greenfelder</td>\n        <td>Kazakhstan</td>\n        <td>6/3/2020</td>\n        <td>Red</td>\n        <th>20</th>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th></th>\n        <td>Name</td>\n        <td>Job</td>\n        <td>company</td>\n        <td>location</td>\n        <td>Last Login</td>\n        <td>Favorite Color</td>\n        <th></th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI Dependencies\nDESCRIPTION: NPM command to install Tailwind CSS, Tailwind Vite plugin, and daisyUI packages\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Tooltip in daisyUI (HTML)\nDESCRIPTION: This snippet shows how to create a tooltip using daisyUI's 'tooltip' class and the 'data-tip' attribute. The tooltip appears when the user hovers over the button element. Dependencies include daisyUI (and by extension Tailwind CSS). The main parameter is the 'data-tip' attribute for tooltip text. Wrap any element with the 'tooltip' class to apply the behavior.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip\" data-tip=\"hello\">\n  <button class=\"$$btn\">Hover me</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Example ChatGPT Prompt with daisyUI Documentation Reference\nDESCRIPTION: Demonstrates a complete example of how to structure a prompt to ChatGPT that includes the daisyUI documentation reference followed by a specific request for a light theme with tropical colors.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/chatgpt/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://daisyui.com/llms.txt give me a light daisyUI 5 theme with tropical color palette\n```\n\n----------------------------------------\n\nTITLE: Password Input with Validation in DaisyUI\nDESCRIPTION: A password input with icon and complex validation requirements. Includes pattern matching for password strength and detailed validation hints.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input $$validator\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <path\n        d=\"M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z\"\n      ></path>\n      <circle cx=\"16.5\" cy=\"7.5\" r=\".5\" fill=\"currentColor\"></circle>\n    </g>\n  </svg>\n  <input\n    type=\"password\"\n    required\n    placeholder=\"Password\"\n    minlength=\"8\"\n    pattern=\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n    title=\"Must be more than 8 characters, including number, lowercase letter, uppercase letter\"\n  />\n</label>\n<p class=\"$$validator-hint hidden\">\n  Must be more than 8 characters, including\n  <br />At least one number <br />At least one lowercase letter <br />At least one uppercase letter\n</p>\n```\n\n----------------------------------------\n\nTITLE: Applying Error Color to Tooltip (HTML)\nDESCRIPTION: This snippet utilizes 'tooltip-error' to show a tooltip with an error background, typically red, for alerting the user about failed or invalid operations. The button is also styled with 'btn-error'. DaisyUI dependency is required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-error\" data-tip=\"error\">\n  <button class=\"$$btn $$btn-error\">error</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Stats with daisyUI in HTML\nDESCRIPTION: This code snippet shows how to implement a responsive statistics component using daisyUI where the layout switches from vertical on small screens to horizontal on larger screens, harnessing the power of Tailwind CSS responsive classes. There are no additional dependencies required beyond daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats $$stats-vertical lg:$$stats-horizontal shadow\">\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">Downloads</div>\n    <div class=\"$$stat-value\">31K</div>\n    <div class=\"$$stat-desc\">Jan 1st - Feb 1st</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">New Users</div>\n    <div class=\"$$stat-value\">4,200</div>\n    <div class=\"$$stat-desc\">↗︎ 400 (22%)</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">New Registers</div>\n    <div class=\"$$stat-value\">1,200</div>\n    <div class=\"$$stat-desc\">↘︎ 90 (14%)</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding daisyUI to CSS File with Tailwind CSS 4 Syntax\nDESCRIPTION: Shows how to add daisyUI to your CSS file using the new Tailwind CSS 4 plugin syntax.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Chat Bubbles with Avatar Images\nDESCRIPTION: Shows implementation of chat bubbles with user avatars using the chat-image and avatar classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/chat/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$chat $$chat-start\">\n  <div class=\"$$chat-image $$avatar\">\n    <div class=\"w-10 rounded-full\">\n      <img\n        alt=\"Tailwind CSS chat bubble component\"\n        src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$chat-bubble\">It was said that you would, destroy the Sith, not join them.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Timeline with Icons and Colored Lines in DaisyUI\nDESCRIPTION: Implementation of a vertical timeline component featuring checkmark icons and colored divider lines. The timeline displays Apple product history with alternating left and right aligned content boxes and colored connecting lines.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"text-primary h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr class=\"bg-primary\" />\n  </li>\n  <li>\n    <hr class=\"bg-primary\" />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"text-primary h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr class=\"bg-primary\" />\n  </li>\n  <li>\n    <hr class=\"bg-primary\" />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"text-primary h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Menu with Active Item in HTML using DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a vertical menu with an active item using DaisyUI classes. The menu includes three items, with the second item marked as active.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_17\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56\">\n  <li><a>Item 1</a></li>\n  <li><a class=\"menu-active\">Item 2</a></li>\n  <li><a>Item 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Customizing Code Mockup Background Color in HTML\nDESCRIPTION: This example shows how to customize the background color of the code mockup. It uses DaisyUI's color classes to change the background and text colors.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-code/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-code bg-primary text-primary-content w-full\">\n  <pre><code>can be any color!</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Volume Icon Swap in HTML with DaisyUI\nDESCRIPTION: This example shows how to implement a swap between two volume icons. It uses SVG icons for volume on and off states, controlled by a hidden checkbox.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/swap/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$swap\">\n  <!-- this hidden checkbox controls the state -->\n  <input type=\"checkbox\" />\n\n  <!-- volume on icon -->\n  <svg\n    class=\"$$swap-on fill-current\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"48\"\n    height=\"48\"\n    viewBox=\"0 0 24 24\">\n    <path\n      d=\"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\" />\n  </svg>\n\n  <!-- volume off icon -->\n  <svg\n    class=\"$$swap-off fill-current\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"48\"\n    height=\"48\"\n    viewBox=\"0 0 24 24\">\n    <path\n      d=\"M3,9H7L12,4V20L7,15H3V9M16.59,12L14,9.41L15.41,8L18,10.59L20.59,8L22,9.41L19.41,12L22,14.59L20.59,16L18,13.41L15.41,16L14,14.59L16.59,12Z\" />\n  </svg>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Creating Primary Color Progress Bars with DaisyUI\nDESCRIPTION: This code demonstrates how to implement progress bars with a primary color theme using DaisyUI classes. It includes progress bars with different completion levels, all styled with the primary color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-primary w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-primary w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-primary w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-primary w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-primary w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind CSS Build Script to package.json in JSON\nDESCRIPTION: This snippet shows how to add a build script named \"build:css\" in the scripts section of package.json. The script runs Tailwind's CLI, taking app.css as input and creating a compiled stylesheet at public/output.css. This configuration ensures consistent, repeatable builds. Node.js and @tailwindcss/cli must be installed for this script to function. Adjust file paths as needed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/cli/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build:css\": \"npx @tailwindcss/cli -i app.css -o public/output.css\"\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Color Progress Bars in DaisyUI\nDESCRIPTION: This snippet shows how to create progress bars with an error color theme using DaisyUI classes. It demonstrates multiple progress bars with varying completion percentages, all styled with the error color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-error w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-error w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-error w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-error w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-error w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Animation in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to add a loading animation using DaisyUI. The loading component can be styled with various animation types (spinner, dots, ring, etc.) and sizes (xs, sm, md, lg, xl).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_36\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"loading {MODIFIER}\"></span>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Lifted Tabs with Icons using HTML\nDESCRIPTION: This HTML snippet demonstrates how to create lifted tabs (`tabs-lift`) using DaisyUI, where each tab includes an SVG icon alongside text within a `<label>`. Tab selection is managed by radio inputs (`<input type=\"radio\">`), each sharing the same `name` attribute (`my_tabs_4`) to group them. The corresponding content for each tab is placed in a `div` with the `tab-content` class immediately following its respective label. Requires DaisyUI CSS framework for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<!-- name of each tab group should be unique -->\n<div class=\"$$tabs $$tabs-lift\">\n  <label class=\"$$tab\">\n    <input type=\"radio\" name=\"my_tabs_4\" />\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-4 me-2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\" /></svg>\n    Live\n  </label>\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 1</div>\n\n  <label class=\"$$tab\">\n    <input type=\"radio\" name=\"my_tabs_4\" checked=\"checked\" />\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-4 me-2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 15.182a4.5 4.5 0 0 1-6.364 0M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0ZM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75Zm-.375 0h.008v.015h-.008V9.75Zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75Zm-.375 0h.008v.015h-.008V9.75Z\" /></svg>\n    Laugh\n  </label>\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 2</div>\n\n  <label class=\"$$tab\">\n    <input type=\"radio\" name=\"my_tabs_4\" />\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-4 me-2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\" /></svg>\n    Love\n  </label>\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 3</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Alert Component in HTML with DaisyUI\nDESCRIPTION: Creates an alert component to inform users about important events. Supports modifiers for style, color, and direction.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"alert {MODIFIER}\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Two-Row Footer Grid with Multiple Sections in DaisyUI\nDESCRIPTION: A two-row footer layout with six navigation sections organized in a grid. Uses DaisyUI's footer component with neutral color theme and includes sections for services, company info, legal, social, explore, and apps.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-neutral text-neutral-content grid-rows-2 p-10\">\n  <nav>\n    <h6 class=\"$$footer-title\">Services</h6>\n    <a class=\"$$link $$link-hover\">Branding</a>\n    <a class=\"$$link $$link-hover\">Design</a>\n    <a class=\"$$link $$link-hover\">Marketing</a>\n    <a class=\"$$link $$link-hover\">Advertisement</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Company</h6>\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Legal</h6>\n    <a class=\"$$link $$link-hover\">Terms of use</a>\n    <a class=\"$$link $$link-hover\">Privacy policy</a>\n    <a class=\"$$link $$link-hover\">Cookie policy</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Social</h6>\n    <a class=\"$$link $$link-hover\">Twitter</a>\n    <a class=\"$$link $$link-hover\">Instagram</a>\n    <a class=\"$$link $$link-hover\">Facebook</a>\n    <a class=\"$$link $$link-hover\">GitHub</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Explore</h6>\n    <a class=\"$$link $$link-hover\">Features</a>\n    <a class=\"$$link $$link-hover\">Enterprise</a>\n    <a class=\"$$link $$link-hover\">Security</a>\n    <a class=\"$$link $$link-hover\">Pricing</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Apps</h6>\n    <a class=\"$$link $$link-hover\">Mac</a>\n    <a class=\"$$link $$link-hover\">Windows</a>\n    <a class=\"$$link $$link-hover\">iPhone</a>\n    <a class=\"$$link $$link-hover\">Android</a>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Implementing Focus-based Collapse Component\nDESCRIPTION: Creates a collapse component that opens on focus and closes when focus is lost. Uses DaisyUI collapse classes with base styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div tabindex=\"0\" class=\"collapse bg-base-100 border-base-300 border\">\n  <div class=\"collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"collapse-content text-sm\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Countdown Timer with Boxes using HTML and Tailwind CSS\nDESCRIPTION: This snippet demonstrates how to create a countdown timer with separate boxes for days, hours, minutes, and seconds using HTML and Tailwind CSS classes. It utilizes DaisyUI's countdown component and custom styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"grid auto-cols-max grid-flow-col gap-5 text-center\">\n  <div class=\"bg-neutral rounded-box text-neutral-content flex flex-col p-2\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:15;\" aria-live=\"polite\" aria-label=\"15\">15</span>\n    </span>\n    days\n  </div>\n  <div class=\"bg-neutral rounded-box text-neutral-content flex flex-col p-2\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:10;\" aria-live=\"polite\" aria-label=\"10\">10</span>\n    </span>\n    hours\n  </div>\n  <div class=\"bg-neutral rounded-box text-neutral-content flex flex-col p-2\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:24;\" aria-live=\"polite\" aria-label=\"24\">24</span>\n    </span>\n    min\n  </div>\n  <div class=\"bg-neutral rounded-box text-neutral-content flex flex-col p-2\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:59;\" aria-live=\"polite\" aria-label=\"59\">59</span>\n    </span>\n    sec\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Different Colors to Text Inputs in HTML\nDESCRIPTION: This code snippet demonstrates the use of various 'input' color classes such as 'input-neutral', 'input-primary', and others to apply different color themes to text inputs. This extension of the daisyUI styles allows for rapid theme adjustments with no additional setup.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" placeholder=\"neutral\" class=\"$$input $$input-neutral\" />\n<input type=\"text\" placeholder=\"Primary\" class=\"$$input $$input-primary\" />\n<input type=\"text\" placeholder=\"Secondary\" class=\"$$input $$input-secondary\" />\n<input type=\"text\" placeholder=\"Accent\" class=\"$$input $$input-accent\" />\n\n<input type=\"text\" placeholder=\"Info\" class=\"$$input $$input-info\" />\n<input type=\"text\" placeholder=\"Success\" class=\"$$input $$input-success\" />\n<input type=\"text\" placeholder=\"Warning\" class=\"$$input $$input-warning\" />\n<input type=\"text\" placeholder=\"Error\" class=\"$$input $$input-error\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind CSS and daisyUI in CSS\nDESCRIPTION: Imports Tailwind CSS and adds the daisyUI plugin to the CSS file to integrate their styling capabilities. This snippet assumes the paths are correctly set up within the project structure and that PostCSS is used for CSS handling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"../public\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Developing Theme Controller with Dropdown in HTML\nDESCRIPTION: This HTML snippet shows a theme controller using a dropdown menu for selecting themes. The dropdown includes radio inputs for themes like Default, Retro, Cyberpunk, Valentine, and Aqua. Key dependencies include CSS for styling the dropdown and SVG for the dropdown icon. User input is handling clicks on dropdown options, with the output being the chosen theme value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$dropdown mb-72\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">\n    Theme\n    <svg\n      width=\"12px\"\n      height=\"12px\"\n      class=\"inline-block h-2 w-2 fill-current opacity-60\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 2048 2048\">\n      <path d=\"M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z\"></path>\n    </svg>\n  </div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content bg-base-300 rounded-box z-1 w-52 p-2 shadow-2xl\">\n    <li>\n      <input\n        type=\"radio\"\n        name=\"theme-dropdown\"\n        class=\"$$theme-controller w-full $$btn $$btn-sm $$btn-block $$btn-ghost justify-start\"\n        aria-label=\"Default\"\n        value=\"default\" />\n    </li>\n    <li>\n      <input\n        type=\"radio\"\n        name=\"theme-dropdown\"\n        class=\"$$theme-controller w-full $$btn $$btn-sm $$btn-block $$btn-ghost justify-start\"\n        aria-label=\"Retro\"\n        value=\"retro\" />\n    </li>\n    <li>\n      <input\n        type=\"radio\"\n        name=\"theme-dropdown\"\n        class=\"$$theme-controller w-full $$btn $$btn-sm $$btn-block $$btn-ghost justify-start\"\n        aria-label=\"Cyberpunk\"\n        value=\"cyberpunk\" />\n    </li>\n    <li>\n      <input\n        type=\"radio\"\n        name=\"theme-dropdown\"\n        class=\"$$theme-controller w-full $$btn $$btn-sm $$btn-block $$btn-ghost justify-start\"\n        aria-label=\"Valentine\"\n        value=\"valentine\" />\n    </li>\n    <li>\n      <input\n        type=\"radio\"\n        name=\"theme-dropdown\"\n        class=\"$$theme-controller w-full $$btn $$btn-sm $$btn-block $$btn-ghost justify-start\"\n        aria-label=\"Aqua\"\n        value=\"aqua\" />\n    </li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Alert in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a basic alert using DaisyUI classes. It includes an SVG icon and text content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-info h-6 w-6 shrink-0\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n  </svg>\n  <span>12 unread messages. Tap to see.</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Top-Opening Dropdown in HTML\nDESCRIPTION: This code demonstrates how to create a dropdown menu that opens from the top using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-top\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click ⬆️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Success Color Alert in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to create a success-colored alert using DaisyUI classes. It includes an SVG icon and a success message.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-success\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 shrink-0 stroke-current\" fill=\"none\" viewBox=\"0 0 24 24\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n  </svg>\n  <span>Your purchase has been confirmed!</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-line Code Mockup with Different Prefixes in HTML\nDESCRIPTION: This example demonstrates a multi-line code mockup with different prefixes and text colors for each line. It shows a command execution process with status updates.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-code/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-code w-full\">\n  <pre data-prefix=\"$\"><code>npm i daisyui</code></pre>\n  <pre data-prefix=\">\" class=\"text-warning\"><code>installing...</code></pre>\n  <pre data-prefix=\">\" class=\"text-success\"><code>Done!</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML with Tailwind & daisyUI\nDESCRIPTION: Defines a simple HTML file that links to the compiled CSS and includes a button styled with daisyUI classes. It demonstrates how to integrate the CSS framework with Electron.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP -->\n    <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'self'\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../public/output.css\">\n  </head>\n  <body>\n    <button class=\"btn\">Hello daisyUI</button>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Integrating Badges with Text Elements using DaisyUI in HTML\nDESCRIPTION: This code snippet shows how to incorporate badges of various sizes into different text elements such as headings and paragraphs using DaisyUI classes. It demonstrates responsive design by adjusting badge sizes to match text sizes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<h1 class=\"text-xl font-semibold\">\n  Heading 1 <span class=\"$$badge $$badge-xl\">Badge</span>\n</h1>\n\n<h2 class=\"text-lg font-semibold\">\n  Heading 2 <span class=\"$$badge $$badge-lg\">Badge</span>\n</h2>\n\n<h3 class=\"text-base font-semibold\">\n  Heading 3 <span class=\"$$badge $$badge-md\">Badge</span>\n</h3>\n\n<h4 class=\"text-sm font-semibold\">\n  Heading 4 <span class=\"$$badge $$badge-sm\">Badge</span>\n</h4>\n\n<h5 class=\"text-xs font-semibold\">\n  Heading 5 <span class=\"$$badge $$badge-xs\">Badge</span>\n</h5>\n\n<p class=\"text-xs\">\n  Paragraph <span class=\"$$badge $$badge-xs\">Badge</span>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Registering App in Django settings.py - Diff\nDESCRIPTION: This diff illustrates the addition of the 'myapp' application to Django's INSTALLED_APPS list in 'settings.py'. Declaring the app is required for Django to recognize and enable its views, templates, and static files.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: Diff\nCODE:\n```\n  INSTALLED_APPS = [\n      \"django.contrib.admin\",\n      \"django.contrib.auth\",\n      \"django.contrib.contenttypes\",\n      \"django.contrib.sessions\",\n      \"django.contrib.messages\",\n      \"django.contrib.staticfiles\",\n+     \"myapp\",\n  ]\n```\n\n----------------------------------------\n\nTITLE: Email Input with Validation in DaisyUI\nDESCRIPTION: An email input component with an envelope icon and validation functionality. Includes a validator hint that displays when input is invalid.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input $$validator\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\"></rect>\n      <path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"></path>\n    </g>\n  </svg>\n  <input type=\"email\" placeholder=\"mail@site.com\" required />\n</label>\n<div class=\"$$validator-hint hidden\">Enter valid email address</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dropdown with Popover API in React/JSX\nDESCRIPTION: This snippet shows how to create a dropdown using the Popover API and anchor positioning in a React component. It includes comments for TypeScript support.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{/* change popover-1 and --anchor-1 names. Use unique names for each dropdown */}\n{/* For TSX uncomment the commented types below */}\n<button className=\"$$btn\" popoverTarget=\"popover-1\" style={{ anchorName: \"--anchor-1\" } /* as React.CSSProperties */}>\n  Button\n</button>\n\n<ul className=\"$$dropdown $$menu w-52 rounded-box bg-base-100 shadow-sm\"\n  popover=\"auto\" id=\"popover-1\" style={{ positionAnchor: \"--anchor-1\" } /* as React.CSSProperties */ }>\n  <li><a>Item 1</a></li>\n  <li><a>Item 2</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Rendering Basic Tabs with DaisyUI in HTML\nDESCRIPTION: This snippet displays a simple set of tab buttons using anchor elements and DaisyUI classes such as $$tabs and $$tab, with $$tab-active indicating the active tab. Dependencies include DaisyUI styles and an HTML environment. The component expects three tabs, and you can customize or expand as needed. Outputs the tabbed interface without managing tab state in JavaScript.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div role=\\\"tablist\\\" class=\\\"$$tabs\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 1</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Tab 2</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 3</a>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Lift Style Tabs with DaisyUI in HTML\nDESCRIPTION: Renders tabs using DaisyUI’s \\\"lift\\\" style for a raised visual appearance. Utilizes $$tabs $$tabs-lift for the container and $$tab for individual tabs. The snippet demonstrates active state styling via $$tab-active and requires DaisyUI included in your HTML. Suitable for visually distinct tab navigation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-lift\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 1</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Tab 2</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 3</a>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI 5 via npm\nDESCRIPTION: Command to install the latest version of daisyUI using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Configuring a datetime-local Input in HTML\nDESCRIPTION: This code showcases the implementation of a datetime-local input field styled with the 'input' class. It enables the selection of both date and time in a single input field.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"datetime-local\" class=\"$$input\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Hero Component\nDESCRIPTION: HTML structure for hero sections with content and overlay support.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_28\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"hero {MODIFIER}\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Icon-only Menu with Right-aligned Tooltips in DaisyUI\nDESCRIPTION: This code creates a vertical menu with icon-only navigation items where each item displays a tooltip on hover. The menu uses SVG icons with right-aligned tooltips for better user experience.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu bg-base-200 $$rounded-box\">\n  <li>\n    <a class=\"$$tooltip $$tooltip-right\" data-tip=\"Home\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a class=\"$$tooltip $$tooltip-right\" data-tip=\"Details\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a class=\"$$tooltip $$tooltip-right\" data-tip=\"Stats\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n      </svg>\n    </a>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Avatar Groups with Counter in HTML using DaisyUI\nDESCRIPTION: This code shows how to create an avatar group with a counter using DaisyUI classes. It includes an avatar-placeholder to display the number of additional avatars.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar-group -space-x-6\">\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$avatar $$avatar-placeholder\">\n    <div class=\"bg-neutral text-neutral-content w-12\">\n      <span>+99</span>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Ghost-Style Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with ghost styling (no background) using the select-ghost class. Creates a minimalist dropdown for font selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-ghost\">\n  <option disabled selected>Pick a font</option>\n  <option>Inter</option>\n  <option>Poppins</option>\n  <option>Raleway</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick a font\" class=\"$$select $$select-ghost\">\n  <option disabled={true}>Pick a font</option>\n  <option>Inter</option>\n  <option>Poppins</option>\n  <option>Raleway</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Implementing Horizontal Submenu in HTML using DaisyUI\nDESCRIPTION: This example demonstrates a horizontal menu with a submenu using DaisyUI classes. The menu includes three top-level items, with the second item containing a submenu of two items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_19\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu menu-horizontal bg-base-200 rounded-box\">\n  <li><a>Item 1</a></li>\n  <li>\n    <a>Parent</a>\n    <ul>\n      <li><a>Submenu 1</a></li>\n      <li><a>Submenu 2</a></li>\n    </ul>\n  </li>\n  <li><a>Item 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Hero with Figure in HTML using DaisyUI\nDESCRIPTION: This code snippet shows how to create a hero component with an image and text content side by side using DaisyUI and Tailwind CSS classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/hero/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$hero bg-base-200 min-h-screen\">\n  <div class=\"$$hero-content flex-col lg:flex-row\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1635805737707-575885ab0820.webp\"\n      class=\"max-w-sm rounded-lg shadow-2xl\"\n    />\n    <div>\n      <h1 class=\"text-5xl font-bold\">Box Office News!</h1>\n      <p class=\"py-6\">\n        Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem\n        quasi. In deleniti eaque aut repudiandae et a id nisi.\n      </p>\n      <button class=\"$$btn $$btn-primary\">Get Started</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Including Tailwind CSS and DaisyUI in CSS File\nDESCRIPTION: Imports Tailwind CSS and DaisyUI into the main CSS file using the PostCSS '@import' and '@plugin' syntaxes. Requires Tailwind CSS and DaisyUI to be installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/lit/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Icon Swap with Rotate Effect in HTML using DaisyUI\nDESCRIPTION: This snippet showcases how to create a swap between sun and moon icons with a rotate effect. It uses the swap-rotate class for the rotation animation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/swap/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$swap $$swap-rotate\">\n  <!-- this hidden checkbox controls the state -->\n  <input type=\"checkbox\" />\n\n  <!-- sun icon -->\n  <svg\n    class=\"$$swap-on h-10 w-10 fill-current\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\">\n    <path\n      d=\"M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z\" />\n  </svg>\n\n  <!-- moon icon -->\n  <svg\n    class=\"$$swap-off h-10 w-10 fill-current\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\">\n    <path\n      d=\"M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z\" />\n  </svg>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Customizing DaisyUI Tab Colors using HTML and CSS Variables\nDESCRIPTION: This HTML code demonstrates how to customize the colors of DaisyUI tabs (`tabs-lift` style) using CSS custom properties (variables). The example uses anchor tags (`<a>`) with `role=\"tab\"` instead of radio inputs. The active tab (`tab-active`) has its background color set using `--tab-bg: orange` and its border color using `--tab-border-color: red`. Text color is also modified using `text-primary`. Requires DaisyUI CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"tablist\" class=\"$$tabs $$tabs-lift\">\n  <a role=\"tab\" class=\"$$tab\">Tab 1</a>\n  <a role=\"tab\" class=\"$$tab $$tab-active text-primary [--tab-bg:orange] [--tab-border-color:red]\"> Tab 2</a>\n  <a role=\"tab\" class=\"$$tab\">Tab 3</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Select with Fieldset and Labels in DaisyUI\nDESCRIPTION: Example of a select component wrapped in a fieldset with a legend and label. Demonstrates proper form structuring with semantic HTML elements for better accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <legend class=\"$$fieldset-legend\">Browsers</legend>\n  <select class=\"$$select\">\n    <option disabled selected>Pick a browser</option>\n    <option>Chrome</option>\n    <option>FireFox</option>\n    <option>Safari</option>\n  </select>\n  <span class=\"$$label\">Optional</span>\n</fieldset>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <legend class=\"$$fieldset-legend\">Browsers</legend>\n  <select defaultValue=\"Pick a browser\" class=\"$$select\">\n    <option disabled={true}>Pick a browser</option>\n    <option>Chrome</option>\n    <option>FireFox</option>\n    <option>Safari</option>\n  </select>\n  <span class=\"$$label\">Optional</span>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Radio Tabs-Lift with Associated Tab Content in DaisyUI HTML\nDESCRIPTION: Creates a tab group with a lift effect using radio inputs, each paired with content in a $$tab-content div. Utilizes $$tabs, $$tabs-lift, $$tab, and $$tab-content classes with unique radio group names for accessibility. Requires DaisyUI. Designed for scenarios where each tab should expose content depending on which input is checked, demonstrated with varying padding and background.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<!-- name of each tab group should be unique -->\\n<div class=\\\"$$tabs $$tabs-lift\\\">\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_3\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 1\\\" />\\n  <div class=\\\"$$tab-content bg-base-100 border-base-300 p-6\\\">Tab content 1</div>\\n\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_3\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 2\\\" checked=\\\"checked\\\" />\\n  <div class=\\\"$$tab-content bg-base-100 border-base-300 p-6\\\">Tab content 2</div>\\n\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_3\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 3\\\" />\\n  <div class=\\\"$$tab-content bg-base-100 border-base-300 p-6\\\">Tab content 3</div>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Vertical Timeline with DaisyUI in HTML\nDESCRIPTION: This code snippet demonstrates how to create a vertical timeline using DaisyUI classes. It includes timeline items for major Apple product releases, each with an SVG icon and a text box. The timeline is styled to align items on the bottom side only.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Countdown Timer with Boxes using JSX and Tailwind CSS\nDESCRIPTION: This snippet shows how to create a countdown timer with separate boxes for days, hours, minutes, and seconds using JSX and Tailwind CSS classes. It includes commented types for TypeScript support and uses inline styles for custom properties.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: JSX\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<div class=\"grid grid-flow-col gap-5 text-center auto-cols-max\">\n  <div class=\"flex flex-col p-2 bg-neutral rounded-box text-neutral-content\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style={{\"--$$value\":15} /* as React.CSSProperties */ } aria-live=\"polite\" aria-label={counter}>15</span>\n    </span>\n    days\n  </div>\n  <div class=\"flex flex-col p-2 bg-neutral rounded-box text-neutral-content\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style={{\"--$$value\":10} /* as React.CSSProperties */ } aria-live=\"polite\" aria-label={counter}>10</span>\n    </span>\n    hours\n  </div>\n  <div class=\"flex flex-col p-2 bg-neutral rounded-box text-neutral-content\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style={{\"--$$value\":24} /* as React.CSSProperties */ } aria-live=\"polite\" aria-label={counter}>24</span>\n    </span>\n    min\n  </div>\n  <div class=\"flex flex-col p-2 bg-neutral rounded-box text-neutral-content\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style={{\"--$$value\":59} /* as React.CSSProperties */ } aria-live=\"polite\" aria-label={counter}>59</span>\n    </span>\n    sec\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Hero with Reversed Figure Order in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates a hero component with an image and text content in reverse order for larger screens using DaisyUI and Tailwind CSS classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/hero/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$hero bg-base-200 min-h-screen\">\n  <div class=\"$$hero-content flex-col lg:flex-row-reverse\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1635805737707-575885ab0820.webp\"\n      class=\"max-w-sm rounded-lg shadow-2xl\"\n    />\n    <div>\n      <h1 class=\"text-5xl font-bold\">Box Office News!</h1>\n      <p class=\"py-6\">\n        Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem\n        quasi. In deleniti eaque aut repudiandae et a id nisi.\n      </p>\n      <button class=\"$$btn $$btn-primary\">Get Started</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Colored Loading Animations in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create loading spinner animations with different colors using DaisyUI classes. It showcases various color options including primary, secondary, accent, neutral, info, success, warning, and error.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-spinner text-primary\"></span>\n<span class=\"$$loading $$loading-spinner text-secondary\"></span>\n<span class=\"$$loading $$loading-spinner text-accent\"></span>\n<span class=\"$$loading $$loading-spinner text-neutral\"></span>\n<span class=\"$$loading $$loading-spinner text-info\"></span>\n<span class=\"$$loading $$loading-spinner text-success\"></span>\n<span class=\"$$loading $$loading-spinner text-warning\"></span>\n<span class=\"$$loading $$loading-spinner text-error\"></span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Large Size Dock Component with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a large-sized dock navigation component using DaisyUI's dock and dock-lg classes. It includes three navigation buttons with icons and labels for Home, Inbox, and Settings, with the Inbox button having an active state.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock $$dock-lg\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n    <span class=\"$$dock-label\">Home</span>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n    <span class=\"$$dock-label\">Inbox</span>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n    <span class=\"$$dock-label\">Settings</span>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Carousel Component in HTML with DaisyUI\nDESCRIPTION: Creates a carousel component to show images or content in a scrollable area. Supports modifiers for alignment and direction.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"carousel {MODIFIER}\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Combining Accordion with Join Component in HTML\nDESCRIPTION: This code demonstrates how to use the Accordion component together with the Join component in DaisyUI. It uses 'join' and 'join-item' classes to create a vertically joined accordion with automatically handled border radius.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/accordion/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$join $$join-vertical bg-base-100\">\n  <div class=\"$$collapse $$collapse-arrow $$join-item border-base-300 border\">\n    <input type=\"radio\" name=\"my-accordion-4\" checked=\"checked\" />\n    <div class=\"$$collapse-title font-semibold\">How do I create an account?</div>\n    <div class=\"$$collapse-content text-sm\">Click the \"Sign Up\" button in the top right corner and follow the registration process.</div>\n  </div>\n  <div class=\"$$collapse $$collapse-arrow $$join-item border-base-300 border\">\n    <input type=\"radio\" name=\"my-accordion-4\" />\n    <div class=\"$$collapse-title font-semibold\">I forgot my password. What should I do?</div>\n    <div class=\"$$collapse-content text-sm\">Click on \"Forgot Password\" on the login page and follow the instructions sent to your email.</div>\n  </div>\n  <div class=\"$$collapse $$collapse-arrow $$join-item border-base-300 border\">\n    <input type=\"radio\" name=\"my-accordion-4\" />\n    <div class=\"$$collapse-title font-semibold\">How do I update my profile information?</div>\n    <div class=\"$$collapse-content text-sm\">Go to \"My Account\" settings and select \"Edit Profile\" to make changes.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Drawer Component\nDESCRIPTION: HTML structure for creating a drawer with toggle functionality and sidebar content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_22\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"drawer {MODIFIER}\">\n  <input id=\"my-drawer\" type=\"checkbox\" class=\"drawer-toggle\" />\n  <div class=\"drawer-content\">{CONTENT}</div>\n  <div class=\"drawer-side\">{SIDEBAR}</div>\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"menu p-4 w-80 min-h-full bg-base-100 text-base-content\">\n  <li><a>Item 1</a></li>\n  <li><a>Item 2</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Customizing Hero Section in Astro Blog Template\nDESCRIPTION: HTML code snippet for customizing the hero section of the blog, including the blog name, bio, and picture.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"text-center pt-10\">\n  <div class=\"badge badge-outline badge-lg\">Hello!</div>\n  <h1 class=\"text-4xl md:text-5xl xl:text-7xl font-semibold brightness-150\">\n    I'm <span class=\"text-primary\">Antonio,</span>\n    <br />\n    Digital Marketer & Founder\n  </h1>\n</div>\n\n<img\n  src=\"/images/antonio.png\"\n  alt=\"Antonio\"\n  class=\"max-w-xs md:max-w-lg mt-4 absolute\"\n/>\n\n<img src=\"/images/bg.png\" alt=\"bg\" height=\"{500}\" width=\"{700}\" />\n```\n\n----------------------------------------\n\nTITLE: Toast with Top-Center Position\nDESCRIPTION: Demonstrates a toast centered at the top of the page with multiple alerts.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-top $$toast-center\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating and Navigating Into a Django Project Directory - Shell\nDESCRIPTION: This snippet initializes a new Django project with ‘django-admin startproject myapp’ and navigates into the project directory. The ‘myapp’ directory will contain all subsequent files and settings for the Django project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ndjango-admin startproject myapp\ncd myapp\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Menu with DaisyUI\nDESCRIPTION: This snippet shows how to create a vertical menu for displaying a list of links. The menu component can be customized with modifiers for size, direction, and state.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_38\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"menu\">\n  <li><button>Item</button></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Indeterminate Toggle State\nDESCRIPTION: Demonstrates how to create an indeterminate toggle state using JavaScript\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!-- You can make a checkbox indeterminate using JS -->\n<script>\n  document.getElementById(\"my-toggle\").indeterminate = true\n</script>\n<input type=\"checkbox\" class=\"$$toggle\" id=\"my-toggle\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal Dialog with Custom Width in React/JSX\nDESCRIPTION: Creates a modal dialog in React/JSX with custom width using Tailwind CSS utility classes. The modal box is set to 11/12 of the screen width with a maximum width of 5xl.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: JSX\nCODE:\n```\n{/* You can open the modal using document.getElementById('ID').showModal() method */}\n<button className=\"$$btn\" onClick={()=>document.getElementById('my_modal_4').showModal()}>open modal</button>\n<dialog id=\"my_modal_4\" className=\"$$modal\">\n  <div className=\"$$modal-box w-11/12 max-w-5xl\">\n    <h3 className=\"font-bold text-lg\">Hello!</h3>\n    <p className=\"py-4\">Click the button below to close</p>\n    <div className=\"$$modal-action\">\n      <form method=\"dialog\">\n        {/* if there is a button, it will close the modal */}\n        <button className=\"$$btn\">Close</button>\n      </form>\n    </div>\n  </div>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Creating Range Slider with Steps and Measure in HTML\nDESCRIPTION: This code shows how to implement a range slider with step indicators and numeric labels. It uses additional divs to create visual markers and labels below the slider.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/range/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"w-full max-w-xs\">\n  <input type=\"range\" min=\"0\" max=\"100\" value=\"25\" class=\"$$range\" step=\"25\" />\n  <div class=\"flex justify-between px-2.5 mt-2 text-xs\">\n    <span>|</span>\n    <span>|</span>\n    <span>|</span>\n    <span>|</span>\n    <span>|</span>\n  </div>\n  <div class=\"flex justify-between px-2.5 mt-2 text-xs\">\n    <span>1</span>\n    <span>2</span>\n    <span>3</span>\n    <span>4</span>\n    <span>5</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Pagination with Equal-Width Previous/Next Buttons in DaisyUI\nDESCRIPTION: Implements a pagination with two equal-width outline buttons for previous and next page navigation. Uses grid layout to ensure buttons have equal width regardless of their text content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/pagination/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join grid grid-cols-2\">\n  <button class=\"$$join-item $$btn $$btn-outline\">Previous page</button>\n  <button class=\"$$join-item $$btn $$btn-outline\">Next</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Including Specific Components in daisyUI PostCSS Configuration\nDESCRIPTION: Example using the `include` property to specify that only the `button`, `input`, and `select` component styles should be included from the daisyUI library. All other components and base styles will be excluded, reducing the final CSS size.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  include: button, input, select;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Soft Style Buttons\nDESCRIPTION: Shows implementation of soft-styled buttons with various color combinations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-soft\">Default</button>\n<button class=\"$$btn $$btn-soft $$btn-primary\">Primary</button>\n<button class=\"$$btn $$btn-soft $$btn-secondary\">Secondary</button>\n<button class=\"$$btn $$btn-soft $$btn-accent\">Accent</button>\n<button class=\"$$btn $$btn-soft $$btn-info\">Info</button>\n<button class=\"$$btn $$btn-soft $$btn-success\">Success</button>\n<button class=\"$$btn $$btn-soft $$btn-warning\">Warning</button>\n<button class=\"$$btn $$btn-soft $$btn-error\">Error</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Dash Style Alerts in HTML with DaisyUI\nDESCRIPTION: This code demonstrates how to implement dash style alerts for different colors (info, success, warning, error) using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-info $$alert-dash\">\n  <span>12 unread messages. Tap to see.</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-success $$alert-dash\">\n  <span>Your purchase has been confirmed!</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-warning $$alert-dash\">\n  <span>Warning: Invalid email address!</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-error $$alert-dash\">\n  <span>Error! Task failed successfully.</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Secondary Color Progress Bars in DaisyUI\nDESCRIPTION: This snippet shows the implementation of progress bars with a secondary color theme using DaisyUI classes. It includes multiple progress bars with varying completion percentages, all styled with the secondary color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-secondary w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-secondary w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-secondary w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-secondary w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-secondary w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Implementing Closable Modal Dialog with Outside Click in HTML\nDESCRIPTION: Creates a modal dialog that can be closed by clicking outside the modal box. Uses a form with 'modal-backdrop' class to cover the screen and handle the close action.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn\" onclick=\"my_modal_2.showModal()\">open modal</button>\n<dialog id=\"my_modal_2\" class=\"$$modal\">\n  <div class=\"$$modal-box\">\n    <h3 class=\"text-lg font-bold\">Hello!</h3>\n    <p class=\"py-4\">Press ESC key or click outside to close</p>\n  </div>\n  <form method=\"dialog\" class=\"$$modal-backdrop\">\n    <button>close</button>\n  </form>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Styled Dock Navigation Bar - DaisyUI Tailwind CSS - HTML\nDESCRIPTION: This snippet provides the complete HTML necessary to render a dock-style navigation bar with custom base, neutral, and content color classes using Tailwind CSS and DaisyUI conventions. It includes three buttons with SVG icons representing \"Home\", \"Inbox\", and \"Settings\", with one button visually marked as active. Dependencies include Tailwind CSS and DaisyUI for class interpretations. Input parameters are controlled indirectly through assigned class names, and output is a visually rich, responsive dock navigation, best embedded within a container element. The dock component is limited by the scope of Tailwind/DaisyUI stylesheet availability.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-base-300 rounded-box w-full max-w-sm pt-32\">\n  <div class=\"dock relative bg-neutral text-neutral-content\">\n    <button>\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n      <span class=\"dock-label\">Home</span>\n    </button>\n    <button class=\"dock-active\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n      <span class=\"dock-label\">Inbox</span>\n    </button>\n    <button>\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n      <span class=\"dock-label\">Settings</span>\n    </button>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: URL Validation Implementation\nDESCRIPTION: URL input validation with pattern matching for valid URL format.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"url\" class=\"$$input $$validator\" required placeholder=\"https://\" value=\"https://\"\n  pattern=\"^(https?://)?([a-zA-Z0-9]([a-zA-Z0-9\\\\-].*[a-zA-Z0-9])?\\.)+[a-zA-Z].*$\" \n  title=\"Must be valid URL\" />\n<p class=\"$$validator-hint\">Must be valid URL</p>\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeline with Colorful Lines and Icons using DaisyUI in HTML\nDESCRIPTION: This snippet shows how to create a timeline component with colorful connecting lines and checkmark icons. The timeline alternates between left and right positioning of content boxes, using DaisyUI's timeline classes with primary color accents.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"text-primary h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr class=\"bg-primary\" />\n  </li>\n  <li>\n    <hr class=\"bg-primary\" />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"text-primary h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr class=\"bg-primary\" />\n  </li>\n  <li>\n    <hr class=\"bg-primary\" />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"text-primary h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Bars Animation in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to create loading bars animations of various sizes using DaisyUI classes. It provides examples for extra small, small, medium, large, and extra large bar animations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-bars $$loading-xs\"></span>\n<span class=\"$$loading $$loading-bars $$loading-sm\"></span>\n<span class=\"$$loading $$loading-bars $$loading-md\"></span>\n<span class=\"$$loading $$loading-bars $$loading-lg\"></span>\n<span class=\"$$loading $$loading-bars $$loading-xl\"></span>\n```\n\n----------------------------------------\n\nTITLE: Building a Snap-to-End Carousel with DaisyUI\nDESCRIPTION: This snippet illustrates how to create a horizontal carousel with snap-to-end functionality using DaisyUI classes. It includes multiple carousel items with images aligned to the end of the carousel container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel $$carousel-end rounded-box\">\n  <div class=\"$$carousel-item\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\" alt=\"Drink\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"\n      alt=\"Drink\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"\n      alt=\"Drink\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"\n      alt=\"Drink\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\" alt=\"Drink\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\" alt=\"Drink\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"\n      alt=\"Drink\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: URL Input with Validation in DaisyUI\nDESCRIPTION: A URL input field with link icon and pattern validation for valid URLs. Includes validator class and hint message.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_18\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input $$validator\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n      <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n    </g>\n  </svg>\n  <input\n    type=\"url\"\n    required\n    placeholder=\"https://\"\n    value=\"https://\"\n    pattern=\"^(https?://)?([a-zA-Z0-9]([a-zA-Z0-9\\\\-].*[a-zA-Z0-9])?\\\\.)+[a-zA-Z].*$\"\n    title=\"Must be valid URL\"\n  />\n</label>\n<p class=\"$$validator-hint\">Must be valid URL</p>\n```\n\n----------------------------------------\n\nTITLE: Applying Upward Triangle Mask in DaisyUI\nDESCRIPTION: Applies an upward-pointing triangle mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-triangle\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Styling Headless UI Dropdown with daisyUI Classes in React\nDESCRIPTION: Enhanced version of the Headless UI dropdown menu, now incorporating daisyUI class names for styling. This example shows how to combine Headless UI's functionality with daisyUI's design system.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-use-headless-ui-and-daisyui/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Menu } from \"@headlessui/react\"\n\nexport default function MyDropDown() {\n  return (\n    <Menu>\n      <Menu.Button className=\"btn\">Button</Menu.Button>\n      <Menu.Items className=\"menu rounded-box bg-base-200 w-52\">\n        <Menu.Item>\n          <li>\n            <a href=\"/link\">Item 1</a>\n          </li>\n        </Menu.Item>\n        <Menu.Item>\n          <li>\n            <a href=\"/link\">Item 2</a>\n          </li>\n        </Menu.Item>\n      </Menu.Items>\n    </Menu>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Text Comparison Diff Component Implementation in HTML\nDESCRIPTION: Implementation of a Diff component for comparing two text elements with different background colors and styling. Features responsive text sizing and grid-based content centering.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/diff/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"$$diff aspect-16/9\" tabindex=\"0\">\n  <div class=\"$$diff-item-1\" role=\"img\" tabindex=\"0\">\n    <div class=\"bg-primary text-primary-content grid place-content-center text-9xl font-black\">\n      DAISY\n    </div>\n  </div>\n  <div class=\"$$diff-item-2\" role=\"img\">\n    <div class=\"bg-base-200 grid place-content-center text-9xl font-black\">DAISY</div>\n  </div>\n  <div class=\"$$diff-resizer\"></div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Telephone Input with Validation in DaisyUI\nDESCRIPTION: A telephone number input with phone icon and validation for 10-digit numbers. Includes pattern matching and length validation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_17\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input $$validator\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n    <g fill=\"none\">\n      <path\n        d=\"M7.25 11.5C6.83579 11.5 6.5 11.8358 6.5 12.25C6.5 12.6642 6.83579 13 7.25 13H8.75C9.16421 13 9.5 12.6642 9.5 12.25C9.5 11.8358 9.16421 11.5 8.75 11.5H7.25Z\"\n        fill=\"currentColor\"\n      ></path>\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M6 1C4.61929 1 3.5 2.11929 3.5 3.5V12.5C3.5 13.8807 4.61929 15 6 15H10C11.3807 15 12.5 13.8807 12.5 12.5V3.5C12.5 2.11929 11.3807 1 10 1H6ZM10 2.5H9.5V3C9.5 3.27614 9.27614 3.5 9 3.5H7C6.72386 3.5 6.5 3.27614 6.5 3V2.5H6C5.44771 2.5 5 2.94772 5 3.5V12.5C5 13.0523 5.44772 13.5 6 13.5H10C10.5523 13.5 11 13.0523 11 12.5V3.5C11 2.94772 10.5523 2.5 10 2.5Z\"\n        fill=\"currentColor\"\n      ></path>\n    </g>\n  </svg>\n  <input\n    type=\"tel\"\n    class=\"tabular-nums\"\n    required\n    placeholder=\"Phone\"\n    pattern=\"[0-9]*\"\n    minlength=\"10\"\n    maxlength=\"10\"\n    title=\"Must be 10 digits\"\n  />\n</label>\n<p class=\"$$validator-hint\">Must be 10 digits</p>\n```\n\n----------------------------------------\n\nTITLE: Implementing Size Variants for DaisyUI Select Component - HTML\nDESCRIPTION: HTML implementation of DaisyUI select components in various sizes from extra small to extra large. Uses select-xs, select-sm, select-md, select-lg, and select-xl classes for sizing.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-xs\">\n  <option disabled selected>Xsmall</option>\n  <option>Xsmall Apple</option>\n  <option>Xsmall Orange</option>\n  <option>Xsmall Tomato</option>\n</select>\n<select class=\"$$select $$select-sm\">\n  <option disabled selected>Small</option>\n  <option>Small Apple</option>\n  <option>Small Orange</option>\n  <option>Small Tomato</option>\n</select>\n<select class=\"$$select $$select-md\">\n  <option disabled selected>Medium</option>\n  <option>Medium Apple</option>\n  <option>Medium Orange</option>\n  <option>Medium Tomato</option>\n</select>\n<select class=\"$$select $$select-lg\">\n  <option disabled selected>Large</option>\n  <option>Large Apple</option>\n  <option>Large Orange</option>\n  <option>Large Tomato</option>\n</select>\n<select class=\"$$select $$select-xl\">\n  <option disabled selected>Xlarge</option>\n  <option>Xlarge Apple</option>\n  <option>Xlarge Orange</option>\n  <option>Xlarge Tomato</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Horizontal Icon-Only Menu\nDESCRIPTION: A horizontal menu implementation with SVG icons using DaisyUI's menu-horizontal class. Similar to the vertical icon menu but arranged horizontally.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu $$menu-horizontal bg-base-200 $$rounded-box\">\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n      </svg>\n    </a>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-Stat Component with Icons in HTML using DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a Stat component with multiple stat items, each featuring an icon. It uses SVG icons to represent different types of data such as downloads, new users, and new registrations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats shadow\">\n  <div class=\"$$stat\">\n    <div class=\"$$stat-figure text-secondary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        class=\"inline-block h-8 w-8 stroke-current\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n    </div>\n    <div class=\"$$stat-title\">Downloads</div>\n    <div class=\"$$stat-value\">31K</div>\n    <div class=\"$$stat-desc\">Jan 1st - Feb 1st</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-figure text-secondary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        class=\"inline-block h-8 w-8 stroke-current\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"></path>\n      </svg>\n    </div>\n    <div class=\"$$stat-title\">New Users</div>\n    <div class=\"$$stat-value\">4,200</div>\n    <div class=\"$$stat-desc\">↗︎ 400 (22%)</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-figure text-secondary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        class=\"inline-block h-8 w-8 stroke-current\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"></path>\n      </svg>\n    </div>\n    <div class=\"$$stat-title\">New Registers</div>\n    <div class=\"$$stat-value\">1,200</div>\n    <div class=\"$$stat-desc\">↘︎ 90 (14%)</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Loading Infinity Animation in HTML with DaisyUI\nDESCRIPTION: This code illustrates how to implement loading infinity animations of different sizes using DaisyUI classes. It includes examples for extra small, small, medium, large, and extra large infinity animations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-infinity $$loading-xs\"></span>\n<span class=\"$$loading $$loading-infinity $$loading-sm\"></span>\n<span class=\"$$loading $$loading-infinity $$loading-md\"></span>\n<span class=\"$$loading $$loading-infinity $$loading-lg\"></span>\n<span class=\"$$loading $$loading-infinity $$loading-xl\"></span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Half-Star DaisyUI Rating in HTML\nDESCRIPTION: Demonstrates how to create a DaisyUI rating component that supports half-star increments. This requires adding the 'rating-half' class to the parent 'div'. Each full star is represented by two radio inputs: one with 'mask-half-1' for the first half and another with 'mask-half-2' for the second half. This allows selecting ratings like 1.5, 2.5, etc. The example also includes the 'rating-hidden' input for clearing the selection and uses 'rating-lg' for size and 'bg-green-500' for color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating $$rating-lg $$rating-half\">\n  <input type=\"radio\" name=\"rating-11\" class=\"$$rating-hidden\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-1 bg-green-500\" aria-label=\"0.5 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-2 bg-green-500\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-1 bg-green-500\" aria-label=\"1.5 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-2 bg-green-500\" aria-label=\"2 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-1 bg-green-500\" aria-label=\"2.5 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-2 bg-green-500\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-1 bg-green-500\" aria-label=\"3.5 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-2 bg-green-500\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-1 bg-green-500\" aria-label=\"4.5 star\" />\n  <input type=\"radio\" name=\"rating-11\" class=\"$$mask $$mask-star-2 $$mask-half-2 bg-green-500\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Accordion with Arrow Icons in HTML\nDESCRIPTION: This code shows how to create an accordion with arrow icons using DaisyUI classes. It includes the 'collapse-arrow' class to add arrow indicators to the accordion items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/accordion/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$collapse $$collapse-arrow bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-2\" checked=\"checked\" />\n  <div class=\"$$collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"$$collapse-content text-sm\">Click the \"Sign Up\" button in the top right corner and follow the registration process.</div>\n</div>\n<div class=\"$$collapse $$collapse-arrow bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-2\" />\n  <div class=\"$$collapse-title font-semibold\">I forgot my password. What should I do?</div>\n  <div class=\"$$collapse-content text-sm\">Click on \"Forgot Password\" on the login page and follow the instructions sent to your email.</div>\n</div>\n<div class=\"$$collapse $$collapse-arrow bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-2\" />\n  <div class=\"$$collapse-title font-semibold\">How do I update my profile information?</div>\n  <div class=\"$$collapse-content text-sm\">Go to \"My Account\" settings and select \"Edit Profile\" to make changes.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Centered Stat Items in HTML with DaisyUI\nDESCRIPTION: This code snippet shows how to create a Stat component with centered items. It uses the 'place-items-center' class to align the content of each stat item to the center, creating a clean and organized layout.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats shadow\">\n  <div class=\"$$stat place-items-center\">\n    <div class=\"$$stat-title\">Downloads</div>\n    <div class=\"$$stat-value\">31K</div>\n    <div class=\"$$stat-desc\">From January 1st to February 1st</div>\n  </div>\n\n  <div class=\"$$stat place-items-center\">\n    <div class=\"$$stat-title\">Users</div>\n    <div class=\"$$stat-value text-secondary\">4,200</div>\n    <div class=\"$$stat-desc text-secondary\">↗︎ 40 (2%)</div>\n  </div>\n\n  <div class=\"$$stat place-items-center\">\n    <div class=\"$$stat-title\">New Registers</div>\n    <div class=\"$$stat-value\">1,200</div>\n    <div class=\"$$stat-desc\">↘︎ 90 (14%)</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Dev Server - Bash Commands\nDESCRIPTION: Basic commands for installing dependencies and starting the development server for the documentation template.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-astro-tailwind-documentation-template/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Implementing Rounded Avatars in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to create rounded avatars using DaisyUI classes. It demonstrates both rounded-xl and rounded-full styles for different levels of rounding.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar\">\n  <div class=\"w-24 rounded-xl\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n<div class=\"$$avatar\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind CSS and daisyUI in App Stylesheet - PostCSS\nDESCRIPTION: This code defines the primary CSS entry file for the Nuxt project, importing Tailwind CSS and registering the daisyUI plugin. It should be placed in assets/app.css and referenced from the Nuxt config. The dependencies are tailwindcss and daisyUI, both previously installed. The result is global project styles with Tailwind and daisyUI available for use; other styles should be removed as per instructions.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nuxt/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Navbar with Drawer in HTML\nDESCRIPTION: HTML implementation of a responsive navbar that transforms into a drawer on mobile screens. Uses DaisyUI classes for layout and styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/drawer/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"drawer\">\n  <input id=\"my-drawer-3\" type=\"checkbox\" class=\"drawer-toggle\" />\n  <div class=\"drawer-content flex flex-col\">\n    <!-- Navbar -->\n    <div class=\"navbar bg-base-300 w-full\">\n      <div class=\"flex-none lg:hidden\">\n        <label for=\"my-drawer-3\" aria-label=\"open sidebar\" class=\"btn btn-square btn-ghost\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            class=\"inline-block h-6 w-6 stroke-current\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            ></path>\n          </svg>\n        </label>\n      </div>\n      <div class=\"mx-2 flex-1 px-2\">Navbar Title</div>\n      <div class=\"hidden flex-none lg:block\">\n        <ul class=\"menu menu-horizontal\">\n          <!-- Navbar menu content here -->\n          <li><a>Navbar Item 1</a></li>\n          <li><a>Navbar Item 2</a></li>\n        </ul>\n      </div>\n    </div>\n    <!-- Page content here -->\n    Content\n  </div>\n  <div class=\"drawer-side\">\n    <label for=\"my-drawer-3\" aria-label=\"close sidebar\" class=\"drawer-overlay\"></label>\n    <ul class=\"menu bg-base-200 min-h-full w-80 p-4\">\n      <!-- Sidebar content here -->\n      <li><a>Sidebar Item 1</a></li>\n      <li><a>Sidebar Item 2</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Table with Active Row Highlighting\nDESCRIPTION: Table implementation featuring an active row highlighted with a different background color using the bg-base-200 class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"$$table\">\n    <!-- head -->\n    <thead>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Favorite Color</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- row 1 -->\n      <tr class=\"bg-base-200\">\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Blue</td>\n      </tr>\n      <!-- row 2 -->\n      <tr>\n        <th>2</th>\n        <td>Hart Hagerty</td>\n        <td>Desktop Support Technician</td>\n        <td>Purple</td>\n      </tr>\n      <!-- row 3 -->\n      <tr>\n        <th>3</th>\n        <td>Brice Swyre</td>\n        <td>Tax Accountant</td>\n        <td>Red</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Status Component in HTML with DaisyUI\nDESCRIPTION: Shows how to create a basic status indicator using DaisyUI's status class. This simple implementation creates a small visual indicator that can be used to show status states.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/status/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$status\"></span>\n```\n\n----------------------------------------\n\nTITLE: Radial Progress with Background Color and Border in HTML\nDESCRIPTION: Details the implementation of a radial progress component featuring background color and border styling. Leverages the 'bg-primary' and 'border' classes alongside CSS variables for adjustability.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div\n  class=\"$$radial-progress bg-primary text-primary-content border-primary border-4\"\n  style=\"--$$value:70;\" aria-valuenow=\"70\" role=\"progressbar\">\n  70%\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Color Variations to Status Components in HTML\nDESCRIPTION: Shows how to use different color classes with status indicators to convey different meanings. Includes theme colors (primary, secondary, accent, neutral) and semantic colors (info, success, warning, error).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/status/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div aria-label=\"status\" class=\"$$status $$status-primary\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-secondary\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-accent\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-neutral\"></div>\n\n<div aria-label=\"info\" class=\"$$status $$status-info\"></div>\n<div aria-label=\"success\" class=\"$$status $$status-success\"></div>\n<div aria-label=\"warning\" class=\"$$status $$status-warning\"></div>\n<div aria-label=\"error\" class=\"$$status $$status-error\"></div>\n```\n\n----------------------------------------\n\nTITLE: Excluding a Specific Style (rootscrollgutter) in daisyUI PostCSS\nDESCRIPTION: Demonstrates excluding only the `rootscrollgutter` style (applied to `:root` when modals/drawers are open) using the `exclude` property in the daisyUI PostCSS configuration. All other daisyUI styles remain included.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  exclude: rootscrollgutter;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Customizing Stats with Colors and Buttons Using daisyUI\nDESCRIPTION: This example demonstrates adding custom colors and interactive buttons to a stat component using daisyUI. The 'stats' block is styled with border and background colors, and includes buttons for additional actions like adding funds and balance management. Use of daisyUI classes is required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats bg-base-100 border border-base-300\">\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">Account balance</div>\n    <div class=\"$$stat-value\">$89,400</div>\n    <div class=\"$$stat-actions\">\n      <button class=\"$$btn $$btn-xs $$btn-success\">Add funds</button>\n    </div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">Current balance</div>\n    <div class=\"$$stat-value\">$89,400</div>\n    <div class=\"$$stat-actions\">\n      <button class=\"$$btn $$btn-xs\">Withdrawal</button>\n      <button class=\"$$btn $$btn-xs\">Deposit</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Toggle with Fieldset and Label\nDESCRIPTION: Demonstrates how to implement a toggle within a fieldset with a label for better form organization\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset bg-base-100 border-base-300 rounded-box w-64 border p-4\">\n  <legend class=\"$$fieldset-legend\">Login options</legend>\n  <label class=\"$$label\">\n    <input type=\"checkbox\" checked=\"checked\" class=\"$$toggle\" />\n    Remember me\n  </label>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Creating a Top-Side Timeline Component with DaisyUI in HTML\nDESCRIPTION: This code snippet demonstrates how to structure and style a timeline component using DaisyUI classes. It creates a vertical timeline with events aligned to the top, featuring product names, checkmark icons, and horizontal lines to connect events. The timeline showcases major Apple product releases.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"$$timeline\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iMac</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPhone</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Window Mockup with DaisyUI\nDESCRIPTION: This code demonstrates how to create a box that looks like an operating system window using DaisyUI's mockup-window component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_43\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mockup-window\">\n  <div>{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Dash Style Buttons\nDESCRIPTION: Shows implementation of dash-styled buttons with various color combinations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-dash\">Default</button>\n<button class=\"$$btn $$btn-dash $$btn-primary\">Primary</button>\n<button class=\"$$btn $$btn-dash $$btn-secondary\">Secondary</button>\n<button class=\"$$btn $$btn-dash $$btn-accent\">Accent</button>\n<button class=\"$$btn $$btn-dash $$btn-info\">Info</button>\n<button class=\"$$btn $$btn-dash $$btn-success\">Success</button>\n<button class=\"$$btn $$btn-dash $$btn-warning\">Warning</button>\n<button class=\"$$btn $$btn-dash $$btn-error\">Error</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Input Component\nDESCRIPTION: HTML structure for input fields with various style, color, and size modifiers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_30\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"{type}\" placeholder=\"Type here\" class=\"input {MODIFIER}\" />\n```\n\n----------------------------------------\n\nTITLE: Applying Info Color to Tooltip (HTML)\nDESCRIPTION: The 'tooltip-info' class modifies the tooltip background to an informational color (status blue). Often used for informative tooltips or notifications. Button uses 'btn-info'. DaisyUI classes must be loaded.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-info\" data-tip=\"info\">\n  <button class=\"$$btn $$btn-info\">info</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Radial Progress with DaisyUI\nDESCRIPTION: This snippet shows how to create a circular progress indicator using DaisyUI's radial-progress component. The progress value is set using the --value CSS variable and displayed as text inside the element.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_50\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"radial-progress\" style=\"--value:70;\" aria-valuenow=\"70\" role=\"progressbar\">70%</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Table with Pinned Elements\nDESCRIPTION: Creates a responsive table with pinned rows and columns using DaisyUI's table classes (table-pin-rows and table-pin-cols). The table includes employee data with fixed header/footer and row numbers, utilizing extra-small sizing through the table-xs class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"$$table $$table-xs $$table-pin-rows $$table-pin-cols\">\n    <thead>\n      <tr>\n        <th></th>\n        <td>Name</td>\n        <td>Job</td>\n        <td>company</td>\n        <td>location</td>\n        <td>Last Login</td>\n        <td>Favorite Color</td>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Littel, Schaden and Vandervort</td>\n        <td>Canada</td>\n        <td>12/16/2020</td>\n        <td>Blue</td>\n        <th>1</th>\n      </tr>\n      <!-- Additional rows truncated for brevity -->\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Email Validation Implementation\nDESCRIPTION: Basic email input validation that shows success/error states based on email format validity.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"$$input $$validator\" type=\"email\" required placeholder=\"mail@site.com\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Stat Component in DaisyUI\nDESCRIPTION: Stats display component with customizable parts and direction options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_57\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"stats {MODIFIER}\">\n  <div class=\"stat\">{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating an Accordion Component in HTML with daisyUI\nDESCRIPTION: This HTML snippet demonstrates how to create an accordion component using daisyUI classes. It shows the basic structure of an accordion item with a title and content area.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"collapse {MODIFIER}\">\n  <input type=\"radio\" name=\"{name}\" checked=\"{checked}\" />\n  <div class=\"collapse-title\">{title}</div>\n  <div class=\"collapse-content\">{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Horizontal Menu in HTML with DaisyUI\nDESCRIPTION: This code snippet shows how to implement a horizontal menu using DaisyUI classes. The menu is styled with a background color and contains three items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_18\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu menu-horizontal bg-base-200\">\n  <li><a>Item 1</a></li>\n  <li><a>Item 2</a></li>\n  <li><a>Item 3</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Adding Bounce Animation to Status Component in HTML\nDESCRIPTION: Shows how to implement a bounce animation on a status indicator to signify ongoing activity or to draw attention. This example uses the animation to indicate unread messages.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/status/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$status $$status-info animate-bounce\"></div> Unread messages\n```\n\n----------------------------------------\n\nTITLE: Colored File Input Variants\nDESCRIPTION: Implementation of file inputs with different color schemes including primary, secondary, accent, and state colors.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/file-input/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\" class=\"$$file-input $$file-input-primary\" />\n<input type=\"file\" class=\"$$file-input $$file-input-secondary\" />\n<input type=\"file\" class=\"$$file-input $$file-input-accent\" />\n<input type=\"file\" class=\"$$file-input $$file-input-neutral\" />\n<input type=\"file\" class=\"$$file-input $$file-input-info\" />\n<input type=\"file\" class=\"$$file-input $$file-input-success\" />\n<input type=\"file\" class=\"$$file-input $$file-input-warning\" />\n<input type=\"file\" class=\"$$file-input $$file-input-error\" />\n```\n\n----------------------------------------\n\nTITLE: Applying Primary Color to Tooltip (HTML)\nDESCRIPTION: This example uses the 'tooltip-primary' class to give the tooltip a primary color theme, useful for highlighting interface actions. The button inside also uses 'btn-primary'. daisyUI must be loaded for these classes to function.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-primary\" data-tip=\"primary\">\n  <button class=\"$$btn $$btn-primary\">primary</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Status with Ping Animation in HTML\nDESCRIPTION: Demonstrates how to add a ping animation to a status indicator to draw attention to critical statuses. Uses a grid layout with two overlapping elements to create the ping effect.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/status/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"inline-grid *:[grid-area:1/1]\">\n  <div class=\"$$status $$status-error animate-ping\"></div>\n  <div class=\"$$status $$status-error\"></div>\n</div> Server is down\n```\n\n----------------------------------------\n\nTITLE: Creating Size Variants of Pagination in DaisyUI\nDESCRIPTION: Demonstrates all available size variants for pagination components in DaisyUI using btn-xs, btn-sm, btn-md, btn-lg, and btn-xl classes. Each size variant maintains the same structure with an active second button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/pagination/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn $$btn-xs\">1</button>\n  <button class=\"$$join-item $$btn $$btn-xs $$btn-active\">2</button>\n  <button class=\"$$join-item $$btn $$btn-xs\">3</button>\n  <button class=\"$$join-item $$btn $$btn-xs\">4</button>\n</div>\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn $$btn-sm\">1</button>\n  <button class=\"$$join-item $$btn $$btn-sm $$btn-active\">2</button>\n  <button class=\"$$join-item $$btn $$btn-sm\">3</button>\n  <button class=\"$$join-item $$btn $$btn-sm\">4</button>\n</div>\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn $$btn-md\">1</button>\n  <button class=\"$$join-item $$btn $$btn-md $$btn-active\">2</button>\n  <button class=\"$$join-item $$btn $$btn-md\">3</button>\n  <button class=\"$$join-item $$btn $$btn-md\">4</button>\n</div>\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn $$btn-lg\">1</button>\n  <button class=\"$$join-item $$btn $$btn-lg $$btn-active\">2</button>\n  <button class=\"$$join-item $$btn $$btn-lg\">3</button>\n  <button class=\"$$join-item $$btn $$btn-lg\">4</button>\n</div>\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn $$btn-xl\">1</button>\n  <button class=\"$$join-item $$btn $$btn-xl $$btn-active\">2</button>\n  <button class=\"$$join-item $$btn $$btn-xl\">3</button>\n  <button class=\"$$join-item $$btn $$btn-xl\">4</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Alert with Title and Description in HTML using DaisyUI\nDESCRIPTION: This code demonstrates how to implement an alert with a title, description, and action button using DaisyUI classes. It includes an SVG icon and responsive layout.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-vertical sm:$$alert-horizontal\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-info h-6 w-6 shrink-0\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n  </svg>\n  <div>\n    <h3 class=\"font-bold\">New message!</h3>\n    <div class=\"text-xs\">You have 1 unread message</div>\n  </div>\n  <button class=\"$$btn $$btn-sm\">See</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Loading Ring Animation in HTML with DaisyUI\nDESCRIPTION: This snippet illustrates how to create loading ring animations of various sizes using DaisyUI classes. It provides examples for extra small, small, medium, large, and extra large ring animations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-ring $$loading-xs\"></span>\n<span class=\"$$loading $$loading-ring $$loading-sm\"></span>\n<span class=\"$$loading $$loading-ring $$loading-md\"></span>\n<span class=\"$$loading $$loading-ring $$loading-lg\"></span>\n<span class=\"$$loading $$loading-ring $$loading-xl\"></span>\n```\n\n----------------------------------------\n\nTITLE: Creating Progress Bar with DaisyUI\nDESCRIPTION: This code demonstrates how to implement a progress bar using DaisyUI. The progress component can be colored with various modifiers and requires value and max attributes to function properly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_49\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"progress {MODIFIER}\" value=\"50\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Updating Svelte Configuration\nDESCRIPTION: Modifications to svelte.config.js to add vite preprocessing support\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\nimport adapter from '@sveltejs/adapter-auto';\n+import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n+ preprocess: vitePreprocess(),\n  kit: {\n    // adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n    // If your environment is not supported or you settled on a specific environment, switch out the adapter.\n    // See https://kit.svelte.dev/docs/adapters for more information about adapters.\n    adapter: adapter()\n  }\n};\n\nexport default config;\n```\n\n----------------------------------------\n\nTITLE: Toggle Color Variants\nDESCRIPTION: Demonstrates different color variants of the toggle component using semantic color classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-primary\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-secondary\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-accent\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-neutral\" />\n\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-info\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-success\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-warning\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-error\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Fieldset Component\nDESCRIPTION: HTML structure for creating fieldset components with legend and description.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_24\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"fieldset\">\n  <legend class=\"fieldset-legend\">{title}</legend>\n  {CONTENT}\n  <p class=\"label\">{description}</p>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Creating a Snap-to-Center Carousel with DaisyUI\nDESCRIPTION: This snippet shows how to implement a horizontal carousel with snap-to-center functionality using DaisyUI classes. It includes multiple carousel items with images centered in the carousel container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel $$carousel-center rounded-box\">\n  <div class=\"$$carousel-item\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\" alt=\"Pizza\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"\n      alt=\"Pizza\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"\n      alt=\"Pizza\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"\n      alt=\"Pizza\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\" alt=\"Pizza\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\" alt=\"Pizza\" />\n  </div>\n  <div class=\"$$carousel-item\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"\n      alt=\"Pizza\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Border Radius in DaisyUI Join Groups - HTML\nDESCRIPTION: Shows how to add custom border radius to the last button in a join group using the rounded-r-full class alongside join-item for advanced styling. Designed for scenarios like email subscription bars. DaisyUI's join class groups input and button while the custom class applies extra styling to the button. Dependencies: DaisyUI and any extended custom utility classes in the stylesheet.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/join/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"$$join\\\">\\n  <input class=\\\"$$input $$join-item\\\" placeholder=\\\"Email\\\" />\\n  <button class=\\\"$$btn $$join-item rounded-r-full\\\">Subscribe</button>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Neutral Badge with Outline and Dash Styles\nDESCRIPTION: Special neutral badges with outline and dash styles, specifically for light backgrounds\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-white p-6\">\n  <div class=\"$$badge $$badge-neutral $$badge-outline\">Outline</div>\n  <div class=\"$$badge $$badge-neutral $$badge-dash\">Dash</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Toggle with Custom Icons\nDESCRIPTION: Shows how to implement a toggle with custom SVG icons for both states\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$toggle text-base-content\">\n  <input type=\"checkbox\" />\n  <svg aria-label=\"enabled\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"4\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <path d=\"M20 6 9 17l-5-5\"></path>\n    </g>\n  </svg>\n  <svg\n    aria-label=\"disabled\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"4\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  >\n    <path d=\"M18 6 6 18\" />\n    <path d=\"m6 6 12 12\" />\n  </svg>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Basic File Input Implementation\nDESCRIPTION: Basic implementation of a file input element using DaisyUI's file-input class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/file-input/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\" class=\"$$file-input\" />\n```\n\n----------------------------------------\n\nTITLE: Radio Tabs-Border with Associated Tab Content in DaisyUI HTML\nDESCRIPTION: Implements tabs with a border style using radio inputs, pairing each tab input with a tab-content div for displayable content. Classes $$tabs, $$tabs-border, $$tab, and $$tab-content are applied; radio group \\\"name\\\" must be unique per instance. Requires DaisyUI, outputs tab groups where content is shown or hidden according to the checked tab.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<!-- name of each tab group should be unique -->\\n<div class=\\\"$$tabs $$tabs-border\\\">\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_2\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 1\\\" />\\n  <div class=\\\"$$tab-content border-base-300 bg-base-100 p-10\\\">Tab content 1</div>\\n\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_2\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 2\\\" checked=\\\"checked\\\" />\\n  <div class=\\\"$$tab-content border-base-300 bg-base-100 p-10\\\">Tab content 2</div>\\n\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_2\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 3\\\" />\\n  <div class=\\\"$$tab-content border-base-300 bg-base-100 p-10\\\">Tab content 3</div>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Disabled Radio Buttons in HTML\nDESCRIPTION: Showcases the implementation of disabled radio buttons where interaction is not permitted, by utilizing the `disabled` attribute.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-11\" class=\"$$radio\" disabled checked=\"checked\" />\n<input type=\"radio\" name=\"radio-11\" class=\"$$radio\" disabled />\n```\n\n----------------------------------------\n\nTITLE: Active State Buttons\nDESCRIPTION: Shows implementation of buttons in active state with various color combinations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-active\">Default</button>\n<button class=\"$$btn $$btn-active $$btn-primary\">Primary</button>\n<button class=\"$$btn $$btn-active $$btn-secondary\">Secondary</button>\n<button class=\"$$btn $$btn-active $$btn-accent\">Accent</button>\n<button class=\"$$btn $$btn-active $$btn-info\">Info</button>\n<button class=\"$$btn $$btn-active $$btn-success\">Success</button>\n<button class=\"$$btn $$btn-active $$btn-warning\">Warning</button>\n<button class=\"$$btn $$btn-active $$btn-error\">Error</button>\n```\n\n----------------------------------------\n\nTITLE: Text Input with Data List Suggestion in HTML\nDESCRIPTION: This example presents a text input paired with a datalist for autocomplete suggestions using the 'input' class. Useful for form fields requiring predefined options, it demonstrates the organization of frequent entries like browser names.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" class=\"$$input\" placeholder=\"Which browser do you use\" list=\"browsers\" />\n<datalist id=\"browsers\">\n  <option value=\"Chrome\"></option>\n  <option value=\"Firefox\"></option>\n  <option value=\"Safari\"></option>\n  <option value=\"Opera\"></option>\n  <option value=\"Edge\"></option>\n</datalist>\n```\n\n----------------------------------------\n\nTITLE: Setting up Tailwind CSS and daisyUI in Stylesheet\nDESCRIPTION: CSS configuration to import Tailwind CSS and enable daisyUI plugin\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Avatar Groups in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create an avatar group using DaisyUI classes. It uses the avatar-group class and negative margin to overlap the avatars.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar-group -space-x-6\">\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n  <div class=\"$$avatar\">\n    <div class=\"w-12\">\n      <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Soft Style Badge Variations\nDESCRIPTION: Badges with soft style modifier applied to different color variants\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-soft $$badge-primary\">Primary</div>\n<div class=\"$$badge $$badge-soft $$badge-secondary\">Secondary</div>\n<div class=\"$$badge $$badge-soft $$badge-accent\">Accent</div>\n<div class=\"$$badge $$badge-soft $$badge-info\">Info</div>\n<div class=\"$$badge $$badge-soft $$badge-success\">Success</div>\n<div class=\"$$badge $$badge-soft $$badge-warning\">Warning</div>\n<div class=\"$$badge $$badge-soft $$badge-error\">Error</div>\n```\n\n----------------------------------------\n\nTITLE: Disabled Button States\nDESCRIPTION: Shows two methods of implementing disabled buttons: using the disabled attribute and using a class name.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn\" disabled=\"disabled\">Disabled using attribute</button>\n<button class=\"$$btn $$btn-disabled\" tabindex=\"-1\" role=\"button\" aria-disabled=\"true\">\n  Disabled using class name\n</button>\n```\n\n----------------------------------------\n\nTITLE: Responsive Breadcrumbs with Max-Width\nDESCRIPTION: Breadcrumb navigation with max-width constraint that enables horizontal scrolling when content exceeds container width. Demonstrates responsive behavior with multiple navigation items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/breadcrumbs/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$breadcrumbs max-w-xs text-sm\">\n  <ul>\n    <li>Long text 1</li>\n    <li>Long text 2</li>\n    <li>Long text 3</li>\n    <li>Long text 4</li>\n    <li>Long text 5</li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Theme Controller with Radio Inputs in HTML\nDESCRIPTION: This HTML snippet creates a theme controller using a group of radio inputs. Users can select a theme option from Default, Retro, Cyberpunk, Valentine, or Aqua through radio inputs. Each radio input is visually identifiable with a class. Dependencies include CSS for styling the radio inputs. Inputs expected are user clicks on radio buttons, and the output is the theme selection value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <label class=\"flex gap-2 cursor-pointer items-center\">\n    <input type=\"radio\" name=\"theme-radios\" class=\"$$radio $$radio-sm $$theme-controller\" value=\"default\"/>\n    Default\n  </label>\n  <label class=\"flex gap-2 cursor-pointer items-center\">\n    <input type=\"radio\" name=\"theme-radios\" class=\"$$radio $$radio-sm $$theme-controller\" value=\"retro\"/>\n    Retro\n  </label>\n  <label class=\"flex gap-2 cursor-pointer items-center\">\n    <input type=\"radio\" name=\"theme-radios\" class=\"$$radio $$radio-sm $$theme-controller\" value=\"cyberpunk\"/>\n    Cyberpunk\n  </label>\n  <label class=\"flex gap-2 cursor-pointer items-center\">\n    <input type=\"radio\" name=\"theme-radios\" class=\"$$radio $$radio-sm $$theme-controller\" value=\"valentine\"/>\n    Valentine\n  </label>\n  <label class=\"flex gap-2 cursor-pointer items-center\">\n    <input type=\"radio\" name=\"theme-radios\" class=\"$$radio $$radio-sm $$theme-controller\" value=\"aqua\"/>\n    Aqua\n  </label>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind CSS and daisyUI to Static Stylesheet - PostCSS\nDESCRIPTION: This snippet includes Tailwind CSS and daisyUI in a PostCSS stylesheet, typically \\'static/styles.css\\'. Using \\'@import\\' and \\'@plugin\\' directives ensures that both frameworks are applied globally. This requires the relevant npm packages and PostCSS processing during the build.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/fresh/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: PostCSS\nCODE:\n```\n@import \\\"tailwindcss\\\";\\n@plugin \\\"daisyui\\\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Different Menu Sizes in DaisyUI\nDESCRIPTION: This code demonstrates various size options for DaisyUI menus from extra small to extra large. Each menu demonstrates a different size class (menu-xs, menu-sm, menu-md, menu-lg, menu-xl) with consistent styling and width.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu $$menu-xs bg-base-200 $$rounded-box w-56\">\n  <li><a>Xsmall 1</a></li>\n  <li><a>Xsmall 2</a></li>\n</ul>\n<ul class=\"$$menu $$menu-sm bg-base-200 $$rounded-box w-56\">\n  <li><a>Small 1</a></li>\n  <li><a>Small 2</a></li>\n</ul>\n<ul class=\"$$menu $$menu-md bg-base-200 $$rounded-box w-56\">\n  <li><a>Medium 1</a></li>\n  <li><a>Medium 2</a></li>\n</ul>\n<ul class=\"$$menu $$menu-lg bg-base-200 $$rounded-box w-56\">\n  <li><a>Large 1</a></li>\n  <li><a>Large 2</a></li>\n</ul>\n<ul class=\"$$menu $$menu-xl bg-base-200 $$rounded-box w-56\">\n  <li><a>Xlarge 1</a></li>\n  <li><a>Xlarge 2</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Card with Bottom Image in HTML using DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a card with the image at the bottom using DaisyUI classes. It includes a title, description, and an image in the figure element at the end of the card.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card bg-base-100 w-96 shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card Title</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n  </div>\n  <figure>\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"\n      alt=\"Shoes\" />\n  </figure>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Radial Progress Bar in JSX with Different Values\nDESCRIPTION: Demonstrates radial progress bars using JSX with varying progress values. Useful for React applications that display progress in a radial format and can implement different value indicators on the same UI element.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<div className=\"$$radial-progress\" style={{\"--$$value\":0} /* as React.CSSProperties */ } \n  aria-valuenow={0} role=\"progressbar\">0%</div>\n\n<div className=\"$$radial-progress\" style={{\"--$$value\":20} /* as React.CSSProperties */ } \naria-valuenow={20} role=\"progressbar\">20%</div>\n\n<div className=\"$$radial-progress\" style={{\"--$$value\":60} /* as React.CSSProperties */ } \n  aria-valuenow={60} role=\"progressbar\">60%</div>\n\n<div className=\"$$radial-progress\" style={{\"--$$value\":80} /* as React.CSSProperties */ } \n  aria-valuenow={80} role=\"progressbar\">80%</div>\n\n<div className=\"$$radial-progress\" style={{\"--$$value\":100} /* as React.CSSProperties */ } \n  aria-valuenow={100} role=\"progressbar\">100%</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Warning-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with warning color styling using the select-warning class. Creates a dropdown styled with the warning theme color for OS selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-warning\">\n  <option disabled selected>Pick an OS</option>\n  <option>Windows</option>\n  <option>MacOS</option>\n  <option>Linux</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick an OS\" className=\"$$select $$select-warning\">\n  <option disabled={true}>Pick an OS</option>\n  <option>Windows</option>\n  <option>MacOS</option>\n  <option>Linux</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Disabled Checkbox States\nDESCRIPTION: Implementation of disabled checkboxes in both checked and unchecked states\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"$$checkbox\" disabled />\n<input type=\"checkbox\" class=\"$$checkbox\" disabled checked=\"checked\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Different Textarea Sizes with DaisyUI HTML\nDESCRIPTION: This snippet demonstrates how to control the size of the textarea component using DaisyUI's size modifier classes: `textarea-xs`, `textarea-sm`, `textarea-md`, `textarea-lg`, and `textarea-xl`. Each class is applied alongside the base `textarea` class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/textarea/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<textarea placeholder=\"Bio\" class=\"$$textarea $$textarea-xs\"></textarea>\n\n<textarea placeholder=\"Bio\" class=\"$$textarea $$textarea-sm\"></textarea>\n\n<textarea placeholder=\"Bio\" class=\"$$textarea $$textarea-md\"></textarea>\n\n<textarea placeholder=\"Bio\" class=\"$$textarea $$textarea-lg\"></textarea>\n\n<textarea placeholder=\"Bio\" class=\"$$textarea $$textarea-xl\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Custom Colored Collapse with Checkbox\nDESCRIPTION: Implements a collapse component with custom color transitions using Tailwind CSS peer utilities.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-base-100 border-base-300 collapse border\">\n  <input type=\"checkbox\" class=\"peer\" />\n  <div class=\"collapse-title bg-primary text-primary-content peer-checked:bg-secondary peer-checked:text-secondary-content\">\n    How do I create an account?\n  </div>\n  <div class=\"collapse-content bg-primary text-primary-content peer-checked:bg-secondary peer-checked:text-secondary-content\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Cally Calendar with daisyUI\nDESCRIPTION: Example of implementing a Cally web component calendar with daisyUI styling. Includes SVG icons for navigation and basic calendar structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<calendar-date class=\"$$cally bg-base-100 border border-base-300 shadow-lg rounded-box\">\n  <svg aria-label=\"Previous\" class=\"fill-current size-4\" slot=\"previous\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M15.75 19.5 8.25 12l7.5-7.5\"></path></svg>\n  <svg aria-label=\"Next\" class=\"fill-current size-4\" slot=\"next\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\"></path></svg>\n  <calendar-month></calendar-month>\n</calendar-date>\n```\n\n----------------------------------------\n\nTITLE: Creating Code Mockup with DaisyUI\nDESCRIPTION: This code demonstrates how to display code in a box that resembles a code editor using DaisyUI's mockup-code component. It allows for prefixes before each line and syntax highlighting.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_41\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mockup-code\">\n  <pre data-prefix=\"$\"><code>npm i daisyui</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Horizontal Steps with DaisyUI\nDESCRIPTION: Creates a horizontal steps component showing a process with some completed steps. The 'step-primary' class is used to mark completed steps.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$steps\">\n  <li class=\"$$step $$step-primary\">Register</li>\n  <li class=\"$$step $$step-primary\">Choose plan</li>\n  <li class=\"$$step\">Purchase</li>\n  <li class=\"$$step\">Receive Product</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Running the Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server and run the project locally.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Circular Skeleton with Content in DaisyUI\nDESCRIPTION: Creates a complex skeleton loading interface with a circular avatar placeholder and text placeholders. It demonstrates how to combine multiple skeleton elements in a layout.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/skeleton/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-52 flex-col gap-4\">\n  <div class=\"flex items-center gap-4\">\n    <div class=\"$$skeleton h-16 w-16 shrink-0 rounded-full\"></div>\n    <div class=\"flex flex-col gap-4\">\n      <div class=\"$$skeleton h-4 w-20\"></div>\n      <div class=\"$$skeleton h-4 w-28\"></div>\n    </div>\n  </div>\n  <div class=\"$$skeleton h-32 w-full\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Making Tailwind CSS Executable on Unix-based Systems\nDESCRIPTION: Command to make the downloaded Tailwind CSS file executable on Linux and MacOS systems using the chmod command.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nchmod +x static/tailwindcss\n```\n\n----------------------------------------\n\nTITLE: Building Responsive Steps in DaisyUI\nDESCRIPTION: Creates a responsive steps component that changes orientation based on screen size. It's vertical on small screens and horizontal on large screens using Tailwind's responsive prefix (lg:).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$steps $$steps-vertical lg:$$steps-horizontal\">\n  <li class=\"$$step $$step-primary\">Register</li>\n  <li class=\"$$step $$step-primary\">Choose plan</li>\n  <li class=\"$$step\">Purchase</li>\n  <li class=\"$$step\">Receive Product</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Bottom-Positioned Lifted Tabs using HTML\nDESCRIPTION: This snippet shows how to create DaisyUI lifted tabs (`tabs-lift`) that are positioned at the bottom of their container using the `tabs-bottom` class. Radio inputs (`<input type=\"radio\">`) with the `tab` class define the tabs, using the `aria-label` attribute for the visible tab text. The content for each tab is placed in a `div` with the `tab-content` class immediately following its corresponding input. Requires the DaisyUI CSS framework.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!-- name of each tab group should be unique -->\n<div class=\"$$tabs $$tabs-lift $$tabs-bottom\">\n  <input type=\"radio\" name=\"my_tabs_5\" class=\"$$tab\" aria-label=\"Tab 1\" />\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 1</div>\n\n  <input type=\"radio\" name=\"my_tabs_5\" class=\"$$tab\" aria-label=\"Tab 2\" checked=\"checked\" />\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 2</div>\n\n  <input type=\"radio\" name=\"my_tabs_5\" class=\"$$tab\" aria-label=\"Tab 3\" />\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 3</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Grouping Elements Vertically with DaisyUI Join - HTML\nDESCRIPTION: This snippet groups buttons in a vertical layout using DaisyUI by combining the join and join-vertical classes. Each button receives the join-item class to participate in the vertical group. The parent must have both join and join-vertical, and DaisyUI must be properly installed for the styling to take effect.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/join/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"$$join $$join-vertical\\\">\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Clearable DaisyUI Rating with `rating-hidden` in HTML\nDESCRIPTION: Shows how to add a feature to clear or reset the rating selection in a DaisyUI rating component. This is achieved by adding an initial radio input with the 'rating-hidden' class before the actual star inputs. This hidden input, typically triggered by clicking the space before the first star, allows the user to deselect all stars. The example uses 'rating-lg' for size and standard 'mask mask-star-2' for the visible rating inputs.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating $$rating-lg\">\n  <input type=\"radio\" name=\"rating-10\" class=\"$$rating-hidden\" aria-label=\"clear\" />\n  <input type=\"radio\" name=\"rating-10\" class=\"$$mask $$mask-star-2\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-10\" class=\"$$mask $$mask-star-2\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-10\" class=\"$$mask $$mask-star-2\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-10\" class=\"$$mask $$mask-star-2\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-10\" class=\"$$mask $$mask-star-2\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Utilizing Primary Theme for Radio Buttons\nDESCRIPTION: Illustrates how to apply a primary color theme to radio buttons using DaisyUI. The `radio-primary` class is employed to reflect the primary theme on these buttons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-4\" class=\"$$radio $$radio-primary\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-4\" class=\"$$radio $$radio-primary\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Card Component in HTML with DaisyUI\nDESCRIPTION: Implements a card component to group and display content. Supports modifiers for style, layout, and size.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card {MODIFIER}\">\n  <figure><img src=\"{image-url}\" alt=\"{alt-text}\" /></figure>\n  <div class=\"card-body\">\n    <h2 class=\"card-title\">{title}</h2>\n    <p>{CONTENT}</p>\n    <div class=\"card-actions\">{actions}</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Secondary Checkbox in DaisyUI with HTML\nDESCRIPTION: Example of applying the secondary color scheme to a checkbox input using DaisyUI modifier classes. The checkbox-secondary class ensures appropriate styling for the checkbox component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/colors/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"checkbox checkbox-secondary\" />\n```\n\n----------------------------------------\n\nTITLE: Opening Modal with Anchor Link and DaisyUI in HTML (Legacy Method)\nDESCRIPTION: This legacy snippet demonstrates controlling modal visibility by using anchor links that adjust the URL hash, showing the modal when the URL matches the modal's ID. Clicking an action can close the modal by changing the hash again. It uses DaisyUI for modal appearance and structure, with an anchor link as the trigger. Dependencies include DaisyUI, and the modal may have limited compatibility with SPA frameworks; page scroll behavior may be affected. Inputs are user clicks on anchor links; outputs are modal display and anchoring.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<!-- The button to open modal -->\\n<a href=\\\"#my_modal_8\\\" class=\\\"$$btn\\\">open modal</a>\\n\\n<!-- Put this part before </body> tag -->\\n<div class=\\\"$$modal\\\" role=\\\"dialog\\\" id=\\\"my_modal_8\\\">\\n  <div class=\\\"$$modal-box\\\">\\n    <h3 class=\\\"text-lg font-bold\\\">Hello!</h3>\\n    <p class=\\\"py-4\\\">This modal works with anchor links</p>\\n    <div class=\\\"$$modal-action\\\">\\n      <a href=\\\"#\\\" class=\\\"$$btn\\\">Yay!</a>\\n    </div>\\n  </div>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Error-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with error color styling using the select-error class. Creates a dropdown styled with the error theme color for AI model selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-error\">\n  <option disabled selected>Pick an AI Model</option>\n  <option>GPT-4</option>\n  <option>Claude</option>\n  <option>Llama</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick an AI Model\" className=\"$$select $$select-error\">\n  <option disabled={true}>Pick an AI Model</option>\n  <option>GPT-4</option>\n  <option>Claude</option>\n  <option>Llama</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal Dialog with Custom Width in HTML\nDESCRIPTION: Creates a modal dialog with custom width using Tailwind CSS utility classes. The modal box is set to 11/12 of the screen width with a maximum width of 5xl.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn\" onclick=\"my_modal_4.showModal()\">open modal</button>\n<dialog id=\"my_modal_4\" class=\"$$modal\">\n  <div class=\"$$modal-box w-11/12 max-w-5xl\">\n    <h3 class=\"text-lg font-bold\">Hello!</h3>\n    <p class=\"py-4\">Click the button below to close</p>\n    <div class=\"$$modal-action\">\n      <form method=\"dialog\">\n        <!-- if there is a button, it will close the modal -->\n        <button class=\"$$btn\">Close</button>\n      </form>\n    </div>\n  </div>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Implementing Checkbox-based Collapse Component\nDESCRIPTION: Creates a collapse component that toggles via checkbox interaction. Requires clicking again to close the content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"collapse bg-base-100 border-base-300 border\">\n  <input type=\"checkbox\" />\n  <div class=\"collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"collapse-content text-sm\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Accent-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with accent color styling using the select-accent class. Creates a dropdown styled with the accent theme color for color scheme selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-accent\">\n  <option selected disabled>Color scheme</option>\n  <option>Light mode</option>\n  <option>Dark mode</option>\n  <option>System</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Color scheme\" class=\"$$select $$select-accent\">\n  <option disabled={true}>Color scheme</option>\n  <option>Light mode</option>\n  <option>Dark mode</option>\n  <option>System</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Warning Themed Radio Buttons Implementation\nDESCRIPTION: Portrays radio buttons styled with warning theme under DaisyUI's styling system. Utilizes the `radio-warning` class for a warning-highlighted appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-8\" class=\"$$radio $$radio-warning\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-8\" class=\"$$radio $$radio-warning\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Calendar Components in HTML with DaisyUI\nDESCRIPTION: Creates calendar components compatible with Cally, Pikaday, and React Day Picker libraries.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<calendar-date class=\"cally\">{CONTENT}</calendar-date>\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" class=\"input pika-single\">\n```\n\nLANGUAGE: html\nCODE:\n```\n<DayPicker className=\"react-day-picker\">\n```\n\n----------------------------------------\n\nTITLE: Creating Loading Dots Animation in HTML with DaisyUI\nDESCRIPTION: This code shows how to implement loading dots animations of different sizes using DaisyUI classes. It includes examples for extra small, small, medium, large, and extra large dot animations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/loading/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$loading $$loading-dots $$loading-xs\"></span>\n<span class=\"$$loading $$loading-dots $$loading-sm\"></span>\n<span class=\"$$loading $$loading-dots $$loading-md\"></span>\n<span class=\"$$loading $$loading-dots $$loading-lg\"></span>\n<span class=\"$$loading $$loading-dots $$loading-xl\"></span>\n```\n\n----------------------------------------\n\nTITLE: Creating Horizontal Menu with DaisyUI\nDESCRIPTION: This code demonstrates how to create a horizontal menu using DaisyUI. The menu-horizontal modifier changes the default vertical orientation to horizontal.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_39\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"menu menu-horizontal\">\n  <li><button>Item</button></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Using Semantic Color Names in HTML with DaisyUI\nDESCRIPTION: Example of using semantic color utility classes in daisyUI. This approach uses purpose-based color names that automatically adapt to theme changes and dark mode without additional class names.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/colors/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-base-200\">\n  <div class=\"bg-base-100 border-base-300 text-base-content\">\n    This is dark text on a light background,\n    which switches to light text on a dark background in dark mode.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Dock Component with Variable Class Placeholders - DaisyUI Tailwind CSS - HTML\nDESCRIPTION: This snippet showcases an HTML dock navigation element where DaisyUI dock-related class names are replaced by variable references (e.g., $$dock, $$dock-label, $$dock-active) intended for dynamic injection at build-time or via a template engine. The code maintains the same SVG icon and button structure, supporting configuration or extension of class names. Dependencies include a build pipeline or tooling capable of replacing these placeholder strings. Key limitations are the need for correct variable expansion prior to rendering and reliance on Tailwind CSS and DaisyUI for class semantics.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock bg-neutral text-neutral-content\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n    <span class=\"$$dock-label\">Home</span>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n    <span class=\"$$dock-label\">Inbox</span>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n    <span class=\"$$dock-label\">Settings</span>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Extra Large Size Dock Component with DaisyUI\nDESCRIPTION: This snippet shows how to create an extra large-sized dock navigation component using DaisyUI's dock and dock-xl classes. It features the same three navigation buttons as the large variant but with increased sizing for better visibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock $$dock-xl\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n    <span class=\"$$dock-label\">Home</span>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n    <span class=\"$$dock-label\">Inbox</span>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n    <span class=\"$$dock-label\">Settings</span>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Color in Radial Progress Using JSX\nDESCRIPTION: Provides a JSX code sample for setting custom colors on a radial progress bar, making use of custom properties for visual customization in React projects.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<div className=\"$$radial-progress text-primary\" style={{ \"--$$value\": 70 } /* as React.CSSProperties */ } aria-valuenow={70} role=\"progressbar\">\n  70%\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Dropdown Component\nDESCRIPTION: Multiple HTML implementations for dropdown menus using different approaches: details/summary, popover API, and CSS focus.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_23\n\nLANGUAGE: html\nCODE:\n```\n<details class=\"dropdown\">\n  <summary>Button</summary>\n  <ul class=\"dropdown-content\">{CONTENT}</ul>\n</details>\n```\n\nLANGUAGE: html\nCODE:\n```\n<button popovertarget=\"{id}\" style=\"anchor-name:--{anchor}\">{button}</button>\n<ul class=\"dropdown-content\" popover id=\"{id}\" style=\"position-anchor:--{anchor}\">{CONTENT}</ul>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"dropdown\">\n  <div tabindex=\"0\" role=\"button\">Button</div>\n  <ul tabindex=\"0\" class=\"dropdown-content\">{CONTENT}</ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Avatars with Custom Sizes in HTML using DaisyUI\nDESCRIPTION: This code snippet shows how to create avatars of different sizes using DaisyUI classes. It demonstrates four different sizes using width classes like w-32, w-20, w-16, and w-8.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar\">\n  <div class=\"w-32 rounded\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n<div class=\"$$avatar\">\n  <div class=\"w-20 rounded\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\"\n      alt=\"Tailwind-CSS-Avatar-component\" />\n  </div>\n</div>\n<div class=\"$$avatar\">\n  <div class=\"w-16 rounded\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\"\n      alt=\"Tailwind-CSS-Avatar-component\" />\n  </div>\n</div>\n<div class=\"$$avatar\">\n  <div class=\"w-8 rounded\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\"\n      alt=\"Tailwind-CSS-Avatar-component\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Aligning Dropdown to End of Button in HTML\nDESCRIPTION: This code demonstrates how to align a dropdown menu to the end of the button horizontally using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-end\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click  ⬇️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Heart-shaped Rating with Multiple Colors\nDESCRIPTION: Rating component using heart-shaped masks with different background colors for each rating level. The gap-1 class adds spacing between the rating items for better visual separation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating gap-1\">\n  <input type=\"radio\" name=\"rating-3\" class=\"$$mask $$mask-heart bg-red-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-3\" class=\"$$mask $$mask-heart bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-3\" class=\"$$mask $$mask-heart bg-yellow-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-3\" class=\"$$mask $$mask-heart bg-lime-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-3\" class=\"$$mask $$mask-heart bg-green-400\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Fieldset with Multiple Inputs in HTML\nDESCRIPTION: Illustrates a fieldset containing multiple input fields for page details. Includes labels for each input and uses DaisyUI classes for consistent styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/fieldset/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4\">\n  <legend class=\"$$fieldset-legend\">Page details</legend>\n\n  <label class=\"$$label\">Title</label>\n  <input type=\"text\" class=\"$$input\" placeholder=\"My awesome page\" />\n\n  <label class=\"$$label\">Slug</label>\n  <input type=\"text\" class=\"$$input\" placeholder=\"my-awesome-page\" />\n\n  <label class=\"$$label\">Author</label>\n  <input type=\"text\" class=\"$$input\" placeholder=\"Name\" />\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Table with Hover Effect\nDESCRIPTION: Implementation of a table with hover effect on specific rows using the hover:bg-base-300 class for interactive highlighting.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"$$table\">\n    <!-- head -->\n    <thead>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Favorite Color</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- row 1 -->\n      <tr>\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Blue</td>\n      </tr>\n      <!-- row 2 -->\n      <tr class=\"hover:bg-base-300\">\n        <th>2</th>\n        <td>Hart Hagerty</td>\n        <td>Desktop Support Technician</td>\n        <td>Purple</td>\n      </tr>\n      <!-- row 3 -->\n      <tr>\n        <th>3</th>\n        <td>Brice Swyre</td>\n        <td>Tax Accountant</td>\n        <td>Red</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Main Window in Electron\nDESCRIPTION: Creates a main.js file to initialize the Electron app with a BrowserWindow instance. This script loads the index.html file as the main content of the window.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nconst { app, BrowserWindow } = require('electron')\n\nconst createWindow = () => {\n  const win = new BrowserWindow()\n  win.loadFile('src/index.html')\n}\n\napp.whenReady().then(() => {\n  createWindow()\n})\n```\n\n----------------------------------------\n\nTITLE: Displaying Tooltips at the Bottom Placement (HTML)\nDESCRIPTION: This snippet demonstrates bottom-placement of a tooltip by adding 'tooltip-bottom' alongside 'tooltip-open' and 'tooltip'. Use the 'data-tip' attribute for tooltip message. Requires daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-bottom\" data-tip=\"hello\">\n  <button class=\"$$btn\">Bottom</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Colors to DaisyUI Steps\nDESCRIPTION: Demonstrates applying different color schemes to steps using DaisyUI's color classes. This example uses 'step-info' and 'step-error' classes to color-code different types of steps.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$steps\">\n  <li class=\"$$step $$step-info\">Fly to moon</li>\n  <li class=\"$$step $$step-info\">Shrink the moon</li>\n  <li class=\"$$step $$step-info\">Grab the moon</li>\n  <li class=\"$$step $$step-error\" data-content=\"?\">Sit on toilet</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Defining Vertical Stats Components in HTML\nDESCRIPTION: This snippet illustrates the use of daisyUI classes to create a vertically-aligned statistics component. The component showcases statistical data points like downloads, new users, and registrations, each with associated titles, values, and descriptions. No external dependencies are required beyond daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats $$stats-vertical shadow\">\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">Downloads</div>\n    <div class=\"$$stat-value\">31K</div>\n    <div class=\"$$stat-desc\">Jan 1st - Feb 1st</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">New Users</div>\n    <div class=\"$$stat-value\">4,200</div>\n    <div class=\"$$stat-desc\">↗︎ 400 (22%)</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">New Registers</div>\n    <div class=\"$$stat-value\">1,200</div>\n    <div class=\"$$stat-desc\">↘︎ 90 (14%)</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Avatar with Status Indicator in DaisyUI\nDESCRIPTION: Shows how to add a status indicator to an avatar image.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar $$indicator\">\n  <span class=\"$$indicator-item $$badge $$badge-secondary\">Online</span>\n  <div class=\"h-20 w-20 rounded-lg\">\n    <img\n      alt=\"Tailwind CSS examples\"\n      src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Info Themed Radio Buttons Integration\nDESCRIPTION: Features radio buttons using DaisyUI's 'info' theme via the `radio-info` class, suitable for informational states in a UI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-9\" class=\"$$radio $$radio-info\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-9\" class=\"$$radio $$radio-info\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Avatar Component in HTML with DaisyUI\nDESCRIPTION: Implements an avatar component to show a thumbnail. Supports modifiers for online/offline status and placeholders.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"avatar {MODIFIER}\">\n  <div>\n    <img src=\"{image-url}\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Clock-style Countdown in HTML\nDESCRIPTION: Shows how to create a clock-style countdown with hours, minutes, and seconds. This example demonstrates using multiple Countdown components together to create a more complex display.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$countdown font-mono text-2xl\">\n  <span style=\"--$$value:10;\" aria-live=\"polite\" aria-label=\"10\">10</span>\n  h\n  <span style=\"--$$value:24;\" aria-live=\"polite\" aria-label=\"24\">24</span>\n  m\n  <span style=\"--$$value:59;\" aria-live=\"polite\" aria-label=\"59\">59</span>\n  s\n</span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Colored Dividers in DaisyUI\nDESCRIPTION: Examples of dividers with different color options available in DaisyUI. Shows all theme color variants including neutral, primary, secondary, accent, success, warning, info, and error colors.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full flex-col\">\n  <div class=\"$$divider\">Default</div>\n  <div class=\"$$divider $$divider-neutral\">Neutral</div>\n  <div class=\"$$divider $$divider-primary\">Primary</div>\n  <div class=\"$$divider $$divider-secondary\">Secondary</div>\n  <div class=\"$$divider $$divider-accent\">Accent</div>\n  <div class=\"$$divider $$divider-success\">Success</div>\n  <div class=\"$$divider $$divider-warning\">Warning</div>\n  <div class=\"$$divider $$divider-info\">Info</div>\n  <div class=\"$$divider $$divider-error\">Error</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Masked Avatars in HTML using DaisyUI\nDESCRIPTION: This code demonstrates how to apply different mask styles to avatars using DaisyUI classes. It shows examples of squircle, hexagon, and triangle masks.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar\">\n  <div class=\"$$mask $$mask-squircle w-24\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n<div class=\"$$avatar\">\n  <div class=\"$$mask $$mask-hexagon w-24\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n<div class=\"$$avatar\">\n  <div class=\"$$mask $$mask-triangle w-24\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Icons to Steps with DaisyUI\nDESCRIPTION: Demonstrates how to add custom content to steps using the 'step-icon' class. This example uses emoji icons, but could be used with any custom HTML content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$steps\">\n  <li class=\"$$step $$step-neutral\">\n    <span class=\"$$step-icon\">😕</span>Step 1\n  </li>\n  <li class=\"$$step $$step-neutral\">\n    <span class=\"$$step-icon\">😃</span>Step 2\n  </li>\n  <li class=\"$$step\">\n    <span class=\"$$step-icon\">😍</span>Step 3\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Toast with Center-Middle Position\nDESCRIPTION: Shows a toast positioned at the center of the page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-center $$toast-middle\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Browser Mockup with Border\nDESCRIPTION: Creates a browser window mockup with a border and toolbar containing an address bar. The mockup includes a centered content area with a top border.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-browser/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-browser border-base-300 border w-full\">\n  <div class=\"$$mockup-browser-toolbar\">\n    <div class=\"$$input\">https://daisyui.com</div>\n  </div>\n  <div class=\"grid place-content-center border-t border-base-300 h-80\">Hello!</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring deno.json for Node Modules Support - JSON\nDESCRIPTION: This code snippet shows a diff for the \\'deno.json\\' configuration file. It adds the \\'nodeModulesDir\\' property set to \\'auto\\', which allows Deno to use node_modules for npm compatibility. This is essential when importing npm packages like Tailwind CSS or daisyUI. No additional dependencies needed beyond a Fresh project and package dependencies.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/fresh/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n+ \\\"nodeModulesDir\\\": \\\"auto\\\",\\n  \\\"lock\\\": false,\\n\\n  //...rest of the file\\n\\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Top-Opening Centered Dropdown in HTML\nDESCRIPTION: This snippet shows how to create a dropdown menu that opens from the top and is centered horizontally using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-top $$dropdown-center\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click ⬆️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Centering a Card with Neutral Colors Using DaisyUI in HTML\nDESCRIPTION: This code snippet illustrates how to center content within a card component and apply neutral colors using DaisyUI and HTML. The card displays centered text and has buttons for user responses, styled with neutral colors. It aims to create a balanced design and requires no extra dependencies.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card bg-neutral text-neutral-content w-96\">\n  <div class=\"$$card-body items-center text-center\">\n    <h2 class=\"$$card-title\">Cookies!</h2>\n    <p>We are using cookies for no reason.</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Accept</button>\n      <button class=\"$$btn $$btn-ghost\">Deny</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Browser Mockup with Background Color\nDESCRIPTION: Creates a browser window mockup with a background color, border, and toolbar containing an address bar. The mockup includes a centered content area.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-browser/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-browser border border-base-300 w-full\">\n  <div class=\"$$mockup-browser-toolbar\">\n    <div class=\"$$input\">https://daisyui.com</div>\n  </div>\n  <div class=\"grid place-content-center h-80\">Hello!</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Designing Radio Buttons with Success Theme\nDESCRIPTION: This snippet applies the 'success' theme to radio buttons using DaisyUI's `radio-success` class for a green-styled appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-7\" class=\"$$radio $$radio-success\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-7\" class=\"$$radio $$radio-success\" />\n```\n\n----------------------------------------\n\nTITLE: Info Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with info color styling using link-info class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-info\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Basic Breadcrumbs Implementation in HTML\nDESCRIPTION: Simple breadcrumb navigation implementation with text-only links. Uses DaisyUI's breadcrumbs class for styling and includes three navigation levels.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/breadcrumbs/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$breadcrumbs text-sm\">\n  <ul>\n    <li><a>Home</a></li>\n    <li><a>Documents</a></li>\n    <li>Add Document</li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal Dialog with Close Button at Corner in React/JSX\nDESCRIPTION: Creates a modal dialog in React/JSX with a close button (X) positioned at the top-right corner. The modal can be closed using the X button or the ESC key.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/modal/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: JSX\nCODE:\n```\n{/* You can open the modal using document.getElementById('ID').showModal() method */}\n<button className=\"$$btn\" onClick={()=>document.getElementById('my_modal_3').showModal()}>open modal</button>\n<dialog id=\"my_modal_3\" className=\"$$modal\">\n  <div className=\"$$modal-box\">\n    <form method=\"dialog\">\n      {/* if there is a button in form, it will close the modal */}\n      <button className=\"$$btn $$btn-sm $$btn-circle $$btn-ghost absolute right-2 top-2\">✕</button>\n    </form>\n    <h3 className=\"font-bold text-lg\">Hello!</h3>\n    <p className=\"py-4\">Press ESC key or click on ✕ button to close</p>\n  </div>\n</dialog>\n```\n\n----------------------------------------\n\nTITLE: Toggle with Custom Colors\nDESCRIPTION: Demonstrates how to implement a toggle with custom colors using Tailwind CSS classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<input\n  type=\"checkbox\"\n  checked=\"checked\"\n  class=\"$$toggle border-indigo-600 bg-indigo-500 checked:border-orange-500 checked:bg-orange-400 checked:text-orange-800\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Indicator Positioning with DaisyUI in HTML\nDESCRIPTION: This snippet shows how to implement responsive positioning for indicators using DaisyUI. The indicator changes position based on screen resolution using Tailwind's responsive prefixes (sm, md, lg, xl), moving from start position to different positions as the viewport size changes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$indicator\">\n  <span\n    class=\"$$indicator-item $$indicator-start sm:$$indicator-middle md:$$indicator-bottom lg:$$indicator-center xl:$$indicator-end $$badge $$badge-secondary\"></span>\n  <div class=\"bg-base-300 grid h-32 w-32 place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Divider Component in HTML with DaisyUI\nDESCRIPTION: Creates a divider component to separate content vertically or horizontally. Supports modifiers for color, direction, and text placement.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_20\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"divider {MODIFIER}\">{text}</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Fieldset with Legend and Label in HTML\nDESCRIPTION: Demonstrates a basic fieldset structure with a legend, input field, and label. Uses DaisyUI classes for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/fieldset/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <legend class=\"$$fieldset-legend\">Page title</legend>\n  <input type=\"text\" class=\"$$input\" placeholder=\"My awesome page\" />\n  <p class=\"$$label\">You can edit page title later on from settings</p>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Number Input with Range Validation in DaisyUI\nDESCRIPTION: A number input field with range validation (1-10). Includes validator class and hint message for invalid inputs.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<input\n  type=\"number\"\n  class=\"$$input $$validator\"\n  required\n  placeholder=\"Type a number between 1 to 10\"\n  min=\"1\"\n  max=\"10\"\n  title=\"Must be between be 1 to 10\"\n/>\n<p class=\"$$validator-hint\">Must be between be 1 to 10</p>\n```\n\n----------------------------------------\n\nTITLE: Declaring Supported Editors/LLMs Array - JavaScript\nDESCRIPTION: Specifies an array of supported code editors and LLMs, each with name and URL slug, used for dynamic UI rendering. This constant is referenced within the Svelte component to generate links and display options. It requires no external dependencies; each object includes a 'name' for display and a 'slug' for navigation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst editors = [\n  { name: \"VSCode\", slug: \"vscode\" },\n  { name: \"Cursor\", slug: \"cursor\" },\n  { name: \"Zed\", slug: \"zed\" },\n  { name: \"Windsurf\", slug: \"windsurf\" },\n  { name: \"Claude Desktop\", slug: \"claude\" },\n  { name: \"ChatGPT\", slug: \"chatgpt\" },\n  { name: \"Gemini\", slug: \"gemini\" },\n  { name: \"Grok\", slug: \"grok\" },\n]\n```\n\n----------------------------------------\n\nTITLE: Theme Toggle Implementation\nDESCRIPTION: Basic theme toggle implementation using a checkbox input with theme-controller class\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" value=\"synthwave\" class=\"$$toggle $$theme-controller\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Accent Color Progress Bars with DaisyUI\nDESCRIPTION: This code demonstrates the creation of progress bars with an accent color theme using DaisyUI classes. It includes various progress bars with different completion levels, all styled with the accent color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-accent w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-accent w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-accent w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-accent w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-accent w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Defining Background and Border in Radial Progress with JSX\nDESCRIPTION: Offers a JSX example of a radial progress component with additional background and border customization, essential for creating visually distinct progress bars in React applications.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<div\n  className=\"$$radial-progress bg-primary text-primary-content border-primary border-4\"\n  style={{ \"--$$value\": 70 } /* as React.CSSProperties */ } aria-valuenow={70} role=\"progressbar\">\n  70%\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Collapse Component in HTML with DaisyUI\nDESCRIPTION: Implements a collapse component for showing and hiding content. Supports modifiers for style and default state.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_17\n\nLANGUAGE: html\nCODE:\n```\n<div tabindex=\"0\" class=\"collapse {MODIFIER}\">\n  <div class=\"collapse-title\">{title}</div>\n  <div class=\"collapse-content\">{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Filter without HTML Form\nDESCRIPTION: Alternative implementation of the filter component without using HTML form, suitable for scenarios where form elements cannot be used. Uses a special filter-reset class for the reset functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/filter/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$filter\">\n  <input class=\"$$btn $$filter-reset\" type=\"radio\" name=\"metaframeworks\" aria-label=\"All\"/>\n  <input class=\"$$btn\" type=\"radio\" name=\"metaframeworks\" aria-label=\"Sveltekit\"/>\n  <input class=\"$$btn\" type=\"radio\" name=\"metaframeworks\" aria-label=\"Nuxt\"/>\n  <input class=\"$$btn\" type=\"radio\" name=\"metaframeworks\" aria-label=\"Next.js\"/>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Text Input with Label and Icon in HTML\nDESCRIPTION: This code snippet shows how to create text inputs that include labels and icons using SVG. It includes the 'input' class for styling and demonstrates how to incorporate multiple elements within an input label. This pattern is useful for interfaces requiring additional context or controls within text inputs.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$input\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n      <path d=\"m21 21-4.3-4.3\"></path>\n    </g>\n  </svg>\n  <input type=\"search\" class=\"grow\" placeholder=\"Search\" />\n  <kbd class=\"$$kbd $$kbd-sm\">⌘</kbd>\n  <kbd class=\"$$kbd $$kbd-sm\">K</kbd>\n</label>\n<label class=\"$$input\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <path d=\"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\"></path>\n      <path d=\"M14 2v4a2 2 0 0 0 2 2h4\"></path>\n    </g>\n  </svg>\n  <input type=\"text\" class=\"grow\" placeholder=\"index.php\" />\n</label>\n<label class=\"$$input\">\n  Path\n  <input type=\"text\" class=\"grow\" placeholder=\"src/app/\" />\n  <span class=\"$$badge $$badge-neutral $$badge-xs\">Optional</span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Adding Badges to Buttons with DaisyUI in HTML\nDESCRIPTION: This snippet illustrates how to add badges to buttons using DaisyUI classes. It showcases two examples: a default badge and a secondary badge, both integrated within button elements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn\">\n  Inbox <div class=\"$$badge $$badge-sm\">+99</div>\n</button>\n\n<button class=\"$$btn\">\n  Inbox <div class=\"$$badge $$badge-sm $$badge-secondary\">+99</div>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Timeline with Alternating Sides using DaisyUI\nDESCRIPTION: This code snippet demonstrates how to create a vertical timeline with entries alternating between left and right sides. It uses the timeline, timeline-vertical, timeline-start, timeline-end, timeline-middle, and timeline-box classes from DaisyUI to structure the timeline and position elements correctly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Styled Fieldset with Background and Border in HTML\nDESCRIPTION: Shows a fieldset with additional styling including background color, border, and rounded corners. Uses DaisyUI and custom utility classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/fieldset/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4\">\n  <legend class=\"$$fieldset-legend\">Page title</legend>\n  <input type=\"text\" class=\"$$input\" placeholder=\"My awesome page\" />\n  <p class=\"$$label\">You can edit page title later on from settings</p>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Creating Labeled Countdown Grid in HTML\nDESCRIPTION: Demonstrates how to create a grid layout of countdown timers with labels. This example shows how to combine multiple Countdown components with custom layouts and labels for a comprehensive timer display.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid auto-cols-max grid-flow-col gap-5 text-center\">\n  <div class=\"flex flex-col\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:15;\" aria-live=\"polite\" aria-label=\"15\">15</span>\n    </span>\n    days\n  </div>\n  <div class=\"flex flex-col\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:10;\" aria-live=\"polite\" aria-label=\"10\">10</span>\n    </span>\n    hours\n  </div>\n  <div class=\"flex flex-col\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:24;\" aria-live=\"polite\" aria-label=\"24\">24</span>\n    </span>\n    min\n  </div>\n  <div class=\"flex flex-col\">\n    <span class=\"$$countdown font-mono text-5xl\">\n      <span style=\"--$$value:59;\" aria-live=\"polite\" aria-label=\"59\">59</span>\n    </span>\n    sec\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating Card Border Class in daisyUI 5\nDESCRIPTION: Shows how to update the card border class from 'card-bordered' to 'card-border' in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"card card-bordered\">\n+ <div class=\"card card-border\">\n```\n\n----------------------------------------\n\nTITLE: Grouping Radio Inputs as Buttons with DaisyUI Join - HTML\nDESCRIPTION: Demonstrates grouping radio button inputs with button styles using DaisyUI. Each input receives both btn and join-item to look like a button and be styled as part of the group. Radio buttons share a name for exclusivity, and aria-labels support accessibility. DaisyUI installation is required; this pattern is suitable for segmented or toggle button groups.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/join/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"$$join\\\">\\n  <input class=\\\"$$join-item $$btn\\\" type=\\\"radio\\\" name=\\\"options\\\" aria-label=\\\"Radio 1\\\" />\\n  <input class=\\\"$$join-item $$btn\\\" type=\\\"radio\\\" name=\\\"options\\\" aria-label=\\\"Radio 2\\\" />\\n  <input class=\\\"$$join-item $$btn\\\" type=\\\"radio\\\" name=\\\"options\\\" aria-label=\\\"Radio 3\\\" />\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Responsive Grouping with DaisyUI Join - HTML\nDESCRIPTION: This snippet shows a responsive button group that is vertical on small screens (using join-vertical) and switches to horizontal (join-horizontal) on large screens using the lg: prefix. Requires DaisyUI, and the correct responsive class application for layout change. Each child uses join-item within the group container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/join/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\\\"$$join $$join-vertical lg:$$join-horizontal\\\">\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n  <button class=\\\"$$btn $$join-item\\\">Button</button>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Window Mockup with Background\nDESCRIPTION: Implements a window mockup with a background color using DaisyUI's mockup-window class combined with background and border utilities.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-window/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-window bg-base-100 border border-base-300\">\n  <div class=\"grid place-content-center h-80\">Hello!</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Large Text Countdown in HTML\nDESCRIPTION: Demonstrates how to create a countdown with large, monospaced text using additional CSS classes. This example shows how to combine the Countdown component with Tailwind CSS utility classes for styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$countdown font-mono text-6xl\">\n  <span style=\"--$$value:59;\" aria-live=\"polite\" aria-label=\"59\">59</span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Building CSS with Tailwind CLI\nDESCRIPTION: Commands to build the CSS file using the Tailwind CSS executable, with options for watch mode during development and one-time builds for CI/CD. Includes commands for both Unix and Windows systems.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n./static/tailwindcss -i static/input.css -o static/output.css --watch\n# For Windows\nstatic\\tailwindcss.exe -i static\\\\input.css -o static\\\\output.css --watch\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Range Slider in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic range slider using the DaisyUI 'range' class. It sets the minimum, maximum, and default values for the slider.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/range/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a Block Button in DaisyUI (HTML)\nDESCRIPTION: This snippet demonstrates how to create a full-width block button using DaisyUI. The button uses the 'btn' and 'btn-block' classes to span the full width of its container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_15\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"$$btn $$btn-block\">block</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Plus/Minus Icon Collapse\nDESCRIPTION: Adds a plus/minus icon to the collapse component using the collapse-plus modifier class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div tabindex=\"0\" class=\"collapse collapse-plus bg-base-100 border-base-300 border\">\n  <div class=\"collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"collapse-content text-sm\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Radial Progress Bar in HTML\nDESCRIPTION: Demonstrates a radial progress bar in HTML using CSS variables to define the progress value. Requires the use of a `div` with the 'radial-progress' class and the `role=\"progressbar\"` for accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$radial-progress\" style=\"--$$value:70;\" aria-valuenow=\"70\" role=\"progressbar\">70%</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Centered Footer with Logo and Social Icons using DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a centered footer with a logo, company information, and social media icons using DaisyUI and Tailwind CSS classes. It includes a SVG logo, company details, copyright information, and clickable social media icons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer $$footer-horizontal $$footer-center bg-primary text-primary-content p-10\">\n  <aside>\n    <svg\n      width=\"50\"\n      height=\"50\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      class=\"inline-block fill-current\">\n      <path\n        d=\"M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z\"></path>\n    </svg>\n    <p class=\"font-bold\">\n      ACME Industries Ltd.\n      <br />\n      Providing reliable tech since 1992\n    </p>\n    <p>Copyright © {new Date().getFullYear()} - All right reserved</p>\n  </aside>\n  <nav>\n    <div class=\"grid grid-flow-col gap-4\">\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\n        </svg>\n      </a>\n      <a>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current\">\n          <path\n            d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\n        </svg>\n      </a>\n    </div>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Link with Context Example in DaisyUI\nDESCRIPTION: Example showing how to use the link class within a paragraph context to restore normal link appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  Tailwind CSS resets the style of links by default.\n  <br />\n  Add \"link\" class to make it look like a\n  <a class=\"$$link\">normal link</a>\n  again.\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI as a Dev Dependency\nDESCRIPTION: Command to install the latest version of daisyUI as a development dependency in the Next.js project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Indicator Positions with DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates how to position indicators in 9 different positions around a parent element using DaisyUI's indicator component classes. It shows combinations of vertical (top/middle/bottom) and horizontal (start/center/end) positioning classes to place badges at different points.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$indicator\">\n  <span class=\"$$indicator-item $$indicator-top $$indicator-start $$badge\">↖︎</span>\n  <span class=\"$$indicator-item $$indicator-top $$indicator-center $$badge\">↑</span>\n  <span class=\"$$indicator-item $$indicator-top $$indicator-end $$badge\">↗︎</span>\n  <span class=\"$$indicator-item $$indicator-middle $$indicator-start $$badge\">←</span>\n  <span class=\"$$indicator-item $$indicator-middle $$indicator-center $$badge\">●</span>\n  <span class=\"$$indicator-item $$indicator-middle $$indicator-end $$badge\">→</span>\n  <span class=\"$$indicator-item $$indicator-bottom $$indicator-start $$badge\">↙︎</span>\n  <span class=\"$$indicator-item $$indicator-bottom $$indicator-center $$badge\">↓</span>\n  <span class=\"$$indicator-item $$indicator-bottom $$indicator-end $$badge\">↘︎</span>\n  <div class=\"bg-base-300 grid h-32 w-60 place-items-center\">Box</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Success Color Progress Bars in DaisyUI\nDESCRIPTION: This snippet demonstrates the creation of progress bars with a success color theme using DaisyUI classes. It showcases multiple progress bars with varying completion percentages, all styled with the success color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-success w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-success w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-success w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-success w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-success w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Pagination Using Radio Inputs in DaisyUI\nDESCRIPTION: Creates a pagination component using radio inputs instead of buttons, allowing for a stateful selection. Radio inputs are styled with btn-square class and maintain the same joined appearance as button-based pagination.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/pagination/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join\">\n  <input\n    class=\"$$join-item $$btn $$btn-square\"\n    type=\"radio\"\n    name=\"options\"\n    aria-label=\"1\"\n    checked=\"checked\" />\n  <input class=\"$$join-item $$btn $$btn-square\" type=\"radio\" name=\"options\" aria-label=\"2\" />\n  <input class=\"$$join-item $$btn $$btn-square\" type=\"radio\" name=\"options\" aria-label=\"3\" />\n  <input class=\"$$join-item $$btn $$btn-square\" type=\"radio\" name=\"options\" aria-label=\"4\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Divider in DaisyUI\nDESCRIPTION: Example of a responsive divider that changes orientation based on screen size. On large screens (lg breakpoint), it displays horizontally, while on smaller screens it displays vertically.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full flex-col lg:flex-row\">\n  <div class=\"$$card bg-base-300 rounded-box grid h-32 grow place-items-center\">content</div>\n  <div class=\"$$divider lg:$$divider-horizontal\">OR</div>\n  <div class=\"$$card bg-base-300 rounded-box grid h-32 grow place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Bold Star Mask in DaisyUI\nDESCRIPTION: Applies a bold star-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-star-2\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Diff Component in HTML with DaisyUI\nDESCRIPTION: Implements a diff component for side-by-side comparison of two items. Includes a resizer for adjusting the comparison view.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"diff\">\n  <div class=\"diff-item-1\">{item1}</div>\n  <div class=\"diff-item-2\">{item2}</div>\n  <div class=\"diff-resizer\"></div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Implementing Primary-Muted Color in Multiple daisyUI Themes\nDESCRIPTION: This configuration extends the previous example by adding the 'primary-muted' color to multiple daisyUI themes (light, cupcake, and dark). Each theme can have a different color value for the new custom color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-add-new-colors-to-daisyui/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// tailwind.config.js\nmodule.exports = {\n  plugins: [require(\"daisyui\")],\n\n  theme: {\n    extend: {\n      colors: {\n        \"primary-muted\": \"oklch(var(--primary-muted) / <alpha-value>)\",\n      },\n    },\n  },\n\n  daisyui: {\n    themes: [\n      // light theme\n      {\n        light: {\n          ...require(\"daisyui/src/theming/themes\")[\"light\"],\n          \"--primary-muted\": \"65% 0.2 295\",\n        },\n      },\n      // cupcake theme\n      {\n        cupcake: {\n          ...require(\"daisyui/src/theming/themes\")[\"cupcake\"],\n          \"--primary-muted\": \"87% 0.05 200\",\n        },\n      },\n      // dark theme\n      {\n        dark: {\n          ...require(\"daisyui/src/theming/themes\")[\"dark\"],\n          \"--primary-muted\": \"34% 0.2 289\",\n        },\n      },\n    ],\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Code Mockup with Line Prefix in HTML\nDESCRIPTION: This snippet shows how to create a simple code mockup with a line prefix using DaisyUI's mockup-code class. It displays a single line of code with a dollar sign prefix.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-code/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-code w-full\">\n  <pre data-prefix=\"$\"><code>npm i daisyui</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Squircle Mask in DaisyUI\nDESCRIPTION: Applies a squircle-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-squircle\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Info-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with info color styling using the select-info class. Creates a dropdown styled with the info theme color for framework selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-info\">\n  <option disabled selected>Pick a Framework</option>\n  <option>React</option>\n  <option>Vue</option>\n  <option>Angular</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick a Framework\" className=\"$$select $$select-info\">\n  <option disabled={true}>Pick a Framework</option>\n  <option>React</option>\n  <option>Vue</option>\n  <option>Angular</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Countdown in HTML\nDESCRIPTION: Demonstrates how to create a basic countdown display using the DaisyUI Countdown component. The component uses CSS variables to set the displayed value and includes ARIA attributes for accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$countdown\">\n  <span style=\"--$$value:59;\" aria-live=\"polite\" aria-label=\"59\">59</span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Updating Menu Component Classes in daisyUI 5\nDESCRIPTION: Shows how to update menu component classes like disabled, active, and focus with their new prefixed versions in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: diff\nCODE:\n```\n- <ul class=\"menu\">\n+ <ul class=\"menu w-full\">\n\n-   <li class=\"disabled\"><a>disabled item</a></li>\n+   <li class=\"menu-disabled\"><a>disabled item</a></li>\n\n-   <li class=\"active\"><a>active item</a></li>\n+   <li class=\"menu-active\"><a>active item</a></li>\n\n-   <li class=\"focus\"><a>focus item</a></li>\n+   <li class=\"menu-focus\"><a>focus item</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring Radio Input Boxed Tabs with DaisyUI in HTML\nDESCRIPTION: This code lays out a tab group using HTML radio inputs styled as tabs by DaisyUI. All radio inputs share a unique \\\"name\\\" and use class $$tab; checked=\\\"checked\\\" marks the active tab. Requires DaisyUI CSS and unique group names per tab set, providing accessible keyboard navigation and a native tab interaction.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!-- name of each tab group should be unique -->\\n<div class=\\\"$$tabs $$tabs-box\\\">\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_1\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 1\\\" />\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_1\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 2\\\" checked=\\\"checked\\\" />\\n  <input type=\\\"radio\\\" name=\\\"my_tabs_1\\\" class=\\\"$$tab\\\" aria-label=\\\"Tab 3\\\" />\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Floating Label in DaisyUI\nDESCRIPTION: Demonstrates how to use the floating-label class to create a modern floating label effect. The label floats above the input when the field is focused or contains text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/label/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$floating-label\">\n  <span>Your Email</span>\n  <input type=\"text\" placeholder=\"mail@site.com\" class=\"$$input $$input-md\" />\n</label>\n```\n\n----------------------------------------\n\nTITLE: Adding Primary-Muted Color to Tailwind CSS Configuration\nDESCRIPTION: This snippet shows how to extend Tailwind CSS configuration to include a new 'primary-muted' color. It allows the use of this new color with all Tailwind CSS color utilities.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-add-new-colors-to-daisyui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// tailwind.config.js\nmodule.exports = {\n  plugins: [require(\"daisyui\")],\n\n  theme: {\n    extend: {\n      colors: {\n        \"primary-muted\": \"oklch(var(--primary-muted) / <alpha-value>)\",\n      },\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Skeleton Implementation in DaisyUI\nDESCRIPTION: A simple implementation of a skeleton loader with fixed width and height. This creates a basic placeholder div with loading animation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/skeleton/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$skeleton h-32 w-32\"></div>\n```\n\n----------------------------------------\n\nTITLE: Applying Pentagon Mask in DaisyUI\nDESCRIPTION: Applies a pentagon-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-pentagon\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: DaisyUI URL Management Component\nDESCRIPTION: Svelte component that manages selected DaisyUI components and generates a combined CDN URL. Includes functionality for toggling components and calculating total size.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/cdn/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: svelte\nCODE:\n```\nlet selectedUrls = writable(data.files.filter(file => file.checked));\n\nfunction toggleUrl(url) {\n  selectedUrls.update((current) => {\n    if (current.includes(url)) {\n      return current.filter((item) => item !== url);\n    } else {\n      const updated = [...current, url];\n      updated.sort((a, b) => initialOrderMap.get(a) - initialOrderMap.get(b));\n      return updated;\n    }\n  });\n  url.checked = !url.checked;\n}\n```\n\n----------------------------------------\n\nTITLE: Chat Bubbles with Different Color Variants\nDESCRIPTION: Shows various color options for chat bubbles including primary, secondary, accent, neutral, info, success, warning, and error variants\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/chat/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$chat $$chat-start\">\n  <div class=\"$$chat-bubble $$chat-bubble-primary\">What kind of nonsense is this</div>\n</div>\n<div class=\"$$chat $$chat-start\">\n  <div class=\"$$chat-bubble $$chat-bubble-secondary\">Put me on the Council and not make me a Master!??</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Fieldset with Join Items in HTML\nDESCRIPTION: Demonstrates a fieldset containing joined items (input and button) using DaisyUI's join classes for a cohesive look.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/fieldset/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4\">\n  <legend class=\"$$fieldset-legend\">Settings</legend>\n  <div class=\"$$join\">\n    <input type=\"text\" class=\"$$input $$join-item\" placeholder=\"Product name\" />\n    <button class=\"$$btn $$join-item\">save</button>\n  </div>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Image Comparison Diff Component Implementation in HTML\nDESCRIPTION: Implementation of a Diff component for comparing two images side-by-side with a resizable interface. Uses aspect ratio 16/9 and includes accessibility attributes like tabindex and role.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/diff/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<figure class=\"$$diff aspect-16/9\" tabindex=\"0\">\n  <div class=\"$$diff-item-1\" role=\"img\" tabindex=\"0\">\n    <img alt=\"daisy\" src=\"https://img.daisyui.com/images/stock/photo-1560717789-0ac7c58ac90a.webp\" />\n  </div>\n  <div class=\"$$diff-item-2\" role=\"img\">\n    <img\n      alt=\"daisy\"\n      src=\"https://img.daisyui.com/images/stock/photo-1560717789-0ac7c58ac90a-blur.webp\" />\n  </div>\n  <div class=\"$$diff-resizer\"></div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Primary Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with primary color styling using link-primary class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-primary\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Making a Responsive Card Layout in DaisyUI HTML\nDESCRIPTION: This code snippet displays a responsive card that adapts to different screen sizes, using DaisyUI and HTML. The card switches between horizontal and vertical orientations, making it suitable for dynamic content like albums. It leverages DaisyUI's responsive classes for layout adjustments without further configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card lg:$$card-side bg-base-100 shadow-sm\">\n  <figure>\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494232410401-ad00d5433cfa.webp\"\n      alt=\"Album\" />\n  </figure>\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">New album is released!</h2>\n    <p>Click the button to listen on Spotiwhy app.</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Listen</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Constructing Theme Controller with Radio Buttons in HTML\nDESCRIPTION: This HTML snippet offers a theme controller utilizing radio button styled inputs. Users switch themes by clicking on buttons labeled Default, Retro, Cyberpunk, Valentine, and Aqua. Dependencies include CSS to style the buttons. User input is through button clicks, and the result is the selected theme value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$join $$join-vertical\">\n  <input\n    type=\"radio\"\n    name=\"theme-buttons\"\n    class=\"$$btn $$theme-controller $$join-item\"\n    aria-label=\"Default\"\n    value=\"default\" />\n  <input\n    type=\"radio\"\n    name=\"theme-buttons\"\n    class=\"$$btn $$theme-controller $$join-item\"\n    aria-label=\"Retro\"\n    value=\"retro\" />\n  <input\n    type=\"radio\"\n    name=\"theme-buttons\"\n    class=\"$$btn $$theme-controller $$join-item\"\n    aria-label=\"Cyberpunk\"\n    value=\"cyberpunk\" />\n  <input\n    type=\"radio\"\n    name=\"theme-buttons\"\n    class=\"$$btn $$theme-controller $$join-item\"\n    aria-label=\"Valentine\"\n    value=\"valentine\" />\n  <input\n    type=\"radio\"\n    name=\"theme-buttons\"\n    class=\"$$btn $$theme-controller $$join-item\"\n    aria-label=\"Aqua\"\n    value=\"aqua\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using daisyUI llms.txt in Windsurf\nDESCRIPTION: The snippet shows the command to access the daisyUI documentation file in a chat window. Copy and paste the command in a chat window to use daisyUI docs.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/windsurf/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n@web https://daisyui.com/llms.txt\n```\n\n----------------------------------------\n\nTITLE: Creating Scrollable Steps with DaisyUI\nDESCRIPTION: Implements a scrollable steps component by wrapping the steps in an overflow-x-auto div. This is useful for displaying many steps that would otherwise extend beyond the viewport width.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <ul class=\"$$steps\">\n    <li class=\"$$step\">start</li>\n    <li class=\"$$step $$step-secondary\">2</li>\n    <li class=\"$$step $$step-secondary\">3</li>\n    <li class=\"$$step $$step-secondary\">4</li>\n    <li class=\"$$step\">5</li>\n    <li class=\"$$step $$step-accent\">6</li>\n    <li class=\"$$step $$step-accent\">7</li>\n    <li class=\"$$step\">8</li>\n    <li class=\"$$step $$step-error\">9</li>\n    <li class=\"$$step $$step-error\">10</li>\n    <li class=\"$$step\">11</li>\n    <li class=\"$$step\">12</li>\n    <li class=\"$$step $$step-warning\">13</li>\n    <li class=\"$$step $$step-warning\">14</li>\n    <li class=\"$$step\">15</li>\n    <li class=\"$$step $$step-neutral\">16</li>\n    <li class=\"$$step $$step-neutral\">17</li>\n    <li class=\"$$step $$step-neutral\">18</li>\n    <li class=\"$$step $$step-neutral\">19</li>\n    <li class=\"$$step $$step-neutral\">20</li>\n    <li class=\"$$step $$step-neutral\">21</li>\n    <li class=\"$$step $$step-neutral\">22</li>\n    <li class=\"$$step $$step-neutral\">23</li>\n    <li class=\"$$step $$step-neutral\">end</li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Radial Progress with Custom Color in HTML\nDESCRIPTION: Illustrates the inclusion of custom color settings in radial progress bars via the 'text-primary' class in HTML, providing a blueprint for color customization in similar web components.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$radial-progress text-primary\" style=\"--$$value:70;\" aria-valuenow=\"70\" role=\"progressbar\">70%</div>\n```\n\n----------------------------------------\n\nTITLE: Pagination with Navigation Controls in DaisyUI\nDESCRIPTION: Creates a simple pagination component with previous/next navigation controls using « and » symbols. The middle button displays the current page number.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/pagination/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn\">«</button>\n  <button class=\"$$join-item $$btn\">Page 22</button>\n  <button class=\"$$join-item $$btn\">»</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Neutral-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with neutral color styling using the select-neutral class. Creates a dropdown styled with the neutral theme color for server location selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-neutral\">\n  <option disabled selected>Server location</option>\n  <option>North America</option>\n  <option>EU west</option>\n  <option>South East Asia</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Server location\" class=\"$$select $$select-neutral\">\n  <option disabled={true}>Server location</option>\n  <option>North America</option>\n  <option>EU west</option>\n  <option>South East Asia</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Integrating Kbd Component in Text in HTML\nDESCRIPTION: Illustrates how to incorporate a keyboard key within a text context using the Kbd component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nPress\n<kbd class=\"$$kbd $$kbd-sm\">F</kbd>\nto pay respects.\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Dock Component\nDESCRIPTION: HTML structure for creating a dock component with buttons and icons. Supports size modifiers and active states.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_21\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"dock {MODIFIER}\">{CONTENT}</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<button>\n    <svg>{icon}</svg>\n    <span class=\"dock-label\">Text</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Hero with Overlay Image in JSX using DaisyUI\nDESCRIPTION: This code snippet demonstrates how to implement a hero component with a background image and overlay using DaisyUI classes in JSX. It includes inline styling for the background image.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/hero/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<div\n  class=\"$$hero min-h-screen\"\n  style={{\n    backgroundImage:\n      \"url(https://img.daisyui.com/images/stock/photo-1507358522600-9f71e620c44e.webp)\",\n  }}\n>\n  <div class=\"$$hero-overlay\"></div>\n  <div class=\"$$hero-content text-neutral-content text-center\">\n    <div class=\"max-w-md\">\n      <h1 class=\"mb-5 text-5xl font-bold\">Hello there</h1>\n      <p class=\"mb-5\">\n        Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem\n        quasi. In deleniti eaque aut repudiandae et a id nisi.\n      </p>\n      <button class=\"$$btn $$btn-primary\">Get Started</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Label for Select Elements in DaisyUI\nDESCRIPTION: Demonstrates how to use the label class with select elements. The label \"Type\" appears before the select dropdown containing Personal and Business options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/label/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$select\">\n  <span class=\"$$label\">Type</span>\n  <select>\n    <option>Personal</option>\n    <option>Business</option>\n  </select>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Implementing Countdown Component in HTML with DaisyUI\nDESCRIPTION: Creates a countdown component with transition effects for numbers between 0 and 99. Requires JavaScript to update values.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_18\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"countdown\">\n  <span style=\"--value:{number};\">number</span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Disabling Logs in daisyUI PostCSS Configuration\nDESCRIPTION: Shows how to disable the informational console logs generated by the daisyUI plugin during the build process by setting the `logs` property to `false` in the PostCSS configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  logs: false;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Stack Component in DaisyUI\nDESCRIPTION: Stack component for layering elements with optional positioning modifiers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_56\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"stack {MODIFIER}\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Card with Border in HTML using DaisyUI\nDESCRIPTION: This snippet shows how to create a card with a border using the 'card-border' class from DaisyUI. It includes a title, description, and a call-to-action button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card $$card-border bg-base-100 w-96\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card Title</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Diamond Mask in DaisyUI\nDESCRIPTION: Applies a diamond-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-diamond\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Phone Number Validation\nDESCRIPTION: Phone number input validation requiring exactly 10 digits.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"tel\" class=\"$$input $$validator tabular-nums\" required placeholder=\"Phone\" \n  pattern=\"[0-9]*\" minlength=\"10\" maxlength=\"10\" title=\"Must be 10 digits\" />\n<p class=\"$$validator-hint\">Must be 10 digits</p>\n```\n\n----------------------------------------\n\nTITLE: Toast with Default Position (Bottom-End)\nDESCRIPTION: Shows a toast with default positioning (bottom-right corner).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-end\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Modifying daisyUI Plugin Syntax for Configuration in CSS/PostCSS\nDESCRIPTION: Demonstrates the required syntax change in a CSS or PostCSS file to enable daisyUI configuration. It shows replacing the simple plugin inclusion `@plugin \"daisyui\";` with a block structure `@plugin \"daisyui\" {}` where configuration options can be placed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n```diff:app.css\n- @plugin \"daisyui\";\n+ @plugin \"daisyui\" {\n+ }\n```\n```\n\n----------------------------------------\n\nTITLE: Rendering Tabs with Border Style in DaisyUI HTML\nDESCRIPTION: This example constructs a set of tabs with an underline border style, utilizing the $$tabs $$tabs-border container and $$tab elements, including $$tab-active for the active tab. Requirements are DaisyUI CSS and HTML. Ideal for scenarios needing a distinct separation between tabs using a bottom border.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-border\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 1</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Tab 2</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 3</a>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Text Swap in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a simple text swap using the Swap component. It toggles between 'ON' and 'OFF' text when a checkbox is clicked.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/swap/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$swap\">\n  <input type=\"checkbox\" />\n  <div class=\"$$swap-on\">ON</div>\n  <div class=\"$$swap-off\">OFF</div>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Creating Textarea Component in DaisyUI\nDESCRIPTION: Multi-line text input component with various styling options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_63\n\nLANGUAGE: html\nCODE:\n```\n<textarea class=\"textarea {MODIFIER}\" placeholder=\"Bio\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Progress Bars in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to create basic progress bars with different completion percentages using DaisyUI classes. The progress bars are styled with a width of 56 units and varying values from 0 to 100.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Password Validation with Requirements\nDESCRIPTION: Password input validation with specific requirements for length, numbers, and letter case.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"password\" class=\"$$input $$validator\" required placeholder=\"Password\" minlength=\"8\" \n  pattern=\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" \n  title=\"Must be more than 8 characters, including number, lowercase letter, uppercase letter\" />\n<p class=\"$$validator-hint\">\n  Must be more than 8 characters, including\n  <br/>At least one number\n  <br/>At least one lowercase letter\n  <br/>At least one uppercase letter\n</p>\n```\n\n----------------------------------------\n\nTITLE: Creating a Card with No Image in DaisyUI HTML\nDESCRIPTION: This code snippet demonstrates how to create a simple card component without an image using DaisyUI and HTML. It features a classic layout with a title, descriptive text, and an action button. No additional dependencies are required, and it outputs a styled card ready for integration in a web page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$card bg-base-100 w-96 shadow-sm\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card title!</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Button with Color Indicators\nDESCRIPTION: This HTML snippet demonstrates a button with color indicators. It uses DaisyUI classes and custom indicator elements to show the button's primary color and content color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/design/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<figure class={figure}>\n  <div class=\"relative\">\n    <button class=\"btn btn-primary\">Button</button>\n    <div\n      class={`${indicator} start-1 top-1/3 h-16 w-4 translate-y-2 flex-col`}>\n      <div class={circle}>\n      </div>\n      <hr class={`${line} h-full w-px border-s`} />\n      <div class={`${item} indicator-center indicator-bottom`}>\n        primary\n      </div>\n    </div>\n    <div\n      class={`${indicator} -top-7 end-4 h-16 w-4 flex-col`}>\n      <hr class={`${line} h-full w-px border-s`} />\n      <div class={circle}>\n      </div>\n      <div class={`${item} indicator-center indicator-top`}>\n        primary-content\n      </div>\n    </div>\n  </div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component for Translation in Zed Setup Guide\nDESCRIPTION: Imports the `Translate` component from the '$components/Translate.svelte' path within a Svelte script block. This component is likely used for internationalization or rendering translated text within the documentation page itself.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/zed/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Browser Mockup with DaisyUI\nDESCRIPTION: This snippet shows how to create a box that looks like a browser window using DaisyUI's mockup-browser component. It includes a toolbar section and content area.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_40\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mockup-browser\">\n  <div class=\"mockup-browser-toolbar\">\n    {toolbar content}\n  </div>\n  <div>{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Theme Toggle with Text Labels\nDESCRIPTION: Theme toggle implementation with text labels for current and alternative themes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"flex cursor-pointer gap-2\">\n  <span class=\"$$label-text\">Current</span>\n  <input type=\"checkbox\" value=\"synthwave\" class=\"$$toggle $$theme-controller\" />\n  <span class=\"$$label-text\">Synthwave</span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Filter Component\nDESCRIPTION: HTML structure for creating filter components with radio buttons and reset functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_26\n\nLANGUAGE: html\nCODE:\n```\n<form class=\"filter\">\n  <input class=\"btn btn-square\" type=\"reset\" value=\"×\"/>\n  <input class=\"btn\" type=\"radio\" name=\"{NAME}\" aria-label=\"Tab 1 title\"/>\n  <input class=\"btn\" type=\"radio\" name=\"{NAME}\" aria-label=\"Tab 2 title\"/>\n</form>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"filter\">\n  <input class=\"btn filter-reset\" type=\"radio\" name=\"{NAME}\" aria-label=\"×\"/>\n  <input class=\"btn\" type=\"radio\" name=\"{NAME}\" aria-label=\"Tab 1 title\"/>\n  <input class=\"btn\" type=\"radio\" name=\"{NAME}\" aria-label=\"Tab 2 title\"/>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Accent Theme to Radio Buttons\nDESCRIPTION: Demonstrates radio buttons leveraging the accent color theme with the `radio-accent` class from DaisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-6\" class=\"$$radio $$radio-accent\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-6\" class=\"$$radio $$radio-accent\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Radial Progress Bar in JSX\nDESCRIPTION: Illustrates the use of a radial progress component in JSX, defining progress using style attributes as React.CSSProperties for customization. Suitable for React applications that require configurable progress values and accessibility compliance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<div className=\"$$radial-progress\" style={{ \"--$$value\": 70 } /* as React.CSSProperties */ } \n  aria-valuenow={70} role=\"progressbar\">70%</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Drawer Component in HTML\nDESCRIPTION: HTML code for a basic Drawer component with a toggle button and sidebar content. Uses DaisyUI classes for styling and functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/drawer/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"drawer\">\n  <input id=\"my-drawer\" type=\"checkbox\" class=\"drawer-toggle\" />\n  <div class=\"drawer-content\">\n    <!-- Page content here -->\n    <label for=\"my-drawer\" class=\"btn btn-primary drawer-button\">Open drawer</label>\n  </div>\n  <div class=\"drawer-side\">\n    <label for=\"my-drawer\" aria-label=\"close sidebar\" class=\"drawer-overlay\"></label>\n    <ul class=\"menu bg-base-200 text-base-content min-h-full w-80 p-4\">\n      <!-- Sidebar content here -->\n      <li><a>Sidebar Item 1</a></li>\n      <li><a>Sidebar Item 2</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Homepage Content for Eleventy\nDESCRIPTION: Creates a sample homepage in Markdown format for an Eleventy site. It uses front matter to specify the Nunjucks layout file (`layouts/default.njk`) to apply. The content includes standard Markdown headings and demonstrates using a daisyUI button component within a `div` that has the `not-prose` class to prevent Tailwind Typography styles from affecting the button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: md\nCODE:\n```\n---\nlayout: layouts/default.njk\n---\n\n# Markdown heading 1\n\n## Markdown heading 2\n\n### Markdown heading 3\n\n<div class=\"not-prose\">\n  <button class=\"btn\">daisyUI Button</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Avatar in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a basic avatar using DaisyUI classes. It uses the 'avatar' class and a nested div for the image container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar\">\n  <div class=\"w-24 rounded\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI\nDESCRIPTION: This code snippet installs the latest versions of Tailwind CSS, the Tailwind CLI, and daisyUI using Bun. These are essential for styling and utilizing UI components within the project. Dependencies must be added to the project for usage in the CSS file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nbun install tailwindcss@latest @tailwindcss/cli@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Dock Component in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic Dock component with three navigation items: Home, Inbox, and Settings. It includes SVG icons and labels for each item, as well as an active state for the Inbox item.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n    <span class=\"$$dock-label\">Home</span>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n    <span class=\"$$dock-label\">Inbox</span>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n    <span class=\"$$dock-label\">Settings</span>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination with DaisyUI\nDESCRIPTION: This snippet shows how to create pagination using DaisyUI's join component. Each pagination item should have the join-item class and can be styled with the btn class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_48\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"join\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Theme Fonts in DaisyUI v5 with PostCSS\nDESCRIPTION: Example of how to customize theme fonts for 'cyberpunk' and 'wireframe' themes in DaisyUI v5 using the new plugin syntax in PostCSS. This demonstrates the proper way to apply custom font families that were previously defaults in v4.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: postcss\nCODE:\n```\n@plugin \"daisyui\";\n\n@plugin \"daisyui/theme\" {\n  name: cyberpunk;\n  font-family:\n    ui-monospace,\n    SFMono-Regular,\n    Menlo,\n    Monaco,\n    Consolas,\n    Liberation Mono,\n    Courier New,\n    monospace;\n}\n\n@plugin \"daisyui/theme\" {\n  name: wireframe;\n  font-family:\n    Chalkboard,\n    comic sans ms,\n    \"sans-serif\";\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Form with Mary UI Blade Components\nDESCRIPTION: Example of using Mary UI blade components to create a form with inputs and buttons. This showcases the Livewire-compatible syntax and built-in functionality like money formatting and spinners.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<x-form wire:submit=\"save\">\n  <x-input label=\"Name\" wire:model=\"name\" />\n  <x-input\n    label=\"Amount\"\n    wire:model=\"amount\"\n    prefix=\"USD\"\n    money\n    hint=\"It submits an unmasked value\" />\n  <x-slot:actions>\n    <x-button label=\"Cancel\" />\n    <x-button label=\"Click me!\" class=\"btn-primary\" type=\"submit\" spinner=\"save\" />\n  </x-slot:actions>\n</x-form>\n```\n\n----------------------------------------\n\nTITLE: Defining Menu without Padding in HTML\nDESCRIPTION: This snippet presents a menu component styled without padding and border radius, leveraging Tailwind CSS classes. The key functionality involves setting item display within a compact layout. All inputs are standard button elements styled for close placement.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 [&_li>*]:rounded-none p-0\">\n  <li><button>Item 1</button></li>\n  <li><button>Item 2</button></li>\n  <li><button>Item 3</button></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Customizing Range Slider Colors and Fill in HTML\nDESCRIPTION: This code demonstrates how to customize the range slider's colors and remove the fill using CSS custom properties. It sets custom colors for the background, thumb, and disables the fill.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/range/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" \n  class=\"$$range text-blue-300 [--range-bg:orange] [--range-thumb:blue] [--range-fill:0]\" />\n```\n\n----------------------------------------\n\nTITLE: Activating Swap using Class Names in HTML with DaisyUI\nDESCRIPTION: This example demonstrates how to activate the Swap component using class names instead of checkboxes. It shows both inactive and active states using the swap-active class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/swap/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$swap text-6xl\">\n  <div class=\"$$swap-on\">🥵</div>\n  <div class=\"$$swap-off\">🥶</div>\n</label>\n<label class=\"$$swap $$swap-active text-6xl\">\n  <div class=\"$$swap-on\">🥳</div>\n  <div class=\"$$swap-off\">😭</div>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Implementing Filter with HTML Form\nDESCRIPTION: Creates a filter component using HTML form with radio buttons and a reset button. The component uses DaisyUI classes for styling and includes radio buttons for framework selection with a square reset button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/filter/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form class=\"$$filter\">\n  <input class=\"$$btn $$btn-square\" type=\"reset\" value=\"×\"/>\n  <input class=\"$$btn\" type=\"radio\" name=\"frameworks\" aria-label=\"Svelte\"/>\n  <input class=\"$$btn\" type=\"radio\" name=\"frameworks\" aria-label=\"Vue\"/>\n  <input class=\"$$btn\" type=\"radio\" name=\"frameworks\" aria-label=\"React\"/>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Implementing Details-based Collapse Component\nDESCRIPTION: Creates a collapse component using HTML5 details and summary tags. Note that animations are not supported with this method.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<details class=\"collapse bg-base-100 border-base-300 border\">\n  <summary class=\"collapse-title font-semibold\">How do I create an account?</summary>\n  <div class=\"collapse-content text-sm\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</details>\n```\n\n----------------------------------------\n\nTITLE: Email Validation with Hint\nDESCRIPTION: Email validation with an additional hint message that appears when input is invalid.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"$$input $$validator\" type=\"email\" required placeholder=\"mail@site.com\" />\n<div class=\"$$validator-hint\">Enter valid email address</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Card with Dashed Border in HTML using DaisyUI\nDESCRIPTION: This snippet demonstrates how to create a card with a dashed border using the 'card-dash' class from DaisyUI. It includes a title, description, and a call-to-action button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/card/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$card $$card-dash bg-base-100 w-96\">\n  <div class=\"$$card-body\">\n    <h2 class=\"$$card-title\">Card Title</h2>\n    <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>\n    <div class=\"$$card-actions justify-end\">\n      <button class=\"$$btn $$btn-primary\">Buy Now</button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with Tailwind CSS Utility Classes\nDESCRIPTION: This snippet shows how to create a button using only Tailwind CSS utility classes, which requires multiple styling classes for a basic button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/use/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button\n  class=\"inline-block cursor-pointer rounded-md bg-gray-800 px-4 py-3 text-center text-sm font-semibold uppercase text-white transition duration-200 ease-in-out hover:bg-gray-900\">\n  Button\n</button>\n```\n\n----------------------------------------\n\nTITLE: Custom Theme Configuration for daisyUI\nDESCRIPTION: Detailed theme customization example showing how to define colors, radius, and border properties for a custom theme.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-5-alpha/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n@plugin \"daisyui/theme\" {\n  name: \"my-theme\";\n  default: false;\n  prefersdark: false;\n  color-scheme: light;\n\n  --color-base-100: oklch(98% 0.02 240);\n  --color-base-200: oklch(95% 0.03 240);\n  --color-base-300: oklch(92% 0.04 240);\n  --color-base-content: oklch(20% 0.05 240);\n\n  --color-primary: oklch(55% 0.3 240);\n  --color-primary-content: oklch(98% 0.01 240);\n\n  --color-secondary: oklch(70% 0.25 200);\n  --color-secondary-content: oklch(98% 0.01 200);\n\n  --color-accent: oklch(65% 0.25 160);\n  --color-accent-content: oklch(98% 0.01 160);\n\n  --color-neutral: oklch(50% 0.05 240);\n  --color-neutral-content: oklch(98% 0.01 240);\n\n  --color-info: oklch(70% 0.2 220);\n  --color-info-content: oklch(98% 0.01 220);\n\n  --color-success: oklch(65% 0.25 140);\n  --color-success-content: oklch(98% 0.01 140);\n\n  --color-warning: oklch(80% 0.25 80);\n  --color-warning-content: oklch(20% 0.05 80);\n\n  --color-error: oklch(65% 0.3 30);\n  --color-error-content: oklch(98% 0.01 30);\n\n  --radius-selector: .5rem;\n  --radius-field: .5rem;\n  --radius-box: .5rem;\n  --border: 1px;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Divider Without Text in DaisyUI\nDESCRIPTION: Example of a simple divider without any text, used purely as a visual separator between content sections. The divider element is empty but still provides visual separation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full flex-col\">\n  <div class=\"$$card bg-base-300 rounded-box grid h-20 place-items-center\">content</div>\n  <div class=\"$$divider\"></div>\n  <div class=\"$$card bg-base-300 rounded-box grid h-20 place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Boxed Tabs with DaisyUI in HTML\nDESCRIPTION: Creates a tab navigation with a box effect using $$tabs $$tabs-box container classes. As before, the individual tabs are $$tab elements, and $$tab-active highlights the selected tab. The DaisyUI CSS framework is required. Designed for interfaces where a boxed look is preferred for distinguishing tabs.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-box\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 1</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Tab 2</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Tab 3</a>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Stack Implementation with Colored Divs\nDESCRIPTION: Demonstrates basic stack usage with three colored divs using primary, accent, and secondary colors. Includes height and width constraints.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stack/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stack h-20 w-32\">\n  <div class=\"bg-primary text-primary-content grid place-content-center rounded-box\">1</div>\n  <div class=\"bg-accent text-accent-content grid place-content-center rounded-box\">2</div>\n  <div class=\"bg-secondary text-secondary-content grid place-content-center rounded-box\">\n    3\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using CDN for DaisyUI Toggle Component\nDESCRIPTION: Shows how to include only the toggle component from DaisyUI using a CDN link. This approach is ideal for server-side rendered projects or those without a JS build step.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\nhttps://cdn.jsdelivr.net/npm/daisyui@5/components/toggle.css\n```\n\n----------------------------------------\n\nTITLE: Creating a Navbar with Dropdown, Center Logo, and Icon - daisyUI - HTML\nDESCRIPTION: This snippet demonstrates a navbar with left-aligned dropdown, centered brand/logo, and right-aligned icon buttons using daisyUI and Tailwind CSS. Dependencies required are daisyUI and Tailwind CSS for proper utility and component classes, and may use class prefixing shown via $$ syntax. Key parameters include menu list items, SVG icons for interactivity, and structural alignment of navigation sections. The output is an accessible, interactive navbar with dropdown menu and icon indicators; using class prefixing, you must ensure configurations are in sync with your build process.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"$$navbar-start\">\n    <div class=\"$$dropdown\">\n      <div tabindex=\"0\" role=\"button\" class=\"$$btn $$btn-ghost $$btn-circle\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h7\" /> </svg>\n      </div>\n      <ul\n        tabindex=\"0\"\n        class=\"$$menu $$menu-sm $$dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow\">\n        <li><a>Homepage</a></li>\n        <li><a>Portfolio</a></li>\n        <li><a>About</a></li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"$$navbar-center\">\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"$$navbar-end\">\n    <button class=\"$$btn $$btn-ghost $$btn-circle\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /> </svg>\n    </button>\n    <button class=\"$$btn $$btn-ghost $$btn-circle\">\n      <div class=\"$$indicator\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" /> </svg>\n        <span class=\"$$badge $$badge-xs $$badge-primary $$indicator-item\"></span>\n      </div>\n    </button>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Secondary-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with secondary color styling using the select-secondary class. Creates a dropdown styled with the secondary theme color for language selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-secondary\">\n  <option disabled selected>Pick a language</option>\n  <option>Zig</option>\n  <option>Go</option>\n  <option>Rust</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick a language\" class=\"$$select $$select-secondary\">\n  <option disabled={true}>Pick a language</option>\n  <option>Zig</option>\n  <option>Go</option>\n  <option>Rust</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Configuring NPM Scripts for Electron\nDESCRIPTION: Adds start and build scripts to package.json to run Electron and build CSS using Tailwind CLI. This is necessary to automate tasks for development and production.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm pkg set scripts.start=\"electron .\"\nnpm pkg set scripts.build:css=\"tailwindcss -i src/input.css -o public/output.css\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Tailwind CSS Standalone Executable - Shell\nDESCRIPTION: This shell snippet downloads the appropriate Tailwind CSS binary executable for the user’s operating system from the official releases. The user must pick the correct curl command for their system (Linux, MacOS, Windows), placing the binary in 'myapp/static/css/'. No Node.js required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\n# Run the corresponding command for your OS\n\n# Linux\ncurl -sLo myapp/static/css/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64\ncurl -sLo myapp/static/css/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64-musl\ncurl -sLo myapp/static/css/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64\ncurl -sLo myapp/static/css/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64-musl\n\n# MacOS\ncurl -sLo myapp/static/css/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64\ncurl -sLo myapp/static/css/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-x64\n\n# Windows\ncurl -sLo myapp\\static\\css\\tailwindcss.exe https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-windows-x64.exe\n```\n\n----------------------------------------\n\nTITLE: Creating a Footer with Logo Section in DaisyUI\nDESCRIPTION: A footer implementation that includes a logo section with company information along with navigation links. Uses the base-200 background color for a more subtle appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/footer/+page.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"$$footer sm:$$footer-horizontal bg-base-200 text-base-content p-10\">\n  <aside>\n    <svg\n      width=\"50\"\n      height=\"50\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      class=\"fill-current\">\n      <path\n        d=\"M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z\"></path>\n    </svg>\n    <p>\n      ACME Industries Ltd.\n      <br />\n      Providing reliable tech since 1992\n    </p>\n  </aside>\n  <nav>\n    <h6 class=\"$$footer-title\">Services</h6>\n    <a class=\"$$link $$link-hover\">Branding</a>\n    <a class=\"$$link $$link-hover\">Design</a>\n    <a class=\"$$link $$link-hover\">Marketing</a>\n    <a class=\"$$link $$link-hover\">Advertisement</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Company</h6>\n    <a class=\"$$link $$link-hover\">About us</a>\n    <a class=\"$$link $$link-hover\">Contact</a>\n    <a class=\"$$link $$link-hover\">Jobs</a>\n    <a class=\"$$link $$link-hover\">Press kit</a>\n  </nav>\n  <nav>\n    <h6 class=\"$$footer-title\">Legal</h6>\n    <a class=\"$$link $$link-hover\">Terms of use</a>\n    <a class=\"$$link $$link-hover\">Privacy policy</a>\n    <a class=\"$$link $$link-hover\">Cookie policy</a>\n  </nav>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Creating Modal with Checkbox in DaisyUI (Legacy Method)\nDESCRIPTION: This code demonstrates how to create a modal using DaisyUI's legacy checkbox approach. It uses a checkbox input as a toggle and label elements to open and close the modal.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_45\n\nLANGUAGE: html\nCODE:\n```\n<label for=\"my-modal\" class=\"btn\">Open modal</label>\n<input type=\"checkbox\" id=\"my-modal\" class=\"modal-toggle\" />\n<div class=\"modal\">\n  <div class=\"modal-box\">{CONTENT}</div>\n  <label class=\"modal-backdrop\" for=\"my-modal\">Close</label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI dependencies\nDESCRIPTION: NPM command to install the required packages for Tailwind CSS and daisyUI integration with Vue.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vue/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS with daisyUI\nDESCRIPTION: CSS configuration file that imports Tailwind CSS, sets up source files, and includes daisyUI plugins with optional theme customization.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/standalone/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"./public/*.{html,php,erb}\";\n@plugin \"./daisyui.js\";\n\n/* Optional for custom themes – Docs: https://daisyui.com/docs/themes/#how-to-add-a-new-custom-theme */\n@plugin \"./daisyui-theme.js\"{\n  /* custom theme here */\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Countdown in Svelte\nDESCRIPTION: Shows how to create a dynamic countdown using Svelte. This snippet includes a timer function that updates the counter every second, demonstrating how to integrate the Countdown component with Svelte's reactivity system.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import { onMount } from \"svelte\"\n  let counter = 59\n  function count(){\n    if (counter > 0) {\n      counter--\n      setTimeout(count, 1000)\n    }else{\n      counter = 59\n      setTimeout(count, 1000)\n    }\n  }\n  onMount(() => {\n    count()\n  })\n</script>\n\n<span class=\"countdown\">\n  <span style=\"--value:{counter};\" aria-live=\"polite\" aria-label=\"{counter}\">{counter}</span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Applying Color Variations to Range Slider in HTML\nDESCRIPTION: These snippets demonstrate how to apply different color variations to the range slider using DaisyUI color classes such as 'range-neutral', 'range-primary', 'range-secondary', etc.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/range/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-neutral\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-primary\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-secondary\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-accent\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-success\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-warning\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-info\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-error\" />\n```\n\n----------------------------------------\n\nTITLE: File Input Size Variants\nDESCRIPTION: Examples of file inputs in different sizes from extra small to extra large using size modifier classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/file-input/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\" class=\"$$file-input $$file-input-xs\" />\n\n<input type=\"file\" class=\"$$file-input $$file-input-sm\" />\n\n<input type=\"file\" class=\"$$file-input $$file-input-md\" />\n\n<input type=\"file\" class=\"$$file-input $$file-input-lg\" />\n\n<input type=\"file\" class=\"$$file-input $$file-input-xl\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Sized DaisyUI Rating Components in HTML\nDESCRIPTION: Demonstrates how to create star rating components in various sizes (xs, sm, md, lg, xl) using DaisyUI classes. Each size variation uses a 'div' with the base 'rating' class and a corresponding size modifier class (e.g., 'rating-xs'). Inside, radio inputs ('<input type=\"radio\">') are styled using 'mask' and 'mask-star-2' classes, with a background color applied via Tailwind CSS utilities like 'bg-orange-400'. The 'name' attribute groups the radios, 'checked' sets the default selection, and 'aria-label' improves accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!-- xs -->\n<div class=\"$$rating $$rating-xs\">\n  <input type=\"radio\" name=\"rating-5\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-5\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-5\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-5\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-5\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"5 star\" />\n</div>\n<!-- sm -->\n<div class=\"$$rating $$rating-sm\">\n  <input type=\"radio\" name=\"rating-6\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-6\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-6\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-6\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-6\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"5 star\" />\n</div>\n<!-- md -->\n<div class=\"$$rating $$rating-md\">\n  <input type=\"radio\" name=\"rating-7\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-7\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-7\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-7\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-7\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"5 star\" />\n</div>\n<!-- lg -->\n<div class=\"$$rating $$rating-lg\">\n  <input type=\"radio\" name=\"rating-8\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-8\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-8\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-8\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-8\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"5 star\" />\n</div>\n<!-- xl -->\n<div class=\"$$rating $$rating-xl\">\n  <input type=\"radio\" name=\"rating-9\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-9\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-9\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-9\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-9\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Disabled State for DaisyUI Select Component - React/JSX\nDESCRIPTION: React/JSX implementation of a disabled DaisyUI select component using the disabled prop with boolean value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: jsx\nCODE:\n```\n<select class=\"$$select\" disabled={true}>\n  <option>You can't touch this</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Implementing Checkbox Component in HTML with DaisyUI\nDESCRIPTION: Creates a checkbox component for selecting or deselecting values. Supports modifiers for color and size.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"checkbox {MODIFIER}\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a Vertical Timeline with DaisyUI in HTML\nDESCRIPTION: This code snippet demonstrates how to create a responsive vertical timeline using DaisyUI classes. It includes timeline entries for key Apple products with dates, titles, and descriptions. The timeline features SVG icons and responsive layout adjustments for smaller screens.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"$$timeline $$timeline-snap-icon max-md:$$timeline-compact $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-start mb-10 md:text-end\">\n      <time class=\"font-mono italic\">1984</time>\n      <div class=\"text-lg font-black\">First Macintosh computer</div>\n      The Apple Macintosh—later rebranded as the Macintosh 128K—is the original Apple Macintosh\n      personal computer. It played a pivotal role in establishing desktop publishing as a general\n      office function. The motherboard, a 9 in (23 cm) CRT monitor, and a floppy drive were housed\n      in a beige case with integrated carrying handle; it came with a keyboard and single-button\n      mouse.\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end md:mb-10\">\n      <time class=\"font-mono italic\">1998</time>\n      <div class=\"text-lg font-black\">iMac</div>\n      iMac is a family of all-in-one Mac desktop computers designed and built by Apple Inc. It has\n      been the primary part of Apple's consumer desktop offerings since its debut in August 1998,\n      and has evolved through seven distinct forms\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-start mb-10 md:text-end\">\n      <time class=\"font-mono italic\">2001</time>\n      <div class=\"text-lg font-black\">iPod</div>\n      The iPod is a discontinued series of portable media players and multi-purpose mobile devices\n      designed and marketed by Apple Inc. The first version was released on October 23, 2001, about\n      8+1⁄2 months after the Macintosh version of iTunes was released. Apple sold an estimated 450\n      million iPod products as of 2022. Apple discontinued the iPod product line on May 10, 2022. At\n      over 20 years, the iPod brand is the oldest to be discontinued by Apple\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end md:mb-10\">\n      <time class=\"font-mono italic\">2007</time>\n      <div class=\"text-lg font-black\">iPhone</div>\n      iPhone is a line of smartphones produced by Apple Inc. that use Apple's own iOS mobile\n      operating system. The first-generation iPhone was announced by then-Apple CEO Steve Jobs on\n      January 9, 2007. Since then, Apple has annually released new iPhone models and iOS updates. As\n      of November 1, 2018, more than 2.2 billion iPhones had been sold. As of 2022, the iPhone\n      accounts for 15.6% of global smartphone market share\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-start mb-10 md:text-end\">\n      <time class=\"font-mono italic\">2015</time>\n      <div class=\"text-lg font-black\">Apple Watch</div>\n      The Apple Watch is a line of smartwatches produced by Apple Inc. It incorporates fitness\n      tracking, health-oriented capabilities, and wireless telecommunication, and integrates with\n      iOS and other Apple products and services\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Kbd Component\nDESCRIPTION: HTML structure for keyboard shortcut display with size options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_32\n\nLANGUAGE: html\nCODE:\n```\n<kbd class=\"kbd {MODIFIER}\">K</kbd>\n```\n\n----------------------------------------\n\nTITLE: Customizing Landing Page Layout - JSX/Astro\nDESCRIPTION: Main layout structure for the landing page showing component imports and basic page structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-astro-tailwind-documentation-template/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n---\nimport CodeBlock from \"../components/home/CodeBlock.astro\";\nimport Features from \"../components/home/Features.astro\";\nimport Hero from \"../components/home/Hero.astro\";\nimport Integration from \"../components/home/Integration.astro\";\nimport Contributors from \"../components/home/Contributors.astro\";\nimport Testimonial from \"../components/home/Testimonial.astro\";\n---\n\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n\n<div>\n  <Hero />\n  <Features />\n  <CodeBlock />\n  <Integration />\n  <Contributors />\n  <Testimonial />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Success-Colored Select Component in DaisyUI\nDESCRIPTION: Implementation of a select dropdown with success color styling using the select-success class. Creates a dropdown styled with the success theme color for runtime selection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select $$select-success\">\n  <option disabled selected>Pick a Runtime</option>\n  <option>npm</option>\n  <option>Bun</option>\n  <option>yarn</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick a Runtime\" className=\"$$select $$select-success\">\n  <option disabled={true}>Pick a Runtime</option>\n  <option>npm</option>\n  <option>Bun</option>\n  <option>yarn</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Colored Badge Variations\nDESCRIPTION: Badge examples with different color classes including primary, secondary, accent, and state colors\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-primary\">Primary</div>\n<div class=\"$$badge $$badge-secondary\">Secondary</div>\n<div class=\"$$badge $$badge-accent\">Accent</div>\n<div class=\"$$badge $$badge-neutral\">Neutral</div>\n<div class=\"$$badge $$badge-info\">Info</div>\n<div class=\"$$badge $$badge-success\">Success</div>\n<div class=\"$$badge $$badge-warning\">Warning</div>\n<div class=\"$$badge $$badge-error\">Error</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Different Sizes of Range Slider in HTML\nDESCRIPTION: This snippet shows how to create range sliders of different sizes using DaisyUI size classes such as 'range-xs', 'range-sm', 'range-md', 'range-lg', and 'range-xl'.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/range/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"30\" class=\"$$range $$range-xs\" />\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"$$range $$range-sm\" />\n<input type=\"range\" min=\"0\" max=\"100\" value=\"50\" class=\"$$range $$range-md\" />\n<input type=\"range\" min=\"0\" max=\"100\" value=\"60\" class=\"$$range $$range-lg\" />\n<input type=\"range\" min=\"0\" max=\"100\" value=\"70\" class=\"$$range $$range-xl\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a Diff Component with Images in HTML\nDESCRIPTION: This HTML code creates a diff component to compare images of DaisyUI 4 and 5. It uses DaisyUI classes for styling and accessibility attributes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<figure class=\"diff aspect-[1600/650] border-2 border-gray-200 rounded-box\" data-theme=\"dark\" tabindex=\"0\">\n  <div class=\"diff-item-1\" role=\"img\">\n    <img class=\"m-0!\" src=\"https://img.daisyui.com/images/blog/daisyui-4-tailwindcss-components.webp\" alt=\"daisyUI 4\"/>\n  </div>\n  <div class=\"diff-item-2\" role=\"img\" tabindex=\"0\">\n    <img class=\"m-0!\" src=\"https://img.daisyui.com/images/blog/daisyui-5-tailwindcss-components.webp\" alt=\"daisyUI 5\"/>\n  </div>\n  <div class=\"diff-resizer\"></div>\n</figure>\n<div class=\"grid [direction:ltr] grid-cols-2 place-items-center tracking-widest text-xs\"><span class=\"text-base-content/40\">daisyUI 4</span><span class=\"text-base-content\">daisyUI 5</span></div>\n```\n\n----------------------------------------\n\nTITLE: Basic Table Implementation in DaisyUI\nDESCRIPTION: Implementation of a basic table structure with header and body sections. The table includes columns for ID, Name, Job, and Favorite Color with basic styling using the table class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"$$table\">\n    <!-- head -->\n    <thead>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Favorite Color</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- row 1 -->\n      <tr>\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Blue</td>\n      </tr>\n      <!-- row 2 -->\n      <tr>\n        <th>2</th>\n        <td>Hart Hagerty</td>\n        <td>Desktop Support Technician</td>\n        <td>Purple</td>\n      </tr>\n      <!-- row 3 -->\n      <tr>\n        <th>3</th>\n        <td>Brice Swyre</td>\n        <td>Tax Accountant</td>\n        <td>Red</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Simplifying Input Classes in HTML\nDESCRIPTION: This snippet demonstrates the changes in Input component classes, including the removal of 'input-bordered' and the new default border style.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<!-- Input with border -->\n<input class=\"input\"/>\n\n<!-- Input without border -->\n<input class=\"input input-ghost\"/>\n\n<!-- Input with consistent width -->\n<input class=\"input\"/>\n```\n\n----------------------------------------\n\nTITLE: Downloading Tailwind CSS Executable Files for Different Operating Systems\nDESCRIPTION: Commands to download the Tailwind CSS standalone CLI executable for various operating systems. The file is downloaded directly to the static directory of the Zola project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Run the corresponding command for your OS\n\n# Linux\ncurl -sLo static/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64\ncurl -sLo static/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64-musl\ncurl -sLo static/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64\ncurl -sLo static/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64-musl\n\n# MacOS\ncurl -sLo static/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64\ncurl -sLo static/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-x64\n\n# Windows\ncurl -sLo static\\tailwindcss.exe https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-windows-x64.exe\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Vertical Timeline without Icons in DaisyUI\nDESCRIPTION: A minimalist vertical timeline implementation showing Apple product history with alternating left and right aligned content boxes. This version excludes icons for a cleaner appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Initializing Deno Fresh Project with Custom Options - Terminal\nDESCRIPTION: This snippet demonstrates creating a new Deno Fresh project using the command line. The parameters include disabling Tailwind and VSCode by default, and navigating into the project directory using \\cd myapp\\'. Dependencies required include Deno installed on the system. The expected outcome is a new \\'myapp\\' directory prepped for further customizations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/fresh/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: Terminal\nCODE:\n```\ndeno run -A -r https://fresh.deno.dev myapp --tailwind=false --vscode=false\\ncd myapp\n```\n\n----------------------------------------\n\nTITLE: Creating Status Components with Different Sizes in HTML\nDESCRIPTION: Demonstrates how to implement status indicators in various sizes using DaisyUI's size modifiers. Includes examples for extra small, small, medium, large, and extra large sizes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/status/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div aria-label=\"status\" class=\"$$status $$status-xs\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-sm\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-md\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-lg\"></div>\n<div aria-label=\"status\" class=\"$$status $$status-xl\"></div>\n```\n\n----------------------------------------\n\nTITLE: Displaying Radial Progress with Different Values in HTML\nDESCRIPTION: Showcases multiple radial progress bars in HTML with varying values. It demonstrates how different progress levels can be visually represented using identical structural components.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$radial-progress\" style=\"--$$value:0;\" aria-valuenow=\"0\" role=\"progressbar\">0%</div>\n<div class=\"$$radial-progress\" style=\"--$$value:20;\" aria-valuenow=\"20\" role=\"progressbar\">20%</div>\n<div class=\"$$radial-progress\" style=\"--$$value:60;\" aria-valuenow=\"60\" role=\"progressbar\">60%</div>\n<div class=\"$$radial-progress\" style=\"--$$value:80;\" aria-valuenow=\"80\" role=\"progressbar\">80%</div>\n<div class=\"$$radial-progress\" style=\"--$$value:100;\" aria-valuenow=\"100\" role=\"progressbar\">100%</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Validator Component in HTML\nDESCRIPTION: This snippet demonstrates the basic syntax for using the DaisyUI validator component. It includes an input field with the validator class and a corresponding error message element.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_68\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"{type}\" class=\"input validator\" required />\n<p class=\"validator-hint\">Error message</p>\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies\nDESCRIPTION: Command to install Tailwind CSS and daisyUI packages using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vike/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Implementing Neutral Color Progress Bars in DaisyUI\nDESCRIPTION: This snippet illustrates how to create progress bars with a neutral color theme using DaisyUI classes. It showcases multiple progress bars with varying completion percentages, all styled with the neutral color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-neutral w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-neutral w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-neutral w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-neutral w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-neutral w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Pagination with Disabled Button in DaisyUI\nDESCRIPTION: Illustrates a pagination component with a disabled button in the middle, typically used to indicate skipped page numbers. This example shows a pagination for a large number of pages (1 to 100).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/pagination/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn\">1</button>\n  <button class=\"$$join-item $$btn\">2</button>\n  <button class=\"$$join-item $$btn $$btn-disabled\">...</button>\n  <button class=\"$$join-item $$btn\">99</button>\n  <button class=\"$$join-item $$btn\">100</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Integrating a Date Input with daisyUI Styles in HTML\nDESCRIPTION: This code snippet provides an example of using a date input field while utilizing the 'input' class for styling. It is particularly useful for forms that require date picking functionalities.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"date\" class=\"$$input\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Textarea with DaisyUI HTML\nDESCRIPTION: This snippet demonstrates the creation of a standard HTML textarea element styled with the base DaisyUI `textarea` class. The `placeholder` attribute provides hint text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/textarea/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<textarea class=\"$$textarea\" placeholder=\"Bio\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Implementing Medium Size Dock Component with DaisyUI in HTML\nDESCRIPTION: This snippet shows how to create a medium size dock component using DaisyUI classes. It includes three buttons with SVG icons and labels, one of which is marked as active.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock $$dock-md\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n    <span class=\"$$dock-label\">Home</span>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n    <span class=\"$$dock-label\">Inbox</span>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n    <span class=\"$$dock-label\">Settings</span>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Responsive Timeline with DaisyUI\nDESCRIPTION: This HTML code creates a responsive timeline component using DaisyUI that displays product release dates. The timeline is vertical by default but switches to horizontal layout on large screens using the 'lg:timeline-horizontal' class. Each timeline item includes a year, an SVG checkmark, and a product name.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical lg:$$timeline-horizontal\">\n  <li>\n    <div class=\"$$timeline-start\">1984</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">1998</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2001</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2007</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start\">2015</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Cally Date Picker with Dropdown\nDESCRIPTION: Implementation of a Cally date picker with daisyUI dropdown functionality and custom styling. Includes button trigger and popover functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button popovertarget=\"cally-popover1\" class=\"$$input $$input-border\" id=\"cally1\" style=\"anchor-name:--cally1\">\n  Pick a date\n</button>\n<div popover id=\"cally-popover1\" class=\"$$dropdown bg-base-100 rounded-box shadow-lg\" style=\"position-anchor:--cally1\">\n  <calendar-date class=\"$$cally\" onchange={document.getElementById('cally1').innerText = this.value}>\n    <svg aria-label=\"Previous\" class=\"fill-current size-4\" slot=\"previous\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M15.75 19.5 8.25 12l7.5-7.5\"></path></svg>\n    <svg aria-label=\"Next\" class=\"fill-current size-4\" slot=\"next\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"m8.25 4.5 7.5 7.5-7.5 7.5\"></path></svg>\n    <calendar-month></calendar-month>\n  </calendar-date>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Product Details Component\nDESCRIPTION: Example product details page component showing the layout structure for individual products\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-nextjs-online-store-template/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst ProductDetails = () => {\n  return (\n    <div className=\"pb-20\">\n      <div className=\"mt-10 flex flex-col\">\n        <div className=\"flex flex-col lg:grid gap-6 lg:gap-12 lg:grid-cols-2\">\n          <ProductImage params={{ slug: slug as string }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Toggle Size Variants\nDESCRIPTION: Shows different size variants of the toggle component using size modifier classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-xs\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-sm\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-md\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-lg\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle $$toggle-xl\" />\n```\n\n----------------------------------------\n\nTITLE: Applying Mask Shapes to Images with DaisyUI\nDESCRIPTION: This code demonstrates how to crop content to common shapes using DaisyUI's mask component. Various shape modifiers are available including squircle, heart, hexagon, and more.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_37\n\nLANGUAGE: html\nCODE:\n```\n<img class=\"mask {MODIFIER}\" src=\"{image-url}\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Alternative Star Rating with Green Color\nDESCRIPTION: Rating component using the mask-star-2 class with green-500 color for all stars. The checked attribute on the second input indicates a 2-star rating is currently selected.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating\">\n  <input type=\"radio\" name=\"rating-4\" class=\"$$mask $$mask-star-2 bg-green-500\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-4\" class=\"$$mask $$mask-star-2 bg-green-500\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-4\" class=\"$$mask $$mask-star-2 bg-green-500\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-4\" class=\"$$mask $$mask-star-2 bg-green-500\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-4\" class=\"$$mask $$mask-star-2 bg-green-500\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Stat Component in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates the basic structure of a Stat component in DaisyUI. It includes a title, value, and description within a stats container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats shadow\">\n  <div class=\"$$stat\">\n    <div class=\"$$stat-title\">Total Page Views</div>\n    <div class=\"$$stat-value\">89,400</div>\n    <div class=\"$$stat-desc\">21% more than last month</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Migrating Select Component Usage\nDESCRIPTION: Examples showing the updated select component usage with new default styling and ghost variant.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!-- Select with border -->\n<select class=\"select select-bordered\">\n\n<!-- Select without border -->\n<select class=\"select\">\n\n<!-- Select with consistent width -->\n<select class=\"select w-full max-w-xs\">\n```\n\nLANGUAGE: html\nCODE:\n```\n<!-- Select with border -->\n<select class=\"select\">\n\n<!-- Select without border -->\n<select class=\"select select-ghost\">\n\n<!-- Select with consistent width -->\n<select class=\"select\">\n```\n\n----------------------------------------\n\nTITLE: Basic Badge Implementation\nDESCRIPTION: Simple badge implementation with the basic badge class\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"$$badge\">Badge</span>\n```\n\n----------------------------------------\n\nTITLE: Initializing a Bun Project (Shell)\nDESCRIPTION: This command initializes a new Bun project in the current directory. The `-y` flag accepts the default settings, creating essential files like `package.json` automatically.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/bun/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbun init -y\n```\n\n----------------------------------------\n\nTITLE: Style Tag Implementation\nDESCRIPTION: CSS style definition to hide heading anchor link icons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/layout-and-typography/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .heading-anchorlink-icon{display:none}\n</style>\n```\n\n----------------------------------------\n\nTITLE: Creating Menu with Disabled Items in DaisyUI\nDESCRIPTION: This code shows how to implement a menu with both enabled and disabled items in DaisyUI. The menu-disabled class is applied to specific list items to visually indicate and functionally disable those menu options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu bg-base-200 $$rounded-box w-56\">\n  <li><a>Enabled item</a></li>\n  <li class=\"$$menu-disabled\"><a>disabled item</a></li>\n  <li class=\"$$menu-disabled\"><a>disabled item</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Neutral Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with neutral color styling using link-neutral class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-neutral\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Displaying Image in HTML for DaisyUI List Component\nDESCRIPTION: This HTML snippet shows how to display an image for the new List component in DaisyUI 5. It uses classes for centering and rounding the image.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<img class=\"mx-auto rounded-box\" src=\"https://img.daisyui.com/images/blog/list.webp\" alt=\"daisyui tailwind list\">\n```\n\n----------------------------------------\n\nTITLE: Indeterminate Checkbox Implementation\nDESCRIPTION: Example of implementing an indeterminate checkbox state using JavaScript\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!-- You can make a checkbox indeterminate using JS -->\n<script>\n  document.getElementById(\"my-checkbox\").indeterminate = true\n</script>\n<input type=\"checkbox\" class=\"$$checkbox\" id=\"my-checkbox\" />\n```\n\n----------------------------------------\n\nTITLE: Starting Rails Server\nDESCRIPTION: Command to start the Rails development server\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n./bin/dev\n```\n\n----------------------------------------\n\nTITLE: Implementing Alternative Star Style Rating with Custom Color\nDESCRIPTION: Rating component using the mask-star-2 class for an alternative star style with orange background color. The checked attribute indicates the currently selected rating value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating\">\n  <input type=\"radio\" name=\"rating-2\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-2\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-2\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-2\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-2\" class=\"$$mask $$mask-star-2 bg-orange-400\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Indeterminate Progress Bar in DaisyUI\nDESCRIPTION: This code demonstrates how to implement an indeterminate progress bar using DaisyUI classes. The progress bar is created without a specific value, indicating an ongoing process with unknown completion time.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress w-56\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Text Input in HTML\nDESCRIPTION: This snippet demonstrates a basic text input field styled with the 'input' class from daisyUI. The field uses the placeholder 'Type here' and shows how to apply the input class to create consistent styling. It's suitable for any typical text input scenario and requires no additional dependencies.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" placeholder=\"Type here\" class=\"$$input\" />\n```\n\n----------------------------------------\n\nTITLE: Stacked Images Implementation\nDESCRIPTION: Shows how to stack multiple images with rounded corners and fixed width.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stack/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stack w-48\">\n  <img src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\" class=\"rounded-box\" />\n  <img src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\" class=\"rounded-box\" />\n  <img src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\" class=\"rounded-box\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Collapsible Submenu Creation in HTML\nDESCRIPTION: This snippet introduces a collapsible feature to submenus using HTML details and summary elements, styled with Tailwind CSS. It provides ways to expand and collapse sections within a menu, enabling concise UI design. Default states are set as open, but they can be customized.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li><button>Item 1</button></li>\n  <li>\n    <details open>\n      <summary>Parent</summary>\n      <ul>\n        <li><button>Submenu 1</button></li>\n        <li><button>Submenu 2</button></li>\n        <li>\n          <details open>\n            <summary>Parent</summary>\n            <ul>\n              <li><button>Submenu 1</button></li>\n              <li><button>Submenu 2</button></li>\n            </ul>\n          </details>\n        </li>\n      </ul>\n    </details>\n  </li>\n  <li><button>Item 3</button></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Submenu Implementation in HTML\nDESCRIPTION: This code snippet implements a hierarchical menu structure with submenus that allow for layers of navigation. It utilizes nested lists to introduce dropdown-style submenus using Tailwind CSS for styling. Parent items encapsulate submenu buttons for a defined hierarchy.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li><button>Item 1</button></li>\n  <li>\n    <button>Parent</button>\n    <ul>\n      <li><button>Submenu 1</button></li>\n      <li><button>Submenu 2</button></li>\n      <li>\n        <button>Parent</button>\n        <ul>\n          <li><button>Submenu 1</button></li>\n          <li><button>Submenu 2</button></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li><button>Item 3</button></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Nested Theme Example\nDESCRIPTION: Demonstrates how to nest different themes within HTML elements using data-theme attributes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<html data-theme=\"dark\">\n  <div data-theme=\"light\">\n    This div will always use light theme\n    <span data-theme=\"retro\">This span will always use retro theme!</span>\n  </div>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Displaying DaisyUI Logo Grid in HTML\nDESCRIPTION: HTML markup for displaying a responsive grid of DaisyUI logo variants with download links. Includes static logos, type logos, horizontal logos, rotating logos, and monochrome versions in both light and dark themes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/brand/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"grid sm:grid-cols-2 gap-4\">\n  <div class=\"m-2 outline-2 outline-offset-4 outline-base-content/5 bg-white rounded-box py-12 px-4 flex flex-col gap-6 items-center\">\n    <img class=\"size-32\" src=\"https://img.daisyui.com/images/daisyui/mark-static.svg\" alt=\"daisyUI Logo\" />\n    <div class=\"flex gap-2 sm:gap-4 text-[0.6875rem] opacity-70 text-black\">\n      <a target=\"_blank\" rel=\"noopener, noreferrer\" class=\"no-underline hover:underline text-black\" href=\"https://img.daisyui.com/images/daisyui/mark-static.svg\">SVG</a>\n      <a target=\"_blank\" rel=\"noopener, noreferrer\" class=\"no-underline hover:underline text-black\" href=\"https://img.daisyui.com/images/daisyui/mark-compressed.svg\">Minified SVG</a>\n      <a target=\"_blank\" rel=\"noopener, noreferrer\" class=\"no-underline hover:underline text-black\" href=\"https://img.daisyui.com/images/daisyui/daisyui-logo-2000.png\">PNG</a>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Migrating from form-control to fieldset/legend in DaisyUI\nDESCRIPTION: Example showing how to migrate from the deprecated form-control and label-text classes to the new fieldset and legend elements for improved accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_22\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-control w-full max-w-xs\">\n  Login\n  <div class=\"label\">\n    <span class=\"label-text\">Name</span>\n  </div>\n  <input class=\"input\" placeholder=\"Name\" />\n</label>\n```\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"fieldset\">\n  <legend>Login</legend>\n  <label class=\"label\" for=\"name\">Name</label>\n  <input id=\"name\" class=\"input\" placeholder=\"Name\" />\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Integrating Textarea within Fieldset with DaisyUI HTML\nDESCRIPTION: This snippet illustrates how to embed a textarea within a structured form using a `fieldset` and `legend`, styled with DaisyUI's `fieldset`, `fieldset-legend`, and `label` classes. The textarea is given a specific height using `h-24`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/textarea/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <legend class=\"$$fieldset-legend\">Your bio</legend>\n  <textarea class=\"$$textarea h-24\" placeholder=\"Bio\"></textarea>\n  <div class=\"$$label\">Optional</div>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Tailwind and DaisyUI CSS Configuration\nDESCRIPTION: Sets up a CSS input file for Tailwind CSS and daisyUI by importing the necessary plugins. This configuration is crucial for generating the app’s CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Applying Leftward Triangle Mask in DaisyUI\nDESCRIPTION: Applies a leftward-pointing triangle mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-triangle-3\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Join Component\nDESCRIPTION: HTML structure for joining multiple items together with directional options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_31\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"join {MODIFIER}\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Lists with DaisyUI in HTML\nDESCRIPTION: This code shows how to create a vertical list layout using DaisyUI's list component. Each item in the list is represented by a list-row class, and additional modifiers can be used to control the layout behavior.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_35\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"list\">\n  <li class=\"list-row\">{CONTENT}</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating React Router Project\nDESCRIPTION: Command to create a new React Router project in the current directory using npm\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/reactrouter/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create react-router@latest ./\n```\n\n----------------------------------------\n\nTITLE: Adding daisyUI with Themes Configuration\nDESCRIPTION: Shows how to add daisyUI to your CSS file with theme configuration using the new Tailwind CSS 4 plugin syntax.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\" {\n  themes: light --default, dark --prefersdark, cupcake;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding daisyUI Plugin to WordPress CSS\nDESCRIPTION: This code snippet shows how to add daisyUI as a plugin in the main.css file of a WordPress project using the WindPress plugin. After adding this single line, you can use all daisyUI class names in your WordPress project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/wordpress/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: postcss\nCODE:\n```\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination with Active Button in DaisyUI\nDESCRIPTION: Creates a basic pagination component with an active button using DaisyUI's join component. This example shows four numbered buttons with the second one marked as active.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/pagination/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join\">\n  <button class=\"$$join-item $$btn\">1</button>\n  <button class=\"$$join-item $$btn $$btn-active\">2</button>\n  <button class=\"$$join-item $$btn\">3</button>\n  <button class=\"$$join-item $$btn\">4</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Toast with Bottom-Center Position\nDESCRIPTION: Demonstrates a toast centered at the bottom of the page (with bottom being default).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-center\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating File Input Border in daisyUI 5\nDESCRIPTION: Shows how to update file input with borders as they now have borders by default in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\n- <input type=\"file\" class=\"file-input file-input-bordered\">\n+ <input type=\"file\" class=\"file-input\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS with daisyUI Plugin - PostCSS\nDESCRIPTION: This PostCSS configuration uses @import to include Tailwind CSS and applies the daisyUI plugin. The '@source' directive specifies source files for processing. Prerequisites: Tailwind CSS and daisyUI installed. Ensures Tailwind and daisyUI features are available in all source HTML and JS files under the public directory. Intended for app.css or main CSS entry point.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/htmx/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"./public/*.{html,js}\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Running Mary UI Installer on a New Laravel Project\nDESCRIPTION: Command to run the Mary UI installer for automatic setup on a new Laravel project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan mary:install\n```\n\n----------------------------------------\n\nTITLE: Forcing Tooltips to Stay Open with tooltip-open (HTML)\nDESCRIPTION: This code demonstrates the use of the 'tooltip-open' modifier to keep the tooltip open without requiring a hover interaction. Used in conjunction with the 'tooltip' base class, this can display persistent tooltips for important status or accessibility. Requires daisyUI with no additional JavaScript necessary.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open\" data-tip=\"hello\">\n  <button class=\"$$btn\">Force open</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating an Extra Small Dock Component in HTML\nDESCRIPTION: This snippet shows how to implement an extra small version of the Dock component using the 'dock-xs' class. It includes the same navigation items as the basic version but without labels.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock $$dock-xs\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Rating Component in DaisyUI\nDESCRIPTION: Radio button based rating component with star masks and optional modifiers for size and style.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_53\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"rating {MODIFIER}\">\n  <input type=\"radio\" name=\"rating-1\" class=\"mask mask-star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Fieldset and Label Checkbox Implementation\nDESCRIPTION: Example of a checkbox within a fieldset with a label, using DaisyUI classes for styling\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset bg-base-100 border-base-300 rounded-box w-64 border p-4\">\n  <legend class=\"$$fieldset-legend\">Login options</legend>\n  <label class=\"$$label\">\n    <input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox\" />\n    Remember me\n  </label>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Implementing Card as Dropdown Content in DaisyUI\nDESCRIPTION: Demonstrates using a card component as dropdown content instead of a menu list. Shows the flexibility of dropdown content types.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click</div>\n  <div\n    tabindex=\"0\"\n    class=\"$$dropdown-content $$card $$card-sm bg-base-100 z-1 w-64 shadow-md\">\n    <div class=\"$$card-body\">\n      <p>This is a card. You can use any element as a dropdown.</p>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Menu with Title in HTML\nDESCRIPTION: This HTML snippet adds a title to a menu component utilizing Tailwind CSS for styling. It demonstrates the use of 'menu-title' class for designating a title element within a menu structure. The title distinguishes sections from the menu items located below it.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li class=\"menu-title\">Title</li>\n  <li><button>Item 1</button></li>\n  <li><button>Item 2</button></li>\n  <li><button>Item 3</button></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Theme-Specific Styling\nDESCRIPTION: Example of applying custom styles for elements only when a specific theme is active\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n[data-theme=\"light\"] {\n  .my-btn {\n    background-color: #1EA1F1;\n    border-color: #1EA1F1;\n  }\n  .my-btn:hover {\n    background-color: #1C96E1;\n    border-color: #1C96E1;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Navbar with Menu and Submenu in HTML using daisyUI\nDESCRIPTION: This example shows how to implement a navbar with a menu and submenu. It uses the 'menu' and 'menu-horizontal' classes for the menu structure, and 'details' and 'summary' tags for the submenu functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$navbar bg-base-100 shadow-sm\">\n  <div class=\"flex-1\">\n    <a class=\"$$btn $$btn-ghost text-xl\">daisyUI</a>\n  </div>\n  <div class=\"flex-none\">\n    <ul class=\"$$menu $$menu-horizontal px-1\">\n      <li><a>Link</a></li>\n      <li>\n        <details>\n          <summary>Parent</summary>\n          <ul class=\"bg-base-100 rounded-t-none p-2\">\n            <li><a>Link 1</a></li>\n            <li><a>Link 2</a></li>\n          </ul>\n        </details>\n      </li>\n    </ul>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding a Class Prefix in daisyUI PostCSS Configuration\nDESCRIPTION: Example configuring a prefix `d-` for all daisyUI CSS classes (e.g., `.btn` becomes `.d-btn`) using the `prefix` property. This helps avoid naming conflicts when integrating daisyUI with other CSS frameworks or existing styles.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  prefix: \"d-\";\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Vertical Divider in DaisyUI\nDESCRIPTION: A basic example of a vertical divider with text that separates content into sections above and below it. The divider contains the text 'OR' between two card elements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full flex-col\">\n  <div class=\"$$card bg-base-300 rounded-box grid h-20 place-items-center\">content</div>\n  <div class=\"$$divider\">OR</div>\n  <div class=\"$$card bg-base-300 rounded-box grid h-20 place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Horizontal Hexagon Mask in DaisyUI\nDESCRIPTION: Applies a horizontal hexagon-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-hexagon-2\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Horizontally Scrollable DaisyUI Tabs using HTML\nDESCRIPTION: This snippet illustrates how to make DaisyUI tabs (`tabs-lift` style shown) horizontally scrollable when the content exceeds the available width. This is achieved by wrapping the `tabs` container in a parent `div` with `overflow-x-auto` and a `max-w-*` utility (e.g., `max-w-60`). The inner tabs container (`div.tabs`) is given `min-w-max` to ensure it expands to fit its content. The `tab-content` divs use `sticky start-0` to remain visible at the start of the container while scrolling. Requires DaisyUI CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto max-w-60\">\n  <div class=\"$$tabs-lift $$tabs min-w-max\">\n    <input type=\"radio\" name=\"my_tabs_7\" class=\"$$tab z-1\" aria-label=\"Tab title 1\" />\n    <div class=\"sticky start-0 $$tab-content max-w-60 border-base-300 bg-base-100 p-6\">Tab content 1</div>\n    <input type=\"radio\" name=\"my_tabs_7\" class=\"$$tab z-1\" aria-label=\"Tab title 2\" checked=\"checked\" />\n    <div class=\"sticky start-0 $$tab-content max-w-60 border-base-300 bg-base-100 p-6\">Tab content 2</div>\n    <input type=\"radio\" name=\"my_tabs_7\" class=\"$$tab z-1\" aria-label=\"Tab title 3\" />\n    <div class=\"sticky start-0 $$tab-content max-w-60 border-base-300 bg-base-100 p-6\">Tab content 3</div>\n    <input type=\"radio\" name=\"my_tabs_7\" class=\"$$tab z-1\" aria-label=\"Tab title 4\" />\n    <div class=\"sticky start-0 $$tab-content max-w-60 border-base-300 bg-base-100 p-6\">Tab content 4</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring MCP Server for Context7 DaisyUI Support - JSON Diff\nDESCRIPTION: This JSON diff snippet demonstrates how to add a new MCP server entry named 'Context7' within the .cursor/mcp.json file. It specifies a stdio type connection using npx to launch the @upstash/context7-mcp package, enabling enhanced AI-powered code understanding for daisyUI. Ensure npx is available and you have write access to .cursor/mcp.json. The configuration should be merged into the file as shown.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/cursor/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"mcpServers\": {\n+   \"Context7\": {\n+     \"type\": \"stdio\",\n+     \"command\": \"npx\",\n+     \"args\": [\"-y\", \"@upstash/context7-mcp@latest\"]\n+   }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Components for Installation Page\nDESCRIPTION: This Svelte script block imports necessary components (`Translate`, `Install`) from specified paths within the project structure. It also declares an exported variable `data`, indicating that this component expects to receive data (likely framework information) from its parent.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n  import Install from \"$components/homepage/Install.svelte\"\n  export let data\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Full Width Carousel Items with DaisyUI in HTML\nDESCRIPTION: Creates a horizontal carousel with full-width items using DaisyUI's carousel component. Each carousel item spans the full width of the container, displaying a series of images in a scrollable format with rounded corners.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/carousel/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$carousel rounded-box w-64\">\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n  <div class=\"$$carousel-item w-full\">\n    <img\n      src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"\n      class=\"w-full\"\n      alt=\"Tailwind CSS Carousel component\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Toast with Bottom-Start Position\nDESCRIPTION: Shows a toast positioned at the bottom-left corner (with bottom being default).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-start\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating New Solid Project via Terminal\nDESCRIPTION: Command to create a new Solid.js project using degit template\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx degit solidjs/templates/js\n```\n\n----------------------------------------\n\nTITLE: Rendering Basic Kbd Component in HTML\nDESCRIPTION: Demonstrates how to create a basic keyboard key display using the Kbd component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<kbd class=\"$$kbd\">K</kbd>\n```\n\n----------------------------------------\n\nTITLE: Updating Menu Item Classes in HTML\nDESCRIPTION: This snippet shows the breaking changes in Menu component classes, including renaming 'disabled', 'active', and 'focus' classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n- <ul class=\"menu\">\n+ <ul class=\"menu w-full\">\n\n-   <li class=\"disabled\"><a>disabled item</a></li>\n+   <li class=\"menu-disabled\"><a>disabled item</a></li>\n\n-   <li class=\"active\"><a>active item</a></li>\n+   <li class=\"menu-active\"><a>active item</a></li>\n\n-   <li class=\"focus\"><a>focus item</a></li>\n+   <li class=\"menu-focus\"><a>focus item</a></li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Username Validation Implementation\nDESCRIPTION: Username validation with requirements for length and allowed characters.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"input\" class=\"$$input $$validator\" required placeholder=\"Username\" \n  pattern=\"[A-Za-z][A-Za-z0-9\\\\-]*\" minlength=\"3\" maxlength=\"30\" title=\"Only letters, numbers or dash\" />\n<p class=\"$$validator-hint\">\n  Must be 3 to 30 characters\n  <br/>containing only letters, numbers or dash\n</p>\n```\n\n----------------------------------------\n\nTITLE: Vertical Icon-Only Menu\nDESCRIPTION: A vertical menu implementation with SVG icons instead of text labels. Each menu item contains an SVG icon representing different functions.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$menu bg-base-200 $$rounded-box\">\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </a>\n  </li>\n  <li>\n    <a>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-5 w-5\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n      </svg>\n    </a>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Ghost Style File Input\nDESCRIPTION: Implementation of a file input with ghost styling using the file-input-ghost modifier class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/file-input/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\" class=\"$$file-input $$file-input-ghost\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Skeleton Loading Component in DaisyUI\nDESCRIPTION: Simple skeleton component for loading state indication.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_55\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"skeleton\"></div>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic iPhone Mockup with DaisyUI\nDESCRIPTION: This snippet shows how to create a basic iPhone mockup using DaisyUI classes. It includes a camera element and a display area with centered text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-phone/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-phone\">\n  <div class=\"$$mockup-phone-camera\"></div>\n  <div class=\"$$mockup-phone-display text-white grid place-content-center\">It's Glowtime.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Music Playlist with Growing Third Column List in DaisyUI\nDESCRIPTION: This snippet demonstrates how to implement a stylized list component in DaisyUI for displaying music playlists. The component uses 'list', 'list-row', and 'list-col-grow' classes to create a structured layout with numbered items, thumbnails, growing song information columns, and play buttons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/list/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$list bg-base-100 rounded-box shadow-md\">\n  \n  <li class=\"p-4 pb-2 text-xs opacity-60 tracking-wide\">Most played songs this week</li>\n  \n  <li class=\"$$list-row\">\n    <div class=\"text-4xl font-thin opacity-30 tabular-nums\">01</div>\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/1@94.webp\"/></div>\n    <div class=\"$$list-col-grow\">\n      <div>Dio Lupa</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Remaining Reason</div>\n    </div>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n  </li>\n  \n  <li class=\"$$list-row\">\n    <div class=\"text-4xl font-thin opacity-30 tabular-nums\">02</div>\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/4@94.webp\"/></div>\n    <div class=\"$$list-col-grow\">\n      <div>Ellie Beilish</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Bears of a fever</div>\n    </div>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n  </li>\n  \n  <li class=\"$$list-row\">\n    <div class=\"text-4xl font-thin opacity-30 tabular-nums\">03</div>\n    <div><img class=\"size-10 rounded-box\" src=\"https://img.daisyui.com/images/profile/demo/3@94.webp\"/></div>\n    <div class=\"$$list-col-grow\">\n      <div>Sabrino Gardener</div>\n      <div class=\"text-xs uppercase font-semibold opacity-60\">Cappuccino</div>\n    </div>\n    <button class=\"$$btn $$btn-square $$btn-ghost\">\n      <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"2\" fill=\"none\" stroke=\"currentColor\"><path d=\"M6 3L20 12 6 21 6 3z\"></path></g></svg>\n    </button>\n  </li>\n  \n</ul>\n```\n\n----------------------------------------\n\nTITLE: Enabling Custom Theme\nDESCRIPTION: Demonstrates how to enable specific themes including the cupcake theme in daisyUI configuration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\" {\n  themes: light --default, dark --prefersdark, cupcake;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Steps with DaisyUI\nDESCRIPTION: Implements a vertical steps component by adding the 'steps-vertical' class. This displays steps in a vertical orientation which is useful for mobile interfaces or when space is limited horizontally.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$steps $$steps-vertical\">\n  <li class=\"$$step $$step-primary\">Register</li>\n  <li class=\"$$step $$step-primary\">Choose plan</li>\n  <li class=\"$$step\">Purchase</li>\n  <li class=\"$$step\">Receive Product</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Error Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with error color styling using link-error class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-error\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Creating Stat Component with Icons and Images in HTML using DaisyUI\nDESCRIPTION: This code snippet shows how to create a more complex Stat component with icons, images, and multiple stat items. It uses SVG icons and an avatar image to enhance the visual presentation of the stats.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stat/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stats shadow\">\n  <div class=\"$$stat\">\n    <div class=\"$$stat-figure text-primary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        class=\"inline-block h-8 w-8 stroke-current\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"></path>\n      </svg>\n    </div>\n    <div class=\"$$stat-title\">Total Likes</div>\n    <div class=\"$$stat-value text-primary\">25.6K</div>\n    <div class=\"$$stat-desc\">21% more than last month</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-figure text-secondary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        class=\"inline-block h-8 w-8 stroke-current\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M13 10V3L4 14h7v7l9-11h-7z\"></path>\n      </svg>\n    </div>\n    <div class=\"$$stat-title\">Page Views</div>\n    <div class=\"$$stat-value text-secondary\">2.6M</div>\n    <div class=\"$$stat-desc\">21% more than last month</div>\n  </div>\n\n  <div class=\"$$stat\">\n    <div class=\"$$stat-figure text-secondary\">\n      <div class=\"$$avatar $$online\">\n        <div class=\"w-16 rounded-full\">\n          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"$$stat-value\">86%</div>\n    <div class=\"$$stat-title\">Tasks done</div>\n    <div class=\"$$stat-desc text-secondary\">31 tasks remaining</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating Avatar Offline Status in daisyUI 5\nDESCRIPTION: Shows how to update avatar offline status class from 'offline' to 'avatar-offline' in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"avatar offline\">\n+ <div class=\"avatar avatar-offline\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Radial Progress Size and Thickness in JSX\nDESCRIPTION: Presents JSX samples for adjusting the size and thickness of a radial progress component, leveraging React's style properties to dynamically control visual appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radial-progress/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<div className=\"$$radial-progress\"\n  style={{ \"--$$value\": \"70\", \"--$$size\": \"12rem\", \"--$$thickness\": \"2px\" } /* as React.CSSProperties */ } \n  aria-valuenow={70} role=\"progressbar\">70%</div>\n\n<div className=\"$$radial-progress\"\n  style={{ \"--$$value\": \"70\", \"--$$size\": \"12rem\", \"--$$thickness\": \"2rem\" } /* as React.CSSProperties */ } \n  aria-valuenow={70} role=\"progressbar\">70%</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies with NPM\nDESCRIPTION: Command to install PostCSS, Tailwind CSS, and daisyUI packages using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/postcss/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm i postcss postcss-cli tailwindcss @tailwindcss/postcss daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Designing Menu with Title as Parent in HTML\nDESCRIPTION: This snippet incorporates a title as a parent element above nested menu items, styled with Tailwind CSS. It uses an h2 element for the title, enclosing a list of subordinate buttons within a subgroup. The structure is essential for categorized menu sections.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li>\n    <h2 class=\"menu-title\">Title</h2>\n    <ul>\n      <li><button>Item 1</button></li>\n      <li><button>Item 2</button></li>\n      <li><button>Item 3</button></li>\n    </ul>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing Headless UI for Vue\nDESCRIPTION: Command to install Headless UI package for Vue projects using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-use-headless-ui-and-daisyui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @headlessui/vue\n```\n\n----------------------------------------\n\nTITLE: Removing daisyUI from Tailwind Config before Upgrading\nDESCRIPTION: Shows how to remove daisyUI plugin and configuration from tailwind.config.js before running the Tailwind CSS upgrade tool.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\nmodule.exports = {\n   content: ['./your-files/**/*.{html,js}'],\n   // other stuff...\n-  daisyui: {\n-    themes: ['light', 'dark', 'cupcake'],\n-  },\n- plugins: [require(\"daisyui\")],\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Avatar with Ring in HTML using DaisyUI\nDESCRIPTION: This snippet demonstrates how to add a ring to an avatar using DaisyUI classes. It uses the ring, ring-primary, and ring-offset classes to create the effect.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar\">\n  <div class=\"ring-primary ring-offset-base-100 w-24 rounded-full ring ring-offset-2\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Radio Buttons in HTML\nDESCRIPTION: This snippet demonstrates the basic usage of radio inputs. It shows how to implement two radio buttons with identical 'name' attributes to allow a mutual exclusion feature. Ensure that each radio set has a unique 'name' to prevent conflicts on the same page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-1\" class=\"$$radio\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-1\" class=\"$$radio\" />\n```\n\n----------------------------------------\n\nTITLE: Documentation Header Component - JSX/HTML\nDESCRIPTION: Header component implementation for the documentation page including navigation and theme toggle.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-astro-tailwind-documentation-template/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<header class=\"sticky top-0 z-30\">\n  <nav class=\"navbar bg-base-100/90 shadow-sm backdrop-blur-lg justify-center items-center py-2 md:px-10 px-2 border-b border-base-content/10\">\n    <div class=\"navbar-start\">\n      <label for=\"my-drawer-2\" class=\"btn btn-square btn-ghost lg:hidden\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          class=\"inline-block w-5 h-5 stroke-current\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M4 6h16M4 12h16M4 18h16\"\n          ></path>\n        </svg>\n      </label>\n    </div>\n\n    <div class=\"navbar-end\">\n      <a\n        class=\"btn btn-sm btn-ghost\"\n        href=\"https://www.x.com\"\n        aria-label=\"twitter\"\n      >\n        <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"h-4 w-4\">\n          <path\n            d=\"M13.3174 10.7749L19.1457 4H17.7646L12.7039 9.88256L8.66193 4H4L10.1122 12.8955L4 20H5.38119L10.7254 13.7878L14.994 20H19.656L13.3171 10.7749H13.3174ZM11.4257 12.9738L10.8064 12.0881L5.87886 5.03974H8.00029L11.9769 10.728L12.5962 11.6137L17.7652 19.0075H15.6438L11.4257 12.9742V12.9738Z\"\n            fill=\"currentColor\"\n          ></path>\n        </svg>\n      </a>\n      <ThemeToggle />\n    </div>\n  </nav>\n</header>\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS Plugin - Before and After in daisyUI 5\nDESCRIPTION: Example showing the migration from using daisyUI as a plugin in Tailwind config file (daisyUI 4) to importing it directly in CSS file (daisyUI 5) using Tailwind CSS 4's new plugin system.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n// tailwind.config.{js,ts,mjs,cjs}\nmodule.exports = {\n  content: [\"./src/**/*.{html,js}\"],\n  plugins: [\n    require('daisyui');\n  ],\n}\n```\n\nLANGUAGE: postcss\nCODE:\n```\n/* app.css */\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n\n\n\n\n\n```\n\n----------------------------------------\n\nTITLE: Importing Translate Component in Svelte\nDESCRIPTION: Imports the `Translate` component from a relative path (`$components/Translate.svelte`) within a Svelte project. This component is likely used for handling text display or internationalization within the Svelte application.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/grok/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Checkbox Validation\nDESCRIPTION: Required checkbox validation implementation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"$$checkbox $$validator\" required title=\"Required\" />\n<p class=\"$$validator-hint\">Required</p>\n```\n\n----------------------------------------\n\nTITLE: Date Input Validation\nDESCRIPTION: Date input validation with specific range requirements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"date\" class=\"$$input $$validator\" required placeholder=\"Pick a date in 2025\" \nmin=\"2025-01-01\" max=\"2025-12-31\"\n  title=\"Must be valid URL\" />\n<p class=\"$$validator-hint\">Must be 2025</p>\n```\n\n----------------------------------------\n\nTITLE: Badge Size Variations\nDESCRIPTION: Examples of badges in different sizes from extra small to extra large\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-xs\">Xsmall</div>\n<div class=\"$$badge $$badge-sm\">Small</div>\n<div class=\"$$badge $$badge-md\">Medium</div>\n<div class=\"$$badge $$badge-lg\">Large</div>\n<div class=\"$$badge $$badge-xl\">Xlarge</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Countdown in React/JSX\nDESCRIPTION: Shows how to implement the Countdown component in a React/JSX environment. It includes a note about typing for TypeScript users and demonstrates how to set the CSS variable for the countdown value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/countdown/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{/* For TSX uncomment the commented types below */}\n<span class=\"$$countdown\">\n  <span style={{\"--$$value\":59} /* as React.CSSProperties */ } aria-live=\"polite\" aria-label={counter}>59</span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: File Input with Fieldset and Label\nDESCRIPTION: Enhanced file input implementation with fieldset, legend, and label elements for better form organization.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/file-input/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset\">\n  <legend class=\"$$fieldset-legend\">Pick a file</legend>\n  <input type=\"file\" class=\"$$file-input\" />\n  <label class=\"$$label\">Max size 2MB</label>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Alert with Buttons in HTML using DaisyUI\nDESCRIPTION: This snippet shows how to create a responsive alert with buttons using DaisyUI classes. It includes an SVG icon, message, and action buttons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-vertical sm:$$alert-horizontal\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-info h-6 w-6 shrink-0\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n  </svg>\n  <span>we use cookies for no reason.</span>\n  <div>\n    <button class=\"$$btn $$btn-sm\">Deny</button>\n    <button class=\"$$btn $$btn-sm $$btn-primary\">Accept</button>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Viewing Default daisyUI Configuration in PostCSS\nDESCRIPTION: Displays the default configuration block for the daisyUI PostCSS plugin. It lists the default settings for `themes` (light and dark), `root` selector (`:root`), empty `include` and `exclude` lists, an empty `prefix`, and enabled `logs`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:app.css\n@plugin \"daisyui\" {\n  themes: light --default, dark --prefersdark;\n  root: \":root\";\n  include: ;\n  exclude: ;\n  prefix: ;\n  logs: true;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Centering Dropdown Horizontally in HTML\nDESCRIPTION: This snippet shows how to center a dropdown menu horizontally relative to the button using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-center\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click  ⬇️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Disabled State for DaisyUI Select Component - HTML\nDESCRIPTION: HTML implementation of a disabled DaisyUI select component using the disabled attribute.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select\" disabled>\n  <option>You can't touch this</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Creating Window Mockup with Border\nDESCRIPTION: Creates a window mockup component with a border styling using DaisyUI's mockup-window class. Includes a border and content area with centered text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-window/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-window border border-base-300 w-full\">\n  <div class=\"grid place-content-center border-t border-base-300 h-80\">Hello!</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating Tabs Lifted Class in daisyUI 5\nDESCRIPTION: Shows how to update the tabs lifted class from 'tabs-lifted' to 'tabs-lift' in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_19\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"tabs tabs-lifted\">\n+ <div class=\"tabs tabs-lift\">\n```\n\n----------------------------------------\n\nTITLE: Rendering Button with Spacing Indicators\nDESCRIPTION: This HTML snippet demonstrates a button with spacing indicators. It uses DaisyUI classes and custom indicator elements to show the button's dimensions and spacing.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/design/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<figure class={figure}>\n  <div class=\"relative\">\n    <button class=\"btn btn-primary\">Button</button>\n    <div\n      class={`${indicator} start-full top-0 h-full w-12 translate-x-2 flex-row border-s`}>\n      <hr class={`${line} h-px w-full border-s`} />\n      <div class={`${item} indicator-middle indicator-end`}>48</div>\n    </div>\n    <div\n      class={`${indicator} -bottom-full start-0 h-12 w-4 translate-y-2 flex-col border-t`}>\n      <hr class={`${line} h-full w-px border-s`} />\n      <div class={`${item} indicator-center indicator-bottom`}>16</div>\n    </div>\n    <div\n      class={`${indicator} -bottom-full end-0 h-12 w-4 translate-y-2 flex-col border-t`}>\n      <hr class={`${line} h-full w-px border-s`} />\n      <div class={`${item} indicator-center indicator-bottom`}>16</div>\n    </div>\n  </div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Creating a new Laravel project\nDESCRIPTION: Initializes a new Laravel project named 'my-app' and navigates into the project directory. Requires PHP, Composer, and Laravel Installer as per official documentation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/laravel/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nlaravel new my-app\ncd my-app\n```\n\n----------------------------------------\n\nTITLE: Creating Colored Navbars with DaisyUI in HTML\nDESCRIPTION: This snippet shows how to create navbars with different background colors using DaisyUI classes. It demonstrates the use of color utility classes to change the appearance of the navbar.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/navbar/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$navbar bg-neutral text-neutral-content\">\n  <button class=\"$$btn $$btn-ghost text-xl\">daisyUI</button>\n</div>\n\n<div class=\"$$navbar bg-base-300\">\n  <button class=\"$$btn $$btn-ghost text-xl\">daisyUI</button>\n</div>\n\n<div class=\"$$navbar bg-primary text-primary-content\">\n  <button class=\"$$btn $$btn-ghost text-xl\">daisyUI</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Writing New Blog Post in Markdown for Astro\nDESCRIPTION: Markdown structure for creating a new blog post in the Astro blog template, including frontmatter and content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Boosting Sales with Effective Search Engine Optimization (SEO)\ndescription: Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic eos odit sequi minima iure natus, odio tempora sit Lorem ipsum dolor sit.\ndate: 2024/01/12\nimage: ./images/post-1.jpg\nauthor: antonio\nauthorImage: /images/about.jpeg\ncategory: seo\n---\n\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n\n## **Introduction**\n\nIn the digital age, a strong online presence is crucial for businesses looking to thrive. One of the key components of a successful online strategy is Search Engine Optimization (SEO). By optimizing your website for search engines, you can significantly improve your visibility, attract more potential customers, and ultimately boost your sales. In this article, we'll explore some essential SEO strategies to help you achieve these goals.\n```\n\n----------------------------------------\n\nTITLE: Migrating Form Control Structure\nDESCRIPTION: Updated form control structure using fieldset and legend elements for better accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-control w-full max-w-xs\">\n  Login\n  <div class=\"label\">\n    <span class=\"label-text\">Name</span>\n  </div>\n  <input class=\"input\" placeholder=\"Name\" />\n</label>\n```\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"fieldset\">\n  <legend>Login</legend>\n  <label class=\"label\" for=\"name\">Name</label>\n  <input id=\"name\" class=\"input\" placeholder=\"Name\" />\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Ghost Style Badge\nDESCRIPTION: Badge with ghost style for subtle appearance\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-ghost\">ghost</div>\n```\n\n----------------------------------------\n\nTITLE: Using Data Content in DaisyUI Steps\nDESCRIPTION: Shows how to use the data-content attribute to add custom content to step indicators. This provides a way to add symbols, numbers, or other content to the circular step markers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/steps/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$steps\">\n  <li data-content=\"?\" class=\"$$step $$step-neutral\">Step 1</li>\n  <li data-content=\"!\" class=\"$$step $$step-neutral\">Step 2</li>\n  <li data-content=\"✓\" class=\"$$step $$step-neutral\">Step 3</li>\n  <li data-content=\"✕\" class=\"$$step $$step-neutral\">Step 4</li>\n  <li data-content=\"★\" class=\"$$step $$step-neutral\">Step 5</li>\n  <li data-content=\"\" class=\"$$step $$step-neutral\">Step 6</li>\n  <li data-content=\"●\" class=\"$$step $$step-neutral\">Step 7</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Secondary Theme for Radio Buttons\nDESCRIPTION: Shows radio buttons styled with the secondary color theme, achieved by using DaisyUI's `radio-secondary` class for design uniformity.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-5\" class=\"$$radio $$radio-secondary\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-5\" class=\"$$radio $$radio-secondary\" />\n```\n\n----------------------------------------\n\nTITLE: Tailwind Config with Regex Safelist\nDESCRIPTION: Configuration example showing how to use regex patterns for safelisting class names\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  content: [\"./pages/**/*.{html,js}\", \"./components/**/*.{html,js}\"],\n  // ...\n  safelist: [\n    \"bg-teal-700\",\n    {\n      pattern: /bg-(red|green|blue)-(400|500|600)/,\n    },\n  ],\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Empty Badge Examples\nDESCRIPTION: Empty badges in different sizes with primary color\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-primary $$badge-lg\"></div>\n<div class=\"$$badge $$badge-primary $$badge-md\"></div>\n<div class=\"$$badge $$badge-primary $$badge-sm\"></div>\n<div class=\"$$badge $$badge-primary $$badge-xs\"></div>\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to build the Next.js application for production deployment\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-nextjs-online-store-template/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Creating Accordion with Plus/Minus Icons in HTML\nDESCRIPTION: This snippet illustrates how to implement an accordion with plus/minus icons using DaisyUI. It uses the 'collapse-plus' class to add plus/minus indicators to the accordion items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/accordion/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"$$collapse $$collapse-plus bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-3\" checked=\"checked\" />\n  <div class=\"$$collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"$$collapse-content text-sm\">Click the \"Sign Up\" button in the top right corner and follow the registration process.</div>\n</div>\n<div class=\"$$collapse $$collapse-plus bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-3\" />\n  <div class=\"$$collapse-title font-semibold\">I forgot my password. What should I do?</div>\n  <div class=\"$$collapse-content text-sm\">Click on \"Forgot Password\" on the login page and follow the instructions sent to your email.</div>\n</div>\n<div class=\"$$collapse $$collapse-plus bg-base-100 border border-base-300\">\n  <input type=\"radio\" name=\"my-accordion-3\" />\n  <div class=\"$$collapse-title font-semibold\">How do I update my profile information?</div>\n  <div class=\"$$collapse-content text-sm\">Go to \"My Account\" settings and select \"Edit Profile\" to make changes.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Arrow Icon Collapse\nDESCRIPTION: Adds an arrow icon to the collapse component using the collapse-arrow modifier class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div tabindex=\"0\" class=\"collapse collapse-arrow bg-base-100 border-base-300 border\">\n  <div class=\"collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"collapse-content text-sm\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Various Sized Text Inputs using daisyUI in HTML\nDESCRIPTION: This snippet shows how to apply different size classes to text input fields, using classes such as 'input-xs', 'input-sm', up to 'input-xl'. These classes help in scaling input sizes to fit specific UI requirements, facilitating consistency across application forms.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" placeholder=\"Xsmall\" class=\"$$input $$input-xs\" />\n<input type=\"text\" placeholder=\"Small\" class=\"$$input $$input-sm\" />\n<input type=\"text\" placeholder=\"Medium\" class=\"$$input $$input-md\" />\n<input type=\"text\" placeholder=\"Large\" class=\"$$input $$input-lg\" />\n<input type=\"text\" placeholder=\"Xlarge\" class=\"$$input $$input-xl\" />\n```\n\n----------------------------------------\n\nTITLE: Applying Accent Color to Tooltip (HTML)\nDESCRIPTION: This HTML demonstrates the use of the 'tooltip-accent' utility class to provide an accent color to the tooltip background. Like other color utility classes, the corresponding button color is applied for visual consistency. Dependencies: daisyUI CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-accent\" data-tip=\"accent\">\n  <button class=\"$$btn $$btn-accent\">accent</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Toggle Implementation in HTML\nDESCRIPTION: Shows the basic implementation of a toggle switch using DaisyUI's toggle class\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" checked=\"checked\" class=\"$$toggle\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Read-only Rating Display in DaisyUI\nDESCRIPTION: A read-only implementation of the rating component using div elements instead of radio inputs. The aria-current attribute marks the selected rating value for accessibility.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating\">\n  <div class=\"$$mask $$mask-star\" aria-label=\"1 star\"></div>\n  <div class=\"$$mask $$mask-star\" aria-label=\"2 star\"></div>\n  <div class=\"$$mask $$mask-star\" aria-label=\"3 star\" aria-current=\"true\"></div>\n  <div class=\"$$mask $$mask-star\" aria-label=\"4 star\"></div>\n  <div class=\"$$mask $$mask-star\" aria-label=\"5 star\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Themes with Defaults in daisyUI PostCSS\nDESCRIPTION: Example demonstrating how to configure multiple themes using the `themes` property in the daisyUI PostCSS plugin. It enables `nord`, `abyss`, `cupcake`, and `dracula`, setting `nord` as the default theme (`--default`) and `abyss` as the preferred dark mode theme (`--prefersdark`).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  themes: nord --default, abyss --prefersdark, cupcake, dracula;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Top-Aligned Stacked Cards\nDESCRIPTION: Demonstrates cards stacked with top alignment using the stack-top modifier class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stack/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stack $$stack-top size-28\">\n  <div class=\"border-base-content $$card bg-base-100 border text-center\">\n    <div class=\"$$card-body\">A</div>\n  </div>\n  <div class=\"border-base-content $$card bg-base-100 border text-center\">\n    <div class=\"$$card-body\">B</div>\n  </div>\n  <div class=\"border-base-content $$card bg-base-100 border text-center\">\n    <div class=\"$$card-body\">C</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring and Displaying Editor and LLM Options - Svelte\nDESCRIPTION: Defines a Svelte component listing supported code editors and LLM tools, then renders them in a responsive grid. The snippet uses Svelte's #each block to dynamically generate links and display logos, leveraging Tailwind CSS for styling and transitions. It requires Svelte, Tailwind CSS, daisyUI, and an imported Translate component, and relies on the editors array for rendering all available tools. Inputs are the editors array; outputs are UI elements linking to detail pages for each tool.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n  \nconst editors = [\n  { name: \"VSCode\", slug: \"vscode\" },\n  { name: \"Cursor\", slug: \"cursor\" },\n  { name: \"Zed\", slug: \"zed\" },\n  { name: \"Windsurf\", slug: \"windsurf\" },\n  { name: \"Claude Desktop\", slug: \"claude\" },\n  { name: \"ChatGPT\", slug: \"chatgpt\" },\n  { name: \"Gemini\", slug: \"gemini\" },\n  { name: \"Grok\", slug: \"grok\" },\n]\n</script>\n\n## Pick your tool\n\nLet's setup your code editors and LLMs to correctly generate daisyUI code based on your prompt.\n\n<div class=\"not-prose grid grid-cols-2 md:grid-cols-3 py-6 *:-ms-px *:-mt-px\">\n  {#each editors as editor}\n    <a href=\"/docs/editor/{editor.slug}/\" class=\"bg-base-100 relative overflow-hidden group flex items-center gap-4 flex-col px-4 py-8 border border-base-content/5 hover:shadow-md hover:-translate-y-1 focus:shadow-sm focus:-translate-y-0.5 transition-all\">\n      <div class=\"grid *:[grid-area:1/1] [&_svg]:size-16 [&_img]:size-16\">\n        <div class=\"blur-lg scale-400 saturate-200 group-hover:[transform:scaleY(.4)] [transform:scaleY(.3)] transition-all translate-y-26 duration-300 opacity-5 group-hover:opacity-30\">\n          <img src=\"https://img.daisyui.com/images/logos/{editor.slug}.webp\" alt=\"{editor.name}\" width=\"40\" height=\"40\" class=\"not-prose\">\n        </div>\n        <div class=\"size-full absolute inset-0\" style=\"background: radial-gradient(circle, var(--color-base-100) 25%, transparent 26%),radial-gradient(circle at bottom left, var(--color-base-100) 12%, transparent 13%),radial-gradient(circle at bottom right, var(--color-base-100) 12%, transparent 13%),radial-gradient(circle at top left, var(--color-base-100) 12%, transparent 13%),radial-gradient(circle at top right, var(--color-base-100) 12%, transparent 13%); background-size: 0.25rem 0.25rem;\"></div>\n        <div class=\"z-2\">\n          <img src=\"https://img.daisyui.com/images/logos/{editor.slug}.webp\" alt=\"{editor.name}\" width=\"40\" height=\"40\" class=\"not-prose\">\n        </div>\n        <div class=\"z-1 group-hover:opacity-0 brightness-125 group-hover:scale-110 group-hover:duration-800 duration-0 transition-all\">\n          <img src=\"https://img.daisyui.com/images/logos/{editor.slug}.webp\" alt=\"{editor.name}\" width=\"40\" height=\"40\" class=\"not-prose\">\n        </div>\n      </div>\n      <div class=\"text-xs z-3 sm:text-sm font-medium transition-colors group-hover:text-base-content text-base-content/60 [text-wrap:balance] text-center\">{editor.name}</div>\n    </a>\n  {/each}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Tab Component in DaisyUI\nDESCRIPTION: Tabbed interface component with button and radio input variations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_61\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"tablist\" class=\"tabs {MODIFIER}\">\n  <button role=\"tab\" class=\"tab\">Tab</button>\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"tablist\" class=\"tabs tabs-box\">\n  <input type=\"radio\" name=\"my_tabs\" class=\"tab\" aria-label=\"Tab\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Disabling Dark Theme\nDESCRIPTION: Example showing how to disable the dark theme by removing it from the theme configuration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n @import \"tailwindcss\";\n @plugin \"daisyui\" {\n-  themes: light --default, dark --prefersdark;\n+  themes: light --default;\n }\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI dependency\nDESCRIPTION: Installs the latest version of daisyUI as a development dependency using npm. Requires Node.js and npm installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/laravel/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm i -D daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI File Input Component\nDESCRIPTION: HTML structure for file input with support for styles, colors, and sizes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_25\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\" class=\"file-input {MODIFIER}\" />\n```\n\n----------------------------------------\n\nTITLE: Svelte Component Imports\nDESCRIPTION: Imports required Svelte components for the browser mockup implementation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-browser/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: svelte\nCODE:\n```\nimport Component from \"$components/Component.svelte\"\nimport Translate from \"$components/Translate.svelte\"\n```\n\n----------------------------------------\n\nTITLE: Updating Mockup Phone Component Structure\nDESCRIPTION: Changes to mockup-phone component class names and structure, including renaming camera and display classes and updating artboard dimensions.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n<div class=\"mockup-phone\">\n-  <div class=\"camera\"></div>\n+  <div class=\"mockup-phone-camera\"></div>\n\n-    <div class=\"display\">\n+    <div class=\"mockup-phone-display\">\n\n-    <div class=\"artboard artboard-demo phone-1\">Hi.</div>\n+    <div class=\"w-[320px] h-[568px]\">Hi.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Timeline Component in DaisyUI\nDESCRIPTION: Chronological event display component with customizable layout options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_65\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"timeline {MODIFIER}\">\n  <li>\n    <div class=\"timeline-start\">{start}</div>\n    <div class=\"timeline-middle\">{icon}</div>\n    <div class=\"timeline-end\">{end}</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing Label After Input in DaisyUI\nDESCRIPTION: Shows how to add a label after an input field using DaisyUI's label class. The label appears as a suffix (.com) to the input field.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/label/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input\">\n  <input type=\"text\" placeholder=\"domain name\" />\n  <span class=\"$$label\">.com</span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Creating New Elysia Project\nDESCRIPTION: This snippet outlines the commands needed to create a new Elysia project using Bun and change the directory to the project folder. No dependencies are required apart from Bun being installed. The `bun create elysia myapp` command initializes the project, and `cd myapp` navigates into the project directory.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbun create elysia myapp\ncd myapp\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS Imports for Tailwind and daisyUI\nDESCRIPTION: Sets up the main CSS entry point using PostCSS syntax. It imports Tailwind CSS's base, components, and utilities, and enables the Tailwind Typography plugin and daisyUI plugin using `@plugin` directives. This file will be processed by PostCSS to generate the final CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n@import 'tailwindcss';\n@plugin \"@tailwindcss/typography\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Custom Colored Collapse with Focus\nDESCRIPTION: Implements a collapse component with custom color transitions using Tailwind CSS group utilities.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/collapse/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div tabindex=\"0\" class=\"bg-primary text-primary-content focus:bg-secondary focus:text-secondary-content collapse\">\n  <div class=\"collapse-title font-semibold\">How do I create an account?</div>\n  <div class=\"collapse-content text-sm\">\n    Click the \"Sign Up\" button in the top right corner and follow the registration process.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Zebra-Striped Table\nDESCRIPTION: Table with alternating row colors using the table-zebra class for improved readability and visual distinction between rows.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"$$table $$table-zebra\">\n    <!-- head -->\n    <thead>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Favorite Color</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- row 1 -->\n      <tr>\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Blue</td>\n      </tr>\n      <!-- row 2 -->\n      <tr>\n        <th>2</th>\n        <td>Hart Hagerty</td>\n        <td>Desktop Support Technician</td>\n        <td>Purple</td>\n      </tr>\n      <!-- row 3 -->\n      <tr>\n        <th>3</th>\n        <td>Brice Swyre</td>\n        <td>Tax Accountant</td>\n        <td>Red</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dividers with Different Vertical Positions in DaisyUI\nDESCRIPTION: Examples of vertical dividers with different text positioning options: start, default (center), and end positions. This demonstrates how to control the alignment of text within vertical dividers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full flex-col\">\n  <div class=\"$$divider $$divider-start\">Start</div>\n  <div class=\"$$divider\">Default</div>\n  <div class=\"$$divider $$divider-end\">End</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Tabs of Multiple Sizes with DaisyUI in HTML\nDESCRIPTION: Presents five tab groups in DaisyUI, each demonstrating a different size modifier (tabs-xs, tabs-sm, tabs-md, tabs-lg, tabs-xl) using the lift style. Each set uses $$tabs, $$tabs-lift, and the respective size class, with $$tab and $$tab-active for tab states. DaisyUI CSS integration is required; input is HTML markup and the output is a vertically listed size-varied tab example.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n\\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-lift $$tabs-xs\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Xsmall</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Xsmall</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Xsmall</a>\\n</div>\\n\\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-lift $$tabs-sm\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Small</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Small</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Small</a>\\n</div>\\n\\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-lift\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Medium</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Medium</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Medium</a>\\n</div>\\n\\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-lift $$tabs-lg\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Large</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Large</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Large</a>\\n</div>\\n\\n<div role=\\\"tablist\\\" class=\\\"$$tabs $$tabs-lift $$tabs-xl\\\">\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Xlarge</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab $$tab-active\\\">Xlarge</a>\\n  <a role=\\\"tab\\\" class=\\\"$$tab\\\">Xlarge</a>\\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Table Component in DaisyUI\nDESCRIPTION: Responsive table component with optional modifiers and sizing options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_62\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto\">\n  <table class=\"table {MODIFIER}\">\n    <thead>\n      <tr>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <th></th>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Star Rating using DaisyUI\nDESCRIPTION: A basic star rating implementation using radio inputs with the mask-star class. Each input represents one star in the rating, with a checked attribute to show the current rating value.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/rating/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$rating\">\n  <input type=\"radio\" name=\"rating-1\" class=\"$$mask $$mask-star\" aria-label=\"1 star\" />\n  <input type=\"radio\" name=\"rating-1\" class=\"$$mask $$mask-star\" aria-label=\"2 star\" checked=\"checked\" />\n  <input type=\"radio\" name=\"rating-1\" class=\"$$mask $$mask-star\" aria-label=\"3 star\" />\n  <input type=\"radio\" name=\"rating-1\" class=\"$$mask $$mask-star\" aria-label=\"4 star\" />\n  <input type=\"radio\" name=\"rating-1\" class=\"$$mask $$mask-star\" aria-label=\"5 star\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Linking Compiled output.css in HTML for Tailwind and daisyUI Usage\nDESCRIPTION: This HTML snippet links the compiled output.css stylesheet in the public directory to an HTML file. This allows Tailwind CSS and daisyUI classes and styles to be available in the document. Ensure that public/output.css exists and has been generated by the build process before using this snippet.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/cli/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"./output.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Displaying Long Line with Horizontal Scroll in Code Mockup using HTML\nDESCRIPTION: This example shows how to handle long lines of code in a mockup. The content will automatically enable horizontal scrolling when it exceeds the width of the container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-code/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-code w-full\">\n  <pre\n    data-prefix=\"~\"><code>Magnam dolore beatae necessitatibus nemopsum itaque sit. Et porro quae qui et et dolore ratione.</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Color Variable Improvements in daisyUI 5\nDESCRIPTION: Comparison of CSS color variable implementations between daisyUI 4 and 5, showing how version 5 uses more readable variable names and standard color formats that are easier to customize in browser dev tools.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n/* hard to read variable names, hard to customize values */\n{\n--b1: 100% 0 0;\n--b2: 96.1151% 0 0;\n--b3: 92.4169% .00108 197.137559;\n--bc: 27.8078% .029596 256.847952;\n--p: 49.12% .3096 275.75;\n--pc: 89.824% .06192 275.75;\n--s: 69.71% .329 342.55;\n--sc: 98.71% .0106 342.55;\n--a: 76.76% .184 183.61;\n--ac: 15.352% .0368 183.61;\n--n: 32.1785% .02476 255.701624;\n--nc: 89.4994% .011585 252.096176;\n--in: 72.06% .191 231.6;\n--inc: 0% 0 0;\n--su: 64.8% .15 160;\n--suc: 0% 0 0;\n--wa: 84.71% .199 83.87;\n--wac: 0% 0 0;\n--er: 71.76% .221 22.18;\n--erc: 0% 0 0;\n}\n```\n\nLANGUAGE: css\nCODE:\n```\n/* standard color format, easy to customize in browser */\n{\n--color-base-100: oklch(100% 0 0);\n--color-base-200: oklch(96.115% 0 0);\n--color-base-300: oklch(92.416% 0.001 197.137);\n--color-base-content: oklch(27.807% 0.029 256.847);\n--color-primary: oklch(49.12% 0.309 275.75);\n--color-primary-content: oklch(89.824% 0.061 275.75);\n--color-secondary: oklch(69.71% 0.329 342.55);\n--color-secondary-content: oklch(98.71% 0.01 342.55);\n--color-accent: oklch(76.76% 0.184 183.61);\n--color-accent-content: oklch(15.352% 0.036 183.61);\n--color-neutral: oklch(20% 0.024 255.701);\n--color-neutral-content: oklch(89.499% 0.011 252.096);\n--color-info: oklch(72.06% 0.191 231.6);\n--color-info-content: oklch(0% 0 0);\n--color-success: oklch(64.8% 0.15 160);\n--color-success-content: oklch(0% 0 0);\n--color-warning: oklch(84.71% 0.199 83.87);\n--color-warning-content: oklch(0% 0 0);\n--color-error: oklch(71.76% 0.221 22.18);\n--color-error-content: oklch(0% 0 0);\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Swap Component in DaisyUI\nDESCRIPTION: Toggle component for switching between two states using checkbox or class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_60\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"swap {MODIFIER}\">\n  <input type=\"checkbox\" />\n  <div class=\"swap-on\">{content when active}</div>\n  <div class=\"swap-off\">{content when inactive}</div>\n</label>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"swap {MODIFIER}\">\n  <div class=\"swap-on\">{content when active}</div>\n  <div class=\"swap-off\">{content when inactive}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Excluding daisyUI Base Styles Using PostCSS Configuration\nDESCRIPTION: This snippet demonstrates how to opt out of specific daisyUI base styles using the plugin's exclude configuration option. In this example, rootscrollgutter and rootcolor styles are excluded from being applied to the page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/base/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: postcss\nCODE:\n```\n@plugin \"daisyui\" {\n  exclude: rootscrollgutter, rootcolor;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS CLI and daisyUI with npm - Shell\nDESCRIPTION: This shell command installs the latest versions of Tailwind CSS, its CLI, and daisyUI as development dependencies using npm. Required: Node.js, npm. The command must be run in the project directory, initializing the dependencies necessary for Tailwind and daisyUI usage with HTMX.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/htmx/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/cli@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Right-Side Drawer Component in HTML\nDESCRIPTION: HTML implementation of a drawer that opens from the right side of the page. Uses the drawer-end class to change the drawer's position.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/drawer/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"drawer drawer-end\">\n  <input id=\"my-drawer-4\" type=\"checkbox\" class=\"drawer-toggle\" />\n  <div class=\"drawer-content\">\n    <!-- Page content here -->\n    <label for=\"my-drawer-4\" class=\"drawer-button btn btn-primary\">Open drawer</label>\n  </div>\n  <div class=\"drawer-side\">\n    <label for=\"my-drawer-4\" aria-label=\"close sidebar\" class=\"drawer-overlay\"></label>\n    <ul class=\"menu bg-base-200 text-base-content min-h-full w-80 p-4\">\n      <!-- Sidebar content here -->\n      <li><a>Sidebar Item 1</a></li>\n      <li><a>Sidebar Item 2</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Displaying Centered Content with HTML in Markdown\nDESCRIPTION: This HTML snippet is used within the Markdown file to center-align content, including the project logo and various badges. It demonstrates how HTML can be embedded in Markdown for more precise formatting control.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/README.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div align=\"center\">\n\n[![][logo-url]][docs-url]\n\n**The most popular, free and open-source component library for Tailwind CSS**\n\n[![][version]](https://www.npmjs.com/package/daisyui)\n[![][commit]](https://github.com/saadeghi/daisyui)\n[![][license]](https://github.com/saadeghi/daisyui/blob/master/LICENSE)\n[![][stars]](https://github.com/saadeghi/daisyui)\n[![][installs]](https://www.npmjs.com/package/daisyui)\n[![][jsdelivr]](https://cdn.jsdelivr.net/npm/daisyui@5)\n[![][discord]](https://daisyui.com/discord/)\n[![][opencollectivebadge]](https://opencollective.com/daisyui)\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Toast with Top-End Position\nDESCRIPTION: Shows a toast positioned at the top-right corner with multiple alerts.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-top $$toast-end\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Colored Checkbox\nDESCRIPTION: Implementation of a checkbox with custom color styling using Tailwind CSS classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<input\n  type=\"checkbox\"\n  checked=\"checked\"\n  class=\"$$checkbox border-indigo-600 bg-indigo-500 checked:border-orange-500 checked:bg-orange-400 checked:text-orange-800\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Serving the HTML File with Bun (Shell)\nDESCRIPTION: Starts the Bun development server, instructing it to serve the `index.html` file. Bun will automatically use the configuration from `bunfig.toml` to process the linked `style.css` file with the Tailwind plugin, making daisyUI classes functional in the browser.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/bun/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nbun index.html\n```\n\n----------------------------------------\n\nTITLE: Homepage Component Structure\nDESCRIPTION: Example Next.js component structure for the store's homepage, showing the layout of different sections\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-nextjs-online-store-template/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nexport default async function Home() {\n  return (\n    <div>\n      <Hero />\n      <Features />\n      <TrendingProducts />\n      <Categories />\n      <OfferCard />\n      <NewArrivals />\n      <NewsLetter />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Rectangular Skeleton with Content in DaisyUI\nDESCRIPTION: Displays a card-like skeleton loading interface with a main content area and multiple text placeholders. This pattern is useful for loading states of content cards or articles.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/skeleton/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-52 flex-col gap-4\">\n  <div class=\"$$skeleton h-32 w-full\"></div>\n  <div class=\"$$skeleton h-4 w-28\"></div>\n  <div class=\"$$skeleton h-4 w-full\"></div>\n  <div class=\"$$skeleton h-4 w-full\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Toast with Middle-Start Position\nDESCRIPTION: Demonstrates a toast positioned at the middle-left side of the page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-start $$toast-middle\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS with daisyUI in PostCSS\nDESCRIPTION: CSS configuration file that imports Tailwind CSS, sets up source paths for HTML and markdown files, and adds the daisyUI plugin. Includes optional configuration for custom themes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"../templates/*.{html,md}\";\n@source \"../content/*.{html,md}\";\n@plugin \"./daisyui.js\";\n\n/* Optional for custom themes – Docs: https://daisyui.com/docs/themes/#how-to-add-a-new-custom-theme */\n@plugin \"./daisyui-theme.js\"{\n  /* custom theme here */\n}\n```\n\n----------------------------------------\n\nTITLE: Collapsible Submenu with Class Control in HTML\nDESCRIPTION: This snippet demonstrates a collapsible feature for submenus using class-based control, relying on Tailwind CSS for styling. It shows how toggling class names can open or close submenu elements, indicating a method for interactive UI with JavaScript aiding class management.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/menu/+page.md#2025-04-22_snippet_15\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li><button>Item 1</button></li>\n  <li>\n    <span class=\"menu-dropdown-toggle\">Parent</span>\n    <ul class=\"menu-dropdown\">\n      <li><button>Submenu 1</button></li>\n      <li><button>Submenu 2</button></li>\n    </ul>\n  </li>\n</ul>\n<ul class=\"menu bg-base-200 w-56 rounded-box\">\n  <li><button>Item 1</button></li>\n  <li>\n    <span class=\"menu-dropdown-toggle menu-dropdown-show\">Parent</span>\n    <ul class=\"menu-dropdown menu-dropdown-show\">\n      <li><button>Submenu 1</button></li>\n      <li><button>Submenu 2</button></li>\n    </ul>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Pikaday Integration with React\nDESCRIPTION: React component implementation of Pikaday calendar using refs and useEffect hook for initialization and cleanup.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useEffect, useRef } from \"react\";\nimport Pikaday from \"pikaday\";\n\nexport default function App() {\n  const myDatepicker = useRef(null);\n  useEffect(() => {\n    const picker = new Pikaday({\n      field: myDatepicker.current\n    });\n    return () => picker.destroy();\n  }, []);\n  return (\n    <input type=\"text\" className=\"$$input $$pika-single\" defaultValue=\"Pick a date\" ref={myDatepicker} />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Tooltip Content with tooltip-content Part (HTML)\nDESCRIPTION: This snippet demonstrates using an internal 'tooltip-content' div to define custom tooltip content instead of using the 'data-tip' attribute. This supports complex HTML as tooltip content (such as animated or styled text). Requires daisyUI and works as long as the correct utility classes are applied. Place the custom content in a child with the 'tooltip-content' class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip\">\n  <div class=\"$$tooltip-content\">\n    <div class=\"animate-bounce text-orange-400 -rotate-10 text-2xl font-black\">Wow!</div>\n  </div>\n  <button class=\"$$btn\">Hover me</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring UnoCSS with daisyUI preset\nDESCRIPTION: This code sets up the UnoCSS configuration file, including the daisyUI preset and content scanning options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/unocss/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from \"unocss\";\nimport presetWind4 from \"@unocss/preset-wind4\";\nimport { presetDaisy } from \"@ameinhardt/unocss-preset-daisy\";\n\nexport default defineConfig({\n  content: {\n    pipeline: {\n      include: [\"src/**/*.{js,ts}\"],\n    },\n  },\n  presets: [presetDaisy(), presetWind4()],\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Chat Bubble Positioning with Start/End Alignment\nDESCRIPTION: Demonstrates basic chat bubble implementation with start and end alignment options using chat-start and chat-end classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/chat/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$chat $$chat-start\">\n  <div class=\"$$chat-bubble\">\n    It's over Anakin,\n    <br />\n    I have the high ground.\n  </div>\n</div>\n<div class=\"$$chat $$chat-end\">\n  <div class=\"$$chat-bubble\">You underestimate my power!</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting up Tailwind CSS and daisyUI Imports\nDESCRIPTION: Configures the CSS file to import Tailwind CSS and daisyUI plugin.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid-start/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Status Indicator in DaisyUI\nDESCRIPTION: Small status indicator component with various color and size options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_58\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"status {MODIFIER}\"></span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Primary-Muted Color in daisyUI Light Theme\nDESCRIPTION: This code demonstrates how to add the new 'primary-muted' color to the daisyUI light theme. It imports the built-in light theme and sets the color value for '--primary-muted' using OKLCH values.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-add-new-colors-to-daisyui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// tailwind.config.js\nmodule.exports = {\n  plugins: [require(\"daisyui\")],\n\n  theme: {\n    extend: {\n      colors: {\n        \"primary-muted\": \"oklch(var(--primary-muted) / <alpha-value>)\",\n      },\n    },\n  },\n\n  daisyui: {\n    themes: [\n      {\n        light: {\n          // importing the built-in 'light' theme\n          // and setting the color values for '--primary-muted'\n          // (numbers are OKLCH values)\n          ...require(\"daisyui/src/theming/themes\")[\"light\"],\n          \"--primary-muted\": \"65% 0.2 295\",\n        },\n      },\n    ],\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind CSS and daisyUI to the CSS file\nDESCRIPTION: This CSS snippet shows how to import Tailwind CSS and add the daisyUI plugin to the project's CSS file. It replaces any existing styles with these imports.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/react/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Creating a new Vue project with Vite\nDESCRIPTION: Command to initialize a new Vue project using Vite as the build tool. This creates the base Vue project structure in the current directory.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vue/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create vite@latest ./ -- --template vue\n```\n\n----------------------------------------\n\nTITLE: Bordered Table with Background\nDESCRIPTION: Enhanced table with border and background styling. Adds rounded corners and a subtle border using base-content classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/table/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"overflow-x-auto rounded-box border border-base-content/5 bg-base-100\">\n  <table class=\"$$table\">\n    <!-- head -->\n    <thead>\n      <tr>\n        <th></th>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Favorite Color</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- row 1 -->\n      <tr>\n        <th>1</th>\n        <td>Cy Ganderton</td>\n        <td>Quality Control Specialist</td>\n        <td>Blue</td>\n      </tr>\n      <!-- row 2 -->\n      <tr>\n        <th>2</th>\n        <td>Hart Hagerty</td>\n        <td>Desktop Support Technician</td>\n        <td>Purple</td>\n      </tr>\n      <!-- row 3 -->\n      <tr>\n        <th>3</th>\n        <td>Brice Swyre</td>\n        <td>Tax Accountant</td>\n        <td>Red</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Glass Effect in daisyUI\nDESCRIPTION: This example demonstrates how to apply the glass effect to an element using daisyUI's glass utility class, creating a translucent frosted glass appearance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/utilities/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"glass\">Glass</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Label Component\nDESCRIPTION: HTML structure for regular and floating labels with input fields.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_33\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"input\">\n  <span class=\"label\">{label text}</span>\n  <input type=\"text\" placeholder=\"Type here\" />\n</label>\n```\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"floating-label\">\n  <input type=\"text\" placeholder=\"Type here\" class=\"input\" />\n  <span>{label text}</span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Running the Laravel project\nDESCRIPTION: Starts the Laravel server using Artisan in one terminal tab and runs Vite in another to enable development mode. Assumes Laravel CLI tools are installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/laravel/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nphp artisan serve\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating Default Nunjucks Layout for Eleventy\nDESCRIPTION: Defines a basic HTML5 layout template using Nunjucks syntax for an Eleventy site. It includes standard head elements like charset, viewport, title (dynamically set from page data), and links to the compiled CSS file. The body uses the 'prose' class from Tailwind Typography and injects page content using `{{ content | safe }}`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: md\nCODE:\n```\n---\ntitle: My Blog\n---\n\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{ title }}</title>\n    <link rel=\"stylesheet\" href=\"/styles/index.css\">\n  </head>\n  <body class=\"prose\">\n    {{ content | safe }}\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Notification Cards Stack\nDESCRIPTION: Complex example showing stacked notification cards with titles and descriptions, using shadows and base styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stack/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stack\">\n  <div class=\"$$card shadow-md bg-base-100\">\n    <div class=\"$$card-body\">\n      <h2 class=\"$$card-title\">Notification 1</h2>\n      <p>You have 3 unread messages. Tap here to see.</p>\n    </div>\n  </div>\n  <div class=\"$$card shadow-md bg-base-100\">\n    <div class=\"$$card-body\">\n      <h2 class=\"$$card-title\">Notification 2</h2>\n      <p>You have 3 unread messages. Tap here to see.</p>\n    </div>\n  </div>\n  <div class=\"$$card shadow-md bg-base-100\">\n    <div class=\"$$card-body\">\n      <h2 class=\"$$card-title\">Notification 3</h2>\n      <p>You have 3 unread messages. Tap here to see.</p>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Disabling Textarea Element with DaisyUI HTML\nDESCRIPTION: This snippet shows how to disable a textarea element using the standard HTML `disabled` attribute. The textarea is styled with the base DaisyUI `textarea` class, and the browser will typically render it in a non-interactive state.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/textarea/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<textarea class=\"$$textarea\" placeholder=\"Bio\" disabled></textarea>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Tailwind CSS in SvelteKit\nDESCRIPTION: This configuration adds Tailwind CSS and SvelteKit plugins to the Vite config file. It enables Tailwind CSS processing in the SvelteKit project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/sveltekit/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport tailwindcss from \"@tailwindcss/vite\";\nimport { sveltekit } from \"@sveltejs/kit/vite\";\nimport { defineConfig } from \"vite\";\n\nexport default defineConfig({\n  plugins: [tailwindcss(), sveltekit()],\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Footer Component\nDESCRIPTION: HTML structure for creating footers with optional modifiers and content placement.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_27\n\nLANGUAGE: html\nCODE:\n```\n<footer class=\"footer {MODIFIER}\">{CONTENT}</footer>\n```\n\n----------------------------------------\n\nTITLE: Ghost and Link Style Buttons\nDESCRIPTION: Demonstrates ghost and link style button variants.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-ghost\">Ghost</button>\n<button class=\"$$btn $$btn-link\">Link</button>\n```\n\n----------------------------------------\n\nTITLE: Displaying Tooltips at the Left Placement (HTML)\nDESCRIPTION: This HTML code places the tooltip to the left of its container, using 'tooltip-left'. It also uses 'tooltip-open' to ensure visibility without hover. All tooltip direction classes require daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-left\" data-tip=\"hello\">\n  <button class=\"$$btn\">Left</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Build Script to Package.json\nDESCRIPTION: NPM script configuration for building CSS using PostCSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/postcss/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"build:css\": \"postcss app.css -o public/output.css\"\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Timeline with Top Side Content in DaisyUI\nDESCRIPTION: HTML structure for creating a vertical timeline using DaisyUI classes where timeline content is positioned on the top side. Each timeline item represents an Apple product with a checkmark icon as a marker, connected by horizontal lines.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline $$timeline-vertical\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iMac</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPhone</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Tailwind CSS\nDESCRIPTION: Adds Tailwind CSS plugin to the Vite configuration in the Solid Start project setup.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid-start/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from \"@solidjs/start/config\";\nimport tailwindcss from \"@tailwindcss/vite\";\nexport default defineConfig({\n  vite: {\n    plugins: [tailwindcss()],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing a daisyUI Button with Tailwind CSS Utilities\nDESCRIPTION: This snippet demonstrates how to combine daisyUI component classes with Tailwind CSS utility classes to customize the width and border radius of a button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/use/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn w-64 rounded-full\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Default Next.js Styles\nDESCRIPTION: Minimal CSS content for app/globals.css to remove default Next.js styles and keep only Tailwind CSS directives.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind and daisyUI to CSS - PostCSS\nDESCRIPTION: This snippet imports Tailwind CSS and integrates daisyUI as a plugin in the project's main CSS file, located at src/assets/app.css. Ensure these imports are at the top of the file for effective styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/astro/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Tailwind CSS and Vue\nDESCRIPTION: Configuration for Vite to use Tailwind CSS and Vue plugins. This setup enables the processing of Tailwind CSS directives and Vue components in the project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vue/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from \"vite\";\nimport tailwindcss from \"@tailwindcss/vite\";\nimport vue from \"@vitejs/plugin-vue\";\n\nexport default defineConfig({\n  plugins: [tailwindcss(), vue()],\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Toggle Switch in DaisyUI\nDESCRIPTION: Styled checkbox component that appears as a switch button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_67\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"toggle {MODIFIER}\" />\n```\n\n----------------------------------------\n\nTITLE: Applying Ghost Style to Text Input in HTML\nDESCRIPTION: This HTML snippet illustrates how to apply a 'ghost' style to a text input using the 'input' and 'input-ghost' classes. This style reduces the contrast of the input border, creating a more understated and subtle appearance. No additional setup is required beyond including daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" placeholder=\"Type here\" class=\"$$input $$input-ghost\" />\n```\n\n----------------------------------------\n\nTITLE: Error Themed Radio Buttons Styling\nDESCRIPTION: Illustrates the utilization of an error theme on radio buttons via the `radio-error` class within a DaisyUI configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-10\" class=\"$$radio $$radio-error\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-10\" class=\"$$radio $$radio-error\" />\n```\n\n----------------------------------------\n\nTITLE: Dynamically Rendering Framework Tutorial Links in Svelte\nDESCRIPTION: This Svelte template snippet uses an `{#each}` block to iterate over the `data.frameworks` array. For each `framework` object in the array, it generates an anchor tag (`<a>`) styled as a card using Tailwind CSS utility classes. The link's destination (`href`), logo (`{@html framework.logo}`), and name (`{framework.name}`) are dynamically populated from the framework object. The `{@html}` directive is used to render HTML content (presumably SVG logos) stored in `framework.logo`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: svelte\nCODE:\n```\n{#each data.frameworks as framework}\n  <a href=\"{framework.path}\" class=\"bg-base-100 relative overflow-hidden group flex items-center gap-4 flex-col px-4 py-8 border border-base-content/5 hover:shadow-md hover:-translate-y-1 focus:shadow-sm focus:-translate-y-0.5 transition-all\">\n    <div class=\"grid *:[grid-area:1/1] [&_svg]:size-16\">\n      <div class=\"blur-lg scale-400 saturate-200 group-hover:[transform:scaleY(.4)] [transform:scaleY(.3)] transition-all translate-y-26 duration-300 opacity-5 group-hover:opacity-30\">{@html framework.logo}</div>\n      <div class=\"size-full absolute inset-0\" style=\"background: radial-gradient(circle, var(--color-base-100) 25%, transparent 26%),radial-gradient(circle at bottom left, var(--color-base-100) 12%, transparent 13%),radial-gradient(circle at bottom right, var(--color-base-100) 12%, transparent 13%),radial-gradient(circle at top left, var(--color-base-100) 12%, transparent 13%),radial-gradient(circle at top right, var(--color-base-100) 12%, transparent 13%); background-size: 0.25rem 0.25rem;\"></div>\n      <div class=\"z-2\">{@html framework.logo}</div>\n      <div class=\"z-1 group-hover:opacity-0 brightness-125 group-hover:scale-110 group-hover:duration-800 duration-0 transition-all\">{@html framework.logo}</div>\n    </div>\n    <div class=\"text-xs z-3 sm:text-sm font-medium transition-colors group-hover:text-base-content text-base-content/60 [text-wrap:balance] text-center\">{framework.name}</div>\n  </a>\n{/each}\n```\n\n----------------------------------------\n\nTITLE: Pikaday Integration with Vue\nDESCRIPTION: Vue component implementation of Pikaday calendar using refs and mounted lifecycle hook.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script>\nimport Pikaday from \"pikaday\";\nexport default {\n  mounted: function() {\n    const picker = new Pikaday({\n      field: this.$refs.myDatepicker\n    });\n  }\n};\n</script>\n<template>\n  <input type=\"text\" class=\"$$input $$pika-single\" ref=\"myDatepicker\" value=\"Pick a day\"/>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Applying Hexagon Mask in DaisyUI\nDESCRIPTION: Applies a vertical hexagon-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-hexagon\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Applying Heart Mask in DaisyUI\nDESCRIPTION: Applies a heart-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-heart\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind Input CSS with daisyUI Plugin and Template Paths - CSS\nDESCRIPTION: This CSS snippet configures the Tailwind input file for the build process. It imports Tailwind CSS (standalone, without auto-sourcing), loads the daisyUI plugin, and targets all templates for class extraction. It should be saved as 'myapp/static/css/input.css'.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: CSS\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@plugin \"./daisyui.js\";\n@source \"../../templates\";\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Indicator Component\nDESCRIPTION: HTML structure for creating indicators with customizable placement.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_29\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"indicator\">\n  <span class=\"indicator-item\">{indicator content}</span>\n  <div>{main content}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Timeline with Alternating Sides using DaisyUI in HTML\nDESCRIPTION: This code snippet demonstrates how to create a timeline component with events displayed on alternating sides. It utilizes DaisyUI classes such as 'timeline', 'timeline-start', 'timeline-end', and 'timeline-middle' to structure the layout. SVG icons are included for visual enhancement.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<ul class=\"$$timeline\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n    <div class=\"$$timeline-middle\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n        class=\"h-5 w-5\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Displaying Tooltips at the Top Placement (HTML)\nDESCRIPTION: This example shows a tooltip with forced open behavior and positioned at the top of the container using 'tooltip-top'. Works with daisyUI; by default, top placement is applied unless overridden by other placement classes. Adjust class as needed for other positions.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-top\" data-tip=\"hello\">\n  <button class=\"$$btn\">Top</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Bun Server with Tailwind Plugin (TOML)\nDESCRIPTION: Creates or modifies the `bunfig.toml` file at the project root to configure Bun's development server. It adds `bun-plugin-tailwind` to the list of plugins for the static server, enabling automatic processing of Tailwind directives in served CSS files.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/bun/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[serve.static]\nplugins = [\"bun-plugin-tailwind\"]\n```\n\n----------------------------------------\n\nTITLE: Applying Secondary Color to Tooltip (HTML)\nDESCRIPTION: This code snippet displays a tooltip with a secondary color scheme using 'tooltip-secondary'. It is intended for distinguishing contextual UI elements. DaisyUI's color utility classes are required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-secondary\" data-tip=\"secondary\">\n  <button class=\"$$btn $$btn-secondary\">secondary</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Dependency Reduction in daisyUI 5\nDESCRIPTION: Comparison showing how daisyUI 5 eliminated all dependencies, reducing from multiple dependencies in version 4 to zero dependencies in version 5, improving package size and security.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nDependencies - Total 1.8 MB on disk (250 files)\n  ├╴ culori\n  ├╴ picocolors\n  ├╴ postcss-js\n  │  ╰╴ camelcase-css\n  ╰╴ css-selector-tokenizer\n     ├╴ cssesc\n     ╰╴ fastparse\n```\n\nLANGUAGE: js\nCODE:\n```\nNo dependencies - 0 kB\n\n\n\n\n\n\n\n\n```\n\n----------------------------------------\n\nTITLE: Adding daisyUI Button Component\nDESCRIPTION: Example of adding a daisyUI button component to the main page\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\n <h1>Welcome to SvelteKit</h1>\n <p>Visit <a href=\"https://kit.svelte.dev\">kit.svelte.dev</a> to read the documentation</p>\n+<button class=\"btn btn-primary\">Hello daisyUI</button>\n```\n\n----------------------------------------\n\nTITLE: Tailwind Config with Direct Safelist\nDESCRIPTION: Configuration example showing direct safelisting of class names in Tailwind configuration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  content: [\"./pages/**/*.{html,js}\", \"./components/**/*.{html,js}\"],\n  // ...\n  safelist: [\"bg-red-500\", \"bg-green-500\", \"bg-blue-500\"],\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding daisyUI to CSS\nDESCRIPTION: Instructs to modify the 'resources/css/app.css' file to import daisyUI plugin, assuming Tailwind CSS is already set up in the project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/laravel/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n@import \"tailwindcss\";\n/* other stuff */\n\n+ @plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Template with daisyUI\nDESCRIPTION: ERB template demonstrating basic daisyUI button usage\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: erb\nCODE:\n```\n<button class=\"btn btn-primary\">Hello daisyUI!</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Theme Controller in DaisyUI\nDESCRIPTION: Theme switching component using checkbox or radio input.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_64\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" value=\"{theme-name}\" class=\"theme-controller\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Disabled Text Input with daisyUI in HTML\nDESCRIPTION: This snippet details how to create a text input field that is disabled and non-interactive, using the 'input' class. The field displays the placeholder 'You can’t touch this' and demonstrates the 'disabled' attribute for unresponsive inputs.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" placeholder=\"You can\\'t touch this\" class=\"$$input\" disabled />\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with daisyUI Component Class\nDESCRIPTION: This snippet demonstrates the simplified approach using daisyUI's 'btn' component class, which applies all the necessary styling with just one class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/use/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Setting File Permissions for Tailwind Executable\nDESCRIPTION: Command to make the Tailwind CSS executable file runnable on Linux and MacOS systems.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/standalone/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nchmod +x tailwindcss\n```\n\n----------------------------------------\n\nTITLE: Basic daisyUI CSS Configuration\nDESCRIPTION: Minimal CSS configuration to import Tailwind CSS and daisyUI plugin.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-5-alpha/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Applying Star Mask in DaisyUI\nDESCRIPTION: Applies a star-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-star\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Label for Date Input in DaisyUI\nDESCRIPTION: Shows how to add a label for a date input field. The label \"Publish date\" appears before the date picker input.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/label/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input\">\n  <span class=\"$$label\">Publish date</span>\n  <input type=\"date\" />\n</label>\n```\n\n----------------------------------------\n\nTITLE: Configuring Astro with Tailwind CSS - JavaScript\nDESCRIPTION: Configure Astro to integrate Tailwind CSS by importing it in the Vite plugins section. This configuration is defined in the astro.config.mjs file and requires the 'astro/config' and '@tailwindcss/vite' packages.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/astro/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n// @ts-check\nimport { defineConfig } from \"astro/config\";\nimport tailwindcss from \"@tailwindcss/vite\";\n\nexport default defineConfig({\n  vite: {\n    plugins: [tailwindcss()],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Dark Mode Configuration\nDESCRIPTION: Configuration for using Tailwind's dark mode selector with specific daisyUI themes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\" {\n  themes: winter --default, night --prefersdark;\n}\n\n@custom-variant dark (&:where([data-theme=night], [data-theme=night] *));\n```\n\n----------------------------------------\n\nTITLE: Creating Soft Style Alerts in HTML with DaisyUI\nDESCRIPTION: This code demonstrates how to implement soft style alerts for different colors (info, success, warning, error) using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-info $$alert-soft\">\n  <span>12 unread messages. Tap to see.</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-success $$alert-soft\">\n  <span>Your purchase has been confirmed!</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-warning $$alert-soft\">\n  <span>Warning: Invalid email address!</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-error $$alert-soft\">\n  <span>Error! Task failed successfully.</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Toast with Alert\nDESCRIPTION: Demonstrates a basic toast implementation with an info alert message positioned at the default bottom-right location.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New message arrived.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS to Use daisyUI Plugin\nDESCRIPTION: Diff showing how to modify the src/styles.css file to include daisyUI as a plugin while keeping Tailwind CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/waku/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n  @import \"tailwindcss\";\n+ @plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Applying Neutral Color to Tooltip (HTML)\nDESCRIPTION: This code illustrates how to apply the 'tooltip-neutral' color modifier to tooltips. The class changes the tooltip's background to neutral, and can be used with 'tooltip', 'tooltip-open' and appropriate button color classes. Requires daisyUI CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-neutral\" data-tip=\"neutral\">\n  <button class=\"$$btn $$btn-neutral\">neutral</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Pikaday Calendar Implementation\nDESCRIPTION: Basic setup for Pikaday calendar with daisyUI styling using CDN. Shows how to initialize Pikaday with an input field.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/calendar/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/pikaday/pikaday.js\"></script>\n<input type=\"text\" class=\"$$input $$pika-single\" id=\"myDatepicker\">\n<script>\n  var picker = new Pikaday({ field: document.getElementById('myDatepicker') });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating Button Component with DaisyUI\nDESCRIPTION: Demonstrates the simplified button implementation using daisyUI's component classes. Shows how a single class can create a styled button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-vs-tailwindui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"btn\">Button</button>\n```\n\n----------------------------------------\n\nTITLE: Tailwind Config with Safelist File\nDESCRIPTION: Configuration example showing how to include a safelist file in Tailwind configuration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  content: [\"./path/safelist.txt\"],\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Importing CSS in Astro Layout - JavaScript\nDESCRIPTION: This code imports the main CSS file containing Tailwind CSS and daisyUI styles into an Astro layout file. This import statement should be placed at the top of the src/layouts/Layout.astro file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/astro/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\n---\nimport \"../assets/app.css\";\n---\n```\n\n----------------------------------------\n\nTITLE: Starting the Deno Fresh Development Server - Terminal\nDESCRIPTION: This terminal command launches the Deno server using a predefined task. Typically, the 'start' task is set up in 'deno.json' or an associated config. This lets developers preview and interact with the configured Fresh, Tailwind CSS, and daisyUI stack locally.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/fresh/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: Terminal\nCODE:\n```\ndeno task start\n```\n\n----------------------------------------\n\nTITLE: Username Text Input with Icon and Validator in HTML\nDESCRIPTION: This snippet highlights a text input field for username entry with validation and an icon. Using 'input' and 'validator' classes, it sets specific character requirements with hints for valid input. Include SVG for visual representation and require a 3-30 character username using letters, numbers, or dashes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$input $$validator\">\n  <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g\n      stroke-linejoin=\"round\"\n      stroke-linecap=\"round\"\n      stroke-width=\"2.5\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path>\n      <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n    </g>\n  </svg>\n  <input\n    type=\"input\"\n    required\n    placeholder=\"Username\"\n    pattern=\"[A-Za-z][A-Za-z0-9\\-]*\"\n    minlength=\"3\"\n    maxlength=\"30\"\n    title=\"Only letters, numbers or dash\"\n  />\n</label>\n<p class=\"$$validator-hint\">\n  Must be 3 to 30 characters\n  <br />containing only letters, numbers or dash\n</p>\n```\n\n----------------------------------------\n\nTITLE: Warning Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with warning color styling using link-warning class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-warning\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Entry Point for daisyUI\nDESCRIPTION: This snippet provides the content for an HTML file which links `output.css` stylesheet for styling using Tailwind CSS and daisyUI classes. This file includes a button element utilizing a daisyUI class. It is the client-facing entry point for the application and is located at `public/index.html`.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/output.css\">\n  </head>\n  <body>\n    <button class=\"btn btn-primary\">Hello daisyUI</button>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing Django Using pip - Shell\nDESCRIPTION: This shell snippet installs Django using Python’s pip package manager. It is required as the first step to set up the application framework before configuring templates, static files, or Tailwind CSS dependencies.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\npython -m pip install Django\n```\n\n----------------------------------------\n\nTITLE: Updating Avatar Online Status in daisyUI 5\nDESCRIPTION: Shows how to update avatar online status class from 'online' to 'avatar-online' in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"avatar online\">\n+ <div class=\"avatar avatar-online\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Outline Style Badge Variations\nDESCRIPTION: Badges with outline style showing different color options\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-outline $$badge-primary\">Primary</div>\n<div class=\"$$badge $$badge-outline $$badge-secondary\">Secondary</div>\n<div class=\"$$badge $$badge-outline $$badge-accent\">Accent</div>\n<div class=\"$$badge $$badge-outline $$badge-info\">Info</div>\n<div class=\"$$badge $$badge-outline $$badge-success\">Success</div>\n<div class=\"$$badge $$badge-outline $$badge-warning\">Warning</div>\n<div class=\"$$badge $$badge-outline $$badge-error\">Error</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Success Color to Tooltip (HTML)\nDESCRIPTION: This code applies the 'tooltip-success' class to style the tooltip with a success color (typically green) and also styles the button as a success indicator. This is useful for status confirmations within UI elements. Requires daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-success\" data-tip=\"success\">\n  <button class=\"$$btn $$btn-success\">success</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: DaisyUI Additional Themes Implementation\nDESCRIPTION: Adds the additional themes stylesheet for DaisyUI via CDN, enabling access to all available themes beyond the default light and dark options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/cdn/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://cdn.jsdelivr.net/npm/daisyui@5/themes.css\" rel=\"stylesheet\" type=\"text/css\" />\n```\n\n----------------------------------------\n\nTITLE: Advanced daisyUI Plugin Configuration\nDESCRIPTION: Configuration options for daisyUI plugin including logs, component inclusion/exclusion, and theme settings.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-5-alpha/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n@plugin \"daisyui\" {\n  logs: true;\n  root: \":root\";\n  include: button, badge, input, card;\n  exclude: badge;\n  themes: light --default, dark --prefersdark, cupcake;\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Rightward Triangle Mask in DaisyUI\nDESCRIPTION: Applies a rightward-pointing triangle mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-triangle-4\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Toast with Top-Start Position\nDESCRIPTION: Shows a toast positioned at the top-left corner containing multiple alert messages.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-top $$toast-start\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind CSS and daisyUI in CSS file\nDESCRIPTION: This CSS file imports Tailwind CSS and adds daisyUI as a plugin. It should replace any existing styles in the project's main CSS file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/sveltekit/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Toast with End-Middle Position\nDESCRIPTION: Demonstrates a toast positioned at the middle-right side of the page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toast/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$toast $$toast-end $$toast-middle\">\n  <div class=\"$$alert $$alert-info\">\n    <span>New mail arrived.</span>\n  </div>\n  <div class=\"$$alert $$alert-success\">\n    <span>Message sent successfully.</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Copilot in VSCode for daisyUI\nDESCRIPTION: Updates VSCode settings to utilize the downloaded daisyUI guide for code generation with GitHub Copilot. Requires modification of the settings.json file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/vscode/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"github.copilot.chat.codeGeneration.instructions\": [\n    {\n      \"file\": \"./.vscode/daisyui.md\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Dynamic Class Implementation\nDESCRIPTION: Example of problematic dynamic class name usage that won't work in production\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-{{ color }}-500\"></div>\n```\n\n----------------------------------------\n\nTITLE: CSS Import Examples\nDESCRIPTION: Examples showing how to import the generated CSS file in JavaScript or HTML\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/npm-init-daisyui/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"/output.css\"\n```\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"/output.css\" rel=\"stylesheet\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite to use UnoCSS\nDESCRIPTION: This code adds UnoCSS as a plugin to the Vite configuration file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/unocss/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport unocss from \"unocss/vite\";\n\nexport default defineConfig({\n  plugins: [\n    unocss()\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Stack Component in daisyUI 5\nDESCRIPTION: Shows how to update the stack component to apply width and height to the container instead of individual items.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_17\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"stack\">\n-   <div class=\"card bg-base-100 w-36 h-36\">Text</div>\n-   <div class=\"card bg-base-100 w-36 h-36\">Text</div>\n-   <div class=\"card bg-base-100 w-36 h-36\">Text</div>\n+ <div class=\"stack w-36 h-32\">\n+   <div class=\"card bg-base-100\">Text</div>\n+   <div class=\"card bg-base-100\">Text</div>\n+   <div class=\"card bg-base-100\">Text</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Secondary Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with secondary color styling using link-secondary class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-secondary\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Product Metadata Configuration\nDESCRIPTION: Example JSON structure for extending product data with additional metadata including categories, variants, and images\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-nextjs-online-store-template/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"12345\",\n  \"availability\": true,\n  \"sale\": true,\n  \"category\": [\"trending\", \"bestsellers\"],\n  \"original_price\": \"$50\",\n  \"variant\": {\n    \"size\": [\n      { \"name\": \"Small\", \"link\": \"https://example.com/small\" },\n      { \"name\": \"Medium\", \"link\": \"https://example.com/medium\" }\n    ]\n  },\n  \"info\": {\n    \"Material\": \"100% Cotton\",\n    \"Care Instructions\": \"Machine washable\"\n  },\n  \"images\": [\"https://example.com/image1.jpg\", \"https://example.com/image2.jpg\"]\n}\n```\n\n----------------------------------------\n\nTITLE: JavaScript Code Block Example\nDESCRIPTION: Example code block demonstrating JavaScript function syntax for documentation purposes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/layout-and-typography/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction greet() {\n  console.log('Hello, world!');\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching daisyUI llms.txt in VSCode\nDESCRIPTION: Downloads the daisyUI llms.txt file into the local repository to assist AI code generation in VSCode. Required tool: curl.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/vscode/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -L https://daisyui.com/llms.txt --create-dirs -o .vscode/daisyui.md\n```\n\n----------------------------------------\n\nTITLE: Dash Style Badge Variations\nDESCRIPTION: Badges with dash style showing different color options\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/badge/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$badge $$badge-dash $$badge-primary\">Primary</div>\n<div class=\"$$badge $$badge-dash $$badge-secondary\">Secondary</div>\n<div class=\"$$badge $$badge-dash $$badge-accent\">Accent</div>\n<div class=\"$$badge $$badge-dash $$badge-info\">Info</div>\n<div class=\"$$badge $$badge-dash $$badge-success\">Success</div>\n<div class=\"$$badge $$badge-dash $$badge-warning\">Warning</div>\n<div class=\"$$badge $$badge-dash $$badge-error\">Error</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Modal with Anchor Links in DaisyUI (Legacy Method)\nDESCRIPTION: This snippet shows how to create a modal using DaisyUI's legacy anchor link approach. It uses URL fragments to show and hide the modal.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_46\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#my-modal\" class=\"btn\">Open modal</a>\n<div class=\"modal\" id=\"my-modal\">\n  <div class=\"modal-box\">{CONTENT}</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Context7 MCP Server to Claude Desktop Config (JSON Diff)\nDESCRIPTION: This diff shows the changes needed in the Claude desktop configuration file (claude_desktop_config.json) to add the Context7 MCP server. It uses 'stdio' type and executes the '@upstash/context7-mcp' package via 'npx' to enable communication.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/claude/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n```diff:claude_desktop_config.json\n{\n  \"mcpServers\": {\n+   \"Context7\": {\n+     \"type\": \"stdio\",\n+     \"command\": \"npx\",\n+     \"args\": [\"-y\", \"@upstash/context7-mcp@latest\"]\n+   }\n  }\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Tailwind CSS Integration\nDESCRIPTION: This snippet shows how to configure the Vite project to use Tailwind CSS. It imports the necessary modules and adds the Tailwind CSS plugin to the Vite configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vite/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig({\n  plugins: [\n    tailwindcss()\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing a Time Input using daisyUI in HTML\nDESCRIPTION: This snippet shows how to implement a time input element styled using the 'input' class. It is designed for accepting time inputs in user forms in a standardized format.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"time\" class=\"$$input\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Toast Component in DaisyUI\nDESCRIPTION: Corner-positioned notification component with placement options.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_66\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"toast {MODIFIER}\">{CONTENT}</div>\n```\n\n----------------------------------------\n\nTITLE: Importing CSS file in Svelte component\nDESCRIPTION: This Svelte component imports the main CSS file, which includes Tailwind CSS and daisyUI styles. This should be done in the main layout or page component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/sveltekit/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import \"../style.css\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Toggle Validation\nDESCRIPTION: Required toggle input validation implementation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"$$toggle $$validator\" required title=\"Required\" />\n<p class=\"$$validator-hint\">Required</p>\n```\n\n----------------------------------------\n\nTITLE: Referencing daisyUI Documentation URL for ChatGPT\nDESCRIPTION: Shows how to reference the daisyUI documentation in plaintext format by including the URL in ChatGPT's search feature before your prompt.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/chatgpt/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://daisyui.com/llms.txt\n```\n\n----------------------------------------\n\nTITLE: Updating Homepage Content in Astro Blog Template\nDESCRIPTION: JSX code snippet for updating the homepage content structure in the Astro blog template.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n---\nimport Hero from \"../components/Hero.astro\";\nimport TopArticles from \"../components/TopArticles.astro\";\nimport LatestBlogs from \"../components/RecentBlogs.astro\";\nimport NewsletterCard from \"../components/NewsletterCard.astro\";\nimport FeaturedPost from \"../components/FeaturedPost.astro\";\nimport HomeLayout from \"../layouts/HomeLayout.astro\";\n---\n\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n\n<HomeLayout title=\"Home\" description=\"Welcome to my blog\">\n  <div class=\"w-full\">\n    <Hero />\n    <div class=\"px-5 xl:px-10\">\n      <LatestBlogs />\n      <FeaturedPost />\n      <TopArticles />\n      <NewsletterCard />\n    </div>\n  </div>\n</HomeLayout>\n```\n\n----------------------------------------\n\nTITLE: Setting up CSS with daisyUI\nDESCRIPTION: CSS configuration to import Tailwind CSS and enable daisyUI plugin in the layout file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vike/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Updating Artboard Component in daisyUI 5\nDESCRIPTION: Shows how to replace the deprecated artboard component with Tailwind CSS width and height classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"artboard phone-1\">\n+ <div class=\"w-[320px] h-[568px]\">\n```\n\n----------------------------------------\n\nTITLE: Applying Warning Color to Tooltip (HTML)\nDESCRIPTION: Use the 'tooltip-warning' class to assign a warning (yellow/orange) background to the tooltip, suitable for alerting users of non-critical issues. Pair with 'btn-warning' for the button. DaisyUI required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-warning\" data-tip=\"warning\">\n  <button class=\"$$btn $$btn-warning\">warning</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Dark Mode Usage Example\nDESCRIPTION: Example of using dark mode classes with daisyUI themes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"p-10 dark:p-20\">\n  I will have 10 padding on winter theme and 20 padding on night theme\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Tailwind CSS Directives for Mary UI\nDESCRIPTION: CSS directives to include Tailwind base, components, and utilities in the application stylesheet for Mary UI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\n----------------------------------------\n\nTITLE: Implementing Radio Buttons with Neutral Color\nDESCRIPTION: This snippet presents radio buttons styled with the 'neutral' color theme from DaisyUI. These buttons are configured to visually signal the neutral option using the `radio-neutral` class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"radio\" name=\"radio-3\" class=\"$$radio $$radio-neutral\" checked=\"checked\" />\n<input type=\"radio\" name=\"radio-3\" class=\"$$radio $$radio-neutral\" />\n```\n\n----------------------------------------\n\nTITLE: Neutral Outline and Dash Buttons\nDESCRIPTION: Demonstrates neutral buttons with outline and dash styles, specifically for light backgrounds.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-white p-6\">\n  <button class=\"$$btn $$btn-neutral $$btn-outline\">Outline</button>\n  <button class=\"$$btn $$btn-neutral $$btn-dash\">Dash</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding UnoCSS imports to the main JavaScript file\nDESCRIPTION: These import statements add the necessary UnoCSS styles to the project's main JavaScript file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/unocss/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport \"@unocss/reset/tailwind.css\";\nimport \"uno.css\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS Plugin with Nuxt and Vite - JavaScript\nDESCRIPTION: This JavaScript/TypeScript configuration imports the Tailwind CSS Vite plugin and exports a Nuxt configuration that applies it via the Vite plugin array. Key dependencies are '@tailwindcss/vite' and the Nuxt project structure. 'css' includes the main CSS file. Inputs are implicit (config file), and outputs are its effect on project compilation. This snippet assumes Nuxt 3 with Vite as the builder.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nuxt/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport tailwindcss from \"@tailwindcss/vite\";\nexport default defineNuxtConfig({\n  vite: {\n    plugins: [tailwindcss()],\n  },\n  css: [\"~/assets/app.css\"],\n});\n```\n\n----------------------------------------\n\nTITLE: Example Grok Prompt for daisyUI Theme Generation\nDESCRIPTION: Demonstrates an example prompt for Grok, combining the daisyUI context URL with a specific request. This prompt asks Grok to generate a light daisyUI 5 theme based on a tropical color palette, illustrating the intended usage pattern.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/grok/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nhttps://daisyui.com/llms.txt give me a light daisyUI 5 theme with tropical color palette\n```\n\n----------------------------------------\n\nTITLE: Button with Indicator Badge in DaisyUI\nDESCRIPTION: Shows how to add a numeric badge indicator to a button.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$indicator\">\n  <span class=\"$$indicator-item $$badge $$badge-secondary\">12</span>\n  <button class=\"$$btn\">inbox</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind and Enabling daisyUI Plugin in PostCSS\nDESCRIPTION: Updates the main CSS file (typically `src/styles.css`) to include Tailwind CSS directives and enable the daisyUI plugin. `@import \"tailwindcss\";` imports Tailwind's base, components, and utility styles. `@plugin \"daisyui\";` activates the daisyUI plugin, adding its component classes and themes. Any pre-existing styles in this file should usually be removed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/angular/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Wide Button Implementation\nDESCRIPTION: Shows how to create a wide button with extended horizontal padding.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-wide\">Wide</button>\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Dropdown Menu with Headless UI in React\nDESCRIPTION: Example of how to create a simple dropdown menu component using Headless UI in a React application. This snippet demonstrates the basic structure without any styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-use-headless-ui-and-daisyui/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Menu } from \"@headlessui/react\"\n\nexport default function MyDropDown() {\n  return (\n    <Menu>\n      <Menu.Button>Button</Menu.Button>\n      <Menu.Items>\n        <Menu.Item>\n          <li>\n            <a href=\"/link\">Item 1</a>\n          </li>\n        </Menu.Item>\n        <Menu.Item>\n          <li>\n            <a href=\"/link\">Item 2</a>\n          </li>\n        </Menu.Item>\n      </Menu.Items>\n    </Menu>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Excluding Multiple Components/Styles in daisyUI PostCSS\nDESCRIPTION: Shows how to exclude a list of specific components and styles (`checkbox`, `footer`, `typography`, `glass`, `rootcolor`, `rootscrollgutter`) using the `exclude` property in the daisyUI PostCSS configuration. This allows opting out of certain parts while keeping the rest.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  exclude: checkbox, footer, typography, glass, rootcolor, rootscrollgutter;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Running an Elixir Phoenix Project\nDESCRIPTION: This command starts the Phoenix server, allowing you to use daisyUI class names in your project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/phoenix/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nmix phx.server\n```\n\n----------------------------------------\n\nTITLE: Installing Eleventy, Tailwind CSS, and daisyUI Dependencies in Shell\nDESCRIPTION: Installs necessary npm packages for an Eleventy project using Tailwind CSS and daisyUI. This includes Eleventy itself, PostCSS for CSS processing, the latest versions of Tailwind CSS, its PostCSS integration, the Tailwind Typography plugin, and the latest version of daisyUI. Requires npm installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @11ty/eleventy postcss tailwindcss@latest @tailwindcss/postcss@latest @tailwindcss/typography@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Dynamic Rendering of Grouped Checkbox Lists with Svelte Each Blocks\nDESCRIPTION: This snippet uses Svelte's {#each} block to iterate over data.groupedFiles and dynamically render group headers and a group of checkboxes for each group. Each checkbox is individually bound to 'file.checked' and triggers the toggleUrl function on change, updating selection state in the app. Dependencies include Svelte and a defined 'toggleUrl' function; the snippet supports dynamic UI rendering for any shape of grouped file data.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/cdn/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: svelte\nCODE:\n```\n{#each data.groupedFiles as group}\n  <h4 class=\\\"block text-xs mt-4 mx-1 mb-1 font-semibold tracking-wider opacity-40\\\">{group.name}</h4>\n  <div class=\\\"flex gap-y-2 gap-x-1 flex-wrap\\\">\n    {#each group.files as file}\n      <input class=\\\"btn btn-xs rounded-full\\\" aria-label={file.name} type=\\\"checkbox\\\" onchange={() => toggleUrl(file)} checked={file.checked} />\n    {/each}\n  </div>\n{/each}\n```\n\n----------------------------------------\n\nTITLE: Updating Input Element Styles in daisyUI 5\nDESCRIPTION: Shows the changes in input elements between daisyUI 4 and 5, where inputs now have default borders and width.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<!-- Input with border -->\n<input class=\"input input-bordered\"/>\n\n<!-- Input without border -->\n<input class=\"input\"/>\n\n<!-- Input with 20rem width -->\n<input class=\"input w-full max-w-xs\"/>\n```\n\nLANGUAGE: html\nCODE:\n```\n<!-- Input with border -->\n<input class=\"input\"/>\n\n<!-- Input without border -->\n<input class=\"input input-ghost\"/>\n\n<!-- Input with consistent width -->\n<input class=\"input\"/>\n```\n\n----------------------------------------\n\nTITLE: Displaying Tooltips at the Right Placement (HTML)\nDESCRIPTION: This snippet places the tooltip to the right of the container using 'tooltip-right', along with 'tooltip-open' to force display. The 'data-tip' attribute provides the tooltip text. Requires daisyUI for classes to apply correctly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tooltip $$tooltip-open $$tooltip-right\" data-tip=\"hello\">\n  <button class=\"$$btn\">Right</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Advanced daisyUI Configuration Example in CSS\nDESCRIPTION: This CSS snippet shows an advanced daisyUI configuration with multiple themes, custom root element, exclusions, prefix, and disabled logging. It demonstrates how to set default and dark mode themes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n@plugin \"daisyui\" {\n  themes: light, dark, cupcake, bumblebee --default, emerald, corporate, synthwave --prefersdark, retro, cyberpunk, valentine, halloween, garden, forest, aqua, lofi, pastel, fantasy, wireframe, black, luxury, dracula, cmyk, autumn, business, acid, lemonade, night, coffee, winter, dim, nord, sunset, caramellatte, abyss, silk;\n  root: \":root\";\n  include: ;\n  exclude: rootscrollgutter, checkbox;\n  prefix: daisy-;\n  logs: false;\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing DaisyUI Component Documentation\nDESCRIPTION: JavaScript snippet showing the URL structure for accessing component documentation in a browser. This helps developers reference existing component implementations.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nhttp://localhost:3000/components/button\n```\n\n----------------------------------------\n\nTITLE: Implementing Label Before Input in DaisyUI\nDESCRIPTION: Shows how to add a label before an input field using DaisyUI's label class. The label appears as a prefix (https://) to the input field.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/label/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$input\">\n  <span class=\"$$label\">https://</span>\n  <input type=\"text\" placeholder=\"URL\" />\n</label>\n```\n\n----------------------------------------\n\nTITLE: Basic Stacked Cards\nDESCRIPTION: Basic card stacking with fixed size and centered text content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/stack/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$stack size-28\">\n  <div class=\"border-base-content $$card bg-base-100 border text-center\">\n    <div class=\"$$card-body\">A</div>\n  </div>\n  <div class=\"border-base-content $$card bg-base-100 border text-center\">\n    <div class=\"$$card-body\">B</div>\n  </div>\n  <div class=\"border-base-content $$card bg-base-100 border text-center\">\n    <div class=\"$$card-body\">C</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running Tailwind CSS Upgrade Tool via Terminal\nDESCRIPTION: Command to run the official Tailwind CSS upgrade tool which automatically applies the new Tailwind CSS changes to your project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx @tailwindcss/upgrade\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS to use daisyUI plugin\nDESCRIPTION: JavaScript configuration to add daisyUI as a plugin in the Tailwind CSS configuration file (tailwind.config.js).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/what-is-daisyui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  //...\n  plugins: [require(\"daisyui\")],\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI Packages\nDESCRIPTION: Installs the required dependencies including Tailwind CSS, Tailwind Vite plugin, and daisyUI using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid-start/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Implementing Top-Aligned Dropdown with End Alignment in DaisyUI\nDESCRIPTION: Creates a dropdown menu that appears above the trigger button and aligns to its right edge. Uses DaisyUI classes for styling and positioning.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dropdown/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dropdown $$dropdown-top $$dropdown-end\">\n  <div tabindex=\"0\" role=\"button\" class=\"$$btn m-1\">Click ⬆️</div>\n  <ul tabindex=\"0\" class=\"$$dropdown-content $$menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm\">\n    <li><a>Item 1</a></li>\n    <li><a>Item 2</a></li>\n  </ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Defining a LitElement with DaisyUI Styles\nDESCRIPTION: Defines a custom LitElement class that applies DaisyUI styles to a button using the 'unsafeCSS' method to include global styles. Requires 'lit' library and CSS imports.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/lit/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport { LitElement, html } from \"lit\";\nimport { unsafeCSS } from \"lit\";\nimport globalStyles from \"./index.css?inline\";\n\nexport class MyElement extends LitElement {\n  static styles = [unsafeCSS(globalStyles)];\n  render() {\n    return html`<button class=\"btn\">daisyUI button</button> `;\n  }\n}\n\nwindow.customElements.define(\"my-element\", MyElement);\n```\n\n----------------------------------------\n\nTITLE: Creating Info Color Progress Bars with DaisyUI\nDESCRIPTION: This code shows how to implement progress bars with an info color theme using DaisyUI classes. It includes various progress bars with different completion levels, all styled with the info color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-info w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-info w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-info w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-info w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-info w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Creating a new SvelteKit project using CLI\nDESCRIPTION: This command creates a new SvelteKit project in the current directory using the SvelteKit CLI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/sveltekit/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx sv create ./\n```\n\n----------------------------------------\n\nTITLE: Updating Card Compact Class in daisyUI 5\nDESCRIPTION: Shows how to replace the deprecated card-compact class with card-sm in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"card card-compact\">\n+ <div class=\"card card-sm\">\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI via Curl\nDESCRIPTION: Commands to download daisyUI and theme files using curl\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sLo app/assets/tailwind/daisyui.js https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js\ncurl -sLo app/assets/tailwind/daisyui-theme.js https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS, daisyUI, and Plugin - Terminal\nDESCRIPTION: This shell command installs Tailwind CSS, daisyUI, and the fresh-plugin-tailwindcss as development dependencies using the Deno package manager. The \\'-D\\' flag installs them as dev dependencies and ensures the latest versions are used. It requires Deno and a \\'deno.json\\' with nodeModulesDir enabled.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/fresh/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: Terminal\nCODE:\n```\ndeno i -D npm:tailwindcss@latest npm:daisyui@latest jsr:@pakornv/fresh-plugin-tailwindcss\n```\n\n----------------------------------------\n\nTITLE: Updating Footer Layout in daisyUI 5\nDESCRIPTION: Shows how to update footer to use horizontal layout as footers are vertical by default in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: diff\nCODE:\n```\n- <footer class=\"footer\">\n+ <footer class=\"footer md:footer-horizontal\">\n```\n\n----------------------------------------\n\nTITLE: Updating Tabs Boxed Class in daisyUI 5\nDESCRIPTION: Shows how to update the tabs boxed class from 'tabs-boxed' to 'tabs-box' in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_20\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"tabs tabs-boxed\">\n+ <div class=\"tabs tabs-box\">\n```\n\n----------------------------------------\n\nTITLE: Creating the Basic HTML Structure (HTML)\nDESCRIPTION: Defines a minimal HTML file (`index.html`) that serves as the entry point. It includes basic head elements like title and viewport meta tag, links to the `style.css` stylesheet, and contains a sample button element with the `btn` class from daisyUI to demonstrate usage.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/bun/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <title>daisyUI</title>\n    <link rel=\"stylesheet\" href=\"./style.css\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <button class=\"btn\">daisyUI Button</button>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Button Component with Tailwind UI\nDESCRIPTION: Shows the implementation of a button using Tailwind UI's utility classes, demonstrating the more verbose approach with detailed styling controls.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-vs-tailwindui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button\n  class=\"rounded-md bg-indigo-600 px-3.5 py-2.5\n  text-sm font-semibold text-white shadow-sm\n  hover:bg-indigo-500 focus-visible:outline\n  focus-visible:outline-2 focus-visible:outline-offset-2\n  focus-visible:outline-indigo-600\">\n  Button\n</button>\n```\n\n----------------------------------------\n\nTITLE: Checking DaisyUI Pull Requests on Preview Server\nDESCRIPTION: Command to view PR changes on the preview server. This helps collaborators review and test changes before merging.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhttps://pr-{PR-NUMBER}.preview.daisyui.com/\n```\n\n----------------------------------------\n\nTITLE: Responsive Button Implementation\nDESCRIPTION: Shows how to create a responsive button that changes size based on viewport breakpoints.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"$$btn $$btn-xs sm:$$btn-sm md:$$btn-md lg:$$btn-lg xl:$$btn-xl\">Responsive</button>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite with Tailwind CSS Plugin\nDESCRIPTION: Configures a Vite project to use Tailwind CSS by importing and adding it as a plugin in 'vite.config.js'. Requires '@tailwindcss/vite' to be installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/lit/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig({\n  plugins: [\n    tailwindcss()\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Mockup Phone Component in daisyUI 5\nDESCRIPTION: Shows how to update the mockup-phone component with the new class names for camera and display elements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_15\n\nLANGUAGE: diff\nCODE:\n```\n<div class=\"mockup-phone\">\n-  <div class=\"camera\"></div>\n+  <div class=\"mockup-phone-camera\"></div>\n\n-    <div class=\"display\">\n+    <div class=\"mockup-phone-display\">\n\n-    <div class=\"artboard artboard-demo phone-1\">Hi.</div>\n+    <div class=\"w-[320px] h-[568px]\">Hi.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Color Function Usage Updates\nDESCRIPTION: Example of updating color function usage from hsl() to oklch() for DaisyUI color variables.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n/* Using hsl() function */\ncolor: hsl(var(--p));\n```\n\nLANGUAGE: css\nCODE:\n```\n/* Using oklch() function */\ncolor: oklch(var(--p));\n```\n\n----------------------------------------\n\nTITLE: Running the Zola Development Server\nDESCRIPTION: Command to start the Zola development server, which should be run in a separate terminal tab while the Tailwind CSS build process is running.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nzola serve\n```\n\n----------------------------------------\n\nTITLE: Implementing Horizontal Divider in DaisyUI\nDESCRIPTION: Example of a horizontal divider with text that separates content side by side. The divider-horizontal class is used to change the orientation from the default vertical to horizontal.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/divider/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full\">\n  <div class=\"$$card bg-base-300 rounded-box grid h-20 grow place-items-center\">content</div>\n  <div class=\"$$divider $$divider-horizontal\">OR</div>\n  <div class=\"$$card bg-base-300 rounded-box grid h-20 grow place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI - Shell Command\nDESCRIPTION: This shell command installs the latest versions of Tailwind CSS, Tailwind CSS Vite plugin, and daisyUI using npm. Ensure that npm is set up correctly in the project environment.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/astro/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Warning Color Progress Bars with DaisyUI\nDESCRIPTION: This code illustrates how to implement progress bars with a warning color theme using DaisyUI classes. It includes various progress bars with different completion levels, all styled with the warning color.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/progress/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"$$progress $$progress-warning w-56\" value=\"0\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-warning w-56\" value=\"10\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-warning w-56\" value=\"40\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-warning w-56\" value=\"70\" max=\"100\"></progress>\n<progress class=\"$$progress $$progress-warning w-56\" value=\"100\" max=\"100\"></progress>\n```\n\n----------------------------------------\n\nTITLE: Downloading daisyUI JavaScript Files\nDESCRIPTION: Commands to download the latest versions of daisyUI and its theme module as standalone JavaScript files, placing them in the static directory alongside the Tailwind executable.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sLo static/daisyui.js https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js\ncurl -sLo static/daisyui-theme.js https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js\n```\n\n----------------------------------------\n\nTITLE: Migrating Button Group to Join Component\nDESCRIPTION: Replacing deprecated btn-group with new join component structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"btn-group\">\n  <button class=\"btn\">Button 1</button>\n  <button class=\"btn\">Button 2</button>\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"join\">\n  <button class=\"btn join-item\">Button 1</button>\n  <button class=\"btn join-item\">Button 2</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Initializing Nuxt Project - Terminal Shell\nDESCRIPTION: This command initializes a new Nuxt project in the current directory. It requires Node.js and npm installed. The input parameter is the project directory (here, current directory). No output is produced other than side effects: initializing the project folder. It assumes the user has the appropriate permissions and an internet connection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nuxt/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpx nuxi@latest init\n```\n\n----------------------------------------\n\nTITLE: Building Tailwind and daisyUI CSS via npm Script in Shell\nDESCRIPTION: This terminal command executes the 'build:css' script defined in package.json to generate the compiled CSS. It must be run in a Node.js project where the build script is present. On success, it outputs the processed styles (including Tailwind and daisyUI) to public/output.css, ready to be linked by HTML files.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/cli/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build:css\n```\n\n----------------------------------------\n\nTITLE: Migrating from label-text and label-text-alt to standard spans with flexbox in DaisyUI\nDESCRIPTION: Example demonstrating how to replace label-text and label-text-alt classes with standard spans using flexbox utilities like flex and justify-between for layout control.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_23\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-control w-full max-w-xs\">\n  <div class=\"label\">\n    <span class=\"label-text\">What is your name?</span>\n    <span class=\"label-text-alt\">Top Right label</span>\n  </div>\n  <input type=\"text\" placeholder=\"Type here\" class=\"input input-bordered w-full max-w-xs\" />\n  <div class=\"label\">\n    <span class=\"label-text-alt\">Bottom Left label</span>\n    <span class=\"label-text-alt\">Bottom Right label</span>\n  </div>\n</label>\n```\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"fieldset max-w-xs\">\n  <label class=\"label flex justify-between\" for=\"name\">\n    <span>What is your name?</span>\n    <span>Top Right label</span>\n  </label>\n  <input id=\"name\" class=\"input\" placeholder=\"Name\" />\n  <label class=\"label flex justify-between\" for=\"name\">\n    <span>Bottom Left label</span>\n    <span>Bottom Right label</span>\n  </label>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Excluding Specific DaisyUI Components using PostCSS\nDESCRIPTION: Shows how to exclude specific components from the DaisyUI library using the new exclude functionality in PostCSS configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/v5/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: postcss\nCODE:\n```\n@plugin \"daisyui\" {\n  exclude: scrollbar;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind and daisyUI Plugin (PostCSS)\nDESCRIPTION: Creates a `style.css` file that uses standard PostCSS/Tailwind directives. `@import \"tailwindcss\";` includes Tailwind's base, components, and utilities styles. `@plugin \"daisyui\";` enables the daisyUI plugin, making its components and utility classes available. This file will be processed by `bun-plugin-tailwind` when served.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/bun/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and DaisyUI using npm\nDESCRIPTION: Installs the latest versions of Tailwind CSS and DaisyUI along with the Vite plugin for Tailwind CSS. Requires npm and a Vite project to be initialized.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/lit/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Basic Checkbox Implementation in DaisyUI\nDESCRIPTION: Simple checkbox input implementation using DaisyUI's checkbox class\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox\" />\n```\n\n----------------------------------------\n\nTITLE: Linking Compiled CSS in HTML - HTML\nDESCRIPTION: This HTML snippet demonstrates how to include the compiled CSS file in the main HTML document via a <link> tag. Must be placed in the <head> section of your HTML file (such as public/index.html) to ensure all Tailwind/daisyUI styles are applied throughout the website.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/htmx/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"./output.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Updating Select Element Styles in daisyUI 5\nDESCRIPTION: Shows the changes in select elements between daisyUI 4 and 5, where selects now have default borders and width.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<!-- Select with border -->\n<select class=\"select select-bordered\">\n\n<!-- Select without border -->\n<select class=\"select\">\n\n<!-- Select with consistent width -->\n<select class=\"select w-full max-w-xs\">\n```\n\nLANGUAGE: html\nCODE:\n```\n<!-- Select with border -->\n<select class=\"select\">\n\n<!-- Select without border -->\n<select class=\"select select-ghost\">\n\n<!-- Select with consistent width -->\n<select class=\"select\">\n```\n\n----------------------------------------\n\nTITLE: Focus Color Class Updates\nDESCRIPTION: Migration guide for updating focus color classes to use color-mix function.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nclass=\"bg-primary-focus\"\nclass=\"bg-secondary-focus\"\nclass=\"bg-accent-focus\"\nclass=\"bg-neutral-focus\"\n```\n\nLANGUAGE: jsx\nCODE:\n```\nclass=\"bg-[color-mix(in_oklab,oklch(var(--p)),black_7%)]\"\nclass=\"bg-[color-mix(in_oklab,oklch(var(--s)),black_7%)]\"\nclass=\"bg-[color-mix(in_oklab,oklch(var(--a)),black_7%)]\"\nclass=\"bg-[color-mix(in_oklab,oklch(var(--n)),black_7%)]\"\n```\n\n----------------------------------------\n\nTITLE: Installing UnoCSS, daisyUI, and unocss-preset-daisy\nDESCRIPTION: This command installs the necessary npm packages for using UnoCSS with daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/unocss/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install unocss daisyui @ameinhardt/unocss-preset-daisy\n```\n\n----------------------------------------\n\nTITLE: Implementing Badge Component in HTML with DaisyUI\nDESCRIPTION: Creates a badge component to inform users of specific data status. Supports modifiers for style, color, and size.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"badge {MODIFIER}\">Badge</span>\n```\n\n----------------------------------------\n\nTITLE: Using daisyUI Component in Next.js\nDESCRIPTION: Example of using a daisyUI button component in the Next.js page component file (/app/page.tsx).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nexport default function Home() {\n  return (\n    <>\n      <button className=\"btn btn-primary\">Hello daisyUI!</button>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Select Component in DaisyUI\nDESCRIPTION: Basic implementation of a select dropdown using DaisyUI's select class. Creates a dropdown with color options and styled with DaisyUI's default styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/select/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"$$select\">\n  <option disabled selected>Pick a color</option>\n  <option>Crimson</option>\n  <option>Amber</option>\n  <option>Velvet</option>\n</select>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<select defaultValue=\"Pick a color\" className=\"$$select\">\n  <option disabled={true}>Pick a color</option>\n  <option>Crimson</option>\n  <option>Amber</option>\n  <option>Velvet</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Theme Checkbox Implementation\nDESCRIPTION: Simple checkbox implementation for theme switching\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/theme-controller/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" value=\"synthwave\" class=\"$$checkbox $$theme-controller\" />\n```\n\n----------------------------------------\n\nTITLE: Example Prompt for Claude with Context7 MCP Server (Text)\nDESCRIPTION: An example prompt demonstrating how to instruct Claude desktop to use the configured Context7 MCP server for generating daisyUI code. The 'use context7' suffix triggers the MCP server integration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/claude/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n```\ngive me a light daisyUI 5 theme with tropical color palette. use context7\n```\n```\n\n----------------------------------------\n\nTITLE: Theme Configuration Updates\nDESCRIPTION: Changes in theme configuration syntax for DaisyUI v4.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndaisyui: {\n  themes: [\n    {\n      light: {\n        ...require(\"daisyui/src/theming/themes\")[\"[data-theme=light]\"],\n        primary: \"blue\",\n      },\n    },\n  ],\n},\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndaisyui: {\n  themes: [\n    {\n      light: {\n        ...require(\"daisyui/src/theming/themes\")[\"light\"],\n        primary: \"blue\",\n      },\n    },\n  ],\n},\n```\n\n----------------------------------------\n\nTITLE: Replacing btn-group with join class in DaisyUI\nDESCRIPTION: Example showing how to migrate from the deprecated btn-group class to the newer join and join-item classes for button grouping functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_24\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"btn-group\">\n  <button class=\"btn\">Button 1</button>\n  <button class=\"btn\">Button 2</button>\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"join\">\n  <button class=\"btn join-item\">Button 1</button>\n  <button class=\"btn join-item\">Button 2</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS for Tailwind CSS in JSON\nDESCRIPTION: Creates or updates the PostCSS configuration file (`.postcssrc.json`) at the project root. It specifies that the `@tailwindcss/postcss` plugin should be loaded, enabling Tailwind CSS processing during the CSS build step. This configuration is necessary for Tailwind's directives and functions to work correctly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/angular/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": {\n    \"@tailwindcss/postcss\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI dependencies\nDESCRIPTION: This command installs the latest versions of Tailwind CSS, the Tailwind CSS Vite plugin, and daisyUI using npm. These are the required dependencies for using daisyUI in a Qwik project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/qwik/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Starting DaisyUI Development Server\nDESCRIPTION: Command to run the development server using npm. This starts a local environment for testing changes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Basic Link Implementation in DaisyUI\nDESCRIPTION: Basic implementation of a link using the link class to add underline styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Astro Project - Shell Command\nDESCRIPTION: This shell command initializes a new Astro project in the current directory using the latest version of Astro. It assumes npm is installed and available in the system's PATH.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/astro/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create astro@latest ./\n```\n\n----------------------------------------\n\nTITLE: Simplifying File Input Classes in HTML\nDESCRIPTION: This snippet demonstrates the removal of the 'file-input-bordered' class, as file inputs now have a border by default in the new version.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n- <input type=\"file\" class=\"file-input file-input-bordered\">\n+ <input type=\"file\" class=\"file-input\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind with daisyUI CDN\nDESCRIPTION: CSS configuration for Tailwind with daisyUI via CDN\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"../../../public/*.html\";\n@source \"../../../app/helpers/**/*.rb\";\n@source \"../../../app/javascript/**/*.js\";\n@source \"../../../app/views/**/*\";\n\n@import \"https://cdn.jsdelivr.net/npm/daisyui@5\";\n```\n\n----------------------------------------\n\nTITLE: Configuring MCP Server for Windsurf\nDESCRIPTION: This JSON configuration snippet is used to add a custom MCP server to Windsurf using the Context7 service. It requires the \"npx\" command to execute, following the arguments provided.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/windsurf/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"context7\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@upstash/context7-mcp@latest\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Link Component in HTML with DaisyUI\nDESCRIPTION: This snippet demonstrates how to implement a link component using DaisyUI. The link can be styled with various modifiers like hover effects and colors (neutral, primary, secondary, etc).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_34\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"link {MODIFIER}\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Sidebar Navigation Component - HTML\nDESCRIPTION: Sidebar component implementation showing the basic structure and navigation layout.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-astro-tailwind-documentation-template/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"drawer-side z-40 md:border-r md:border-base-content/10\">\n  <label\n    for=\"my-drawer-2\"\n    aria-label=\"close sidebar\"\n    class=\"drawer-overlay\"\n  ></label>\n  <aside class=\"bg-base-100 min-h-screen w-80\">\n    <div\n      class=\"bg-base-100/90 sticky top-0 z-20 items-center gap-2 px-4 py-2 backdrop-blur lg:flex\"\n    >\n      <a href=\"/\" class=\"flex-0 btn btn-ghost px-2\">\n        <h1\n          class=\"text-2xl font-bold bg-clip-text text-transparent bg-linear-to-r from-primary to-primary/50\"\n        >\n          Access Shield{\" \"}\n          <span class=\"text-sm text-base-content opacity-50\">docs</span>\n        </h1>\n      </a>\n    </div>\n  </aside>\n\n  <!-- SideBar Code -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Downward Triangle Mask in DaisyUI\nDESCRIPTION: Applies a downward-pointing triangle mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-triangle-2\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a New Next.js Project\nDESCRIPTION: Command to create a new Next.js project using the latest version of create-next-app.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-next-app@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Headless UI for React\nDESCRIPTION: Command to install Headless UI package for React projects using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-use-headless-ui-and-daisyui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @headlessui/react\n```\n\n----------------------------------------\n\nTITLE: Select Input Validation\nDESCRIPTION: Select dropdown validation with required field implementation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<form>\n  <select class=\"$$select $$validator\" required>\n    <option disabled selected value=\"\">Choose:</option>\n    <option>Tabs</option>\n    <option>Spaces</option>\n  </select>\n  <p class=\"$$validator-hint\">Required</p>\n  <button class=\"$$btn\" type=\"submit\">Submit form</button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Enabling All Themes\nDESCRIPTION: Configuration to enable all built-in themes in daisyUI\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\" {\n  themes: all;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI Dependencies\nDESCRIPTION: Commands to install Tailwind CSS, PostCSS, Autoprefixer, daisyUI and initialize configuration files\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -D tailwindcss postcss autoprefixer daisyui\nnpx tailwindcss init -p\n```\n\n----------------------------------------\n\nTITLE: Creating Layout File with Tailwind CSS Import\nDESCRIPTION: Shell command to create a new layout file with Tailwind CSS import\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\necho '\n<script>\n  import \"tailwindcss/tailwind.css\";\n</script>\n\n<slot />\n' > src/routes/+layout.svelte\n```\n\n----------------------------------------\n\nTITLE: Success Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with success color styling using link-success class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-success\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Angular Project using Shell\nDESCRIPTION: Uses the Angular CLI `ng new` command to scaffold a new Angular project named 'my-project', specifying CSS as the stylesheet format. Subsequently, it changes the current directory to the newly created project folder. Requires the Angular CLI to be installed globally.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/angular/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nng new my-project --style css\ncd my-project\n```\n\n----------------------------------------\n\nTITLE: Updating Stack Component Implementation\nDESCRIPTION: Changes to stack component structure, moving from fixed item dimensions to container-based sizing.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"stack\">\n-   <div class=\"card bg-base-100 w-36 h-36\">Text</div>\n-   <div class=\"card bg-base-100 w-36 h-36\">Text</div>\n-   <div class=\"card bg-base-100 w-36 h-36\">Text</div>\n+ <div class=\"stack w-36 h-32\">\n+   <div class=\"card bg-base-100\">Text</div>\n+   <div class=\"card bg-base-100\">Text</div>\n+   <div class=\"card bg-base-100\">Text</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind with daisyUI Bundle\nDESCRIPTION: CSS configuration for Tailwind with daisyUI as a bundle file\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"../../../public/*.html\";\n@source \"../../../app/helpers/**/*.rb\";\n@source \"../../../app/javascript/**/*.js\";\n@source \"../../../app/views/**/*\";\n\n@plugin \"./daisyui.js\";\n\n/* Optional for custom themes – Docs: https://daisyui.com/docs/themes/#how-to-add-a-new-custom-theme */\n@plugin \"./daisyui-theme.js\"{\n  /* custom theme here */\n}\n```\n\n----------------------------------------\n\nTITLE: Adding MCP Server Context7 to VSCode\nDESCRIPTION: Configures MCP servers in VSCode to enhance AI-assisted code generation for daisyUI using Context7. Involves editing settings.json.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/vscode/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"mcp\": {\n    \"servers\": {\n+     \"Context7\": {\n+       \"type\": \"stdio\",\n+       \"command\": \"npx\",\n+       \"args\": [\"-y\", \"@upstash/context7-mcp@latest\"]\n+     }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Circle Mask in DaisyUI\nDESCRIPTION: Applies a circular mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-circle\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Vite to Livewire Layout for Mary UI\nDESCRIPTION: HTML code to include the Vite build assets in the Livewire layout for Mary UI to function correctly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<head>\n  ...\n  <!-- This -->\n  @vite(['resources/css/app.css', 'resources/js/app.js'])\n</head>\n\n<body>\n  ...\n</body>\n```\n\n----------------------------------------\n\nTITLE: Implementing Outline Style Alerts in HTML with DaisyUI\nDESCRIPTION: This snippet shows how to create outline style alerts for different colors (info, success, warning, error) using DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/alert/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"alert\" class=\"$$alert $$alert-info $$alert-outline\">\n  <span>12 unread messages. Tap to see.</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-success $$alert-outline\">\n  <span>Your purchase has been confirmed!</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-warning $$alert-outline\">\n  <span>Warning: Invalid email address!</span>\n</div>\n<div role=\"alert\" class=\"$$alert $$alert-error $$alert-outline\">\n  <span>Error! Task failed successfully.</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Building for Production - Bash Command\nDESCRIPTION: Command to build the documentation site for production deployment.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-astro-tailwind-documentation-template/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS with daisyUI Plugin\nDESCRIPTION: Modifications to the tailwind.config.ts file to include daisyUI as a plugin for Tailwind CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\nimport type { Config } from 'tailwindcss'\n+ import daisyui from 'daisyui'\nconst config: Config = {\n  content: [\n    './pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './components/**/*.{js,ts,jsx,tsx,mdx}',\n    './app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic':\n          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n- plugins: [],\n+ plugins: [daisyui],\n}\nexport default config\n```\n\n----------------------------------------\n\nTITLE: Number Input Validation\nDESCRIPTION: Number input validation with range constraints.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/validator/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"number\" class=\"$$input $$validator\" required placeholder=\"Type a number between 1 to 10\" \nmin=\"1\" max=\"10\"\n  title=\"Must be between be 1 to 10\" />\n<p class=\"$$validator-hint\">Must be between be 1 to 10</p>\n```\n\n----------------------------------------\n\nTITLE: Setting Theme in HTML\nDESCRIPTION: Shows how to apply a theme to the HTML document using the data-theme attribute\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/themes/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<html data-theme=\"cupcake\"></html>\n```\n\n----------------------------------------\n\nTITLE: Downloading daisyUI Bundled JS Files for Tailwind Plugin - Shell\nDESCRIPTION: These commands download the latest daisyUI plugin and theme JS files directly into the static CSS directory. This allows Tailwind’s CLI to load daisyUI as a plugin without Node.js, enabling daisyUI utility classes during build.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: Shell\nCODE:\n```\ncurl -sLo myapp/static/css/daisyui.js https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js\ncurl -sLo myapp/static/css/daisyui-theme.js https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Next.js Store\nDESCRIPTION: Commands to install dependencies and start the development server for the online store template\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-nextjs-online-store-template/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating Ghost Style Textarea with DaisyUI HTML\nDESCRIPTION: This snippet shows how to apply a 'ghost' style (no background) to a textarea using the `textarea-ghost` modifier class in conjunction with the base `textarea` class in DaisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/textarea/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<textarea class=\"$$textarea $$textarea-ghost\" placeholder=\"Bio\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Creating a new Vite React project\nDESCRIPTION: This command creates a new Vite React project in the current directory using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/react/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create vite@latest ./ -- --template react\n```\n\n----------------------------------------\n\nTITLE: Installing DaisyUI v4 Package\nDESCRIPTION: Command to update DaisyUI package to the latest version using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Running the Tailwind CSS Build Process with Watch Mode - Shell\nDESCRIPTION: This command runs the Tailwind CLI to build the project's CSS based on 'input.css', writing the output to 'output.css' and monitoring changes (–watch). It supports both Unix and Windows command formats. This step is crucial for producing the final CSS used by Django templates.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: Shell\nCODE:\n```\nmyapp/static/css/tailwindcss -i myapp/static/css/input.css -o myapp/static/css/output.css --watch\n# For Windows\nmyapp\\static\\css\\tailwindcss.exe -i myapp/static/css/input.css -o myapp/static/css/output.css --watch\n```\n\n----------------------------------------\n\nTITLE: Using Hardcoded Color Names in HTML\nDESCRIPTION: Example of using hardcoded color utility classes in Tailwind CSS. This approach uses fixed color names based on specific color values, making it difficult to implement dark mode and theme changes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/colors/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-zinc-100\">\n  <div class=\"bg-zinc-50 border-zinc-200 text-zinc-800\">\n    This is a hardcoded dark text on a light background,\n    it needs double the amount of class names to support dark mode.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Code Mockup without Prefix in HTML\nDESCRIPTION: This snippet demonstrates how to create a code mockup without a line prefix. It's useful for displaying simple, single-line code snippets.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-code/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-code w-full\">\n  <pre><code>without prefix</code></pre>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Displaying New daisyUI Logo Image\nDESCRIPTION: This HTML snippet displays the new daisyUI logo as an SVG image. It includes attributes for size, loading behavior, and prevents pointer events.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-logo/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"text-center\">\n  <img\n    class=\"pointer-events-none inline-block align-bottom\"\n    src=\"https://img.daisyui.com/images/daisyui/mark-rotating.svg\"\n    alt=\"daisyUI logo\"\n    width=\"500\"\n    height=\"500\"\n    loading=\"lazy\"\n  />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Status Indicator in DaisyUI\nDESCRIPTION: Shows how to create a basic status indicator with a success status dot overlaid on content.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$indicator\">\n  <span class=\"$$indicator-item $$status $$status-success\"></span>\n  <div class=\"bg-base-300 grid h-32 w-32 place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting up CSS file with Tailwind CSS and daisyUI\nDESCRIPTION: CSS configuration to import Tailwind CSS and use the daisyUI plugin. This enables all daisyUI component classes in the project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vue/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Emoji Swap with Flip Effect in HTML using DaisyUI\nDESCRIPTION: This snippet shows how to create a swap between two emojis with a flip effect. It uses the swap-flip class for the flipping animation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/swap/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"$$swap $$swap-flip text-9xl\">\n  <!-- this hidden checkbox controls the state -->\n  <input type=\"checkbox\" />\n\n  <div class=\"$$swap-on\">😈</div>\n  <div class=\"$$swap-off\">😇</div>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Configuring daisyUI with Light Theme in CSS\nDESCRIPTION: This CSS snippet shows how to configure daisyUI with only the 'light' theme as the default theme. It demonstrates basic theme configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n@plugin \"daisyui\" {\n  themes: light --default;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Eleventy to Process PostCSS/Tailwind CSS in JavaScript\nDESCRIPTION: Configures Eleventy using an ES Module (`eleventy.config.mjs`). It hooks into the `eleventy.before` event to process the main PostCSS file (`src/styles/index.css`) using PostCSS and the Tailwind CSS plugin before Eleventy builds the site. The processed CSS is written to the output directory (`dist/styles/index.css`). It also sets Eleventy's input and output directories.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nimport fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport tailwindcss from '@tailwindcss/postcss';\n\nexport default function (eleventyConfig) {\n  eleventyConfig.on('eleventy.before', async () => {\n    const tailwindInputPath = path.resolve('./src/styles/index.css');\n    const tailwindOutputPath = './dist/styles/index.css';\n    const cssContent = fs.readFileSync(tailwindInputPath, 'utf8');\n    const outputDir = path.dirname(tailwindOutputPath);\n\n    if (!fs.existsSync(outputDir)) {\n      fs.mkdirSync(outputDir, { recursive: true });\n    }\n\n    const result = await postcss([tailwindcss()]).process(cssContent, {\n      from: tailwindInputPath,\n      to: tailwindOutputPath,\n    });\n\n    fs.writeFileSync(tailwindOutputPath, result.css);\n  });\n\n  return {\n    dir: { input: 'src', output: 'dist' },\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up CSS Imports\nDESCRIPTION: Configuring CSS file to import Tailwind CSS and daisyUI plugin\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rsbuild/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Tailwind CSS and Solid\nDESCRIPTION: Configuration setup for Vite to use Tailwind CSS and Solid plugins with server and build settings\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from \"vite\";\nimport tailwindcss from \"@tailwindcss/vite\";\nimport solidPlugin from \"vite-plugin-solid\";\n\nexport default defineConfig({\n  plugins: [tailwindcss(), solidPlugin()],\n  server: {\n    port: 3000,\n  },\n  build: {\n    target: \"esnext\",\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: RTL Configuration Updates\nDESCRIPTION: Simplified RTL configuration in DaisyUI v4 removing the need for additional plugins.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  //...\n  plugins: [require(\"daisyui\"), require(\"tailwindcss-flip\")],\n  daisyui: {\n    rtl: true,\n  },\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  //...\n  plugins: [require(\"daisyui\")],\n  daisyui: {},\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS\nDESCRIPTION: Creating PostCSS configuration file to enable Tailwind CSS integration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rsbuild/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n};\nexport default config;\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind Plugin and daisyUI (Shell)\nDESCRIPTION: Installs the `bun-plugin-tailwind` package, which allows Bun's server to process Tailwind CSS, and the `daisyui` component library using the Bun package manager. `daisyui@latest` ensures the newest version is installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/bun/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbun install bun-plugin-tailwind daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Disabled Toggle States\nDESCRIPTION: Shows how to create disabled toggle states in both checked and unchecked variations\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/toggle/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" class=\"$$toggle\" disabled />\n<input type=\"checkbox\" class=\"$$toggle\" disabled checked=\"checked\" />\n```\n\n----------------------------------------\n\nTITLE: Updating Table Hover Effect in daisyUI 5\nDESCRIPTION: Shows how to replace the deprecated 'hover' class with Tailwind's hover utilities in table rows.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_21\n\nLANGUAGE: diff\nCODE:\n```\n- <tr class=\"hover\">\n+ <tr class=\"hover:bg-base-300\">\n```\n\n----------------------------------------\n\nTITLE: Checkbox Color Variations\nDESCRIPTION: Examples of checkboxes with different color schemes using DaisyUI color modifier classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-primary\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-secondary\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-accent\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-neutral\" />\n\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-info\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-success\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-warning\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-error\" />\n```\n\n----------------------------------------\n\nTITLE: Setting up CSS with Tailwind and daisyUI\nDESCRIPTION: Main CSS file configuration that imports Tailwind CSS, sets up source files, and enables daisyUI plugin.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/postcss/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"./public/*.{html,js}\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Svelte Script Import Component\nDESCRIPTION: Imports a Translate component in a Svelte file for internationalization support.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/my-journey-to-build-daisyui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Adding Badge as Indicator in DaisyUI\nDESCRIPTION: Demonstrates how to use a badge as an indicator with primary styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$indicator\">\n  <span class=\"$$indicator-item $$badge $$badge-primary\">New</span>\n  <div class=\"bg-base-300 grid h-32 w-32 place-items-center\">content</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Disabling All Built-in Themes in daisyUI PostCSS Configuration\nDESCRIPTION: Demonstrates how to disable all built-in daisyUI themes by setting the `themes` property to `false`. This is useful when intending to use only custom-defined themes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: postcss\nCODE:\n```\n```postcss:Example\n@plugin \"daisyui\" {\n  themes: false;\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind with daisyUI NPM\nDESCRIPTION: CSS configuration for Tailwind with daisyUI as NPM dependency\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: postcss\nCODE:\n```\n@import \"tailwindcss\" source(none);\n@source \"../../../public/*.html\";\n@source \"../../../app/helpers/**/*.rb\";\n@source \"../../../app/javascript/**/*.js\";\n@source \"../../../app/views/**/*\";\n\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Importing Translate Component in Svelte\nDESCRIPTION: Imports the `Translate` component from a relative path (`$components/Translate.svelte`) within a Svelte project. This component is likely used for handling translations or internationalization within the FAQ page itself, although its specific usage is not detailed in the provided context.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/faq/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating Breadcrumbs Component in HTML with DaisyUI\nDESCRIPTION: Implements a breadcrumbs component to help users navigate. Uses a simple unordered list structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"breadcrumbs\">\n  <ul><li><a>Link</a></li></ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running the Django Development Server - Shell\nDESCRIPTION: This shell command starts the Django development server, enabling local serving and testing of the integrated Tailwind/daisyUI setup. Required once code and builds are in place.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: Shell\nCODE:\n```\npython manage.py runserver\n```\n\n----------------------------------------\n\nTITLE: Tab Component Updates\nDESCRIPTION: Changes in tab component class structure moving modifier classes from individual tabs to parent container.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tabs\">\n  <a class=\"tab tab-lg tab-lifted\">Tab 1</a>\n  <a class=\"tab tab-lg tab-lifted tab-active\">Tab 2</a>\n  <a class=\"tab tab-lg tab-lifted\">Tab 3</a>\n  <a class=\"tab tab-lg tab-lifted\">Tab 4</a>\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tabs tabs-lg tabs-lifted\">\n  <a class=\"tab\">Tab 1</a>\n  <a class=\"tab tab-active\">Tab 2</a>\n  <a class=\"tab\">Tab 3</a>\n  <a class=\"tab\">Tab 4</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS Plugin (NPM)\nDESCRIPTION: Command to install a Tailwind CSS plugin (using daisyUI as an example) via npm package manager.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/9-best-tailwind-css-plugins-for-developers/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i daisyui\n```\n\n----------------------------------------\n\nTITLE: Configuring Rails Routes\nDESCRIPTION: Ruby code for setting up the root route to the home page\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\nRails.application.routes.draw do\n  root to: 'pages#home'\nend\n```\n\n----------------------------------------\n\nTITLE: Updating Avatar Classes in HTML\nDESCRIPTION: This snippet demonstrates the breaking change in Avatar component classes, renaming 'online' to 'avatar-online' and 'offline' to 'avatar-offline'.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"avatar online\">\n+ <div class=\"avatar avatar-online\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"avatar offline\">\n+ <div class=\"avatar avatar-offline\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Fetching daisyUI LLM Context in Zed Thread Chat using Shell\nDESCRIPTION: Executes the `@fetch` command within Zed's Thread chat interface. This command downloads the `llms.txt` file from the specified daisyUI URL, providing the AI with condensed documentation context for generating accurate daisyUI code snippets. Requires the Zed editor and an active internet connection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/zed/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n@fetch https://daisyui.com/llms.txt\n```\n\n----------------------------------------\n\nTITLE: Implementing DaisyUI Boxed Tabs with Content using HTML\nDESCRIPTION: This HTML code demonstrates the creation of boxed tabs using the `tabs-box` class from DaisyUI. Similar to other radio-based tab examples, it uses radio inputs (`<input type=\"radio\">`) with a shared `name` attribute (`my_tabs_6`) and the `tab` class. The `aria-label` attribute provides the text for each tab. Content is displayed in the adjacent `div` with the `tab-content` class. Requires DaisyUI CSS.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tab/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<!-- name of each tab group should be unique -->\n<div class=\"$$tabs $$tabs-box\">\n  <input type=\"radio\" name=\"my_tabs_6\" class=\"$$tab\" aria-label=\"Tab 1\" />\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 1</div>\n\n  <input type=\"radio\" name=\"my_tabs_6\" class=\"$$tab\" aria-label=\"Tab 2\" checked=\"checked\" />\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 2</div>\n\n  <input type=\"radio\" name=\"my_tabs_6\" class=\"$$tab\" aria-label=\"Tab 3\" />\n  <div class=\"$$tab-content bg-base-100 border-base-300 p-6\">Tab content 3</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI and Tailwind Dependencies using Shell\nDESCRIPTION: Installs daisyUI, Tailwind CSS, the official Tailwind PostCSS plugin (`@tailwindcss/postcss`), and PostCSS as project dependencies using npm. The `--force` flag might be needed to resolve potential peer dependency conflicts. This command should be run within the Angular project's root directory.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/angular/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm install daisyui@latest tailwindcss@latest @tailwindcss/postcss@latest postcss@latest --force\n```\n\n----------------------------------------\n\nTITLE: Running DaisyUI Tests\nDESCRIPTION: Command to execute the project's test suite using npm. This validates that changes don't break existing functionality.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Initializing Svelte Component Variables for Button Documentation\nDESCRIPTION: This snippet defines variables used for styling and structuring the button documentation examples. It includes classes for figures, indicators, and various UI elements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/design/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {\n  figure,\n  indicator,\n  indicatorBox,\n  item,\n  line,\n  circle\n} = {\n  figure: \"not-prose bg-base-100 border border-base-content/20 border-dashed rounded-box grid min-h-[20rem] place-items-center\",\n  indicator: \"indicator border-base-content pointer-events-none absolute items-center border-dashed flex\",\n  indicatorBox: \"indicator border-base-content pointer-events-none absolute items-center border-dashed flex border\",\n  item: \"indicator-item badge badge-neutral\",\n  line: \"border-base-content border-s border-dashed\",\n  circle: \"border-base-content aspect-square w-6 shrink-0 rounded-full border border-dashed\",\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Laravel Development Server for Mary UI\nDESCRIPTION: Command to start the Laravel development server after installing Mary UI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Implementing Various Kbd Sizes in HTML\nDESCRIPTION: Shows how to create keyboard keys of different sizes using the Kbd component with size modifiers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<kbd class=\"$$kbd $$kbd-xs\">Xsmall</kbd>\n<kbd class=\"$$kbd $$kbd-sm\">Small</kbd>\n<kbd class=\"$$kbd $$kbd-md\">Medium</kbd>\n<kbd class=\"$$kbd $$kbd-lg\">Large</kbd>\n<kbd class=\"$$kbd $$kbd-xl\">Xlarge</kbd>\n```\n\n----------------------------------------\n\nTITLE: Updating Footer Layout in HTML\nDESCRIPTION: This snippet shows how to update the Footer component to use horizontal layout, as vertical is now the default.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n- <footer class=\"footer\">\n+ <footer class=\"footer md:footer-horizontal\">\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Prompt Format for Theming with Gemini LLM and DaisyUI - Plaintext\nDESCRIPTION: This snippet exemplifies a complete LLM prompt, combining the daisyUI documentation URL with a specific styling request. It demonstrates how users should format their requests for tasks such as creating a light daisyUI 5 theme with a tropical color palette. The snippet is instructional and does not require any code execution.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/gemini/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://daisyui.com/llms.txt give me a light daisyUI 5 theme with tropical color palette\n```\n\n----------------------------------------\n\nTITLE: Importing Translate Component in Svelte Script\nDESCRIPTION: Imports the `Translate.svelte` component from the `$components` alias path within a Svelte script tag. This component is likely used for rendering translated text or other UI elements within the documentation page itself.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/config/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing DaisyUI with Package Managers\nDESCRIPTION: Commands to initialize DaisyUI using different package managers including Yarn and Bun\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/npm-init-daisyui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn create daisyui\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun create daisyui\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm create daisyui\n```\n\n----------------------------------------\n\nTITLE: Downloading Tailwind CSS Executables\nDESCRIPTION: Commands to download Tailwind CSS standalone executables for different operating systems including Linux, MacOS, and Windows.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/standalone/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Run the corresponding command for your OS\n\n# Linux\ncurl -sLo tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64\ncurl -sLo tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64-musl\ncurl -sLo tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64\ncurl -sLo tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64-musl\n\n# MacOS\ncurl -sLo tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64\ncurl -sLo tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-x64\n\n# Windows\ncurl -sLo tailwindcss.exe https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-windows-x64.exe\n```\n\n----------------------------------------\n\nTITLE: Creating Livewire Layout for Mary UI\nDESCRIPTION: Command to create the default Livewire layout template for use with Mary UI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# It creates `views/components/layouts/app.blade.php`\nphp artisan livewire:layout\n```\n\n----------------------------------------\n\nTITLE: Sharing DaisyUI Documentation URL with LLM Prompt - Plaintext\nDESCRIPTION: This plaintext code snippet provides the daisyUI llms.txt documentation URL, used as a prefix in prompts to guide the LLM in generating accurate code based on the associated documentation. It is intended to be prepended to user prompts within a chat interface that supports deep research mode. This pattern helps ensure the LLM has up-to-date context for daisyUI code output.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/gemini/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://daisyui.com/llms.txt\n```\n\n----------------------------------------\n\nTITLE: Rendering daisyUI Roadmap Timeline in Svelte\nDESCRIPTION: This Svelte component iterates through roadmap data to create a vertical timeline of milestones and their associated tasks. It uses daisyUI classes for styling and conditional rendering to show completion status with SVG icons.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/roadmap/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: Svelte\nCODE:\n```\n<script>\n  export let data\n</script>\n\n<ul\n  class=\"timeline not-prose mb-20 timeline-compact timeline-snap-icon timeline-vertical bg-base-200 rounded-box lg:ps-6 pe-10 ps-6 pt-10 lg:pe-16 lg:py-16\">\n  {#each data.roadmap as milestone, index}\n    <li class=\"lg:gap-x-6\">\n      {#if index > 0}\n        <hr class={milestone.done && \"bg-success\"} />\n      {/if}\n      <div class=\"timeline-middle\">\n        {#if milestone.done}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            class=\"text-success h-5 w-5\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n              clip-rule=\"evenodd\" />\n          </svg>\n        {:else}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            class=\"text-base-content/30 h-5 w-5\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.75-13a.75.75 0 00-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 000-1.5h-3.25V5z\"\n              clip-rule=\"evenodd\" />\n          </svg>\n        {/if}\n      </div>\n      <div\n        class={`timeline-box mb-4 w-full p-4 lg:mb-10 lg:p-10 timeline-end`}>\n        <h2 class=\"mb-6 text-lg font-black\">{milestone.title}</h2>\n        <ol>\n          {#each milestone.items as item}\n            <li class=\"my-2 flex gap-2\">\n              {#if item.done}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  class=\"text-success inline-block size-4 mt-0.5 shrink-0\">\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n                    clip-rule=\"evenodd\" />\n                </svg>\n              {:else}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  class=\"text-base-content/20 inline-block size-4 mt-0.5 shrink-0\">\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.75-13a.75.75 0 00-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 000-1.5h-3.25V5z\"\n                    clip-rule=\"evenodd\" />\n                </svg>\n              {/if}\n              <span class=\"text-base-content/60\">{item.title}</span>\n            </li>\n          {/each}\n        </ol>\n      </div>\n      {#if index < data.roadmap.length - 1}\n        <hr class={milestone.done && \"bg-success\"} />\n      {/if}\n    </li>\n  {/each}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Enhancing Diff Component Accessibility in HTML\nDESCRIPTION: This snippet shows the updates to the Diff component HTML structure to improve accessibility and support for iOS and keyboard navigation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n- <figure class=\"diff aspect-16/9\">\n+ <figure class=\"diff aspect-16/9\" tabindex=\"0\">\n  <div class=\"diff-item-1\" role=\"img\">\n    <img alt=\"image 1\" src=\"https://img.daisyui.com/images/stock/photo-1560717789-0ac7c58ac90a.webp\" />\n  </div>\n-  <div class=\"diff-item-2\" role=\"img\">\n+  <div class=\"diff-item-2\" role=\"img\" tabindex=\"0\">\n    <img alt=\"image 2\" src=\"https://img.daisyui.com/images/stock/photo-1560717789-0ac7c58ac90a-blur.webp\" />\n  </div>\n  <div class=\"diff-resizer\"></div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Providing Grok with daisyUI Documentation Context URL\nDESCRIPTION: Specifies the URL (`https://daisyui.com/llms.txt`) to be provided to the Grok LLM before the user's prompt. This URL links to a compact text version of the daisyUI documentation, enabling Grok (with `꩜ Deep Search` enabled) to generate more accurate daisyUI code.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/grok/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://daisyui.com/llms.txt\n```\n\n----------------------------------------\n\nTITLE: Checkbox Size Variations\nDESCRIPTION: Demonstration of different checkbox sizes using DaisyUI size modifier classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/checkbox/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-xs\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-sm\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-md\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-lg\" />\n<input type=\"checkbox\" checked=\"checked\" class=\"$$checkbox $$checkbox-xl\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS\nDESCRIPTION: Changes required in tailwind.config.js to set up content paths and add daisyUI plugin\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n/** @type {import('tailwindcss').Config} */\nexport default {\n- content: [],\n+ content: ['./src/**/*.{html,svelte,js,ts}'],\n  theme: {\n    extend: {},\n  },\n- plugins: [],\n+ plugins: [require('daisyui')],\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Social Media Links in Astro Blog Template\nDESCRIPTION: HTML code snippet for updating social media links in the blog template.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex justify-center lg:justify-start space-x-4 mt-4\">\n  <a\n    class=\"btn btn-circle btn-md\"\n    href=\"https://www.x.com\"\n    aria-label=\"twitter\"\n  >\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"h-8 w-8\">\n      <path\n        d=\"M13.3174 10.7749L19.1457 4H17.7646L12.7039 9.88256L8.66193 4H4L10.1122 12.8955L4 20H5.38119L10.7254 13.7878L14.994 20H19.656L13.3171 10.7749H13.3174ZM11.4257 12.9738L10.8064 12.0881L5.87886 5.03974H8.00029L11.9769 10.728L12.5962 11.6137L17.7652 19.0075H15.6438L11.4257 12.9742V12.9738Z\"\n        fill=\"currentColor\"\n      ></path>\n    </svg>\n  </a>\n  <!-- other social links -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Full Keyboard Layout with Kbd Components in HTML\nDESCRIPTION: Illustrates how to construct a full keyboard layout using multiple Kbd components arranged in rows.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"my-1 flex w-full justify-center gap-1\">\n  <kbd class=\"$$kbd\">q</kbd>\n  <kbd class=\"$$kbd\">w</kbd>\n  <kbd class=\"$$kbd\">e</kbd>\n  <kbd class=\"$$kbd\">r</kbd>\n  <kbd class=\"$$kbd\">t</kbd>\n  <kbd class=\"$$kbd\">y</kbd>\n  <kbd class=\"$$kbd\">u</kbd>\n  <kbd class=\"$$kbd\">i</kbd>\n  <kbd class=\"$$kbd\">o</kbd>\n  <kbd class=\"$$kbd\">p</kbd>\n</div>\n<div class=\"my-1 flex w-full justify-center gap-1\">\n  <kbd class=\"$$kbd\">a</kbd>\n  <kbd class=\"$$kbd\">s</kbd>\n  <kbd class=\"$$kbd\">d</kbd>\n  <kbd class=\"$$kbd\">f</kbd>\n  <kbd class=\"$$kbd\">g</kbd>\n  <kbd class=\"$$kbd\">h</kbd>\n  <kbd class=\"$$kbd\">j</kbd>\n  <kbd class=\"$$kbd\">k</kbd>\n  <kbd class=\"$$kbd\">l</kbd>\n</div>\n<div class=\"my-1 flex w-full justify-center gap-1\">\n  <kbd class=\"$$kbd\">z</kbd>\n  <kbd class=\"$$kbd\">x</kbd>\n  <kbd class=\"$$kbd\">c</kbd>\n  <kbd class=\"$$kbd\">v</kbd>\n  <kbd class=\"$$kbd\">b</kbd>\n  <kbd class=\"$$kbd\">n</kbd>\n  <kbd class=\"$$kbd\">m</kbd>\n  <kbd class=\"$$kbd\">/</kbd>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating Tabs Border Class in daisyUI 5\nDESCRIPTION: Shows how to update the tabs border class from 'tabs-bordered' to 'tabs-border' in daisyUI 5.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_18\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"tabs tabs-bordered\">\n+ <div class=\"tabs tabs-border\">\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI Package\nDESCRIPTION: Command to install the latest version of daisyUI using npm\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/reactrouter/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Creating New Rails Project\nDESCRIPTION: Commands to create and navigate to a new Rails project directory\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nrails new my-app\ncd my-app\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI 5 Alpha with NPM\nDESCRIPTION: Command to install the alpha version of daisyUI using npm package manager.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-5-alpha/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D daisyui@alpha\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind CSS and daisyUI in CSS\nDESCRIPTION: This CSS snippet demonstrates how to import Tailwind CSS and add daisyUI as a plugin. This is the recommended approach when using daisyUI as a node dependency.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@import \"tailwindcss\";\n@plugin \"daisyui\";\n```\n\n----------------------------------------\n\nTITLE: Installing Mary UI Dependencies on Existing Laravel Project\nDESCRIPTION: Commands to install daisyUI and Tailwind CSS dependencies for Mary UI on an existing Laravel project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require robsontenorio/mary\n```\n\n----------------------------------------\n\nTITLE: Downloading DaisyUI LLMs Documentation for Cursor Integration - Shell\nDESCRIPTION: This shell command uses curl to download the compact version of the daisyUI documentation (llms.txt) and saves it to the .cursor/rules directory as daisyui.mdc. It creates parent directories if they do not exist. The file enables Cursor to use daisyUI docs for generating code completions automatically at the project level. curl should be installed and internet access is required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/cursor/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -L https://daisyui.com/llms.txt --create-dirs -o .cursor/rules/daisyui.mdc\n```\n\n----------------------------------------\n\nTITLE: Example Zed Agent Mode Prompt using Context7 for daisyUI Theme Generation\nDESCRIPTION: Shows an example prompt for Zed's Agent Mode. It requests the AI to generate a light daisyUI 5 theme with specific characteristics and explicitly instructs the AI to use the previously configured 'context7' context server for accurate results based on daisyUI's library.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/zed/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ngive me a light daisyUI 5 theme with tropical color palette. use context7\n```\n\n----------------------------------------\n\nTITLE: Color-Mix Function Example\nDESCRIPTION: Demonstration of using color-mix function for creating darker shades in DaisyUI v4.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nbg-[color-mix(in_oklab,oklch(var(--p)),black_7%)]\n```\n\n----------------------------------------\n\nTITLE: Adding Homepage Route to Django URLs - Diff\nDESCRIPTION: This diff shows how to modify 'myapp/urls.py' to import the new view and define a path that points the root URL to the 'home' view function. This ensures HTTP requests to the base URL will render the styled homepage.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: Diff\nCODE:\n```\n  from django.contrib import admin\n  from django.urls import path\n+ from . import views\n\n  urlpatterns = [\n      path(\"admin/\", admin.site.urls),\n+     path(\"\", views.home, name=\"home\"),\n  ]\n```\n\n----------------------------------------\n\nTITLE: Email Input with Join Button in DaisyUI\nDESCRIPTION: An email input component with validation and a joined button element. Uses DaisyUI's join classes to create a connected input and button group.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/input/+page.md#2025-04-22_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$join\">\n  <div>\n    <label class=\"$$input $$validator $$join-item\">\n      <svg class=\"h-[1em] opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <g\n          stroke-linejoin=\"round\"\n          stroke-linecap=\"round\"\n          stroke-width=\"2.5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n        >\n          <rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\"></rect>\n          <path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"></path>\n        </g>\n      </svg>\n      <input type=\"email\" placeholder=\"mail@site.com\" required />\n    </label>\n    <div class=\"$$validator-hint hidden\">Enter valid email address</div>\n  </div>\n  <button class=\"$$btn $$btn-neutral $$join-item\">Join</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS CLI and daisyUI via Terminal in Shell\nDESCRIPTION: This snippet shows the shell command for installing the latest versions of tailwindcss, @tailwindcss/cli, and daisyUI using npm. It requires a Node.js environment with npm available. When executed, it adds the necessary packages to the project's node_modules and package.json. This is a prerequisite before configuring CSS and building stylesheets with Tailwind CLI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/cli/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/cli@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Adding Svelte Script Tag for Translate Component\nDESCRIPTION: This code snippet imports a Translate component in a Svelte file. It's likely used for handling translations in the bidirectional website.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/bidirectional/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Range Input in DaisyUI\nDESCRIPTION: HTML markup for a range input component with customizable min, max values and optional modifiers.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_52\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"range\" min=\"0\" max=\"100\" value=\"40\" class=\"range {MODIFIER}\" />\n```\n\n----------------------------------------\n\nTITLE: Displaying Additional daisyUI Image\nDESCRIPTION: This HTML snippet displays an additional image related to daisyUI. It uses responsive width, rounded corners, and lazy loading for performance.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-logo/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"text-center mx-2\">\n  <img\n    class=\"pointer-events-none w-full h-auto inline-block align-bottom rounded-box\"\n    src=\"https://img.daisyui.com/images/daisyui/guides.svg\"\n    alt=\"daisyUI logo\"\n    width=\"400\"\n    height=\"400\"\n    loading=\"lazy\"\n  />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Rsbuild Project\nDESCRIPTION: Command to create a new Rsbuild project in the current directory\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rsbuild/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create rsbuild -d ./\n```\n\n----------------------------------------\n\nTITLE: Updating Bottom Navigation to Dock Component in daisyUI 5\nDESCRIPTION: Shows how to replace the deprecated bottom-nav component with the new dock component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/upgrade/+page.md#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"btm-nav btm-nav-sm\">\n+ <div class=\"dock dock-sm\">\n  <button>🏠</button>\n-   <button class=\"active\">🍿</button>\n+   <button class=\"dock-active\">🍿</button>\n  <button>⚙️</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Tailwind CSS and daisyUI for Mary UI\nDESCRIPTION: Command to install and initialize Tailwind CSS with daisyUI for use with Mary UI in an existing Laravel project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn add -D tailwindcss daisyui@latest postcss autoprefixer && npx tailwindcss init -p\n```\n\n----------------------------------------\n\nTITLE: Specifying Context7 MCP Server Name in Zed using Shell\nDESCRIPTION: Defines the name 'context7' to be used when adding the Context7 MCP server via the Zed command palette (`agent: add context server`). This name is used to reference the server later in prompts.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/zed/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncontext7\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component\nDESCRIPTION: This snippet shows how to import a Svelte component named 'Translate' from a specific path in a Svelte application.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/intro/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Initializing Zola Project via Terminal\nDESCRIPTION: Commands to create a new Zola project called 'myblog' and navigate to it. This is the first step in setting up the environment for using Tailwind CSS and daisyUI.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/zola/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nzola init myblog\ncd myblog\n```\n\n----------------------------------------\n\nTITLE: Initializing Solid Start Project\nDESCRIPTION: Creates a new Solid Start project in the current directory using npm init command.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/solid-start/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm init solid@latest ./\n```\n\n----------------------------------------\n\nTITLE: Implementing Small Size Dock Component with DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates how to create a small size dock component using DaisyUI classes. It includes three buttons with SVG icons, one of which is marked as active.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/dock/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$dock $$dock-sm\">\n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"1 11 12 2 23 11\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><path d=\"m5,13v7c0,1.105.895,2,2,2h10c1.105,0,2-.895,2-2v-7\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></line></g></svg>\n  </button>\n  \n  <button class=\"$$dock-active\">\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><polyline points=\"3 14 9 14 9 17 15 17 15 14 21 14\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"2\"></polyline><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></rect></g></svg>\n  </button>\n  \n  <button>\n    <svg class=\"size-[1.2em]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"currentColor\" stroke-linejoin=\"miter\" stroke-linecap=\"butt\"><circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"m22,13.25v-2.5l-2.318-.966c-.167-.581-.395-1.135-.682-1.654l.954-2.318-1.768-1.768-2.318.954c-.518-.287-1.073-.515-1.654-.682l-.966-2.318h-2.5l-.966,2.318c-.581.167-1.135.395-1.654.682l-2.318-.954-1.768,1.768.954,2.318c-.287.518-.515,1.073-.682,1.654l-2.318.966v2.5l2.318.966c.167.581.395,1.135.682,1.654l-.954,2.318,1.768,1.768,2.318-.954c.518.287,1.073.515,1.654.682l.966,2.318h2.5l.966-2.318c.581-.167,1.135-.395,1.654-.682l2.318.954,1.768-1.768-.954-2.318c.287-.518.515-1.073.682-1.654l2.318-.966Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path></g></svg>\n  </button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Enabling Tailwind Plugin in Fresh Configuration - TypeScript\nDESCRIPTION: This code snippet updates \\'fresh.config.ts\\' to import the Tailwind plugin and add it into Fresh's plugin system. The diff-style format shows importing from @pakornv/fresh-plugin-tailwindcss and including it in the plugins property. The configuration expects that Tailwind and plugin packages are installed and referenced correctly.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/fresh/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\n  import { defineConfig } from \\\"$fresh/server.ts\\\";\\n+ import tailwind from \\\"@pakornv/fresh-plugin-tailwindcss\\\";\\n\\n  export default defineConfig({\\n+   plugins: [tailwind()],\\n  });\n```\n\n----------------------------------------\n\nTITLE: Updating Tabs Component Classes\nDESCRIPTION: Renaming tabs-lifted class to tabs-lift for consistency.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"tabs tabs-lifted\">\n+ <div class=\"tabs tabs-lift\">\n```\n\n----------------------------------------\n\nTITLE: Applying Square Mask in DaisyUI\nDESCRIPTION: Applies a square-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-square\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS and daisyUI - Terminal Shell\nDESCRIPTION: This shell command installs the required dependencies: Tailwind CSS, the Tailwind CSS Vite plugin, and daisyUI. Prerequisites include an already-initialized npm project. The main parameters are the package names and their versions (all latest). The output is an updated node_modules directory and package.json. There must be network access and sufficient disk space.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/nuxt/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install tailwindcss@latest @tailwindcss/vite@latest daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Initializing Node Project and Setting Eleventy Scripts in Shell\nDESCRIPTION: Initializes a new Node.js project using npm, accepting default settings (-y). It then sets the 'dev' and 'build' scripts in the package.json file to run Eleventy with serving capabilities and for production builds, respectively. Requires npm installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm init -y\nnpm pkg set scripts.dev=\"eleventy --serve\"\nnpm pkg set scripts.build=\"eleventy\"\n```\n\n----------------------------------------\n\nTITLE: Defining and Reusing a Wave Path with SVG in HTML\nDESCRIPTION: This snippet defines a complex SVG path with the id 'wavepath' and then uses it via the <use> element, allowing the same wave path to be rendered multiple times with different y offsets or fill colors. No dependencies are required beyond SVG support in the browser. The key parameter is 'd' (the path data), which controls the shape of the wave and is reused for visual design consistency.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/cdn/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<path id=\\\"wavepath\\\" d=\\\"M 0 2000 0 500 Q 10 495 20 500 t 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0 20 0  v1000 z\\\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<g >\n <use xlink:href=\\\"#wavepath\\\" y=\\\"-490\\\" fill=\\\"var(--color-base-200)\\\"> \n </use>\n</g>\n```\n\n----------------------------------------\n\nTITLE: Installing DaisyUI with NPM\nDESCRIPTION: Basic command to initialize DaisyUI and Tailwind CSS setup\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/npm-init-daisyui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm init daisyui\n```\n\n----------------------------------------\n\nTITLE: Replacing Bottom Navigation with Dock Component in HTML\nDESCRIPTION: This snippet shows the breaking change of replacing the 'bottom-nav' component with the new 'dock' component, including class name updates.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"btm-nav btm-nav-sm\">\n+ <div class=\"dock dock-sm\">\n  <button>🏠</button>\n-   <button class=\"active\">🍿</button>\n+   <button class=\"dock-active\">🍿</button>\n  <button>⚙️</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Function Keys with Kbd Component in HTML\nDESCRIPTION: Shows how to display special function keys using the Kbd component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<kbd class=\"$$kbd\">⌘</kbd>\n<kbd class=\"$$kbd\">⌥</kbd>\n<kbd class=\"$$kbd\">⇧</kbd>\n<kbd class=\"$$kbd\">⌃</kbd>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Component in DaisyUI\nDESCRIPTION: Example command for generating a new component named 'button' using the provided script. This helps maintain consistent component structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode src/full/utilities/create-component.js button\n```\n\n----------------------------------------\n\nTITLE: Creating a New Elixir Phoenix Project\nDESCRIPTION: This command creates a new Phoenix project in the current directory without database setup using the --no-ecto flag.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/phoenix/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmix phx.new ./ --no-ecto\n```\n\n----------------------------------------\n\nTITLE: Implementing Floating Labels with Different Sizes in DaisyUI\nDESCRIPTION: Shows how to create floating labels with different input sizes (xs, sm, md, lg, xl). Each floating label adapts to the corresponding input size class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/label/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"$$floating-label\">\n  <input type=\"text\" placeholder=\"Extra Small\" class=\"$$input $$input-xs\" />\n  <span>Extra Small</span>\n</label>\n<label class=\"$$floating-label\">\n  <input type=\"text\" placeholder=\"Small\" class=\"$$input $$input-sm\" />\n  <span>Small</span>\n</label>\n<label class=\"$$floating-label\">\n  <input type=\"text\" placeholder=\"Medium\" class=\"$$input $$input-md\" />\n  <span>Medium</span>\n</label>\n<label class=\"$$floating-label\">\n  <input type=\"text\" placeholder=\"Large\" class=\"$$input $$input-lg\" />\n  <span>Large</span>\n</label>\n<label class=\"$$floating-label\">\n  <input type=\"text\" placeholder=\"Extra Large\" class=\"$$input $$input-xl\" />\n  <span>Extra Large</span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite to use Tailwind CSS\nDESCRIPTION: This snippet shows how to modify the Vite configuration file to include the Tailwind CSS plugin. It adds the tailwindcss plugin to the list of Vite plugins, enabling Tailwind CSS processing in the project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/qwik/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport tailwindcss from \"@tailwindcss/vite\";\n//...\nexport default defineConfig(({ command, mode }): UserConfig => {\n  return {\n    plugins: [tailwindcss(), qwikCity(), qwikVite(), tsconfigPaths()],\n    // ...\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Elysia Static Package\nDESCRIPTION: This snippet installs the `@elysiajs/static` package using Bun. It ensures the project can serve static assets by using the static plugin later. The `bun install` command handles dependencies.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbun install @elysiajs/static\n```\n\n----------------------------------------\n\nTITLE: Embedding SVG Image in HTML\nDESCRIPTION: This snippet demonstrates how to embed an SVG image in HTML using the <img> tag. It includes accessibility attributes and lazy loading for performance optimization.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/intro/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"pointer-events-none inline-block align-bottom\"\n  src=\"https://img.daisyui.com/images/daisyui/mark-rotating.svg\"\n  alt=\"daisyUI logo\"\n  width=\"400\"\n  height=\"400\"\n  loading=\"lazy\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Applying Decagon Mask in DaisyUI\nDESCRIPTION: Applies a decagon-shaped mask to an image using DaisyUI classes\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mask/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<img\n  class=\"$$mask $$mask-decagon\"\n  src=\"https://img.daisyui.com/images/stock/photo-1567653418876-5bb0e566e1c2.webp\" />\n```\n\n----------------------------------------\n\nTITLE: Running Eleventy Development Server in Shell\nDESCRIPTION: Executes the 'dev' script defined in the project's package.json file using npm. This typically runs the command `eleventy --serve`, which builds the Eleventy site and starts a local development server with live reloading.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/11ty/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Elysia Development Server\nDESCRIPTION: This snippet runs the development server using Bun, which is necessary for actively hosting the Elysia project. The command `bun run dev` should be executed in the project's root directory where the server setup is already configured.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/elysia/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nbun run dev\n```\n\n----------------------------------------\n\nTITLE: Controlling Text Color Opacity in daisyUI\nDESCRIPTION: This example shows how to control the opacity of text colors in daisyUI by appending an opacity value to the utility class, setting primary-content color to 60% opacity.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/utilities/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-primary text-primary-content/60\">Primary-content color with 60% opacity</div>\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI Package via NPM\nDESCRIPTION: Command to install the daisyUI package using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/waku/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm i daisyui\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for a blog post defining metadata like title, description, publication date, author, and tags.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/my-journey-to-build-daisyui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"My Journey to build daisyUI: Why Tailwind CSS was not enough?\"\ndesc: In search of the most efficient way to style a website there's a lot to explore. In this post I'll share my journey to build daisyUI, a component library on top of Tailwind CSS.\npublished: true\ndate: 2023-10-4\nauthor: Pouya Saadeghi\nthumbnail: https://img.daisyui.com/images/blog/my-journey-to-build-daisyui.webp\ntags:\n  - Reviews\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Key Combinations with Kbd Component in HTML\nDESCRIPTION: Demonstrates how to represent key combinations using multiple Kbd components.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<kbd class=\"$$kbd\">ctrl</kbd>\n+\n<kbd class=\"$$kbd\">shift</kbd>\n+\n<kbd class=\"$$kbd\">del</kbd>\n```\n\n----------------------------------------\n\nTITLE: Running CSS Build Command\nDESCRIPTION: Terminal command to execute the CSS build process.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/postcss/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build:css\n```\n\n----------------------------------------\n\nTITLE: Building Astro Blog Template for Production\nDESCRIPTION: Command to build the Astro blog template for production, optimizing and generating static assets.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Creating Steps Component in DaisyUI\nDESCRIPTION: Progress steps component with customizable direction and styling.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_59\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"steps {MODIFIER}\">\n  <li class=\"step\">{step content}</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing Tailwind CSS Rails Gem\nDESCRIPTION: Commands to add and install the Tailwind CSS gem for Rails\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./bin/bundle add tailwindcss-rails\n./bin/rails tailwindcss:install\n```\n\n----------------------------------------\n\nTITLE: Specifying Context7 MCP Server Execution Command in Zed using Shell\nDESCRIPTION: Provides the command required to run the Context7 MCP server when configuring it in Zed. It uses `npx` to download and execute the latest version of the `@upstash/context7-mcp` package, which acts as the MCP server providing daisyUI context. Requires Node.js and npx to be installed.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/zed/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpx -y @upstash/context7-mcp@latest\n```\n\n----------------------------------------\n\nTITLE: Creating a New Vite Project with Lit Template\nDESCRIPTION: This script initializes a new Vite project with the Lit template in the current directory. No additional dependencies are required.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/lit/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create vite@latest ./ -- --template lit\n```\n\n----------------------------------------\n\nTITLE: Initializing Node Project\nDESCRIPTION: This snippet initializes a new Node.js project by creating a directory and running npm init. It sets up the project structure required before installing dependencies.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir myapp\ncd myapp\nnpm init\n```\n\n----------------------------------------\n\nTITLE: Updating Card Border Class in HTML\nDESCRIPTION: This snippet demonstrates the breaking change of renaming the 'card-bordered' class to 'card-border' for the Card component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n- <div class=\"card card-bordered\">\n+ <div class=\"card card-border\">\n```\n\n----------------------------------------\n\nTITLE: Defining Drawer Structure in JSON\nDESCRIPTION: JSON representation of the Drawer component structure, showing the hierarchy of classes and elements.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/drawer/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \".drawer\": \"The root container\",\n  \"├── .drawer-toggle\": \"A hidden checkbox to toggle the visibility of the sidebar\",\n  \"├── .drawer-content\": \"All your page content goes here\",\n  \"│    ╰── \": \"navbar, content, footer\",\n  \"│\",\n  \"╰── .drawer-side\": \"Sidebar wrapper\",\n  \"     ├── .drawer-overlay\": \"A dark overlay that covers the whole page when the drawer is open\",\n  \"     ╰── \": \"Sidebar content (menu or anything)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a new Qwik project using npm\nDESCRIPTION: This command creates a new Qwik project in the current directory using npm. It initializes an empty Qwik project structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/qwik/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create qwik@latest empty ./\n```\n\n----------------------------------------\n\nTITLE: Hover Effect Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link that only shows underline on hover using link-hover class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-hover\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Rendering Arrow Keys with Kbd Components in HTML\nDESCRIPTION: Demonstrates how to create a layout of arrow keys using Kbd components.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/kbd/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"flex w-full justify-center\">\n  <kbd class=\"$$kbd\">▲</kbd>\n</div>\n<div class=\"flex w-full justify-center gap-12\">\n  <kbd class=\"$$kbd\">◀︎</kbd>\n  <kbd class=\"$$kbd\">▶︎</kbd>\n</div>\n<div class=\"flex w-full justify-center\">\n  <kbd class=\"$$kbd\">▼</kbd>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running the Tailwind Build Script - Shell\nDESCRIPTION: This shell command executes the 'build:css' script defined in package.json, generating the 'public/output.css' file. Requires proper script configuration in package.json and prerequisite installations. The produced CSS is used for styling the web application's frontend.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/htmx/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build:css\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Astro Blog Template\nDESCRIPTION: Command to install the necessary dependencies for the Astro blog template.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating Avatars with Presence Indicators in HTML using DaisyUI\nDESCRIPTION: This code shows how to add presence indicators (online/offline) to avatars using DaisyUI classes. It uses the avatar-online and avatar-offline classes to indicate status.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/avatar/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$avatar $$avatar-online\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n<div class=\"$$avatar $$avatar-offline\">\n  <div class=\"w-24 rounded-full\">\n    <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Vite Project with Vanilla Template\nDESCRIPTION: This command creates a new Vite project in the current directory using the vanilla template. It sets up the basic structure for a Vite project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vite/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create vite@latest ./ -- --template vanilla\n```\n\n----------------------------------------\n\nTITLE: Starting the Angular Development Server using Shell\nDESCRIPTION: Runs the Angular development server using the Angular CLI `ng serve` command. This compiles the application, starts a local server (usually on port 4200), and watches for file changes to automatically rebuild and reload the application. This command should be executed from the project's root directory.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/angular/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Fetching daisyUI LLM Context in Zed Text Thread Chat using Shell\nDESCRIPTION: Executes the `/fetch` command within Zed's Text thread chat interface. Similar to the `@fetch` command for Thread chat, this downloads the `llms.txt` file from daisyUI's website to provide context to Zed's AI for code generation. Requires the Zed editor and an internet connection.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/zed/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n/fetch https://daisyui.com/llms.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies\nDESCRIPTION: Installing Tailwind CSS and daisyUI packages using npm\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rsbuild/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm add tailwindcss @tailwindcss/postcss daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component in Markdown\nDESCRIPTION: A Svelte script tag that imports the Translate component from the components directory. This is used within a Markdown file to add interactivity.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-5-upcoming-changes/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Svelte Component Import\nDESCRIPTION: Imports required Svelte components for the window mockup implementation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-window/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: svelte\nCODE:\n```\nimport Component from \"$components/Component.svelte\"\nimport Translate from \"$components/Translate.svelte\"\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI via NPM\nDESCRIPTION: Commands to initialize package.json and install daisyUI using npm\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm init -y\nnpm install daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Accent Link Styling in DaisyUI\nDESCRIPTION: Implementation of a link with accent color styling using link-accent class.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/link/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"$$link $$link-accent\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Tab with Notification Indicator in DaisyUI\nDESCRIPTION: Implements a tab system with a notification badge indicator.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/indicator/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$tabs $$tabs-lift\">\n  <a class=\"$$tab\">Messages</a>\n  <a class=\"$$indicator $$tab $$tab-active\">\n    Notifications\n    <span class=\"$$indicator-item $$badge\">8</span>\n  </a>\n  <a class=\"$$tab\">Requests</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Executable Permission for Tailwind CSS Binary - Shell\nDESCRIPTION: This command grants executable permission to the Tailwind CSS binary for Linux/MacOS systems. This is required for the binary to be runnable as a CLI utility to process input CSS files.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/django/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: Shell\nCODE:\n```\nchmod +x myapp/static/css/tailwindcss\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change the current directory to the newly created Next.js project folder.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/install-daisyui-and-tailwindcss-in-nextjs/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-app\n```\n\n----------------------------------------\n\nTITLE: Custom Color Configurations for Radio Buttons\nDESCRIPTION: Exemplifies the customization of radio button colors using individual color classes to set background and border colors dynamically.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/radio/+page.md#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<input\n  type=\"radio\" name=\"radio-12\" checked=\"checked\"\n  class=\"$$radio bg-red-100 border-red-300 checked:bg-red-200 checked:text-red-600 checked:border-red-600\" />\n<input\n  type=\"radio\" name=\"radio-12\" checked=\"checked\"\n  class=\"$$radio bg-blue-100 border-blue-300 checked:bg-blue-200 checked:text-blue-600 checked:border-blue-600\" />\n```\n\n----------------------------------------\n\nTITLE: Downloading daisyUI Bundle Files\nDESCRIPTION: Commands to download the latest version of daisyUI and its theme file as standalone JavaScript bundles.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/standalone/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sLO https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js\ncurl -sLO https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js\n```\n\n----------------------------------------\n\nTITLE: Building and Running Electron Project\nDESCRIPTION: Runs the build script to compile CSS and then starts the Electron application. It's the final step to launch the project and see the app in action.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/electron/+page.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build:css\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Building DaisyUI for Production\nDESCRIPTION: Command to create a production build of the project. This compiles and optimizes the code for release.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Creating New Vike Project\nDESCRIPTION: Command to create a new Vike project in the current directory using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/vike/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create vike ./\n```\n\n----------------------------------------\n\nTITLE: Implementing Svelte Component Import\nDESCRIPTION: Script tag importing the Translate component from the components directory for use in the branding documentation page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/brand/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Correct Dynamic Class Implementation\nDESCRIPTION: Example of proper dynamic class name implementation using a variable\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nlet color = 'bg-red-500'\n<div class=\"{{ color }}\"></div>\n```\n\n----------------------------------------\n\nTITLE: Initializing Svelte Component Import\nDESCRIPTION: Import statement for the Translate component in a Svelte file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/layout-and-typography/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating a new Vite project using npm\nDESCRIPTION: This command creates a new Vite project in the current directory using the vanilla template.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/unocss/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create vite@latest ./ -- --template vanilla\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Correct Package Name Usage\nDESCRIPTION: Code example showing the correct lowercase usage of the daisyUI package name in development contexts.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/brand/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\ndaisyui\n```\n\n----------------------------------------\n\nTITLE: Installing daisyUI via npm\nDESCRIPTION: Command to install the latest version of daisyUI as a development dependency using npm.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/what-is-daisyui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D daisyui@latest\n```\n\n----------------------------------------\n\nTITLE: Tailwind CSS Build Commands\nDESCRIPTION: Commands for building CSS files using Tailwind CLI or PostCSS CLI\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/npm-init-daisyui/+page.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx tailwindcss -i tailwind.css -o output.css\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx postcss-cli tailwind.css -o output.css\n```\n\n----------------------------------------\n\nTITLE: Disabled File Input\nDESCRIPTION: Example of a disabled file input element with a placeholder text.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/file-input/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\" placeholder=\"You can't touch this\" class=\"$$file-input\" disabled />\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Development Server\nDESCRIPTION: Commands to navigate to project directory, install dependencies, and start the development server\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-app\nnpm install\nnpm run dev -- --open\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server with Mary UI\nDESCRIPTION: Command to start the Laravel development server after completing the Mary UI configuration.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Creating a New Waku Project via Terminal\nDESCRIPTION: Command to create a new Waku project named 'myapp' and navigate to its directory.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/waku/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create waku@latest -- --project-name=myapp\ncd myapp\n```\n\n----------------------------------------\n\nTITLE: Creating Documentation Content - Markdown\nDESCRIPTION: Example of a documentation page content structure using Markdown with frontmatter and component imports.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-astro-tailwind-documentation-template/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Getting Started\ndescription: \"Quasi sapiente voluptates aut minima non doloribus similique quisquam. In quo expedita ipsum nostrum corrupti incidunt. Et aut eligendi ea perferendis.\"\n---\n\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n\n## Overview\n\nAuthentication is a crucial aspect of any web application, ensuring that users are who they claim to be before granting access to resources or sensitive information. Access Shield simplifies the process of user authentication, offering features such as:\n\n- **User Registration and Login**: Allow users to create accounts and securely log in to your application.\n- **Password Hashing and Encryption**: Safeguard user passwords by securely hashing and encrypting them before storage.\n- **Session Management**: Manage user sessions to maintain authentication state across requests.\n- **OAuth Integration**: Simplify user authentication by integrating with popular OAuth providers.\n- **Two-Factor Authentication (2FA)**: Enhance security by requiring an additional authentication factor.\n- **Role-Based Access Control (RBAC)**: Define roles and permissions to control access to resources.\n```\n\n----------------------------------------\n\nTITLE: Running Development Server for Astro Blog\nDESCRIPTION: Command to start the development server for the Astro blog project.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Color Variable Changes in DaisyUI v4\nDESCRIPTION: Comparison of color variable format changes from HSL to OKLCH color system.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-update-daisyui-4/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n/* the values were HSL */\n--p: 251.47 100% 56%;\n```\n\nLANGUAGE: css\nCODE:\n```\n/* the values are OKLCH */\n--p: 0.4912 0.3096 275.75;\n```\n\n----------------------------------------\n\nTITLE: Creating New SvelteKit Project\nDESCRIPTION: Command to initialize a new SvelteKit project using npm create\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-install-sveltekit-and-daisyui/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create svelte@latest my-app\n```\n\n----------------------------------------\n\nTITLE: Installing Mary UI on a New Laravel Project\nDESCRIPTION: Commands for installing Mary UI on a new Laravel project using Composer and running the setup installer.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/mary-ui/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require robsontenorio/mary\n```\n\n----------------------------------------\n\nTITLE: Basic Tailwind CSS Class Usage\nDESCRIPTION: Example of correct static class name usage in Tailwind CSS\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"bg-red-500\"></div>\n<div class=\"bg-green-500\"></div>\n<div class=\"bg-blue-500\"></div>\n```\n\n----------------------------------------\n\nTITLE: Creating a New DaisyUI Release Version\nDESCRIPTION: Command to create a new version release using npm. This updates the package version according to semver conventions.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm version [patch|minor|major]\n```\n\n----------------------------------------\n\nTITLE: Creating Rails Controller\nDESCRIPTION: Ruby code for a basic pages controller with home action\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/install/rails/+page.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nclass PagesController < ApplicationController\n  def home\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Implementing Select Component in DaisyUI\nDESCRIPTION: Basic select dropdown with customizable styles, colors, and sizes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/llms.txt#2025-04-22_snippet_54\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"select {MODIFIER}\">\n  <option>Option</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Setting Lemon Squeezy API Key\nDESCRIPTION: Environment variable configuration for the Lemon Squeezy API integration\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-nextjs-online-store-template/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nLEMON_SQUEEZY_API_KEY=your_api_key_here\n```\n\n----------------------------------------\n\nTITLE: Creating New Blog Post File in Astro\nDESCRIPTION: Command to create a new Markdown file for a blog post in the Astro project structure.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/how-to-make-a-blog-quickly-using-astro-and-daisyUI/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsrc/content/posts/my-new-post.mdx\n```\n\n----------------------------------------\n\nTITLE: Safelist File Content Example\nDESCRIPTION: Example content of a safelist file containing allowed class names\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/most-common-mistake-when-using-tailwind-css/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: txt\nCODE:\n```\nbg-red-500\nbg-green-500\nbg-blue-500\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Svelte Component in Gemini Setup Documentation - Svelte\nDESCRIPTION: This Svelte code snippet imports the Translate component, which is likely responsible for language translation or dynamic text rendering within the documentation page. No additional dependencies are required beyond the Svelte framework and the local $components path. The code is embedded at the beginning of the file to ensure translation features are available throughout the documentation component.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/docs/editor/gemini/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\\n  import Translate from \\\"$components/Translate.svelte\\\"\\n<\\/script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Simple Timeline without Icons using DaisyUI in HTML\nDESCRIPTION: This snippet demonstrates a minimal timeline implementation without icons, using DaisyUI's timeline utility classes. The timeline alternates between left and right positioning of content boxes with connecting horizontal lines.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/timeline/+page.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"$$timeline\">\n  <li>\n    <div class=\"$$timeline-start $$timeline-box\">First Macintosh computer</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-end $$timeline-box\">iMac</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">iPod</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-end $$timeline-box\">iPhone</div>\n    <hr />\n  </li>\n  <li>\n    <hr />\n    <div class=\"$$timeline-start $$timeline-box\">Apple Watch</div>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing DaisyUI Dependencies\nDESCRIPTION: Command to install project dependencies using npm. This is the first step for setting up the development environment.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Displaying daisyUI Logo with HTML\nDESCRIPTION: HTML markup for displaying the daisyUI rotating logo image with specific styling and accessibility attributes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/brand/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"text-center\">\n  <img\n    class=\"pointer-events-none inline-block align-bottom\"\n    src=\"https://img.daisyui.com/images/daisyui/mark-rotating.svg\"\n    alt=\"daisyUI logo\"\n    width=\"400\"\n    height=\"400\"\n    loading=\"lazy\"\n  />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Making Tooltips Responsive for Large Screens Only (HTML)\nDESCRIPTION: This code snippet shows how to make tooltips appear only on large screens by prefixing the 'tooltip' class with the responsive utility 'lg:'. The tooltip will be shown when hovered, but only when the viewport is large. Useful for hiding tooltips on mobile. Depends on Tailwind CSS (and daisyUI).\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/tooltip/+page.md#2025-04-22_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$lg:tooltip\" data-tip=\"hello\">\n  <button class=\"$$btn\">Hover me</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Svelte Script Import Component\nDESCRIPTION: Imports the Translate component from the components directory in a Svelte file\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-colors-and-themes/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component in daisyUI Blog Post\nDESCRIPTION: A Svelte script tag importing the Translate component for use in the blog post about daisyUI's 2023 year in review.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-2023-wrapped/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component in HTML\nDESCRIPTION: This snippet imports a Svelte component named 'Translate' from the '$components' directory. It's likely used for internationalization or language translation functionality within the page.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-2024-wrapped/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component for Translation\nDESCRIPTION: This snippet imports a Svelte component named 'Translate' from the '$components' directory. It's likely used for translating content in the blog post.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/daisyui-logo/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Login Form using Fieldset in HTML\nDESCRIPTION: Shows a complete login form structure using a fieldset. Includes email and password inputs, labels, and a submit button, all styled with DaisyUI classes.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/fieldset/+page.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"$$fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4\">\n  <legend class=\"$$fieldset-legend\">Login</legend>\n\n  <label class=\"$$label\">Email</label>\n  <input type=\"email\" class=\"$$input\" placeholder=\"Email\" />\n\n  <label class=\"$$label\">Password</label>\n  <input type=\"password\" class=\"$$input\" placeholder=\"Password\" />\n\n  <button class=\"$$btn $$btn-neutral mt-4\">Login</button>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Rendering Button with Border Radius Indicator\nDESCRIPTION: This HTML snippet shows a button with a border radius indicator. It uses DaisyUI classes and custom indicator elements to highlight the button's border radius property.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/design/+page.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<figure class={figure}>\n  <div class=\"relative\">\n    <button class=\"btn btn-primary\">Button</button>\n    <div\n      class={`${indicator} -start-1 top-1/2 h-12 w-4 translate-y-2 flex-col`}>\n      <div class={circle}>\n      </div>\n      <hr class={`${line} h-full w-px border-s`} />\n      <div class={`${item} indicator-center indicator-bottom`}>\n        --radius-field\n      </div>\n    </div>\n  </div>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Importing Translate Component in Svelte\nDESCRIPTION: Script tag importing the Translate component from the components directory in a Svelte file.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/figma/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Customizing iPhone Mockup with Color and Wallpaper in DaisyUI\nDESCRIPTION: This snippet demonstrates how to customize the iPhone mockup by adding a border color and a wallpaper image to the display area.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/mockup-phone/+page.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"$$mockup-phone border-primary\">\n  <div class=\"$$mockup-phone-camera\"></div>\n  <div class=\"$$mockup-phone-display\">\n    <img alt=\"wallpaper\" src=\"https://img.daisyui.com/images/stock/453966.webp\"/>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Svelte Component in HTML\nDESCRIPTION: This snippet imports a Svelte component named 'Translate' from the components directory. It's likely used for translation functionality within the blog post.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/blog/(posts)/discord/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```\n\n----------------------------------------\n\nTITLE: Google AdSense Publisher Configuration Line\nDESCRIPTION: This line contains the configuration required for Google AdSense integration. It specifies google.com as the ad network, includes the publisher ID (pub-4812562253949561), defines the relationship type as DIRECT, and provides a verification code.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/static/ads.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ngoogle.com, pub-4812562253949561, DIRECT, f08c47fec0942fa0\n```\n\n----------------------------------------\n\nTITLE: Importing Translate Component in Svelte\nDESCRIPTION: This snippet imports the Translate component from a local file. It's likely used for internationalization or language translation features within the documentation.\nSOURCE: https://github.com/saadeghi/daisyui/blob/master/packages/docs/src/routes/(routes)/components/button/accessibility/+page.md#2025-04-22_snippet_0\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import Translate from \"$components/Translate.svelte\"\n</script>\n```"
  }
]
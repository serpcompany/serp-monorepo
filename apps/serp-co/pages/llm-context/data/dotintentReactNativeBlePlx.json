[
  {
    "owner": "dotintent",
    "repo": "react-native-ble-plx",
    "content": "TITLE: Requesting BLE Permissions in React Native\nDESCRIPTION: Handles Bluetooth and location permission requests for both Android and iOS platforms, including specific handling for Android API level 31+.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/GETTING_STARTED.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nrequestBluetoothPermission = async () => {\n  if (Platform.OS === 'ios') {\n    return true\n  }\n  if (Platform.OS === 'android' && PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION) {\n    const apiLevel = parseInt(Platform.Version.toString(), 10)\n\n    if (apiLevel < 31) {\n      const granted = await PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION)\n      return granted === PermissionsAndroid.RESULTS.GRANTED\n    }\n    if (PermissionsAndroid.PERMISSIONS.BLUETOOTH_SCAN && PermissionsAndroid.PERMISSIONS.BLUETOOTH_CONNECT) {\n      const result = await PermissionsAndroid.requestMultiple([\n        PermissionsAndroid.PERMISSIONS.BLUETOOTH_SCAN,\n        PermissionsAndroid.PERMISSIONS.BLUETOOTH_CONNECT,\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION\n      ])\n\n      return (\n        result['android.permission.BLUETOOTH_CONNECT'] === PermissionsAndroid.RESULTS.GRANTED &&\n        result['android.permission.BLUETOOTH_SCAN'] === PermissionsAndroid.RESULTS.GRANTED &&\n        result['android.permission.ACCESS_FINE_LOCATION'] === PermissionsAndroid.RESULTS.GRANTED\n      )\n    }\n  }\n\n  this.showErrorToast('Permission have not been granted')\n\n  return false\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing BLE Manager Singleton Class in TypeScript\nDESCRIPTION: Creates a singleton class for managing BLE connections using BleManager. This pattern ensures a single instance of BleManager is maintained throughout the application lifecycle.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/GETTING_STARTED.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BleManager } from 'react-native-ble-plx'\n\n// create your own singleton class\nclass BLEServiceInstance {\n  manager: BleManager\n\n  constructor() {\n    this.manager = new BleManager()\n  }\n}\n\nexport const BLEService = new BLEServiceInstance()\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Manifest with BLE Permissions\nDESCRIPTION: Adding the necessary Bluetooth permissions to the AndroidManifest.xml file, including permissions for both Android 12+ and older versions.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n   ...\n\n   <!-- Android >= 12 -->\n   <uses-permission android:name=\"android.permission.BLUETOOTH_SCAN\" />\n   <uses-permission android:name=\"android.permission.BLUETOOTH_CONNECT\" />\n   <!-- Android < 12 -->\n   <uses-permission android:name=\"android.permission.BLUETOOTH\" android:maxSdkVersion=\"30\" />\n   <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" android:maxSdkVersion=\"30\" />\n   <!-- common -->\n   <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n\n   <!-- Add this line if your application always requires BLE. More info can be found on:\n       https://developer.android.com/guide/topics/connectivity/bluetooth-le.html#permissions\n     -->\n   <uses-feature android:name=\"android.hardware.bluetooth_le\" android:required=\"true\"/>\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Connecting to BLE Device and Discovering Services\nDESCRIPTION: Demonstrates the process of connecting to a BLE device and discovering its services and characteristics with promise-based error handling.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/GETTING_STARTED.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndevice\n  .connect()\n  .then(device => {\n    return device.discoverAllServicesAndCharacteristics()\n  })\n  .then(device => {\n    // Do work on device with services and characteristics\n  })\n  .catch(error => {\n    // Handle errors\n  })\n```\n\n----------------------------------------\n\nTITLE: Preparing Device Connection in React Native BLE-PLX\nDESCRIPTION: Shows how to establish a connection with a BLE device and discover all services and characteristics. This is a necessary preparation step before performing any read, write or monitor operations.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/TUTORIALS.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndevice\n  .connect()\n  .then(device => {\n    return device.discoverAllServicesAndCharacteristics()\n  })\n  .then(device => {\n    // A fully functional connection you can use, now you can read, write and monitor values\n  })\n  .catch(error => {\n    // Handle errors\n  })\n```\n\n----------------------------------------\n\nTITLE: Scanning for BLE Devices\nDESCRIPTION: Implements device scanning functionality with error handling and device filtering based on device name.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/GETTING_STARTED.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction scanAndConnect() {\n  manager.startDeviceScan(null, null, (error, device) => {\n    if (error) {\n      // Handle error (scanning will be stopped automatically)\n      return\n    }\n\n    // Check if it is a device you are looking for based on advertisement data\n    // or other criteria.\n    if (device.name === 'TI BLE Sensor Tag' || device.name === 'SensorTag') {\n      // Stop scanning as it's not necessary if you are scanning for one device.\n      manager.stopDeviceScan()\n\n      // Proceed with connection.\n    }\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: Writing to a BLE Characteristic in React Native BLE-PLX\nDESCRIPTION: Shows how to write a value to a specific characteristic of a service. The example uses writeCharacteristicWithResponseForService which waits for a response from the device.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/TUTORIALS.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndevice\n  .writeCharacteristicWithResponseForService(serviceUUID, characteristicUUID, value)\n  .then(() => {\n    console.log('Write characteristic success')\n  })\n  .catch(error => {\n    console.error('Write characteristic error:', error)\n  })\n```\n\n----------------------------------------\n\nTITLE: Reading from a BLE Characteristic in React Native BLE-PLX\nDESCRIPTION: Demonstrates how to read a value from a specific characteristic of a service. The method returns a promise that resolves to the characteristic value.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/TUTORIALS.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndevice\n  .readCharacteristicForService(serviceUUID, characteristicUUID)\n  .then(characteristic => {\n    console.log('Read characteristic value:', characteristic.value)\n  })\n  .catch(error => {\n    console.error('Read characteristic error:', error)\n  })\n```\n\n----------------------------------------\n\nTITLE: Monitoring Device Disconnection in React Native BLE-PLX\nDESCRIPTION: Demonstrates how to set up a listener for device disconnection events using the onDeviceDisconnected method. This pattern allows implementing automatic reconnection logic when a device disconnects.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/TUTORIALS.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst setupOnDeviceDisconnected = (deviceIdToMonitor: String) => {\n  bleManagerInstance.onDeviceDisconnected(deviceIdToMonitor, disconnectedListener)\n}\n\nconst disconnectedListener = (error: BleError | null, device: Device | null) => {\n  if (error) {\n    console.error(JSON.stringify(error, null, 4))\n  }\n  if (device) {\n    console.info(JSON.stringify(device, null, 4))\n\n    // reconnect to the device\n    device.connect()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Monitoring BLE State Changes in React\nDESCRIPTION: Sets up a listener for BLE state changes using React hooks, particularly useful for iOS where BLE stack needs initialization.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/GETTING_STARTED.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nReact.useEffect(() => {\n  const subscription = manager.onStateChange(state => {\n    if (state === 'PoweredOn') {\n      scanAndConnect()\n      subscription.remove()\n    }\n  }, true)\n  return () => subscription.remove()\n}, [manager])\n```\n\n----------------------------------------\n\nTITLE: Configuring Expo Plugin for BLE-PLX in app.json\nDESCRIPTION: Basic configuration for adding the react-native-ble-plx plugin to an Expo project. This adds the necessary native modules to your Expo app.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\"react-native-ble-plx\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Extended Expo Plugin Configuration for BLE-PLX\nDESCRIPTION: Advanced configuration for the react-native-ble-plx Expo plugin, including background mode support, Bluetooth modes, and custom permission messages.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"react-native-ble-plx\",\n        {\n          \"isBackgroundEnabled\": true,\n          \"modes\": [\"peripheral\", \"central\"],\n          \"bluetoothAlwaysPermission\": \"Allow $(PRODUCT_NAME) to connect to bluetooth devices\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Manifest for BLE Permissions\nDESCRIPTION: Adds necessary Bluetooth permissions and feature requirements to the Android manifest file.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/README_V1.md#2025-04-23_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    ...\n    <uses-permission android:name=\"android.permission.BLUETOOTH\"/>\n    <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\"/>\n    <uses-permission-sdk-23 android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n\n    <!-- Add this line if your application always requires BLE. More info can be found on:\n         https://developer.android.com/guide/topics/connectivity/bluetooth-le.html#permissions\n      -->\n    <uses-feature android:name=\"android.hardware.bluetooth_le\" android:required=\"true\"/>\n\n    <uses-sdk\n        android:minSdkVersion=\"21\"\n        ...\n```\n\n----------------------------------------\n\nTITLE: Optimized Android Permissions with neverForLocation Flag\nDESCRIPTION: Advanced Android manifest configuration using the neverForLocation flag for Android SDK 31+, which allows removing location permission requirements when not needed for BLE scanning.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n <uses-permission android:name=\"android.permission.INTERNET\" />\n <!-- Android >= 12 -->\n <uses-permission android:name=\"android.permission.BLUETOOTH_SCAN\" android:usesPermissionFlags=\"neverForLocation\" />\n <uses-permission android:name=\"android.permission.BLUETOOTH_CONNECT\" />\n <!-- Android < 12 -->\n <uses-permission android:name=\"android.permission.BLUETOOTH\" android:maxSdkVersion=\"30\" />\n <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" android:maxSdkVersion=\"30\" />\n <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" android:maxSdkVersion=\"30\" />\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Connecting to Already Connected BLE Devices in React Native BLE-PLX\nDESCRIPTION: Demonstrates how to connect to a device that is already connected to the operating system. This approach uses getConnectedDevices to find devices connected to specific services.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/TUTORIALS.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nbleManagerInstance\n  .getConnectedDevices([serviceUUIDs])\n  .then(devices => {\n    const device = devices.find(d => d.id === deviceIdWeWantToConnectTo)\n\n    if (device && !device.isConnected) {\n      device.connect()\n    }\n  })\n  .catch(error => {\n    console.error('Get connected devices error:', error)\n  })\n```\n\n----------------------------------------\n\nTITLE: Simple BLE Manager Instance Creation in TypeScript\nDESCRIPTION: Direct initialization of BleManager instance for basic BLE functionality management.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/GETTING_STARTED.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BleManager } from 'react-native-ble-plx'\n\nexport const manager = new BleManager()\n```\n\n----------------------------------------\n\nTITLE: Configuring Android SDK Version for BLE Support\nDESCRIPTION: Setting the minimum SDK version to 23 in the top-level build.gradle file, which is required for BLE support in Android.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\nbuildscript {\n    ext {\n        ...\n        minSdkVersion = 23\n        ...\n\n```\n\n----------------------------------------\n\nTITLE: Adding JitPack Repository to Android Build\nDESCRIPTION: Adding the JitPack repository to the project's build.gradle file, which is required for resolving dependencies used by the BLE-PLX library.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\nallprojects {\n    repositories {\n      ...\n      maven { url 'https://www.jitpack.io' }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Build Gradle for BLE PLX\nDESCRIPTION: Sets the minimum SDK version to 21 and adds the jitpack repository for the Android app module.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/README_V1.md#2025-04-23_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\nandroid {\n    ...\n    defaultConfig {\n        minSdkVersion 21\n        ...\n\n```\n\nLANGUAGE: groovy\nCODE:\n```\nallprojects {\n    repositories {\n      ...\n      maven { url 'https://jitpack.io' }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Verbose Logging in React Native BLE-PLX\nDESCRIPTION: Shows how to enable verbose logging for debugging purposes. Setting the log level to Verbose provides detailed information about BLE operations.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/TUTORIALS.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nbleManagerInstance.setLogLevel(LogLevel.Verbose)\n```\n\n----------------------------------------\n\nTITLE: Running React Native App on Android\nDESCRIPTION: Commands to start the React Native application on Android using either npm or Yarn.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/example/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm run android\n\n# OR using Yarn\nyarn android\n```\n\n----------------------------------------\n\nTITLE: Running React Native App on iOS\nDESCRIPTION: Commands to start the React Native application on iOS using either npm or Yarn.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/example/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm run ios\n\n# OR using Yarn\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Starting Metro Server for React Native\nDESCRIPTION: Commands to start the Metro JavaScript bundler for a React Native project using either npm or Yarn.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/example/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm start\n\n# OR using Yarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Adding Proguard Rules for BLE PLX\nDESCRIPTION: Adds a Proguard rule to prevent warnings related to the react-native-ble library.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/README_V1.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n-dontwarn com.polidea.reactnativeble.**\n```\n\n----------------------------------------\n\nTITLE: Installing React Native BLE PLX Pre-release Version\nDESCRIPTION: This snippet shows how to install a pre-release version of the react-native-ble-plx library directly from GitHub. This allows testing of unreleased changes in a chosen application.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/RELEASE.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"react-native-ble-plx\": \"dotintent/react-native-ble-plx\"\n```\n\n----------------------------------------\n\nTITLE: Cleaning Repository and Publishing New Version\nDESCRIPTION: This command cleans the repository of untracked files and publishes a new version of the library to npm. It's part of the publishing process after merging changes to the master branch.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/RELEASE.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clean -xfd && npm publish\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: Structured changelog following Keep a Changelog format, documenting version history from 3.0.0 to 3.5.0. Includes sections for Added, Changed, and Fixed items for each version release.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/).\n\n## [3.5.0] - 2025-02-07\n\n### Changed\n\n- upgraded react native to 0.77.0\n- added `subscriptionType` param to monitor characteristic methods\n\n### Fixed\n\n- return `serviceUUIDs` from `discoverAllServicesAndCharacteristicsForDevice`\n\n## [3.4.0] - 2024-12-20\n\n### Changed\n\n- internal `_manager` property isn't enumerable anymore\n- `BleManager` is now a singleton\n\n### Fixed\n\n- Timeout parameter in connect method on Android\n- Missing `serviceUUIDs` data\n\n## [3.2.1] - 2024-07-9\n\n### Changed\n\n- reverted methods from arrow functions\n- improved react native fast refresh support\n\n### Fixed\n\n- Example app xcode node path issue\n```\n\n----------------------------------------\n\nTITLE: BLE Manager API Updates\nDESCRIPTION: New API methods introduced in version 0.5.0 including setLogLevel() for native logging and readRSSIForDevice() for connected devices\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/CHANGELOG-pre-3.0.0.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nbleManager.setLogLevel()\nbleManager.readRSSIForDevice()\n```\n\n----------------------------------------\n\nTITLE: Device Property Renaming\nDESCRIPTION: Breaking changes in version 0.4.0 where device identifier properties were renamed for Android compatibility\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/CHANGELOG-pre-3.0.0.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nDevice.id           // formerly Device.uuid\nService.deviceID     // formerly Service.deviceUUID\nCharacteristic.deviceID // formerly Characteristic.deviceUUID\n```\n\n----------------------------------------\n\nTITLE: Removing Legacy Pod Configuration for react-native-ble-plx\nDESCRIPTION: Instructions to remove the legacy Swift pod configuration from iOS Podfile during migration to version 2.0.0. This line needs to be deleted as the dependency structure has changed in the new version.\nSOURCE: https://github.com/dotintent/react-native-ble-plx/blob/master/docs/MIGRATION_V1.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\npod 'react-native-ble-plx-swift', :path => '../node_modules/react-native-ble-plx'\n```"
  }
]
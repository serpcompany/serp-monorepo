[
  {
    "owner": "codesandbox",
    "repo": "sandpack",
    "content": "TITLE: Creating a Custom Sandpack Component with React\nDESCRIPTION: This code demonstrates how to create a custom Sandpack setup using SandpackProvider as the central state manager, with SandpackLayout, SandpackCodeEditor, and SandpackPreview components. It renders a code editor and preview with a vanilla template and automatic theme selection.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/index.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { \n  SandpackProvider, \n  SandpackLayout, \n  SandpackPreview, \n  SandpackCodeEditor \n} from \"@codesandbox/sandpack-react\";\n\nconst CustomSandpack = () => (\n\n<SandpackProvider template=\"vanilla\" theme=\"auto\">\n  <SandpackLayout>\n    <SandpackCodeEditor />\n    <SandpackPreview />\n  </SandpackLayout>\n</SandpackProvider>\n);\n\nexport default () => <CustomSandpack />\n```\n\n----------------------------------------\n\nTITLE: Basic Sandpack React Component Usage\nDESCRIPTION: Simple example showing how to import and use the Sandpack component in a React application\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/index.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return <Sandpack />\n}\n```\n\n----------------------------------------\n\nTITLE: Adding NPM Dependencies to Sandpack React Component\nDESCRIPTION: Illustrates how to add custom NPM dependencies to a Sandpack component using the customSetup prop.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/usage.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack\n      template=\"react\"\n      customSetup={{ \n        dependencies: { \n          \"react-markdown\": \"latest\" \n        }\n      }}\n      files={{\n        \"/App.js\": `import ReactMarkdown from 'react-markdown' \n\nexport default function App() {\n  return (\n    <ReactMarkdown>\n      # Hello, *world*!\n    </ReactMarkdown>\n  )\n}`\n      }}\n    />\n  )\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Sandpack Layout with React\nDESCRIPTION: This snippet demonstrates how to set up a basic Sandpack layout using SandpackProvider, SandpackLayout, SandpackCodeEditor, and SandpackPreview components. It creates a two-column layout with a code editor on the left and a preview on the right.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  SandpackProvider,\n  SandpackLayout,\n  SandpackCodeEditor,\n  SandpackPreview,\n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackCodeEditor />\n      <SandpackPreview />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Files in Sandpack React Component\nDESCRIPTION: Demonstrates how to override default template files by passing custom code through the 'files' prop in a Sandpack React component.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/usage.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      template=\"react\"\n      files={{\n        \"/App.js\": `export default function App() {\n  return <h1>Hello Sandpack</h1>\n}`,\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandpack Component in React\nDESCRIPTION: This snippet demonstrates how to import and use the basic Sandpack component in a React application. It uses the 'react' template as a starting point for the sandbox.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\n<Sandpack template=\"react\" />;\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandpack Client in JavaScript\nDESCRIPTION: This snippet demonstrates how to load and initialize the Sandpack client. It sets up a client with custom files, entry point, and dependencies, showcasing the basic usage of the package.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-client/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { loadSandpackClient } from \"@codesandbox/sandpack-client\";\n\nconst main = async () => {\n  const client = await loadSandpackClient(\"#preview\", {\n    files: {\n      \"/index.js\": {\n        code: `console.log(require('uuid'))`,\n      },\n    },\n    entry: \"/index.js\",\n    dependencies: {\n      uuid: \"latest\",\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Sandpack React Component\nDESCRIPTION: Demonstrates the basic usage of the Sandpack component with the React template. This creates an editable sandbox that runs React code in the browser.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-react/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\n<Sandpack template=\"react\" />;\n```\n\n----------------------------------------\n\nTITLE: Using loadSandpackClient to Mount a Bundler\nDESCRIPTION: Example of using the loadSandpackClient function to mount a bundler with specified files, environment, and dependencies. It also demonstrates how to update the sandbox after initialization.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/client.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { loadSandpackClient } from \"@codesandbox/sandpack-client\";\n\nasync function main() {\n  // Iframe selector or element itself\n  const iframe = document.getElementById(\"iframe\");\n  \n  // Files, environment and dependencies\n  const content = {\n    files: { \n      // We infer dependencies and the entry point from package.json \n      \"/package.json\": { code: JSON.stringify({\n        main: \"index.js\",\n        dependencies: { uuid: \"latest\" },\n      })},\n      \n      // Main file\n      \"/index.js\": { code: `console.log(require('uuid'))` }\n    },\n    environment: \"vanilla\"\n  };\n  \n  // Optional options\n  const options = {};\n  \n  // Properly load and mount the bundler\n  const client = await loadSandpackClient(\n    iframe, \n    content, \n    options\n  );\n  \n  /**\n   * When you make a change, you can just run `updateSandbox`. \n   * We'll automatically discover which files have changed\n   * and hot reload them.\n   */\n  client.updateSandbox({\n    files: {\n      \"/index.js\": {\n        code: `console.log('New Text!')`,\n      },\n    },\n    entry: \"/index.js\",\n    dependencies: {\n      uuid: \"latest\",\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Monaco Editor Integration with Sandpack\nDESCRIPTION: Implementation of a MonacoEditor component that integrates with Sandpack's state management and UI components, including file tabs and code synchronization\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/integrate-monaco-editor.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport Editor from \"@monaco-editor/react\";\nimport {\n  useActiveCode,\n  SandpackStack,\n  FileTabs,\n  useSandpack,\n} from \"@codesandbox/sandpack-react\";\n\nfunction MonacoEditor() {\n  const { code, updateCode } = useActiveCode();\n  const { sandpack } = useSandpack();\n\n  return (\n    <SandpackStack style={{ height: \"100vh\", margin: 0 }}>\n      <FileTabs />\n      <div style={{ flex: 1, paddingTop: 8, background: \"#1e1e1e\" }}>\n        <Editor\n          width=\"100%\"\n          height=\"100%\"\n          language=\"javascript\"\n          theme=\"vs-dark\"\n          key={sandpack.activeFile}\n          defaultValue={code}\n          onChange={(value) => updateCode(value || \"\")}\n        />\n      </div>\n    </SandpackStack>\n  );\n```\n\n----------------------------------------\n\nTITLE: Configuring Visible Files and Active File in Sandpack React Component\nDESCRIPTION: Demonstrates how to override the default visible files and set an active file using the options prop in a Sandpack component.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/usage.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default () => {\n  return (\n    <Sandpack\n      template=\"react\"\n      files={{ \"/button.js\": `export default () => <button />` }}\n      options={{\n        visibleFiles: [\"/App.js\", \"/button.js\", \"/index.js\"],\n        activeFile: \"/button.js\",\n      }}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic React Component Example with Console Output\nDESCRIPTION: Demonstrates a simple React component setup with console logging and basic HTML structure. Shows the fundamental usage of Sandpack for live code editing.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/index.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(\"Sandpack ðŸ“¦\")\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello world âœ¨</h1>\n      <p>Start editing to see some magic happen!</p>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SandpackConsole with Options\nDESCRIPTION: Demonstrates how to enable and configure the console logging feature in Sandpack, including showing console output and buttons for enhanced debugging and development experience.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_13\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <Sandpack\n    options={{\n      showConsole: true,\n      showConsoleButton: true,\n    }}\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Private Package Access in Sandpack React\nDESCRIPTION: Example showing how to set up Sandpack with private package access using teamId and custom dependencies. Demonstrates importing and using a private package from GitHub packages within a React component.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/private-packages.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  template=\"react\"\n\n  // This is an identifier for your sandboxes and private npm registry\n  teamId=\"YOUR_TEAM_ID\"\n\n  // Set the dependencies; for example, this is a private package from GitHub packages\n  customSetup={{\n    dependencies: { \"@codesandbox/test-package\": \"latest\" },\n  }}\n\n  // Consume dependencies as usual\n  files={{\n    \"App.js\": `import { Button } from \"@codesandbox/test-package\";\n\nexport default function App() {\n  return <Button>Hello World</Button>\n}`,\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Theme in Sandpack React Component\nDESCRIPTION: Demonstrates how to customize Sandpack's appearance by overriding default theme properties. Shows implementation of custom colors for accent and syntax highlighting including tags, strings, and plain text.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/themes.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      theme={{\n        colors: {\n          accent: \"rebeccapurple\",\n        },\n        syntax: {\n          tag: \"#006400\",\n          string: \"rgb(255, 165, 0)\",\n          plain: \"tomato\",\n        },\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Language Support with CodeMirror\nDESCRIPTION: Demonstrates how to extend SandpackCodeEditor with additional language support like Python, using CodeMirror language definitions\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nimport { python } from \"@codemirror/lang-python\";\n\n<SandpackProvider>\n  <SandpackCodeEditor\n    additionalLanguages={[\n      {\n        name: \"python\",\n        extensions: [\"py\"],\n        language: python(),\n      },\n    ]}\n  />\n</SandpackProvider>\n```\n\n----------------------------------------\n\nTITLE: Full Example of Serving Static SVG in Sandpack React Component (JSX)\nDESCRIPTION: This comprehensive example shows how to serve a static SVG file in a Sandpack React component. It includes the SVG content, a React component that uses the SVG, and the Sandpack configuration to enable static file serving.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/serving-static-files.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <Sandpack\n    files={{\n      \"/public/logo.svg\": `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-11.5 -10.23174 23 20.46348\">\n<title>React Logo</title>\n<circle cx=\"0\" cy=\"0\" r=\"2.05\" fill=\"#61dafb\"/>\n<g stroke=\"#61dafb\" stroke-width=\"1\" fill=\"none\">\n  <ellipse rx=\"11\" ry=\"4.2\"/>\n  <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(60)\"/>\n  <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(120)\"/>\n</g>\n</svg>\n`,\n      \"/App.js\": `export default function App() {\n  return (\n    <>\n      <h1>Hello React</h1>\n      <img width=\"100\" src=\"/public/logo.svg\" />\n    </>\n  );\n}\n      `,\n    }}\n    options={{\n      experimental_enableServiceWorker: true,\n    }}\n    template=\"react\"\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Accessing Sandpack Client from SandpackPreview in React\nDESCRIPTION: This snippet demonstrates how to imperatively retrieve the Sandpack client from a SandpackPreview ref. It uses the useSandpack hook and useRef to access the client instance and its current state, allowing for advanced interactions with the Sandpack environment.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { SandpackPreviewRef, useSandpack, SandpackPreview } from \"@codesandbox/sandpack-react\"\n\nconst SandpackPreviewClient: React.FC = () => {\n  const { sandpack } = useSandpack();\n  const previewRef = React.useRef<SandpackPreviewRef>();\n\n  React.useEffect(() => {\n    const client = previewRef.current?.getClient();\n    const clientId = previewRef.current?.clientId;\n\n    if (client && clientId) {\n      console.log(client);\n      console.log(sandpack.clients[clientId]);\n    }\n  /**\n   * NOTE: In order to make sure that the client will be available\n   * use the whole `sandpack` object as a dependency.\n   */\n  }, [sandpack]);\n\n  return <SandpackPreview ref={previewRef} />;\n};\n```\n\n----------------------------------------\n\nTITLE: Running Tests with SandpackTests Component\nDESCRIPTION: Demonstrates how to configure and run tests using Sandpack's testing component with Jest. Supports automatic test discovery and rendering of test results within the browser environment.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\nimport { \n  SandpackProvider, \n  SandpackLayout, \n  SandpackCodeEditor, \n  SandpackTests \n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"test-ts\">\n    <SandpackLayout>\n      <SandpackTests />\n      <SandpackCodeEditor />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Accessing and Communicating with Sandpack Clients\nDESCRIPTION: This snippet demonstrates how to use the useSandpack hook to access all Sandpack clients (iframes) and send messages to them. It creates a button component that, when clicked, sends a 'Hello world' message to all client iframes using the window.postMessage API.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/index.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst ListenerIframeMessage = () => {\n  const { sandpack } = useSandpack();\n\n  const sender = () => {\n    Object.values(sandpack.clients).forEach((client) => {\n      client.iframe.contentWindow.postMessage(\"Hello world\", \"*\");\n    });\n  };\n\n  return <button onClick={sender}>Send message</button>;\n};\n```\n\n----------------------------------------\n\nTITLE: Using useSandpackClient Hook for Client Interaction in React\nDESCRIPTION: This example demonstrates how to use the useSandpackClient hook to interact directly with the Sandpack client, including listening for messages and rendering an iframe.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nconst { iframe, listen } = useSandpackClient();\n\nReact.useEffect(() => {\n  const unsubscribe = listen((message: SandpackMessage) => {\n    if (message.type === \"resize\") {\n      setComputedAutoHeight(message.height);\n    }\n  });\n\n  return unsubscribe;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\n<iframe ref={ifram} />;\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Theme to Sandpack Component in React\nDESCRIPTION: This example shows how to import a predefined theme (githubLight) from Sandpack themes and apply it to a Sandpack component for customized appearance.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { githubLight } from \"@codesandbox/sandpack-themes\";\n\n<Sandpack theme={githubLight} />;\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Sandpack Component in React\nDESCRIPTION: This snippet shows how to combine custom components to create a new Sandpack component with custom UI and functionality.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nexport const CustomSandpack = () => (\n  <SandpackProvider template=\"react\">\n    <CustomAceEditor />\n    <SandpackPreview showRefreshButton={false} showOpenInCodeSandbox={false} />\n    <CustomRefreshButton />\n    <CustomOpenInCSB />\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandpack Code Editor with Basic Configuration\nDESCRIPTION: Demonstrates basic setup of SandpackCodeEditor with common configuration options like showing tabs, line numbers, and inline errors\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  SandpackProvider,\n  SandpackLayout,\n  SandpackPreview,\n  SandpackCodeEditor,\n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackCodeEditor\n        showTabs\n        showLineNumbers={false}\n        showInlineErrors\n        wrapContent\n        closableTabs\n      />\n      <SandpackPreview />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Extending Jest Expect with Custom Matchers\nDESCRIPTION: Shows how to extend Jest's expect functionality by importing third-party matchers and configuring them within a Sandpack testing environment. Demonstrates adding dependencies and custom test files.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_12\n\nLANGUAGE: jsx\nCODE:\n```\nimport { \n  SandpackProvider, \n  SandpackLayout, \n  SandpackCodeEditor, \n  SandpackTests \n} from \"@codesandbox/sandpack-react\";\n\nconst extendedTest = `import * as matchers from 'jest-extended';\nimport { add } from './add';\n\nexpect.extend(matchers);\n\ndescribe('jest-extended matchers are supported', () => {\n  test('adding two positive integers yields a positive integer', () => {\n    expect(add(1, 2)).toBePositive();\n  });\n});`;\n\nexport default () => (\n  <SandpackProvider\n    customSetup={{ dependencies: { \"jest-extended\": \"^3.0.2\" } }}\n    files={{ \"/extended.test.ts\": extendedTest }}\n    template=\"test-ts\"\n  >\n    <SandpackLayout>\n      <SandpackCodeEditor />\n      <SandpackTests />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Customizing Sandpack Layout Order in React\nDESCRIPTION: This example shows how to customize the Sandpack layout by swapping the order of SandpackPreview and SandpackCodeEditor components within the SandpackLayout. This results in the preview being displayed on the left and the code editor on the right.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  SandpackProvider,\n  SandpackLayout,\n  SandpackCodeEditor,\n  SandpackPreview,\n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackPreview />\n      <SandpackCodeEditor />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack with Private NPM Registry\nDESCRIPTION: Example demonstrating how to configure Sandpack to use private NPM packages through a custom registry. Shows setup of custom dependencies and npm registry configuration with scope limitations.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/hosting-the-bundler.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  customSetup={{\n    dependencies: { \"@codesandbox/test-package\": \"1.0.5\" },\n    npmRegistries: [\n      {\n        enabledScopes: [\"@codesandbox\"],\n        limitToScopes: true,\n        registryUrl: \"PROXY_URL\",\n      },\n    ],\n  }}\n  files={{\n    \"/App.js\": `import { Button } from \"@codesandbox/test-package\"\nexport default function App() {\n  return (\n    <div>\n      <Button>I'm a private Package</Button>\n    </div>\n  )\n}\n`,\n  }}\n  template=\"react\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Static File Serving in SandpackProvider (JSX)\nDESCRIPTION: This snippet shows how to enable the experimental static file serving feature in a SandpackProvider component. It includes an option to enable a stable Service Worker ID for private packages.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/serving-static-files.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<SandpackProvider\n  options={{\n    experimental_enableServiceWorker: true,\n    experimental_enableStableServiceWorkerId: false // set this true, in case private package are used\n  }}\n>\n  {...}\n</SandpackProvider>\n```\n\n----------------------------------------\n\nTITLE: Initializing SandpackClient with Custom Bundler URL\nDESCRIPTION: Example showing how to initialize SandpackClient with a custom hosted bundler URL. This allows connecting to a self-hosted version of the Sandpack bundler.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/hosting-the-bundler.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnew SandpackClient(iframe, sandboxInfo, {\n  bundlerURL: \"https://your-hosted-version\",\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing SandpackFileExplorer in React\nDESCRIPTION: Renders a file explorer component within a Sandpack layout using React and Sandpack's components. Allows navigation through project files with minimal configuration.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\nimport { \n  SandpackProvider, \n  SandpackLayout, \n  SandpackCodeEditor, \n  SandpackFileExplorer \n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackFileExplorer />\n      <SandpackCodeEditor />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing SSR Support with getSandpackCssText\nDESCRIPTION: Shows how to implement server-side rendering support using the getSandpackCssText function to generate consistent CSS styling\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v1.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { getSandpackCssText } from \"@codesandbox/sandpack-react\";\n\n// SSR template\n<style\n  dangerouslySetInnerHTML={{ __html: getSandpackCssText() }}\n  id=\"sandpack\"\n/>;\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Sandpack Layout in React\nDESCRIPTION: This snippet shows how to create a custom Sandpack layout using SandpackProvider, SandpackLayout, SandpackCodeEditor, and a custom SimpleCodeViewer component.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<SandpackProvider template=\"react\">\n  <SandpackLayout>\n    <SandpackCodeEditor />\n    {/* This will render the pre on the right side of your sandpack component */}\n    <SimpleCodeViewer />\n  </SandpackLayout>\n</SandpackProvider>\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack Recompile Mode\nDESCRIPTION: This example demonstrates how to configure the recompile mode in Sandpack, controlling how changes in the code editor trigger recompilation of the project.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  options={{\n    recompileMode: \"delayed\",\n    recompileDelay: 300,\n  }}\n  template=\"react\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Refresh Button with useSandpack Hook in React\nDESCRIPTION: This example demonstrates how to use the useSandpack hook to create a custom refresh button that communicates with the Sandpack bundler.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useSandpack } from \"@codesandbox/sandpack-react\";\n\nconst CustomRefreshButton = () => {\n  const { dispatch, listen } = useSandpack();\n\n  const handleRefresh = () => {\n    // sends the refresh message to the bundler, should be logged by the listener\n    dispatch({ type: \"refresh\" });\n  };\n\n  useEffect(() => {\n    // listens for any message dispatched between sandpack and the bundler\n    const stopListening = listen((msg) => console.log(msg));\n\n    return () => {\n      // unsubscribe\n      stopListening();\n    };\n  }, [listen]);\n\n  return (\n    <button type=\"button\" onClick={handleRefresh}>\n      Refresh\n    </button>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Adding External Resources to Sandpack React Component\nDESCRIPTION: Shows how to include external CSS or JS resources in a Sandpack component using the options prop.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/usage.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack\n      template=\"react\"\n      options={{\n        externalResources: [\"https://cdn.tailwindcss.com\"]\n      }}\n      files={{\n        \"/App.js\": `export default function Example() {\n  return (\n    <div className=\"bg-gray-50\">\n      <div className=\"mx-auto max-w-7xl py-12 px-4 sm:px-6 lg:flex lg:items-center lg:justify-between lg:py-16 lg:px-8\">\n        <h2 className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\n          <span className=\"block\">Ready to dive in?</span>\n          <span className=\"block text-indigo-600\">Start your free trial today.</span>\n        </h2>\n        <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n          <div className=\"inline-flex rounded-md shadow\">\n            <a\n              href=\"#\"\n              className=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-5 py-3 text-base font-medium text-white hover:bg-indigo-700\"\n            >\n              Get started\n            </a>\n          </div>\n          <div className=\"ml-3 inline-flex rounded-md shadow\">\n            <a\n              href=\"#\"\n              className=\"inline-flex items-center justify-center rounded-md border border-transparent bg-white px-5 py-3 text-base font-medium text-indigo-600 hover:bg-indigo-50\"\n            >\n              Learn more\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}`\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Buttons to Sandpack Preview in React\nDESCRIPTION: This example shows how to add custom buttons to the Sandpack preview area using the actionsChildren prop of SandpackPreview. It demonstrates adding a 'Report bug' button that triggers an alert when clicked.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  SandpackProvider,\n  SandpackLayout,\n  SandpackCodeEditor,\n  SandpackPreview,\n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackPreview\n        actionsChildren={\n          <button onClick={() => window.alert(\"Bug reported!\")}>\n            Report bug\n          </button>\n        }\n      />\n      <SandpackCodeEditor />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Customizing Sandpack Editor Settings\nDESCRIPTION: This snippet shows various editor customization options for Sandpack, including line numbers, inline errors, content wrapping, editor height, and width percentage.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      template=\"react\"\n      options={{\n        showLineNumbers: false, // default - true\n        showInlineErrors: true, // default - false\n        wrapContent: true, // default - false\n        editorHeight: 280, // default - 300\n        editorWidthPercentage: 60, // default - 50\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Sandpack Client API Reference\nDESCRIPTION: API reference for the Sandpack clients (SandpackRuntime, SandpackNode, SandpackStatic) and the loadSandpackClient function, showing their method signatures and parameters.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/client.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nSandpackRuntime(\n  iframe: HTMLElement | string,\n  content: SandboxSetup,\n  options?: ClientOptions\n): Client\n\nSandpackNode(\n  iframe: HTMLElement | string,\n  content: SandboxSetup,\n  options?: ClientOptions\n): Client\n\nSandpackStatic(\n  iframe: HTMLElement | string,\n  content: SandboxSetup,\n  options?: ClientOptions\n): Client\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst client = async loadSandpackClient(\n  iframe: HTMLElement | string,\n  content: SandboxSetup,\n  options?: ClientOptions\n): Promise<Client>\n```\n\n----------------------------------------\n\nTITLE: Using useSandpackNavigation Hook for Refresh Functionality in React\nDESCRIPTION: This snippet shows how to use the useSandpackNavigation hook to create a simple refresh button for Sandpack.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useSandpackNavigation } from \"@codesandbox/sandpack-react\";\n\nconst CustomRefreshButton = () => {\n  const { refresh } = useSandpackNavigation();\n  return (\n    <button type=\"button\" onClick={() => refresh()}>\n      Refresh Sandpack\n    </button>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Adding CodeMirror Autocompletion Extension\nDESCRIPTION: Extends the SandpackCodeEditor with CodeMirror autocompletion functionality using @codemirror/autocomplete extensions and keymaps\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport { \n  Sandpack, \n  SandpackProvider, \n  SandpackLayout, \n  SandpackCodeEditor \n} from \"@codesandbox/sandpack-react\";\nimport { autocompletion, completionKeymap } from \"@codemirror/autocomplete\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackCodeEditor\n        extensions={[autocompletion()]}\n        extensionsKeymap={[completionKeymap]}\n      />\n    </SandpackLayout> \n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Setting up a static browser server with TypeScript\nDESCRIPTION: This snippet demonstrates how to set up a static browser server using the PreviewController. It includes creating a file map, initializing the controller with a base URL and file content retrieval function, and creating an iframe to display the preview.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/static.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Map of files\nconst files = new Map<string, string>([\"index.html\", \"Hello world!\"]);\n\n// Setup a preview controller\nconst controller = new PreviewController({\n  baseUrl: \"https://preview.sandpack-static-server.codesandbox.io\",\n  // Function to get the file content for the server this can also be async\n  getFileContent: (filepath) => {\n    const content = files.get(filepath);\n    if (!content) {\n        throw new Error(\"File not found\");\n    }\n    return content;\n  },\n});\n\n// Initialize the preview\n// This will start up a relay frame and return a url which you can use to show the preview\nconst previewUrl = await this.previewController.initPreview();\n\n// Create a preview frame and set the src url to the returned preview url\nconst iframe = document.createElement(\"iframe\");\niframe.setAttribute(\"src\", previewUrl);\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Code Viewer with useSandpack Hook in React\nDESCRIPTION: This example demonstrates how to use the useSandpack hook to create a basic code viewer component that displays the current file's code in a pre tag.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useSandpack } from \"@codesandbox/sandpack-react\";\n\nconst SimpleCodeViewer = () => {\n  const { sandpack } = useSandpack();\n  const { files, activeFile } = sandpack;\n\n  const code = files[activeFile].code;\n  return <pre>{code}</pre>;\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering Multiple Sandpack Previews in React\nDESCRIPTION: This snippet demonstrates how to render multiple SandpackPreview components within a single SandpackProvider. This setup allows for displaying multiple previews of the same application, potentially showing different pages or views simultaneously.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  SandpackProvider,\n  SandpackLayout,\n  SandpackPreview,\n} from \"@codesandbox/sandpack-react\";\n\nexport default () => (\n  <SandpackProvider template=\"react\">\n    <SandpackLayout>\n      <SandpackPreview />\n      <SandpackPreview />\n      <SandpackPreview />\n      <SandpackPreview />\n    </SandpackLayout>\n  </SandpackProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Experimental Bundler with Sandpack Component\nDESCRIPTION: Example demonstrating how to enable the experimental bundler using the standalone Sandpack component. This represents a simpler implementation without child components.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/bundlers.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  template=\"react\"\n  options={{ bundlerURL: \"https://sandpack-bundler.codesandbox.io\" }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring File Properties in Sandpack React Component\nDESCRIPTION: Shows how to set additional properties for files in the Sandpack component, such as readOnly, active, and hidden flags.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/usage.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack\n      files={{\n        '/Wrapper.js': `export default () => \"\";`,\n      \n        '/Button.js': {\n          code: `export default () => {\n  return <button>Hello</button>\n};`,\n          readOnly: true, // Set as non-editable, defaults to `false`\n          active: true, // Set as main file, defaults to `false`\n          hidden: false // Tab visibility, defaults to `false`\n        }\n      }}\n      template=\"react\"\n    />\n  )\n};\n```\n\n----------------------------------------\n\nTITLE: Enabling Static File Serving in Sandpack Component (JSX)\nDESCRIPTION: This snippet demonstrates how to enable the experimental static file serving feature directly in a Sandpack component.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/serving-static-files.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  options={{\n    experimental_enableServiceWorker: true,\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Loading Local Dependencies in Sandpack React Component\nDESCRIPTION: This snippet demonstrates how to load local dependencies in a Sandpack React component by passing them as regular files or using the external resource API. It includes a mock 'fake-library' as an example.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/faq.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default () => {\n  return (\n    <Sandpack\n      files={{\n        \"/App.js\": `import { hello } from \"fake-library\";\n\nexport default () => hello(\"World\");\n`,\n        \"/node_modules/fake-library/package.json\": JSON.stringify({\n  name: \"fake-library\",\n  main: \"./index.js\",\n}),\n        \"/node_modules/fake-library/index.js\": `module.exports = {\n  hello: (name) => \"Hello \" + name\n}`,\n      }}\n      template=\"react\"\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Monaco Editor React Implementation\nDESCRIPTION: Simple example showing how to implement a basic Monaco editor component with React, setting height, default language and initial value\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/integrate-monaco-editor.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from \"react\";\nimport Editor from \"@monaco-editor/react\";\n\nfunction App() {\n  return (\n    <Editor\n      height=\"90vh\"\n      defaultLanguage=\"javascript\"\n      defaultValue=\"// some comment\"\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack Autorun and Auto Reload\nDESCRIPTION: This example demonstrates how to configure the autorun and auto reload options in Sandpack, controlling when the bundling process starts and how changes are reflected.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      template=\"react\"\n      options={{\n        autorun: false,\n        autoReload: false\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack with Local Dependencies in JSX\nDESCRIPTION: Complete example of setting up Sandpack with local dependencies by creating virtual node modules. It demonstrates how to use the imported raw bundle with a fake package.json and the main library file.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/local-dependencies.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport designSystemRaw from \"../design-system/build-sandpack?raw\";\n\n<Sandpack\n  files={{\n    \"/App.tsx\": `import { Button, Tag } from \"@internals/ds\";\n\nexport default function Sample() {\n  return (\n    <>\n      <Button type=\"primary\">Button1</Button>\n      <Button type=\"secondary\">Button2</Button>\n      <Tag>Tag</Tag>\n    </>\n  );\n}\n`,\n    \"/node_modules/@internals/design-system/package.json\": {\n      hidden: true,\n      code: JSON.stringify({\n        name: \"@design-system\",\n        main: \"./index.js\",\n      }),\n    },\n    \"/node_modules/@internals/design-system/index.js\": {\n      hidden: true,\n      code: designSystemRaw,\n    },\n  }}\n  template=\"react-vite\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Applying GitHub Light Theme in Sandpack\nDESCRIPTION: Example showing how to import and apply the githubLight theme to a Sandpack component using the @codesandbox/sandpack-themes package.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-themes/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { githubLight } from \"@codesandbox/sandpack-themes\";\n\n<Sandpack theme={githubLight} />;\n```\n\n----------------------------------------\n\nTITLE: Integrating AceEditor with useActiveCode Hook in React\nDESCRIPTION: This example demonstrates how to use the useActiveCode hook to integrate an AceEditor instance with Sandpack state.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useActiveCode } from \"@codesandbox/sandpack-react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\n\nconst CustomAceEditor = () => {\n  const { code, updateCode } = useActiveCode();\n\n  return (\n    <AceEditor\n      mode=\"javascript\"\n      defaultValue={code}\n      onChange={updateCode}\n      fontSize={14}\n      height=\"300px\"\n      width=\"100%\"\n    />\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Sandpack CDN Integration\nDESCRIPTION: Complete HTML template for using Sandpack via CDN, including import maps and basic React setup\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/index.mdx#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n\n    <script type=\"importmap\">\n      {\n        \"imports\": {\n          \"react\": \"https://esm.sh/react@18.2.0\",\n          \"react-dom\": \"https://esm.sh/react-dom@18.2.0\",\n          \"react-dom/\": \"https://esm.sh/react-dom@18.2.0/\",\n          \"@codesandbox/sandpack-react\": \"https://esm.sh/@codesandbox/sandpack-react@2.8.0\"\n        }\n      }\n    </script>\n\n    <script type=\"module\">\n      import React from \"react\";\n      import { createRoot } from \"react-dom/client\";\n      import { Sandpack } from \"@codesandbox/sandpack-react\";\n\n      const root = createRoot(document.getElementById(\"root\"));\n      const sandpackComponent = React.createElement(\n        Sandpack,\n        { template: \"react\" },\n        null\n      );\n      root.render(sandpackComponent);\n    </script>\n  </head>\n\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Sandpack Theme\nDESCRIPTION: Example showing how to create and export a custom theme for Sandpack. The theme must be defined as a TypeScript object implementing the SandpackTheme interface.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport type { SandpackTheme } from \"./types\";\n\nexport const themeName: SandpackTheme = {\n  ...themeObject,\n};\n```\n\n----------------------------------------\n\nTITLE: Enabling Sandpack Navigator\nDESCRIPTION: This snippet shows how to enable the full browser navigator component in Sandpack, which includes back, forward, and refresh buttons, as well as a URL input.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      template=\"react\"\n      options={{\n        showNavigator: true,\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Sandpack Provider Setup with Monaco Editor\nDESCRIPTION: Example showing how to set up a Sandpack environment with the custom Monaco editor component and preview panel\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/integrate-monaco-editor.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nexport default function MySandpack() {\n  return (\n    <SandpackProvider template=\"react\" theme=\"dark\">\n      <SandpackLayout>\n        <MonacoEditor /> // Your Monaco Editor Component\n        <SandpackPreview style={{ height: \"100vh\" }} />\n      </SandpackLayout>\n    </SandpackProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack Layout Mode\nDESCRIPTION: This example demonstrates how to set the layout mode for the Sandpack preset component, choosing between preview, tests, or console modes.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      template=\"node\"\n      options={{\n        layout: \"console\", // preview | tests | console\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack Tabs\nDESCRIPTION: This example demonstrates how to configure tab display and closability in Sandpack, allowing for more flexible file management in the UI.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function App() {\n  return (\n    <Sandpack \n      template=\"react\"\n      options={{\n        showTabs: true,\n        closableTabs: true,\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Sandpack Client Method Signatures\nDESCRIPTION: Method signatures for various client methods including updateSandbox, updateOptions, dispatch, listen, and getCodeSandboxURL.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/client.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nclient.updateSandbox(content: SandboxSetup): void\n```\n\nLANGUAGE: javascript\nCODE:\n```\nclient.updateOptions(options: ClientOptions): void\n```\n\nLANGUAGE: javascript\nCODE:\n```\nclient.dispatch(data: any): void\n```\n\nLANGUAGE: javascript\nCODE:\n```\nclient.listen(callback: (message: any) => void): void\n```\n\nLANGUAGE: javascript\nCODE:\n```\nclient.getCodeSandboxURL(): {\n  sandboxId: string,\n  editorUrl: string,\n  embedUrl: string,\n}\n```\n\n----------------------------------------\n\nTITLE: Migration Example - SandpackProvider (After)\nDESCRIPTION: Shows the new way of configuring SandpackProvider with updated props\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v1.mdx#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n// Now\n<SandpackProvider\n  customSetup={{ dependencies: {} }}\n  files={{ \"/src/App.vue\": \"\" }}\n  options={{\n    activeFile: \"/src/App.vue\", // used to be activePath\n    visibleFiles: [\"/src/App.vue\"], // used to be openPaths\n  }}\n  template=\"vue\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Next.js App Directory Sandpack CSS Component\nDESCRIPTION: Client component for Next.js app directory that injects Sandpack styles server-side using useServerInsertedHTML hook.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/ssr.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"use client\";\n\nimport { getSandpackCssText } from \"@codesandbox/sandpack-react\";\nimport { useServerInsertedHTML } from \"next/navigation\";\n\n/**\n * Ensures CSSinJS styles are loaded server side.\n */\nexport const SandPackCSS = () => {\n  useServerInsertedHTML(() => {\n    return (\n      <style\n        dangerouslySetInnerHTML={{ __html: getSandpackCssText() }}\n        id=\"sandpack\"\n      />\n    );\n  });\n  return null;\n};\n```\n\n----------------------------------------\n\nTITLE: Sandpack Client Interface Definitions\nDESCRIPTION: TypeScript interface definitions for SandboxSetup and ClientOptions, detailing the structure and properties of these objects used in the Sandpack Client.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/client.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  /**\n   * Files, keys are paths.\n  **/\n  files: {\n    [path: string]: {\n      code: string\n    }\n  },\n  /**\n   * Dependencies; supports npm and GitHub dependencies\n  **/\n  dependencies?: {\n    [dependencyName: string]: string\n  },\n  /**\n   * Default file to evaluate\n  **/\n  entry?: string,\n  /**\n   * The sandbox template to use; this is inferred from the files and package.json if not specified\n  **/\n  template?: SandpackTemplate\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  /**\n   * Paths to external resources\n   */\n  externalResources?: string[];\n  /**\n   * Location of the bundler. Defaults to `${version}-sandpack.codesandbox.io`\n   */\n  bundlerURL?: string;\n  /**\n   * Width/Height of the iframe.\n   */\n  width?: string;\n  height?: string;\n  /**\n   * If the bundler should skip the third step, which is evaluation. \n   * Useful if you only want to see transpiled results.\n   */\n  skipEval?: boolean;\n  /**\n   * Boolean flags to trigger certain UI elements in the bundler\n   */\n  showOpenInCodeSandbox?: boolean;\n  showErrorScreen?: boolean;\n  showLoadingScreen?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack Export Options\nDESCRIPTION: Example showing how to configure Sandpack for exporting sandboxes to CodeSandbox using an API token. Includes options for setting privacy level of exported sandboxes.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/private-packages.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack \n  customSetup={{\n    exportOptions: {\n      apiToken: \"<API-TOKEN>\",\n      privacy: \"private\", // \"public\" | \"private\"\n    }\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding Stream Language Mode Support\nDESCRIPTION: Shows how to add support for stream language modes like shell using LanguageSupport and StreamLanguage\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nimport { LanguageSupport, StreamLanguage } from \"@codemirror/language\";\nimport { shell } from \"@codemirror/legacy-modes/mode/shell\";\n\n<SandpackProvider>\n  <SandpackCodeEditor\n    additionalLanguages={[\n      {\n        name: \"shell\",\n        extensions: [\"sh\", \"bat\", \"ps1\"],\n        language: new LanguageSupport(StreamLanguage.define(shell)),\n      },\n    ]}\n  />\n</SandpackProvider>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandpack Themes\nDESCRIPTION: Demonstrates how to import and use custom themes from the @codesandbox/sandpack-themes package\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v1.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  theme=\"auto\" // prefer color scheme sensitive\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Experimental Bundler with SandpackProvider\nDESCRIPTION: Example showing how to configure the experimental bundler URL using the SandpackProvider component. This setup enables the new bundler functionality for child components.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/bundlers.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<SandpackProvider\n  template=\"react\"\n  options={{ bundlerURL: \"https://sandpack-bundler.codesandbox.io\" }}\n>\n  {/* Children */}\n</SandpackProvider>\n```\n\n----------------------------------------\n\nTITLE: Advanced CodeMirror Instance Manipulation\nDESCRIPTION: Demonstrates how to interact directly with the CodeMirror instance using the component ref, enabling advanced text manipulation and cursor positioning\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/components.mdx#2025-04-21_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\nimport { EditorSelection } from \"@codemirror/state\";\n\nconst App = () => {\n  const codemirrorInstance = useRef();\n\n  useEffect(() => {\n    // Getting CodeMirror instance\n    const cmInstance = codemirrorInstance.current.getCodemirror();\n\n    if (!cmInstance) return;\n\n    // Current position\n    const currentPosition = cmInstance.state.selection.ranges[0].to;\n\n    // Setting a new position\n    const trans = cmInstance.state.update({\n      selection: EditorSelection.cursor(currentPosition + 1),\n      changes: {\n        from: 0,\n        to: cmInstance.state.doc.length,\n        insert: code,\n      },\n    });\n\n    cmInstance.update([trans]);\n  }, []);\n\n  return (\n    <SandpackProvider template=\"react\">\n      <SandpackCodeEditor ref={codemirrorInstance} />\n    </SandpackProvider>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Sandpack Initialization Mode\nDESCRIPTION: This snippet shows how to set the initialization mode for Sandpack components, controlling when and how they are loaded and unloaded based on viewport visibility.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  options={{\n    initMode: \"user-visible\",\n    initModeObserverOptions: { rootMargin: `1000px 0px` } // `IntersectionObserverInit` options\n  }}\n  template=\"react\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Customizing Sandpack Component Classes with classer\nDESCRIPTION: This snippet demonstrates how to use the 'classer' package to map custom classes to internal Sandpack classes, allowing for custom styling of Sandpack components.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack\n  theme={theme}\n  template=\"react\"\n  options={{\n    classes: {\n      \"sp-wrapper\": \"custom-wrapper\",\n      \"sp-layout\": \"custom-layout\",\n      \"sp-tab-button\": \"custom-tab\",\n    },\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing loadSandpackClient in JavaScript\nDESCRIPTION: Demonstrates how to import and use the new loadSandpackClient function in Sandpack 2.0, replacing the previous SandpackClient class import.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { loadSandpackClient } from \"@codesandbox/sandpack-client\";\n\nconst main = async () => {\n  const client = await loadSandpackClient(myIframe, myFiles, myOptions);\n  \n  // The rest of your code can stay the same\n  client.updateSandbox();\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Unstyled Sandpack Components\nDESCRIPTION: This code snippet shows how to import unstyled Sandpack components, which eliminates all Sandpack CSS styles and allows for complete custom styling.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react/unstyled\";\n\nconst App = () => {\n  return <Sandpack />\n};\n```\n\n----------------------------------------\n\nTITLE: Sandpack Component Usage Example\nDESCRIPTION: Example of using the Sandpack component with dark theme in a Next.js page.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/ssr.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Sandpack theme=\"dark\" />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring tsup for Library Bundling in JavaScript\nDESCRIPTION: Configuration file for tsup that defines how to bundle a TypeScript library. It specifies the entry point, output directory, and other build settings like tree-shaking and minification.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/local-dependencies.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from \"tsup\";\n\nexport default defineConfig([\n  {\n    entry: [\"./design-system/index.ts\"], // your library path\n    treeshake: true,\n    minify: true,\n    verbose: true,\n    dts: true,\n    external: [\"react\", \"react-dom\"],\n    clean: true,\n    outDir: \"./design-system/build-sandpack\", // build output\n  },\n]);\n```\n\n----------------------------------------\n\nTITLE: Basic Sandpack CSS Text Generation\nDESCRIPTION: Basic example of using getSandpackCssText function to generate Sandpack CSS string for server-side rendering.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/ssr.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { getSandpackCssText } from \"@codesandbox/sandpack-react\";\n\nconst cssTextOutput = getSandpackCssText();\n```\n\n----------------------------------------\n\nTITLE: Disabling Resizable Panels in Sandpack\nDESCRIPTION: This snippet shows how to disable the resizable panels feature in the Sandpack preset component, which is enabled by default.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Sandpack options={{ resizablePanels: false }} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Mermaid Sequence Diagram in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the Mermaid component to render a sequence diagram. The diagram illustrates the interaction between Sandpack React, Sandpack Client, and the Bundler.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/architecture/overview.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<Mermaid chart={`\nsequenceDiagram\n    autonumber\n    participant R as Sandpack-react\n    participant C as Sandpack-client\n    \n    Note left of R: <Sandpack />\n    Note right of C: loadSandpackClient(...)\n    Note right of C: Depending on the template/env<br/>loadSandpackClient will return a<br />vm, runtime, static or node client\n    Note right of C: sandpack-client/clients/index.ts\n    R->>+C: Get sandbox context\n    Note over R,C: Based on files, template, and deps, <br/> will be create a SandpackContextInfo.\n    Note right of R: getSandpackStateFromProps(...)\n\n    C->>-R: New client instance\n    Note left of R: new SandpackClient()\n\n    create participant B as Bundler\n    C->>+B: Dispatch sandbox setup\n    B->>+C: Messages with updates\n    Note left of R: Once it's done, show <br/>iframe with preview\n    C->>-R: Done\n\n    C->>+R: Dispatch sandbox setup\n`} />\n```\n\n----------------------------------------\n\nTITLE: Next.js App Directory Root Layout Implementation\nDESCRIPTION: Root layout configuration for Next.js app directory showing how to incorporate Sandpack CSS component.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/ssr.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { SandPackCSS } from \"@/components/sandpack-styles\";\n\nexport const metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode,\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <SandPackCSS />\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Migration Example - Surface API (After)\nDESCRIPTION: Shows the new way of configuring Sandpack using files and options properties\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v1.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n// Now\n<Sandpack\n  files={{ \"/src/App.vue\": \"\" }}\n  options={{ activeFile: \"/src/App.vue\" }}\n  template=\"vue\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Right-to-Left Layout in Sandpack\nDESCRIPTION: This example demonstrates how to enable right-to-left (RTL) layout for Sandpack components, which is useful for languages that read from right to left.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/layout.mdx#2025-04-21_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Sandpack } from \"@codesandbox/sandpack-react\";\nexport default function App() {\n  return (\n    <Sandpack \n      options={{\n        rtl: true, // default false\n      }}\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Migration Example - Surface API (Before)\nDESCRIPTION: Shows the old way of configuring Sandpack using customSetup\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v1.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// Before\n<Sandpack\n  customSetup={{ files: { \"/src/App.vue\": \"\" }, main: \"/src/App.vue\" }}\n  template=\"vue\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Authentication and Package Fetching Flow Diagram in Mermaid\nDESCRIPTION: A sequence diagram illustrating the complete flow of authentication and package fetching for private dependencies, showing interactions between the client domain, Sandpack iframe, CodeSandbox authentication, and API services.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/architecture/private-packages.mdx#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\t\tparticipant U as mydomain.com\n    participant S as teamid.sandpack.codesandbox.io\n    participant C as codesandbox.io\n    participant A as API\n\n    Note over S: <Sandpack teamId=\"\" />\n\n\t  alt Pop-up authentication\n\t    Note over U: 1st step\n\t    S->>+C: Sign-in [team-id]\n\t    C->>-A: GET /auth/sandpack [team-id]\n\t    Note over A: website-url match team config?\n\t    A->>+C: sandpack-token\n\t    C->>-S: sandpack-token\n\t    Note over S: Cookie SameSite=None Secure=true\n\t\tend\n\n    Note over S: Refresh iframe to use the new cookie\n\n    alt Worker\n\t    Note over U: 2nd step\n\t\t\tU --> S: iframe src: teamid.sandpack.codesandbox.io\n\t\t\tS ->>+A: GET /trusted-domains/:team-id\n\t\t\tA ->>-S: List of trusted domains \n\t\t\tS ->> U: CSP: frame-ancestors\n\t\tend\n\n    Note over U: At this point, this domain is a trusted one\n\n    alt Authenticated connection \n\t\t    Note over U: 3rd step: run sandbox\n        U->>+S: Run this sandbox\n        S->>+A: GET /[team-id]/npm_registry\n\t\t\t\tA->>-S: Registry configuration\n        S->>+A: GET /[team-id]/npm_registry/[package]\n\t\t    Note over A: Make sure it renews the token as need\n        A->>-S: Package payload\n    end\n```\n\n----------------------------------------\n\nTITLE: Importing Sandpack Clients Independently in JavaScript\nDESCRIPTION: Shows how to import and use SandpackRuntime and SandpackNode classes directly, bypassing the lazy loading step in Sandpack 2.0.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v2.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { SandpackRuntime } from \"@codesandbox/sandpack-client/clients/runtime\";\nimport { SandpackNode } from \"@codesandbox/sandpack-client/clients/node\";\n\nconst runtimeClient = new SandpackRuntime(/* arguments */)\nconst nodeClient = new SandpackNode(/* arguments */)\n```\n\n----------------------------------------\n\nTITLE: Gatsby Server-Side Rendering Configuration\nDESCRIPTION: Gatsby server-side rendering configuration for injecting Sandpack CSS using gatsby-ssr.js.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/ssr.mdx#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as React from \"react\";\nimport { getSandpackCssText } from \"@codesandbox/sandpack-react\";\n\nexport const onRenderBody = ({ setHeadComponents }) => {\n  setHeadComponents([\n    <style\n      id=\"sandpack\"\n      key=\"sandpack-css\"\n      dangerouslySetInnerHTML={{\n        __html: getSandpackCssText(),\n      }}\n    />,\n  ]);\n};\n```\n\n----------------------------------------\n\nTITLE: Updating API Method Calls in JavaScript\nDESCRIPTION: Illustrates the changes required to update API method calls in Sandpack 2.0, where 'updateSandbox' is renamed to 'updatePreview' and 'cleanup' is renamed to 'destroy'.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v2.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Before\nclient.updateSandbox();\nclient.cleanup();\n\n// Now\nclient.updatePreview();\nclient.destroy();\n```\n\n----------------------------------------\n\nTITLE: Importing Bundled Library as Raw Text in JSX\nDESCRIPTION: Code snippet showing how to import a bundled library file as raw text using the ?raw suffix, which is necessary for consuming it in Sandpack.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/local-dependencies.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport designSystemRaw from \"../design-system/build-sandpack?raw\";\n```\n\n----------------------------------------\n\nTITLE: Migration Example - SandpackProvider (Before)\nDESCRIPTION: Shows the old way of configuring SandpackProvider\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/migration-guide/v1.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n// Before\n<SandpackProvider\n  activePath=\"/src/App.vue\"\n  customSetup={{ files: { \"/src/App.vue\": \"\" }, dependencies: {} }}\n  template=\"vue\"\n  openPaths={[\"/src/App.vue\"]}\n/>\n```\n\n----------------------------------------\n\nTITLE: Worker Trusted Domains Flow Diagram in Mermaid\nDESCRIPTION: A sequence diagram specifically illustrating the trusted domains verification flow in the worker, showing how domains are validated and Content Security Policy headers are applied.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/architecture/private-packages.mdx#2025-04-21_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\t\tparticipant U as mydomain.com\n    participant S as teamid-2-0-0-sandpack.codesandbox.io\n    participant A as API\n\n\t\tU --> S: iframe src: teamid.sandpack.codesandbox.io\n\t\tS ->>+A: GET /trusted-domains/:team-id\n\t\tA ->>-S: List of trusted domains \n\t\tS ->> U: CSP: frame-ancestors\n```\n\n----------------------------------------\n\nTITLE: Importing Mermaid Component in JavaScript\nDESCRIPTION: This code snippet imports the Mermaid component from the mdx-mermaid library, which is used to render Mermaid diagrams in Markdown.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/architecture/overview.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Mermaid } from 'mdx-mermaid/Mermaid';\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack Client with Package Managers\nDESCRIPTION: Commands to install the @codesandbox/sandpack-client package using npm, yarn, or pnpm.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/client.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i @codesandbox/sandpack-client\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @codesandbox/sandpack-client\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @codesandbox/sandpack-client\n```\n\n----------------------------------------\n\nTITLE: Next.js Pages Directory Document Setup\nDESCRIPTION: Configuration for Next.js pages directory showing how to inject Sandpack CSS in the document head.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/ssr.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { getSandpackCssText } from \"@codesandbox/sandpack-react\";\nimport { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html>\n      <Head>\n        <style\n          dangerouslySetInnerHTML={{ __html: getSandpackCssText() }}\n          id=\"sandpack\"\n          key=\"sandpack-css\"\n        />\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Sandpack Components in React\nDESCRIPTION: This snippet shows how to import essential Sandpack components from the @codesandbox/sandpack-react package.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/hooks.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  SandpackProvider,\n  SandpackLayout,\n  SandpackCodeEditor,\n} from \"@codesandbox/sandpack-react\";\nimport { Callout } from \"nextra-theme-docs\";\n```\n\n----------------------------------------\n\nTITLE: Version 1.4.0 Changelog Entry\nDESCRIPTION: Changelog entry documenting the introduction of custom npm registries feature in version 1.4.0, released on August 11, 2022.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/examples/custom-npm-registry/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [1.4.0](https://github.com/danilowoz/sandpack-proxy/compare/v1.3.5...v1.4.0) (2022-08-11)\n\n### Features\n\n* **custom-setup:** introduce custom npm registries ([#542](https://github.com/danilowoz/sandpack-proxy/issues/542)) ([1fd8b99](https://github.com/danilowoz/sandpack-proxy/commit/1fd8b997e3e95bc76026e3de1a5c267859d92c82))\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack via Yarn\nDESCRIPTION: Command to install the Sandpack React library using Yarn package manager\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/index.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @codesandbox/sandpack-react\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack via PNPM\nDESCRIPTION: Command to install the Sandpack React library using PNPM package manager\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/index.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @codesandbox/sandpack-react\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack with npm\nDESCRIPTION: Command to install the Sandpack dependency using npm package manager.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/quickstart.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i @codesandbox/sandpack-react\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack via NPM\nDESCRIPTION: Command to install the Sandpack React library using NPM package manager\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/getting-started/index.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @codesandbox/sandpack-react\n```\n\n----------------------------------------\n\nTITLE: Running Sandpack Landing Page\nDESCRIPTION: Commands to run the Next.js-powered Sandpack landing page from root or landing folder.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev:landing\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Sandpack Documentation Server\nDESCRIPTION: Commands to run the Sandpack documentation server either from root or docs folder.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev:docs\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn run serve\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack with yarn\nDESCRIPTION: Command to install the Sandpack dependency using yarn package manager.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/quickstart.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @codesandbox/sandpack-react\n```\n\n----------------------------------------\n\nTITLE: Installing Sandpack with pnpm\nDESCRIPTION: Command to install the Sandpack dependency using pnpm package manager.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/quickstart.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @codesandbox/sandpack-react\n```\n\n----------------------------------------\n\nTITLE: Running tsup Bundler in Bash\nDESCRIPTION: Command to execute tsup in your library's directory, which generates the bundled output in the specified build directory.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/local-dependencies.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ tsup\n```\n\n----------------------------------------\n\nTITLE: Installing Monaco Editor React Package\nDESCRIPTION: Command to install the Monaco Editor React wrapper library using yarn package manager\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/integrate-monaco-editor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @monaco-editor/react\n```\n\n----------------------------------------\n\nTITLE: Installing static-browser-server with npm\nDESCRIPTION: Command to install the static-browser-server package using npm.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/static.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i static-browser-server\n```\n\n----------------------------------------\n\nTITLE: Installing tsup as Development Dependency in Bash\nDESCRIPTION: Command to install tsup as a development dependency in your project, which will be used to bundle TypeScript libraries.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/guides/local-dependencies.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install --save-dev tsup\n```\n\n----------------------------------------\n\nTITLE: Installing static-browser-server with yarn\nDESCRIPTION: Command to install the static-browser-server package using yarn.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/advanced-usage/static.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add static-browser-server\n```\n\n----------------------------------------\n\nTITLE: Providing Example Link for Nextra Documentation Theme\nDESCRIPTION: This code snippet demonstrates how to create a markdown link to an example implementation of the Nextra documentation theme.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/codesandbox-theme-docs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[nextra.vercel.app](https://nextra.vercel.app/)\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry\nDESCRIPTION: Markdown formatted changelog documenting version updates, bug fixes and features for the Sandpack project. Includes commit references, issue links and semantic versioning.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-client/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n## [2.19.8](https://github.com/codesandbox/sandpack/compare/v2.19.7...v2.19.8) (2024-09-12)\n\n### Bug Fixes\n\n- **sandpack-id:** generate new bundler id based on client version ([#1202](https://github.com/codesandbox/sandpack/issues/1202)) ([dbb882e](https://github.com/codesandbox/sandpack/commit/dbb882eec6963a11c2eac7293c0891b501f9a9fe))\n\n## [2.19.7](https://github.com/codesandbox/sandpack/compare/v2.19.6...v2.19.7) (2024-09-11)\n\n### Bug Fixes\n\n- **client:** postcss transpile to angular template ([#1201](https://github.com/codesandbox/sandpack/issues/1201)) ([0b57de6](https://github.com/codesandbox/sandpack/commit/0b57de653d3bea38917c2665aae3942c87a212ff))\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with Yarn in Next.js Project\nDESCRIPTION: Commands to start the development server for a Next.js project. The first command runs from the root folder, while the second runs from the website/landing folder.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/landing/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev:landing // root folder\n# or\nyarn dev // website/landing folder\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all Sandpack project dependencies using Yarn.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Semantic Version Headers in Changelog\nDESCRIPTION: Version headers following semantic versioning format with links to GitHub comparison views\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-client/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.6.5](https://github.com/codesandbox/sandpack/compare/v2.6.4...v2.6.5) (2023-05-19)\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Format\nDESCRIPTION: The structure of a single changelog entry showing version comparison links and version bump notes.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.5](https://github.com/codesandbox/sandpack/compare/v2.0.4...v2.0.5) (2023-02-16)\n\n**Note:** Version bump only for package sandpack-docs\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.6.0\nDESCRIPTION: Changelog entry documenting the addition of GitLab to users section in version 0.6.0\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/landing/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [0.6.0](https://github.com/codesandbox/sandpack/compare/v0.5.4...v0.6.0) (2021-11-22)\n\n### Features\n\n* landing - adds gitlab to users section ([#164](https://github.com/codesandbox/sandpack/issues/164)) ([fa885a1](https://github.com/codesandbox/sandpack/commit/fa885a110207cca5db26498bd69f89adc93fbcb4))\n```\n\n----------------------------------------\n\nTITLE: Building Sandpack Dependencies\nDESCRIPTION: Command to build all Sandpack dependencies before starting development.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Heading for Nextra Documentation Theme\nDESCRIPTION: This code snippet shows the main heading of the README file, introducing the nextra-theme-docs package.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/codesandbox-theme-docs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# nextra-theme-docs\n```\n\n----------------------------------------\n\nTITLE: Running Sandpack React Development Mode\nDESCRIPTION: Command to run Sandpack React in development mode using Storybook.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev:react\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.5.0\nDESCRIPTION: Changelog entry noting the addition of advanced usage animated examples in version 0.5.0\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/landing/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# [0.5.0](https://github.com/codesandbox/sandpack/compare/v0.4.1...v0.5.0) (2021-11-19)\n\n### Features\n\n* **landing:** advanced usage animated examples ([#157](https://github.com/codesandbox/sandpack/issues/157)) ([fde82a5](https://github.com/codesandbox/sandpack/commit/fde82a5ee120f46cd7fa776a57ff35167e98f0f8))\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.4.0\nDESCRIPTION: Changelog entry documenting miscellaneous tweaks to the landing page in version 0.4.0\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/landing/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# [0.4.0](https://github.com/codesandbox/sandpack/compare/v0.3.10...v0.4.0) (2021-11-18)\n\n### Features\n\n* **landing:** misc tweaks ([#156](https://github.com/codesandbox/sandpack/issues/156)) ([37109ad](https://github.com/codesandbox/sandpack/commit/37109ad77881e39fd8f2fc777e9407861e888bdf))\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format\nDESCRIPTION: Standard format for changelog entries including type of change, description and PR/commit references\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-client/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- **package.json:** update @codesandbox/nodebox and outvariant versions ([#942](https://github.com/codesandbox/sandpack/issues/942)) ([e20d475](https://github.com/codesandbox/sandpack/commit/e20d475fdd5bd63c6597e4ba9367d7f9c49aa3ff))\n```\n\n----------------------------------------\n\nTITLE: Importing CodeBlock Component in React\nDESCRIPTION: This code snippet shows how to import the CodeBlock component from a relative path in a React application.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/faq.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CodeBlock } from \"../../components/CodeBlock\";\n```\n\n----------------------------------------\n\nTITLE: Referencing Git Commit Hash in Markdown\nDESCRIPTION: Demonstrates how to include a Git commit hash in a Markdown changelog entry.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-react/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n([8b21ed6](https://github.com/codesandbox/sandpack/commit/8b21ed6c733de54a7866e9796421368f61bbc2a4))\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Using NVM\nDESCRIPTION: Command to use Node.js version 14 via NVM for Sandpack development.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/website/docs/src/pages/resources/community.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm use 14\n```\n\n----------------------------------------\n\nTITLE: Referencing GitHub Issue in Markdown\nDESCRIPTION: Shows how to reference a GitHub issue number in a Markdown changelog entry.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-react/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n([#585](https://github.com/codesandbox/sandpack/issues/585))\n```\n\n----------------------------------------\n\nTITLE: Markdown Heading for Version Number\nDESCRIPTION: Shows the format for a version number heading in a Markdown changelog.\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/sandpack-react/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.8.3](https://github.com/codesandbox/sandpack/compare/v1.8.2...v1.8.3) (2022-09-27)\n```\n\n----------------------------------------\n\nTITLE: Git Commit Hash Reference\nDESCRIPTION: Git commit hash link showing changes between version 2.2.1 and 2.2.2\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[2.2.2](https://github.com/codesandbox/sandpack/compare/v2.2.1...v2.2.2)\n```\n\n----------------------------------------\n\nTITLE: Git Issue Reference\nDESCRIPTION: Reference to GitHub issue #866 with commit hash\nSOURCE: https://github.com/codesandbox/sandpack/blob/main/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#866](https://github.com/codesandbox/sandpack/issues/866)) ([c8afd3e](https://github.com/codesandbox/sandpack/commit/c8afd3e35b7ee3021dc5c10ab1949e16f05cbaad))\n```"
  }
]
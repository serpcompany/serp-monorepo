[
  {
    "owner": "spencerlepine",
    "repo": "printify-sdk-js",
    "content": "TITLE: Initializing Printify SDK with JavaScript\nDESCRIPTION: Example showing how to initialize and use the Printify SDK with ES modules, including setting up the client and making an API request for orders.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Printify from 'printify-sdk-js';\n\nconst printify = new Printify({\n  accessToken: process.env.PRINTIFY_API_TOKEN, // generate a token: https://printify.com/app/account/api\n  shopId: '123456', // (optional) find using `printify.shops.list()`\n  enableLogging: true,\n});\n\nconst orders = await printify.orders.list({ limit: 5, status: 'fulfilled' });\nconsole.log(orders); // { current_page: 1, data: [{ id: \"5a9\", address_to: {}, line_items: [], total_price: 2200, status: \"fulfilled\"  } ]\n```\n\n----------------------------------------\n\nTITLE: Installing Printify SDK via Package Managers\nDESCRIPTION: Commands for installing the printify-sdk-js package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install printify-sdk-js\n# or\nyarn add printify-sdk-js\n# or\npnpm add printify-sdk-js\n```\n\n----------------------------------------\n\nTITLE: Using Printify SDK with TypeScript\nDESCRIPTION: Example demonstrating TypeScript usage of the SDK, including type imports and webhook listing functionality.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport Printify, { Webhook } from 'printify-sdk-js';\n\nconst printify = new Printify({\n  accessToken: process.env.PRINTIFY_API_TOKEN,\n  shopId: '123456',\n});\n\nconst webhooks: Webhook[] = await printify.webhooks.list();\nconsole.log(webhooks[0]); // { \"topic\": \"order:created\", \"url\": \"https://example.com/webhooks/order/created\", \"shop_id\": \"1\", \"id\": \"5cb87a8cd490a2ccb256cec4\" }\n```\n\n----------------------------------------\n\nTITLE: Using Printify SDK with CommonJS\nDESCRIPTION: Example showing how to use the SDK with CommonJS require syntax and Promise-based API calls.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/README.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst Printify = require('printify-sdk-js');\n\nconst printify = new Printify({\n  accessToken: process.env.PRINTIFY_API_TOKEN,\n  shopId: '123456',\n});\n\nprintify.orders\n  .list({ limit: 5, status: 'fulfilled' })\n  .then(orders => console.log(orders))\n  .catch(error => console.error(error));\n```\n\n----------------------------------------\n\nTITLE: Configuring Printify SDK Options\nDESCRIPTION: Example showing all available configuration options when initializing the Printify SDK client.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/README.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport Printify from 'printify-sdk-js';\n\nconst printify = new Printify({\n  accessToken: process.env.PRINTIFY_API_TOKEN,\n  shopId: '123456',\n  enableLogging: true,\n  host: 'api.printify.com',\n  timeout: 5000, // in ms\n});\n```\n\n----------------------------------------\n\nTITLE: Submitting Order by Product ID in Printify SDK\nDESCRIPTION: Example showing how to submit a basic order using product ID and variant ID. This creates a draft order that can be sent to production separately. The response returns the created order ID.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n// Example #1 - Submit order by productId\n\nconst data = {\n  external_id: '2750e210-39bb-11e9-a503-452618153e4a',\n  label: '00012',\n  line_items: [{ product_id: '5bfd0b66a342bcc9b5563216', variant_id: 17887, quantity: 1 }],\n  shipping_method: 1,\n  is_printify_express: false,\n  is_economy_shipping: false,\n  send_shipping_notification: false,\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@msn.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\nawait printify.orders.submit(data);\n// response: { \"id\": \"5a96f649b2439217d070f507\" }\n```\n\n----------------------------------------\n\nTITLE: Creating Products with Printify SDK\nDESCRIPTION: Creates a new product with specified title, description, blueprint ID, print provider, variants and print areas. Requires product data object with all necessary fields.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = {\n  \"title\": \"Product\",\n  \"description\": \"Good product\",\n  \"blueprint_id\": 384,\n  \"print_provider_id\": 1,\n  \"variants\": [\n    { \"id\": 45740, \"price\": 400, \"is_enabled\": true },\n    { \"id\": 45742, \"price\": 400, \"is_enabled\": true },\n    { \"id\": 45744, \"price\": 400, \"is_enabled\": false },\n    { \"id\": 45746, \"price\": 400, \"is_enabled\": false }\n  ],\n  \"print_areas\": [\n    {\n      \"variant_ids\": [45740, 45742, 45744, 45746],\n      \"placeholders\": [{ \"position\": \"front\", \"images\": [{ \"id\": \"5d15ca551163cde90d7b2203\", \"x\": 0.5, \"y\": 0.5, \"scale\": 1, \"angle\": 0 }] }]\n    }\n  ]\n}\n\nawait printify.products.create(data);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Shop List with Printify SDK in JavaScript\nDESCRIPTION: Makes a GET request to /v1/shops.json to retrieve a list of shops in the Printify account. Returns shop details including ID, title, and sales channel status.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.shops.list();\n```\n\nLANGUAGE: json\nCODE:\n```\n[ { \"id\": 5432, \"title\": \"My new store\", \"sales_channel\": \"My Sales Channel\" }, { \"id\": 9876, \"title\": \"My other new\nstore\", \"sales_channel\": \"disconnected\" } ]\n```\n\n----------------------------------------\n\nTITLE: Submitting Order with External Image URL (Simple Positioning) in Printify SDK\nDESCRIPTION: Example demonstrating how to submit an order using an external image URL with simple positioning. This approach specifies the print provider ID, blueprint ID, and variant ID instead of product ID.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n// Example #2 - Submit order by external image URL (simple image positioning)\n\nconst data = {\n  external_id: '2750e210-39bb-11e9-a503-452618153e5a',\n  label: '00012',\n  line_items: [{ print_provider_id: 5, blueprint_id: 9, variant_id: 17887, print_areas: { front: 'https://images.example.com/image.png' }, quantity: 1 }],\n  shipping_method: 1,\n  is_printify_express: false,\n  is_economy_shipping: false,\n  send_shipping_notification: false,\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@msn.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\nawait printify.orders.submit(data);\n// response: { \"id\": \"5a96f649b2439217d070f507\" }\n```\n\n----------------------------------------\n\nTITLE: Submitting Order with Advanced Image Positioning in Printify SDK\nDESCRIPTION: Example showing how to submit an order with advanced image positioning parameters. This approach uses an array of image objects with scale, x/y coordinates, and angle properties for precise placement.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n// Example #3 - Submit order by external image URL (advanced image positioning)\n\nconst data = {\n  external_id: '2750e210-39bb-11e9-a503-452618153e5a',\n  label: '00012',\n  line_items: [\n    {\n      print_provider_id: 5,\n      blueprint_id: 9,\n      variant_id: 17887,\n      print_areas: {\n        front: [\n          { src: 'https://images.example.com/image.png', scale: 0.15, x: 0.8, y: 0.34, angle: 0.34 },\n          { src: 'https://images.example.com/image.png', scale: 1, x: 0.5, y: 0.5, angle: 1 },\n        ],\n      },\n      quantity: 1,\n    },\n  ],\n  shipping_method: 1,\n  is_printify_express: false,\n  is_economy_shipping: false,\n  send_shipping_notification: false,\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@msn.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\nawait printify.orders.submit(data);\n// response: { \"id\": \"5a96f649b2439217d070f507\" }\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image to Printify API\nDESCRIPTION: Uploads an image to Printify either via a URL (recommended for files larger than 5MB) or using base64-encoded content. Returns the image metadata upon successful upload.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { file_name: '1x1-ff00007f.png', url: 'http://png-pixel.com/1x1-ff00007f.png' };\n\n// ALTERNATE: upload the image content in base64 format (we recommend use URLs, this will be deprecated in the future)\n// const data = { \"file_name\": \"image.png\", \"contents\": \"<base-64-encoded-content>\" }\n\nawait printify.uploads.uploadImage(data);\n```\n\n----------------------------------------\n\nTITLE: Listing Products with Printify SDK\nDESCRIPTION: Retrieves a paginated list of all products with options for page number and limit. Default returns 10 products with a maximum of 100 per page. The response includes product details, variants, images, and pagination metadata.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.products.list();\nawait printify.products.list({ page: 2 });\nawait printify.products.list({ limit: 5 });\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"current_page\": 2,\n  \"data\": [\n    {\n      \"id\": \"5d39b159e7c48c000728c89f\",\n      \"title\": \"Mug 11oz\",\n      \"description\": \"Perfect for coffee, tea and hot chocolate, this classic shape white, durable ceramic mug in the most popular size. High quality sublimation printing makes it an appreciated gift to every true hot beverage lover.Perfect for coffee, tea and hot chocolate, this classic shape white, durable ceramic mug in the most popular size. High quality sublimation printing makes it an appreciated gift to every true hot beverage lover. .: White ceramic .: 11 oz (0.33 l) .: Rounded corners .: C-Handle\",\n      \"tags\": [\"Home & Living\", \"Mugs\", \"11 oz\", \"White base\", \"Sublimation\"],\n      \"options\": [{ \"name\": \"Sizes\", \"type\": \"size\", \"values\": [{ \"id\": 1189, \"title\": \"11oz\" }] }],\n      \"variants\": [\n        {\n          \"id\": 33719,\n          \"sku\": \"866366009\",\n          \"cost\": 516,\n          \"price\": 860,\n          \"title\": \"11oz\",\n          \"grams\": 460,\n          \"is_enabled\": true,\n          \"is_default\": true,\n          \"is_available\": true,\n          \"is_printify_express_eligible\": true,\n          \"options\": [1189]\n        }\n      ],\n      \"images\": [\n        { \"src\": \"https://images.printify.com/mockup/5d39b159e7c48c000728c89f/33719/145/mug-11oz.jpg\", \"variant_ids\": [33719], \"position\": \"front\", \"is_default\": false },\n        { \"src\": \"https://images.printify.com/mockup/5d39b159e7c48c000728c89f/33719/146/mug-11oz.jpg\", \"variant_ids\": [33719], \"position\": \"other\", \"is_default\": false },\n        { \"src\": \"https://images.printify.com/mockup/5d39b159e7c48c000728c89f/33719/147/mug-11oz.jpg\", \"variant_ids\": [33719], \"position\": \"other\", \"is_default\": true }\n      ],\n      \"created_at\": \"2019-07-25 13:40:41+00:00\",\n      \"updated_at\": \"2019-07-25 13:40:59+00:00\",\n      \"visible\": true,\n      \"is_locked\": false,\n      \"is_printify_express_eligible\": true,\n      \"is_printify_express_enabled\": true,\n      \"is_economy_shipping_eligible\": true,\n      \"is_economy_shipping_enabled\": true,\n      \"blueprint_id\": 68,\n      \"user_id\": 1337,\n      \"shop_id\": 1337,\n      \"print_provider_id\": 9,\n      \"print_areas\": [\n        {\n          \"variant_ids\": [33719],\n          \"placeholders\": [\n            {\n              \"position\": \"front\",\n              \"images\": [\n                { \"id\": \"5c7665205342af161e1cb26e\", \"name\": \"Test.png\", \"type\": \"image/png\", \"height\": 5850, \"width\": 4350, \"x\": 0.5, \"y\": 0.5, \"scale\": 1.01, \"angle\": 0 }\n              ]\n            }\n          ],\n          \"background\": \"#ffffff\"\n        }\n      ],\n      \"sales_channel_properties\": []\n    }\n  ],\n  \"first_page_url\": \"/?page=1\",\n  \"from\": 2,\n  \"last_page\": 22,\n  \"last_page_url\": \"/?page=22\",\n  \"next_page_url\": \"/?page=3\",\n  \"path\": \"/\",\n  \"per_page\": 1,\n  \"prev_page_url\": \"/?page=1\",\n  \"to\": 2,\n  \"total\": 22\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Product with Printify SDK\nDESCRIPTION: Gets detailed information for a specific product using its ID. Returns comprehensive product data including variants, images, print areas, and shipping eligibility information.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.products.getOne(productId);\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"5d39b159e7c48c000728c89f\",\n  \"title\": \"Mug 11oz\",\n  \"description\": \"Perfect for coffee, tea and hot chocolate, this classic shape white, durable ceramic mug in the most popular size. High quality sublimation printing makes it an appreciated gift to every true hot beverage lover.Perfect for coffee, tea and hot chocolate, this classic shape white, durable ceramic mug in the most popular size. High quality sublimation printing makes it an appreciated gift to every true hot beverage lover. .: White ceramic .: 11 oz (0.33 l) .: Rounded corners .: C-Handle\",\n  \"tags\": [\"Home & Living\", \"Mugs\", \"11 oz\", \"White base\", \"Sublimation\"],\n  \"options\": [{ \"name\": \"Sizes\", \"type\": \"size\", \"values\": [{ \"id\": 1189, \"title\": \"11oz\" }] }],\n  \"variants\": [\n    {\n      \"id\": 33719,\n      \"sku\": \"866366009\",\n      \"cost\": 516,\n      \"price\": 860,\n      \"title\": \"11oz\",\n      \"grams\": 460,\n      \"is_enabled\": true,\n      \"is_default\": true,\n      \"is_available\": true,\n      \"is_printify_express_eligible\": true,\n      \"options\": [1189]\n    }\n  ],\n  \"images\": [\n    { \"src\": \"https://images.printify.com/mockup/5d39b159e7c48c000728c89f/33719/145/mug-11oz.jpg\", \"variant_ids\": [33719], \"position\": \"front\", \"is_default\": false },\n    { \"src\": \"https://images.printify.com/mockup/5d39b159e7c48c000728c89f/33719/146/mug-11oz.jpg\", \"variant_ids\": [33719], \"position\": \"other\", \"is_default\": false },\n    { \"src\": \"https://images.printify.com/mockup/5d39b159e7c48c000728c89f/33719/147/mug-11oz.jpg\", \"variant_ids\": [33719], \"position\": \"other\", \"is_default\": true }\n  ],\n  \"created_at\": \"2019-07-25 13:40:41+00:00\",\n  \"updated_at\": \"2019-07-25 13:40:59+00:00\",\n  \"visible\": true,\n  \"is_locked\": false,\n  \"is_printify_express_eligible\": true,\n  \"is_printify_express_enabled\": true,\n  \"is_economy_shipping_eligible\": true,\n  \"is_economy_shipping_enabled\": true,\n  \"blueprint_id\": 68,\n  \"user_id\": 1337,\n  \"shop_id\": 1337,\n  \"print_provider_id\": 9,\n  \"print_areas\": [\n    {\n      \"variant_ids\": [33719],\n      \"placeholders\": [\n        {\n          \"position\": \"front\",\n          \"images\": [{ \"id\": \"5c7665205342af161e1cb26e\", \"name\": \"Test.png\", \"type\": \"image/png\", \"height\": 5850, \"width\": 4350, \"x\": 0.5, \"y\": 0.5, \"scale\": 1.01, \"angle\": 0 }]\n        }\n      ],\n      \"background\": \"#ffffff\"\n    }\n  ],\n  \"sales_channel_properties\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Products with Printify SDK\nDESCRIPTION: Updates an existing product by ID. Accepts a data object containing the fields to update.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { title: 'Product' };\nawait printify.products.updateOne('productId', data);\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Order using printify.orders.getOne(orderId)\nDESCRIPTION: Demonstrates how to retrieve a specific order by its ID. This method makes a GET request to the /v1/shops/{shop_id}/orders/{order_id}.json endpoint to fetch the complete details of a single order.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.getOne(orderId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders with Parameters using printify.orders.list()\nDESCRIPTION: Demonstrates how to retrieve a list of orders with various filter parameters like page number, limit, status, and SKU. This method makes a GET request to the /v1/shops/{shop_id}/orders.json endpoint with the specified parameters.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.list({ page: 2 });\nawait printify.orders.list({ limit: 5 });\nawait printify.orders.list({ status: 'fulfilled' });\nawait printify.orders.list({ sku: '168699843' });\n```\n\n----------------------------------------\n\nTITLE: Retrieving Available Blueprints with Printify SDK in JavaScript\nDESCRIPTION: Makes a GET request to /v1/catalog/blueprints.json to retrieve a list of all available product blueprints. Returns details including ID, title, description, brand, model, and images.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.listBlueprints();\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": 3,\n    \"title\": \"Kids Regular Fit Tee\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Delta\",\n    \"model\": \"11736\",\n    \"images\": [\"https://images.printify.com/5853fe7dce46f30f8327f5cd\", \"https://images.printify.com/5c487ee2a342bc9b8b2fc4d2\"]\n  },\n  {\n    \"id\": 5,\n    \"title\": \"Men's Cotton Crew Tee\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Next Level\",\n    \"model\": \"3600\",\n    \"images\": [\"https://images.printify.com/5a2ffc81b8e7e3656268fb44\", \"https://images.printify.com/5cdc0126b97b6a00091b58f7\"]\n  },\n  {\n    \"id\": 6,\n    \"title\": \"Unisex Heavy Cotton Tee\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Gildan\",\n    \"model\": \"5000\",\n    \"images\": [\n      \"https://images.printify.com/5a2fd7d9b8e7e36658795dc0\",\n      \"https://images.printify.com/5c595436a342bc1670049902\",\n      \"https://images.printify.com/5c595427a342bc166b6d3002\",\n      \"https://images.printify.com/5a2fd022b8e7e3666c70623a\"\n    ]\n  },\n  {\n    \"id\": 9,\n    \"title\": \"Women's Favorite Tee\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Bella+Canvas\",\n    \"model\": \"6004\",\n    \"images\": [\n      \"https://images.printify.com/5a2ffeeab8e7e364d660836f\",\n      \"https://images.printify.com/59e362cab8e7e30a5b0a55bd\",\n      \"https://images.printify.com/59e362d2b8e7e30b9f576691\",\n      \"https://images.printify.com/59e362ddb8e7e3174f3196ee\",\n      \"https://images.printify.com/59e362eab8e7e3593e2ac98d\"\n    ]\n  },\n  {\n    \"id\": 10,\n    \"title\": \"Women's Flowy Racerback Tank\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Bella+Canvas\",\n    \"model\": \"8800\",\n    \"images\": [\n      \"https://images.printify.com/5a27eb68b8e7e364d6608322\",\n      \"https://images.printify.com/5c485236a342bc521c2a0beb\",\n      \"https://images.printify.com/5c485217a342bc686053da46\",\n      \"https://images.printify.com/5c485225a342bc52fe5fee83\"\n    ]\n  },\n  {\n    \"id\": 11,\n    \"title\": \"Women's Jersey Short Sleeve Deep V-Neck Tee\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Bella+Canvas\",\n    \"model\": \"6035\",\n    \"images\": [\n      \"https://images.printify.com/5a27f20fb8e7e316f403a3b1\",\n      \"https://images.printify.com/5c472ff0a342bcad97372d72\",\n      \"https://images.printify.com/5c472ff8a342bcad9964d115\"\n    ]\n  },\n  {\n    \"id\": 12,\n    \"title\": \"Unisex Jersey Short Sleeve Tee\",\n    \"description\": \"Description goes here\",\n    \"brand\": \"Bella+Canvas\",\n    \"model\": \"3001\",\n    \"images\": [\n      \"https://images.printify.com/5a2ff5b0b8e7e36669068406\",\n      \"https://images.printify.com/59e35414b8e7e30aa625995c\",\n      \"https://images.printify.com/5cd579548c3769000f274cac\",\n      \"https://images.printify.com/5cd579558c37690008453286\",\n      \"https://images.printify.com/59e3541bb8e7e30a60795f9c\",\n      \"https://images.printify.com/59e35428b8e7e30a1a4de812\",\n      \"https://images.printify.com/59e3552db8e7e3174714887a\",\n      \"https://images.printify.com/5a8beec5b8e7e304614eb59c\"\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Blueprint with Printify SDK in JavaScript\nDESCRIPTION: Makes a GET request to /v1/catalog/blueprints/{blueprint_id}.json to retrieve details for a specific product blueprint. Requires the blueprint ID as a parameter.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.getBlueprint(blueprintId);\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 3,\n  \"title\": \"Kids Regular Fit Tee\",\n  \"description\": \"Description goes here\",\n  \"brand\": \"Delta\",\n  \"model\": \"11736\",\n  \"images\": [\"https://images.printify.com/5853fe7dce46f30f8327f5cd\", \"https://images.printify.com/5c487ee2a342bc9b8b2fc4d2\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Printify Express Order in Printify SDK\nDESCRIPTION: Example demonstrating how to submit a Printify Express order with multiple products. This method provides faster shipping options compared to standard orders.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = {\n  external_id: '2750e210-39bb-11e9-a503-452618153e4a',\n  label: '00012',\n  line_items: [\n    { product_id: '5b05842f3921c9547531758d', variant_id: 12359, quantity: 1 },\n    { product_id: '5b05842f3921c34764fa478bc', variant_id: 17887, quantity: 1 },\n  ],\n  shipping_method: 3,\n  send_shipping_notification: false,\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@example.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\n\nawait printify.orders.submitExpress(data);\n```\n\n----------------------------------------\n\nTITLE: Calculating Shipping Costs in Printify SDK\nDESCRIPTION: Example demonstrating how to calculate shipping costs for an order before submission. This method accepts line items with product IDs, variant IDs, and quantities along with shipping address details.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = {\n  line_items: [\n    { product_id: '5bfd0b66a342bcc9b5563216', variant_id: 17887, quantity: 1 },\n    { print_provider_id: 5, blueprint_id: 9, variant_id: 17887, quantity: 1 },\n    { sku: 'MY-SKU', quantity: 1 },\n  ],\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@msn.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\n\nawait printify.orders.calculateShipping(data);\n```\n\n----------------------------------------\n\nTITLE: Sending Order to Production in Printify SDK\nDESCRIPTION: Example showing how to send an existing order to production. This method is used after creating a draft order with the submit method.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.sendToProduction(orderId);\n```\n\n----------------------------------------\n\nTITLE: Setting Publish Failed Status with Printify SDK\nDESCRIPTION: Marks a product's publish status as failed with a reason. Removes locked status from product.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { reason: 'Request timed out' };\n\nawait printify.products.setPublishSucceeded('productId', data);\n```\n\n----------------------------------------\n\nTITLE: Publishing Products with Printify SDK\nDESCRIPTION: Publishes a product to connected sales channels. Requires specifying which properties should be published.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { title: true, description: true, images: true, variants: true, tags: true, keyFeatures: true, shipping_template: true };\n\nawait printify.products.publishOne('productId', data);\n```\n\n----------------------------------------\n\nTITLE: Listing Available Print Providers with Printify SDK in JavaScript\nDESCRIPTION: Retrieves a comprehensive list of all available print providers from the Printify catalog API. Returns an array of provider objects containing id, title, and location details for each provider.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.listProviders();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Print Provider Details with Printify SDK in JavaScript\nDESCRIPTION: Fetches detailed information about a specific print provider including its associated blueprint offerings. Requires the printProviderId parameter. Returns provider details and a list of blueprints with their respective IDs, titles, brands, and images.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.getProvider(printProviderId);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders by Page Number using printify.orders.list(page)\nDESCRIPTION: Demonstrates how to retrieve a specific page of orders. This method makes a GET request to the /v1/shops/{shop_id}/orders.json endpoint with the page parameter specified.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.list(page);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders by Status using printify.orders.list(status)\nDESCRIPTION: Demonstrates how to retrieve orders filtered by their status (e.g., fulfilled). This method makes a GET request to the /v1/shops/{shop_id}/orders.json endpoint with the status parameter specified.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.list(status);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders by SKU using printify.orders.list(sku)\nDESCRIPTION: Demonstrates how to retrieve orders that contain a specific product SKU. This method makes a GET request to the /v1/shops/{shop_id}/orders.json endpoint with the sku parameter specified.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.list(sku);\n```\n\n----------------------------------------\n\nTITLE: Listing Uploaded Images in Printify API\nDESCRIPTION: Retrieves a list of all images uploaded to the Printify account. Supports pagination parameters with defaults of 10 results per page and a maximum of 100 results.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.uploads.list();\nawait printify.uploads.list((page = 2));\nawait printify.uploads.list(undefined, (limit = 5));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Image Details by ID from Printify API\nDESCRIPTION: Fetches detailed information about a specific uploaded image using its unique identifier. Returns metadata such as dimensions, file type, and URLs.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.uploads.getById(imageId);\n```\n\n----------------------------------------\n\nTITLE: Listing Webhooks in Printify API\nDESCRIPTION: Retrieves all configured webhooks for the Printify shop. These webhooks are used to notify external systems about events occurring in the Printify platform.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.webhooks.list();\n```\n\n----------------------------------------\n\nTITLE: Creating a Webhook in Printify API\nDESCRIPTION: Creates a new webhook subscription for events in the Printify platform. Requires specifying the event topic and the callback URL that will receive the webhook payloads.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { topic: 'order:created', url: 'https://example.com/webhooks/order/created' };\nawait printify.webhooks.create(data);\n```\n\n----------------------------------------\n\nTITLE: Submitting Order by SKU in Printify SDK\nDESCRIPTION: Example showing how to submit an order using only an SKU reference. This simplified approach requires that the SKU already exists in your Printify catalog.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n// Example #5 - Submit order by only an existing SKU\n\nconst data = {\n  external_id: '2750e210-39bb-11e9-a503-452618153e6a',\n  label: '00012',\n  line_items: [\n    {\n      sku: 'MY-SKU',\n      quantity: 1,\n    },\n  ],\n  shipping_method: 1,\n  is_printify_express: false,\n  is_economy_shipping: false,\n  send_shipping_notification: false,\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@msn.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\nawait printify.orders.submit(data);\n// response: { \"id\": \"5a96f649b2439217d070f507\" }\n```\n\n----------------------------------------\n\nTITLE: Submitting Order with Print Details for Side Printing in Printify SDK\nDESCRIPTION: Example demonstrating how to submit an order with specific print details for printing on sides. This approach uses the print_details parameter to specify mirror printing on the side of a product.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n// Example #4 - Submit order by external image URL (with specifying print details for printing on sides)\n\nconst data = {\n  external_id: '2750e210-39bb-11e9-a503-452618153e5a',\n  label: '00012',\n  line_items: [\n    {\n      print_provider_id: 5,\n      blueprint_id: 9,\n      variant_id: 17887,\n      print_areas: {\n        front: 'https://images.example.com/image.png',\n      },\n      print_details: {\n        print_on_side: 'mirror',\n      },\n      quantity: 1,\n    },\n  ],\n  shipping_method: 1,\n  is_printify_express: false,\n  is_economy_shipping: false,\n  send_shipping_notification: false,\n  address_to: {\n    first_name: 'John',\n    last_name: 'Smith',\n    email: 'example@msn.com',\n    phone: '0574 69 21 90',\n    country: 'BE',\n    region: '',\n    address1: 'ExampleBaan 121',\n    address2: '45',\n    city: 'Retie',\n    zip: '2470',\n  },\n};\nawait printify.orders.submit(data);\n// response: { \"id\": \"5a96f649b2439217d070f507\" }\n```\n\n----------------------------------------\n\nTITLE: Retrieving Blueprint Print Providers with Printify SDK in JavaScript\nDESCRIPTION: Makes a GET request to /v1/catalog/blueprints/{blueprint_id}/print_providers.json to retrieve a list of print providers for a specific blueprint. Requires the blueprint ID as a parameter.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.getBlueprintProviders(blueprintId);\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  { \"id\": 3, \"title\": \"DJ\" },\n  { \"id\": 8, \"title\": \"Fifth Sun\" },\n  { \"id\": 16, \"title\": \"MyLocker\" },\n  { \"id\": 24, \"title\": \"Inklocker\" }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Blueprint Variants with Printify SDK in JavaScript\nDESCRIPTION: Makes a GET request to /v1/catalog/blueprints/{blueprint_id}/print_providers/{print_provider_id}/variants.json to retrieve variants for a specific blueprint from a specific print provider. Requires both blueprint ID and print provider ID as parameters.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.getBlueprintVariants(blueprintId, printProviderId);\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 3,\n  \"title\": \"DJ\",\n  \"variants\": [\n    {\n      \"id\": 17390,\n      \"title\": \"Heather Grey / XS\",\n      \"options\": { \"color\": \"Heather Grey\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17426,\n      \"title\": \"Solid Black / XS\",\n      \"options\": { \"color\": \"Solid Black\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17435,\n      \"title\": \"Solid Scarlet / XS\",\n      \"options\": { \"color\": \"Solid Scarlet\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17444,\n      \"title\": \"Solid Cool Blue / XS\",\n      \"options\": { \"color\": \"Solid Cool Blue\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17453,\n      \"title\": \"Solid Cream / XS\",\n      \"options\": { \"color\": \"Solid Cream\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17462,\n      \"title\": \"Solid Dark Chocolate / XS\",\n      \"options\": { \"color\": \"Solid Dark Chocolate\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17480,\n      \"title\": \"Solid Heavy Metal / XS\",\n      \"options\": { \"color\": \"Solid Heavy Metal\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    },\n    {\n      \"id\": 17489,\n      \"title\": \"Solid Indigo / XS\",\n      \"options\": { \"color\": \"Solid Indigo\", \"size\": \"XS\" },\n      \"placeholders\": [\n        { \"position\": \"back\", \"height\": 3995, \"width\": 3153 },\n        { \"position\": \"front\", \"height\": 3995, \"width\": 3153 }\n      ]\n    }\n    // ...\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Archiving an Image in Printify API\nDESCRIPTION: Archives a specified image in the Printify account using its unique identifier. This endpoint helps manage unused images in the account.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.uploads.archive(imageId);\n```\n\n----------------------------------------\n\nTITLE: Updating a Webhook in Printify API\nDESCRIPTION: Modifies an existing webhook configuration using its unique identifier. This endpoint allows changing properties such as the callback URL while maintaining the same event subscription.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { url: 'https://example.com/callback/order/created' };\nawait printify.webhooks.updateOne('webhookId', data);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Webhook in Printify API\nDESCRIPTION: Removes a webhook subscription from the Printify shop using its unique identifier. This endpoint is used to stop receiving notifications for specific events.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.webhooks.deleteOne(webhookId);\n```\n\n----------------------------------------\n\nTITLE: Fetching Available Shipping Methods with Printify v2 Catalog API in JavaScript\nDESCRIPTION: Retrieves a list of available shipping methods for a specific blueprint and print provider using the Printify v2 catalog API. Requires blueprintId and printProviderId parameters. Returns an array of shipping method objects with their respective types and attributes.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.v2.catalog.getShippingListInfo('3', '8');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Standard Shipping Information with Printify v2 Catalog API in JavaScript\nDESCRIPTION: Fetches detailed information about standard shipping for a specific blueprint and print provider. Requires blueprintId and printProviderId parameters. Returns shipping costs, handling times, and applicable regions for the standard shipping method.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.v2.catalog.getStandardShippingInfo('3', '8');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Priority Shipping Information with Printify v2 Catalog API in JavaScript\nDESCRIPTION: Fetches detailed information about priority shipping for a specific blueprint and print provider. Requires blueprintId and printProviderId parameters. Returns shipping costs, handling times, and applicable regions for the priority shipping method.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.v2.catalog.getPriorityShippingInfo('3', '8');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Express Shipping Information with Printify SDK\nDESCRIPTION: Gets express shipping method information for a specific blueprint and print provider. Requires blueprintId and printProviderId as parameters and returns shipping details including costs, handling time, and shipping type.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.v2.catalog.getExpressShippingInfo('3', '8');\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"variant_shipping_express_us\",\n    \"id\": \"23494\",\n    \"attributes\": {\n      \"shippingType\": \"express\",\n      \"country\": {\n        \"code\": \"US\"\n      },\n      \"variantId\": 23494,\n      \"shippingPlanId\": \"65a7c0825b50fcd56a018e02\",\n      \"handlingTime\": {\n        \"from\": 4,\n        \"to\": 8\n      },\n      \"shippingCost\": {\n        \"firstItem\": {\n          \"amount\": 399,\n          \"currency\": \"USD\"\n        },\n        \"additionalItems\": {\n          \"amount\": 219,\n          \"currency\": \"USD\"\n        }\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Economy Shipping Information with Printify SDK\nDESCRIPTION: Gets economy shipping method information for a specific blueprint and print provider. Requires blueprintId and printProviderId as parameters and returns shipping details including costs, handling time, and shipping type.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.v2.catalog.getEconomyShippingInfo('3', '8');\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"variant_shipping_economy_us\",\n    \"id\": \"23494\",\n    \"attributes\": {\n      \"shippingType\": \"economy\",\n      \"country\": {\n        \"code\": \"US\"\n      },\n      \"variantId\": 23494,\n      \"shippingPlanId\": \"65a7c0825b50fcd56a018e02\",\n      \"handlingTime\": {\n        \"from\": 4,\n        \"to\": 8\n      },\n      \"shippingCost\": {\n        \"firstItem\": {\n          \"amount\": 399,\n          \"currency\": \"USD\"\n        },\n        \"additionalItems\": {\n          \"amount\": 219,\n          \"currency\": \"USD\"\n        }\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Variant Shipping Information with Printify SDK in JavaScript\nDESCRIPTION: Fetches shipping information for all variants of a blueprint from a specific print provider using the Printify catalog API. Requires blueprintId and printProviderId parameters. Returns handling time, shipping profiles including costs and delivery regions.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.catalog.getVariantShipping(blueprintId, printProviderId);\n```\n\n----------------------------------------\n\nTITLE: Deleting Products with Printify SDK\nDESCRIPTION: Deletes a product by its ID from the Printify system.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.products.deleteOne(productId);\n```\n\n----------------------------------------\n\nTITLE: Setting Publish Success Status with Printify SDK\nDESCRIPTION: Marks a product's publish status as succeeded and sets external properties. Removes locked status from product.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = { external: { id: '5941187eb8e7e37b3f0e62e5', handle: 'https://example.com/path/to/product' } };\n\nawait printify.products.setPublishSucceeded('productId', data);\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Printify SDK Examples (Shell)\nDESCRIPTION: Commands to install dependencies and start the Printify SDK JavaScript examples. This uses npm to manage packages and run the example application.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/examples/README.md#2025-04-18_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install\n$ npm start\n```\n\n----------------------------------------\n\nTITLE: Notifying Product Unpublish with Printify SDK\nDESCRIPTION: Notifies the Printify system that a product has been unpublished from sales channels.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.products.notifyUnpublished(productId);\n```\n\n----------------------------------------\n\nTITLE: Canceling an Unpaid Order in Printify API\nDESCRIPTION: Cancels an unpaid order with a specified order ID. The order status must be either \"on-hold\" or \"payment-not-received\" for this operation to succeed.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.orders.cancelUnpaid(orderId);\n```\n\n----------------------------------------\n\nTITLE: Development Commands for Printify SDK\nDESCRIPTION: Shell commands for setting up the development environment and testing the SDK bundle locally.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/README.md#2025-04-18_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nyarn install\nyarn test\n\n# (optional) test the bundle locally\ncd examples/typescript && yarn && cd ../../\nyarn build\nrm -rf examples/typescript/node_modules/printify-sdk-js/dist && mv dist examples/typescript/node_modules/printify-sdk-js\ncd examples/typescript\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Disconnecting a Shop with Printify SDK in JavaScript\nDESCRIPTION: Makes a DELETE request to /v1/shops/{shop_id}/connection.json to disconnect a shop from Printify. Requires the shop ID as a parameter.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/docs/API.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nawait printify.shops.deleteOne(printify.shopId);\n```\n\nLANGUAGE: json\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Formatting Markdown Changelog\nDESCRIPTION: Markdown formatted changelog documenting version history from 1.0.0 to 1.3.0, including significant changes, upgrades, and improvements to the SDK.\nSOURCE: https://github.com/spencerlepine/printify-sdk-js/blob/main/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [1.3.0] - 2025-01-06\n\n- Added support for V2 endpoints.\n- Removed verbose stack trace from errors.\n\n## [1.2.0] - 2025-01-03\n\n- Organized shared types and fixed bundle export.\n- Improved configuration object.\n\n## [1.1.0] - 2024-11-08\n\n- Replaced `fetch` with `axios` for enhanced security.\n- Refactored internal code for better maintainability.\n\n## [1.0.2] - 2024-10-24\n\n- Added error logging for easier debugging.\n\n## [1.0.1] - 2024-07-29\n\n- Updated documentation to include TypeScript support.\n\n## [1.0.0] - 2024-07-26\n\n- Initial release for Printify API v1.\n```"
  }
]
[
  {
    "owner": "seanmonstar",
    "repo": "reqwest",
    "content": "TITLE: Async HTTP GET Request with JSON Response\nDESCRIPTION: Example of making an asynchronous HTTP GET request using reqwest, parsing the JSON response into a HashMap, and handling errors with Tokio runtime.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nuse std::collections::HashMap;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let resp = reqwest::get(\"https://httpbin.org/ip\")\n        .await?\n        .json::<HashMap<String, String>>()\n        .await?;\n    println!(\"{resp:#?}\");\n    Ok(())\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Reqwest Dependencies in Cargo.toml\nDESCRIPTION: Cargo dependency configuration showing required crates and feature flags for using reqwest with async functionality and JSON support.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[dependencies]\nreqwest = { version = \"0.12\", features = [\"json\"] }\ntokio = { version = \"1\", features = [\"full\"] }\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Certificate Verification in Rust\nDESCRIPTION: Demonstrates how to disable certificate verification using the ClientBuilder in Reqwest.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/CHANGELOG.md#2025-04-20_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nClientBuilder::danger_accept_invalid_certs(bool)\n```\n\n----------------------------------------\n\nTITLE: Setting Bearer Token Authentication in Rust\nDESCRIPTION: Shows how to add a bearer token for authentication in a Reqwest request.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/CHANGELOG.md#2025-04-20_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nRequestBuilder::bearer_auth(token)\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Builder in Rust\nDESCRIPTION: Illustrates the change from by-ref to by-value builder pattern in Reqwest's ClientBuilder.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/CHANGELOG.md#2025-04-20_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\n// Old\nlet mut builder = ClientBuilder::new();\nif some_val {\n    builder.gzip(false);\n}\nlet client = builder.build()?;\n\n// New\nlet mut builder = ClientBuilder::new();\nif some_val {\n    builder = builder.gzip(false);\n}\nlet client = builder.build()?;\n```\n\n----------------------------------------\n\nTITLE: Setting Headers in Reqwest Request\nDESCRIPTION: Shows the change in setting headers after the upgrade to hyper 0.12 in Reqwest.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/CHANGELOG.md#2025-04-20_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\n// Old\nclient\n    .get(\"https://hyper.rs\")\n    .header(UserAgent::new(\"hallo\"))\n    .send()?;\n\n// New\nclient\n    .get(\"https://hyper.rs\")\n    .header(\"user-agent\", \"hallo\")\n    .send()?;\n```\n\n----------------------------------------\n\nTITLE: Setting MIME Type for Multipart Form in Rust\nDESCRIPTION: Demonstrates the change in setting MIME type for multipart form parts in Reqwest.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/CHANGELOG.md#2025-04-20_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\n// Old\nlet part = multipart::Part::file(path)?\n    .mime(mime::TEXT_PLAIN);\n\n// New\nlet part = multipart::Part::file(path)?\n    .mime_str(\"text/plain\")?\n```\n\n----------------------------------------\n\nTITLE: Using Hyper 0.11 Headers with Feature Flag in Rust\nDESCRIPTION: Demonstrates how to use Hyper 0.11 headers with a feature flag in Reqwest for backwards compatibility.\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/CHANGELOG.md#2025-04-20_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\nclient\n    .get(\"https://hyper.rs\")\n    .header_011(reqwest::hyper_011::header::UserAgent::new(\"hallo\"))\n    .send()?\n```\n\n----------------------------------------\n\nTITLE: Installing WASM Dependencies with NPM\nDESCRIPTION: Command to install wasm-pack using npm package manager\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/examples/wasm_github_fetch/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting WASM Development Server\nDESCRIPTION: Command to build and serve the WASM example locally on port 8080\nSOURCE: https://github.com/seanmonstar/reqwest/blob/master/examples/wasm_github_fetch/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run serve\n```"
  }
]
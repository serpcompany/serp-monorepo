[
  {
    "owner": "spinnaker",
    "repo": "spinnaker.github.io",
    "content": "TITLE: Enabling HA Clouddriver in Halyard\nDESCRIPTION: This command enables high availability for the Clouddriver service in Spinnaker, splitting it into four separate services: clouddriver-caching, clouddriver-rw, clouddriver-ro, and clouddriver-ro-deck.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/high-availability.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy ha clouddriver enable\n```\n\n----------------------------------------\n\nTITLE: Creating Service Accounts for Halyard\nDESCRIPTION: Commands to create and configure service accounts for Halyard and assign necessary IAM roles\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nGCP_PROJECT=$(gcloud config get-value project)\nHALYARD_SA=halyard-service-account\n\ngcloud iam service-accounts create $HALYARD_SA \\\n    --project=$GCP_PROJECT \\\n    --display-name $HALYARD_SA\n\nHALYARD_SA_EMAIL=$(gcloud iam service-accounts list \\\n    --project=$GCP_PROJECT \\\n    --filter=\"displayName:$HALYARD_SA\" \\\n    --format='value(email)')\n\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --role roles/iam.serviceAccountKeyAdmin \\\n    --member serviceAccount:$HALYARD_SA_EMAIL\n\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --role roles/container.admin \\\n    --member serviceAccount:$HALYARD_SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Applying Spinnaker Configuration Changes with Halyard\nDESCRIPTION: This command applies configuration changes made to your Spinnaker installation using Halyard. It should be run after making any configuration changes to update the deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/configuration.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Installing Halyard on Debian/Ubuntu\nDESCRIPTION: Downloads and installs Halyard installation script for Debian/Ubuntu systems\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/halyard.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh\n```\n\n----------------------------------------\n\nTITLE: Installing eksctl for Amazon EKS cluster management\nDESCRIPTION: This snippet installs eksctl, a command-line tool for creating and managing Amazon EKS clusters. It downloads the latest release, moves it to the system bin directory, and verifies the installation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Download and configure eksctl\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\n\nsudo mv /tmp/eksctl /usr/local/bin\n\n# Verify the installation\neksctl help\n```\n\n----------------------------------------\n\nTITLE: Creating Halyard Docker Config Directory\nDESCRIPTION: Creates a local directory to persist Halyard configuration when running in Docker\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/halyard.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir ~/.hal\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Manual Execution URL Structure\nDESCRIPTION: Examples showing how to construct URLs for deep linking to Spinnaker's manual pipeline execution dialog, including optional parameter pre-population.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/managing-pipelines/index.md#2025-04-09_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=deploy-to-prod\nhttps://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=12345\nhttps://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=deploy-to-prod&region=us-central-1\nhttps://my.spinnaker.example.com/#/applications/myapp/executions?startManualExecution=12345&region=us-central-1\n```\n\n----------------------------------------\n\nTITLE: Installing Halyard for Spinnaker management\nDESCRIPTION: This snippet installs Halyard, a tool used to install and manage Spinnaker. It downloads the installation script, creates a halyard user, runs the installation, updates Halyard, and verifies the installation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Download and configure Halyard\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh\n\nsudo useradd halyard\n\nsudo bash InstallHalyard.sh\n\nsudo update-halyard\n\n# Verify the installation\nhal -v\n```\n\n----------------------------------------\n\nTITLE: Adding AWS Accounts to Spinnaker using Halyard\nDESCRIPTION: Bash commands to add AWS accounts to Spinnaker configuration using Halyard CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# Adds AWS_ACCOUNT_NAME=\"spinnakerManaging\" for the AWS regions us-east-1 and us-west-2\nexport AWS_ACCOUNT_NAME=\"<Name of the managing account. The example uses spinnakerManaging>\"\nexport ACCOUNT_ID=\"100000000001\"\n\nhal config provider aws account add $AWS_ACCOUNT_NAME \\\n    --account-id ${ACCOUNT_ID} \\\n    --assume-role role/spinnakerManaged \\\n    --regions us-east-1, us-west-2\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Adds the develop account for the regions us-east-1 and us-west-2.\nexport AWS_ACCOUNT_NAME=develop\nexport ACCOUNT_ID=\"200000000002\"\n\nhal config provider aws account add $AWS_ACCOUNT_NAME \\\n    --account-id ${ACCOUNT_ID} \\\n    --assume-role role/spinnakerManaged \\\n    --regions us-east-1, us-west-2\n```\n\n----------------------------------------\n\nTITLE: Structuring Pipeline Template JSON\nDESCRIPTION: Shows the complete structure of a pipeline template JSON, including schema reference, variables declaration, and the pipeline definition with parameterized fields.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/create.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"schema\": \"v2\",\n  \"variables\": [\n    {\n      \"type\": \"int\",\n      \"defaultValue\": 42,\n      \"description\": \"The time a wait stage shall pauseth\",\n      \"name\": \"timeToWait\"\n    }\n  ],\n  \"id\": \"newSpelTemplate\",\n  \"protect\": false,\n  \"metadata\": {\n    \"name\": \"Variable Wait\",\n    \"description\": \"A demonstrative Wait Pipeline.\",\n    \"owner\": \"example@example.com\",\n    \"scopes\": [\"global\"]\n  },\n  \"pipeline\": {\n    \"lastModifiedBy\": \"anonymous\",\n    \"updateTs\": \"0\",\n    \"parameterConfig\": [],\n    \"limitConcurrent\": true,\n    \"keepWaitingPipelines\": false,\n    \"description\": \"\",\n    \"triggers\": [],\n    \"notifications\": [],\n    \"stages\": [\n      {\n        \"waitTime\": \"${ templateVariables.timeToWait }\",\n        \"name\": \"My Wait Stage\",\n        \"type\": \"wait\",\n        \"refId\": \"wait1\",\n        \"requisiteStageRefIds\": []\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Echo Custom Job Stage in Kubernetes\nDESCRIPTION: A YAML configuration example for a custom 'Echo' job stage in Kubernetes that runs an Alpine container to echo a user-defined phrase. The configuration includes stage metadata, parameter definitions, and the Kubernetes job manifest.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/custom-job-stages/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njob:\n  preconfigured:\n    kubernetes:\n      - label: Echo\n        type: echoPhrase\n        description: Echo a configured phrase\n        cloudProvider: kubernetes\n        account: kubernetes\n        credentials: kubernetes\n        waitForCompletion: true\n        application: k8s2\n        parameters:\n          - name: PHRASE\n            label: Phrase to say\n            description: Phrase to be echoed.\n            mapping: manifest.spec.template.spec.containers[0].env[0].value\n            defaultValue: \"Hello world!\"\n        manifest:\n          apiVersion: batch/v1\n          kind: Job\n          metadata:\n            name: say-hello\n            namespace: spinnaker\n          spec:\n            backoffLimit: 0\n            template:\n              spec:\n                restartPolicy: Never\n                containers: \n                  - name: hello\n                    image: alpine:latest\n                    env:\n                      - name: PHRASE\n                        value: placeholder\n                    command: [\"echo\", $(PHRASE)]\n```\n\n----------------------------------------\n\nTITLE: Creating GCS Service Account\nDESCRIPTION: Commands to create and configure a service account for GCS storage with storage admin permissions\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGCP_PROJECT=$(gcloud config get-value project)\nGCS_SERVICE_ACCOUNT_NAME=spinnaker-gcs-account\n\ngcloud iam service-accounts create $GCS_SERVICE_ACCOUNT_NAME \\\n    --project=$GCP_PROJECT \\\n    --display-name $GCS_SERVICE_ACCOUNT_NAME\n\nGCS_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list \\\n    --project=$GCP_PROJECT \\\n    --filter=\"displayName:$GCS_SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\n# permission to create/modify buckets in your project\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --role roles/storage.admin \\\n    --member serviceAccount:$GCS_SERVICE_ACCOUNT_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Manifest with Bound SHA\nDESCRIPTION: YAML example showing how Spinnaker automatically injects Docker image SHA references into Kubernetes manifests when triggered by image changes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/deploy-manifest/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# ... rest of manifest\n  containers:\n  - name: my-container\n    image: gcr.io/my-project/my-image@:sha256:c81e41ef5e...\n# rest of manifest ...\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Account in Spinnaker using Front50\nDESCRIPTION: This snippet demonstrates how to create a service account by making a POST request to Front50 with the account name and roles. The service account is given membership to specific application roles.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/service-accounts/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nFRONT50=http://front50.url:8080\n\ncurl -X POST \\\n  -H \"Content-type: application/json\" \\\n  -d '{ \"name\": \"sekret-service-account@spinnaker-test.net\", \"memberOf\": [\"myApp-prod\",\"myApp-qa\"] }' \\\n  $FRONT50/serviceAccounts\n```\n\n----------------------------------------\n\nTITLE: User Access Restrictions Configuration\nDESCRIPTION: YAML configuration for setting up user access restrictions based on OAuth ID token information.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/index.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsecurity:\n  authn:\n    oauth2:\n      userInfoRequirements:\n        hd: your-org.net\n        batz: /^Sample.*Regex/\n        foo: bar\n```\n\n----------------------------------------\n\nTITLE: Creating service account in GCP test project with required permissions\nDESCRIPTION: Creates a service account in the GCP test project and adds IAM policy bindings to grant necessary roles for Kubernetes cluster administration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nHALYARD_SA=halyard-service-account\n\n#Get the SA email from the Spinnaker project\nHALYARD_SA_EMAIL=$(gcloud iam service-accounts list \\\n  --project=$GCP_PROJECT \\\n  --filter=\"displayName:$HALYARD_SA\" \\\n  --format='value(email)')\n\n#Add policy bindings in the Test project\ngcloud projects add-iam-policy-binding $GCP_TEST \\\n  --role roles/iam.serviceAccountKeyAdmin \\\n  --member serviceAccount:$HALYARD_SA_EMAIL\n\ngcloud projects add-iam-policy-binding $GCP_TEST \\\n  --role roles/container.admin \\\n  --member serviceAccount:$HALYARD_SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Configuring Trust Policy for Task IAM Roles in Amazon ECS\nDESCRIPTION: JSON trust policy configuration for IAM roles associated with tasks, allowing the ECS tasks service to assume the role. This enables application containers to access IAM role credentials.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ecs.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: SAML Identity Provider Metadata Configuration in XML\nDESCRIPTION: Example metadata.xml file from a SAML Identity Provider containing entity ID, certificate, and SSO service endpoints required for SAML configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/saml/index.md#2025-04-09_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<md:EntityDescriptor \n    xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\"    \n    entityID=\"https://accounts.google.com/o/saml2?idpid=SomeValueHere\" \n    validUntil=\"2021-05-16T15:17:27.000Z\">\n  <md:IDPSSODescriptor \n      WantAuthnRequestsSigned=\"false\" \n      protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n    <md:KeyDescriptor use=\"signing\">\n      <ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n        <ds:X509Data>\n          <ds:X509Certificate>MIIDdDCCAlygAwIBAgIGAVS/Sw5yMA0GCSqGSIb3DQEBCwUAMHsxFDASBgNVBAoTC0dvb2dsZSBJbmMuMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MQ8wDQYDVQQDEwZHb29nbGUxGDAWBgNVBAsTD0dvb2dsZSBGb3IgV29yazELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWEwHhcNMTYwNTE3MTUxNzI3WhcNMjEwNTE2MTUxNzI3WjB7MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEPMA0GA1UEAxMGR29vZ2xlMRgwFgYDVQQLEw9Hb29nbGUgRm9yIFdvcmsxCzAJBgNVBAYTblVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMIIBIjANBgkqhkiG9w0BAQEF46OCAQ8AMIIBCgKCAQEA4JsnpS0ZBzb7DtlU7Zop7l+Kgr7NzusKWcEC6MOsFa4Dlt7jxv4ScKZ/61M5WKxd5YX0ol1rPokpNztj+Zk7OXrG8lDic0DpeDutc9pcq0+9/NYFF7WR7TDjh4B7Txnq7SerSB78fT8d4rK7Bd+cu/cBIyAAyZ5tLeLbmTnHAk093Y9vF3mdWQnfAhx4ldOfstF6G/d2ev7I5xjSKzQuH6Ew3bb3HLcM4uEVevOfNAlh1KoV4vQr+qzbc9UEFcPRwzuTwGa6QjfspWW7NgXKbHHC+X6a+gqJrke/6l2VvHaQBJ7oIyt4PCdel2cnUkvuxvzHPYedh1AgrIiSP1brSQIDAQABMA0GCSqGSI34DQEBCwUAA4IBAQCPqMAIau+pRDs2NZG1nGfyEMDfs0qop6FBa/wTNis75tLvay9MUlxXkTxm9aVxgggjEyc6XtDjpV0onrH0jBnSc+vRI1GFQ48EO3owy3uBIeR1aMy13ZwAA+KVizeoOrXBJbvIUZHo0yfKRzIugtM58j58BdAFeYo+X9ds/ysvZ8FIGTLqMl/A3oO/yBNDjXR9Izoqgm7RX0JJXGL9Y1AgmEjxyqo9MhxZAGxOHm9HZWWfVMcoe8p62mRJ2zf4lkNPBnDHrQ8MDPSsXewAuiSnRBDLxhdBgyThT/KW7Q06rGa6Dp0rntKWzZE3hGQS0AdsnuFY/OXbmkNG9WUrUg5x</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n    </md:KeyDescriptor>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n    <md:SingleSignOnService \n        Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" \n        Location=\"https://accounts.google.com/o/saml2/idp?idpid=SomeValueHere\"/>\n    <md:SingleSignOnService \n        Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" \n        Location=\"https://accounts.google.com/o/saml2/idp?idpid=SomeValueHere\"/>\n  </md:IDPSSODescriptor>\n</md:EntityDescriptor>\n```\n\n----------------------------------------\n\nTITLE: Migrating Halyard from Debian to Jar Installation in Bash\nDESCRIPTION: This script performs a complete migration from a Debian-based Halyard installation to the jar-based installation. It creates a backup of the current configuration, removes the Debian package, cleans up apt sources, downloads the new installer script, and restores the configuration backup.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/halyard_migration.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nHALYARD_BACKUP_PATH=$(hal backup create -q)\n\nsudo apt remove spinnaker-halyard/trusty-stable -y < /dev/null\nsudo rm /etc/apt/sources.list.d/halyard.list && sudo rm /etc/apt/sources.list.d/halyard.list.save\nsudo apt update\n\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh\nsudo bash InstallHalyard.sh\n\nhal backup restore --backup-path=$HALYARD_BACKUP_PATH\n```\n\n----------------------------------------\n\nTITLE: Adding Oracle Cloud Account to Spinnaker with Halyard\nDESCRIPTION: Command for adding an Oracle Cloud account to Spinnaker using Halyard CLI with placeholder variables. This sets up the connection between Spinnaker and Oracle Cloud Infrastructure using account credentials and configuration details.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/oracle.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider oracle account add my-oci-acct \\\n    --compartment-id $COMPARTMENT_OCID \\\n    --fingerprint $API_KEY_FINGERPRINT \\\n    --region $REGION \\\n    --ssh-private-key-file-path $PRIVATE_KEY_FILE \\\n    --tenancyId $TENANCY_OCID \\\n    --user-id $USER_OCID\n```\n\n----------------------------------------\n\nTITLE: Complete Spinnaker Delivery Config Structure\nDESCRIPTION: Provides a complete example of a delivery config structure including artifacts, multiple environments, notifications, and constraints.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/delivery-configs/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nname: sample-delivery-config\napplication: keeldemo\nartifacts:\n- name: keeldemo \n  type: deb\n  reference: my-artifact\n  vmOptions: # details omitted for brevity\nenvironments:\n- name: testing\n  notifications: # omitted for brevity\n  constraints: []\n  resources: # details omitted for brevity\n  - kind: ec2/cluster@v1\n    # details\n  - kind: ec2/classic-load-balancer@v1\n    # details\n- name: staging\n  notifications: # omitted for brevity\n  constraints: \n  - type: depends-on\n    environment: testing\n  resources: # details omitted for brevity\n  - kind: ec2/cluster@v1\n    # details\n  - kind: ec2/classic-load-balancer@v1\n    # details \n```\n\n----------------------------------------\n\nTITLE: Active Directory LDAP Configuration Example\nDESCRIPTION: Sample YAML configuration for Active Directory LDAP settings in Gate.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/ldap/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nldap:\n  enabled: true\n  url:  ldaps://somethingsomething:686/ou=users,ou=company,o=com\n  userSearchFilter: (&(objectClass=user)(sAMAccountName={0}))\n  managerDn: CN=SVC_LDAP_USER_RO,OU=service-users,OU=company,O=com\n  managerPassword: super-secret-password\n```\n\n----------------------------------------\n\nTITLE: Getting test cluster credentials in Halyard\nDESCRIPTION: Obtains the Kubernetes credentials for the test cluster within the Halyard instance.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngcloud container clusters get-credentials $K8_TEST --project $GCP_TEST --zone us-central1-f\n```\n\n----------------------------------------\n\nTITLE: Retrieving Secrets from AWS Secrets Manager with AWS CLI\nDESCRIPTION: This snippet demonstrates how to retrieve secrets from AWS Secrets Manager using the AWS CLI, if access keys were used for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naws secretsmanager get-secret-value --secret-id FROM_ABOVE --region us-west-2\n```\n\n----------------------------------------\n\nTITLE: Querying Resource Status via API in Bash\nDESCRIPTION: Example of using curl to request the status of a specific resource via Spinnaker's API. This command retrieves the status by making a GET request to the managed resources endpoint with the resource ID and user authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/resource-status/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X GET --header \"X-SPINNAKER-USER: ${SPINNAKER_USER}\" \"${SPIN_URL}/<resourceId>/status\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub OAuth for Spinnaker via YAML\nDESCRIPTION: This YAML configuration sets up GitHub OAuth 2.0 authentication for Spinnaker using Halyard. It defines client credentials, authorization endpoints, required scopes, and user information mapping. The configuration notes the importance of setting userInfoRequirements to restrict access.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/github/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsecurity:\n  authn:\n    oauth2:\n      enabled: true\n      client:\n        clientId: # client ID from above\n        clientSecret: # client secret from above\n        accessTokenUri: https://github.com/login/oauth/access_token\n        userAuthorizationUri: https://github.com/login/oauth/authorize\n        scope: user:email\n      resource:\n        userInfoUri: https://api.github.com/user\n      # You almost certainly want to restrict access to your Spinnaker by adding\n      # userInfoRequirements; otherwise any user with a GitHub account will be\n      # able to access it.\n      userInfoRequirements: {}\n      userInfoMapping:\n        email: email\n        firstName: ''\n        lastName: name\n        username: login\n      provider: GITHUB\n```\n\n----------------------------------------\n\nTITLE: Example Spinnaker Bill of Materials (BOM) YAML Configuration\nDESCRIPTION: Sample YAML configuration showing a Bill of Materials (BOM) for Spinnaker. This defines which versions of each microservice have been validated together and assigns this collection a top-level version reference.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  consul:\n    version: 0.7.5\n  redis:\n    version: 2:2.8.4-2\n  vault:\n    version: 0.7.0\nservices:\n  clouddriver:\n    version: 0.4.0-393\n  deck:\n    version: 1.2.0-393\n  echo:\n    version: 0.2.1-393\n  fiat:\n    version: 0.2.0-393\n  front50:\n    version: 0.3.1-393\n  gate:\n    version: 0.4.0-393\n  igor:\n    version: 0.3.0-393\n  monitoring-daemon:\n    version: 0.1.0-393\n  monitoring-third-party:\n    version: 0.1.0-393\n  orca:\n    version: 0.4.0-393\n  rosco:\n    version: 0.3.0-393\n  spinnaker:\n    version: 0.4.0-393\ntimestamp: '2017-05-26 11:30:46'\nversion: master-2017-05-26-393\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Provider in Halyard\nDESCRIPTION: Commands to add a Kubernetes account to Spinnaker's configuration using Halyard CLI. This snippet adds a new Kubernetes account using the current kubectl context and enables the Kubernetes provider.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/oke/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider kubernetes account add my-k8s-acct \\\n    --context $(kubectl config current-context)\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider kubernetes enable\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Delivery Config YAML in Spinnaker\nDESCRIPTION: This YAML snippet provides a skeleton for a Spinnaker delivery config file. It includes placeholders for the manifest name, application name, and a testing environment with empty constraints, notifications, and resources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/getting-started/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: a-manifest-name # change me\napplication: yourapp # change me\nartifacts: []\nenvironments: \n  - name: testing # this is a fine default but you can change it\n    constraints: []\n    notifications: []\n    resources: []\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Account Credentials\nDESCRIPTION: Commands to download and configure GCP service account credentials for GCE and GCS\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nGCE_SERVICE_ACCOUNT_NAME=spinnaker-gce-account\nGCE_SERVICE_ACCOUNT_DEST=~/.gcp/gce.json\n\nmkdir -p $(dirname $GCE_SERVICE_ACCOUNT_DEST)\n\nGCE_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list \\\n    --filter=\"displayName:$GCE_SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\ngcloud iam service-accounts keys create $GCE_SERVICE_ACCOUNT_DEST \\\n    --iam-account $GCE_SERVICE_ACCOUNT_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Service Account for Spinnaker Authentication\nDESCRIPTION: Bash script that creates a Kubernetes service account for Spinnaker, extracts its token, and configures kubectl to use this token for authentication. This allows Spinnaker to interact with the Kubernetes cluster using the service account's permissions.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCONTEXT=$(kubectl config current-context)\n\n# This service account uses the ClusterAdmin role -- this is not necessary, \n# more restrictive roles can by applied.\nkubectl apply --context $CONTEXT \\\n    -f https://www.spinnaker.io/downloads/kubernetes/service-account.yml\n\nTOKEN=$(kubectl get secret --context $CONTEXT \\\n   $(kubectl get serviceaccount spinnaker-service-account \\\n       --context $CONTEXT \\\n       -n spinnaker \\\n       -o jsonpath='{.secrets[0].name}') \\\n   -n spinnaker \\\n   -o jsonpath='{.data.token}' | base64 --decode)\n\nkubectl config set-credentials ${CONTEXT}-token-user --token $TOKEN\n\nkubectl config set-context $CONTEXT --user ${CONTEXT}-token-user\n```\n\n----------------------------------------\n\nTITLE: Defining Pipeline Template Configuration in JSON\nDESCRIPTION: JSON schema for defining a pipeline template in Spinnaker. Includes template variables, metadata, and pipeline configuration with templated stages. The schema version used is v2.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/templates/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"schema\": \"v2\",\n  \"variables\": [\n    {\n      \"type\": \"<type>\",\n      \"defaultValue\": <value>,\n      \"description\": \"<description>\",\n      \"name\": \"<varName>\"\n    }\n  ],\n  \"id\": \"<templateName>\",           # The pipeline instance references the template using this\n  \"protect\": <true | false>,\n  \"metadata\": {\n    \"name\": \"displayName\",          # The display name shown in Deck\n    \"description\": \"<description>\",\n    \"owner\": \"example@example.com\",\n    \"scopes\": [\"global\"]            # Not used\n  },\n  \"pipeline\": {                     # Contains the templatized pipeline itself\n    \"lastModifiedBy\": \"anonymous\",  # Not used\n    \"updateTs\": \"0\",                # Not used\n    \"parameterConfig\": [],          # Same as in a regular pipeline\n    \"limitConcurrent\": true,        # Same as in a regular pipeline\n    \"keepWaitingPipelines\": false,  # Same as in a regular pipeline\n    \"description\": \"\",              # Same as in a regular pipeline\n    \"triggers\": [],                 # Same as in a regular pipeline\n    \"notifications\": [],            # Same as in a regular pipeline\n    \"stages\": [                     # Contains the templated stages\n      {\n        # This one is an example stage:\n        \"waitTime\": \"${ templateVariables.waitTime }\",  # Templated field.\n        \"name\": \"My Wait Stage\",\n        \"type\": \"wait\",\n        \"refId\": \"wait1\",\n        \"requisiteStageRefIds\": []\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating CA Key for Spinnaker SSL\nDESCRIPTION: This OpenSSL command generates a 4096-bit RSA private key for the Certificate Authority, encrypted with Triple DES and protected by a passphrase.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl genrsa \\\n  -des3 \\\n  -out ca.key \\\n  -passout pass:${CA_KEY_PASSWORD} \\\n  4096\n```\n\n----------------------------------------\n\nTITLE: Configuring SSL for Deck using Halyard\nDESCRIPTION: Configures SSL settings for Deck in Spinnaker using Halyard. Requires paths to the server certificate and key files.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nSERVER_CERT=   # /path/to/deck.crt\nSERVER_KEY=    # /path/to/deck.key\n\nhal config security ui ssl edit \\\n  --ssl-certificate-file ${SERVER_CERT} \\\n  --ssl-certificate-key-file ${SERVER_KEY} \\\n  --ssl-certificate-passphrase\n\nhal config security ui ssl enable\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes service account YAML configuration\nDESCRIPTION: Defines a Kubernetes service account named spinnaker-service-account in the default namespace to handle authorization within the Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: spinnaker-service-account\n  namespace: default\n```\n\n----------------------------------------\n\nTITLE: Listing Spinnaker applications with spin\nDESCRIPTION: Shows how to use the 'spin application list' command to retrieve a list of all Spinnaker applications, including their details such as accounts, cloud providers, and creation timestamp.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/app/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nspin application list\n[\n...\n{\n  \"accounts\": \"my-account\",\n  \"cloudProviders\": \"gce,kubernetes\",\n  \"createTs\": \"1529349914747\",\n  \"email\": \"jacobkiefer@google.com\",\n  \"instancePort\": 80,\n  \"lastModifiedBy\": \"anonymous\",\n  \"name\": \"my-app\",\n  \"platformHealthOnly\": true,\n  \"providerSettings\": {\n    \"gce\": {\n    \"associatePublicIpAddress\": true\n    }\n},\n\"updateTs\": \"1529349915014\",\n\"user\": \"anonymous\"\n}\n...\n]\n```\n\n----------------------------------------\n\nTITLE: OpenSSL Configuration for Role-Based Certificates\nDESCRIPTION: OpenSSL configuration file that includes role information encoding using custom OIDs for Spinnaker authorization.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/x509/index.md#2025-04-09_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\n[ req ]\ndistinguished_name\t= req_distinguished_name\nattributes\t\t= req_attributes\nreq_extensions = v3_req\n\n[ req_distinguished_name ]\ncountryName\t\t\t= Country Name (2 letter code)\ncountryName_min\t\t\t= 2\ncountryName_max\t\t\t= 2\nstateOrProvinceName\t\t= State or Province Name (full name)\nlocalityName\t\t\t= Locality Name (eg, city)\n0.organizationName\t\t= Organization Name (eg, company)\norganizationalUnitName\t\t= Organizational Unit Name (eg, section)\ncommonName\t\t\t= Common Name (eg, fully qualified host name)\ncommonName_max\t\t\t= 64\nemailAddress\t\t\t= Email Address\nemailAddress_max\t\t= 64\n\n[ req_attributes ]\nchallengePassword\t\t= A challenge password\nchallengePassword_min\t\t= 4\nchallengePassword_max\t\t= 20\n\n[ v3_req ]\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\n1.2.840.10070.8.1 = ASN1:UTF8String:spinnaker-example0\\nspinnaker-example1\n```\n\n----------------------------------------\n\nTITLE: Configuring imagePullSecrets for Kubernetes Deployments in Spinnaker\nDESCRIPTION: This configuration specifies image pull secrets to be used for authenticated Docker registry access in Spinnaker's Kubernetes deployments. These secrets are required when using custom artifactIds from authenticated Docker registries.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  imagePullSecrets:\n  - desired-image-pull-secret1\n  - desired-image-pull-secret2\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of Login Process in Spinnaker\nDESCRIPTION: This Mermaid sequence diagram shows the login process in Spinnaker, including the user providing credentials to the Identity Provider and the subsequent redirection back to Gate upon successful authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_3\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\nparticipant Deck\nparticipant Gate\nparticipant IdentityProvider\n\nDeck->>+IdentityProvider: Login credentials\nNote right of IdentityProvider: Success!\nIdentityProvider->>-Deck: HTTP 302 to https://gate.url/login?success\n\nactivate Gate\nDeck->>+Gate: GET /login?success\nGate->>+IdentityProvider: Optionally retrieve validation info\nIdentityProvider->>-Gate: .\ndeactivate Gate\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker for AWS CodeBuild\nDESCRIPTION: Halyard commands to add AWS CodeBuild account, enable the integration, and deploy the changes to Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/codebuild.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config ci codebuild account add $ACCOUNT_NAME \\\n  --account-id $ACCOUNT_ID \\\n  --assume-role $ASSUME_ROLE \\\n  --region $REGION\n\nhal config ci codebuild enable\n\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ReplicaSet with Traffic Management\nDESCRIPTION: YAML configuration for a ReplicaSet with Spinnaker traffic management annotations to associate with a specific service\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/traffic-management/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: frontend\n  labels:\n    tier: frontend\n  annotations:\n    traffic.spinnaker.io/load-balancers: '[\"service my-service\"]'\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      tier: frontend\n  template:\n    metadata:\n      labels:\n        tier: frontend\n    spec:\n      containers:\n      - name: frontend\n        image: gcr.io/google_samples/gb-frontend:v3\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2.0 Authentication for Spinnaker in Bash\nDESCRIPTION: Commands to configure OAuth2.0 authentication for Spinnaker using Halyard. Sets up Google as the OAuth provider and restricts access to a specific domain.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-public/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn oauth2 edit --provider google \\\n    --client-id $CLIENT_ID \\\n    --client-secret $CLIENT_SECRET \\\n    --user-info-requirements hd=$DOMAIN\n\nhal config security authn oauth2 enable\n```\n\n----------------------------------------\n\nTITLE: Configuring API Rate Limiting in Spinnaker's gate.yml\nDESCRIPTION: This YAML configuration enables API rate limiting in Spinnaker's Gate service. It sets up Redis for rate limiting, defines global and per-principal rate limits, and specifies principals for enforcing and ignoring rate limits.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/runbooks/api-rate-limiting.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrateLimit:\n  enabled: true\n  learning: true\n  redis:\n    enabled: true\n  # The rate (in seconds) that the bucket will be replenished\n  rateSeconds: 10\n  # The number of allowed requests in the window of rateSeconds\n  capacity: 500\n  # Specific principals can be given different capacities\n  capacityByPrincipal:\n  - principal: anonymous\n    override: 1000\n  # Similarly, rateSeconds can be overridden per-principal\n  rateSecondsByPrincipal:\n  - principal: anonymous\n    override: 5\n  # A list of principals that are being enforced. Handy for cases where you want\n  # to incrementally enable the rate limiter\n  enforcing:\n  - example@example.com\n  # A list of principals that are in learning mode. This can be useful if you\n  # want to give some principals unlimited power. Reconsider doing this :)\n  ignoring:\n  - unmetered-example@example.com\n```\n\n----------------------------------------\n\nTITLE: Verifying Azure CLI Installation\nDESCRIPTION: Checks if Azure CLI is properly installed by displaying the version information. Azure CLI is required for creating and configuring Azure Storage resources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/azs.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz --version\n```\n\n----------------------------------------\n\nTITLE: Configuring Clouddriver with MySQL Backend\nDESCRIPTION: YAML configuration for setting up Clouddriver to use MySQL instead of Redis, including connection pools, migration settings, and performance parameters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/clouddriver-sql.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsql:\n  enabled: true\n  read-only: false\n  taskRepository:\n    enabled: true\n  cache:\n    enabled: true\n    readBatchSize: 500\n    writeBatchSize: 300\n  scheduler:\n    enabled: true\n  unknown-agent-cleanup-agent:\n    enabled: false\n  connectionPools:\n    default:\n      default: true\n      jdbcUrl: jdbc:mysql://your.database:3306/clouddriver\n      user: clouddriver_service\n    tasks:\n      user: clouddriver_service\n      jdbcUrl: jdbc:mysql://your.database:3306/clouddriver\n  migration:\n    user: clouddriver_migrate\n    jdbcUrl: jdbc:mysql://your.database:3306/clouddriver\n\nredis:\n  enabled: false\n  cache:\n    enabled: false\n  scheduler:\n    enabled: false\n  taskRepository:\n    enabled: false\n```\n\n----------------------------------------\n\nTITLE: Visualizing a Hydrated Pipeline Template with spin CLI in Bash\nDESCRIPTION: This command uses the Spinnaker CLI tool 'spin' to preview a pipeline that would be created from a template. It shows the evaluated pipeline configuration based on the template values without actually creating the pipeline in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/plan.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline-templates plan --file <path to pipeline config>\n\n{\n  \"application\": \"my-spinnaker-app\"\n  \"stages\": [...] # Evaluated pipeline config based on template config values.\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tomcat Server for External Proxy in Spinnaker Gate\nDESCRIPTION: This YAML configuration is added to gate-local.yml to handle requests coming through external proxy instances, making the request to Gate look like the original request to the outermost proxy.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nserver:\n  tomcat:\n    protocolHeader: X-Forwarded-Proto\n    remoteIpHeader: X-Forwarded-For\n    internalProxies: .*\n    ## This may or may not be needed depending upon your environment.  \n    ## See https://tomcat.apache.org/tomcat-9.0-doc/api/org/apache/catalina/filters/RemoteIpFilter.html\n    httpsServerPort: X-Forwarded-Port\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring GCP Service Account for Spinnaker\nDESCRIPTION: This script creates a GCP service account for Spinnaker, grants necessary IAM roles, and downloads the JSON key. It sets up permissions for managing compute instances, networking, firewall rules, storage, and service account keys.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/gce.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_ACCOUNT_NAME=spinnaker-gce-account\nSERVICE_ACCOUNT_DEST=~/.gcp/gce-account.json\n\ngcloud iam service-accounts create \\\n    $SERVICE_ACCOUNT_NAME \\\n    --display-name $SERVICE_ACCOUNT_NAME\n\nSA_EMAIL=$(gcloud iam service-accounts list \\\n    --filter=\"displayName:$SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\nPROJECT=$(gcloud config get-value project)\n\n# permission to create/modify instances in your project\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --member serviceAccount:$SA_EMAIL \\\n    --role roles/compute.instanceAdmin\n\n# permission to create/modify network settings in your project\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --member serviceAccount:$SA_EMAIL \\\n    --role roles/compute.networkAdmin\n\n# permission to create/modify firewall rules in your project\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --member serviceAccount:$SA_EMAIL \\\n    --role roles/compute.securityAdmin\n\n# permission to create/modify images & disks in your project\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --member serviceAccount:$SA_EMAIL \\\n    --role roles/compute.storageAdmin\n\n# permission to download service account keys in your project\n# this is needed by packer to bake GCE images remotely\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --member serviceAccount:$SA_EMAIL \\\n    --role roles/iam.serviceAccountActor\n\nmkdir -p $(dirname $SERVICE_ACCOUNT_DEST)\n\ngcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \\\n    --iam-account $SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Reverting to Legacy Artifacts UI in Spinnaker 1.20\nDESCRIPTION: This JavaScript code snippet shows how to revert to the legacy artifacts UI in Spinnaker version 1.20. It modifies the window.spinnakerSettings object to enable the legacy artifacts feature.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.spinnakerSettings.feature.legacyArtifactsEnabled = true;\n```\n\n----------------------------------------\n\nTITLE: Diversifying AWS Server Group with Mixed Instance Types and Purchase Options\nDESCRIPTION: Creates an AWS server group with diversified instances across On-Demand and Spot purchase options. It configures a base capacity of On-Demand instances with percentage-based scaling above that baseline, and specifies multiple instance types with priority assignments using the lowest-price spot allocation strategy.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/server-group-launch-settings/aws-ec2/launch-templates.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H 'Content-Type: application/json' -d '{ \"job\": [ \n  {\n    \"type\": \"createServerGroup\",\n    \"cloudProvider\": \"aws\",\n    \"account\": \"my_aws_account\",\n    \"application\": \"myAwsApp\",\n    \"stack\": \"myStack\",\n    \"credentials\": \"my_aws_account\",\n    \"availabilityZones\": {\"us-west-1\": [\"us-west-1a\",\"us-west-1b\",\"us-west-1c\"]},\n    \"amiName\": \"ami-12345\",\n    \"capacity\": {\"desired\": 5,\"max\": 7,\"min\": 5},\n    \"iamRole\":\"BaseInstanceProfile\",\n    \"instanceType\":\"m4.large\",\n    \"setLaunchTemplate\": true,\n    \"onDemandBaseCapacity\":1,\n    \"onDemandPercentageAboveBaseCapacity\":50,\n    \"spotAllocationStrategy\":\"lowest-price\",\n    \"spotInstancePools\": 2,\n    \"launchTemplateOverridesForInstanceType\": [\n      {\"instanceType\":\"m5.large\",\"weightedCapacity\":\"1\",\"priority\": 2},\n      {\"instanceType\":\"m5.xlarge\",\"weightedCapacity\":\"2\",\"priority\": 1}] \n  }], \"application\": \"myAwsApp\", \"description\": \"Create New Server Group in cluster myAwsApp\"}' -X POST http://localhost:8084/tasks\n```\n\n----------------------------------------\n\nTITLE: Generate Java Keystore for SAML Authentication\nDESCRIPTION: Command to generate a new Java Keystore with RSA key for SAML authentication configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/saml/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkeytool -genkey -v -keystore saml.jks -alias saml -keyalg RSA -keysize 2048 -validity 10000\n```\n\n----------------------------------------\n\nTITLE: Bound Kubernetes Deployment Manifest - YAML\nDESCRIPTION: Final Kubernetes deployment manifest after Spinnaker has bound the artifacts.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/in-kubernetes-v2/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - image: gcr.io/my-images/nginx@sha256:0cce25b9a55    # bound by spinnaker\n          name: nginx\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - mountPath: /opt/config\n              name: my-config-map\n      volumes:\n        - configMap:\n            name: configmap-v001                              # bound by spinnaker\n          name: my-config-map\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker Authorization with Halyard and Google Groups\nDESCRIPTION: Commands to configure Spinnaker's Fiat authorization service with Google Groups. Requires administrator email, service account credentials JSON file, and organization domain. Sets up Google authorization type and enables authorization features.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/google-groups/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nADMIN=admin@your.org              # An administrator's email address\nCREDENTIALS=/path/to/creds.json   # The downloaded service account credentials\nDOMAIN=your.org                   # Your organization's domain.\n\nhal config security authz google edit \\\n    --admin-username $ADMIN \\\n    --credential-path $CREDENTIALS \\\n    --domain $DOMAIN\n\nhal config security authz edit --type google\n\nhal config security authz enable\n```\n\n----------------------------------------\n\nTITLE: Configuring Minio Storage for Spinnaker on Ubuntu\nDESCRIPTION: Commands to configure Spinnaker to use Minio as its persistent storage on an Ubuntu installation. These commands set the necessary S3 credentials and endpoint for the Minio server.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/minio.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho $MINIO_SECRET_KEY | hal config storage s3 edit --endpoint $ENDPOINT \\\n    --access-key-id $MINIO_ACCESS_KEY \\\n    --secret-access-key # will be read on STDIN to avoid polluting your\n                        # ~/.bash_history with a secret\n\nhal config storage edit --type s3\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Service Manifest\nDESCRIPTION: YAML configuration for creating a basic Kubernetes Service that selects pods with label 'app: myapp'\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/traffic-management/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\napiVersion: v1\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: myapp\n  ports:\n  - protocol: TCP\n    port: 80\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Authorization in Halyard\nDESCRIPTION: Commands to configure Spinnaker's authorization using GitHub Teams. Requires a personal access token with read:org scope and the target GitHub organization name. Sets up the GitHub authorization provider and enables it in the security configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/github-teams/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nTOKEN=b22a54...  # Personal access token under admin account\nORG=myorg        # GitHub Organization\n\nhal config security authz github edit \\\n    --accessToken $TOKEN \\\n    --organization $ORG \\\n    --baseUrl https://api.github.com\n\nhal config security authz edit --type github\n\nhal config security authz enable\n```\n\n----------------------------------------\n\nTITLE: Adding Helm Artifact Account Configuration\nDESCRIPTION: Halyard command to add a new Helm artifact account with basic authentication credentials using the previously created credentials file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/helm.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact helm account add my-helm-account \\\n    --username-password-file $USERNAME_PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Basic Pipeline Template Configuration in JSON\nDESCRIPTION: Initial pipeline configuration structure that defines the schema version, application name, and template reference.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/instantiate.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"schema\": \"v2\",\n  \"application\": \"myApp\",\n  \"name\": \"<pipeline name>\",\n  \"template\": {\n    \"artifactAccount\": \"front50ArtifactCredentials\",\n    \"reference\": \"spinnaker://newSpelTemplate\",\n    \"type\": \"front50/pipelineTemplate\"\n  },\n  \"variables\": {\n    \"timeToWait\": 4\n  },\n  \"exclude\": [],\n  \"triggers\": [],\n  \"parameters\": [],\n  \"notifications\": [],\n  \"description\": \"\",\n  \"stages\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Spin CLI on Linux\nDESCRIPTION: Commands to download, make executable, and install the Spinnaker CLI (spin) on a Linux system. The script downloads the latest version from Google Cloud Storage and moves it to the system path.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LO https://storage.googleapis.com/spinnaker-artifacts/spin/$(curl -s https://storage.googleapis.com/spinnaker-artifacts/spin/latest)/linux/amd64/spin\n\nchmod +x spin\n\nsudo mv spin /usr/local/bin/spin\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker to use AWS S3 for storage\nDESCRIPTION: These commands configure Spinnaker to use AWS S3 for storage. It sets up the AWS access key ID and secret access key, and configures the storage type as S3.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nexport`` YOUR_ACCESS_KEY_ID``=<``access``-``key``>`\n\n`hal config storage s3 edit ``--``access``-``key``-``id $YOUR_ACCESS_KEY_ID \\\n` ``--``secret``-``access``-``key ``--``region us``-``west``-``2\n\nhal config storage edit --type s3\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker\nDESCRIPTION: Commands to configure Spinnaker with GCS storage, GCR registry, and Kubernetes provider\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version $(hal version latest -q)\n\nhal config storage gcs edit \\\n    --project $(gcloud config get-value project) \\\n    --json-path ~/.gcp/gcp.json\n\nhal config storage edit --type gcs\n\nhal config provider docker-registry enable\n\nhal config provider docker-registry account add my-gcr-account \\\n    --address gcr.io \\\n    --password-file ~/.gcp/gcp.json \\\n    --username _json_key\n\nhal config provider kubernetes enable\n\nhal config provider kubernetes account add my-k8s-account \\\n    --docker-registries my-gcr-account \\\n    --context $(kubectl config current-context)\n```\n\n----------------------------------------\n\nTITLE: Docker Image Digest Reference Example\nDESCRIPTION: Example showing how to reference a Docker image using content-addressable digest instead of tags for consistent deployments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/best-practices/index.md#2025-04-09_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ngcr.io/my-image@sha256:95ff090...\n```\n\n----------------------------------------\n\nTITLE: Setting up GCS Notifications\nDESCRIPTION: Commands to configure Google Cloud Storage notifications with Pub/Sub integration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/google.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nMESSAGE_FORMAT=GCS\ngsutil notification create -t $TOPIC -f json gs://${BUCKET}\ngcloud beta pubsub subscriptions create $SUBSCRIPTION --topic $TOPIC\n```\n\n----------------------------------------\n\nTITLE: Configuring External Log Link for Kubernetes Job in YAML\nDESCRIPTION: Example of how to add an annotation to a Kubernetes Job manifest to provide a link to an external logging system. The annotation value can be templated with values from the deployed Job manifest.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/run-job-manifest/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njob.spinnaker.io/logs: 'https://internal-logging/jobs/{{ \"{{ manifest.metadata.name \"}}}}'\n```\n\n----------------------------------------\n\nTITLE: Exposing Spinnaker services using Elastic Load Balancer\nDESCRIPTION: These commands expose the Spinnaker API (Gate) and UI (Deck) using Load Balancers, configure the URLs, and apply the changes to the Spinnaker deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nexport NAMESPACE=spinnaker\n# Expose Gate and Deck\nkubectl -n ${NAMESPACE} expose service spin-gate --type LoadBalancer \\\n  --port 80 --target-port 8084 --name spin-gate-public \n\nkubectl -n ${NAMESPACE} expose service spin-deck --type LoadBalancer \\\n  --port 80 --target-port 9000 --name spin-deck-public  \n  \nexport API_URL=$(kubectl -n $NAMESPACE get svc spin-gate-public \\\n -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n \nexport UI_URL=$(kubectl -n $NAMESPACE get svc spin-deck-public \\\n -o jsonpath='{.status.loadBalancer.ingress[0].hostname}') \n\n# Configure the URL for Gate\nhal config security api edit --override-base-url http://${API_URL} \n\n# Configure the URL for Deck\nhal config security ui edit --override-base-url http://${UI_URL}\n\n# Apply your changes to Spinnaker\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Configuring Canary Config Visibility Scope\nDESCRIPTION: Command to configure the visibility scope of canary configurations. When set to false, canary configs are only visible within the Spinnaker application where they were created.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary edit --show-all-configs-enabled false\n```\n\n----------------------------------------\n\nTITLE: Adding S3 Artifact Account in Halyard\nDESCRIPTION: Command to add a new S3 artifact account with specified endpoint and region configurations. Optional parameters for S3 clones like Minio.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/s3.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact s3 account add my-s3-account \\\n    --api-endpoint $API_ENDPOINT \\\n    --api-region $API_REGION \\\n    --region $REGION\n```\n\n----------------------------------------\n\nTITLE: Parameterizing Namespace in Kubernetes Manifest YAML\nDESCRIPTION: This snippet shows how to use a pipeline parameter to specify the namespace in a Kubernetes manifest. The namespace is set using the expression '${ parameters.namespace }' which will be replaced with the actual parameter value during deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/parameterize-manifests/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# ... other keys\nmetadata:\n  namespace: '${ parameters.namespace }'\n# other keys ...\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Constraints in Delivery Config YAML\nDESCRIPTION: Example showing how to define constraints in a delivery config to ensure artifact versions are only promoted to staging after successful deployment to testing and only during specific business hours.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenvironments:\n- name: staging\n  resources: # omitted for brevity\n  notifications: # omitted for brevity\n  constraints: \n  - type: depends-on\n    environment: testing\n  - type: allowed-times\n    windows:\n    - days: Monday-Thursday\n      hours: 8-16\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC Permissions for Spinnaker in Kubernetes\nDESCRIPTION: YAML configuration for setting up role-based access control (RBAC) for Spinnaker in Kubernetes. Creates a ClusterRole with specific permissions, a ClusterRoleBinding to link it to a service account, and the ServiceAccount itself in the spinnaker namespace.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n name: spinnaker-role\nrules:\n- apiGroups: [\"\"]\n  resources: [\"namespaces\", \"configmaps\", \"events\", \"replicationcontrollers\", \"serviceaccounts\", \"pods/log\"]\n  verbs: [\"get\", \"list\"]\n- apiGroups: [\"\"]\n  resources: [\"pods\", \"services\", \"secrets\"]\n  verbs: [\"create\", \"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n- apiGroups: [\"autoscaling\"]\n  resources: [\"horizontalpodautoscalers\"]\n  verbs: [\"list\", \"get\"]\n- apiGroups: [\"apps\"]\n  resources: [\"controllerrevisions\", \"statefulsets\"]\n  verbs: [\"list\"]\n- apiGroups: [\"extensions\", \"apps\"]\n  resources: [\"deployments\", \"deployments/scale\", \"replicasets\", \"ingresses\"]\n  verbs: [\"create\", \"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n# These permissions are necessary for halyard to operate. We use this role also to deploy Spinnaker itself.\n- apiGroups: [\"\"]\n  resources: [\"services/proxy\", \"pods/portforward\"]\n  verbs: [\"create\", \"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n name: spinnaker-role-binding\nroleRef:\n apiGroup: rbac.authorization.k8s.io\n kind: ClusterRole\n name: spinnaker-role\nsubjects:\n- namespace: spinnaker\n  kind: ServiceAccount\n  name: spinnaker-service-account\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n name: spinnaker-service-account\n namespace: spinnaker\n```\n\n----------------------------------------\n\nTITLE: Creating GCP Service Account and Credentials\nDESCRIPTION: Script to create a GCP service account with storage admin role and generate JSON credentials file. Sets up necessary permissions and creates a service account key.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gcs.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_ACCOUNT_NAME=spin-gcs-artifacts-account\nSERVICE_ACCOUNT_DEST=~/.gcp/gcs-artifacts-account.json\n\ngcloud iam service-accounts create \\\n    $SERVICE_ACCOUNT_NAME \\\n    --display-name $SERVICE_ACCOUNT_NAME\n\nSA_EMAIL=$(gcloud iam service-accounts list \\\n    --filter=\"displayName:$SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\nPROJECT=$(gcloud config get-value project)\n\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --role roles/storage.admin --member serviceAccount:$SA_EMAIL\n\nmkdir -p $(dirname $SERVICE_ACCOUNT_DEST)\n\ngcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \\\n    --iam-account $SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Running a Retrospective Analysis on a Canary Configuration\nDESCRIPTION: Command to test a canary config by running a retrospective analysis. Requires specifying control and experiment groups, their locations, and the time window for analysis. Returns the result of the canary execution.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/canary-configs/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ spin canary canary-configs retro \\\n  -f <path to canary config json> \\\n  --control-group app-control-v001 --control-location us-central1 \\\n  --experiment-group app-experiment-v001 --experiment-location us-central1 \\\n  --start 2019-09-17T16:27:19.867Z \\\n  --end 2019-09-17T17:27:19.867Z\n\nInitiating canary execution for supplied canary config\nSpawned canary execution with id 01DR9BEP8XTJQDPVFJ41C9MBJ6, polling for completion...\nRetrospective canary execution finished, judgement = PASS\n```\n\n----------------------------------------\n\nTITLE: Deploying Spinnaker\nDESCRIPTION: Commands to configure and deploy Spinnaker in distributed mode\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit \\\n    --account-name my-k8s-account \\\n    --type distributed\n\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Enabling OAuth2 via Halyard CLI\nDESCRIPTION: Bash commands for configuring and enabling G Suite OAuth2 authentication using Halyard CLI. Sets the client ID, client secret, and enables OAuth2 authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/google/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn oauth2 edit --provider google \\\n  --client-id (client ID from above) \\\n  --client-secret (client secret from above)\n\nhal config security authn oauth2 enable\n\n```\n\n----------------------------------------\n\nTITLE: Creating GCP Service Account for Spinnaker\nDESCRIPTION: Series of commands to create a service account with storage admin permissions and generate its JSON key file. Sets up authentication for Spinnaker to access GCS.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/gcs.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_ACCOUNT_NAME=spinnaker-gcs-account\nSERVICE_ACCOUNT_DEST=~/.gcp/gcs-account.json\n\ngcloud iam service-accounts create \\\n    $SERVICE_ACCOUNT_NAME \\\n    --display-name $SERVICE_ACCOUNT_NAME\n\nSA_EMAIL=$(gcloud iam service-accounts list \\\n    --filter=\"displayName:$SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\nPROJECT=$(gcloud config get-value project)\n\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --role roles/storage.admin --member serviceAccount:$SA_EMAIL\n\nmkdir -p $(dirname $SERVICE_ACCOUNT_DEST)\n\ngcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \\\n    --iam-account $SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Example Docker Image Artifact in JavaScript\nDESCRIPTION: Example of a Docker image artifact definition in Spinnaker, showing the required type, reference, name, and version fields for a Docker image.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/index.md#2025-04-09_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n// A docker image\n{\n  \"type\": \"docker/image\",\n  \"reference\": \"gcr.io/project/image@sha256:29fee8e284\",\n  \"name\": \"gcr.io/project/image\",\n  \"version\": \"sha256:29fee8e284\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Artifact Account in Spinnaker using Halyard\nDESCRIPTION: This command adds a Maven artifact account to Spinnaker using Halyard. It specifies the account name and the repository URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/maven.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact maven account add my-maven-account \\\n    --repository-url https://my.repo.example.com\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC Permissions for Spinnaker in Kubernetes\nDESCRIPTION: YAML configuration for setting up role-based access control (RBAC) for Spinnaker in Kubernetes. Creates a ClusterRole with specific permissions, a ClusterRoleBinding to link it to a service account, and the ServiceAccount itself in the spinnaker namespace.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n name: spinnaker-role\nrules:\n- apiGroups: [\"\"]\n  resources: [\"namespaces\", \"configmaps\", \"events\", \"replicationcontrollers\", \"serviceaccounts\", \"pods/log\"]\n  verbs: [\"get\", \"list\"]\n- apiGroups: [\"\"]\n  resources: [\"pods\", \"services\", \"secrets\"]\n  verbs: [\"create\", \"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n- apiGroups: [\"autoscaling\"]\n  resources: [\"horizontalpodautoscalers\"]\n  verbs: [\"list\", \"get\"]\n- apiGroups: [\"apps\"]\n  resources: [\"controllerrevisions\", \"statefulsets\"]\n  verbs: [\"list\"]\n- apiGroups: [\"extensions\", \"apps\"]\n  resources: [\"deployments\", \"deployments/scale\", \"replicasets\", \"ingresses\"]\n  verbs: [\"create\", \"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n# These permissions are necessary for halyard to operate. We use this role also to deploy Spinnaker itself.\n- apiGroups: [\"\"]\n  resources: [\"services/proxy\", \"pods/portforward\"]\n  verbs: [\"create\", \"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n name: spinnaker-role-binding\nroleRef:\n apiGroup: rbac.authorization.k8s.io\n kind: ClusterRole\n name: spinnaker-role\nsubjects:\n- namespace: spinnaker\n  kind: ServiceAccount\n  name: spinnaker-service-account\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n name: spinnaker-service-account\n namespace: spinnaker\n```\n\n----------------------------------------\n\nTITLE: Configuring Dual Execution Repository in Orca\nDESCRIPTION: YAML configuration for enabling dual write mode to both Redis and SQL repositories during migration. This configuration enables writing to both storage systems simultaneously.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/orca-redis-to-sql.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nexecutionRepository:\n  dual:\n    enabled: true\n    primaryName: sqlExecutionRepository\n    previousName: redisExecutionRepository\n  sql:\n    enabled: true\n  redis:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Travis CI in Spinnaker using Halyard\nDESCRIPTION: This command enables Travis CI integration in Spinnaker using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/travis.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config ci travis enable\n```\n\n----------------------------------------\n\nTITLE: Capturing Single Key-Value Pairs from Job Logs\nDESCRIPTION: Example of how to output key-value pairs in job logs using the SPINNAKER_PROPERTY_ prefix. This allows Spinnaker to capture individual properties from the job output.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/run-job-manifest/index.md#2025-04-09_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nSPINNAKER_PROPERTY_RELEASE=1.1.1\nSPINNAKER_PROPERTY_URL=https://github.com/spinnaker/spinnaker/releases/tag/1.1.1\n```\n\n----------------------------------------\n\nTITLE: Creating Username and Password File for HTTP Authentication in Bash\nDESCRIPTION: This command creates a file containing the username and password in the format required for HTTP basic authentication. The credentials are saved to a specified file path that will be referenced when configuring the HTTP artifact account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/http.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho ${USERNAME}:${PASSWORD} > $USERNAME_PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Payload Constraints Example Message\nDESCRIPTION: Example of a valid JSON payload that meets specified payload constraints in a Pub/Sub trigger.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/pubsub/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mykey\": \"myvalue\",\n  \"bing\": \"boooop\",\n  \"x\": [\"1\", \"2\", \"3\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Key Vault\nDESCRIPTION: Commands to create and configure a Key Vault with default VM credentials\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/azure.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nVAULT_NAME=<Insert Vault Name>\naz keyvault create --enabled-for-template-deployment true --resource-group $RESOURCE_GROUP --name $VAULT_NAME\naz keyvault set-policy --secret-permissions get --name $VAULT_NAME --spn $APP_ID\naz keyvault secret set --name VMUsername --vault-name $VAULT_NAME --value <Insert default username>\naz keyvault secret set --name VMSshPublicKey --vault-name $VAULT_NAME --value <Insert default SSH public key>\n```\n\n----------------------------------------\n\nTITLE: API Request for Marking Bad Artifact in Spinnaker\nDESCRIPTION: Example JSON payload for the POST request to mark an artifact version as bad in a Spinnaker environment. The request requires the target environment name, artifact reference, and specific version to be marked as bad.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/marking-as-bad/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"targetEnvironment\": \"test\",\n  \"reference\" : \"my-artifact\",\n  \"version\" : \"master-h10.62bbbd6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL Database and User Grants for Clouddriver\nDESCRIPTION: SQL commands to create the clouddriver database and set up necessary user permissions for both service and migration accounts.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/clouddriver-sql.md#2025-04-09_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE DATABASE `clouddriver` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nGRANT\n  SELECT, INSERT, UPDATE, DELETE, CREATE, EXECUTE, SHOW VIEW\nON `clouddriver`.*\nTO 'clouddriver_service'@'%';\n\nGRANT\n  SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES, EXECUTE, SHOW VIEW\nON `clouddriver`.*\nTO 'clouddriver_migrate'@'%';\n```\n\n----------------------------------------\n\nTITLE: Configure Halyard for SAML Authentication\nDESCRIPTION: Halyard commands to configure SAML authentication settings including keystore, metadata, and service URL configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/saml/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nKEYSTORE_PATH= # /path/to/keystore.jks\nKEYSTORE_PASSWORD=hunter2\nMETADATA_PATH= # /path/to/metadata.xml\nSERVICE_ADDR_URL=https://localhost:8084\nISSUER_ID=spinnaker.test\n\nhal config security authn saml edit \\\n  --keystore $KEYSTORE_PATH \\\n  --keystore-alias saml \\\n  --keystore-password $KEYSTORE_PASSWORD \\\n  --metadata $METADATA_PATH \\\n  --issuer-id $ISSUER_ID \\\n  --service-address-url $SERVICE_ADDR_URL\n  \nhal config security authn saml enable\n```\n\n----------------------------------------\n\nTITLE: Creating Service Account for Pub/Sub\nDESCRIPTION: Commands to create and configure a service account with Pub/Sub subscriber role.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/google.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_ACCOUNT_NAME=spinnaker-pubsub-account\nSERVICE_ACCOUNT_DEST=~/.gcp/pubsub-account.json\n\ngcloud iam service-accounts create \\\n    $SERVICE_ACCOUNT_NAME \\\n    --display-name $SERVICE_ACCOUNT_NAME\n\nSA_EMAIL=$(gcloud iam service-accounts list \\\n    --filter=\"displayName:$SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\nPROJECT=$(gcloud config get-value project)\n\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --role roles/pubsub.subscriber --member serviceAccount:$SA_EMAIL\n\nmkdir -p $(dirname $SERVICE_ACCOUNT_DEST)\n\ngcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \\\n    --iam-account $SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Configuring distributed Spinnaker installation on Kubernetes\nDESCRIPTION: This command configures Halyard to deploy Spinnaker in a distributed manner on the Kubernetes cluster, which helps limit update-related downtime.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit --type distributed --account-name eks-spinnaker\n```\n\n----------------------------------------\n\nTITLE: Enabling Travis Stage in Spinnaker Deck (version 1.19 or earlier)\nDESCRIPTION: This JavaScript code enables the Travis stage feature in Spinnaker's Deck UI for versions 1.19 or earlier. It should be added to the Deck custom profile.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/travis.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.spinnakerSettings.feature.travis = true;\n```\n\n----------------------------------------\n\nTITLE: Specifying Static Patch Content in YAML\nDESCRIPTION: An example of static patch content to add a new label to a Kubernetes resource. This YAML snippet would be entered directly in the pipeline configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/patch-manifest/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    foo: bar\n```\n\n----------------------------------------\n\nTITLE: Specifying Static Patch Content in YAML\nDESCRIPTION: An example of static patch content to add a new label to a Kubernetes resource. This YAML snippet would be entered directly in the pipeline configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/patch-manifest/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    foo: bar\n```\n\n----------------------------------------\n\nTITLE: Adding HTTP Artifact Account with Basic Authentication in Spinnaker\nDESCRIPTION: This command adds an HTTP artifact account named 'my-http-account' with basic authentication credentials. The credentials are read from the file specified by the $USERNAME_PASSWORD_FILE variable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/http.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact http account add my-http-account \\\n    --username-password-file $USERNAME_PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Configuring igor-local.yml for Google Cloud Build\nDESCRIPTION: YAML configuration to enable locking in the igor-local.yml file for Spinnaker's Google Cloud Build integration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/gcb.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nlocking:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Volumes for Spinnaker Services in Kubernetes\nDESCRIPTION: This configuration shows how to define custom volumes for Spinnaker services deployed on Kubernetes. It supports configMap, secret, and emptyDir volume types, which can be used to mount custom certificates, configs, or temporary storage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  volumes:\n  - id: secret-example-vol\n    type: secret\n    mountPath: /path/to/location/of/secret\n  - id: configmap-example-vol\n    type: configMap\n    mountPath: /path/to/location/of/configMap\n  - id: emptydir-example-vol\n    type: emptyDir\n    mountPath: /path/to/location/of/emptyDir\n```\n\n----------------------------------------\n\nTITLE: Configuring Trust Policy for Task Execution IAM Role in Amazon ECS\nDESCRIPTION: JSON trust policy configuration that allows the ECS tasks service to assume the role. This is necessary when not using a task definition artifact for server groups running on Fargate.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ecs.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n                \"Service\": [\n                  \"ecs-tasks.amazonaws.com\"\n                ]\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Environment Pin via Spinnaker API (JSON)\nDESCRIPTION: This snippet demonstrates the JSON body structure for a POST request to create an environment pin. It includes the target environment, artifact reference, and version to pin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/pinning/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"targetEnvironment\": \"test\",\n  \"reference\" : \"my-artifact\",\n  \"version\" : \"master-h10.62bbbd6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Blue/Green Deployment ReplicaSet Configuration\nDESCRIPTION: YAML configuration for a ReplicaSet with annotations for version history and load balancer management in blue/green deployment\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/traffic-management/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  annotations:\n    strategy.spinnaker.io/max-version-history: '2'\n    traffic.spinnaker.io/load-balancers: '[\"service my-service\"]'\n  labels:\n    app: myapp\n  name: myapp-frontend\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n        - image: 'gcr.io/google_samples/gb-frontend:v3'\n          name: frontend\n```\n\n----------------------------------------\n\nTITLE: Deploying CloudFormation Template for Managing Account with AWS CLI\nDESCRIPTION: This snippet shows how to deploy the CloudFormation template for the managing account using the AWS CLI. It includes options for using access keys or an instance profile for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O -L https://spinnaker.io/downloads/aws/managing.yaml\necho \"Optionally add Managing account to the file downloaded as shown on line 158 in the SpinnakerAssumeRolePolicy section of the downloaded file.\"\naws cloudformation deploy --stack-name spinnaker-managing-infrastructure-setup --template-file managing.yaml \\\n--parameter-overrides UseAccessKeyForAuthentication=true --capabilities CAPABILITY_NAMED_IAM --region us-west-2\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O -L https://spinnaker.io/downloads/aws/managing.yaml\necho \"Optionally add Managing account to the file downloaded as shown on line 158 in the SpinnakerAssumeRolePolicy section of the downloaded file.\"\naws cloudformation deploy --stack-name spinnaker-managing-infrastructure-setup --template-file managing.yaml \\\n--parameter-overrides UseAccessKeyForAuthentication=false --capabilities CAPABILITY_NAMED_IAM --region us-west-2\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker for Google Cloud Build using Halyard\nDESCRIPTION: Halyard commands to enable Google Cloud Build integration in Spinnaker, including setting up the GCB account and enabling the CI feature.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/gcb.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config pubsub google enable\n\nhal config ci gcb account add $ACCOUNT_NAME \\\n  --project $PROJECT_ID \\\n  --subscription-name $SUBSCRIPTION_NAME \\\n  --json-key $SERVICE_ACCOUNT_KEY\n\nhal config ci gcb enable\n\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Executing a Pipeline in Spinnaker\nDESCRIPTION: Shows how to trigger the execution of a pipeline using the Spin CLI. The command requires specifying both the pipeline name and the application it belongs to.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline execute --name my-pipeline --application my-app\n\nPipeline execution started\n```\n\n----------------------------------------\n\nTITLE: Configuring Orca for Jenkins Backlinks (YAML)\nDESCRIPTION: This YAML configuration enables Orca to update Jenkins build descriptions with backlinks to Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/jenkins.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  baseUrl:\n    www: https://spinnaker.ui.url\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Metrics Provider\nDESCRIPTION: Command to set the default metrics store for canary analysis. Options include atlas, datadog, stackdriver, prometheus, and newrelic.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary edit --default-metrics-store STORE\n```\n\n----------------------------------------\n\nTITLE: Adding Kubernetes Accounts to Spinnaker with Halyard\nDESCRIPTION: Commands to register Kubernetes production and staging contexts with Spinnaker using Halyard. This connects Spinnaker to the two Kubernetes clusters for deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider kubernetes account add prod-demo \\\n  --context $PROD_CONTEXT\n\nhal config provider kubernetes account add staging-demo \\\n  --context $STAGING_CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Dual Task Repository Configuration for Redis to SQL Migration\nDESCRIPTION: YAML configuration for maintaining task repository availability during migration from Redis to SQL, enabling fallback reads to Redis for tasks not found in SQL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/clouddriver-sql.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nredis:\n  enabled: true\n  connection: redis://your.redis\n  cache:\n    enabled: false\n  scheduler:\n    enabled: false\n  taskRepository:\n    enabled: true\n\ndualTaskRepository:\n  enabled: true\n  primaryClass: com.netflix.spinnaker.clouddriver.sql.SqlTaskRepository\n  previousClass: com.netflix.spinnaker.clouddriver.data.task.jedis.RedisTaskRepository\n```\n\n----------------------------------------\n\nTITLE: Configuring Halyard for Stackdriver integration\nDESCRIPTION: Halyard commands to configure Spinnaker to use Stackdriver for metrics collection. These commands specify the service account credentials path and enable the Stackdriver metric store.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/stackdriver.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config metric-stores stackdriver edit \\\n    --credentials-path $SERVICE_ACCOUNT_DEST\n\nhal config metric-stores stackdriver enable\n```\n\n----------------------------------------\n\nTITLE: Triggering a Fiat Sync for Service Account Permissions\nDESCRIPTION: After creating a service account, this command forces Fiat to synchronize roles so that the changes take effect for all users immediately.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/service-accounts/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nFIAT=http://fiat.url:7003\n\ncurl -X POST $FIAT/roles/sync\n```\n\n----------------------------------------\n\nTITLE: Setting the Default Canary Judge\nDESCRIPTION: Command to set the default canary judge used for analysis. The default judge is 'NetflixACAJudge-v1.0', but this can be changed if other judges are available.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary edit --default-judge JUDGE\n```\n\n----------------------------------------\n\nTITLE: Converting String to Boolean in Spinnaker Expressions\nDESCRIPTION: Function that converts an input string value to a boolean type for use in pipeline expressions.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_6\n\nLANGUAGE: SpEL\nCODE:\n```\n#toBoolean(String)\n```\n\n----------------------------------------\n\nTITLE: Converting String to Float in Spinnaker Expressions\nDESCRIPTION: Function that converts a string value to a floating point number for numerical operations in pipeline expressions.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_7\n\nLANGUAGE: SpEL\nCODE:\n```\n#toFloat(String)\n```\n\n----------------------------------------\n\nTITLE: Configuring Template Path in Halyard\nDESCRIPTION: Halyard command to set the Jinja template path for Pub/Sub message translation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/pubsub/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config pubsub google subscription edit my-gcs-subscription \\\n  --template-path /path/to/jinja/template\n```\n\n----------------------------------------\n\nTITLE: Testing LDAP Search With DN Pattern\nDESCRIPTION: Command to test LDAP search using manager DN credentials with a specific user DN pattern.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/ldap/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -D \"MANAGER_DN\" -w 'MANAGER_PASSWORD' -H ldaps://1.2.3.4/OU=Y,O=io -x \"(CN=USERNAME,OU=users,OU=Y,O=IO))\"\n```\n\n----------------------------------------\n\nTITLE: Future Date Calculation in Java Pipeline Expression\nDESCRIPTION: Example demonstrating how to calculate a future date using Java's LocalDate class within a pipeline expression.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n${T(java.time.LocalDate).now().plusDays(5).toString()}\n```\n\n----------------------------------------\n\nTITLE: Updating Halyard and Deploying Kayenta\nDESCRIPTION: Commands to update Halyard to the required version (0.46.0+), set Spinnaker version to 1.7.0 or higher, and deploy the updated configuration with Kayenta included.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version 1.7.0\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo hal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Saving Pipeline Template with Spin CLI\nDESCRIPTION: Shows how to save the finalized pipeline template JSON file using the Spin CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/create.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline-templates save --file my_template.txt\n```\n\n----------------------------------------\n\nTITLE: Interpolating Expressions with Strings in SpEL\nDESCRIPTION: Shows how to combine multiple expressions with string literals in a single pipeline expression. This example assumes expressionA evaluates to 'Hello' and expressionB evaluates to 'world'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/expressions/index.md#2025-04-09_snippet_1\n\nLANGUAGE: SpEL\nCODE:\n```\n${expressionA}-randomString-${expressionB}\n```\n\n----------------------------------------\n\nTITLE: AWS User Data File Configuration in Spinnaker\nDESCRIPTION: YAML configuration for AWS user data files in Spinnaker. These properties control the location and behavior of user data templates for AWS deployments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/user-data.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nudf:\n  udfRoot: /apps/nflx-udf\n  defaultLegacyUdf: true\n```\n\n----------------------------------------\n\nTITLE: Adding a Kubernetes Account to Spinnaker\nDESCRIPTION: Bash commands to enable the Kubernetes provider in Spinnaker and add a Kubernetes account using the current kubectl context. This establishes the connection between Spinnaker and your Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider kubernetes enable\n\nCONTEXT=$(kubectl config current-context)\n\nhal config provider kubernetes account add my-k8s-account \\\n    --context $CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Creating and configuring Kubernetes service account for Spinnaker\nDESCRIPTION: These commands create a Kubernetes service account for Spinnaker, extract its token, and configure kubectl to use this token for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --context $CONTEXT -f https://www.spinnaker.io/downloads/kubernetes/service-account.yml\n\nTOKEN=$(kubectl get secret --context $CONTEXT \\\n   $(kubectl get serviceaccount spinnaker-service-account \\\n       --context $CONTEXT \\\n       -n spinnaker \\\n       -o jsonpath='{.secrets[0].name}') \\\n   -n spinnaker \\\n   -o jsonpath='{.data.token}' | base64 --decode)\n\nkubectl config set-credentials ${CONTEXT}-token-user --token $TOKEN\n\nkubectl config set-context $CONTEXT --user ${CONTEXT}-token-user\n\nhal config provider kubernetes account add eks-spinnaker --context $CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Adding Google Cloud Account to Spinnaker via Halyard\nDESCRIPTION: This command adds a new Google Cloud account to Spinnaker using Halyard. It specifies the account name, GCP project, and the path to the service account JSON key file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/gce.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nACCOUNT=my-gce-account\nhal config provider google account add $ACCOUNT --project $PROJECT \\\n    --json-path $SERVICE_ACCOUNT_DEST\n```\n\n----------------------------------------\n\nTITLE: Exporting Security Group Configuration in Spinnaker API\nDESCRIPTION: This URL pattern is used to export an existing security group configuration to YAML format using the Spinnaker API. It requires specifying the AWS account name, application or security group name, and service account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/getting-started/index.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/managed/resources/export/aws/AWS_ACCOUNT_NAME/securitygroup/APP_NAME_OR_SG_NAME?serviceAccount=SERVICE_ACCOUNT\n```\n\n----------------------------------------\n\nTITLE: Enabling Pipeline Templates with Halyard in Spinnaker\nDESCRIPTION: This code snippet shows how to enable the pipeline templates feature in Spinnaker using Halyard commands. It requires access to the Halyard CLI and Spinnaker installation. First, the config is updated to enable the feature, then the changes are applied to the deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/enable.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config features edit --pipeline-templates true\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Adding ECR Account to Spinnaker\nDESCRIPTION: Adds an Amazon ECR account to Spinnaker using Halyard, with a password command to retrieve ECR authentication token.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/docker-registry.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider docker-registry account add my-ecr-registry \\\n --address $ADDRESS \\\n --username AWS \\\n --password-command \"aws --region $REGION ecr get-authorization-token --output text --query 'authorizationData[].authorizationToken' | base64 -d | sed 's/^AWS://'\"\n```\n\n----------------------------------------\n\nTITLE: Enabling CSRF Protection for Jenkins in Spinnaker (Bash)\nDESCRIPTION: This command enables CSRF protection for a Jenkins master in Spinnaker's configuration using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/jenkins.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config ci jenkins master edit MASTER --csrf true\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker Trust Store using Halyard\nDESCRIPTION: Halyard commands to configure Spinnaker to use the custom trust store for webhook connections. This requires setting the trust store path and password, followed by enabling the trust configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/webhook-custom-trust-store.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config webhook trust edit --trustStore <path-to-trust-store> --trustStorePassword\nhal config webhook trust enable\n```\n\n----------------------------------------\n\nTITLE: Configuring Gate for Plugin UI Components\nDESCRIPTION: Adds configuration to gate-local.yml to enable the plugin's UI components. This is required for plugins with Deck (UI) components starting from Spinnaker 1.20.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/deploy-example.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n   extensibility:\n     deck-proxy:\n       enabled: true\n       plugins:\n         Armory.RandomWaitPlugin:\n           enabled: true\n           version: 1.1.17\n     repositories:\n       examplePluginsRepo:\n         url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in User Data Files for Spinnaker-Provisioned Instances\nDESCRIPTION: Example of setting a Consul server address in a user data file. This environment variable will be set on every instance provisioned by Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/user-data.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCONSUL_SERVER_ADDRESS=\"consul.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Kubernetes Account to Spinnaker\nDESCRIPTION: Bash commands to enable the Kubernetes provider in Spinnaker and add a Kubernetes account using the current kubectl context. This establishes the connection between Spinnaker and your Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider kubernetes enable\n\nCONTEXT=$(kubectl config current-context)\n\nhal config provider kubernetes account add my-k8s-account \\\n    --context $CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Registering Stages in Plugin Index\nDESCRIPTION: JavaScript code to register custom stages in a Spinnaker frontend plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { IDeckPlugin } from '@spinnaker/core';\nimport { widgetizeStage } from './WidgetizeStage';\n\nexport const plugin: IDeckPlugin = {\n  stages: [widgetizeStage],\n};\n```\n\n----------------------------------------\n\nTITLE: Saving Pipeline Templates with Spin CLI\nDESCRIPTION: Demonstrates how to create or update a pipeline template using the 'save' command. It accepts a JSON file containing the pipeline template definition.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline-templates/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ spin pipeline-templates save --file <path to pipeline json>\n\nPipeline template save succeeded\n```\n\n----------------------------------------\n\nTITLE: Setting Default Metrics and Storage Accounts\nDESCRIPTION: Commands to set the default accounts for metrics and storage providers. These defaults can be overridden in canary configuration if needed.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary edit --default-metrics-account ACCOUNT\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary edit --default-storage-account ACCOUNT\n```\n\n----------------------------------------\n\nTITLE: Configuring Vault Backend for Spring Cloud Config in Spinnaker\nDESCRIPTION: YAML configuration for setting up HashiCorp Vault as the backend for Spring Cloud Config in Spinnaker. It specifies Vault host, port, backend type, key-value version, and authentication token.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nspring:\n  profiles:\n    include: vault\n  cloud:\n    config:\n      server:\n        vault:\n          host: config-vault.example.com\n          port: 8200\n          backend: secret\n          kvVersion: 2\n          defaultKey: clouddriver\n          token: [vault access token]\n```\n\n----------------------------------------\n\nTITLE: Creating Service Account for App Engine\nDESCRIPTION: Script to create and configure a service account with necessary permissions for App Engine deployment\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/appengine.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_ACCOUNT_NAME=spinnaker-appengine-account\nSERVICE_ACCOUNT_DEST=~/.gcp/appengine-account.json\n\ngcloud iam service-accounts create \\\n    $SERVICE_ACCOUNT_NAME \\\n    --display-name $SERVICE_ACCOUNT_NAME\n\nSA_EMAIL=$(gcloud iam service-accounts list \\\n    --filter=\"displayName:$SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\nPROJECT=$(gcloud config get-value project)\n\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --role roles/storage.admin \\\n    --member serviceAccount:$SA_EMAIL\n\ngcloud projects add-iam-policy-binding $PROJECT \\\n    --role roles/appengine.appAdmin \\\n    --member serviceAccount:$SA_EMAIL\n\nmkdir -p $(dirname $SERVICE_ACCOUNT_DEST)\n\ngcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \\\n    --iam-account $SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Overriding Constraint State API Request (JSON)\nDESCRIPTION: JSON body for the POST request to override a constraint state in Spinnaker Managed Delivery. This example shows overriding a failed canary constraint to pass with a comment explaining the reason.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"canary\",\n  \"artifactVersion\":  \"fnord-1.2.3\",\n  \"status\": \"OVERRIDE_PASS\",\n  \"comment\": \"overriding false positive kayenta failure\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Spinnaker with Halyard\nDESCRIPTION: Command to apply the Spinnaker configuration and deploy it to the configured Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Configuring Datadog Integration for Canary Analysis\nDESCRIPTION: Commands to enable, disable, and manage Datadog integration for canary analysis metrics. This includes account management with API keys and application keys.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog enable\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog disable\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog account add ACCOUNT --api-key --application-key\n--base-url\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog account edit ACCOUNT --api-key --application-key\n--base-url\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog account delete ACCOUNT\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog account get ACCOUNT\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary datadog account list\n```\n\n----------------------------------------\n\nTITLE: Kubernetes RBAC Configuration\nDESCRIPTION: YAML configuration for creating RBAC roles and service account for Spinnaker in Kubernetes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n name: spinnaker-role\nrules:\n- apiGroups: [\"\"]\n  resources: [\"namespaces\", \"configmaps\", \"events\", \"replicationcontrollers\", \"serviceaccounts\", \"pods/logs\"]\n  verbs: [\"get\", \"list\"]\n- apiGroups: [\"\"]\n  resources: [\"pods\", \"pods/portforward\", \"services\", \"services/proxy\", \"secrets\"]\n  verbs: [\"*\"]\n- apiGroups: [\"autoscaling\"]\n  resources: [\"horizontalpodautoscalers\"]\n  verbs: [\"list\", \"get\"]\n- apiGroups: [\"apps\"]\n  resources: [\"controllerrevisions\", \"statefulsets\"]\n  verbs: [\"list\"]\n- apiGroups: [\"extensions\", \"app\", \"apps\"]\n  resources: [\"deployments\", \"replicasets\", \"ingresses\", \"daemonsets\"]\n  verbs: [\"*\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n name: spinnaker-role-binding\nroleRef:\n apiGroup: rbac.authorization.k8s.io\n kind: ClusterRole\n name: spinnaker-role\nsubjects:\n- namespace: default\n  kind: ServiceAccount\n  name: spinnaker-service-account\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n name: spinnaker-service-account\n namespace: default\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes provider for Spinnaker\nDESCRIPTION: These commands enable the Kubernetes provider in Spinnaker, set the current kubectl context, and create environment variables for further configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# Enable the Kubernetes provider\nhal config provider kubernetes enable\n\n# Set the current kubectl context to the cluster for Spinnaker\nkubectl config use-context eks-spinnaker\n\n# Assign the Kubernetes context to CONTEXT\nCONTEXT=$(kubectl config current-context)\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Cleanup in Orca (YAML)\nDESCRIPTION: This snippet demonstrates how to configure pipeline cleanup settings in Orca's configuration file. It includes options for enabling cleanup, setting cleanup intervals, retention periods, and minimum execution counts.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/caching/configure-redis-usage.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npollers:\n  oldPipelineCleanup:\n    enabled: true                  # This enables old pipeline execution cleanup (default: false)\n    intervalMs: 3600000            # How many milliseconds between pipeline cleanup runs (default: 1hr or 3600000)\n    thresholdDays: 30              # How old a pipeline execution must be to be deleted (default: 30)\n    minimumPipelineExecutions: 5   # How many executions to keep around (default: 5)\n\ntasks:\n  daysOfExecutionHistory: 180      # How many days to keep old task executions around.\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Rollout Strategies Guide\nDESCRIPTION: YAML front matter for the Rollout Strategies guide page, specifying layout, title, and sidebar navigation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/rollout-strategies/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Rollout Strategies\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Saving a Spinnaker Project\nDESCRIPTION: Demonstrates how to create or update a Spinnaker project by saving a JSON configuration file using the spin CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/projects/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ spin project save --file <path to project json>\n\nProject save succeeded\n```\n\n----------------------------------------\n\nTITLE: Disabling Cassandra in Echo Configuration\nDESCRIPTION: Configuration to disable Cassandra as the backend storage for Echo in the echo.yml file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/echo-cassandra-to-in-memory.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  cassandra:\n    enabled: false\n```\n\n----------------------------------------\n\nTITLE: Migration Phase Clouddriver Configuration\nDESCRIPTION: Custom Spring profile configuration for migration clusters with SQL as primary storage and Redis as fallback. Enables SQL caching and scheduling while disabling Redis caching.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/clouddriver-sql.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nsql:\n  enabled: true\n  taskRepository:\n    enabled: true\n  cache:\n    enabled: true\n    readBatchSize: 500\n    writeBatchSize: 300\n  scheduler:\n    enabled: true\n  connectionPools:\n    default:\n      default: true\n      jdbcUrl: jdbc:mysql://clouddriver-aurora-cluster-endpoint:3306/clouddriver\n      user: clouddriver_service\n      password: hi! # actually injected from encrypted secrets\n  migration:\n    user: clouddriver_migrate\n    jdbcUrl: jdbc:mysql://clouddriver-aurora-cluster-endpoint:3306/clouddriver\n\nredis:\n  enabled: true\n  connection: redis://your.redis\n  cache:\n    enabled: false\n  scheduler:\n    enabled: false\n  taskRepository:\n    enabled: true\n\ndualTaskRepository:\n  enabled: true\n  primaryClass: com.netflix.spinnaker.clouddriver.sql.SqlTaskRepository\n  previousClass: com.netflix.spinnaker.clouddriver.data.task.jedis.RedisTaskRepository\n```\n\n----------------------------------------\n\nTITLE: Editing Kubernetes Service for Spinnaker UI in Bash and YAML\nDESCRIPTION: Command to edit the Kubernetes Service for Spinnaker's UI (spin-deck) and the corresponding YAML changes to expose it publicly with a static IP.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-public/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit svc spin-deck -n spinnaker\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: 2017-06-01T00:57:34Z\n  name: spin-deck\n  namespace: spinnaker\n  resourceVersion: \"6038615\"\n  selfLink: /api/v1/namespaces/spinnaker/services/spin-deck\n  uid: 4c1fb82f-4165-11e7-888f-42020a8a0a12\nspec:\n  clusterIP: 10.127.244.30\n  ports:\n  - port: 80                           ## CHANGE THIS TO 80\n    protocol: TCP\n    targetPort: 9000\n  selector:\n    load-balancer-spin-deck: \"true\"\n  sessionAffinity: None\n  type: LoadBalancer                   ## CHANGE FROM ClusterIP to LoadBalancer\n  loadBalancerIP: $UI_ADDRESS          ## ADD THIS LINE FOR YOUR VALUE OF\n                                       ## $UI_ADDRESS\nstatus:\n  loadBalancer: {}\n```\n\n----------------------------------------\n\nTITLE: Release Tag Push for Docker Build\nDESCRIPTION: Commands to create and push a new release tag to trigger a Docker build for deploying changes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngit tag release-1.1\ngit push origin release-1.1\n```\n\n----------------------------------------\n\nTITLE: Querying for Pub/Sub Triggered Pipelines with Bash\nDESCRIPTION: Bash script demonstrating how to query the Spinnaker API for pipeline executions that were triggered by a specific Pub/Sub message. The script narrows results by application name, trigger type, and a base64-encoded trigger payload containing the message ID.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/searching/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nAPPLICATION=<application-name>  # This will narrow down results to only contain pipeline executions within a given application. You may supply '*' here to search across all applications.\nTRIGGER_TYPE=pubsub  # This will narrow down results to only contain pipelines executions triggered by a Pub/Sub message\nTRIGGER=$(echo '{ \"id\": \"9c3036f6-3791-47eb-bb69-30983acb00be\" }' | base64)  # This will narrow down results to only contain pipeline executions triggered with a payload that includes this key/value. We base64-encode this so that it can be passed as a query parameter to the API.\n\n# Example call to Gate\ncurl localhost:8084/applications/$APPLICATION/executions/search?triggerTypes=$TRIGGER_TYPE&trigger=$TRIGGER\n```\n\n----------------------------------------\n\nTITLE: Structuring a Pub/Sub Message with an Identifier in JSON\nDESCRIPTION: Example of a Pub/Sub message JSON structure that includes an 'id' field containing a randomly generated GUID. This identifier can later be used to search for pipeline executions triggered by this specific message.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/searching/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"9c3036f6-3791-47eb-bb69-30983acb00be\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins HTTP Port\nDESCRIPTION: Configuration snippet showing how to change the default Jenkins HTTP port from 8080 to 5656 to avoid conflict with Spinnaker's front50 service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nHTTP_PORT=5656\n```\n\n----------------------------------------\n\nTITLE: Creating Database and User Grants for Front50 in MySQL\nDESCRIPTION: SQL commands to create a database for Front50 and grant necessary permissions to service and migration users. This setup is required before deploying Front50 with SQL storage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/front50-sql.md#2025-04-09_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE DATABASE `front50` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nGRANT\n  SELECT, INSERT, UPDATE, DELETE, CREATE, EXECUTE, SHOW VIEW\nON `front50`.*\nTO 'front50_service'@'%'; -- IDENTIFIED BY \"password\" if using password based auth\n\nGRANT\n  SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES, EXECUTE, SHOW VIEW\nON `front50`.*\nTO 'front50_migrate'@'%'; -- IDENTIFIED BY \"password\" if using password based auth\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Master Permissions with Fiat in YAML\nDESCRIPTION: YAML configuration example showing how to set up READ and WRITE permissions for a Jenkins master in Spinnaker. Demonstrates role-based access control where 'foo' and 'bar' roles have READ access, while 'bar' role has WRITE access.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/fiat_permissions.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njenkins:\n  enabled: true\n  masters:\n  - name: <jenkins master name>\n    address: http://<jenkins ip>/jenkins\n    username: <jenkins admin user>\n    password: <admin password>\n    csrf: true\n    permissions:\n      READ:\n      - foo\n      - bar\n      WRITE:\n      - bar\n```\n\n----------------------------------------\n\nTITLE: Accessing Jenkins Trigger Build Information in SpEL\nDESCRIPTION: Demonstrates how to access information about a Jenkins trigger, specifically the build number that triggered the current pipeline execution.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/expressions/index.md#2025-04-09_snippet_4\n\nLANGUAGE: SpEL\nCODE:\n```\n${trigger[\"buildInfo\"][\"number\"]}\n```\n\n----------------------------------------\n\nTITLE: Configuring Artifacts in Spinnaker Delivery Config\nDESCRIPTION: Defines an artifact configuration for a Debian package including VM options, base OS, and regions for baking images. This configuration is used to specify package details that will be promoted through environments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/delivery-configs/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nartifacts:\n- name: keeldemo\n  type: deb\n  reference: my-artifact   # optional human-readable reference to be used elsewhere in the config, defaults to artifact name\n  vmOptions:               # only required for Debian artifacts, this information is used to determine how to bake a virtual machine image\n    baseOs: bionic-classic # the base operating system for the virtual machine image\n    regions:               # the regions to bake the image in (this should at least correspond to the regions you will deploy to)\n    - us-west-2\n    - us-east-1\n    baseLabel: RELEASE     # the operating system label, optional and defaults to \"RELEASE\"\n    storeType: EBS         # the storage type for the virtual machine image, optional and defaults to \"EBS\"\n```\n\n----------------------------------------\n\nTITLE: Using JsonPath Output Formatting with Spin CLI\nDESCRIPTION: Example command showing how to use the Spin CLI's output formatting options with JsonPath. This allows extracting specific elements from the JSON output of Spin commands.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline get --name pipelineName --application app --output jsonpath=\"{.stages}\"\n\n[\n<stages>\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Artifacts in Spinnaker Delivery Config\nDESCRIPTION: Defines an artifact configuration for a Debian package including VM options, base OS, and regions for baking images. This configuration is used to specify package details that will be promoted through environments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/delivery-configs/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nartifacts:\n- name: keeldemo\n  type: deb\n  reference: my-artifact   # optional human-readable reference to be used elsewhere in the config, defaults to artifact name\n  vmOptions:               # only required for Debian artifacts, this information is used to determine how to bake a virtual machine image\n    baseOs: bionic-classic # the base operating system for the virtual machine image\n    regions:               # the regions to bake the image in (this should at least correspond to the regions you will deploy to)\n    - us-west-2\n    - us-east-1\n    baseLabel: RELEASE     # the operating system label, optional and defaults to \"RELEASE\"\n    storeType: EBS         # the storage type for the virtual machine image, optional and defaults to \"EBS\"\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Kubernetes API Versions in Spinnaker\nDESCRIPTION: Implementation of a custom Kubernetes API version class that extends KubernetesApiVersion. This allows Spinnaker to support custom API versions for Kubernetes resources beyond the standard ones.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/crd-extensions.md#2025-04-09_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class MyApiVersion extends KubernetesApiVersion {\n  public static MY_BETA_API_VERSION = new MyApiVersion(\"myApiVersion/v1beta\");\n\n  public MyApiVersion(String name) {\n    // Base class maintains state.\n    super(name);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing BeginChapTask in Java for Spinnaker Orca\nDESCRIPTION: This code defines the BeginChapTask class, which implements the RetryableTask interface. It retrieves the testCaseId, starts a ChAP run, and returns the result.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/new-stage.md#2025-04-09_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage com.netflix.spinnaker.orca.chap.tasks;\n\nimport com.netflix.spinnaker.orca.*;\nimport com.netflix.spinnaker.orca.chap.ChapService;\nimport com.netflix.spinnaker.orca.chap.Run;\nimport com.netflix.spinnaker.orca.pipeline.model.Stage;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class BeginChapTask implements RetryableTask {\n\n  @Override\n  public TaskResult execute(Stage stage) {\n    Map<String, Object> ctx = stage.getContext();\n    Object testCaseId = ctx.get(\"testCaseId\");\n\n    if(testCaseId == null || !(testCaseId instanceof String)) {\n      throw new RuntimeException(\"Cannot begin ChAP experiment without a testCaseId.\");\n    }\n\n    Map<String, Object> params = new HashMap<>();\n    params.put(\"testCaseId\", testCaseId);\n    Run chapRun = chapService.startChap(params);\n\n    Map<String, Object> map = new HashMap<>();\n    map.put(\"run\", chapRun);\n    return new DefaultTaskResult(ExecutionStatus.SUCCEEDED, map);\n  }\n\n  public ChapService getChapService() {\n    return chapService;\n  }\n\n  public void setChapService(ChapService chapService) {\n    this.chapService = chapService;\n  }\n\n  @Autowired\n  private ChapService chapService;\n\n  @Override\n  public long getBackoffPeriod() {\n    return TimeUnit.SECONDS.toMillis(5);\n  }\n\n  @Override\n  public long getTimeout() {\n    return TimeUnit.MINUTES.toMillis(1);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling HA Echo in Halyard\nDESCRIPTION: This command enables high availability for the Echo service in Spinnaker, splitting it into two separate services: echo-scheduler and echo-worker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/high-availability.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy ha echo enable\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Trust Store for Internal Certificates\nDESCRIPTION: Creates a custom Java trust store by copying system certificates and importing internal CA certificate.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nmkdir /tmp/custom-trust-store`\ncp {path-to-cacerts} /tmp/custom-trust-store\nkeytool import -alias custom-ca -keystore /tmp/custom-trust-store/cacerts -file {your-internal-certificate}\n```\n\n----------------------------------------\n\nTITLE: Installing Stackdriver dashboards for Spinnaker\nDESCRIPTION: Bash commands to install the Spinnaker dashboards in Stackdriver. This process requires installing the monitoring daemon temporarily, setting an API key, and running the dashboard installation script.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/stackdriver.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport STACKDRIVER_API_KEY=<your api key>\nsudo apt-get update -y\nsudo apt-get install spinnaker-monitoring-daemon -y\nsudo apt-get install spinnaker-monitoring-third-party -y\n/opt/spinnaker-monitoring/third_party/stackdriver/install.sh --dashboards_only\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pipeline Template Information in Spinnaker CLI\nDESCRIPTION: This command uses the Spinnaker CLI to fetch information about a specific pipeline template. It allows users to examine the contents of the 'pipeline' element to determine what to use in their pipeline.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/override.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline-template get --id <templateName>\n```\n\n----------------------------------------\n\nTITLE: Updating Source Code to Trigger Jenkins Build\nDESCRIPTION: Commands for logging in as Jenkins user, navigating to the application directory, modifying the build file to bump release number, and committing changes to trigger a new build in the CI/CD pipeline.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/gce-source-to-prod/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo su jenkins\ncd /var/lib/jenkins/hello-karyon-rxnetty\n```\n\nLANGUAGE: bash\nCODE:\n```\nvi build.gradle\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -a -m \"Bump release number\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Orca for SQL in YAML\nDESCRIPTION: YAML configuration for enabling SQL in Orca, including connection pool settings, migration settings, and disabling Redis for execution repository, active executions monitoring, and work queue.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/orca-sql.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nsql:\n  enabled: true\n  connectionPools:\n    default:\n      default: true\n      # additional connection pool parameters are available here,\n      # for more detail and to view defaults, see:\n      # https://github.com/spinnaker/kork/blob/master/kork-sql/src/main/kotlin/com/netflix/spinnaker/kork/sql/config/ConnectionPoolProperties.kt\n      jdbcUrl: jdbc:mysql://localhost:3306/orca\n      user: orca_service\n      password: hunter2\n      # MariaDB-specific:\n      maxPoolSize: 50\n  migration:\n    jdbcUrl: jdbc:mysql://localhost:3306/orca\n    user: orca_migrate\n    password: hunter2\n\n# Ensure we're only using SQL for accessing execution state\nexecutionRepository:\n  sql:\n    enabled: true\n  redis:\n    enabled: false\n\n# Reporting on active execution metrics will be handled by SQL\nmonitor:\n  activeExecutions:\n    redis: false\n\n# Use SQL for Orca's work queue\n# Settings from Netflix and may require adjustment for your environment\n# Only validated with AWS Aurora MySQL 5.7\n# Please PR if you have success with other databases\nkeiko:\n  queue:\n    sql:\n      enabled: true\n    redis:\n      enabled: false\n\nqueue:\n  zombieCheck:\n    enabled: true\n  pendingExecutionService:\n    sql:\n      enabled: true\n    redis:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Slack Token in Gate (YAML)\nDESCRIPTION: Add the Slack API token to Gate's encrypted secrets configuration. This token is necessary for Gate to retrieve a list of channels from Slack's API.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/slack-support/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nslack:\n  token: YOUR_TOKEN_HERE\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-Service Redis Endpoint\nDESCRIPTION: YAML configuration for setting up service-specific Redis endpoints in Spinnaker service profiles.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/caching/externalize-redis.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nservices.redis.baseUrl: $REDIS_ENDPOINT\n```\n\n----------------------------------------\n\nTITLE: Generating CSR for Gate Certificate\nDESCRIPTION: Creates a certificate signing request for Gate using the previously generated private key. Requires the GATE_KEY_PASSWORD for key decryption.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req \\\n  -new \\\n  -key gate.key \\\n  -out gate.csr \\\n  -passin pass:${GATE_KEY_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Pipeline Template Reference Configuration\nDESCRIPTION: Configuration block for referencing a specific pipeline template within Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/instantiate.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"template\": {\n  \"artifactAccount\": \"front50ArtifactCredentials\",\n  \"reference\": \"spinnaker://<templateId>\",\n  \"type\": \"front50/pipelineTemplate\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Endpoints for HA Clouddriver\nDESCRIPTION: This command configures the Redis endpoints for the HA Clouddriver services. It sets up separate endpoints for the master, slave, and slave-deck Redis instances to optimize read/write operations.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/high-availability.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy ha clouddriver edit --redis-master-endpoint $REDIS_MASTER_ENDPOINT --redis-slave-endpoint $REDIS_SLAVE_ENDPOINT --redis-slave-deck-endpoint $REDIS_SLAVE_DECK_ENDPOINT\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker for DC/OS in YAML\nDESCRIPTION: This YAML configuration enables DC/OS support in Spinnaker's clouddriver, sets up a DC/OS cluster, and configures Docker registry access. It includes settings for the cluster URL, authentication, and Docker repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/dcos-source-to-prod/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndcos:\n  enabled: true\n  clusters:\n    - name: codelab-cluster\n      dcosUrl: https://dcos.example.com\n      insecureSkipTlsVerify: true\n  accounts:\n    - name: codelab-dcos-account\n      dockerRegistries:\n        - accountName: my-docker-registry\n      clusters:  \n        - name: codelab-cluster\n          uid: ${DCOS_USER}\n          password: ${DCOS_PASSWORD}\ndockerRegistry:\n  enabled: true\n  accounts:\n  - name: my-docker-registry\n    address: https://index.docker.io\n    repositories:\n    - lwander/spin-kub-demo\n    username: ${DOCKER_USER}\n    password: ${DOCKER_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Signing Deck Certificate with CA\nDESCRIPTION: Signs the Deck CSR using the CA certificate and private key to generate the server certificate. Valid for 365 days and requires CA_KEY_PASSWORD for CA key decryption.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 \\\n  -req \\\n  -days 365 \\\n  -in deck.csr \\\n  -CA ca.crt \\\n  -CAkey ca.key \\\n  -CAcreateserial \\\n  -out deck.crt \\\n  -passin pass:${CA_KEY_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload That Meets Constraints\nDESCRIPTION: Example JSON payload that satisfies the defined webhook constraints. This payload contains the required keys 'mykey' with value 'myvalue' and 'bing' with a value matching the regex pattern 'b.*p'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/webhooks/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mykey\": \"myvalue\",\n  \"bing\": \"boooop\",\n  \"x\": [\"1\", \"2\", \"3\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Minio Storage for Spinnaker in Docker Container\nDESCRIPTION: Commands to configure Spinnaker to use Minio as its persistent storage when running in a Docker container. Includes SELinux context configuration necessary for Docker environments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/minio.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# The next two lines should be run inside the docker container only\nchcon -R --reference /root/.bashrc /root/.hal/\nls -lZa /root # Make sure the SELinux context is the same for all files/folders\n\necho $MINIO_SECRET_KEY | hal config storage s3 edit --endpoint $ENDPOINT \\\n    --access-key-id $MINIO_ACCESS_KEY \\\n    --secret-access-key # will be read on STDIN to avoid polluting your\n                        # ~/.bash_history with a secret\n\nhal config storage edit --type s3\n```\n\n----------------------------------------\n\nTITLE: Saving a Pipeline Configuration with spin CLI in Bash\nDESCRIPTION: This command uses the Spinnaker CLI tool 'spin' to save a pipeline configuration as an actual pipeline in Spinnaker. It would typically be used after previewing the pipeline with the 'plan' command.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/plan.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline save --file <path to pipeline config>\n```\n\n----------------------------------------\n\nTITLE: Creating Spinnaker Application in UI\nDESCRIPTION: Steps for creating a new Spinnaker application named 'example' through the user interface. Includes setting the name, owner email, and instance health configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/bake-and-deploy-pipeline/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. In Spinnaker, click **Actions** > **Create Application**\n  1. Input <code>example</code> for the **Name** field and your email address for\nthe **Owner Email** field.\n3. Click on the **Consider only cloud provider health when executing\n  tasks** button next to **Instance Health**.\n4. Click the **Create** button.\n```\n\n----------------------------------------\n\nTITLE: Configuring Front50 YAML for Migration from S3 to SQL\nDESCRIPTION: YAML configuration for Front50 to enable migration from S3 to SQL storage. This setup enables primary and previous writes while leaving reads pointed at the previous storage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/front50-sql.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  migration: \n    primaryClass: com.netflix.spinnaker.front50.model.SqlStorageService\n    previousClass: com.netflix.spinnaker.front50.model.S3StorageService  \n    compositeStorageService:\n      enabled: true\n      reads:\n        primary: false\n        previous: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker UI and API URLs in Bash\nDESCRIPTION: Halyard commands to set the override base URLs for Spinnaker's UI and API servers, allowing them to be accessed via custom subdomains.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-public/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config security ui edit \\\n    --override-base-url http://spinnaker.$DOMAIN\n\nhal config security api edit \\\n    --override-base-url http://spinnaker-api.$DOMAIN\n```\n\n----------------------------------------\n\nTITLE: Upgrading Spinnaker Version\nDESCRIPTION: Commands to upgrade Spinnaker to a new version by selecting and applying the desired version using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/deploy.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal version list\nhal config version edit --version $VERSION\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Push Gateway in Spinnaker\nDESCRIPTION: This command configures Spinnaker to push metrics to a Prometheus gateway server, where <url> is the URL of the gateway.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/prometheus.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config metric-stores prometheus edit --push-gateway=<url>\n```\n\n----------------------------------------\n\nTITLE: Creating Deck Server Key Using OpenSSL\nDESCRIPTION: Generates a 4096-bit RSA private key for Deck using triple DES encryption. The key is protected with a passphrase stored in DECK_KEY_PASSWORD environment variable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nopenssl genrsa \\\n  -des3 \\\n  -out deck.key \\\n  -passout pass:${DECK_KEY_PASSWORD} \\\n  4096\n```\n\n----------------------------------------\n\nTITLE: Enabling Pipeline Templates UI Feature Flag\nDESCRIPTION: Command to enable the managed pipeline templates v2 UI feature in Halyard configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config features edit --managed-pipeline-templates-v2-ui true\n```\n\n----------------------------------------\n\nTITLE: GCR Notification Artifact Template in Jinja\nDESCRIPTION: Jinja template that transforms Google Container Registry (GCR) notification payload into a Spinnaker-compatible artifact list format. It extracts image digest information and formats it as a docker image artifact.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/in-pipelines/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    {% set split = digest.split(\"@\") %}\n    \"reference\": \"{{ digest }}\",\n    \"name\": \"{{ split[0] }}\",\n    \"version\": \"{{ split[1] }}\",\n    \"type\": \"docker/image\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Bitbucket Artifact Account in Halyard\nDESCRIPTION: Configures a new Bitbucket artifact account in Spinnaker using the credentials file created earlier.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/bitbucket.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact bitbucket account add my-bitbucket-account \\\n    --username-password-file $USERNAME_PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Using Kubernetes Traffic Annotation for Service Association\nDESCRIPTION: Examples of how to use the traffic.spinnaker.io/load-balancers annotation to associate Kubernetes workloads with specific Services. This annotation takes a JSON array of strings in the format of \"service [service-name]\".\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes-v2/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntraffic.spinnaker.io/load-balancers: '[\"service my-service\"]'\n```\n\nLANGUAGE: yaml\nCODE:\n```\ntraffic.spinnaker.io/load-balancers: '[\"service my-service\", \"service my-canary-service\"]'\n```\n\n----------------------------------------\n\nTITLE: Removing Spinnaker Deployment with Halyard\nDESCRIPTION: Commands to completely remove a Spinnaker deployment and Halyard installation. The first command removes all Spinnaker artifacts from the deployment environment, while the second removes the Halyard installation itself. Important to backup configuration before proceeding.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/faq.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy clean\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo ~/.hal/uninstall.sh\n```\n\n----------------------------------------\n\nTITLE: Custom Slack Notification Configuration\nDESCRIPTION: JSON configuration for customizing Slack notifications with message formatting and notification settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/notifications/index.md#2025-04-09_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customMessage\": \"${trigger.user} started a <{{link}}|deploy to production>\",\n  \"notifications\": [\n    {\n      \"address\": \"spinnaker-prod-deploys\",\n      \"level\": \"stage\",\n      \"type\": \"slack\",\n      \"when\": [\n        \"stage.starting\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Spinnaker Configuration and Starting Services\nDESCRIPTION: This command applies the Halyard configuration and starts the Spinnaker services.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsudo hal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Final Clouddriver SQL-Only Configuration\nDESCRIPTION: Final configuration after migration completion, disabling Redis and dual task repository functionality completely.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/clouddriver-sql.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nredis:\n  enabled: false\n\ndualTaskRepository:\n  enabled: false\n```\n\n----------------------------------------\n\nTITLE: Setting Spinnaker Version with Halyard\nDESCRIPTION: Command to configure the desired version of Spinnaker to be deployed, where $VERSION represents the target version number.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/deploy.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version $VERSION\n```\n\n----------------------------------------\n\nTITLE: Example Oracle Storage Configuration\nDESCRIPTION: Practical example of Oracle Object Storage configuration showing actual values for various required parameters including bucket name, compartment ID, and authentication details.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/oracle.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage oracle edit \\\n   --bucket-name spinnaker \\\n   --compartment-id ocid1.compartment.oc1..aaaaaaaatjuwhxwkspkxhumqke \\\n   --fingerprint 8f:05:f4:94:f3:5f:e3:30:ec:35:8e:77:3e:40:34:10 \\\n   --namespace oracle-cloud-tenancy \\\n   --region us-phoenix-1 \\\n   --ssh-private-key-file-path /Users/.oci/oci_api_key.pem \\\n   --tenancy-id ocid1.tenancy.oc1..aaaaaaaa225wmphohitdve3d2qmq4a \\\n   --user-id ocid1.user.oc1..aaaaaaaagosdr3zsh3clobgeqqawsq\n```\n\n----------------------------------------\n\nTITLE: Configuring Echo Service Proxy Settings in YAML\nDESCRIPTION: Example of how to set proxy settings for the Echo service using environment variables in the service settings YAML file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/faq.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  JAVA_OPTS: \"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2\n              -Dhttp.proxyHost=<proxy host> -Dhttp.proxyPort=<proxy port> -Dhttps.proxyHost=<proxy host>\n              -Dhttps.proxyPort=<proxy port> -Dhttp.nonProxyHosts='localhost|127.*|[::1]|*.spinnaker'\"\n```\n\n----------------------------------------\n\nTITLE: Example Delivery Config with Manual Judgement and Slack Notifications (YAML)\nDESCRIPTION: A simplified delivery configuration showing manual judgement constraint with Slack notifications. This example includes basic artifact, environment, and resource configuration for a deployment pipeline.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nname: myspinapp\napplication: myspinapp\nserviceAccount: myteam@mycompany.com\nartifacts:\n- name: myspinapp\n  type: deb\nenvironments:\n- name: test\n  constraints:\n  - type: manual-judgement\n  notifications:\n  - type: slack\n    address: \"#myteam\"\n    frequency: verbose\n  resources:\n  - apiVersion: bakery.spinnaker.netflix.com/v1\n    kind: image\n    spec:\n      artifactName: myspinapp\n      baseLabel: RELEASE\n      baseOs: xenial\n      regions:\n      - us-east-1\n      storeType: EBS\n      application: myspinapp  \n  - apiVersion: \"ec2.spinnaker.netflix.com/v1\"\n    kind: \"cluster\"\n    spec:\n      moniker:\n        app: \"myspinapp\"\n      imageProvider:\n        deliveryArtifact:\n          name: \"myspinapp\"\n          type: \"deb\"\n      locations:\n        account: \"test\"\n        regions:\n        - name: \"us-east-1\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Oracle Object Storage Artifact Support in Halyard\nDESCRIPTION: Command to enable Oracle Object Storage artifact support in Spinnaker using Halyard CLI after configuring the artifact account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/oracle.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact oracle enable\n```\n\n----------------------------------------\n\nTITLE: Creating repositories.json File for Spinnaker Plugins\nDESCRIPTION: The repositories.json file represents a set of pointers to plugin files. It contains a unique ID for your plugin repository and a URL to your plugins.json file that Spinnaker can access.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n      \"id\": \"myPluginRepo\",\n      \"url\": \"https://raw.githubusercontent.com/my-org/my-plugin-repo/master/plugins.json\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting JVM Proxy Options for Halyard in Bash\nDESCRIPTION: Example of how to configure Halyard to run behind a proxy by setting JVM options in the Halyard startup script.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/faq.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nDEFAULT_JVM_OPTS=-Dhttp.proxyHost=my.proxy.domain.com -Dhttp.proxyPort=3128\n```\n\n----------------------------------------\n\nTITLE: Defining Debian Artifact Configuration\nDESCRIPTION: YAML configuration for defining a debian artifact in Spinnaker's delivery config. Includes optional status filtering and reference naming.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/artifacts/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nartifacts:\\n- name: keeldemo\\n  type: deb\\n  statuses: [\"RELEASE\"] # This is optional\\n  reference: my-debian-artifact # optional human-readable reference to be used elsewhere in the config, defaults to artifact name\n```\n\n----------------------------------------\n\nTITLE: Configuring Bitbucket File Artifact in Spinnaker JSON Format\nDESCRIPTION: A JSON example showing how to reference a file from a Bitbucket repository as an artifact in Spinnaker. The artifact specifies the type, reference URL to the Bitbucket API, and the file path within the repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/bitbucket-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"bitbucket/file\",\n  \"reference\": \"https://api.bitbucket.org/2.0/repositories/org/repo/src/master/manifests/config.yaml\",\n  \"name\": \"manifests/config.yaml\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Spinnaker Event Structure (JSON)\nDESCRIPTION: This snippet provides an example of a Spinnaker event structure. It includes details about the event source, type, and content, which is useful for understanding the data sent to webhook endpoints.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/notifications/index.md#2025-04-09_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"details\": {\n      \"source\": \"orca\",\n      \"type\": \"orca:task:complete\",\n      \"created\": \"1422487582294\",\n      \"organization\": null,\n      \"project\": null,\n      \"application\": \"asgard\",\n      \"_content_id\": null\n    },\n    \"content\": {\n      \"standalone\": true,\n      \"context\": {\n        \"asgName\": \"asgard-staging-v048\",\n        \"credentials\": \"test\",\n        \"deploy.account.name\": \"test\",\n        \"deploy.server.groups\": {},\n        \"kato.last.task.id\": {\n          \"id\": \"19351\"\n        },\n        \"kato.task.id\": {\n          \"id\": \"19351\"\n        },\n        \"kato.tasks\": [\n          {\n            \"history\": [\n            ],\n            \"id\": \"19351\",\n            \"resultObjects\": []\n          }\n        ],\n        \"notification.type\": \"enableasg\",\n        \"regions\": [\"us-west-1\"],\n        \"targetop.asg.enableAsg.name\": \"asgard-staging-v048\",\n        \"targetop.asg.enableAsg.regions\": [\"us-west-1\"],\n        \"user\": \"clin@netflix.com\",\n        \"zones\": [\"us-west-1a\", \"us-west-1c\"]\n      },\n      \"execution\": \"...\",\n      \"executionId\": \"62ca5574-0629-419a-b9ac-fb873aa165b2\",\n      \"taskName\": \"f92239a7-b57a-408d-9d72-3a77484e050b.enableAsg.monitorAsg.9568e7e5-3c37-4699-9e93-f62118adc7c6\"\n    }\n  }\n```\n\n----------------------------------------\n\nTITLE: Defining ChapService Interface in Java for Spinnaker Orca\nDESCRIPTION: This code defines the ChapService interface, which uses Retrofit annotations to declare REST API endpoints for interacting with the ChAP service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/new-stage.md#2025-04-09_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage com.netflix.spinnaker.orca.chap;\n\nimport retrofit.http.Body;\nimport retrofit.http.GET;\nimport retrofit.http.POST;\nimport retrofit.http.Path;\n\nimport java.util.Map;\n\npublic interface ChapService {\n  @POST(\"/v1/runs\")\n  Run startChap(@Body Map params);\n\n  @GET(\"/v1/runs/{id}\")\n  Run getChap(@Path(\"id\") String id);\n\n  @POST(\"/v1/runs/{id}/stop\")\n  Run cancelChap(@Path(\"id\") String id, @Body String body);\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Canary Configurations in Spinnaker\nDESCRIPTION: Command to list all canary configurations in the Spinnaker instance, showing their IDs and names. The output is in JSON format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/canary-configs/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ spin canary canary-config list\n\n[\n...\n{\n  \"id\": \"canaryConfigId\",\n  \"name\": \"canaryConfigName\"\n  ...\n},\n...\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Front50 YAML for Primary Reads with Fallback\nDESCRIPTION: YAML configuration to enable primary reads in Front50 with an optional fallback to the previous storage if an object is not found. This is part of the migration process from S3 to SQL storage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/front50-sql.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  migration:\n    compositeStorageService:\n      reads:\n        primary: true\n        previous: true  # set to `false` to disable fallback reads\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Liveness Probes\nDESCRIPTION: Command to enable and configure Kubernetes liveness probes for Spinnaker services with custom initial delay.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/environment.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit --liveness-probe-enabled true --liveness-probe-initial-delay-seconds $LONGEST_SERVICE_STARTUP_TIME\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Instance Links in Spinnaker's settings.js\nDESCRIPTION: This JavaScript configuration defines default instance links that apply to every instance managed by Spinnaker. It establishes common endpoints for logs, thread dumps, configuration properties, and other resources that will be available to all applications.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/instance-links/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.spinnakerSettings = {\n  // ...\n  defaultInstanceLinks: [\n        {\n            title: 'Logs',\n            links: [\n                { title: 'catalina.out', path: ':7000/Logs/catalina.out'},\n                { title: 'Log File Archive', path: ':7000/Logs/all'},\n                { title: 'Thread dumps', path: ':7000/Logs/threadDumps'},\n                { title: 'Admin Proxy Info', path: ':7000/ProxyInfo'},\n                { title: 'Admin Proxy Status', path: ':7000/ProxyStatus'},\n                { title: 'GC Visualization', path: ':7000/GCVisualization'},\n            ]\n        },\n        {\n            title: 'Netflix Configuration',\n            links: [\n                { title: 'Properties Console', path: ':8088/props'},\n                { title: 'Libraries Console', path: ':8088/libraries'},\n                { title: 'Machine Readable Properties', path: ':8088/machineProperties'},\n                { title: 'Manifest', path: '/manifest'},\n            ]\n        }\n    ]\n  // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Editing Kubernetes Service for Spinnaker API in Bash and YAML\nDESCRIPTION: Command to edit the Kubernetes Service for Spinnaker's API (spin-gate) and the corresponding YAML changes to expose it publicly with a static IP.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-public/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit svc spin-gate -n spinnaker\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: 2017-06-01T00:57:32Z\n  name: spin-gate\n  namespace: spinnaker\n  resourceVersion: \"6038615\"\n  selfLink: /api/v1/namespaces/spinnaker/services/spin-gate\n  uid: 1c4fd288-818a-166e-888f-45251eee0d92\nspec:\n  clusterIP: 10.127.244.29\n  ports:\n  - port: 80                           ## CHANGE THIS TO 80\n    protocol: TCP\n    targetPort: 8084\n  selector:\n    load-balancer-spin-gate: \"true\"\n  sessionAffinity: None\n  type: LoadBalancer                   ## CHANGE FROM ClusterIP to LoadBalancer\n  loadBalancerIP: $API_ADDRESS         ## ADD THIS LINE FOR YOUR VALUE OF\n                                       ## $API_ADDRESS\nstatus:\n  loadBalancer: {}\n```\n\n----------------------------------------\n\nTITLE: Implementing MonitorChapTask in Java for Spinnaker Orca\nDESCRIPTION: This code defines the MonitorChapTask class, which implements the RetryableTask interface. It polls the ChAP service for the status of a ChAP run and returns the appropriate task result.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/new-stage.md#2025-04-09_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage com.netflix.spinnaker.orca.chap.tasks;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.netflix.spinnaker.orca.DefaultTaskResult;\nimport com.netflix.spinnaker.orca.ExecutionStatus;\nimport com.netflix.spinnaker.orca.RetryableTask;\nimport com.netflix.spinnaker.orca.TaskResult;\nimport com.netflix.spinnaker.orca.chap.ChapService;\nimport com.netflix.spinnaker.orca.chap.Run;\nimport com.netflix.spinnaker.orca.pipeline.model.Stage;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class MonitorChapTask implements RetryableTask {\n\n  @Autowired\n  private ObjectMapper objectMapper;\n\n  @Autowired\n  public ChapService chapService;\n\n  @Override\n  public TaskResult execute(Stage stage) {\n    Map<String, Object> ctx = stage.getContext();\n\n    Run run = objectMapper.convertValue(ctx.get(\"run\"), Run.class);\n\n    if (run == null) {\n      throw new RuntimeException(\"Cannot monitor Chap task without a valid Run in the context.\");\n    }\n\n    Run latestDetails = chapService.getChap(run.id.toString());\n\n    Map<String, Object> map = new HashMap<>();\n    map.put(\"run\", latestDetails);\n\n    if(latestDetails.outcome == Run.Outcome.PASSED){\n      return new DefaultTaskResult(ExecutionStatus.SUCCEEDED, map);\n    }\n\n    ExecutionStatus status;\n\n    switch (latestDetails.state) {\n      case COMPLETED:\n        //workflow is complete, but the outcome didnt pass, consider this a failure.\n      case FAILED:\n        throw new RuntimeException(\"ChAP experiment failed.\");\n      case CANCELLED:\n        status = ExecutionStatus.CANCELED;\n        break;\n      default:\n        status = ExecutionStatus.RUNNING;\n        break;\n    }\n\n\n    return new DefaultTaskResult(status, map);\n  }\n\n  public ChapService getChapService() {\n    return chapService;\n  }\n\n  public void setChapService(ChapService chapService) {\n    this.chapService = chapService;\n  }\n\n  @Override\n  public long getBackoffPeriod() {\n    return TimeUnit.MINUTES.toMillis(1);\n  }\n\n  @Override\n  public long getTimeout() {\n    return TimeUnit.DAYS.toMillis(1);\n  }\n\n  public ObjectMapper getObjectMapper() {\n    return objectMapper;\n  }\n\n  public void setObjectMapper(ObjectMapper objectMapper) {\n    this.objectMapper = objectMapper;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic CI Log Response Format\nDESCRIPTION: Example of the expected JSON response format for returning build logs via the CI build service endpoint\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/integrate-your-CI/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"log\": \"....\"\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Igor Service in Spinnaker Configuration\nDESCRIPTION: YAML configuration to enable Spinnaker's Igor service, which is responsible for communication with the Jenkins API.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nigor:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload with Artifacts\nDESCRIPTION: JSON payload that includes artifacts required by the pipeline. This example defines a GCS object artifact pointing to a manifest.yml file that the pipeline can use during execution.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/webhooks/index.md#2025-04-09_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"artifacts\": [\n    {\n      \"type\": \"gcs/object\",\n      \"name\": \"manifest.yml\",\n      \"reference\": \"gs://lw-artifacts/manifest.yml\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Debug Logging for AWS Pub/Sub in Spinnaker\nDESCRIPTION: YAML configuration to add to echo-local.yml for enabling debug-level logging specific to the AWS pub/sub functionality. This helps with troubleshooting integration issues.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/amazon.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nlogging:\n  level:\n    com.netflix.spinnaker.echo.pubsub.aws: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Listing Available Spinnaker Versions with Halyard\nDESCRIPTION: Command to display all available versions of Spinnaker that can be installed using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/deploy.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal version list\n```\n\n----------------------------------------\n\nTITLE: Configuring Jekyll Page Layout for Spinnaker Setup Guide\nDESCRIPTION: This YAML front matter configures the Jekyll page layout for a Spinnaker setup guide. It sets the layout to 'single', defines the page title as 'Setup How-Tos', and specifies the sidebar navigation to use 'guides'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Setup How-Tos\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group for Storage\nDESCRIPTION: Lists available Azure locations and creates a resource group in the chosen location. The resource group will contain the storage account used by Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/azs.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\naz account list-locations --query [].name\nRESOURCE_GROUP=\"SpinnakerStorage\"\naz group create --name $RESOURCE_GROUP --location <Insert Location>\n```\n\n----------------------------------------\n\nTITLE: Including Specific Metrics in YAML Filter\nDESCRIPTION: Demonstrates how to configure a filter that only includes two specific metrics: 'controller.invocations' and 'jvm.memory.used'. All other metrics will be excluded.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmonitoring:\n  filters:\n    meters:\n      byLiteralName:\n        - controller.invocations\n        - jvm.memory.used\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pipeline from Spinnaker\nDESCRIPTION: Shows how to permanently delete a pipeline from Spinnaker. This operation requires specifying both the pipeline name and the application it belongs to.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline delete --name my-pipeline --application my-app\n\nPipeline deleted\n```\n\n----------------------------------------\n\nTITLE: Example of Docker Image Artifact in Spinnaker\nDESCRIPTION: This JSON object represents a Spinnaker artifact referencing a Docker image. It includes the artifact type, reference URI, name, and version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/index.md#2025-04-09_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"type\": \"docker/image\",\n  \"reference\": \"gcr.io/project/image@sha256:29fee8e284\",\n  \"name\": \"gcr.io/project/image\",\n  \"version\": \"sha256:29fee8e284\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Bucket and Setting SNS Topic Policy using AWS CLI\nDESCRIPTION: Commands to create an S3 bucket and set the appropriate policy on the SNS topic to allow the bucket to publish messages to it. This is needed for S3 event notifications to flow through SNS.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/amazon.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# CREATE THE BUCKET\nbash4.4$ export AWS_TOPIC_ARN=<INSERT TOPIC ARN HERE>\nbash4.4$ export AWS_PUBSUB_BUCKET=spin-pubsub-test-bucket\nbash4.4$ aws s3 mb s3://${AWS_PUBSUB_BUCKET}/\nmake_bucket: spin-pubsub-test-bucket\n\nbash4.4$ aws sns set-topic-attributes --topic-arn ${AWS_TOPIC_ARN} --attribute-name Policy --attribute-value \\\n\"{\\\"Version\\\":\\\"2008-10-17\\\",\\\"Id\\\":\\\"__default_policy_ID\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"s3Publish\\\",\\\n\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"*\\\"},\\\"Action\\\":[\\\"SNS:GetTopicAttributes\\\",\\\n\\\"SNS:Publish\\\"],\\\"Resource\\\":\\\"${AWS_TOPIC_ARN}\\\",\\\"Condition\\\":{\\\"ArnLike\\\":\\\n{\\\"aws:SourceArn\\\":\\\"arn:aws:s3:::${AWS_PUBSUB_BUCKET}\\\"}}}]}\"\nbash4.4$\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker Plugin Installation in YAML\nDESCRIPTION: This YAML snippet shows the configuration needed to install a Spinnaker plugin. It includes enabling the plugin, specifying the version, configuring Gate to serve plugin code to Deck, and setting up the plugin repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nprofiles:\n  spinnaker:\n    spinnaker:\n      extensibility:\n        plugins:\n          # The plugin id you defined in your build.gradle\n          My.Plugin.Id:\n            enabled: true\n            # This must be a SemVer-compatible string\n            # (i.e. do not include a `v` in front of the version string)\n            version: \"0.1.0\"\n  gate:\n    spinnaker:\n      extensibility:\n        # This snippet is necessary so that Gate can serve your plugin code to Deck\n        deck-proxy:\n          enabled: true\n          plugins:\n            My.Plugin.Id:\n              enabled: true\n        repositories:\n          myPluginRepo:\n            enabled: true\n            url: https://raw.githubusercontent.com/my-organization/my-plugin-repo/master/repositories.json\n```\n\n----------------------------------------\n\nTITLE: SSH Tunneling to Secure Spinnaker Access\nDESCRIPTION: SSH command to create tunnels for securely accessing Spinnaker's UI and API services without exposing them directly to the internet.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nssh -i yourkey.pem -L 9000:127.0.0.1:9000 -L 8084:127.0.0.1:8084 ubuntu@instanceip\n```\n\n----------------------------------------\n\nTITLE: Docker Image Tag Reference Example\nDESCRIPTION: Example showing the less recommended approach of referencing a Docker image using tags.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/best-practices/index.md#2025-04-09_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ngcr.io/my-image:v1\n```\n\n----------------------------------------\n\nTITLE: GitHub File Artifact Example - JSON\nDESCRIPTION: Example of a JSON artifact definition representing a manifest stored in GitHub.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/in-kubernetes-v2/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"type\": \"github/file\",\n     \"name\": \"manifests/frontend-configs.yml\",\n     \"reference\": \"https://api.github.com/repos/your-application/...\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Generic Docker Registry Account\nDESCRIPTION: Adds a Docker Registry account to Spinnaker using Halyard, prompting for password input.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/docker-registry.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider docker-registry account add my-docker-registry \\\n    --address $ADDRESS \\\n    --repositories $REPOSITORIES \\\n    --username $USERNAME \\\n    --password # Do not supply your password as a flag, you will be prompted for your\n               # password on STDIN\n```\n\n----------------------------------------\n\nTITLE: Setting S3 as Spinnaker's Storage Type\nDESCRIPTION: Halyard command to set Amazon S3 as the active storage type for Spinnaker after configuring the S3-specific settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/s3.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage edit --type s3\n```\n\n----------------------------------------\n\nTITLE: Enabling Microsoft Teams Notifications\nDESCRIPTION: YAML configuration to enable Microsoft Teams notifications in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/notifications/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmicrosoftteams:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Defining In-Process Extension Point in Kotlin\nDESCRIPTION: Creates an interface that implements SpinnakerExtensionPoint to define an in-process extension point.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\nimport com.netflix.spinnaker.kork.plugins.api.internal.SpinnakerExtensionPoint\n\ninterface CoolExtensionPoint : SpinnakerExtensionPoint\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure and Setting the Subscription\nDESCRIPTION: Logs into Azure, lists available subscriptions, and sets the active subscription to use. This authentication is required before creating any Azure resources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/azs.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz login\naz account list\naz account set --subscription <Insert Subscription ID>\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Workloads Resource Table\nDESCRIPTION: Markdown table showing management capabilities and stability requirements for Kubernetes workload resources including DaemonSets, Deployments, Pods, ReplicaSets, and StatefulSets.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes-v2/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| __Resource__ | _Deploy_ | _Delete_ | _Scale_ | _Undo Rollout_ | _Pause Rollout_ | _Resume Rollout_ | Versioned | Stability |\n|-|:-:|:-:|:-:|:-:|:-:|:-:|:-:|-|\n| __`DaemonSet`__ | Yes | Yes | No | Yes | Yes | Yes | No | The `status.currentNumberScheduled`, `status.updatedNumberScheduled`, `status.numberAvailable`, and `status.numberReady` must all be at least the `status.desiredNumberScheduled`. |\n| __`Deployment`__ | Yes | Yes | Yes | Yes | Yes | Yes | No | The `status.updatedReplicas`, `status.availableReplicas`, and `status.readyReplicas` must all match the desired replica count for the Deployment. |\n| __`Pod`__ | Yes | Yes | No | No | No | No | Yes | The pod must be scheduled, and pass all probes. |\n| __`ReplicaSet`__ | Yes | Yes | Yes | No | No | No | Yes | The `status.fullyLabledReplicas`, `status.availableReplicas`, and `status.readyReplicas` must all match the desired replica count for the ReplicaSet. |\n| __`StatefulSet`__ | Yes | Yes | Yes | Yes | Yes | Yes | No | The `status.currentRevision`, and `status.updatedRevision` must match, and `status.currentReplicas`, and `status.readyReplicas` must match the spec's replica count. |\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Container Manifest Example\nDESCRIPTION: YAML example showing a basic Kubernetes container manifest structure that can be used for deployment, demonstrating how Docker image references are specified.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/deploy-manifest/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# ... rest of manifest\n  containers:\n  - name: my-container\n    image: gcr.io/my-project/my-image\n# rest of manifest ...\n```\n\n----------------------------------------\n\nTITLE: Defining Patch Content for Container Image Update\nDESCRIPTION: An example of patch content that updates a container image in a Kubernetes manifest. This demonstrates how to structure the YAML for updating specific fields in a resource.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/patch-manifest/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  template:\n    spec:\n      containers:\n        - name: my-container\n          image: gcr.io/my-project/my-image\n```\n\n----------------------------------------\n\nTITLE: Enabling Plugins in Spinnaker Service\nDESCRIPTION: Add the kork-plugins dependency to the service-core module and import PluginsAutoConfiguration in the Main class to enable plugins for a Spinnaker service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nimplementation(\"com.netflix.spinnaker.kork:kork-plugins\")\n```\n\nLANGUAGE: kotlin\nCODE:\n```\n@Import(PluginsAutoConfiguration::class)\n```\n\n----------------------------------------\n\nTITLE: Implementing Pipeline Instance Configuration in JSON\nDESCRIPTION: JSON schema for creating a pipeline instance that implements a pipeline template. Includes application details, template reference, and variable values.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/templates/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"schema\": \"v2\",\n  \"application\": \"<appName>\",     # Set this to the app you want to create the pipeline in.\n  \"name\": \"New Pipeline Name\",    # The name of your pipeline.\n  \"template\": {\n    \"type\": \"front50/pipelineTemplate\",\n    \"artifactAccount\": \"front50ArtifactCredentials\",\n    \"reference\": \"spinnaker://<templateName>\"\n  },\n  \"variables\": {\n    \"<varName>\": <value>,         # Value for the template variable.\n    \"someOtherVar\": <value>\n  },\n  \"inherit\": [],\n  \"triggers\": [],\n  \"parameters\": [],\n  \"notifications\": [],\n  \"description\": \"\",\n  \"stages\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP/Active Directory Authentication for Spin CLI\nDESCRIPTION: YAML configuration for using LDAP or Active Directory authentication with Spin CLI. This allows integration with enterprise directory services for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nauth:\n  enabled: true\n  ldap:\n    username: < username >\n    password: < password >\n```\n\n----------------------------------------\n\nTITLE: Configuring Account Permissions using Halyard CLI\nDESCRIPTION: Commands to manage READ and WRITE permissions for cloud provider accounts using Halyard. Allows adding and removing individual permissions or overwriting entire permission lists.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nPROVIDER= # Your cloud provider\n\nhal config provider $PROVIDER account edit $ACCOUNT \\\n  --add-read-permission role1 \\ # Adds a READ permission\n  --add-write-permission role2 \\ # Adds a WRITE permission\n  --remove-read-permission role3 \\ # Removes a READ permission\n  --remove-write-permission role4 # Removes a WRITE permission\n\n# Alternatively, you can overwrite the whole read or write list, comma delimited.\nhal config provider $PROVIDER account edit $ACCOUNT \\\n  --read-permissions role1,role2,role3 \\\n  --write-permissions role1,role2,role3\n```\n\n----------------------------------------\n\nTITLE: Multiple Repository Configuration JSON\nDESCRIPTION: Example repositories.json file format for configuring multiple plugin repositories in a single entry. Each repository requires an ID and URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"spinnaker-plugin-examples\",\n    \"url\": \"https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json\"\n  },\n  {\n    \"id\": \"my-company-internal-plugins\",\n    \"url\": \"https://<my-company-internal-github>/<repo-name>/plugins.json\"\n  },\n  {\n    \"id\": \"my-plugins\",\n    \"url\": \"https://github.com/aimeeu/pluginRepository/blob/master/plugins.json\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Setting GCS Configuration Variables\nDESCRIPTION: Defines the required variables for GCS configuration including project ID and bucket location.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/gcs.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nPROJECT=$(gcloud config get-value project)\n# see https://cloud.google.com/storage/docs/bucket-locations\nBUCKET_LOCATION=us\nSERVICE_ACCOUNT_DEST=# see Prerequisites section above\n```\n\n----------------------------------------\n\nTITLE: Configuring CPU and Memory Limits for Spinnaker Components in YAML\nDESCRIPTION: This YAML snippet demonstrates how to set custom CPU and memory limits and requests for Spinnaker components in the Halyard configuration. It shows examples for both individual containers and entire services including sidecars.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/component-sizing.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndeploymentEnvironment:\n  customSizing:\n    # This applies sizings to only the echo container and not to any sidecar \n    # containers running with echo. (Use spin-<service> to include sidecars)\n    echo:\n      limits:\n        cpu: 250m\n        memory: 512Mi\n      requests:\n        cpu: 100m\n        memory: 128Mi\n    # This applies sizings to the clouddriver container as well as any sidecar \n    # containers running with clouddriver. (Use without spin- to only include the clouddriver container)\n    spin-clouddriver:\n      limits:\n        cpu: 1000m\n        memory: 1Gi\n      requests:\n        cpu: 250m\n        memory: 512Mi\n```\n\n----------------------------------------\n\nTITLE: Liquid Table of Contents Include\nDESCRIPTION: Includes a table of contents component using Liquid templating syntax.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pub/Sub Account in Echo using YAML\nDESCRIPTION: YAML configuration for setting up a Google Cloud Pub/Sub account in Echo. This example demonstrates storing complete account configuration in a Git repository for external configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\npubsub:\n  enabled: true\n  google:\n    enabled: true\n    pubsubType: GOOGLE\n    subscriptions:\n    - name: my-gcs-subscription\n      project: my-project\n      subscriptionName: my-gcs-subscription\n      jsonPath: /path/to/my-gce-account.json\n      ackDeadlineSeconds: 10\n      messageFormat: GCS\n    publishers: []\n```\n\n----------------------------------------\n\nTITLE: Creating Spin Configuration Directory\nDESCRIPTION: Command to create the directory for storing Spin CLI configuration. This directory will hold the config file that contains authentication and other settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir ~/.spin/\n```\n\n----------------------------------------\n\nTITLE: Testing Pipeline Expression with curl in Bash\nDESCRIPTION: This snippet demonstrates how to use curl to test a Spinnaker pipeline expression against a specific pipeline execution. It shows how to pass the expression to the evaluation endpoint and interpret the results.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/expressions/index.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nPIPELINE_ID=[your_pipeline_id]\ncurl http://api.my.spinnaker/pipelines/$PIPELINE_ID/evaluateExpression \\\n       -H \"Content-Type: text/plain\" \\\n       --data '${ #stage(\"Deploy\").status.toString() }'\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Notifications in Spinnaker\nDESCRIPTION: Demonstrates how to configure notifications for environments using Slack or email, with different frequency options for task status updates.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/delivery-configs/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nenvironments:\n- name: testing\n  resources: # omitted for brevity\n  notifications:\n  - type: slack\n    address: \"#managed-delivery\"\n    frequency: verbose\n```\n\n----------------------------------------\n\nTITLE: Service-Specific Plugin Configuration\nDESCRIPTION: YAML configuration for adding plugin settings to a specific Spinnaker service's local configuration file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/index.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  extensibility:\n    plugins:\n      <unique-plugin-id>:\n        enabled: <true-false>\n        version: <version>\n        config: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Authentication for Spin CLI\nDESCRIPTION: YAML configuration for using basic username/password authentication with Spin CLI. This is a simple authentication method that sends credentials with each request.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nauth:\n  enabled: true\n  basic:\n    username: < username >\n    password: < password >\n```\n\n----------------------------------------\n\nTITLE: Implementing CI Service Interface\nDESCRIPTION: Example class signature showing how to implement the CiBuildService interface for a custom CI provider\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/integrate-your-CI/index.md#2025-04-09_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class SomeCiService implements CiBuildService[..]\n```\n\n----------------------------------------\n\nTITLE: Configuring Canary Constraint in Spinnaker Delivery Config (YAML)\nDESCRIPTION: Example YAML configuration for a canary constraint in Spinnaker Managed Delivery. This configuration sets up a multi-region canary test with specific analysis parameters and scoring thresholds.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  constraints:\n  - type: canary\n    canaryConfigId: fn0rd5d1-6217-4fcf-aa3d-ce7f59af9cac\n    beginAnalysisAfter: PT3M\n    canaryAnalysisInterval: PT10M\n    lifetime: PT90M\n    marginalScore: 75\n    passScore: 90\n    capacity: 2\n    source:\n      account: appaccount\n      cloudProvider: aws\n      cluster: app-prod\n    regions:\n      - us-east-1\n      - us-west-2\n      - eu-west-1\n    minSuccessfulRegions: 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle for Spinnaker Plugin Compatibility Testing\nDESCRIPTION: This snippet demonstrates how to set up Gradle for automated compatibility testing of Spinnaker plugins across multiple Spinnaker versions using the compatibility-test-runner plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/compatibility-testing.md#2025-04-09_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\n// Inside root project\nplugins {\n  id(\"io.spinnaker.plugin.bundler\").version(\"8.6.0\") // Must be 8.6.0 or later.\n}\n\nspinnakerBundle {\n  // ...\n  compatibility {\n    spinnaker = [\"1.21.1\", \"1.22.0\"] // Set of Spinnaker versions to test against.\n  }\n}\n\n// Inside service extension subproject\napply plugin: \"io.spinnaker.plugin.compatibility-test-runner\"\n```\n\n----------------------------------------\n\nTITLE: Adding DC/OS Cluster to Spinnaker\nDESCRIPTION: This command adds a DC/OS cluster to Spinnaker's configuration using Halyard. It specifies the cluster URL and skips TLS verification for simplicity, though this isn't recommended for production.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/dcos.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider dcos cluster add my-dcos-cluster \\\n    --dcos-url $CLUSTER_URL \\\n    --skip-tls-verify\n    # For simplicity we won't worry about the\n    # certificate for the cluster but this would not be recommended\n    # for a production deployment\n```\n\n----------------------------------------\n\nTITLE: Configuring ECS Provider\nDESCRIPTION: Commands to enable and configure Amazon ECS provider in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider ecs account add ecs-my-aws-devel-acct --aws-account my-aws-devel-acct\nhal config provider ecs enable\n```\n\n----------------------------------------\n\nTITLE: Installing Telepresence on Mac\nDESCRIPTION: Commands for installing Telepresence on macOS using Homebrew, which enables local development against remote Kubernetes clusters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbrew cask install osxfuse\nbrew install datawire/blackbird/telepresence\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Backend for Spring Cloud Config in Spinnaker\nDESCRIPTION: YAML configuration for setting up a Git repository as the backend for Spring Cloud Config in Spinnaker. It specifies the repository URI, local base directory for cloning, and refresh rate.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nspring:\n  profiles:\n    include: git\n  cloud:\n    config:\n      server:\n        git:\n          uri: https://github.com/example/spinnaker-config\n          basedir: /tmp/config-repo\n          refresh-rate: 10\n```\n\n----------------------------------------\n\nTITLE: Generating CSR for Deck Certificate\nDESCRIPTION: Creates a certificate signing request for Deck using the previously generated private key. Requires the DECK_KEY_PASSWORD for key decryption.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req \\\n  -new \\\n  -key deck.key \\\n  -out deck.csr \\\n  -passin pass:${DECK_KEY_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Updating Halyard on Debian/Ubuntu/macOS\nDESCRIPTION: Updates an existing Halyard installation to the latest version\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/halyard.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo update-halyard\n```\n\n----------------------------------------\n\nTITLE: Adding Wercker Master Configuration in Halyard\nDESCRIPTION: Command to add a Wercker master configuration to Spinnaker, including address, user, and token parameters\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/wercker.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config ci wercker master add mywercker1\n    --address https://app.wercker.com/ \n    --user myuserid \n    --token\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Constraint with Parameters in Spinnaker\nDESCRIPTION: Example of the pipeline constraint which launches and monitors a specified pipeline, with support for retry logic, timeout configuration, and custom parameters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  constraints:\n  - type: pipeline\n    pipelineId: fn0rd5d1-6217-4fcf-aa3d-ce7f59af9cac\n    retries: 1\n    parameters:\n      foo: bar\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Local Configuration\nDESCRIPTION: YAML configuration for local Spinnaker services\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  clouddriver:\n    baseUrl: {my-workstation-ip}:7002\n  redis:\n    baseUrl: {my-workstation-ip}:6379\n  front50:\n    baseUrl: {my-workstation-ip}:8080\n  orca:\n    host: 0.0.0.0\n  gate:\n    baseUrl: {my-workstation-ip}:8084\n  deck:\n    host: 0.0.0.0\n  echo:\n    baseUrl: {my-workstation-ip}:8089\n  rosco:\n    baseUrl: {my-workstation-ip}:8087\n--------------\n```\n\n----------------------------------------\n\nTITLE: Defining Spinnaker Bill of Materials (BOM) Structure in YAML\nDESCRIPTION: This YAML snippet outlines the structure of a Spinnaker Bill of Materials (BOM), including version information, timestamps, services, dependencies, and artifact sources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/custom-boms.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nversion:                  # the version this corresponds to\ntimestamp:                # when this version was assembled\nservices:\n  ${SUBCOMPONENT}:        # for each subcomponent\n    version:              # the subcomponent version\n    commit:               # the commit the version corresponds to\n    artifactSources:      # (optional) overrides for where the artifacts are stored\n      debianRepository:   # (optional) debian repository storing the built deb\n      dockerRegistry:     # (optional) docker registry storing the build image\n      gitPrefix:          # (optional) git repository this is stored in\ndependencies:\n  ${DEPENDENCY}:          # for each required 3rd party service\n    version:              # dependency version\nartifactSources:\n  debianRepository:       # debian repository storing all built debs\n  dockerRegistry:         # docker registry storing all built images\n  gitPrefix:              # git org all repos are in\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 with Token for Spin CLI\nDESCRIPTION: YAML configuration for using OAuth2 with pre-acquired access and refresh tokens in Spin CLI. This method bypasses the need for client ID/secret by using tokens directly obtained from an OAuth provider like Google Cloud.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nauth:\n  enabled: true\n  oauth2:\n    authUrl: # OAuth2 provider auth url\n    tokenUrl: # OAuth2 provider token url\n    # no clientId or clientSecret\n    scopes: # Scopes requested for the token\n    - scope1\n    - scope2\n    cachedToken:\n      access_token: ${ACCESS_TOKEN} # Note the key capitalization\n      refresh_token: ${REFRESH_TOKEN} # Note the key capitalization\n```\n\n----------------------------------------\n\nTITLE: Adding Travis CI Master to Spinnaker using Halyard\nDESCRIPTION: This Halyard command adds a Travis CI master to Spinnaker. It configures the API address, base URL, GitHub token, and number of jobs to fetch during polling.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/travis.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config ci travis master add my-travis-master \\\n--address https://api.travis-ci.org \\\n--base-url https://travis-ci.org \\\n--github-token <token> \\\n--number-of-jobs # How many jobs the integration should fetch each\n                 # time the poller runs. Set this higher than the max\n                 # you expect during polling interval.\n                 # Defaults to 100.\n```\n\n----------------------------------------\n\nTITLE: Setting Up Manual Judgement Constraint in Spinnaker\nDESCRIPTION: Example of the manual-judgement constraint which prevents artifact deployment until explicit approval is provided via an external API client.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  constraints:\n  - type: manual-judgement\n```\n\n----------------------------------------\n\nTITLE: Azure Login and Subscription Setup\nDESCRIPTION: Commands to log into Azure, list available subscriptions, and set the active subscription\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/azure.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz login\naz account list\nSUBSCRIPTION_ID=<Insert Subscription ID>\naz account set --subscription $SUBSCRIPTION_ID\n```\n\n----------------------------------------\n\nTITLE: Configuring Gitlab File Artifact in Spinnaker JSON\nDESCRIPTION: This JSON snippet demonstrates the configuration of a Gitlab file artifact in Spinnaker. It specifies the type, reference URL to the file in Gitlab API, the file path within the repository, and the version (branch or commit) to use.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/gitlab-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"gitlab/file\",\n  \"reference\": \"https://gitlab.example.com/api/v4/projects/13083/repository/files/manifests%2Fconfig%2Eyaml/raw\",\n  \"name\": \"manifests/config.yaml\",\n  \"version\": \"master\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Yarn on Mac\nDESCRIPTION: Command for installing Yarn package manager on macOS using Homebrew, needed for building Deck (Spinnaker's UI).\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbrew install yarn\n```\n\n----------------------------------------\n\nTITLE: Configuring Affinity Rules for Kubernetes Pods in Spinnaker\nDESCRIPTION: This configuration demonstrates how to set node affinity rules for Spinnaker components in Kubernetes. Affinity rules are more expressive than node selectors and allow for setting preferences rather than hard requirements for pod scheduling.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  deploymentEnvironment:\n    affinity:\n      spin-clouddriver:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: spinnaker\n                operator: In\n                values:\n                - 'true'\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Backend for Spring Cloud Config in Spinnaker\nDESCRIPTION: YAML configuration for setting up an AWS S3 bucket as the backend for Spring Cloud Config in Spinnaker. It specifies the AWS region and bucket name to use for configuration storage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nspring:\n  profiles:\n    active: awss3\n  cloud:\n    config:\n      server:\n        awss3:\n          region: us-west-2\n          bucket: my-bucket\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Git Development Setup\nDESCRIPTION: Commands to configure Halyard for local Git installation type with specific GitHub username and upstream master branch.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/environment.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit --type localgit --git-origin-user=<YOUR_GITHUB_USERNAME>\n\nhal config version edit --version branch:upstream/master\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed-Times Constraint in Spinnaker\nDESCRIPTION: Example of the allowed-times constraint with multiple time windows that restricts deployment to specific days and hours, allowing promotion only during defined business hours.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  constraints:\n  - type: allowed-times\n    windows:\n      - days: Monday-Wednesday,Friday\n        hours: 8-16\n      - days: Thursday\n        hours: 14-16\n```\n\n----------------------------------------\n\nTITLE: Configuring Kayenta with Google Stackdriver and GCS (Quick Start)\nDESCRIPTION: A set of Halyard commands to quickly enable Kayenta and configure it to use Stackdriver for metrics and GCS for persistent storage. These commands enable canary analysis, set up Google account integration, and configure necessary services.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary enable\nhal config canary google enable\nhal config canary google account add my-google-account \\\n  --project $PROJECT_ID \\\n  --json-path $JSON_PATH \\\n  --bucket $MY_SPINNAKER_BUCKET\nhal config canary google edit --gcs-enabled true \\\n  --stackdriver-enabled true\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 with Client Credentials for Spin CLI\nDESCRIPTION: YAML configuration for using OAuth2 authentication with client ID and secret in Spin CLI. This setup requires initial user authentication and then caches the token for future use.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nauth:\n  enabled: true\n  oauth2:\n    authUrl: # OAuth2 provider auth url\n    tokenUrl: # OAuth2 provider token url\n    clientId: # OAuth2 client id\n    clientSecret: # OAuth2 client secret\n    scopes: # Scopes requested for the token\n    - scope1\n    - scope2\n```\n\n----------------------------------------\n\nTITLE: Cancelling Zombie Execution via Orca Admin API (HTTP)\nDESCRIPTION: HTTP POST request to the Orca admin API for cancelling a specific zombie execution. This command allows for targeted remediation of individual zombie executions identified in the system.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/runbooks/orca-zombie-executions.md#2025-04-09_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST /admin/queue/zombies/{executionId}:kill\n```\n\n----------------------------------------\n\nTITLE: Docker Image Version Format Examples\nDESCRIPTION: Examples of Netflix's docker image versioning formats, showing branch-based and semantic versioning patterns.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/artifacts/index.md#2025-04-09_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n# branch-jenkinsJob.commitSha\\nmaster-h5.5a52206\\n\\n# semver-jenkinsJob.commitSha\\nv1.12.1-h1159.b839a00\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Canary Configuration in Spinnaker\nDESCRIPTION: Command to retrieve a specific canary configuration by its ID. Returns the complete configuration in JSON format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/canary-configs/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ spin canary canary-config get canaryConfigId\n\n{\n  \"id\": \"myPipelineTemplate\"\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Load Balancer in Spinnaker\nDESCRIPTION: Steps for creating a load balancer in Spinnaker, including configuration differences for AWS and GCP environments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/bake-and-deploy-pipeline/index.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. Click **LOAD BALANCERS**, then click the **+** button to create a load balancer.\n2. Input <code>test</code> for the **Stack** field.\n3. If running on AWS, select **internal (defaultvpc)** from the **VPC\n  Subnet** dropdown.\n4. Click the **Next** button.\n5. If running on AWS\n  * Select **example-test** from the **Firewalls** dropdown.\n  * Hit **Next**, then **Create**.\n6. If running on GCP\n  * Deselect the **Enable health check?** checkbox.\n7. Click the **Create** button.\n```\n\n----------------------------------------\n\nTITLE: Enabling a Pipeline in Spinnaker\nDESCRIPTION: Demonstrates how to enable a pipeline using the update command with the --enabled flag. This allows the pipeline to be triggered by its configured trigger mechanisms.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline update --application my-app --name my-pipeline --enabled\n\n# Returns the following message if the pipeline gets updated successfully.\nPipeline updated\n```\n\n----------------------------------------\n\nTITLE: Defining a Bitbucket File Artifact in JSON Pipeline Definition\nDESCRIPTION: JSON representation of a Bitbucket file artifact as it would appear in a Spinnaker pipeline definition. It includes the required type, reference URL pointing to the Bitbucket API, and the name field representing the file path within the repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/bitbucket-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"bitbucket/file\",\n  \"reference\": \"https://api.bitbucket.org/2.0/repositories/org/repo/src/master/manifests/config.yaml\",\n  \"name\": \"manifests/config.yaml\"\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Kubernetes Config in Docker for Halyard Installation\nDESCRIPTION: Docker command to run Halyard with mounted .kube directory for persistent Kubernetes configuration changes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/dev-environment.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8084:8084 -p 9000:9000 \\\n  --name halyard --rm \\\n  -v ~/.hal:/home/spinnaker/.hal \\\n  -v ~/.kube:/home/spinnaker/.kube \\\n  -it \\\n  us-docker.pkg.dev/spinnaker-community/docker/halyard:stable\n```\n\n----------------------------------------\n\nTITLE: Configuring External Redis Service Settings in Spinnaker\nDESCRIPTION: YAML configuration for setting up an external Redis endpoint and disabling lifecycle management in Spinnaker's Halyard configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/caching/externalize-redis.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\noverrideBaseUrl: $REDIS_ENDPOINT\nskipLifeCycleManagement: true\n```\n\n----------------------------------------\n\nTITLE: Implementing Depends-On Constraint in Spinnaker\nDESCRIPTION: Example of the depends-on constraint which ensures an artifact version won't deploy to the current environment unless it has successfully deployed to a dependent environment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/environment-constraints/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  constraints: \n  - type: depends-on\n    environment: testing\n```\n\n----------------------------------------\n\nTITLE: Entity Tags JSON Structure Example\nDESCRIPTION: Example JSON structure showing how tags are organized with identifiers, entity references, and metadata.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/tagging/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"aws:servergroup:myservergroup-v001:100000000001:us-west-2\",\n  \"tags\": [\n    {\n      \"name\": \"spinnaker_ui_alert:autoscaling:ec2_instance_launch_error\",\n      \"namespace\": \"my_namespace\",\n      \"value\": {\n        \"message\": \"Insufficient capacity. Launching EC2 instance failed.\",\n        \"type\": \"alert\"\n      },\n      \"valueType\": \"object\"\n    }\n  ],\n  \"tagsMetadata\": [\n    {\n      \"name\": \"spinnaker_ui_alert:autoscaling:ec2_instance_launch_error\",\n      \"lastModified\": 1484162291500,\n      \"lastModifiedBy\": \"unknown\",\n      \"created\": 1484161809699,\n      \"createdBy\": \"unknown\"\n    }\n  ],\n  \"entityRef\": {\n    \"cloudProvider\": \"aws\",\n    \"accountId\": \"100000000001\",\n    \"region\": \"us-west-2\",\n    \"entityType\": \"servergroup\",\n    \"entityId\": \"myservergroup-v001\",\n    \"application\": \"app\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Debian Artifact in Spinnaker\nDESCRIPTION: Example of a debian package naming convention and structure. Shows how version numbers and status information are parsed from the debian package name.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/artifacts/index.md#2025-04-09_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n# package name is keel\\nkeel_0.353.0-h290.ae13adb_all.deb\n```\n\n----------------------------------------\n\nTITLE: Creating Jenkins Job\nDESCRIPTION: cURL command to create a new Jenkins job using the downloaded configuration file. Requires Jenkins host URL, job name, username, and API token.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/script-stage/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -XPOST \"$JENKINS_HOST/createItem?name=$JOB_NAME\" \\\n    -u $USER:$USER_API_TOKEN \\\n    --data-binary @scriptJobConfig.xml \\\n    -H \"Content-Type:text/xml\"\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Trust Store\nDESCRIPTION: Creates a Kubernetes secret containing the custom trust store for Spinnaker services.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret generic -n {your-spinnaker-namespace} internal-trust-store \\\n   --from-file /tmp/custom-trust-store/cacerts\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Storage with Halyard\nDESCRIPTION: Command to configure Oracle Object Storage settings in Spinnaker using Halyard. Sets up bucket name, compartment ID, authentication details, and regional settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/oracle.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage oracle edit \\\n    --bucket-name $BUCKET_NAME \\\n    --compartment-id $COMPARTMENT_OCID \\\n    --fingerprint $API_KEY_FINGERPRINT \\\n    --namespace $TENANCY_NAME \\\n    --region $REGION \\\n    --ssh-private-key-file-path  $PRIVATE_KEY_FILE \\\n    --tenancy-id $TENANCY_OCID \\\n    --user-id $USER_OCID\n```\n\n----------------------------------------\n\nTITLE: Executing a Parameterized Pipeline with Parameter File\nDESCRIPTION: Shows the format for providing parameters to a pipeline execution through a JSON file. This approach allows passing multiple complex parameters to a pipeline execution.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n{\n  \"parameter1\": \"value1\",\n  \"parameter2\": \"value2\",\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Evaluate Variables Stage Output in SpEL\nDESCRIPTION: Shows two methods for accessing variables set in an Evaluate Variables stage. The first option uses a longer form referencing the stage by name, while the second uses a simplified ephemeral variable reference.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/expressions/index.md#2025-04-09_snippet_3\n\nLANGUAGE: SpEL\nCODE:\n```\n${ execution.stages.?[ name == 'Set My Variables' ][0].outputs.environment }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ environment }\n```\n\n----------------------------------------\n\nTITLE: Disabling a Pipeline in Spinnaker\nDESCRIPTION: Shows how to disable a pipeline using the update command with the --disabled flag. This prevents the pipeline from being triggered by any configured trigger mechanisms.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline update --application my-app --name my-pipeline --disabled\n\n# Returns the following message if the pipeline gets updated successfully.\nPipeline updated\n```\n\n----------------------------------------\n\nTITLE: Defining S3 Object Artifact in Spinnaker Pipeline JSON\nDESCRIPTION: JSON representation of an S3 object artifact in a Spinnaker pipeline definition. Includes required fields like type, name, reference, and location to specify the S3 object details.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/s3-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"s3/object\",\n  \"name\": \"s3://bucket/file.json\",\n  \"reference\": \"s3://bucket/file.json\",\n  \"location\": \"us-east-1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Breaking Change Commit Message\nDESCRIPTION: Example showing how to format a commit message that includes a breaking change notification in the footer.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/submitting.md#2025-04-09_snippet_3\n\nLANGUAGE: git\nCODE:\n```\nfeat(provider/google): Added a very important and breaking feature.\n\nBREAKING CHANGE: More detail here if necessary.\n```\n\n----------------------------------------\n\nTITLE: Installing Spin CLI on MacOS\nDESCRIPTION: Commands to download, make executable, and install the Spinnaker CLI (spin) on a MacOS system. The script downloads the latest version from Google Cloud Storage and moves it to the system path.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LO https://storage.googleapis.com/spinnaker-artifacts/spin/$(curl -s https://storage.googleapis.com/spinnaker-artifacts/spin/latest)/darwin/amd64/spin\n\nchmod +x spin\n\nsudo mv spin /usr/local/bin/spin\n```\n\n----------------------------------------\n\nTITLE: Example of Kubernetes Deployment Revision State\nDESCRIPTION: A YAML representation showing the state of a Kubernetes Deployment with multiple revisions, where Revision 5 is active and previous revisions are available for rollback.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/automated-rollbacks/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nnginx-deployment-2d8178b77 (Revision 5) # active\nnginx-deployment-7bdd110f7 (Revision 4) \nnginx-deployment-0b13cc8c1 (Revision 1) \n```\n\n----------------------------------------\n\nTITLE: Enabling Artifactory Repository in Spinnaker\nDESCRIPTION: Commands to enable and configure Artifactory repository search in Spinnaker using Halyard CLI\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/artifactory-to-cf/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ hal config repository artifactory enable\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ hal config repository artifactory search add spring-artifactory --base-url https://my.repo.example.com \\\n\t\t--repo my-example-repo --groupId com.example.mygroup --username example --password mypassword\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload with Pipeline Parameters\nDESCRIPTION: JSON payload that provides values for pipeline parameters. This example sets the 'stack' parameter to 'prod', which will be used during pipeline execution.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/webhooks/index.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"parameters\": {\n    \"stack\": \"prod\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Webhook Parameters Configuration\nDESCRIPTION: Example of configuring parameters for custom webhook stages that can be rendered in the UI and referenced using SpEL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/custom-webhook-stages/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nparameters:\n- label: Git Commit\n  name: gitCommit\n  description: The Git commit of your application\n  defaultValue: ''\n  type: string\n```\n\n----------------------------------------\n\nTITLE: Configuring Halyard for Azure Storage\nDESCRIPTION: Configures Halyard to use the Azure Storage account for Spinnaker's persistent storage. This specifies the storage account name and key for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/azs.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage azs edit \\\n  --storage-account-name $STORAGE_ACCOUNT_NAME \\\n  --storage-account-key $STORAGE_ACCOUNT_KEY\n```\n\n----------------------------------------\n\nTITLE: Redeploying Spinnaker with Plugin Changes\nDESCRIPTION: Applies the Halyard configuration changes to redeploy Spinnaker with the new plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/deploy-example.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Configuring Wrapped Webhook Endpoint in echo.yml (YAML)\nDESCRIPTION: This snippet demonstrates how to configure a webhook endpoint with event wrapping and flattening options. It's useful when the endpoint expects events in a specific format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/notifications/index.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  -\n      wrap: true\n      flatten: true\n      url: http://listener3\n      eventName: spinnaker_events\n      fieldName: payload\n```\n\n----------------------------------------\n\nTITLE: Rendered User Data Example with Replaced Tokens in Spinnaker\nDESCRIPTION: Example of how the template file would be rendered for a specific deployment. This shows the replacement of tokens with actual values for the server group 'udf-example-cluster-v001'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/user-data.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nCLOUD_ACCOUNT=\"main\"\nCLOUD_ACCOUNT_TYPE=\"streaming\"\nCLOUD_ENVIRONMENT=\"prod\"\nCLOUD_SERVER_GROUP=\"udf-example-cluster-v001\"\nCLOUD_CLUSTER=\"udf-example-cluster\"\nCLOUD_STACK=\"example\"\nCLOUD_DETAIL=\"cluster\"\nCLOUD_REGION=\"east\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Security Group Resource to Delivery Config in Spinnaker\nDESCRIPTION: This YAML snippet shows how to add an exported security group resource to the delivery config file. It includes placeholders for the manifest name, application name, and the exported security group configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/getting-started/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nname: a-manifest-name\napplication: yourapp\nartifacts: []\nenvironments: \n  - name: testing\n    constraints: []\n    notifications: []\n    resources: # you can add more resources here, this is a list\n    - apiVersion: ec2.spinnaker.netflix.com/v1\n      kind: security-group\n      # ... the other info here from the security group you just exported \n```\n\n----------------------------------------\n\nTITLE: Defining Embedded Base64 Artifact in Spinnaker Pipeline JSON\nDESCRIPTION: Example JSON configuration for an embedded Base64 artifact in a Spinnaker pipeline definition. Shows the required fields including type (embedded/base64), reference (Base64-encoded content), and name (human-readable identifier).\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/embedded-base64/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"embedded/base64\",\n  \"reference\": \"dmFsdWU6IDEKbXlrZXk6IG15dmFsdWU=\",\n  \"name\": \"my-properties-file\"\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog details for Spinnaker version 1.8.3.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/ce8fff410c1cc1ac0ad6fba074b5e70c.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Querying for Webhook Triggered Pipelines with Bash\nDESCRIPTION: Bash script demonstrating how to query the Spinnaker API for pipeline executions that were triggered by a specific webhook call. The script narrows results by application name, trigger type, and the eventId value returned from the webhook call.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/searching/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nAPPLICATION=<application-name>  # This will narrow down results to only contain pipeline executions within a given application. You may supply '*' here to search across all applications.\nTRIGGER_TYPE=webhook  # This will narrow down results to only contain pipelines executions triggered by a webhook call\nEVENT_ID=c581dc8c-af6d-4ef0-8d84-27a64764b2f3  # eventId value returned by webhook call\n\n# Example call to Gate\ncurl localhost:8084/applications/$APPLICATION/executions/search?triggerTypes=$TRIGGER_TYPE&eventId=$EVENT_ID\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Resources in Spinnaker\nDESCRIPTION: Shows the basic structure for defining environments in a delivery config, including resource definitions for infrastructure components.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/delivery-configs/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenvironments:\n- name: testing\n  resources: \n  - <full resource definition>\n  - <another resource definition>\n```\n\n----------------------------------------\n\nTITLE: Verifying Kubernetes Credentials with kubectl\nDESCRIPTION: Command to verify Kubernetes cluster credentials by listing available namespaces using kubectl.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get namespaces\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the documentation page, specifying layout, title and navigation settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/canary/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Using Spinnaker for automated canary analysis\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Jenkins Master to Spinnaker Configuration (Bash)\nDESCRIPTION: This command adds a Jenkins master to Spinnaker's configuration using Halyard. It requires the Jenkins base URL, username, and API key.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/jenkins.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho $APIKEY | hal config ci jenkins master add my-jenkins-master \\\n    --address $BASEURL \\\n    --username $USERNAME \\\n    --password # api key will be read from STDIN to avoid appearing\n               # in your .bash_history\n```\n\n----------------------------------------\n\nTITLE: Storing GitHub Token in File\nDESCRIPTION: Command to store GitHub access token in a file that will be readable by Halyard for authentication purposes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/github.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho $TOKEN > $TOKEN_FILE\n```\n\n----------------------------------------\n\nTITLE: Storing JSON Configuration in Vault using CLI\nDESCRIPTION: Bash command for storing JSON configuration in HashiCorp Vault using the vault CLI. This example demonstrates how to put a JSON file into Vault's key-value store.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ vault kv put secret/echo @echo.json\n```\n\n----------------------------------------\n\nTITLE: Deleting a Canary Configuration in Spinnaker\nDESCRIPTION: Command to delete a specific canary configuration by its ID. This permanently removes the configuration from Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/canary-configs/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ spin canary canary-config delete canaryConfigId\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Contexts with kubectl\nDESCRIPTION: Command to list available Kubernetes contexts that will be used to configure Spinnaker deployment targets. This displays contexts for both staging and production environments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config get-contexts\n```\n\n----------------------------------------\n\nTITLE: Setting Pre-established Redirect URI for Gate in Spinnaker\nDESCRIPTION: This command uses Halyard to manually set the redirect_uri for Gate, which is necessary when Spinnaker is deployed behind networking components like SSL-terminating load balancers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn <authtype> edit --pre-established-redirect-uri https://my-real-gate-address.com:8084/login\n```\n\n----------------------------------------\n\nTITLE: Configuring Trust Policy for Legacy IAM Roles in Amazon ECS\nDESCRIPTION: JSON trust policy configuration for legacy IAM roles used in Spinnaker versions 1.18 and below. This allows both Amazon ECS and Application Auto Scaling to assume the role.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ecs.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n                \"Service\": [\n                  \"ecs.amazonaws.com\",\n                  \"application-autoscaling.amazonaws.com\"\n                ]\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Repo Artifact with Username/Password Authentication in Spinnaker Pipeline\nDESCRIPTION: This JSON snippet shows the configuration for a Git Repo artifact in a Spinnaker pipeline definition using username/password or token authentication. It includes the artifact type, HTTPS URL, and branch version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/git-repo/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"type\": \"git/repo\",\n    \"reference\": \"https://github.com/spinnaker/spinnaker.github.io\",\n    \"version\": \"feat-123\"\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.26.0 Changelog in HTML\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.26.0. The Gist is loaded from the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.1-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Executing a Parameterized Pipeline with Inline Parameters\nDESCRIPTION: Demonstrates how to execute a pipeline with parameters provided directly on the command line using the -p flag. Parameters are specified as comma-separated key-value pairs.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline execute --application my-app --name my-pipeline -p foo=bar,baz=qux\n```\n\n----------------------------------------\n\nTITLE: Installing Jenkins on Ubuntu\nDESCRIPTION: Shell commands to install Jenkins, Java, and Git on an Ubuntu server. This is the first step in setting up the CI/CD pipeline for Spinnaker integration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install openjdk-8-jdk\nwget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -\nsudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'\nsudo apt-get update\nsudo apt-get install jenkins git\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload with Artifacts in JSON\nDESCRIPTION: This JSON payload shows how to include artifacts in a webhook request to Spinnaker. It specifies a GCS object artifact with its type, name, and reference.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/webhooks/index.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"artifacts\": [\n    {\n      \"type\": \"gcs/object\",\n      \"name\": \"manifest.yml\",\n      \"reference\": \"gs://lw-artifacts/manifest.yml\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Spin Pipeline Commands in Bash\nDESCRIPTION: Shows the available commands for managing pipelines with the Spin CLI tool, including options for deleting, executing, retrieving, listing, and saving pipelines.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ spin pipeline\n\nUsage:\n   pipeline [command]\n\nAliases:\n  pipeline, pipelines, pi\n\nAvailable Commands:\n  delete      Delete the provided pipeline\n  execute     Execute the provided pipeline\n  get         Get the pipeline with the provided name from the provided application\n  list        List the pipelines for the provided application\n  save        Save the provided pipeline\n\nFlags:\n  -h, --help   help for pipeline\n\nGlobal Flags:\n      --config string          path to config file (default $HOME/.spin/config)\n      --gate-endpoint string   Gate (API server) endpoint (default http://localhost:8084)\n  -k, --insecure               ignore certificate errors\n      --no-color               disable color (default true)\n      --output string          configure output formatting\n  -q, --quiet                  squelch non-essential output\n\nUse \" pipeline [command] --help\" for more information about a command.\n```\n\n----------------------------------------\n\nTITLE: Applying Spinnaker Configuration Changes (Bash)\nDESCRIPTION: This command applies the changes made to Spinnaker's configuration, including the newly added Jenkins master.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/jenkins.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Configuring Gate Local Profile in YAML\nDESCRIPTION: Example of how to override Gate service properties using a local YAML profile. This allows customizing the configuration beyond what Halyard exposes directly.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/faq.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nexample:\n  property: value\n```\n\n----------------------------------------\n\nTITLE: Uploading Kubeconfig File to GCS Bucket for Spinnaker\nDESCRIPTION: This command uploads a kubeconfig file to a GCS bucket named 'mybucket'. The file is stored with the name 'mykubeconfig' and can be used for Kubernetes account configuration in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/gcs-secrets.md#2025-04-09_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngsutil cp /path/to/mykubeconfig gs://mybucket/mykubeconfig\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Storage in YAML\nDESCRIPTION: YAML configuration for enabling S3 as the storage backend for Front50\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/front50-cassandra-to-obj-store.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  front50:\n    storage_bucket: YOUR_S3_BUCKET_NAME\n    bucket_root: YOUR_S3_FOLDER_NAME\n    s3:\n      enabled: true\n```\n\n----------------------------------------\n\nTITLE: Selecting and deploying Spinnaker version\nDESCRIPTION: These commands list available Spinnaker versions, set the desired version, and initiate the deployment process using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nhal version list\n\nexport VERSION=1.19.2\n\nhal config version edit --version $VERSION\n\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Verifying Azure CLI Installation\nDESCRIPTION: Command to verify the Azure CLI installation and version\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/azure.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz --version\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Account with External Config File Reference\nDESCRIPTION: YAML configuration for a Kubernetes cloud provider account that loads its kubeconfig file from an external source. It uses the configserver: prefix to indicate the file should be retrieved by the Config Server.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  enabled: true\n  accounts:\n    - name: default\n      kubeconfigFile: configserver:kubeconfig.yml\n      dockerRegistries:\n        - accountName: dockerhub\n          namespaces: []\n      context: default\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.25.3 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.3 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.4-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Enabling App Engine and Compute Engine APIs in GCP\nDESCRIPTION: These commands enable the necessary Google Cloud Platform APIs for App Engine and Compute Engine, which are required for Spinnaker to interact with these services.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud services enable appengine.googleapis.com\ngcloud services enable compute.googleapis.com\n```\n\n----------------------------------------\n\nTITLE: Retrieving Trigger-Resolved Artifact by Type in Spinnaker\nDESCRIPTION: Function to look up a resolved artifact in the execution trigger by its type. Returns only one artifact if multiple matches are found.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_12\n\nLANGUAGE: SpEL\nCODE:\n```\n#triggerResolvedArtifactByType(String type)\n```\n\n----------------------------------------\n\nTITLE: Enabling OAuth2 via Halyard CLI\nDESCRIPTION: Command line instructions for configuring and enabling Oracle Cloud OAuth 2.0 authentication using Halyard CLI commands. Requires client ID and secret from Oracle Cloud setup.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/oracle/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn oauth2 edit --provider oracle \\\n  --client-id (client ID from above) \\\n  --client-secret (client secret from above)\n\nhal config security authn oauth2 enable\n\n```\n\n----------------------------------------\n\nTITLE: Uploading Kubeconfig File to S3 Bucket using AWS CLI\nDESCRIPTION: This bash command demonstrates how to use the AWS CLI to upload a kubeconfig file to an S3 bucket. It copies the local file to the specified S3 bucket path.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/s3-secrets.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naws s3 cp /path/to/mykubeconfig s3://mybucket/mykubeconfig\n```\n\n----------------------------------------\n\nTITLE: Implementing ChapStage in Java for Spinnaker Orca\nDESCRIPTION: This code snippet defines the ChapStage class, which implements StageDefinitionBuilder and CancellableStage interfaces. It sets up the task graph for the stage and provides cancellation functionality.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/new-stage.md#2025-04-09_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage com.netflix.spinnaker.orca.pipeline;\n\nimport com.google.common.collect.ImmutableMap;\nimport com.netflix.spinnaker.orca.CancellableStage;\nimport com.netflix.spinnaker.orca.chap.ChapService;\nimport com.netflix.spinnaker.orca.chap.Run;\nimport com.netflix.spinnaker.orca.chap.tasks.BeginChapTask;\nimport com.netflix.spinnaker.orca.chap.tasks.MonitorChapTask;\nimport com.netflix.spinnaker.orca.pipeline.model.Execution;\nimport com.netflix.spinnaker.orca.pipeline.model.Stage;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ChapStage implements StageDefinitionBuilder, CancellableStage {\n\n  @Autowired\n  public ChapService chapService;\n\n  @Override\n  public <T extends Execution<T>> void taskGraph(Stage<T> stage, TaskNode.Builder builder {\n    builder\n      .withTask(\"beginChap\", BeginChapTask.class)\n      .withTask(\"monitorChap\", MonitorChapTask.class);\n  }\n\n  @Override\n  public CancellableStage.Result cancel(Stage stage) {\n    Run run = (Run) stage.getContext().get(\"run\");\n    if (run != null) {\n      Run latestDetails = chapService.cancelChap(run.id.toString(), \"\");\n      return new CancellableStage.Result(stage, ImmutableMap.of(\"run\", latestDetails));\n    }\n\n    return null;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an SNS Topic for Spinnaker Integration using AWS CLI\nDESCRIPTION: Commands to create an Amazon SNS topic that will receive messages destined for Spinnaker. The TopicArn returned will be used in Echo configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/amazon.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n bash4.4$ export AWS_TOPIC_NAME=aws-pubsub-test-topic\n bash4.4$ aws sns create-topic --name ${AWS_TOPIC_NAME}\n {\n    \"TopicArn\": \"arn:aws:sns:us-east-1:1234567890:aws-pubsub-test-topic\"\n }\n```\n\n----------------------------------------\n\nTITLE: Configuring Halyard GCS Artifact Account\nDESCRIPTION: Commands to add GCS artifact account and enable GCS artifact support in Halyard configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gcs.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact gcs account add $ARTIFACT_ACCOUNT_NAME \\\n    --json-path $SERVICE_ACCOUNT_DEST\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload That Fails Constraints\nDESCRIPTION: Example JSON payload that would not trigger the pipeline because it fails to meet all defined constraints. This payload is missing the required 'bing' key.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/webhooks/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mykey\": \"myvalue\",\n  \"x\": [\"1\", \"2\", \"3\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Plugin with Halyard Command\nDESCRIPTION: Command to add and enable a plugin in Spinnaker using Halyard CLI. Requires plugin ID and version number.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal plugins add Armory.RandomWaitPlugin  \\\n--version=1.1.4 --enabled=true\n```\n\n----------------------------------------\n\nTITLE: Building the Spinnaker Plugin with Gradle\nDESCRIPTION: This command builds the plugin and creates necessary files for later steps, including the plugin reference file and the JavaScript bundle.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew releaseBundle\n```\n\n----------------------------------------\n\nTITLE: Enabling Oracle Cloud Provider in Spinnaker\nDESCRIPTION: Command to enable the Oracle Cloud provider in Spinnaker after account configuration. This is required to activate the Oracle Cloud integration after setting up accounts.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/oracle.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider oracle enable\n```\n\n----------------------------------------\n\nTITLE: External Secret Configuration in Config Server Backend\nDESCRIPTION: YAML configuration for storing account secrets in a Config Server backend. This example shows how to structure the external secrets file with the Jenkins password that's referenced in the Spinnaker configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/configuration/index.md#2025-04-09_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nci:\n  my-jenkins:\n    password: 'secret'\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs in HTML\nDESCRIPTION: HTML script tags that embed GitHub Gist content for Spinnaker changelog files. Each script loads a specific markdown file containing release notes for a different patch version of Spinnaker 1.23.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating a Firewall Rule for GitHub Webhooks\nDESCRIPTION: This command creates a GCP firewall rule to allow incoming traffic from GitHub's webhook IP ranges to port 8084, which is used by Spinnaker's API gateway.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute firewall-rules create allow-github-webhook \\\n    --allow=\"tcp:8084\" \\ \n    --source-ranges=$(curl -s https://api.github.com/meta | python -c \"import sys, json; print ','.join(json.load(sys.stdin)['hooks'])\") \\\n    --target-tags=\"allow-github-webhook\"\n```\n\n----------------------------------------\n\nTITLE: Converting Objects to JSON String in Spinnaker Expressions\nDESCRIPTION: Function that serializes an arbitrary JSON object into a JSON string representation for output or further processing.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_9\n\nLANGUAGE: SpEL\nCODE:\n```\n#toJson(Object)\n```\n\n----------------------------------------\n\nTITLE: Verifying Java Keystore Contents\nDESCRIPTION: Lists the contents of the Java Keystore to verify proper certificate installation. Uses JKS_PASSWORD for keystore access.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkeytool \\\n  -list \\\n  -keystore gate.jks \\\n  -storepass ${JKS_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Creating plugins.json File for Spinnaker Plugins\nDESCRIPTION: The plugins.json file lists all versions of a particular plugin. It includes metadata such as plugin ID, description, provider information, and release details including version, date, compatibility requirements, and download URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"id\": \"My.Plugin.Id\",\n    \"description\": \"This a sample plugin.\",\n    \"provider\": \"https://github.com/my-organization\",\n    \"releases\": [\n      {\n        \"version\": \"0.1.0\",\n        \"date\": \"2021-03-09T17:30:00.948341Z\",\n        \"requires\": \"deck>=0.0.0\",\n        \"sha512sum\": \"a91cb7d412a25ca5e1b2d72e14ab499986d5773ae8016721fbefd0adf430e33b75e8e61bac92244bbbe4811f118724ec6e2bb568fdd8181a9e11327a96b45da9\",\n        \"url\": \"https://github.com/my-organization/my-plugin/blob/master/my-plugin-v0.1.0.zip?raw=true\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring GCR Message Format in Halyard\nDESCRIPTION: Halyard command to configure GCR message format for a Pub/Sub subscription.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/pubsub/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config pubsub google subscription edit my-gcr-subscription \\\n  --message-format GCR\n```\n\n----------------------------------------\n\nTITLE: Applying Halyard Configuration Changes in Spinnaker\nDESCRIPTION: Command to apply configuration changes made using Halyard to the Spinnaker deployment. This should be run after making changes to the GitHub artifact configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/github/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Provider with Access Keys\nDESCRIPTION: Bash command to configure the AWS provider with access key ID and secret access key using Halyard CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider aws edit --access-key-id ${ACCESS_KEY_ID} \\\n    --secret-access-key # do not supply the key here, you will be prompted\n```\n\n----------------------------------------\n\nTITLE: Referencing S3 Secrets in Spinnaker Configuration\nDESCRIPTION: These code snippets show the syntax for referencing secrets stored in S3 within Spinnaker configuration files. It includes formats for referencing both secret literal values and secret files.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/s3-secrets.md#2025-04-09_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nencrypted:s3!r:<region>!b:<bucket>!f:<path to file>!k:<optional yaml key>\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nencryptedFile:s3!b:<bucket>!f:<path to file>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Spinnaker application with spin\nDESCRIPTION: Shows how to use the 'spin application delete' command to remove a Spinnaker application when it's no longer needed.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/app/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nspin application delete my-app\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Constraints in Spinnaker\nDESCRIPTION: Shows how to configure environment constraints that control artifact promotion between environments, such as dependency requirements.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/delivery-configs/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nenvironments:\n- name: staging\n  resources: # omitted for brevity\n  notifications: # omitted for brevity\n  constraints: \n  - type: depends-on\n    environment: testing\n```\n\n----------------------------------------\n\nTITLE: Deploying CloudFormation Template for Managed Accounts with AWS CLI\nDESCRIPTION: This snippet shows how to deploy the CloudFormation template for managed accounts using the AWS CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O -L https://spinnaker.io/downloads/aws/managed.yaml\naws cloudformation deploy --stack-name spinnaker-managed-infrastructure-setup --template-file managed.yaml \\\n--parameter-overrides AuthArn=FROM_ABOVE ManagingAccountId=FROM_ABOVE --capabilities CAPABILITY_NAMED_IAM --region us-west-2\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Tasks API Tag Configuration\nDESCRIPTION: Example of using Spinnaker's tasks API to create tags with backwards compatibility support.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/tagging/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X \"POST\" \"http://gate/tasks\" \\\n     -H \"Content-Type: application/json\" \\\n     -d $'{\n  \"application\": \"spinnaker\",\n  \"job\": [\n    {\n      \"type\": \"upsertEntityTags\",\n      \"tags\": [\n        {\n          \"name\": \"spinnaker_ui_alert:autoscaling:ec2_instance_launch_error\",\n          \"namespace\": \"my_namespace\",\n          \"value\": {\n            \"message\": \"Insufficient capacity. Launching EC2 instance failed.\",\n            \"type\": \"alert\"\n          },\n          \"valueType\": \"object\"\n        }\n      ],\n      \"entityRef\": {\n        \"cloudProvider\": \"aws\",\n        \"entityType\": \"servergroup\",\n        \"entityId\": \"myservergroup-v001\",\n        \"region\": \"us-west-2\",\n        \"account\": \"production\",\n        \"application\": \"app\"            \n      }\n    }\n  ],\n  \"description\": \"Updating tags\"\n}'\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Scripts for Spinnaker Changelogs\nDESCRIPTION: HTML script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.23.x releases. Each script loads a separate markdown file containing release notes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Packaging and Uploading Sample App\nDESCRIPTION: Commands to clone a sample Google App Engine application, package it as a tarball, and upload to GCS bucket.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-appengine/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/GoogleCloudPlatform/python-docs-samples.git\ncd python-docs-samples/appengine/standard/hello_world; tar -cvf app.tar *\ngsutil cp app.tar $BUCKET_NAME\n```\n\n----------------------------------------\n\nTITLE: Splitting String Parameter in Java Pipeline Expression\nDESCRIPTION: Example demonstrating how to split a comma-separated string parameter into a list using Java's split() method within a pipeline expression.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n${parameters.regions.split(\",\")}\n```\n\n----------------------------------------\n\nTITLE: Implementing ApplicationEventListener for Extensions in Kotlin\nDESCRIPTION: Demonstrates an alternative way to handle ExtensionCreated events by implementing ApplicationEventListener interface.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\n@Component\nclass MyServiceComponent(\n  private val extensions: MutableList<MyExtensionPoint> = mutableListOf()\n) : ApplicationEventListener<ExtensionCreated> {\n\n  override fun onApplicationEvent(e: ExtensionCreated) {\n    extensions.add(e.bean)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Decrypted Token in Older Clouddriver Profile\nDESCRIPTION: Example showing how Halyard handles secrets for older Clouddriver versions that don't support decryption. The token is decrypted to plain text when deployed to these versions.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n...\n  github:\n    enabled: true\n    accounts:\n    - name: github\n      token: <TOKEN>\n...\n```\n\n----------------------------------------\n\nTITLE: Jinja Template for Translating GCS Locations into Spinnaker Artifacts\nDESCRIPTION: A Jinja template that converts a pub/sub message containing a GCS location field into a Spinnaker artifact format that can be consumed by pipelines.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/pubsub/index.md#2025-04-09_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"gcs/object\", # static type.\n    \"reference\": \"{{{{{ location }}}}\", # 'location' in the pub/sub payload.\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Conventional Commit Message Format\nDESCRIPTION: Template showing the standard format for commit messages in Spinnaker following the 'conventional' commit message format. Includes type, scope, subject, body and footer sections.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/submitting.md#2025-04-09_snippet_0\n\nLANGUAGE: git\nCODE:\n```\n<type>(<scope>): <subject>\n<empty line>\n<body>\n<empty line>\n<footer>\n```\n\n----------------------------------------\n\nTITLE: Installing Halyard for Spinnaker Configuration\nDESCRIPTION: These commands download and install Halyard, a tool used for configuring, installing, and updating Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh\n\nsudo bash InstallHalyard.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Halyard for GCS Storage\nDESCRIPTION: Commands to configure Halyard to use GCS as the storage backend for Spinnaker, including setting the project, bucket location, and service account credentials.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/gcs.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage gcs edit --project $PROJECT \\\n    --bucket-location $BUCKET_LOCATION \\\n    --json-path $SERVICE_ACCOUNT_DEST\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub File Artifact in Spinnaker Pipeline JSON\nDESCRIPTION: This JSON snippet demonstrates how to define a GitHub file artifact in a Spinnaker pipeline configuration. It includes the type, reference URL, file name, and version (commit hash) of the artifact.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/github-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"github/file\",\n  \"reference\": \"https://api.github.com/repos/myorg/myrepo/contents/path/to/file.yml\",\n  \"name\": \"path/to/file.yml\",\n  \"version\": \"aec855f4e0e11\"\n}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes ConfigMap Artifact - JSON\nDESCRIPTION: Example of a JSON artifact definition representing a deployed Kubernetes ConfigMap.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/in-kubernetes-v2/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"type\": \"kubernetes/configMap\",\n     \"name\": \"frontend-configs\",\n     \"location\": \"prod\",\n     \"version\": \"v001\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Spinnaker Plugin Versions in Gradle Properties\nDESCRIPTION: This snippet shows the necessary version declarations in the gradle.properties file for a Spinnaker plugin project. It includes versions for Spinnaker Gradle, PF4J, Kork, Orca, and Kotlin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/project-config.md#2025-04-09_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nspinnakerGradleVersion=8.10.1\npf4jVersion=3.2.0\nkorkVersion=7.99.1\norcaVersion=2.19.0-20210209140018\nkotlinVersion=1.3.50\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud SDK\nDESCRIPTION: Commands to install and authenticate the gcloud CLI tool for interacting with Google Cloud Platform.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/gce-source-to-prod/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://sdk.cloud.google.com | bash\n```\n\nLANGUAGE: bash\nCODE:\n```\ngcloud auth login <your email address>\n```\n\n----------------------------------------\n\nTITLE: Defining an Oracle Object Storage Artifact in Spinnaker JSON\nDESCRIPTION: This JSON snippet demonstrates how to reference an Oracle Object Storage object as an artifact in Spinnaker. The artifact definition requires a type field set to 'oracle/object' and a reference field containing the OCI-prefixed path to the object.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/oracle-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"oracle/object\",\n  \"reference\": \"oci://bucket/file.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Pub/Sub Message Payload with Constraints\nDESCRIPTION: A JSON payload example that would satisfy the configured payload constraints requiring 'foo' to equal 'bar' and 'bing' to match the regex pattern 'b.*p'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/pubsub/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"foo\": \"bar\",\n  \"bing\": \"boooop\",\n  \"x\": [\"1\", \"2\", \"3\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pipeline JSON with Spin CLI\nDESCRIPTION: Uses the Spin CLI to get the JSON representation of an existing pipeline. This is the starting point for creating a pipeline template.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/create.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline get --name <pipelineName> --application <appName>\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Object Artifact in JSON\nDESCRIPTION: This JSON snippet shows the structure of an artifact representing a deployed Kubernetes object. It includes the type, name, location, and version of the object.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/in-kubernetes-v2/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"type\": \"kubernetes/configMap\",\n     \"name\": \"frontend-configs\",\n     \"location\": \"prod\",\n     \"version\": \"v001\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 Authentication in Halyard YAML\nDESCRIPTION: YAML configuration for setting up G Suite OAuth2 authentication in Spinnaker's Halyard configuration. Includes client credentials, authorization URIs, scope settings, and user information mapping.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/google/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsecurity:\n  authn:\n    oauth2:\n      enabled: true\n      client:\n        clientId: # client ID from above\n        clientSecret: # client secret from above\n        accessTokenUri: https://www.googleapis.com/oauth2/v4/token\n        userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth\n        scope: profile email\n      resource:\n        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo\n      userInfoRequirements:\n        # You almost certainly want to restrict access to your Spinnaker to\n        # users whose account is from your hosted domain; without this any\n        # user with a Google account will have access.\n        hd: # hosted domain\n      userInfoMapping:\n        email: email\n        firstName: given_name\n        lastName: family_name\n      provider: GOOGLE\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of QoS Execution Flow in Mermaid\nDESCRIPTION: This diagram illustrates the flow of execution through the QoS system, showing the interactions between ExecutionPersister, ExecutionBufferActuator, BufferPolicy, ExecutionPromoter, PromotionPolicy, and ExecutionLauncher components.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/runbooks/orca-quality-of-service.md#2025-04-09_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant ExecutionPersister\n    participant ExecutionBufferActuator\n    participant BufferPolicy\n    participant ExecutionPromoter\n    participant PromotionPolicy\n    participant ExecutionLauncher\n    ExecutionPersister->>ExecutionBufferActuator: BeforeExecutionPersistEvent\n    ExecutionBufferActuator->>BufferPolicy: Execution\n    loop Buffer Chain\n        BufferPolicy->BufferPolicy: Evaluate if BUFFERED or ENQUEUED\n    end\n    alt ENQUEUED\n        BufferPolicy->>ExecutionLauncher: Start Execution\n    else BUFFERED\n        Note over BufferPolicy: Set BUFFERED status\n    end\n    note right of ExecutionPromoter: Every n seconds\n    ExecutionPromoter->>PromotionPolicy: All BUFFERED executions \"candidates\"\n    loop PromoteCycle\n        PromotionPolicy->PromotionPolicy: Reduce candidates\n    end\n    PromotionPolicy->>ExecutionPromoter: Final promotion candidates\n    loop Promote Executions\n        note over ExecutionPromoter: For each promoted execution\n        ExecutionPromoter->>ExecutionPersister: Update Execution status to NOT_STARTED\n        ExecutionPromoter->>ExecutionLauncher: Start Execution\n    end\n```\n\n----------------------------------------\n\nTITLE: Defining S3 Object Artifact in JavaScript\nDESCRIPTION: This snippet demonstrates how to define an S3 object artifact in Spinnaker. It includes the required fields: type, name, reference, and location. The type is always 's3/object', while name and reference typically contain the S3 bucket path. The location field specifies the AWS region of the bucket.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/s3-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"type\": \"s3/object\",\n  \"name\": \"s3://bucket/file.json\",\n  \"reference\": \"s3://bucket/file.json\",\n  \"location\": \"us-east-1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Google Cloud\nDESCRIPTION: Commands to authenticate gcloud CLI and set the default project\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud auth login\n\ngcloud config set project <PROJECT_NAME>\n```\n\n----------------------------------------\n\nTITLE: Retrieving CloudFormation Stack Outputs with AWS CLI\nDESCRIPTION: This snippet shows how to retrieve the outputs from the deployed CloudFormation stack using the AWS CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naws cloudformation describe-stacks --stack-name spinnaker-managing-infrastructure-setup  --region us-west-2 --query 'Stacks[0].Outputs'\n```\n\n----------------------------------------\n\nTITLE: Retrieving a single Spinnaker application with spin\nDESCRIPTION: Illustrates the use of 'spin application get' command to fetch detailed information about a specific Spinnaker application, including its attributes and associated clusters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/app/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nspin application get my-app\n{\n  \"attributes\": {\n    \"accounts\": \"my-account\",\n    \"cloudProviders\": \"gce,kubernetes\",\n    \"createTs\": \"1529349914747\",\n    \"email\": \"jacobkiefer@google.com\",\n    \"instancePort\": 80,\n    \"lastModifiedBy\": \"anonymous\",\n    \"name\": \"my-account\",\n    \"platformHealthOnly\": true,\n    \"providerSettings\": {\n      \"gce\": {\n        \"associatePublicIpAddress\": true\n      }\n    },\n    \"updateTs\": \"1529349915014\",\n    \"user\": \"anonymous\"\n  },\n  \"clusters\": {\n    \"my-account-cluster\": [\n      {\n        \"loadBalancers\": [],\n        \"name\": \"my-account-gce\",\n        \"provider\": \"gce\",\n        \"serverGroups\": [\n          \"my-account-gce-v000\",\n          \"my-account-gce-v001\"\n        ]\n      }\n    ]\n  },\n  \"name\": \"my-account\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Top-level build.gradle for Spinnaker Plugin\nDESCRIPTION: This Gradle configuration sets up the main build file for a Spinnaker plugin project. It includes plugin imports, version management, and subproject configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/project-config.md#2025-04-09_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n}\n\nplugins {\n  id(\"com.moowork.node\").version(\"1.3.1\").apply(false)\n  id(\"io.spinnaker.plugin.bundler\").version(\"$spinnakerGradleVersion\")\n  id(\"com.palantir.git-version\").version(\"0.12.2\")\n  //... other plugins you might be using\n}\n\napply plugin: \"io.spinnaker.plugin.bundler\"\nspinnakerBundle {\n  pluginId = \"Armory.RandomWaitPlugin\"\n  description = \"An example of a PF4J based plugin, that provides a new stage.\"\n  provider = \"https://github.com/spinnaker-plugin-examples\"\n  version = rootProject.version\n}\n\nversion = normalizedVersion()\n\nsubprojects {\n  group = \"io.armory.plugin.manifest\"\n  version = rootProject.version\n}\n\nString normalizedVersion() {\n  String fullVersion = gitVersion()\n  String normalized = fullVersion.split(\"-\").first()\n  if (fullVersion.contains(\"dirty\")) {\n    return \"$normalized-SNAPSHOT\"\n  } else {\n    return normalized\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Artifacts to GCS Bucket to Trigger Pipeline\nDESCRIPTION: Command to upload an application JAR file to the GCS bucket, which will trigger the configured Spinnaker pipeline via Pub/Sub notification.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ gsutil cp application.jar $BUCKET\n```\n\n----------------------------------------\n\nTITLE: Installing Spin CLI on Windows\nDESCRIPTION: PowerShell script to download and install the Spinnaker CLI (spin) on Windows. The script creates a directory, downloads the executable, unblocks the file, and adds it to the user's PATH environment variable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nNew-Item -ItemType Directory $env:LOCALAPPDATA\\spin -ErrorAction SilentlyContinue\n\nInvoke-WebRequest -OutFile $env:LOCALAPPDATA\\spin\\spin.exe -UseBasicParsing \"https://storage.googleapis.com/spinnaker-artifacts/spin/$([System.Text.Encoding]::ASCII.GetString((Invoke-WebRequest https://storage.googleapis.com/spinnaker-artifacts/spin/latest).Content))/windows/amd64/spin.exe\"\n\nUnblock-File $env:LOCALAPPDATA\\spin\\spin.exe\n\n$path = [Environment]::GetEnvironmentVariable(\"PATH\", [EnvironmentVariableTarget]::User) -split \";\"\nif ($path -inotcontains \"$env:LOCALAPPDATA\\spin\") {\n  $path += \"$env:LOCALAPPDATA\\spin\"\n  [Environment]::SetEnvironmentVariable(\"PATH\", $path -join \";\", [EnvironmentVariableTarget]::User)\n\n  $env:PATH = (([Environment]::GetEnvironmentVariable(\"PATH\", [EnvironmentVariableTarget]::Machine) -split \";\") + $path) -join \";\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Pod Labels for Spinnaker Server Group\nDESCRIPTION: This YAML snippet shows how Spinnaker sets Pod labels when creating a Server Group in Kubernetes. It includes a label with the Server Group name set to true.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntemplate:\n  metadata:\n    labels:\n      ${SERVER-GROUP}: true\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 Settings in Halyard YAML\nDESCRIPTION: YAML configuration for setting up Oracle Cloud OAuth 2.0 authentication in Spinnaker's Halyard. Includes settings for client credentials, authorization endpoints, token URIs, and user information mapping.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/oracle/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsecurity:\n  authn:\n    oauth2:\n      enabled: true\n      client:\n        clientId: # client ID from above\n        clientSecret: # client secret from above\n        accessTokenUri: https://idcs-${idcsTenantId}.identity.oraclecloud.com/oauth2/v1/token\n        userAuthorizationUri: https://idcs-${idcsTenantId}.identity.oraclecloud.com/oauth2/v1/authorize\n        scope: openid urn:opc:idm:__myscopes__\n      resource:\n        userInfoUri: https://idcs-${idcsTenantId}.identity.oraclecloud.com/oauth2/v1/userinfo\n      userInfoRequirements: {}\n      userInfoMapping:\n        email: ''\n        firstName: given_name\n        lastName: family_name\n        username: preferred_username\n      provider: ORACLE\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Service Settings for Spinnaker\nDESCRIPTION: YAML configuration for custom service settings to pull a container image into a Spinnaker instance.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/dev-environment.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nartifactId:\nkubernetes:\n  imagePullSecrets:\n    - artifactory-creds\n```\n\n----------------------------------------\n\nTITLE: Configuring Trust Store in orca-local.yml\nDESCRIPTION: YAML configuration for setting up the trust store in Spinnaker's orca-local.yml file. This is an alternative to using Halyard and requires specifying the trust store path and password.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/webhook-custom-trust-store.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nwebhook:\n  trust:\n    enabled: true\n    trustStore: <path to trust store in jks format>\n    trustStorePassword: <password for trustStore>\n```\n\n----------------------------------------\n\nTITLE: Testing LDAP Search Without Search Base\nDESCRIPTION: Command to test LDAP search using manager DN credentials without specifying a search base.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/ldap/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -D \"MANAGER_DN\" -w 'MANAGER_PASSWORD' -H ldaps://1.2.3.4 -x   \"(UID=USERNAME})\"\n```\n\n----------------------------------------\n\nTITLE: Using JsonPath for Webhook Status Monitoring\nDESCRIPTION: Example of a JsonPath expression used to extract status information from a webhook response JSON in Spinnaker's webhook stage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/stages/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\nbuildInfo.status\n```\n\n----------------------------------------\n\nTITLE: Creating Halyard Host VM\nDESCRIPTION: Commands to create a GCE VM instance for hosting Halyard with the configured service account\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nHALYARD_HOST=$(echo $USER-halyard-`date +%m%d` | tr '_.' '-')\n\ngcloud compute instances create $HALYARD_HOST \\\n    --project=$GCP_PROJECT \\\n    --zone=us-central1-f \\\n    --scopes=cloud-platform \\\n    --service-account=$HALYARD_SERVICE_ACCOUNT_EMAIL \\\n    --image-project=ubuntu-os-cloud \\\n    --image-family=ubuntu-1804-lts \\\n    --machine-type=n1-standard-4\n```\n\n----------------------------------------\n\nTITLE: Building the Plugin with Yarn\nDESCRIPTION: Command to build the Spinnaker frontend plugin using Yarn.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nyarn && yarn build\n```\n\n----------------------------------------\n\nTITLE: Configuring Service-extension build.gradle for Spinnaker Plugin\nDESCRIPTION: This Gradle configuration sets up the build file for a Spinnaker plugin service extension. It includes necessary plugins, dependencies, and metadata for building a JVM-based plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/project-config.md#2025-04-09_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"io.spinnaker.plugin.service-extension\"\napply plugin: \"maven-publish\"\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\ndependencies {\n  annotationProcessor(\"org.pf4j:pf4j:$pf4jVersion\")\n\n  compileOnly(\"com.netflix.spinnaker.kork:kork-plugins-api:$korkVersion\")\n  compileOnly(\"com.netflix.spinnaker.orca:orca-api:$orcaVersion\")\n\n  // implementation(\"com.something.my.plugin.needs:dependency:version\")\n}\n\nspinnakerPlugin {\n  serviceName = \"orca\"\n  pluginClass = \"io.armory.plugin.stage.wait.random.RandomWaitPlugin\"\n}\n```\n\n----------------------------------------\n\nTITLE: Self-signing CA Certificate for Spinnaker SSL\nDESCRIPTION: This OpenSSL command creates a self-signed X.509 certificate for the Certificate Authority, valid for 365 days, using the previously generated CA key.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req \\\n  -new \\\n  -x509 \\\n  -days 365 \\\n  -key ca.key \\\n  -out ca.crt \\\n  -passin pass:${CA_KEY_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Triggering Webhook with cURL in Bash\nDESCRIPTION: This snippet demonstrates how to trigger a Spinnaker webhook using cURL. It sends a POST request to the configured endpoint with an empty JSON payload.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/webhooks/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl $ENDPOINT -X POST -H \"content-type: application/json\" -d \"{ }\"\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom CRD Handler in Java for Spinnaker's Kubernetes Provider\nDESCRIPTION: Basic implementation of a KubernetesHandler subclass for a custom resource definition. This handler defines how Spinnaker interacts with the custom Kubernetes resource type, including its Spinnaker representation, versioning strategy, and stability determination.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/crd-extensions.md#2025-04-09_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Component\npublic class MyCRDHandler extends KubernetesHandler {\n\n  public MyCRDHandler() {\n    // Hook point for registering a custom `ArtifactReplacer`\n    // for your CRD. During a deploy operation,\n    // if an artifact of the type specified in the replacer is present,\n    // the artifact will be inserted into the manifest using the\n    // strategy described in the replacer.\n  }\n\n  @Override\n  public KubernetesKind kind() {\n    return KubernetesKind.from(\"MyCRDKind\");\n  }\n\n  @Override\n  public boolean versioned() {\n    // If the CRD resource should be versioned - i.e., assigned a sequence\n    // v001, v002, etc.\n    return false;\n  }\n\n  @Override\n  public SpinnakerKind spinnakerKind() {\n    // The Spinnaker kind that the resource will be represented as in Spinnaker's API and UI.\n    return SpinnakerKind.SERVER_GROUPS;\n  }\n\n  @Override\n  public Status status(KubernetesManifest manifest) {\n    // Includes logic for determining whether your CRD manifest is stable.\n    // A deploy manifest operation, for example, will block until this\n    // method returns a stable status.\n  }\n\n  @Override\n  public KubernetesV2CachingAgentFactory cachingAgentFactory() {\n    return KubernetesCoreCachingAgent::new;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Basic Authentication Players in Spinnaker\nDESCRIPTION: This Mermaid diagram illustrates the three main components involved in Spinnaker's authentication: Deck (UI), Gate (API Gateway), and the Identity Provider. It shows the relationships and interactions between these components.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\nclassDef default fill:#d8e8ec,stroke:#7a8288;\nlinkStyle default stroke:#7a8288, stroke-width:2px, fill:none;\n\ngate(Gate)\nidp(IdentityProvider)\ndeck(Deck/Browser)\n\ndeck-->gate\ngate-->deck\ndeck-->idp\nidp-->deck\n```\n\n----------------------------------------\n\nTITLE: Testing LDAP Search with Manager DN and Search Filter\nDESCRIPTION: Command to test LDAP search using manager DN credentials with a specific user search filter and search base.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/ldap/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -D \"MANAGER_DN\" -w 'MANAGER_PASSWORD' -H ldaps://1.2.3.4 -x -b \"DC=USERS,OU=Y,O=io\" \"(UID=USERNAME)\"\n```\n\n----------------------------------------\n\nTITLE: Example Spinnaker 1.10.1 BOM in YAML\nDESCRIPTION: This YAML snippet provides a complete example of a Spinnaker Bill of Materials (BOM) for version 1.10.1, including detailed version and commit information for all services and dependencies.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/custom-boms.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: 1.10.1\ntimestamp: '2018-10-24 15:31:30'\nservices:\n  echo:\n    version: 2.1.0-20181003100130\n    commit: d20259cd47acd432670dcbddd8191eabbdbf7a4e\n  clouddriver:\n    version: 4.0.1-20181024113115\n    commit: ad521d622193bd36b90f7c8b3fb453044222cd72\n  deck:\n    version: 2.5.1-20181018042808\n    commit: 9a096f216be8bf36da14f2f5faa15e94e0a407c5\n  fiat:\n    version: 1.1.0-20181012042808\n    commit: b1fd0b386534dd170f61c845ee8cda9a5865de82\n  front50:\n    version: 0.13.0-20181005212906\n    commit: 62da4dc86c663230d897dc8da5ffbbb2c7793bbe\n  gate:\n    version: 1.2.0-20181016042808\n    commit: 0b204b7b4e36819b2f469dd3850dc89b45a50bf8\n  igor:\n    version: 0.13.0-20181003100130\n    commit: a4fd89756144d4b0722dc43ee679b9ae51a75171\n  kayenta:\n    version: 0.4.0-20180928152808\n    commit: 788433f454505e7848d185868ed78d73ac0ef4cd\n  orca:\n    version: 1.1.0-20181003100130\n    commit: bde9d946c68b8305e7ecd48c045a52eaa9b63cbc\n  rosco:\n    version: 0.8.0-20181003100130\n    commit: 2f1a4f856b04971fe0fa04c7d402ee8f03827f61\n  defaultArtifact: {}\n  monitoring-third-party:\n    version: 0.9.0-20180913172809\n    commit: 1559f0a03c2c1d88bf07a164e1c9c21a7c5e6af4\n  monitoring-daemon:\n    version: 0.9.0-20180913172809\n    commit: 1559f0a03c2c1d88bf07a164e1c9c21a7c5e6af4\ndependencies:\n  redis:\n    version: 2:2.8.4-2\n  consul:\n    version: 0.7.5\n  vault:\n    version: 0.7.0\nartifactSources:\n  debianRepository: https://dl.bintray.com/spinnaker-releases/debians\n  dockerRegistry: us-docker.pkg.dev/spinnaker-community/docker\n  gitPrefix: https://github.com/spinnaker\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service Account in Spinnaker\nDESCRIPTION: This snippet shows how to delete a service account using a DELETE request to Front50. It requires the service account ID, which is the same as the account name in lowercase.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/service-accounts/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Service Account ID is the same as service account name with all lowercase\nSERVICE_ACCOUNT_ID=\"sekret-service-account@spinnaker-test.net\"\nFRONT50=http://front50.url:8080\n\ncurl -X DELETE \"$FRONT50/serviceAccounts/$SERVICE_ACCOUNT_ID\"\n```\n\n----------------------------------------\n\nTITLE: Authentication Flow Diagram using Mermaid\nDESCRIPTION: A mermaid diagram showing the authentication flow between Deck (Spinnaker's UI), Gate (API Gateway), and the Identity Provider. Illustrates the interconnections and communication paths between these components.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/index.md#2025-04-09_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\nclassDef default fill:#d8e8ec,stroke:#7a8288;\nlinkStyle default stroke:#7a8288, stroke-width:2px, fill:none;\n\ngate(Gate)\nidp(IdentityProvider)\ndeck(Deck/Browser)\n\ndeck-->gate\ngate-->deck\ndeck-->idp\nidp-->deck\n```\n\n----------------------------------------\n\nTITLE: Configuring Clouddriver Read-only Shards in Orca\nDESCRIPTION: Comprehensive configuration for Clouddriver read-only shards in orca.yml, including multiple selector types based on execution type, application, origin, and authenticated users.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/runbooks/sharding-spinnaker.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nclouddriver:\n  readonly:\n    baseUrls:\n    - baseUrl: https://clouddriver-readonly-orca-1.example.com\n      priority: 10\n      config:\n        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByExecutionTypeServiceSelector\n        executionTypes:\n          - orchestration\n    - baseUrl: https://clouddriver-readonly-orca-2.example.com\n      priority: 20\n      config:\n        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByApplicationServiceSelector\n        applicationPattern: app1|.*app2.*\n    - baseUrl: https://clouddriver-readonly-orca-3.example.com\n      priority: 30\n      config:\n        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByOriginServiceSelector\n        origin: deck\n        executionTypes:\n          - orchestration\n    - baseUrl: https://clouddriver-readonly-orca-4.example.com\n      priority: 50\n      config:\n        selectorClass: com.netflix.spinnaker.orca.clouddriver.config.ByAuthenticatedUserServiceSelector\n        users:\n          - horseman.*\n          - bojack.*\n    - baseUrl: https://clouddriver-readonly-orca-5.example.com\n```\n\n----------------------------------------\n\nTITLE: Project Structure for Spinnaker Frontend Plugin\nDESCRIPTION: Directory and file structure created by the scaffold command for a Spinnaker frontend plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmy-plugin\n├──  my-plugin-deck\n    ├── .eslintrc.js\n    ├── .prettierrc.js\n    ├── package.json  \n    ├── my-plugin-deck.gradle  \n    ├── tsconfig.json  \n    ├── rollup.config.js  \n    ├── yarn.lock  \n    ├── node_modules  \n    └── src  \n        ├── index.ts  \n        ├── WidgetizeStage.less  \n        └── WidgetizeStage.tsx  \n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of OAuth Token Exchange and User Info Retrieval in Spinnaker\nDESCRIPTION: This Mermaid sequence diagram illustrates the final steps of the OAuth 2.0 flow in Spinnaker, including the exchange of the authorization code for an access token and the retrieval of user information from the resource server.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_8\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\nparticipant Deck\nparticipant Gate\nparticipant IdentityProvider\nparticipant ResourceServer\n\nDeck->>+Gate: GET /login?code=abcdef\nGate->>+IdentityProvider: POST /token \"{code:abcdef, client_id:..., client_secret:...}\"\nIdentityProvider->>-Gate: Responds with access token `12345`\nGate->>+ResourceServer: GET /userInfo with \"Authorization: Bearer 12345\" header\nResourceServer->>-Gate: Respondes with JSON of user profile information\nNote left of Gate: Gate extracts data based on userInfoMapping\nGate->>-Deck: HTTP 302 to originally requested URL\n```\n\n----------------------------------------\n\nTITLE: Removing a Specific Environment Pin via Spinnaker API (JSON)\nDESCRIPTION: This snippet shows the JSON body structure for a DELETE request to remove a specific environment pin. It includes the same information as creating a pin: target environment, artifact reference, and version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/pinning/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"targetEnvironment\": \"test\",\n  \"reference\" : \"my-artifact\",\n  \"version\" : \"master-h10.62bbbd6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Static Manifest Deployment in JSON\nDESCRIPTION: JSON configuration for a static manifest deployment stage in Spinnaker. Defines the basic structure needed for deploying a Kubernetes manifest directly in the pipeline.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/deploy-manifest/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Deploy my manifest\",   // human-readable name\n  \"type\": \"deployManifest\",       // tells orchestration engine what to run\n  \"account\": \"nudge\",             // account (k8s cluster) to deploy to\n  \"cloudProvider\": \"kubernetes\",\n  \"source\": \"text\",\n  \"manifest\": {\n                                  // manifest contents go here\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Log Path Configuration\nDESCRIPTION: Log file paths for different Spinnaker deployment types. For Kubernetes distributed deployments, logs are sent to the configured logging solution. For LocalDebian deployments, logs are written to the spinnaker directory.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/index.md#2025-04-09_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/log/spinnaker\n```\n\n----------------------------------------\n\nTITLE: Creating GCE Service Account\nDESCRIPTION: Commands to create and configure a service account for GCE with compute, network, and security permissions\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nGCP_PROJECT=$(gcloud config get-value project)\nGCE_SERVICE_ACCOUNT_NAME=spinnaker-gce-account\n\ngcloud iam service-accounts create \\\n    $GCE_SERVICE_ACCOUNT_NAME \\\n    --project=$GCP_PROJECT \\\n    --display-name $GCE_SERVICE_ACCOUNT_NAME\n\nGCE_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list \\\n    --project=$GCP_PROJECT \\\n    --filter=\"displayName:$GCE_SERVICE_ACCOUNT_NAME\" \\\n    --format='value(email)')\n\n# permission to create/modify instances in your project\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --member serviceAccount:$GCE_SERVICE_ACCOUNT_EMAIL \\\n    --role roles/compute.instanceAdmin\n\n# permission to create/modify network settings in your project\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --member serviceAccount:$GCE_SERVICE_ACCOUNT_EMAIL \\\n    --role roles/compute.networkAdmin\n\n# permission to create/modify firewall rules in your project\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --member serviceAccount:$GCE_SERVICE_ACCOUNT_EMAIL \\\n    --role roles/compute.securityAdmin\n\n# permission to create/modify images & disks in your project\ngcloud projects add-iam-policy-binding $GCP_PROJECT \\\n    --member serviceAccount:$GCE_SERVICE_ACCOUNT_EMAIL \\\n    --role roles/compute.storageAdmin\n\n  gcloud projects add-iam-policy-binding $GCP_PROJECT \\\n     --member serviceAccount:$GCE_SERVICE_ACCOUNT_EMAIL \\\n     --role roles/iam.serviceAccountUser\n     \n  gcloud projects add-iam-policy-binding $GCP_PROJECT \\\n     --member serviceAccount:$GCE_SERVICE_ACCOUNT_EMAIL \\\n     --role roles/iam.serviceAccountTokenCreator\n```\n\n----------------------------------------\n\nTITLE: Verifying Service Account Permissions in Fiat\nDESCRIPTION: This command checks what permissions a specific service account has by querying Fiat's authorize endpoint.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/service-accounts/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ curl $FIAT/authorize/myApp-svc-account\n```\n\n----------------------------------------\n\nTITLE: Configuring Active Directory in Halyard\nDESCRIPTION: Commands to enable and configure Active Directory LDAP authentication using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/ldap/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn ldap enable\nhal config security authn ldap edit \\\n  --manager-dn 'CN=blah,OU=blah,OU=blah,O=blah' \\\n  --user-search-filter '(&(objectClass=user)(sAMAccountName={0}))' \\\n  --url ldaps://blah:686/searchbase\n## This one will prompt you for the password don't set it on the command\nhal config security authn ldap edit --manager-password\n```\n\n----------------------------------------\n\nTITLE: Adding and Configuring the RandomWait Plugin\nDESCRIPTION: Adds the RandomWait plugin to Halyard and configures it with a default maximum wait time. This snippet includes both the Halyard command and the resulting YAML configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/deploy-example.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal plugins add Armory.RandomWaitPlugin --version=1.1.14 \\\n   --enabled=true --extensions=armory.randomWaitStage\n```\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  extensibility:\n    plugins:\n      Armory.RandomWaitPlugin:\n        id: Armory.RandomWaitPlugin\n        enabled: true\n        version: 1.1.17\n        config:\n          defaultMaxWaitTime: 60\n    repositories:\n      examplePluginsRepo:\n        id: examplePluginsRepo\n        url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json\n```\n\n----------------------------------------\n\nTITLE: Registering Component Override in Plugin Initialization\nDESCRIPTION: JavaScript code to override an existing component in Spinnaker's UI using the plugin initialization method.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nimport { IDeckPlugin, overrideRegistrationQueue } from '@spinnaker/core';\nimport { InvisibleConfig } from './InvisibleConfig';\n\nexport const plugin: IDeckPlugin = {\n  initialize: () => {\n    overrideRegistrationQueue.register(InvisibleConfig, 'applicationConfigView')\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Google Cloud\nDESCRIPTION: Commands to authenticate gcloud CLI and set the default project\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud auth login\n\ngcloud config set project <PROJECT_NAME>\n```\n\n----------------------------------------\n\nTITLE: Adding GCR Account to Spinnaker\nDESCRIPTION: Adds a Google Container Registry account to Spinnaker using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/docker-registry.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider docker-registry account add my-docker-registry \\\n --address $ADDRESS \\\n --username _json_key \\\n --password-file $PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Caching Properties in Clouddriver (YAML)\nDESCRIPTION: This snippet shows how to adjust Redis caching properties in Clouddriver's configuration file. It allows setting the interval between caching agent runs and the timeout for rescheduling agents.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/caching/configure-redis-usage.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# How many seconds (default 30s) between runs of agent. Lowering this number\n# means the resources in the Spinnaker UI will be updated more frequently,\n# at the cost higher API/quota usage of your cloud provider.\nredis.poll.intervalSeconds:\n\n\n# How many seconds (default 300s, 5 minutes) Clouddriver will wait to reschedule\n# an agent that never completes (never throws an error or returns cache data).\n# If your agents are taking a long time to complete their cache cycles\n# successfully and Clouddriver is prematurely rescheduling them, you can try to\n# raise this number.\nredis.poll.timeoutSeconds:\n```\n\n----------------------------------------\n\nTITLE: Build Metadata API Endpoint Definition\nDESCRIPTION: Kotlin interface defining the igor API endpoint for retrieving artifact build metadata\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/integrate-your-CI/index.md#2025-04-09_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\n@GET(\"/ci/builds\")\n  @Headers(\"Accept: application/json\")\n  suspend fun getArtifactMetadata(\n    @Query(\"commitId\") commitId: String,\n    @Query(\"buildNumber\") buildNumber: String,\n    @Query(\"projectKey\") projectKey: String? = null,\n    @Query(\"repoSlug\") repoSlug: String? = null,\n    @Query(\"completionStatus\") completionStatus: String? = null\n  ): List<Build>?\n```\n\n----------------------------------------\n\nTITLE: Setting Up Username-Password Authentication\nDESCRIPTION: Command for configuring username-password authentication for Git repo artifacts\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gitrepo.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact gitrepo account add $ARTIFACT_ACCOUNT_NAME \\\n --username-password-file $PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Service Configuration for Traffic Management\nDESCRIPTION: YAML configuration for a Kubernetes Service with specific selector for traffic management\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/traffic-management/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\napiVersion: v1\nmetadata:\n  name: my-service\nspec:\n  selector:\n    frontedBy: my-service\n  ports:\n  - protocol: TCP\n    port: 80\n```\n\n----------------------------------------\n\nTITLE: Exporting Front50 Data Script\nDESCRIPTION: Shell script to export existing applications, pipelines, strategies, notifications and projects from Front50\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/front50-cassandra-to-obj-store.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/sh\n\nrm applications.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/v2/applications | json_pp > applications.json\n\nrm pipelines.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/pipelines | json_pp > pipelines.json\n\nrm strategies.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/strategies | json_pp > strategies.json\n\nrm notifications.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/notifications | json_pp > notifications.json\n\nrm projects.json\ncurl http://FRONT50_HOSTNAME:FRONT50_PORT/v2/projects | json_pp > projects.json\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Spinnaker Slack Channels\nDESCRIPTION: Structured table showing Slack channels and their descriptions, including links to specific channels and their purposes during the Gardening Days event.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/slack-map.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Slack Channel|Description|\n|-----|-----------------------|\n|[#gardening-general](https://spinnakerteam.slack.com/archives/CV4A90DPF)|General event chat|\n|[#gardening-ineedhelp](https://spinnakerteam.slack.com/archives/CURFZGL2E)|Event helpdesk|\n|#gardening-team-[projectString]|Team channels. projectString = repo name|\n|[#gardening-training](https://spinnakerteam.slack.com/archives/C011CAW95SP)|Training questions and discussion|\n|[#sig-documentation](https://spinnakerteam.slack.com/archives/CMPS49682)|Documentation SIG-hosted activities and chatter|\n|[#sig-kubernetes](https://spinnakerteam.slack.com/archives/C748G8U9J)|Kubernetes SIG-hosted chatter|\n|[#sig-ui](https://spinnakerteam.slack.com/archives/CH3FMKA3U)|UI SIG-hosted chatter|\n|[#sig-ci](https://spinnakerteam.slack.com/archives/CQJP8H05P)|CI SIG-hosted chatter|\n```\n\n----------------------------------------\n\nTITLE: Halyard Configuration Commands for X.509\nDESCRIPTION: Halyard commands to configure role OID, SSL client authentication, and enable X.509 authentication in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/x509/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn x509 edit --role-oid 1.2.840.10070.8.1\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config security api ssl edit --client-auth\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn x509 enable\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn x509 edit --subject-principal-regex \"EMAILADDRESS=(.*?)(?:,|$)\"\n```\n\n----------------------------------------\n\nTITLE: Updating Halyard Version for Release Candidate Testing\nDESCRIPTION: Shell commands for release managers to share with the community for testing the new release candidate. It updates the Halyard config to use the latest unvalidated version from the release branch.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-manager-runbook/index.md#2025-04-09_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhal config version edit --version ${RELEASE_BRANCH}-latest-unvalidated\n```\n\n----------------------------------------\n\nTITLE: Local Preview with Docker\nDESCRIPTION: Commands to build and run a Docker container for previewing documentation changes locally.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/docs/local-clone.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build --tag spinnaker/spinnaker.github.io-test .\ndocker run -it --rm --mount \"type=bind,source=$(pwd),target=/code\" \\\n    -p 4000:4000 spinnaker/spinnaker.github.io-test --incremental\n```\n\n----------------------------------------\n\nTITLE: Configuring Minio Access Key in Environment File\nDESCRIPTION: Configuration for Minio object storage credentials in a secrets environment file. Minio is used by Spinnaker to store application and pipeline configurations.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_12\n\nLANGUAGE: config\nCODE:\n```\n#-------------------------------------------------------------------------------------------\n# Key-value pairs for secrets to store in Kubernetes.\n#\n# Reference secrets in spinnaker config files like this (not all fields support secrets):\n# encrypted:k8s!n:spin-secrets!k:<secret key>\n#-------------------------------------------------------------------------------------------\n\nminioAccessKey=somerandomstringlongerthaneightcharacters\n# More secrets defined below this line.\n```\n\n----------------------------------------\n\nTITLE: Installing IntelliJ IDEA on Mac\nDESCRIPTION: Command for installing IntelliJ Community Edition on macOS using Homebrew.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbrew cask install intellij-idea-ce\n```\n\n----------------------------------------\n\nTITLE: Implementing Node Selectors for Kubernetes Deployments in Spinnaker\nDESCRIPTION: This configuration shows how to set nodeSelector values in Spinnaker's Kubernetes Pod specifications. Node selectors allow you to constrain which nodes your Spinnaker pods will be scheduled on based on labels on the nodes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  deploymentEnvironment:\n    nodeSelectors:\n      exampleNodeKey: exampleNodeValue\n```\n\n----------------------------------------\n\nTITLE: Parameterizing Non-String Values in Kubernetes Manifest YAML\nDESCRIPTION: This example demonstrates how to parameterize a non-string value, specifically the replica count, in a Kubernetes manifest. It uses the #toInt() function to convert the parameter to an integer.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/parameterize-manifests/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# ... other keys\nspec:\n  replicas: '${ #toInt( parameters.replicas ) }'\n# other keys ...\n```\n\n----------------------------------------\n\nTITLE: Defining Bound Kubernetes Deployment Manifest in YAML\nDESCRIPTION: This YAML snippet shows the Kubernetes Deployment manifest after Spinnaker has bound the artifacts. The Docker image and ConfigMap references have been updated with the specific versions from the execution context.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/in-kubernetes-v2/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - image: gcr.io/my-images/nginx@sha256:0cce25b9a55    # bound by spinnaker\n          name: nginx\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - mountPath: /opt/config\n              name: my-config-map\n      volumes:\n        - configMap:\n            name: configmap-v001                              # bound by spinnaker\n          name: my-config-map\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload with Constraints in JSON\nDESCRIPTION: This JSON payload example meets the specified constraints for a webhook trigger. It includes the required 'foo' and 'bing' keys with matching values.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/webhooks/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"foo\": \"bar\",\n  \"bing\": \"boooop\",\n  \"x\": [\"1\", \"2\", \"3\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Notice Tag Creation\nDESCRIPTION: Example of creating a notice tag for a server group using the Spinnaker API.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/tagging/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X \"POST\" \"http://gate/tags?entityId=spintest-v003&entityType=servergroup&account=test&region=us-west-2&cloudProvider=aws&application=app\" \\\n     -H \"Content-Type: application/json\" \\\n     -d $'[\n  {\n    \"name\": \"spinnaker_ui_notice:my_favorite_notice\",\n    \"namespace\": \"my_namespace\",\n    \"value\": {\n      \"message\": \"This is an example notice!\",\n      \"type\": \"notice\"\n    },\n    \"valueType\": \"object\"\n  }\n]'\n```\n\n----------------------------------------\n\nTITLE: Creating a New Git Branch for Deployment\nDESCRIPTION: These Bash commands create a new Git branch with a version tag and push it to the remote repository, triggering the deployment pipeline in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/dcos-source-to-prod/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nNEW_VERSION=v1.0.0\n git checkout -b $NEW_VERSION\n git push origin $NEW_VERSION\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker for Google Cloud Build (pre-1.14 version)\nDESCRIPTION: Halyard commands to set up Google Cloud Build integration for Spinnaker versions prior to 1.14, using direct Pub/Sub subscription.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/gcb.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config pubsub google subscription add $PUBSUB_SUBSCRIPTION_NAME \\\n  --project $PROJECT_ID \\\n  --subscription-name $SUBSCRIPTION_NAME \\\n  --message-format GCB\n\nhal config pubsub google enable\n\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Extension Configuration for Role-Based Certificates\nDESCRIPTION: Extension configuration file defining role information to be included when signing the certificate.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/x509/index.md#2025-04-09_snippet_3\n\nLANGUAGE: conf\nCODE:\n```\n[ v3_req ]\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\n1.2.840.10070.8.1 = ASN1:UTF8String:spinnaker-example0\\nspinnaker-example1\n```\n\n----------------------------------------\n\nTITLE: Setting GCS as Storage Type\nDESCRIPTION: Final command to set GCS as the storage type for Spinnaker configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/gcs.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage edit --type gcs\n```\n\n----------------------------------------\n\nTITLE: Setting Spinnaker Version to Latest Unvalidated Build (Bash)\nDESCRIPTION: This command updates the Halyard configuration to use the latest unvalidated nightly build of Spinnaker. This is not recommended for production use as these builds may not have passed all integration tests.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/releasing/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version master-latest-unvalidated\n```\n\n----------------------------------------\n\nTITLE: Deploying Spinnaker with Halyard\nDESCRIPTION: Command to apply the Spinnaker deployment configuration and initiate the installation process.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/deploy.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Defining Page Layout in Jekyll Front Matter\nDESCRIPTION: Jekyll front matter written in YAML that defines the page's layout configuration. It specifies a single layout, sets the page title to 'All Editions', and configures the sidebar navigation to use the 'news' navigation item.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/news/editions.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"All Editions\"\nsidebar:\n  nav: news\n---\n```\n\n----------------------------------------\n\nTITLE: Enabling App Engine Admin API\nDESCRIPTION: Command to enable the App Engine Admin API for the project\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/appengine.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngcloud services enable appengine.googleapis.com\n```\n\n----------------------------------------\n\nTITLE: Defining Execution Context Artifacts in JSON\nDESCRIPTION: This JSON snippet shows the structure of artifacts in the execution context, including a Docker image and a Kubernetes ConfigMap. These artifacts will be used for binding in the deployment manifest.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/in-kubernetes-v2/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"docker/image\",\n    \"name\": \"gcr.io/my-images/nginx\",\n    \"reference\": \"gcr.io/my-images/nginx@sha256:0cce25b9a55\"\n  },\n  {\n    \"type\": \"kubernetes/configMap\",\n    \"name\": \"configmap\",\n    \"version\": \"v001\",\n    \"location\": \"default\",\n    \"reference\": \"configmap-v001\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate Components with OpenSSL\nDESCRIPTION: Series of OpenSSL commands to create client keys, certificate signing requests, and signed certificates for client authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/x509/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl genrsa -des3 -out client.key 4096\n```\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -new -key client.key -out client.csr\n```\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 -req -days 365 -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.crt\n```\n\nLANGUAGE: bash\nCODE:\n```\nopenssl pkcs12 -export -clcerts -in client.crt -inkey client.key -out client.p12\n```\n\n----------------------------------------\n\nTITLE: Spinnaker System Dependencies Diagram\nDESCRIPTION: A mermaid diagram showing the dependencies between Spinnaker microservices. It illustrates how components like Deck, Gate, Orca, and other services interact with each other. External components are shown in green and Halyard components in gold.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/index.md#2025-04-09_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TB\n\ndeck(Deck) --> gate;\napi(Custom Script/API Caller) --> gate(Gate);\ngate --> kayenta(Kayenta);\ngate --> orca(Orca);\ngate --> clouddriver(Clouddriver);\norca --> clouddriver;\ngate --> rosco(Rosco);\norca --> front50;\norca --> rosco;\ngate --> front50(Front50);\ngate --> fiat(Fiat);\norca --> kayenta;\nclouddriver --> fiat;\norca --> fiat;\nfront50 --> fiat;\necho(Echo) --> orca;\necho --> front50;\ngate --> echo;\ngate --> igor(Igor);\nigor(Igor) --> echo;\n\nkeel(Keel) --> clouddriver;\nkeel --> orca;\nkeel --> front50;\nkeel --> fiat;\nkeel --> echo;\nkeel --> igor;\ngate --> keel;\n\nhal(Halyard CLI) --> halyard(Halyard Daemon);\n\nclassDef default fill:#d8e8ec,stroke:#39546a;\nlinkStyle default stroke:#39546a,stroke-width:1px,fill:none;\n\nclassDef halStyle fill:#eebb3c,stroke:#39546a;\nclass halyard,hal halStyle;\n\nclassDef external fill:#c0d89d,stroke:#39546a;\nclass deck,api external;\n```\n\n----------------------------------------\n\nTITLE: Configuring Datadog Metrics Store with Halyard\nDESCRIPTION: Commands to enable and configure Datadog metrics store using Halyard, including setting up API and App keys.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/datadog.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config metric-stores datadog enable\nhal config metric-stores datadog edit --api-key <API_KEY>\nhal config metric-stores datadog edit --app-key <APP_KEY>\n```\n\n----------------------------------------\n\nTITLE: Building Plugin Distribution Package\nDESCRIPTION: Gradle command to create a distribution package for the Spinnaker plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew releaseBundle\n```\n\n----------------------------------------\n\nTITLE: Including Table of Contents Liquid Tag\nDESCRIPTION: Jekyll/Liquid template tag to include a table of contents in the documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication with Halyard in Spinnaker\nDESCRIPTION: This bash script demonstrates how to use Halyard to configure LDAP authentication for Spinnaker. It sets up the LDAP URL, manager credentials, user DN pattern, group search base, filter, and role attributes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authorization/ldap/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authz ldap edit \\\n    --url ldaps://ldap.mydomain.net:636/dc=mydomain,dc=net \\\n    --manager-dn uid=admin,ou=system \\\n    --manager-password \\\n    --user-dn-pattern uid={0},ou=users \\\n    --group-search-base ou=groups \\\n    --group-search-filter \"(uniqueMember={0})\" \\\n    --group-role-attributes cn\n      \n hal config security authz edit --type ldap\n hal config security authz enable\n```\n\n----------------------------------------\n\nTITLE: GCloud SSH Connection Command for Jenkins VM\nDESCRIPTION: Command to SSH into the Jenkins VM with port forwarding for test-jenkins instance access. Requires membership in jenkins-debuggers@spinnaker.io group.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/nightly-builds/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute ssh --project spinnaker-community jenkins-transfer --zone us-central1-f --ssh-flag \"-L 4040:test-jenkins:8080\"\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: These HTML script tags load GitHub Gist content containing changelog information for different versions of Spinnaker 1.26. Each script tag corresponds to a specific patch version, from 1.26.0 to 1.26.6.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.6.md\"></script>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.5.md\"></script>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.4.md\"></script>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.3.md\"></script>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md\"></script>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md\"></script>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Starting Kubernetes Proxy Connection\nDESCRIPTION: Command to start a kubectl proxy connection to the staging context for accessing the sample service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl proxy --context $STAGING_CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub OAuth for Spinnaker via CLI\nDESCRIPTION: These Bash commands use the Halyard CLI to enable GitHub OAuth 2.0 authentication for Spinnaker. The commands set the OAuth provider as GitHub and configure the client ID and secret obtained from GitHub.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/github/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn oauth2 edit --provider github \\\n  --client-id (client ID from above) \\\n  --client-secret (client secret from above)\n\nhal config security authn oauth2 enable\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Integration for Canary Analysis\nDESCRIPTION: Commands to enable, disable, and manage Prometheus integration for canary analysis metrics. Includes account configuration with base URL settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/canary/index.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus enable\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus disable\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus account add ACCOUNT --base-url\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus account edit ACCOUNT --base-url\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus account delete ACCOUNT\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus account get ACCOUNT\n```\n\nLANGUAGE: bash\nCODE:\n```\nhal config canary prometheus account list\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Deployment Manifest in YAML\nDESCRIPTION: This YAML snippet defines a Kubernetes Deployment manifest with potential artifact bindings for Docker image and ConfigMap. It demonstrates where Spinnaker might inject artifact references.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/in-kubernetes-v2/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - image: gcr.io/my-images/nginx # possible artifact\n          name: nginx\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - mountPath: /opt/config\n              name: my-config-map\n      volumes:\n        - configMap:\n            name: configmap             # possible artifact\n          name: my-config-map\n```\n\n----------------------------------------\n\nTITLE: Installing Halyard\nDESCRIPTION: Commands to download and install Halyard on the host VM\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh\n\nsudo bash InstallHalyard.sh\n\n. ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Generating Supporting Services Build Status List\nDESCRIPTION: This Liquid template generates a list of build status badges for supporting Spinnaker services, linking to their respective GitHub Actions workflows.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/build-statuses/index.md#2025-04-09_snippet_3\n\nLANGUAGE: liquid\nCODE:\n```\n{% for svc in page.services.supporting %}\n  {% capture altTxt %}{{ svc | capitalize }} Build Status{% endcapture %}\n  {% capture githubStatusImg %}https://github.com/spinnaker/{{svc}}/workflows/Branch%20Build/badge.svg{% endcapture %}\n  {% capture githubLink %}https://github.com/spinnaker/{{svc}}/actions?query=workflow%3A%22Branch+Build%22+branch%3Amaster{% endcapture %}\n\n  * {{svc | capitalize }} [![{{altTxt}}]({{githubStatusImg}}){:style=\"height: 25px\"}]({{githubLink}}){:target=\"\\_blank\"}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Setting VM Password Alternative\nDESCRIPTION: Alternative command for setting VM password instead of SSH key in Key Vault\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/azure.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\naz keyvault secret set --name VMPassword --vault-name $VAULT_NAME --value <Insert default password>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Scripts for Spinnaker Changelogs\nDESCRIPTION: A series of script tags that load GitHub gist content containing changelog information for different versions of Spinnaker 1.26. Each script loads a separate markdown file for versions 1.26.0 through 1.26.4.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring X.509 Authentication for Spin CLI\nDESCRIPTION: YAML configuration for using X.509 certificate authentication with Spin CLI. This shows two different ways to configure X.509 authentication - either by providing paths to certificate files or by embedding the certificate content directly.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/spin/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nauth:\n  enabled: true\n  x509:\n    certPath: <cert file path>\n    keyPath: <key file path>\n```\n\nLANGUAGE: yaml\nCODE:\n```\nauth:\n  enabled: true\n  x509:\n    # Pipes for multi-line strings in yaml.\n    # Cert and key contents are 64 encoded pem values.\n    cert: |\n    <cert>\n    key: |\n    <key>\n```\n\n----------------------------------------\n\nTITLE: Enabling Spinnaker Statistics Collection\nDESCRIPTION: Command to enable telemetry data collection in Spinnaker. This requires redeployment after execution.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/stats/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config stats enable\n```\n\n----------------------------------------\n\nTITLE: Editing Kubernetes Service to Expose Spinnaker Gate\nDESCRIPTION: Command to edit the Spinnaker Gate service in Kubernetes to expose it via NodePort for webhook access.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit svc spin-gate -n spinnaker --context $STAGING_CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes service account\nDESCRIPTION: Applies the spinnaker-service-account configuration to the Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f ./spinnaker-service-account.yaml\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script for Spinnaker v1.26.1 Changelog\nDESCRIPTION: Script tag that embeds the GitHub Gist containing changelog details for Spinnaker version 1.26.1\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.3-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Including Plugin Modules in Gradle Build\nDESCRIPTION: Gradle configuration to include a frontend plugin module in the main build.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_12\n\nLANGUAGE: gradle\nCODE:\n```\n// file: my-plugin/settings.gradle\n\n// other configuration ...\n\ninclude \"my-plugin-deck\"\n\n// other configuration ...\n```\n\n----------------------------------------\n\nTITLE: Updating Spinnaker Dependencies Version\nDESCRIPTION: Gradle configuration to update the spinnaker-dependencies version in a component's build file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/kork-library.md#2025-04-09_snippet_4\n\nLANGUAGE: groovy\nCODE:\n```\nspinnaker {\n  dependenciesVersion = \"0.34.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: SSH Port Forwarding for Dashboard Installation\nDESCRIPTION: Command to establish SSH connection with port forwarding for dashboard installation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/datadog.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nssh <host> -L 9090:localhost:9090 -L 3000:localhost:3000\n```\n\n----------------------------------------\n\nTITLE: Configuring Trust Relationship for spinnakerManaged Role\nDESCRIPTION: JSON policy to establish trust relationship between spinnakerManaged role and spinnakerManaging user.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ec2.md#2025-04-09_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": [\n          \"arn:aws:iam::100000000001:user/spinnakerManaging\"\n        ]\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Spinnaker Users Grid in HTML\nDESCRIPTION: This HTML snippet creates a responsive grid layout to display logos of companies using Spinnaker. It uses a series of nested div elements with specific classes for styling and includes a custom Spinnaker-specific include statement for each user.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/index.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"clearfix mb4\">\n  <div class=\"clearfix flex items-center mb3\">\n    {% include spinnaker_user id=\"adevinta_user\" %}\n    {% include spinnaker_user id=\"airbnb_user\" %}\n    {% include spinnaker_user id=\"alto_user\" %}\n\n  </div>\n  <div class=\"clearfix flex items-center mb3\">\n    {% include spinnaker_user id=\"armory_user\" %}\n    {% include spinnaker_user id=\"avast_user\" %}\n    {% include spinnaker_user id=\"box_user\" %}\n\n  </div>\n  <!-- Additional rows omitted for brevity -->\n  <div class=\"clearfix flex items-center mb3\">\n    {% include spinnaker_user id=\"xiaohongshu_user\" %}\n\n  </div>\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Example of Modified Security Group Moniker in Spinnaker\nDESCRIPTION: This YAML snippet provides a concrete example of a modified moniker section for a security group resource, using 'keeldemo' as the application name and 'md' as the stack.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/managed-delivery/getting-started/index.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n...\n    moniker:\n      app: keeldemo\n      stack: md\n...\n```\n\n----------------------------------------\n\nTITLE: Embedding Gist Script for Spinnaker Version 1.25.2 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist script that displays the changelog for Spinnaker version 1.25.2. It uses the Gist ID and specifies the file name to be displayed.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Enabling Email Notifications in Deck Settings\nDESCRIPTION: JavaScript configuration to enable email notifications in Spinnaker's deck UI settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/notifications/index.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.spinnakerSettings = window.spinnakerSettings || {};\nwindow.spinnakerSettings.notifications = window.spinnakerSettings.notifications || {};\nwindow.spinnakerSettings.notifications.email = window.spinnakerSettings.notifications.email || {};\nwindow.spinnakerSettings.notifications.email.enabled = true;\n```\n\n----------------------------------------\n\nTITLE: Opening SSH Tunnel to Spinnaker Instance\nDESCRIPTION: gcloud command to SSH into the Spinnaker instance and set up port forwarding for accessing Spinnaker UI and APIs.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/gce-source-to-prod/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute ssh $INSTANCE_NAME \\\n    --project $MY_PROJECT \\\n    --zone $ZONE \\\n    --ssh-flag=\"-L 8084:localhost:8084\" \\\n    --ssh-flag=\"-L 9000:localhost:9000\" \\\n    --ssh-flag=\"-L 5656:localhost:5656\"\n```\n\n----------------------------------------\n\nTITLE: Cloning Spinnaker Documentation Repository\nDESCRIPTION: Command to clone a forked version of the Spinnaker documentation repository to local machine.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/docs/local-clone.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:<github-username>/spinnaker.github.io.git\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.25.0 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.1-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Forking and Cloning the Repository\nDESCRIPTION: Commands to set up the GitHub username as an environment variable and clone the forked Spinnaker.io repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/README.md#2025-04-09_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nGITHUB_USER=$USER # or something else here\ngit clone https://github.com/$GITHUB_USER/spinnaker.github.io.git\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Load Balancer Service Manifest\nDESCRIPTION: YAML manifest for creating a Kubernetes Service of type LoadBalancer with Oracle-specific annotations to set the load balancer shape to 400Mbps.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oracle-kubernetes-source-to-prod/index.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\napiVersion: v1\nmetadata:\n  name: codelaboke-test-lb\n  annotations:\n    service.beta.kubernetes.io/oci-load-balancer-shape: 400Mbps\nspec:\n  type: LoadBalancer\n  selector:\n    load-balancer-codelaboke-test-lb: 'true'\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 8080\n```\n\n----------------------------------------\n\nTITLE: Marking Deprecated APIs in Extension Points\nDESCRIPTION: Use @Deprecated and @DeprecationInfo annotations to provide structured information about deprecated APIs in the extension points.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@Deprecated\n```\n\nLANGUAGE: java\nCODE:\n```\n@DeprecationInfo\n```\n\n----------------------------------------\n\nTITLE: Configuring Distributed Kubernetes Deployment\nDESCRIPTION: Command to configure Halyard for distributed deployment to Kubernetes using a specified account name.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/environment.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit --type distributed --account-name $ACCOUNT\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Spin CLI Guide\nDESCRIPTION: YAML configuration block that defines the page layout and navigation settings for the Spin CLI documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"`spin` CLI Guide\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Halyard Host VM\nDESCRIPTION: Commands to create a VM instance for hosting Halyard with necessary configurations\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nHALYARD_HOST=$(echo $USER-halyard-`date +%m%d` | tr '_.' '-')\n\ngcloud compute instances create $HALYARD_HOST \\\n    --project=$GCP_PROJECT \\\n    --zone=us-central1-f \\\n    --scopes=cloud-platform \\\n    --service-account=$HALYARD_SA_EMAIL \\\n    --image-project=ubuntu-os-cloud \\\n    --image-family=ubuntu-1404-lts \\\n    --machine-type=n1-standard-4\n```\n\n----------------------------------------\n\nTITLE: SSH Connection to Compute Instance\nDESCRIPTION: Command to establish an SSH connection to the Oracle Cloud compute instance hosting Spinnaker using the instance's public IP address.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oracle-kubernetes-source-to-prod/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nssh ubuntu@IP\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script in HTML\nDESCRIPTION: Script tag that embeds a GitHub Gist containing the changelog content for Spinnaker version 1.25.0\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Setting Slack API Base URL in Gate (YAML)\nDESCRIPTION: Configure the base URL for the Slack API in Gate's configuration. This URL is used for making API calls to Slack.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/slack-support/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nslack:\n  baseUrl: https://slack.com/api\n```\n\n----------------------------------------\n\nTITLE: Configuring Persistent Storage for Spinnaker in YAML\nDESCRIPTION: YAML configuration snippet for setting up persistent storage (S3) for Spinnaker's Front50 service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/dev-environment.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n...\nspinnakerConfig:\n  config:\n    persistentStorage:\n      persistentStoreType: s3\n      s3:\n        bucket: mybucket\n        rootFolder: front50\n    version: 2.18.0\n...\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Environment Script Execution for Azure VM\nDESCRIPTION: Custom script execution command for setting up environment variables on Azure VM deployment. Used in the advanced settings of production deployment configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/azure-vmss-source-to-prod/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo bash ./setcustomenv.sh\n```\n\n----------------------------------------\n\nTITLE: Building Deck with Yarn\nDESCRIPTION: Yarn command for building Deck, Spinnaker's UI, from the command line.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncd deck\nyarn\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.22.0 Changelog Gist\nDESCRIPTION: Embeds GitHub gist containing changelog for Spinnaker version 1.22.0 using script tag\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.4-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Account Variables\nDESCRIPTION: Setting environment variables for the Spinnaker App Engine service account name and credentials file location.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-appengine/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nSERVICE_ACCOUNT_NAME=spinnaker-appengine-account\nSERVICE_ACCOUNT_DEST=~/.gcp/appengine-account.json\n```\n\n----------------------------------------\n\nTITLE: Declaring Null Safety in API Module\nDESCRIPTION: Use package-info.java to declare @NonnullByDefault for the entire package and explicitly set @Nullable where properties, methods, or return types are nullable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@NonnullByDefault\n```\n\nLANGUAGE: java\nCODE:\n```\n@Nullable\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Debian Installation\nDESCRIPTION: Command to configure Halyard for local Debian package installation type.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/environment.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit --type localdebian\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Spinnaker Documentation\nDESCRIPTION: YAML frontmatter configuration for the documentation page that defines the layout, title and navigation sidebar settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/artifactory/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Triggering pipelines with Artifactory\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Deployment Manifest - YAML\nDESCRIPTION: Example Kubernetes deployment manifest showing potential artifact binding points for Docker images and ConfigMaps.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/in-kubernetes-v2/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - image: gcr.io/my-images/nginx # possible artifact\n          name: nginx\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - mountPath: /opt/config\n              name: my-config-map\n      volumes:\n        - configMap:\n            name: configmap             # possible artifact\n          name: my-config-map\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.21.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.21.3-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Defining a Kubernetes Deployment Artifact in JSON for Spinnaker\nDESCRIPTION: This JSON example shows how to define a Kubernetes Deployment artifact in Spinnaker. It includes the essential fields: type (indicating it's a Kubernetes deployment), reference and name (both set to 'frontend'), namespace (set to 'staging'), and the Spinnaker account used for deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/kubernetes-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"kubernetes/deployment\",\n  \"reference\": \"frontend\",\n  \"name\": \"frontend\",\n  \"namespace\": \"staging\",\n  \"artifactAccount\": \"gke-us-central1-xnat\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Storage in Halyard\nDESCRIPTION: Command to configure Redis as the storage type in Spinnaker using Halyard CLI. This setting enables Redis as the persistent storage backend for Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/redis.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage edit --type redis\n```\n\n----------------------------------------\n\nTITLE: Defining a Kubernetes Deployment Artifact in JSON for Spinnaker\nDESCRIPTION: This JSON example shows how to define a Kubernetes Deployment artifact in Spinnaker. It includes the essential fields: type (indicating it's a Kubernetes deployment), reference and name (both set to 'frontend'), namespace (set to 'staging'), and the Spinnaker account used for deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/kubernetes-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"kubernetes/deployment\",\n  \"reference\": \"frontend\",\n  \"name\": \"frontend\",\n  \"namespace\": \"staging\",\n  \"artifactAccount\": \"gke-us-central1-xnat\"\n}\n```\n\n----------------------------------------\n\nTITLE: Metric Tags Example Table\nDESCRIPTION: Example table showing typical metric tag combinations for controller.invocations metrics across different API calls\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/index.md#2025-04-09_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\naccount | controller | method | status | statusCode | success\n-----------|--------------|------------|----------|-----------------|-----\nmy-account | ClusterController | getForAccountAndNameAndType | 2xx | 200 | true\nmy-account | ClusterController | getForAccountAndNameAndType | 4xx | 404 | false\nmy-account | ClusterController | getForAccountAndNameAndType | 4xx | 400 | false\n                           | ApplicationsController | list | 2xx | 200 | true\n                           | ApplicationsController | get | 2xx | 200 | true\n                           | ApplicationsController | get | 4xx | 404 | false\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.21.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.21.1-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Firewall in Spinnaker\nDESCRIPTION: Instructions for creating and configuring a firewall in Spinnaker to allow incoming traffic on port 80. Includes steps for both AWS and GCP environments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/bake-and-deploy-pipeline/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Click **FIREWALLS**, then click the **+** button to create a firewall.\n2. Input <code>test</code> for the **Detail (optional)** field and\n<code>Test environment</code> for the **Description** field.\n3. If running on AWS\n  * Select **defaultvpc** as the **VPC** field\n  * Click **Add new Firewall Rule**.\n  * Click **default** on the **Firewall** dropdown.\n  * Change **Start Port** and **End Port** to <code>80</code>.\n4. If running on GCP\n  * Click **Add New Source CIDR** and use the default\n    <code>0.0.0.0/0</code> value for the **Source Range** field.\n  * Click **Add New Protocol and Port Range**. Use the default\n  <code>TCP</code> value for the **Protocol** field. Change **Start\n  Port** and **End Port** to <code>80</code>.\n5. Click the **Create** button.\n```\n\n----------------------------------------\n\nTITLE: Saving Canary Configurations in Spinnaker\nDESCRIPTION: Command used to create or update canary configurations by providing a JSON file. The same command can be used for both creating new canary configs and updating existing ones.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/canary-configs/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ spin canary canary-configs save --file <path to canary config json>\n```\n\n----------------------------------------\n\nTITLE: Setting Up GCP Project and Service Account Variables\nDESCRIPTION: These commands set up variables for the GCP project and service account JSON key path to be used in the Halyard configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/gce.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nPROJECT=$(gcloud config get-value project)\nSERVICE_ACCOUNT_DEST=# see Prerequisites section above\n```\n\n----------------------------------------\n\nTITLE: Creating Jackson Mixin for ResourceKind in Kotlin\nDESCRIPTION: Defines a ResourceKindMixin interface for custom serialization and deserialization of ResourceKind using Jackson.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_11\n\nLANGUAGE: kotlin\nCODE:\n```\n@JsonSerialize(using = ToStringSerializer::class)\n@JsonDeserialize(using = ResourceKindDeserializer::class)\ninterface ResourceKindMixin\n```\n\n----------------------------------------\n\nTITLE: Code Syncing with rsync\nDESCRIPTION: Command to sync local Spinnaker code changes to the EC2 development instance using rsync.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nrsync --progress -a -e \"ssh -i /path/to/my-key-pair.pem\" --exclude='*/build/' --exclude='*/.idea/' --exclude='*/out/' --exclude='*/.gradle/' ~/code/spinnaker/ ubuntu@$SPINNAKER_INSTANCE_DNS:/home/ubuntu/dev/spinnaker\n\n# Optional:\nssh ubuntu@$SPINNAKER_INSTANCE_DNS 'for i in ~/dev/spinnaker/*; do (cd $i && echo $i && git checkout master && git clean -fdx); done'\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP File Artifact in Spinnaker JSON\nDESCRIPTION: Example JSON configuration for defining an HTTP file artifact in Spinnaker. Specifies the artifact type, reference URL, and optional name identifier for later reference. Used in stages like Deploy Manifest that read configuration from text files.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/http-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"http/file\",\n  \"reference\": \"https://raw.githubusercontent.com/....\",\n  \"name\": \"My manifest stored in github\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Definition\nDESCRIPTION: Markdown link to the horizontal scaling documentation page using bullet point format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/scaling/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* [Horizontally Scale Spinnaker](/setup/productionize/scaling/horizontal-scaling/)\n```\n\n----------------------------------------\n\nTITLE: Enabling DC/OS Provider in Spinnaker\nDESCRIPTION: This command enables the DC/OS provider in Spinnaker using Halyard. This is the first step in configuring Spinnaker to deploy to DC/OS clusters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/dcos.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider dcos enable\n```\n\n----------------------------------------\n\nTITLE: Embedding Spinnaker Release Notes from GitHub Gist in HTML\nDESCRIPTION: A set of script tags that embed release notes for Spinnaker versions 1.20.0 through 1.20.5 from GitHub Gists. Each script references the same Gist ID but a different file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Setting Oracle as Storage Type\nDESCRIPTION: Command to set Oracle Object Storage as the primary storage type for Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/storage/oracle.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage edit --type oracle\n```\n\n----------------------------------------\n\nTITLE: Enabling Artifact Support in Spinnaker\nDESCRIPTION: This bash command enables support for the standard artifacts UI in Spinnaker versions prior to 1.20. It uses the Halyard command-line interface to modify the configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config features edit --artifacts-rewrite true\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP File Artifact in Spinnaker JSON\nDESCRIPTION: Example JSON configuration for defining an HTTP file artifact in Spinnaker. Specifies the artifact type, reference URL, and optional name identifier for later reference. Used in stages like Deploy Manifest that read configuration from text files.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/http-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"http/file\",\n  \"reference\": \"https://raw.githubusercontent.com/....\",\n  \"name\": \"My manifest stored in github\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Ruby 2.4.1 with rbenv\nDESCRIPTION: Commands to install Ruby 2.4.1 using rbenv and set it as the global Ruby version for the system.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/README.md#2025-04-09_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nrbenv install 2.4.1\nrbenv global 2.4.1\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.7 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.7 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Port-Forwarding Spinnaker Services with Fish Function\nDESCRIPTION: Fish function to port-forward all Spinnaker services from a Kubernetes cluster to the local machine.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/dev-environment.md#2025-04-09_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction pf-spinnaker\n  set -l services (string split , -- \\\n                  (kubectl get services -o json \\\n                    | jq -r '.items[] | [.metadata.name, .spec.ports[0].port] | @csv'))\n  set -l service_length (count $services)\n  set -l current_service 1\n  while test $current_service -lt $service_length\n    set -l service (string replace --all '\"' '' -- $services[$current_service])\n    set -l port $services[(math $current_service + 1)]\n    command kubectl port-forward \"service/$service\" $port &\n    set current_service (math \"$current_service+2\")\n  end\nend\nfunction kill-background\n  jobs | tail -n\"+1\" | awk -F\\  '{print $2}' | xargs -I\"{}\" kill \"{}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Jackson Module for ResourceKind Mixin in Kotlin\nDESCRIPTION: Sets up a Jackson Module to link the ResourceKind class with its mixin for serialization.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_12\n\nLANGUAGE: kotlin\nCODE:\n```\nobject KeelApiModule : SimpleModule(\"Keel API\") {\n  override fun setupModule(context: SetupContext) {\n    setMixInAnnotations<ResourceKind, ResourceKindMixin>()\n  }\n}\n\ninternal inline fun <reified TARGET, reified MIXIN> SetupContext.setMixInAnnotations() {\n  setMixInAnnotations(TARGET::class.java, MIXIN::class.java)\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Plugin Repository to Halyard\nDESCRIPTION: Adds the example plugin repository to Halyard configuration. This allows Halyard to find and download the plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/deploy-example.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal plugins repository add examplePluginsRepo \\\n  --url=https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json\n```\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  extensibility:\n    plugins: {}\n    repositories:\n      examplePluginsRepo:\n        id: examplePluginsRepo\n        url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json\n```\n\n----------------------------------------\n\nTITLE: Defining a GCS Object Artifact in JSON\nDESCRIPTION: A JSON representation of a GCS object artifact in Spinnaker. It specifies the type, reference path with version, name without version, and the version identifier. This format is used to reference objects stored in Google Cloud Storage buckets.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/gcs-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"gcs/object\",\n  \"reference\": \"gs://bucket/file.yml#1360383693620000\",\n  \"name\": \"gs://bucket/file.yml\",\n  \"version\": \"1360383693620000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script for Spinnaker v1.26.3 Changelog\nDESCRIPTION: Script tag that embeds the GitHub Gist containing changelog details for Spinnaker version 1.26.3\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Listing Spin Pipeline Template Commands\nDESCRIPTION: Displays the available commands for managing pipeline templates using the Spin CLI. It shows the main command structure and available subcommands for pipeline template management.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline-templates/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ spin pipeline-templates\n\nUsage:\n   pipeline-template [command]\n\nAliases:\n  pipeline-template, pipeline-templates, pt\n\nAvailable Commands:\n  delete      Delete the provided pipeline template\n  get         Get the pipeline template with the provided ID\n  list        List the pipeline templates for the provided scopes\n  plan        Plan the provided pipeline template config\n  save        Save the provided pipeline\n\nFlags:\n  -h, --help   help for pipeline-template\n\nGlobal Flags:\n      --config string          path to config file (default $HOME/.spin/config)\n      --gate-endpoint string   Gate (API server) endpoint (default http://localhost:8084)\n  -k, --insecure               ignore certificate errors\n      --no-color               disable color (default true)\n      --output string          configure output formatting\n  -q, --quiet                  squelch non-essential output\n\nUse \" pipeline-template [command] --help\" for more information about a command.\n```\n\n----------------------------------------\n\nTITLE: Accessing Progress Information in Webhook Response\nDESCRIPTION: Example of a JsonPath expression to extract detailed progress information from a webhook status response in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/stages/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\nbuildInfo.progress\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.10 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.10 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.10.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Verifying gcloud Installation and Authentication\nDESCRIPTION: This command checks if gcloud CLI is installed and authenticated properly by displaying information about the current configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/gce.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud info\n```\n\n----------------------------------------\n\nTITLE: Defining a GCS Object Artifact in JSON\nDESCRIPTION: A JSON representation of a GCS object artifact in Spinnaker. It specifies the type, reference path with version, name without version, and the version identifier. This format is used to reference objects stored in Google Cloud Storage buckets.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/gcs-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"gcs/object\",\n  \"reference\": \"gs://bucket/file.yml#1360383693620000\",\n  \"name\": \"gs://bucket/file.yml\",\n  \"version\": \"1360383693620000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Changelog Scripts for Spinnaker v1.19\nDESCRIPTION: A series of script tags that load changelog content from GitHub gists for different Spinnaker 1.19.x versions. Each script loads a markdown file containing the changelog details for a specific version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Example Commit Message with Auth Fix\nDESCRIPTION: Example of a commit message for fixing an authentication issue in Gate, showing proper formatting for bug fixes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/submitting.md#2025-04-09_snippet_2\n\nLANGUAGE: git\nCODE:\n```\nfix(authN): Fixed session authentication coherence.\n```\n\n----------------------------------------\n\nTITLE: Annotating a Kubernetes Pod to Add Custom Info Panel in Spinnaker\nDESCRIPTION: This snippet demonstrates how to add a 'Pod Info' section to Spinnaker's details panel for a Kubernetes pod. It uses an HTML annotation that includes a templated link to an internal logs service, where the pod name will be dynamically inserted.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/kubernetes-v2/annotations-ui/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate pod my-prod-pod-v000 \\\n  pod-info.details.html.spinnaker.io=\"<a href='https://internal-elk.net/{{ name }}'>Internal Logs Service</a>\"\n```\n\n----------------------------------------\n\nTITLE: Excluding Multiple Elements from Pipeline Template Inheritance in JSON\nDESCRIPTION: This JSON snippet shows how to exclude multiple elements from being inherited from a pipeline template. In this example, both triggers and notifications defined in the template will not be inherited by the pipeline instance.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/override.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"exclude\": [\"triggers\", \"notifications\"]\n```\n\n----------------------------------------\n\nTITLE: Executing Spinnaker Pipeline with Artifacts using Spin CLI\nDESCRIPTION: Command-line example showing how to execute a Spinnaker pipeline with the spin CLI, providing parameters file and artifacts file as arguments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline execute --application ${APPLICATION} --name ${PIPELINE} --parameter-file ${PARAMETER_FILE_PATH} --artifacts-file ${ARTIFACTS_FILE_PATH}\n```\n\n----------------------------------------\n\nTITLE: Enabling Google Cloud Provider in Halyard\nDESCRIPTION: This command enables the Google Cloud provider in Halyard configuration for Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/gce.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider google enable\n```\n\n----------------------------------------\n\nTITLE: Embedding Gist Script for Spinnaker Version 1.25.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist script that displays the changelog for Spinnaker version 1.25.1. It uses the same Gist ID as the previous snippet but specifies a different file name.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.2-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Ruby and deb-s3 for Package Repository\nDESCRIPTION: Commands to install Ruby, bundler, and the deb-s3 gem for creating a Debian package repository on Amazon S3 to store application packages.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install software-properties-common\nsudo apt-add-repository ppa:brightbox/ruby-ng\nsudo apt-get update\nsudo apt-get install build-essential ruby2.2 ruby2.2-dev zlib1g-dev liblzma-dev\nsudo gem install bundler\nsudo gem install deb-s3\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.5 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.5 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Applying Spinnaker Configuration Changes\nDESCRIPTION: Command to apply the current Halyard configuration to the Spinnaker deployment. This makes all configuration changes take effect in the running Spinnaker instance.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/cf.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Starting Jekyll Server for Local Preview\nDESCRIPTION: Command to start the Jekyll server in watch mode, which automatically rebuilds the site when files are changed.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/README.md#2025-04-09_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nbundle exec jekyll serve --watch\n```\n\n----------------------------------------\n\nTITLE: Defining an Embedded Base64 Artifact in JSON for Spinnaker\nDESCRIPTION: This JSON snippet demonstrates how to define an embedded base64 artifact in Spinnaker. It includes the required 'type' and 'reference' fields, as well as an optional 'name' field for human-readable identification.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/embedded-base64/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"embedded/base64\",\n  \"reference\": \"dmFsdWU6IDEKZm9vOiBiYXIK\",\n  \"name\": \"my-properties-file\"\n}\n```\n\n----------------------------------------\n\nTITLE: Jekyll Include Statement\nDESCRIPTION: Liquid template include statement for table of contents generation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.7 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.7 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.7.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Port Binding Exception Stack Trace\nDESCRIPTION: Example stack trace showing port binding errors when starting Spinnaker services\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_10\n\nLANGUAGE: java\nCODE:\n```\norg.apache.catalina.LifecycleException: Protocol handler start failed\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1008) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227) [tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:263) [spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:195) [spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:296) [spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162) [spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552) [spring-context-5.1.8.RELEASE.jar:5.1.8.RELEASE]\n    ...\nCaused by: java.net.BindException: Address already in use\n\tat sun.nio.ch.Net.bind0(Native Method) ~[na:1.8.0_222]\n\tat sun.nio.ch.Net.bind(Net.java:433) ~[na:1.8.0_222]\n\tat sun.nio.ch.Net.bind(Net.java:425) ~[na:1.8.0_222]\n\tat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[na:1.8.0_222]\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[na:1.8.0_222]\n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:230) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:213) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1124) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1210) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:585) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1005) ~[tomcat-embed-core-9.0.21.jar:9.0.21]\n\t... 17 common frames omitted\n```\n\n----------------------------------------\n\nTITLE: Template File with Tokens for Dynamic Instance Metadata in Spinnaker\nDESCRIPTION: Example template file using replacement tokens to dynamically inject deployment-specific information into provisioned instances. These tokens will be replaced with actual values during deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/user-data.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nCLOUD_ACCOUNT=\"%%account%%\"\nCLOUD_ACCOUNT_TYPE=\"%%accounttype%%\"\nCLOUD_ENVIRONMENT=\"%%env%%\"\nCLOUD_SERVER_GROUP=\"%%group%%\"\nCLOUD_CLUSTER=\"%%cluster%%\"\nCLOUD_STACK=\"%%stack%%\"\nCLOUD_DETAIL=\"%%detail%%\"\nCLOUD_REGION=\"%%region%%\"\n```\n\n----------------------------------------\n\nTITLE: Using Artifacts with Spin CLI in JavaScript\nDESCRIPTION: Example of providing multiple artifacts via a JSON file when executing a pipeline with the Spinnaker CLI. The file structure shows the required 'artifacts' array containing individual artifact definitions.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/index.md#2025-04-09_snippet_4\n\nLANGUAGE: js\nCODE:\n```\n{\n  \"artifacts\" : [\n    {\n      \"type\": \"s3/object\",\n      \"name\": \"s3://bucket/file.json\",\n      \"location\": \"us-east-1\"\n    },\n    {\n      \"type\": \"s3/object\",\n      \"name\": \"s3://bucket/file2.json\",\n      \"location\": \"us-east-1\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting GCS Artifact Account Variables\nDESCRIPTION: Defines environment variables needed for GCS artifact account configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gcs.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Same as in Prerequisites section above\nSERVICE_ACCOUNT_DEST=~/.gcp/gcs-artifacts-account.json\n\nARTIFACT_ACCOUNT_NAME=my-gcs-artifact-account\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist for Spinnaker 1.24.2 Release Notes\nDESCRIPTION: Script tag to embed GitHub Gist containing release notes for Spinnaker version 1.24.2\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Verifying Google Cloud SDK Installation\nDESCRIPTION: Command to verify gcloud CLI installation and authentication status\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/appengine.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud info\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Release Notes in HTML\nDESCRIPTION: A collection of script tags that embed GitHub Gists containing Spinnaker release notes for versions 1.17.0 through 1.17.4. Each script references a specific markdown file within the same Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Verifying GCloud Installation\nDESCRIPTION: Command to verify that Google Cloud SDK is installed and properly authenticated.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gcs.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud info\n```\n\n----------------------------------------\n\nTITLE: Creating Artifacts from GCR Notification Payload with Jinja Templates\nDESCRIPTION: This Jinja template transforms Google Container Registry (GCR) notification format into Spinnaker's expected artifact format. It splits the digest into name and version components to create a properly formatted Docker image artifact.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/in-pipelines/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    {% set split = digest.split(\"@\") %}\n    \"reference\": \"{{ digest }}\",\n    \"name\": \"{{ split[0] }}\",\n    \"version\": \"{{ split[1] }}\",\n    \"type\": \"docker/image\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: iCal Calendar URL for Spinnaker Releases\nDESCRIPTION: URL for subscribing to the Spinnaker release calendar using iCal format in calendar applications.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-cadence/index.md#2025-04-09_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://calendar.google.com/calendar/ical/spinnaker.io_p2n8segvlnel4cbo777em35b0c%40group.calendar.google.com/public/basic.ics\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.16.6 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.16.6. The gist is loaded via a script tag referencing the specific gist ID from the spinnaker-release GitHub account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/b200688131077600c458b07e0ae88052.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Migration Cluster in Orca\nDESCRIPTION: YAML configuration for setting up a dedicated migration cluster that handles data transfer from Redis to SQL. This config disables queue processing and enables migration pollers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/orca-redis-to-sql.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\nspring:\n  profiles: sqlmigration\n\npollers:\n  orchestrationMigrator:\n    enabled: true\n    intervalMs: 1800000\n  pipelineMigrator:\n    enabled: true\n    intervalMs: 1800000\n\nqueue:\n  redis:\n    enabled: false\n\nkeiko:\n  queue:\n    enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Clouddriver Read-only Endpoints in Gate\nDESCRIPTION: Configuration for Clouddriver read-only endpoints in gate.yml, including dynamic endpoint configuration for Deck UI requests.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/runbooks/sharding-spinnaker.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  clouddriver:\n    baseUrl: https://clouddriver-readonly.example.com\n    config:\n      dynamicEndpoints:\n        deck: https://clouddriver-readonly-deck.example.com\n```\n\n----------------------------------------\n\nTITLE: Exporting Properties for Spinnaker-supplied JAR Template\nDESCRIPTION: Example of exporting properties from a CI job to use Spinnaker's built-in JAR template for artifact extraction.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/from-build-triggers.md#2025-04-09_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmessageFormat=JAR\n```\n\n----------------------------------------\n\nTITLE: Creating Bitbucket Credentials File with Bash\nDESCRIPTION: Creates a credentials file containing the username and password for Bitbucket basic authentication in the format username:password.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/bitbucket.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho ${USERNAME}:${PASSWORD} > $USERNAME_PASSWORD_FILE\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.21.3 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.3 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.21.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Setting Kork Version in Component Dependencies\nDESCRIPTION: Gradle configuration to override the Kork library version in a component's dependency resolution strategy.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/kork-library.md#2025-04-09_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\neachDependency {\n  if (it.requested.group == 'com.netflix.spinnaker.kork') it.useVersion '0.1.0-SNAPSHOT'\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.17.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.3-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This HTML snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.14.7. The Gist is loaded asynchronously using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cf6b8a7290ba0d9277360e7a794e0b6b.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Setting S3 Configuration Variables in Bash\nDESCRIPTION: Defines the required environment variables for S3 artifact configuration including API endpoint, regions, and account name.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/s3.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nAPI_ENDPOINT=\nAPI_REGION=\nREGION=\nARTIFACT_ACCOUNT_NAME=my-s3-account\n```\n\n----------------------------------------\n\nTITLE: Starting Telepresence for Local Orca Development\nDESCRIPTION: Shell commands for using Telepresence to swap the Orca deployment in the cluster with a local version, enabling local development of the Orca service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\ncd <path-to-orca-clone>\nKUBECONFIG=~/.kube/garden.yaml telepresence --swap-deployment spin-orca --env-file .env-telepresence\n```\n\nLANGUAGE: shell\nCODE:\n```\nls $TELEPRESENCE_ROOT/opt/spinnaker/config\n```\n\nLANGUAGE: shell\nCODE:\n```\ncp -R $TELEPRESENCE_ROOT/opt/spinnaker/config/ ~/.spinnaker\n```\n\n----------------------------------------\n\nTITLE: Structuring Spinnaker Home Page Header in HTML\nDESCRIPTION: Creates the main header section for the Spinnaker home page, including the logo, navigation, and call-to-action buttons.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/index.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"spin_header\">\n  <img class=\"spin_header__swoosh\" src=\"{{ \"assets/images/top-right-swoosh.svg\" | absolute_url }}\" alt=\"Spinnaker Swoosh\"/>\n  <div class=\"spin_header__inner_wrap\">\n\n    {% include masthead.html %}\n\n    <div class=\"spin_header__text\">\n      <h1>Cloud Native Continuous Delivery</h1>\n      <h2>Fast, safe, repeatable deployments for every Enterprise</h2>\n    </div>\n    <ul class=\"spin_call_to_action\">\n      <li><a href=\"/concepts/\">HOW IT WORKS</a></li>\n      <li><a href=\"/setup/\">INSTALL SPINNAKER</a></li>\n      <li><a href=\"/guides/user/get-started/\">GET STARTED</a></li>\n      <li><a href=\"/concepts/ebook/\">READ OUR EBOOK</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.17.2 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog details for Spinnaker version 1.13.4. The gist ID references a specific changelog document.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/22a5edc5b2dcb0621b1cb06cbe84a548.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring ECS Naming Strategy in Spinnaker YAML\nDESCRIPTION: YAML configuration for specifying the naming strategy for ECS resources in Spinnaker. It demonstrates how to set a default strategy and override it for specific accounts.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/ecs.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\necs:\n  enabled: true\n  defaultNamingStrategy: \"default\"   <--- 'default' naming used by default (field absent) or if specified\n  accounts:\n    - name: \"ecs-moniker-acct\"\n      awsAccount: \"ec2-aws-acct\"\n      namingStrategy: \"tags\"         <--- 'tags' specified for specific account\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Jinja Template for JAR Artifact\nDESCRIPTION: Example of a custom Jinja template for creating a Maven/Ivy JAR file artifact in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/from-build-triggers.md#2025-04-09_snippet_4\n\nLANGUAGE: jinja\nCODE:\n```\n  {\n    \"reference\": \"{{ properties.group }}-{{ properties.artifact }}-{{ properties.version }}\",\n    \"name\": \"{{ properties.artifact }}-{{ properties.version }}\",\n    \"version\": \"{{ properties.version }}\",\n    \"type\": \"maven/file\"\n  }\n```\n\n----------------------------------------\n\nTITLE: Setting Current Deployment with Halyard CLI in Bash\nDESCRIPTION: Command to switch to or create a new deployment in Halyard. This allows managing multiple isolated Spinnaker instances by specifying the deployment name to be used.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config --set-current-deployment $DEPLOYMENT\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.20.2 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.4-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Jinja Template for Artifact Translation\nDESCRIPTION: Jinja template that transforms a GCS location into Spinnaker's artifact format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/pubsub/index.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"gcs/object\",\n    \"reference\": \"{{\"{{\"}}} location {{\"}}\"}}\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.12.14 Changelog in HTML\nDESCRIPTION: This HTML script tag embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.12.14. The Gist is hosted at GitHub under the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.14-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/22b764cd8b65fa7953b989b6b8373ce5.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Enabling S3 Artifact Provider in Halyard\nDESCRIPTION: Command to enable the S3 artifact provider in Spinnaker using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/s3.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact s3 enable\n```\n\n----------------------------------------\n\nTITLE: Jinja Template for Artifact Translation\nDESCRIPTION: Jinja template that transforms a GCS location into Spinnaker's artifact format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/pubsub/index.md#2025-04-09_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"gcs/object\",\n    \"reference\": \"{{\"{{\"}}} location {{\"}}\"}}\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.22.2 Changelog Gist\nDESCRIPTION: Embeds GitHub gist containing changelog for Spinnaker version 1.22.2 using script tag\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.4-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog entries for Spinnaker version 1.12.13. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.13-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/89e02b2d04aff5b5cab69c3963cbb157.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.22.1 Changelog Gist\nDESCRIPTION: Embeds GitHub gist containing changelog for Spinnaker version 1.22.1 using script tag\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.4-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Deployment Manifest for Tomcat\nDESCRIPTION: YAML manifest for deploying a Kubernetes Deployment with three replicas of Tomcat 8. The pods are labeled to be selected by the previously created load balancer service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oracle-kubernetes-source-to-prod/index.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: codelaboke-test-cluster\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      codelaboke-test-cluster: 'true'\n  template:\n    metadata:\n      labels:\n        codelaboke-test-cluster: 'true'\n        load-balancer-codelaboke-test-lb: 'true'\n    spec:\n      containers:\n        - image:  tomcat:8.0\n          name: tomcat8\n          ports:\n            - containerPort: 8080\n          readinessProbe:\n            httpGet:\n              path: /\n              port: 8080\n```\n\n----------------------------------------\n\nTITLE: Enabling Jenkins CI in Spinnaker Configuration (Bash)\nDESCRIPTION: This command enables Jenkins as a CI system in Spinnaker's Halyard configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/jenkins.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config ci jenkins enable\n```\n\n----------------------------------------\n\nTITLE: Manually Configuring Artifact Templates in igor-local.yml\nDESCRIPTION: YAML configuration for manually adding custom artifact templates to Spinnaker's igor-local.yml file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/from-build-triggers.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nartifacts:\n  templates:\n  - name: <name of template>\n    templatePath: <path to the template>\n```\n\n----------------------------------------\n\nTITLE: Referencing GCS Secrets in Spinnaker Configuration\nDESCRIPTION: These examples show how to reference secrets stored in GCS from Spinnaker configuration files. The first example references a secret value from a YAML file, while the second references an entire file stored in GCS.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/gcs-secrets.md#2025-04-09_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nencrypted:gcs!b:mybucket!f:spinnaker-secrets.yml!k:github.password\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nencryptedFile:gcs!b:mybucket!f:mykubeconfig\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Gist for Spinnaker 1.19.2\nDESCRIPTION: Embeds a GitHub gist containing the changelog for Spinnaker version 1.19.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: SSH into Halyard instance\nDESCRIPTION: Connects to the Halyard host via SSH with port forwarding for Spinnaker UI and API services.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute ssh $HALYARD_HOST \\\n  --project=$GCP_PROJECT \\\n  --ssh-flag=\"-L 9000:localhost:9000\" \\\n --ssh-flag=\"-L 8084:localhost:8084\"\n```\n\n----------------------------------------\n\nTITLE: Including External Gist Script in HTML\nDESCRIPTION: Embeds an external GitHub gist containing changelog details for Spinnaker version 1.12.3 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/349d826502e0bc0a3e4a7ec247b9e8b4.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Adding Oracle Object Storage Artifact Account in Halyard\nDESCRIPTION: Command to add an Oracle Object Storage artifact account to Spinnaker using Halyard CLI. This configures the necessary credentials including namespace, fingerprint, region, SSH private key, and OCIDs.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/oracle.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact oracle account add $ARTIFACT_ACCOUNT_NAME \\\n    --namespace $TENANCY_NAME \\\n    --fingerprint $API_KEY_FINGERPRINT \\\n    --region $REGION \\\n    --ssh-private-key-file-path $PRIVATE_KEY_FILE \\\n    --tenancy-id $TENANCY_OCID \\\n    --user-id $USER_OCID   \n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.13.10 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.13.10. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.10-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/3056119e8dd52f5d24041fdf0a42fe3e.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Liquid Template Include Statement\nDESCRIPTION: Liquid template syntax to include a table of contents in the documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/jenkins/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.25.2 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.4-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.12.2 Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog details for Spinnaker version 1.12.2. The Gist is referenced by ID 349d826502e0bc0a3e4a7ec247b9e8b4.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/349d826502e0bc0a3e4a7ec247b9e8b4.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Pod Labels for Load Balancer Traffic\nDESCRIPTION: These YAML snippets demonstrate how Spinnaker uses labels to enable and disable traffic to individual pods from Load Balancers. It shows examples for enabled, disabled, and multi-load balancer scenarios.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes.md#2025-04-09_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    load-balancer-${LOAD-BALANCER}: true\n    ... # other labels\n```\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    load-balancer-${LOAD-BALANCER}: false\n    ... # other labels\n```\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    load-balancer-${LOAD-BALANCER-1}: true\n    load-balancer-${LOAD-BALANCER-2}: true\n    load-balancer-${LOAD-BALANCER-3}: true\n    ... # other labels\n```\n\n----------------------------------------\n\nTITLE: Storing GitHub Credentials in S3 YAML File\nDESCRIPTION: This YAML snippet shows how to structure GitHub credentials in a file named 'spinnaker-secrets.yml' to be stored in an S3 bucket. It includes placeholders for the password and token.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/s3-secrets.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ngithub:\n  password: <PASSWORD>\n  token: <TOKEN>\n```\n\n----------------------------------------\n\nTITLE: Enabling Git Repo Artifacts in Halyard\nDESCRIPTION: Command to enable Git repository artifact support in Spinnaker using Halyard\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gitrepo.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact gitrepo enable\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.1 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.1 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker v1.5.3 in HTML\nDESCRIPTION: This HTML script tag embeds a GitHub Gist containing the changelog for Spinnaker version 1.5.3. The Gist is hosted on the spinnaker-release GitHub account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.5.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cdcbfd25eaa81464a4932cbb1f7c70e8.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.8.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.8.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/9b37ca56f2bfa676a60ecbd9a9ebffbd.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Username-Password Authentication Format\nDESCRIPTION: Format specification for username-password authentication file\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/gitrepo.md#2025-04-09_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n<username>:<password>\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Jenkins Trigger Documentation\nDESCRIPTION: YAML front matter defining the page layout, title and navigation sidebar for the Jenkins trigger documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/jenkins/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Triggering pipelines with Jenkins\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.5.2 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.5.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.5.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/a2c02795c6239cc04118fa62de46d2ef.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.16.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.16.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/30e40f6278a7c1a1450c179a9a4bb92e.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl and aws-iam-authenticator for Kubernetes management\nDESCRIPTION: This snippet installs kubectl for managing Kubernetes and aws-iam-authenticator for cluster authentication. It downloads the binaries, sets appropriate permissions, and adds them to the system PATH.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Download and install kubectl\n`curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nsudo mv ./kubectl /usr/local/bin/kubectl\n\n# Verify the installation of kubectl\nkubectl help\n\n# Download and install aws-iam-authenticator\ncurl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\nmkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH \necho 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc\n\n#Verify the installation of aws-iam-authenticator\naws-iam-authenticator help`\n```\n\n----------------------------------------\n\nTITLE: Setting Recreate Deployment Strategy for Spinnaker Services\nDESCRIPTION: This configuration shows how to set a Recreate deployment strategy for Spinnaker services in Kubernetes. This strategy terminates all existing pods before creating new ones, which can be useful when you cannot have multiple versions running simultaneously.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  deploymentStrategy:\n    type: recreate\n```\n\n----------------------------------------\n\nTITLE: Using Secret File Format in Spinnaker Configuration\nDESCRIPTION: The format for referencing secret files such as kubeconfig files in Spinnaker configurations. This allows secure storage of sensitive configuration files.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/index.md#2025-04-09_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nencryptedFile:<secret engine>!<key1>:<value1>!<key2>:<value2>!...\n```\n\n----------------------------------------\n\nTITLE: Applying Spinnaker Configuration Changes with Halyard\nDESCRIPTION: Command to apply Pub/Sub and artifact configuration changes in Spinnaker using Halyard CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/gcs/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: Embeds a GitHub gist containing the changelog details for Spinnaker version 1.15.6 using an external JavaScript reference.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.15.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/df4cad348c7f1a6ea6ced84c6fca70b7.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Deploying DevOps VM on Azure with Jenkins and Spinnaker\nDESCRIPTION: Command to deploy the 'Continuous Delivery to Kubernetes' Quickstart Template on Azure. Downloads and executes a setup script that configures Jenkins, Azure Container Registry, and Spinnaker for Kubernetes deployments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/azure-kubernetes-source-to-prod/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash <(curl -sL https://aka.ms/DeployDevOps)\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Changelog\nDESCRIPTION: Embeds an external GitHub Gist containing the changelog content using a script tag. The Gist ID references the specific changelog for Spinnaker version 1.2.2.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.2.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/84b75e3701652dfedb86e20b806cbc39.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Enabling Maven Artifact Provider in Spinnaker using Halyard\nDESCRIPTION: This command enables the Maven artifact provider in Spinnaker using the Halyard command-line interface.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/maven.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config artifact maven enable\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Script for Spinnaker v1.23.2\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog for Spinnaker version 1.23.2.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Getting Spinnaker Gate Service Information\nDESCRIPTION: Command to retrieve the NodePort information for the Spinnaker Gate service which will be used for webhook configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc spin-gate -n spinnaker --context $STAGING_CONTEXT\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.25.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.12.12. The Gist is loaded asynchronously using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.12-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/4a562df907add15f5188eb905fd1ed17.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Recommended Configuration Values Table\nDESCRIPTION: Markdown table showing recommended starting values for canary configuration parameters\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/canary/best-practices/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Setting | Value |\n|-|-----------||\n| canary lifetime | 3 hours |\n| successful score | 95 |\n| unhealthy score | 75 |\n| warmup period | 0 minutes|\n| frequency | 60 minutes |\n| use lookback | no |\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Pull Secrets for Kubernetes Pods in Spinnaker\nDESCRIPTION: This YAML snippet demonstrates how Spinnaker adds Image Pull Secrets to Kubernetes Pod definitions based on the Docker Registry accounts configured for the Kubernetes account being deployed to.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntemplate:\n  spec:\n    imagePullSecrets:\n      - name: ${DOCKER-REGISTRY}\n```\n\n----------------------------------------\n\nTITLE: Applying Configuration Changes to Spinnaker\nDESCRIPTION: Command to apply the configuration changes made to Spinnaker using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ hal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: Script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.14.14. The gist is loaded asynchronously using GitHub's gist embedding functionality.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.14-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/ad1e0eb6b6547b296c9103eb21d9beec.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Completing Spinnaker Installation\nDESCRIPTION: Commands to finalize the Spinnaker installation by setting the deployment type to localdebian, applying the configuration, and reloading the system daemon.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oracle-kubernetes-source-to-prod/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config deploy edit --type localdebian \nsudo hal deploy apply\nsudo systemctl daemon-reload\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub File Artifact in JSON for Spinnaker\nDESCRIPTION: This JSON snippet demonstrates how to define a GitHub file artifact in Spinnaker. It includes the required fields such as type, reference, name, and version, which are used to uniquely identify and retrieve a file from GitHub or GitHub Enterprise.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/github-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"github/file\",\n  \"reference\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/path/to/file.yml\",\n  \"name\": \"path/to/file.yml\",\n  \"version\": \"aec855f4e0e11\"\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying App Engine Application Background Color in Python\nDESCRIPTION: This code snippet shows how to change the background color of an App Engine application from red to blue in the main.py file. It's part of the pipeline trigger process to initiate a new deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nself.response.write('background-color: blue')\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.9.4. It uses a script tag with the source pointing to the gist URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.9.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/f206117b252a6d6b2d1f67a69bce8141.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker Deployment with Halyard\nDESCRIPTION: Commands to set the Spinnaker version and deployment type. This configures Spinnaker to deploy in a distributed manner to the staging Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version $(hal version latest -q)\n\nhal config deploy edit --type distributed --account-name staging-demo\n```\n\n----------------------------------------\n\nTITLE: Installing Spinnaker Monitoring Package on Debian\nDESCRIPTION: These commands update the package list and install the Spinnaker monitoring third-party package on a Debian-based system.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/prometheus.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update -y\nsudo apt-get install spinnaker-monitoring-third-party\n```\n\n----------------------------------------\n\nTITLE: Defining GitLab File Artifact in Pipeline JSON\nDESCRIPTION: Example JSON configuration for a GitLab file artifact in a Spinnaker pipeline definition. Shows the required fields including type, reference URL, file name, and version specification.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/gitlab-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"gitlab/file\",\n  \"reference\": \"https://gitlab.example.com/api/v4/projects/13083/repository/files/manifests%2Fconfig%2Eyaml/raw\",\n  \"name\": \"manifests/config.yaml\",\n  \"version\": \"master\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker for App Engine Deployment\nDESCRIPTION: This set of Halyard commands configures Spinnaker to deploy to App Engine, including setting up the provider, account, and storage settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version $(hal version latest -q)\n\nhal config provider appengine enable\n\nhal config provider appengine account add my-appengine-account --project $GCP-PROJECT-ID\n\nhal config storage gcs edit --project $GCP-PROJECT-ID\n\nhal config storage edit --type gcs\n```\n\n----------------------------------------\n\nTITLE: Creating Spinnaker Configuration Backup with Halyard\nDESCRIPTION: This command creates a tar file containing all linked local files and a modified halconfig file. The backup includes all secrets supplied to Halyard, so it should be kept secure.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/backups.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal backup create\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog content for Spinnaker version 1.14.4. It uses a script tag to load the Gist JavaScript file, which will render the changelog content on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e6e904fe6533b188d40fb82cad900ef0.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Creating ClusterRoleBinding for Spinnaker service account\nDESCRIPTION: Creates a ClusterRoleBinding to grant the Spinnaker service account edit permissions across the cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create clusterrolebinding \\\n  --user system:serviceaccount:default:spinnaker-service-account \\\n  spinnaker \\\n  --clusterrole edit\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist for Spinnaker 1.24.1 Release Notes\nDESCRIPTION: Script tag to embed GitHub Gist containing release notes for Spinnaker version 1.24.1\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.2-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Defining GitLab File Artifact in Pipeline JSON\nDESCRIPTION: Example JSON configuration for a GitLab file artifact in a Spinnaker pipeline definition. Shows the required fields including type, reference URL, file name, and version specification.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/gitlab-file/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"gitlab/file\",\n  \"reference\": \"https://gitlab.example.com/api/v4/projects/13083/repository/files/manifests%2Fconfig%2Eyaml/raw\",\n  \"name\": \"manifests/config.yaml\",\n  \"version\": \"master\"\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.22.1 Release Notes\nDESCRIPTION: HTML script tag to embed the GitHub gist containing changelog for Spinnaker version 1.22.1\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Spinnaker Project\nDESCRIPTION: Demonstrates how to delete a Spinnaker project by name using the spin CLI delete command.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/projects/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nspin project delete --name <project name>\n\nProject deleted\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.18.0 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.5-changelog.md#2025-04-09_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Naming Strategy for Kubernetes Manifests\nDESCRIPTION: Implementation of a NamingStrategy interface for custom naming of Kubernetes manifests in Spinnaker. This allows for custom logic in how Spinnaker moniker information is applied to and derived from Kubernetes resources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/crd-extensions.md#2025-04-09_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Component\npublic class MyManifestNamer implements NamingStrategy<KubernetesManifest> {\n  @Override\n  public String getName() {\n    return \"myManifestNamingStrategy\";\n  }\n\n  @Override\n  public void applyMoniker(KubernetesManifest manifest, Moniker moniker) {\n    // Strategy for applying a Spinnaker `Moniker` to a Kubernetes\n    // manifest prior to deployment.\n  }\n\n  @Override\n  public Moniker deriveMoniker(KubernetesManifest manifest) {\n    // Strategy for deriving a Spinnaker `Moniker` from a Kubernetes\n    // manifest.\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Configuration Variables\nDESCRIPTION: Definition of required variables for GitHub artifact account configuration including token file path and account name.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/artifacts/github.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# See the prerequisites section above\nTOKEN_FILE=\n\nARTIFACT_ACCOUNT_NAME=my-github-artifact-account\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Pushing Changes to Trigger Pipeline\nDESCRIPTION: These Git commands are used to commit and push changes to the 'release' branch, which can trigger the Spinnaker pipeline if configured with a webhook.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin release\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.12.7. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d888a8550835b5527abef90d8b72e760.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Applying Halyard configuration changes\nDESCRIPTION: Applies the configuration changes to deploy the updated Spinnaker setup with the new Kubernetes provider.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Defining a Docker Image Artifact in JSON Pipeline Definition\nDESCRIPTION: JSON representation of a Docker image artifact as it would appear in a Spinnaker pipeline definition. It includes type, reference, name, and version fields that define the Docker image to be used.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/docker-image/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"docker/image\",\n  \"reference\": \"gcr.io/project/my-image@sha256:28f82eba\",\n  \"name\": \"gcr.io/project/my-image\",\n  \"version\": \"sha256:28f82eba\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Single Spinnaker Project\nDESCRIPTION: Demonstrates how to retrieve detailed information about a specific project by name using the spin CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/projects/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nspin project get <project name>\n{\n\"config\": {\n \"applications\": [...],\n \"clusters\": [...],\n \"pipelineConfigs\": [...]\n  }\n...\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.8.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog or release notes for Spinnaker version 1.8.1. The gist is referenced by ID 7c2520843f0ceb3640c77ba1300d8083 and is loaded using GitHub's Gist JavaScript embed functionality.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/7c2520843f0ceb3640c77ba1300d8083.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for a specific Spinnaker version. It uses the script tag to load and display the Gist content directly on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Example GCS Object Artifact in JavaScript\nDESCRIPTION: Example of a Google Cloud Storage object artifact definition in Spinnaker, including type, reference, name, version and location fields.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/index.md#2025-04-09_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n// A GCS object\n{\n  \"type\": \"gcs/object\",\n  \"reference\": \"gs://bucket/file.json#135028134000\",\n  \"name\": \"gs://bucket/file.json\",\n  \"version\": \"135028134000\"\n  \"location\": \"us-central1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Git Workspace Commands for IntelliJ Project Repair\nDESCRIPTION: Commands to clean workspace and delete untracked files while preserving IntelliJ project files (.iml, .ipr, .iws). Includes a dry-run command for verification and the actual deletion command.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/getting-set-up.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clean -dnxf -e '*.iml' -e '*.ipr' -e '*.iws'\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit clean -dxf -e '*.iml' -e '*.ipr' -e '*.iws'\n```\n\n----------------------------------------\n\nTITLE: Bulk Cancellation of Zombie Executions (HTTP)\nDESCRIPTION: HTTP POST request to the Orca admin API for bulk cancellation of zombie executions. This command includes a 'minimumActivity' parameter to specify the threshold for considering an execution as a zombie. Use with caution to avoid false positives.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/runbooks/orca-zombie-executions.md#2025-04-09_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /admin/queue/zombies:kill?minimumActivity=PT1H\n```\n\n----------------------------------------\n\nTITLE: Resolving Plugin Dependencies with NPM\nDESCRIPTION: Commands to resolve peer dependencies and fix plugin issues when setting up a Spinnaker frontend plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd my-plugin-deck\nnpx check-peer-dependencies --install\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.12.4 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub gist (381d84f5da5242c4d371ad3fbaaafc53) that contains the detailed changelog for Spinnaker version 1.12.4. The gist is embedded using JavaScript.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/381d84f5da5242c4d371ad3fbaaafc53.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Installing Spinnaker Monitoring Third-Party Package\nDESCRIPTION: Command to install the Spinnaker monitoring third-party package.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/datadog.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update -y\nsudo apt-get install spinnaker-monitoring-third-party\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Artifact Templates with Halyard\nDESCRIPTION: Halyard command to add a custom artifact template for Spinnaker to use in artifact extraction.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/from-build-triggers.md#2025-04-09_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhal config artifact templates add <name of template> --template-path <path to the template>\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Script for Spinnaker v1.25.3\nDESCRIPTION: Script tag that embeds a GitHub gist containing the changelog for Spinnaker version 1.25.3\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Listing All Spinnaker Projects\nDESCRIPTION: Shows how to retrieve a list of all projects configured in Spinnaker using the spin CLI. The output includes project configurations with applications, clusters, and pipeline configs.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/projects/index.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nspin project list\n\n[\n {\n  \"config\": {\n   \"applications\": [...],\n   \"clusters\": [...],\n   \"pipelineConfigs\": [...]\n  },\n  ...\n }\n]\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker Changelog for Version 1.22.0 from GitHub Gist\nDESCRIPTION: This HTML script tag loads the changelog content for Spinnaker version 1.22.0 from a GitHub Gist. It references a specific file within the Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.6-changelog.md#2025-04-09_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Building Orca with Gradle\nDESCRIPTION: Gradle command for building Orca, Spinnaker's orchestration engine, from the command line.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncd orca\n./gradlew clean build -xcheck\n```\n\n----------------------------------------\n\nTITLE: Configuring Launch Templates Rollout in Clouddriver\nDESCRIPTION: YAML configuration for gradual rollout of launch templates to specific applications and accounts\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/server-group-launch-settings/aws-ec2/launch-templates-setup.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  aws.features.launch-templates.enabled: true\n  aws.features.launch-templates.allowed-applications: \"myapp:prod:us-east-1,anotherapp:prod:us-east-1\"\n  aws.features.launch-templates.allowed-accounts: \"test\"\n  aws.features.launch-templates.excluded-applications: \"dangerousapp\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Orca for Plugin Usage in YAML\nDESCRIPTION: This YAML configuration enables the plugin in Orca, specifying the plugin version and any custom configuration options.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  extensibility:\n    plugins:\n      Armory.RandomWaitPlugin:\n        enabled: true\n        version: 1.1.14\n        extensions:\n          armory.randomWaitStage:\n            enabled: true\n            config:\n              defaultMaxWaitTime: 20\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker v1.10.3\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.10.3. The Gist is loaded from the spinnaker-release GitHub account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/1c8253e78f9f346e1550f9b85d92f810.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Setting MySQL tx_isolation for Orca\nDESCRIPTION: Command to set the MySQL Server transaction isolation level to READ-COMMITTED, which is required for Orca's SQL integration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/orca-sql.md#2025-04-09_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nset tx_isolation = 'READ-COMMITTED';\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.0. The Gist is hosted by the spinnaker-release account and specifically loads the 1.19.0.md file from the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Exporting Properties for Custom Template in Shell\nDESCRIPTION: Shell commands to export properties for using a custom artifact template in Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/from-build-triggers.md#2025-04-09_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmessageFormat=<name of template>\ncustomFormat=true\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pipeline Template with Spin CLI\nDESCRIPTION: Shows how to delete a pipeline template using the 'delete' command with the template ID.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline-templates/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline-template delete myPipelineTemplate\n\nPipeline template deleted\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Gist for Spinnaker 1.19.1\nDESCRIPTION: Embeds a GitHub gist containing the changelog for Spinnaker version 1.19.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.2-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Adding a GCS Artifact Account in Spinnaker\nDESCRIPTION: Command to add a GCS artifact account to Spinnaker, specifying the service account key and account name.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ ACCOUNT=<Insert Account Name>\n$ hal config artifact gcs account add --json-path $JSON_SA_KEY $ACCOUNT\n```\n\n----------------------------------------\n\nTITLE: SpinnakerService Configuration\nDESCRIPTION: YAML configuration for the SpinnakerService manifest that defines the Spinnaker deployment, showing how to set the Spinnaker version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: spinnaker.io/v1alpha2\nkind: SpinnakerService\nmetadata:\n  name: spinnaker\nspec:\n  spinnakerConfig:\n    # ------- Main config section, equivalent to \"~/.hal/config\" from Halyard\n    config:\n      version: 2.21.0            # Spinnaker version to deploy\n# More configuration below this line.\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker Echo for AWS Pub/Sub Integration\nDESCRIPTION: YAML configuration to add to echo-local.yml that enables AWS pub/sub in Spinnaker. This defines the subscription details including topic and queue ARNs and message format.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/amazon.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npubsub:\n  enabled: true\n  amazon:\n    enabled: true\n    subscriptions:\n    - name: aws-pubsub-test-subscription\n      topicARN: arn:aws:sns:us-east-1:1234567890:aws-pubsub-test-topic\n      queueARN: arn:aws:sqs:us-east-1:1234567890:aws-pubsub-test-queue\n      messageFormat: S3\n```\n\n----------------------------------------\n\nTITLE: Configuring Random Wait Stage as JSON\nDESCRIPTION: This JSON configuration can be used to manually add a Random Wait stage to a pipeline for testing the backend component of the plugin.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"maxWaitTime\": 15,\n  \"name\": \"Test RandomWait\",\n  \"type\": \"randomWait\"\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.9.5 Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the changelog for Spinnaker version 1.9.5. The script tag loads the JavaScript file that renders the Gist contents on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.9.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d24a2c737db49dda644169cf5fe6d56e.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Example of Referencing GitHub Password from S3\nDESCRIPTION: This example shows how to reference the GitHub password stored in the 'spinnaker-secrets.yml' file in the S3 bucket. It uses the 'encrypted' prefix and includes all necessary parameters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/s3-secrets.md#2025-04-09_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nencrypted:s3!b:mybucket!f:spinnaker-secrets.yml!r:us-west-2!k:github.password\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Content for Spinnaker Changelogs in HTML\nDESCRIPTION: A series of script tags that embed GitHub Gist content containing changelog information for Spinnaker versions 1.25.0 through 1.25.6. Each script tag references a specific file within the same Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Pipeline Template with Spin CLI\nDESCRIPTION: Illustrates how to retrieve a specific pipeline template using the 'get' command with the template ID.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/pipeline-templates/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline-templates get --id myPipelineTemplate\n{\n  \"id\": \"myPipelineTemplate\"\n  \"pipeline\": {...}\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.14.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.14.0. The Gist is loaded via a script tag, which will render the content on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8b2844aa0ddabc25e5a64a21a16abc70.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.7.4 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.4. The Gist is loaded via a script tag, which will render the content on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e2ba64e21c1a05e890df8a25cc2bf036.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Example of Google Cloud Storage Artifact in Spinnaker\nDESCRIPTION: This JSON object represents a Spinnaker artifact referencing a file stored in Google Cloud Storage. It includes the artifact type, reference URI, name, version, and location.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"type\": \"gcs/object\",\n  \"reference\": \"gs://bucket/file.json#135028134000\",\n  \"name\": \"gs://bucket/file.json\",\n  \"version\": \"135028134000\"\n  \"location\": \"us-central1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Bake Template for Oracle Cloud Infrastructure\nDESCRIPTION: JSON template for configuring the Oracle Cloud Infrastructure bakery with custom firewall rules to allow HTTP access.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oci-source-to-prod/index.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"variables\": {\n    \"oracle_availability_domain\": null,\n    \"oracle_region\": null,\n    \"oracle_base_image_id\": null,\n    \"oracle_compartment_id\": null,\n    \"oracle_image_name\": null,\n    \"oracle_instance_shape\": null,\n    \"oracle_ssh_user_name\": null,\n    \"oracle_subnet_id\": null,\n    \"oracle_tenancy_id\": null,\n    \"oracle_user_id\": null,\n    \"oracle_fingerprint\": null,\n    \"oracle_ssh_private_key_file_path\": null,\n    \"oracle_pass_phrase\": \"\",\n\n    \"appversion\": \"\",\n    \"build_host\": \"\",\n    \"build_info_url\": \"\",\n    \"repository\": \"\",\n    \"package_type\": \"\",\n    \"packages\": \"\",\n    \"upgrade\": \"\",\n    \"configDir\": null\n  },\n  \"builders\": [\n    {\n      \"type\": \"oracle-oci\",\n      \"availability_domain\": \"{{user `oracle_availability_domain`}}\",\n      \"region\": \"{{user `oracle_region`}}\",\n      \"base_image_ocid\": \"{{user `oracle_base_image_id`}}\",\n      \"compartment_ocid\": \"{{user `oracle_compartment_id`}}\",\n      \"image_name\": \"{{user `oracle_image_name`}}\",\n      \"shape\": \"{{user `oracle_instance_shape`}}\",\n      \"ssh_username\": \"{{user `oracle_ssh_user_name`}}\",\n      \"subnet_ocid\": \"{{user `oracle_subnet_id`}}\",\n      \"tenancy_ocid\": \"{{user `oracle_tenancy_id`}}\",\n      \"user_ocid\": \"{{user `oracle_user_id`}}\",\n      \"fingerprint\": \"{{user `oracle_fingerprint`}}\",\n      \"key_file\": \"{{user `oracle_ssh_private_key_file_path`}}\",\n      \"pass_phrase\": \"{{user `oracle_pass_phrase`}}\"\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"shell\",\n      \"script\": \"{{user `configDir`}}/install_packages.sh\",\n      \"environment_vars\": [\n        \"repository={{user `repository`}}\",\n        \"package_type={{user `package_type`}}\",\n        \"packages={{user `packages`}}\",\n        \"upgrade={{user `upgrade`}}\"\n      ],\n      \"pause_before\": \"30s\"\n    },\n    {\n      \"type\": \"shell\",\n      \"inline\": [\n       \"sudo iptables -I INPUT 1 -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT\",\n       \"sudo netfilter-persistent save\",\n       \"sudo systemctl restart netfilter-persistent.service\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Manually Configuring Artifact Templates in YAML\nDESCRIPTION: YAML configuration to manually add custom artifact templates to igor-local.yml for Spinnaker versions 1.13 and later.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/from-build-triggers.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nartifacts:\n  templates:\n  - name: <name of template>\n    templatePath: <path to the template>\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Gist Script for Spinnaker Changelog in HTML\nDESCRIPTION: Script tag to embed a GitHub gist containing the changelog details for Spinnaker version 1.7.7\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8fa68517da00675a028dbd62c72d6748.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Installing Halyard on Ubuntu\nDESCRIPTION: Commands to download and install Halyard, the configuration tool for Spinnaker, on an Ubuntu instance.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oracle-kubernetes-source-to-prod/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh\nsudo bash InstallHalyard.sh -y\n```\n\n----------------------------------------\n\nTITLE: Configuring Secure Redis Connection in Service Settings\nDESCRIPTION: Creates a custom YAML configuration for the Redis service with authentication credentials. This demonstrates how to specify a secure connection URL for the Redis service used by Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\noverrideBaseUrl: redis://someuser:somepassword@localhost:6379\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl on Mac\nDESCRIPTION: Command for installing kubectl on macOS using Homebrew, required for interacting with Kubernetes clusters.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install kubectl\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.20.3 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.3 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.4-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Debian Repository in Rosco\nDESCRIPTION: Configuration snippet for Spinnaker's Rosco service to specify the Debian package repository URL for installing application packages during image baking.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndebianRepository: http://BUCKET-NAME.s3-website-REGION-NAME.amazonaws.com trusty main\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Dependencies for Spinnaker Plugin Testing\nDESCRIPTION: This snippet shows how to set up Gradle dependencies for integration testing of a Spinnaker plugin using the orca-bom platform.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/compatibility-testing.md#2025-04-09_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\ndependencies {\n  // ...\n  testImplementation(\"com.netflix.spinnaker.orca:orca-bom:<orca-version>\")\n  testImplementation(\"com.netflix.spinnaker.orca:orca-api-tck\") // Don't specify a version here - it will be resolved by `orca-bom` above.\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Halyard on macOS\nDESCRIPTION: Downloads and installs Halyard installation script for macOS systems\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/halyard.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/macos/InstallHalyard.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Repo Artifact with Sub-path Checkout in Spinnaker\nDESCRIPTION: This JSON snippet illustrates how to configure a Git Repo artifact with a specific sub-path checkout. It includes the artifact type, repository URL, branch version, and the sub-path to be checked out.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/git-repo/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"type\": \"git/repo\",\n    \"reference\": \"https://github.com/spinnaker/spinnaker.github.io\",\n    \"version\": \"feat-123\",\n    \"metadata\" : {\n        \"subPath\": \"reference/artifacts/types\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.5.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.5.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.5.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d3d2ca93ebcc0fce546323723dee65ea.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of OAuth Authorization Code Flow in Spinnaker\nDESCRIPTION: This Mermaid sequence diagram illustrates the OAuth 2.0 authorization code flow in Spinnaker, showing the interactions between Deck, Gate, the Identity Provider, and the Resource Server during the authentication process.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_6\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\nparticipant Deck\nparticipant Gate\nparticipant IdentityProvider\nparticipant ResourceServer\n\nDeck->>+Gate: GET /something/protected\nGate->>-Deck: HTTP 302 to /login\nDeck->>+Gate: GET /login\nGate->>-Deck: HTTP 302 to https://idp.url/userLogin?client_id=foo...\n\nDeck->>+IdentityProvider: GET https://idp.url/userLogin?client_id=foo...\nIdentityProvider->>-Deck: Returns login page\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.18.5 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.5 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring SSL for Gate using Halyard\nDESCRIPTION: Configures SSL settings for Gate in Spinnaker using Halyard. Requires the path to the Java Keystore file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nKEYSTORE_PATH= # /path/to/gate.jks\n\nhal config security api ssl edit \\\n  --key-alias gate \\\n  --keystore ${KEYSTORE_PATH} \\\n  --keystore-password \\\n  --keystore-type jks \\\n  --truststore ${KEYSTORE_PATH} \\\n  --truststore-password \\\n  --truststore-type jks\n\nhal config security api ssl enable\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script - Spinnaker v1.23.0\nDESCRIPTION: Script tag to embed GitHub gist containing release notes for Spinnaker version 1.23.0\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.3-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating Poll Voting Section with HTML\nDESCRIPTION: HTML structure for displaying a voting poll using PollTab with a results link, wrapped in a centered container div with styling attributes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spinnaker-product-box.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"text-align:center; display: flex; justify-content: center; flex-direction: column; align-items: center;\">\n  <iframe src=\"https://www.polltab.com/embed/E4wlYRTTMW\" style=\"width:85%; min-height: 800px; border:0; \"></iframe>\n  <a href=\"https://www.polltab.com/embed/E4wlYRTTMW/results\" target=\"_blank\">See Results</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.0. It uses a script tag to load the Gist content dynamically.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Enabling Slack Feature Flag in Deck (JavaScript)\nDESCRIPTION: Activate the Slack feature in Deck's application settings by setting the 'slack' feature flag to true. This enables the UI components for Slack support channels.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/slack-support/index.md#2025-04-09_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfeature: {\n  slack: true,\n  ...otherFeatures\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a GCS Bucket for Artifact Storage\nDESCRIPTION: Commands to create a Google Cloud Storage bucket within a GCP project. This bucket will be used to store artifacts that trigger deployments.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ PROJECT_ID=<Insert Project ID>\n$ BUCKET=gs://<Insert Bucket Name>\n$ gsutil mb -p $PROJECT_ID $BUCKET\n```\n\n----------------------------------------\n\nTITLE: Displaying Extended Params in Markdown\nDESCRIPTION: This code snippet illustrates how to embed an image in Markdown, specifically showing the extended params section in the canary stage configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/canary/config/filter_templates/index.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n![](/guides/user/canary/config/filter_templates/extended_params.png)\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: A script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.1.2. The Gist is hosted at the spinnaker-release GitHub account with a specific identifier.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.1.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83f03c39840317b473893da6abea7a0e.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of OAuth User Authentication in Spinnaker\nDESCRIPTION: This Mermaid sequence diagram shows the user authentication process in the OAuth 2.0 flow for Spinnaker, including the user providing credentials and confirming access for the client application.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_7\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\nparticipant Deck\nparticipant Gate\nparticipant IdentityProvider\nparticipant ResourceServer\n\nDeck->>+IdentityProvider: User sends credentials\nIdentityProvider->>-Deck: Confirms client_id 'foo' can access user's information\nDeck->>+IdentityProvider: User confirms\nIdentityProvider->>-Deck: HTTP 302 to https://gate.url/login?code=abcdef\n```\n\n----------------------------------------\n\nTITLE: Creating Java KeyStore for Custom CAs\nDESCRIPTION: Command to create a Java KeyStore (JKS) format trust store for storing custom CA certificates. The command imports a CA certificate file into a new keystore with a specified alias.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/webhook-custom-trust-store.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkeytool -import -file <path-to-ca-certificate> -alias <name-of-first-ca> -keystore <name-for-keystore>.jks\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Jekyll Page Configuration\nDESCRIPTION: Jekyll page configuration metadata that defines the layout type and navigation settings for the documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/github/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Configuring GitHub Webhooks\"\nsidebar:\n  nav: setup\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.4 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.4 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.6 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.6 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Enabling GCS Artifact Provider in Spinnaker\nDESCRIPTION: Command to enable the Google Cloud Storage artifact provider in Spinnaker using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ hal config artifact gcs enable\n```\n\n----------------------------------------\n\nTITLE: Cloning Required Repositories\nDESCRIPTION: Git commands to clone plugin and Spinnaker service repositories at specific versions\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit clone --single-branch --branch v1.1.14 https://github.com/spinnaker-plugin-examples/pf4jStagePlugin.git\ngit clone --single-branch --branch release-1.20.x https://github.com/spinnaker/orca.git\ngit clone --single-branch --branch release-1.20.x https://github.com/spinnaker/deck.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with User Data Script\nDESCRIPTION: Bash script to install required dependencies for Spinnaker local Git deployment on Ubuntu, including Java, Git, Redis and AWS CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nset -ex\n\n# Install dependencies for localgit installation\nadd-apt-repository ppa:openjdk-r/ppa\napt-get update\napt-get -y install git curl netcat redis-server openjdk-8-jdk emacs awscli python2.7 python-pip\n```\n\n----------------------------------------\n\nTITLE: Git Operations for Changes\nDESCRIPTION: Series of git commands for creating commits and pushing changes to remote repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/docs/local-clone.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit add <path/your-file-name>\ngit commit -a -m \"<your-commit-subject>\" -m \"<your-commit-description>\"\ngit push origin <your-working-branch>\n```\n\n----------------------------------------\n\nTITLE: Jekyll Template Include Statement\nDESCRIPTION: Liquid template syntax to include table of contents in the documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/canary/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Converting String to Integer in Spinnaker Expressions\nDESCRIPTION: Function that converts a string value to an integer for use in pipeline expressions and comparisons.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_8\n\nLANGUAGE: SpEL\nCODE:\n```\n#toInt(String)\n```\n\n----------------------------------------\n\nTITLE: Installing kubectl\nDESCRIPTION: Commands to install kubectl CLI tool on the Halyard host VM\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nKUBECTL_LATEST=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)\n\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_LATEST/bin/linux/amd64/kubectl\n\nchmod +x kubectl\n\nsudo mv kubectl /usr/local/bin/kubectl\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.11.4. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Verifying gcloud Installation\nDESCRIPTION: Command to verify that gcloud CLI is installed and authenticated properly.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/google.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud info\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for a specific version of Spinnaker. It uses a script tag with a src attribute pointing to the Gist URL. The file parameter in the URL specifies which changelog file to display.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Defining Run Class in Java for Spinnaker Orca\nDESCRIPTION: This code defines the Run class, which represents a ChAP run. It uses Jackson annotations for JSON deserialization and includes support for arbitrary properties.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/new-stage.md#2025-04-09_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage com.netflix.spinnaker.orca.chap;\n\nimport com.fasterxml.jackson.annotation.JsonAnyGetter;\nimport com.fasterxml.jackson.annotation.JsonAnySetter;\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.UUID;\n\n@JsonIgnoreProperties(ignoreUnknown = true)\npublic class Run {\n\n  public UUID id;\n  // Other properties not shown\n  // ...\n\n  // Support arbitrary properties without needing to define them explicitly\n  public Map<String, Object> properties = new HashMap<>();\n\n  @JsonAnySetter\n  public void set(String fieldName, Object value) {\n    this.properties.put(fieldName, value);\n  }\n\n  @JsonAnyGetter\n  public Object get(String fieldName) {\n    return this.properties.get(fieldName);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Integration in Spinnaker\nDESCRIPTION: YAML configuration snippet for Spinnaker's spinnaker-local.yml file to enable integration with Jenkins CI server, specifying the server URL and credentials.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  jenkins:\n    defaultMaster:\n      name: Jenkins # The display name for this server\n      baseUrl: http://jenkins-server:5656\n      username: jenkinsuser\n      password: jenkinspassword\n```\n\n----------------------------------------\n\nTITLE: Creating Pull Request Title in Spinnaker Format\nDESCRIPTION: Example of the correct format for a Spinnaker pull request title following the convention <type>(<scope>): <subject>. This format is required by Spinnaker's PR title checker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/docs/github-changes.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ndocs(plugins): add documentation for plugin creators\n```\n\n----------------------------------------\n\nTITLE: Starting Jekyll Server with Incremental Building\nDESCRIPTION: Command to start the Jekyll server with incremental building, which speeds up page generation when working on a single page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/README.md#2025-04-09_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nbundle exec jekyll serve --watch --incremental\n```\n\n----------------------------------------\n\nTITLE: Launching Multipass VM\nDESCRIPTION: Command to create a Multipass VM with specified resources for Spinnaker installation\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmultipass launch -c 2 -m 10G -d 30G\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.23.4 Release Notes\nDESCRIPTION: Script tag that embeds the markdown file containing the changelog for Spinnaker version 1.23.4 from a GitHub Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: SSH Connection to Halyard VM\nDESCRIPTION: Command to SSH into the Halyard VM with port forwarding for Spinnaker UI and API access\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute ssh $HALYARD_HOST \\\n    --project=$GCP_PROJECT \\\n    --zone=us-central1-f \\\n    -- -L 9000:localhost:9000 -L 8084:localhost:8084\n```\n\n----------------------------------------\n\nTITLE: Creating S3 Bucket Notification Configuration for SNS\nDESCRIPTION: Commands to create a notification configuration for the S3 bucket that will trigger notifications to the SNS topic when objects are created in the bucket.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/amazon.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n # You need to create a file with the notification information in json format\n bash4.4$ cat << EOF > /tmp/spin-pubsub-notification.json\n {\n    \"TopicConfigurations\": [\n        {\n            \"TopicArn\": \"${AWS_TOPIC_ARN}\",\n            \"Events\": [\n                \"s3:ObjectCreated:*\"\n            ]\n        }\n    ]\n }\nEOF\n bash4.4$ aws s3api put-bucket-notification-configuration --bucket ${AWS_PUBSUB_BUCKET} \\\n --notification-configuration file:///tmp/spin-pubsub-notification.json    \n bash4.4$\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs\nDESCRIPTION: A series of script tags that embed GitHub gists containing changelog information for each patch release of Spinnaker 1.19. Each gist references specific markdown files containing the changelog details.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.12-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.12.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.11.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.10.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Logging Output from GoogleInfrastructureProvider Caching Agent in Clouddriver\nDESCRIPTION: This log snippet shows the output format from a Google Cloud Platform caching agent in Clouddriver. It demonstrates how caching agents are partitioned by account, region, and resource type, which is relevant when considering how to scale Clouddriver instances.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/scaling/horizontal-scaling.md#2025-04-09_snippet_0\n\nLANGUAGE: log\nCODE:\n```\nGoogleInfrastructureProvider:my-google-account/europe-west1/GoogleRegionalAddressCachingAgent completed in 0.111s\n```\n\n----------------------------------------\n\nTITLE: Implementing ChapService Configuration in Java for Spinnaker\nDESCRIPTION: This code snippet defines the ChapConfig class, which sets up the Chap service for Spinnaker. It creates beans for the Chap endpoint and service, using Retrofit for REST API communication. The configuration is conditional on the 'chap.baseUrl' property being set.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/new-stage.md#2025-04-09_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\npackage com.netflix.spinnaker.config;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.netflix.spinnaker.orca.chap.ChapService;\nimport com.netflix.spinnaker.retrofit.Slf4jRetrofitLogger;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport retrofit.Endpoint;\nimport retrofit.RestAdapter;\nimport retrofit.client.Client;\nimport retrofit.converter.JacksonConverter;\n\nimport static retrofit.Endpoints.newFixedEndpoint;\n\n@Configuration\n@ComponentScan({\n  \"com.netflix.spinnaker.orca.chap.pipeline\",\n  \"com.netflix.spinnaker.orca.chap.tasks\"\n})\n@ConditionalOnProperty(value = \"chap.baseUrl\")\npublic class ChapConfig {\n\n  @Bean\n  Endpoint chapEndpoint(@Value(\"${chap.baseUrl}\") String chapBaseUrl) {\n    return newFixedEndpoint(chapBaseUrl);\n  }\n\n  @Bean\n  ChapService chapService(Endpoint chapEndpoint,\n                          Client retrofitClient,\n                          RestAdapter.LogLevel retrofitLogLevel,\n                          ObjectMapper objectMapper) {\n    return new RestAdapter.Builder()\n      .setEndpoint(chapEndpoint)\n      .setClient(retrofitClient)\n      .setLogLevel(retrofitLogLevel)\n      .setLog(new Slf4jRetrofitLogger(ChapService.class))\n      .setConverter(new JacksonConverter(objectMapper))\n      .build()\n      .create(ChapService.class);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading Jenkins Job Configuration\nDESCRIPTION: Command to download the raw job XML configuration file required for setting up the Script stage in Jenkins.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/script-stage/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X GET \\\n    -o \"scriptJobConfig.xml\" \\\n    \"https://storage.googleapis.com/jenkins-script-stage-config/scriptJobConfig.xml\"\n```\n\n----------------------------------------\n\nTITLE: Custom Email Notification Configuration\nDESCRIPTION: JSON configuration for customizing email notifications with subject, body, and notification settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/notifications/index.md#2025-04-09_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customSubject\": \"Beginning deployment to production (started by: ${trigger.user})\",\n  \"customBody\": \"*Pipeline parameters:* ${parameters.toString()}\\n\\n [View the stage]({{link}}) here.\",\n  \"notifications\": [\n    {\n      \"address\": \"spinnakerteam@spinnaker.io\",\n      \"level\": \"stage\",\n      \"type\": \"email\",\n      \"when\": [\n        \"stage.starting\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Bundle and Ruby Dependencies\nDESCRIPTION: Commands to install the Bundler gem and use it to install all required dependencies for the Jekyll project as defined in the Gemfile.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/README.md#2025-04-09_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ncd spinnaker.github.io\ngem install bundler\nbundle install\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker\nDESCRIPTION: Commands to configure Spinnaker version, storage, and GCE provider settings\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version $(hal version latest -q)\n\nhal config storage gcs edit \\\n    --project $(gcloud config get-value project) \\\n    --json-path $GCS_SERVICE_ACCOUNT_DEST\n\nhal config storage edit --type gcs\n\nhal config provider google account add my-gce-account \\\n    --project $(gcloud config get-value project) \\\n    --json-path $GCE_SERVICE_ACCOUNT_DEST\n\nhal config provider google enable\n```\n\n----------------------------------------\n\nTITLE: Defining Jekyll Front Matter and Navigation Layout for Spinnaker Releases Page\nDESCRIPTION: Jekyll front matter configuration that defines the page layout as 'single', sets the title to 'Releases', and configures the sidebar navigation to use the 'community' navigation definition.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Releases\"\nsidebar:\n  nav: community\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Page Metadata and Navigation in Jekyll Markdown\nDESCRIPTION: Jekyll front matter that configures the page layout, title, and sidebar navigation for the Spinnaker documentation page about caching configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/caching/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: single\ntitle:  \"Configure Caching\"\nsidebar:\n  nav: setup\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Release Notes in HTML\nDESCRIPTION: These script tags embed GitHub Gist content to display the changelog for Spinnaker versions 1.20.0 through 1.20.2. Each script tag references a specific file within the same Gist repository that contains the release notes for a particular version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.21.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.21.3-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Registering Extension in Plugin using Registry in Kotlin\nDESCRIPTION: Shows how a plugin can register its extension using the custom Registry class.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_9\n\nLANGUAGE: kotlin\nCODE:\n```\n@SpinnakerExtension\nclass MyExtension(\n  private val registry: MyExtensionPointRegistry\n) : MyExtensionPoint {\n  init {\n    registry.register(this)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Plugin in Development Mode\nDESCRIPTION: Command to start the plugin in development mode with a proxy to a running Spinnaker instance.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nDEV_PROXY_HOST=http://localhost:9001 yarn develop\n```\n\n----------------------------------------\n\nTITLE: Verifying Deployment with cURL\nDESCRIPTION: These Bash commands use cURL to verify the deployment in both development and production environments by setting appropriate Host headers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/dcos-source-to-prod/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Host: dev.example.com\" http://$PUBLIC_AGENT\n\ncurl --header \"Host: prod.example.com\" http://$PUBLIC_AGENT\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding Spinnaker Services in Kubernetes\nDESCRIPTION: Shell commands for port forwarding Spinnaker's Deck (UI) and Gate (API) services to make them accessible from the local machine.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nkubectl --kubeconfig ~/.kube/garden.yaml port-forward svc/spin-deck 9000\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl --kubeconfig ~/.kube/garden.yaml port-forward svc/spin-gate 8084\n```\n\n----------------------------------------\n\nTITLE: Including Table of Contents in Jekyll Page\nDESCRIPTION: This Liquid template tag includes a table of contents in the Jekyll page. It's typically used to automatically generate a list of headings from the page content.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Connecting to Spinnaker UI\nDESCRIPTION: Command to establish connection to Spinnaker UI by forwarding ports 9000 (Deck UI) and 8084 (Gate API service).\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/deploy.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy connect\n```\n\n----------------------------------------\n\nTITLE: Including Specific JVM Metric While Excluding Others in YAML\nDESCRIPTION: Demonstrates a filter configuration that excludes all JVM metrics except for 'jvm.memory.used', which is explicitly included with higher precedence.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmonitoring:\n  filters:\n    meters:\n      byLiteralName:\n        - jvm.memory.used\n\n      excludeNameRegex:\n        - jvm.*\n```\n\n----------------------------------------\n\nTITLE: Including External Changelog Gist Script\nDESCRIPTION: HTML script tag to embed an external GitHub gist containing the changelog content for Spinnaker version 1.15.0.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.15.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/046111a35f700d963893ea0067b7f4b9.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Passing Parameters in Pub/Sub Message Payload\nDESCRIPTION: A JSON payload example showing how to pass parameters to a pipeline using the 'parameters' key. In this example, the 'stack' parameter is set to 'prod'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers/pubsub/index.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"parameters\": {\n    \"stack\": \"prod\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Plugin Repository Halconfig Entry\nDESCRIPTION: YAML configuration entry created in Halconfig when adding a plugin repository. Shows the repository ID and URL structure.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/plugins/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nrepositories:\n  spinnaker-plugin-examples:\n    id: spinnaker-plugin-examples\n    url: https://raw.githubusercontent.com/spinnaker-plugin-examples/examplePluginRepository/master/plugins.json\n```\n\n----------------------------------------\n\nTITLE: Enabling Wercker Stage in Spinnaker Deck\nDESCRIPTION: JavaScript configuration to enable Wercker stage feature in Spinnaker's Deck UI for version 1.19 or earlier\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/wercker.md#2025-04-09_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.spinnakerSettings.feature.wercker = true;\n```\n\n----------------------------------------\n\nTITLE: Setting Precondition Expression in Spinnaker Pipeline\nDESCRIPTION: This YAML snippet shows how to set up a precondition expression in a Spinnaker pipeline. It checks if a parameter named 'Pipeline Successful' is equal to 'true'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/safe-deployments/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n${ parameters[\"Pipeline Successful\"].equals(\"true\") }\n```\n\n----------------------------------------\n\nTITLE: Installing JDK 11 on Mac\nDESCRIPTION: Commands for installing AdoptOpenJDK 11 on macOS using Homebrew, required for Spinnaker development.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew tap AdoptOpenJDK/openjdk\nbrew cask install adoptopenjdk11\n```\n\n----------------------------------------\n\nTITLE: Viewing BOM for Release Candidate\nDESCRIPTION: Shell command to view the Bill of Materials (BOM) for the release candidate using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-manager-runbook/index.md#2025-04-09_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhal version bom\n```\n\n----------------------------------------\n\nTITLE: Restoring Spinnaker Configuration from Backup with Halyard\nDESCRIPTION: This command restores a Spinnaker configuration from a previously created backup. It expands and replaces the existing ~/.hal directory with the backup contents. The --backup-path parameter specifies the location of the backup tar file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/backups.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal backup restore --backup-path <backup-name>.tar\n```\n\n----------------------------------------\n\nTITLE: Jekyll Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for Jekyll page layout, title, sidebar navigation, and redirect settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Contributing\"\nsidebar:\n  nav: community\nredirect_from: /docs/contributing-to-spinnaker\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Metric Filter Structure in YAML\nDESCRIPTION: Specifies the structure of a metric filter configuration file that controls which metrics are forwarded to the monitoring system. Filters can be configured to include or exclude metrics based on literal names or regex patterns.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmeters:\n  # If this section is empty, then all meters are assumed to match.\n  #\n  # names in byLiteralName have highest precedence.\n  # Otherwise, the metric will not be included if it matches excludeNameRegex.\n  # Otherwise, the metric will be included if it matches byNameRegex.\n  #    If the name matches multiple byNameRegex then a random entry is taken.\n  byLiteralName:\n    # If the name appears here, it will be included\n    - <explicit metric name>:\n\n  byNameRegex:\n    # If the name matches a regex here, it will be included.\n    - <metric name regex>:\n\n  excludeNameRegex:\n    # If the name matches a regex here, it will not be included,\n    # unless it also appears in byLiteralName.\n    - <metric name regex>\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Nodes\nDESCRIPTION: Command to list all nodes in the Kubernetes cluster to find a node for exposing webhooks.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Declaring Timeout Methods with Explicit Units in Java\nDESCRIPTION: Example showing how to properly name methods that return timeout values with explicit units to avoid ambiguity about the time unit being used.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/back-end-code.md#2025-04-09_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic long getTimeoutMillis();\npublic long getTimeoutSeconds();\n```\n\n----------------------------------------\n\nTITLE: Incorporating Twitter Embed in Markdown\nDESCRIPTION: HTML code for embedding Twitter posts within a Markdown document. The script loads the Twitter widget asynchronously and renders tweets with proper formatting and interactive elements.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/news/editions/edition3.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n```\n\n----------------------------------------\n\nTITLE: Upstream Sync Function\nDESCRIPTION: Bash function to sync local repositories with upstream Spinnaker repositories.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsync-from-upstream() {\n    for i in ./*; do\n        (cd $i && echo $i && git checkout master && git pull --rebase upstream master && git push origin upstream/master:master)\n    done\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Kubernetes Account with Docker Registry\nDESCRIPTION: Halyard command to add a new Kubernetes account configuration with an associated Docker registry.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider kubernetes account add my-k8s-account \\\n    --docker-registries my-docker-registry\n```\n\n----------------------------------------\n\nTITLE: Adding a Pub/Sub Subscription to Spinnaker\nDESCRIPTION: Command to add the GCP Pub/Sub subscription to Spinnaker, configuring it to handle GCS messages using the service account for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ SPIN_SUB_NAME=<Insert Spinnaker Subscription Name>\n$ PROJECT_NAME=<Insert GCP Project Name>\n$ hal config pubsub google subscription add $SPIN_SUB_NAME \\\n--project $PROJECT_NAME \\\n--subscription-name $GCP_SUB_NAME \\\n--message-format GCS \\\n--json-path $JSON_SA_KEY\n```\n\n----------------------------------------\n\nTITLE: Example Commit Message with Feature Scope\nDESCRIPTION: Example of a commit message for adding a feature to the Google provider in Clouddriver, demonstrating proper scope and type formatting.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/submitting.md#2025-04-09_snippet_1\n\nLANGUAGE: git\nCODE:\n```\nfeat(provider/google): Updated forwarding rule schema.\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Service Selector for Spinnaker Load Balancer\nDESCRIPTION: This YAML snippet shows how Spinnaker sets the selector for a Kubernetes Service when creating a Load Balancer. It adds a label with the Load Balancer name prefixed by 'load-balancer-'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n selector:\n   # added by Spinnaker\n   load-balancer-${LOAD-BALANCER}: true\n```\n\n----------------------------------------\n\nTITLE: Instructing Mergify to Create Backport PRs in Markdown\nDESCRIPTION: This snippet demonstrates how to use a Markdown comment to instruct Mergify to create backport PRs against multiple release branches. It's used in the context of auditing backport candidates for Spinnaker releases.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-manager-runbook/index.md#2025-04-09_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n> @Mergifyio backport release-1.19.x release-1.20.x release-1.21.x\n```\n\n----------------------------------------\n\nTITLE: SSH Port Forwarding for Spinnaker UI Access\nDESCRIPTION: Command to create SSH tunnel for accessing Spinnaker UI from local workstation on ports 9000 and 8084.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/oci-source-to-prod/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nssh -A -L 9000:localhost:9000 -L 8084:localhost:8084 ubuntu@IP\n```\n\n----------------------------------------\n\nTITLE: Defining Jekyll Page Front Matter in YAML\nDESCRIPTION: YAML front matter for a Jekyll documentation page that configures the page layout, title, and sidebar navigation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/service-overviews/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Service Overviews\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring GKE Legacy Credentials\nDESCRIPTION: Commands to configure Google Kubernetes Engine (GKE) credentials using legacy authentication method.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcloud config set container/use_client_certificate true\ngcloud container clusters get-credentials NAME --zone ZONE\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Aptly Package Repository\nDESCRIPTION: Commands to set up Aptly as a Debian package repository manager on the Jenkins server, creating a repository named \"hello\" for hosting application packages.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/hello-deployment/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo su - jenkins\ncd ~\nwget https://dl.bintray.com/smira/aptly/0.9.5/debian-squeeze-x64/aptly\nchmod +x aptly\n./aptly repo create hello\n./aptly publish repo -architectures=\"amd64\" -component=main -distribution=trusty -skip-signing=true hello\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Local Repository in Component\nDESCRIPTION: Gradle configuration to add the local Maven repository to a Spinnaker component's build configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/kork-library.md#2025-04-09_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\nrepositories {\n  mavenLocal()\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Admin Roles in Fiat YAML for Spinnaker\nDESCRIPTION: This YAML configuration snippet defines the admin roles in Fiat, Spinnaker's authorization service. It specifies which roles should be granted administrator privileges, removing read/write restrictions for users with these roles.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/admin/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfiat:\n  admin:\n    roles:\n      - devops-admin\n```\n\n----------------------------------------\n\nTITLE: Deploying Spinnaker with Shell Script\nDESCRIPTION: Shell commands for deploying Spinnaker using the provided deploy script in the template repository, including setting up the Kubernetes config environment variable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\n# In BASH and ZSH shells, you can export like so:\nexport KUBECONFIG=~/.kube/garden.yaml\n```\n\nLANGUAGE: shell\nCODE:\n```\nSPIN_FLAVOR=oss ./deploy.sh\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl --kubeconfig ~/.kube/garden.yaml apply -k .\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl --kubeconfig ~/.kube/garden.yaml get pods\n```\n\n----------------------------------------\n\nTITLE: Creating a Pub/Sub Subscription\nDESCRIPTION: Command to create a pull subscription for the Pub/Sub topic, which Spinnaker will use to receive notifications.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ GCP_SUB_NAME=<Insert Subscription Name>\n$ gcloud beta pubsub subscriptions create $GCP_SUB_NAME --topic $TOPIC\n```\n\n----------------------------------------\n\nTITLE: Installing AWS CLI on Ubuntu\nDESCRIPTION: This snippet installs the AWS Command Line Interface (CLI) on an Ubuntu system using apt and pip. It then verifies the installation by checking the AWS CLI version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/kubernetes-v2/aws-eks.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Install the awscli\nsudo apt install python-pip awscli\n\n# Verify the installation\naws --version\n```\n\n----------------------------------------\n\nTITLE: Creating cluster admin binding for current user\nDESCRIPTION: Creates a ClusterRoleBinding with cluster-admin privileges for the current Google Cloud user to enable management of cluster roles.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n#replace your.google.cloud.email@example.org with your Gcloud account\nkubectl create clusterrolebinding user-cluster-admin-binding \\\n  --clusterrole=cluster-admin \\\n  --user=your.google.cloud.email@example.org\n```\n\n----------------------------------------\n\nTITLE: Importing Front50 Data Script\nDESCRIPTION: Shell script to import applications, pipelines, strategies, notifications and projects into Front50\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/front50-cassandra-to-obj-store.md#2025-04-09_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/sh\n\ncurl -X POST -H \"Content-type: application/json\" --data-binary @\"notifications.json\" http://FRONT50_HOSTNAME:FRONT50_PORT/notifications/batchUpdate\ncurl -X POST -H \"Content-type: application/json\" --data-binary @\"strategies.json\" http://FRONT50_HOSTNAME:FRONT50_PORT/strategies/batchUpdate\ncurl -X POST -H \"Content-type: application/json\" --data-binary @\"pipelines.json\" http://FRONT50_HOSTNAME:FRONT50_PORT/pipelines/batchUpdate\ncurl -X POST -H \"Content-type: application/json\" --data-binary @\"applications.json\" http://FRONT50_HOSTNAME:FRONT50_PORT/v2/applications/batch/applications\ncurl -X POST -H \"Content-type: application/json\" --data-binary @\"projects.json\" http://FRONT50_HOSTNAME:FRONT50_PORT/v2/projects/batchUpdate\n```\n\n----------------------------------------\n\nTITLE: App Engine Configuration for Server Group Management\nDESCRIPTION: Reference to App Engine app.yaml configuration required for using Start/Stop Server Group stages in Spinnaker pipelines.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/stages/index.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napp.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Amazon ECS Account using Halyard\nDESCRIPTION: Halyard command to add an Amazon ECS account to Spinnaker. This command maps the ECS account to a previously configured AWS account for credential management.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/aws/aws-ecs.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider ecs account add ecs-account-name --aws-account aws-account-name\n```\n\n----------------------------------------\n\nTITLE: Saving Pipeline JSON to File with Spin CLI\nDESCRIPTION: Demonstrates how to save the retrieved pipeline JSON directly to a file using the Spin CLI and the tee command.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/create.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nspin pipeline get --name <pipelineName> --application <appName> | tee new_template.txt\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Google Cloud using gcloud CLI\nDESCRIPTION: Command to log in to Google Cloud Platform using the gcloud CLI tool.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-cf/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ gcloud auth login\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration for Spinnaker Triggers Page\nDESCRIPTION: YAML front matter configuration for a Jekyll-based documentation page about Spinnaker triggers. Defines the page layout and navigation settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/triggers/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: single\ntitle:  \"Set Up Triggers\"\nsidebar:\n  nav: setup\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Clouddriver for Launch Templates\nDESCRIPTION: Basic YAML configuration to enable launch templates globally in Clouddriver\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/features/server-group-launch-settings/aws-ec2/launch-templates-setup.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  aws.features.launch-templates.enabled: true\n  aws.features.launch-templates.all-applications.enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Redis Configuration in Front50\nDESCRIPTION: YAML configuration to enable Redis storage backend in front50.yml\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/operator/front50-cassandra-to-redis.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  redis:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Creating Symlink for Deck Plugin JavaScript\nDESCRIPTION: This bash command creates a symbolic link to the plugin's JavaScript file in the Deck plugins directory.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncd <path-to-deck>\nln -s <path-to-pf4jStagePlugin>/random-wait-deck/build/dist/index.js plugins/index.js\n```\n\n----------------------------------------\n\nTITLE: Creating Release Notes Template in Markdown\nDESCRIPTION: Template for creating release notes in a Markdown file. It includes placeholders for the release version, Halyard version requirement, curated changelog, and raw changelog.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-manager-runbook/index.md#2025-04-09_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# Spinnaker Release ${nn.nn.nn}\n**_Note: This release requires Halyard version ${nn.nn.nn} or later._**\n\nThis release includes fixes, features, and performance improvements across a wide feature set in Spinnaker. This section provides a summary of notable improvements followed by the comprehensive changelog.\n\n${CURATED_CHANGE_LOG}\n\n# Changelog\n\n${RAW_CHANGE_LOG}\n```\n\n----------------------------------------\n\nTITLE: Redis Pool Exception Stack Trace\nDESCRIPTION: Example stack trace showing Redis connection pool errors in Clouddriver\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nExample Exception (Found in the Clouddriver log file)\n2019-08-14 19:30:34.381 ERROR 24799 --- [gentScheduler-1] c.n.s.c.r.c.ClusteredAgentScheduler      : Unable to run agents\nredis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool\n\tat redis.clients.util.Pool.getResource(Pool.java:53) ~[jedis-2.9.3.jar:na]\n\tat redis.clients.jedis.JedisPool.getResource(JedisPool.java:226) ~[jedis-2.9.3.jar:na]\n\tat com.netflix.spinnaker.kork.jedis.telemetry.InstrumentedJedisPool.getResource(InstrumentedJedisPool.java:60) ~[kork-jedis-5.11.1.jar:5.11.1]\n\tat com.netflix.spinnaker.kork.jedis.telemetry.InstrumentedJedisPool.getResource(InstrumentedJedisPool.java:26) ~[kork-jedis-5.11.1.jar:5.11.1]\n\tat com.netflix.spinnaker.kork.jedis.JedisClientDelegate.withCommandsClient(JedisClientDelegate.java:45) ~[kork-jedis-5.11.1.jar:5.11.1]\n\tat com.netflix.spinnaker.cats.redis.cluster.ClusteredAgentScheduler.acquireRunKey(ClusteredAgentScheduler.java:178) ~[cats-redis.jar:na]\n\tat com.netflix.spinnaker.cats.redis.cluster.ClusteredAgentScheduler.acquire(ClusteredAgentScheduler.java:131) ~[cats-redis.jar:na]\n\tat com.netflix.spinnaker.cats.redis.cluster.ClusteredAgentScheduler.runAgents(ClusteredAgentScheduler.java:158) ~[cats-redis.jar:na]\n\tat com.netflix.spinnaker.cats.redis.cluster.ClusteredAgentScheduler.run(ClusteredAgentScheduler.java:151) ~[cats-redis.jar:na]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_222]\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_222]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_222]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_222]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_222]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_222]\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_222]\nCaused by: java.lang.IllegalStateException: Pool not open\n```\n\n----------------------------------------\n\nTITLE: Git Tag Creation and Push\nDESCRIPTION: Commands to create and push a git tag for triggering Docker builds.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngit tag release-1.0\ngit push origin release-1.0\n```\n\n----------------------------------------\n\nTITLE: IAM Role Permissions for AWS CodeBuild\nDESCRIPTION: IAM policy defining required permissions for Spinnaker to interact with AWS CodeBuild, including starting, stopping, and monitoring builds.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/codebuild.md#2025-04-09_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:StopBuild\",\n        \"codebuild:ListProjects\",\n        \"codebuild:StartBuild\",\n        \"codebuild:BatchGetBuilds\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Spinnaker\nDESCRIPTION: Command to deploy Spinnaker using the configured settings\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gce.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nsudo hal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Deprecating Spinnaker Version using Halyard CLI\nDESCRIPTION: Command to deprecate a specific version of Spinnaker using the Halyard CLI. This is typically done for the n-3 release when a new version is published.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-manager-runbook/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal admin deprecate version --version ${VERSION_TO_DEPRECATE}\n```\n\n----------------------------------------\n\nTITLE: Setting Chaos Monkey Feature Flag in Deck's Custom Profile\nDESCRIPTION: Creates a custom settings file for Deck UI that enables the Chaos Monkey feature flag. This JavaScript snippet modifies the window.spinnakerSettings object to enable a specific feature.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.spinnakerSettings.feature.chaosMonkey = true;\n```\n\n----------------------------------------\n\nTITLE: Using Spin CLI for Canary Config Management\nDESCRIPTION: Overview of the available canary configuration commands in the spin CLI tool. Shows the usage patterns and available subcommands for managing canary configs.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/spin/canary-configs/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ spin canary canary-configs\nUsage:\n   canary canary-config [command]\n\nAliases:\n  canary-config, canary-configs, cc\n\nAvailable Commands:\n  delete      Delete the provided canary config\n  get         Get the canary config with the provided id\n  list        List the canary configs\n  retro       Retro the provided canary config\n  save        Save the provided canary config\n\nFlags:\n  -h, --help   help for canary-config\n\nGlobal Flags:\n      --config string            path to config file (default $HOME/.spin/config)\n      --default-headers string   configure default headers for gate client as comma separated list (e.g. key1=value1,key2=value2)\n      --gate-endpoint string     Gate (API server) endpoint (default http://localhost:8084)\n  -k, --insecure                 ignore certificate errors\n      --no-color                 disable color (default true)\n      --output string            configure output formatting\n  -q, --quiet                    squelch non-essential output\n\nUse \" canary canary-config [command] --help\" for more information about a command.\n```\n\n----------------------------------------\n\nTITLE: Configuring Spinnaker Deployment\nDESCRIPTION: Halyard commands to configure S3 storage, AWS account integration, and Docker registry settings for Spinnaker.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhal config storage s3 edit --region $AWS_REGION\nhal config storage edit --type s3\nhal config version edit --version 1.21.0\nhal deploy apply\n\nsudo service apache2 stop\nsudo systemctl disable apache2\n\necho > ~/.hal/default/profiles/settings-local.js\n\nhal config deploy edit --type localgit --git-origin-user={your github username}\nhal config version edit --version branch:master\n\nhal config provider aws account add my-aws-devel-acct \\\n    --account-id 123456789012 \\\n    --assume-role role/SpinnakerManaged\nhal config provider aws account edit my-aws-devel-acct --regions $AWS_REGIONS\nhal config provider aws enable\n\nhal config provider docker-registry enable\n\nhal config provider docker-registry account add my-dockerhub-devel-acct \\\n    --address index.docker.io \\\n    --repositories {your dockerhub username}/{your dockerhub repository} \\\n    --username {your dockerhub username} \\\n    --password \\\n    --track-digests true\n\nhal config provider docker-registry account add my-us-west-2-devel-registry \\\n --address 123456789012.dkr.ecr.us-west-2.amazonaws.com \\\n --username AWS \\\n --password-command \"aws --region us-west-2 ecr get-authorization-token --output text --query 'authorizationData[].authorizationToken' | base64 -d | sed 's/^AWS://'\" \\\n --track-digests true\n```\n\n----------------------------------------\n\nTITLE: Creating Plugin Directory Structure in Shell\nDESCRIPTION: Command to create the top-level directory for a new Spinnaker frontend plugin project.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/frontend.md#2025-04-09_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmkdir my-plugin\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: Jekyll front matter configuration that defines the page layout and navigation settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/news/thankyou.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Thank You\"\nsidebar:\n  nav: news\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Base Image for GCE Bakery in Spinnaker\nDESCRIPTION: This command adds a custom base image for the Google Compute Engine bakery in Spinnaker. It specifies the source image, provides descriptions, and sets the package type. Replace placeholders with actual values.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/bakery/google/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider google bakery base-image add $BASE_IMAGE \\\n    --source-image $GCE_VM_IMAGE_NAME \\\n    --short-description this-is-my-image \\\n    --detailed-description 'There are many like it, but this one is mine.' \\\n    --package-type deb\n```\n\n----------------------------------------\n\nTITLE: Log Analysis Command for Troubleshooting\nDESCRIPTION: Command to inspect the beginning of log files for debugging startup issues\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/dev-env/provider-setups/aws-dev-setup.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhead -{number of lines} {log file}\n# For instance, if you're looking up the first 1000 lines of the Clouddriver log file.\nhead -1000 dev/spinnaker/logs/clouddriver.log\n```\n\n----------------------------------------\n\nTITLE: Configuring Rolling Update Deployment Strategy for Spinnaker Services\nDESCRIPTION: This configuration demonstrates how to customize the rolling update deployment strategy for Spinnaker services in Kubernetes. It allows specifying maxSurge and maxUnavailable percentages to control how pods are replaced during updates.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  deploymentStrategy:\n    type: rollingUpdate\n    strategySettings:\n      maxSurge: 100%\n      maxUnavailable: 50%\n```\n\n----------------------------------------\n\nTITLE: Authenticating with gcloud against the test cluster\nDESCRIPTION: Verifies current gcloud authentication status to ensure proper access to the test Kubernetes cluster.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-deploy-rbac/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud info\n```\n\n----------------------------------------\n\nTITLE: Setting Annotations and Labels for Kubernetes Resources in Spinnaker\nDESCRIPTION: This configuration demonstrates how to apply custom annotations and labels to Spinnaker's Kubernetes Pod and Service resources. These metadata elements can be used to control specific behaviors or categorize resources within Kubernetes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/custom.md#2025-04-09_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkubernetes:\n  podAnnotations:\n    example/podAnnotation: spinnaker.io\n    example/podAnnotation-2: halyard\n  podLabels:\n    examplePodLabel: examplePodLabelValue\n  serviceLabels:\n    exampleServiceLabel: exampleServiceLabelValue\n  serviceAnnotations:\n    example/serviceAnnotation: spinnaker.io\n    example/serviceAnnotation-2: halyard\n```\n\n----------------------------------------\n\nTITLE: Running Deck with Custom API Host\nDESCRIPTION: This command starts Deck with a custom API host and authentication disabled, useful for local development.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncd deck\nyarn\nAPI_HOST={my-workstation-ip}:8084 AUTH_ENABLED=false yarn start\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pipeline ID by Name and Application in Spinnaker\nDESCRIPTION: Function to look up a pipeline id using pipeline name and Spinnaker application name. Useful for referencing existing pipelines within any Spinnaker application.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/pipeline/expressions/index.md#2025-04-09_snippet_5\n\nLANGUAGE: SpEL\nCODE:\n```\n#pipelineIdInApplication(String pipelineName, String applicationName)\n```\n\n----------------------------------------\n\nTITLE: Verifying Docker Registry Accounts in Spinnaker\nDESCRIPTION: This command lists all Docker Registry accounts configured in Spinnaker using Halyard. It's used to verify that the required Docker registries have been added before setting up DC/OS.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/dcos.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider docker-registry account list\n```\n\n----------------------------------------\n\nTITLE: Provisioning Spinnaker and Jenkins Instance on GCE\nDESCRIPTION: gcloud command to create a GCE instance with Spinnaker, Jenkins, and other dependencies pre-installed.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/gce-source-to-prod/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nMY_PROJECT=<your project>\nINSTANCE_NAME=spinnaker-codelab\nZONE=us-east1-b\n\ngcloud compute instances create $INSTANCE_NAME \\\n    --project $MY_PROJECT \\\n    --zone $ZONE \\\n    --image spinnaker-codelab \\\n    --image-project marketplace-spinnaker-release \\\n    --machine-type n1-highmem-4 \\\n    --scopes cloud-platform \\\n    --metadata startup-script=/var/spinnaker/startup/first_codelab_boot.sh,gce_account=my-google-account\n```\n\n----------------------------------------\n\nTITLE: Installing Spinnaker Release Candidate Using Halyard\nDESCRIPTION: Commands to configure and deploy a Spinnaker release candidate using Halyard. This sets the version to the latest unvalidated release candidate and applies the changes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-cadence/index.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# this would be version 'release-1.6.x-latest-unvalidated' for 1.6\nhal config version edit --version release-M.N.x-latest-unvalidated\n\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Generating Nightly and Release Integration Test Links\nDESCRIPTION: This Liquid template generates links to nightly and release integration test results for each branch defined in the front matter.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/build-statuses/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% for branch in page.branches %}\n  {%- capture subject -%}{{branch | capitalize}}{%- endcapture -%}\n  {%- if branch == \"master\" -%}\n    {%- capture job -%}Flow_BuildAndValidate{%- endcapture -%}\n  {%- else -%}\n    {%- capture job -%}Flow_BuildAndValidate_{{branch | remove: \"release-\" | replace: \".\", \"_\"}}{%- endcapture -%}\n  {%- endif -%}\n* [![{{branch}} Build Status](https://builds.spinnaker.io/buildStatus/icon?job={{job}}&subject={{subject}}){:style=\"height: 25px\"}](https://builds.spinnaker.io/job/{{job}}/){:target=\"\\_blank\"}\n{% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Example Docker Artifact Event Log\nDESCRIPTION: Sample log output showing the structure of a Docker artifact published event with metadata\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/extending/integrate-your-CI/index.md#2025-04-09_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nReceived artifact published event: ArtifactPublishedEvent(artifacts=[PublishedArtifact(name=mce/agent, type=DOCKER,\n  reference=dockerRegistry:v2:testregistry:mce/agent, version=h2012.2626f5f, customKind=false, location=testregistry, artifactAccount=null, provenance=null, uuid=null, metadata={date=1607111907158, registry=testregistry, fullname=mce/agent, tag=tag, commitId=2626f5f, buildNumber=2012, branch=tags/v1.2.0^0}\n```\n\n----------------------------------------\n\nTITLE: Including Table of Contents in Spinnaker Documentation\nDESCRIPTION: Liquid template tag for including a table of contents in the Spinnaker documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/next-release-preview/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Spinnaker Installation using gcloud\nDESCRIPTION: This gcloud command is used to delete the Spinnaker installation by removing the associated compute instance after completing the codelab.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute instances delete $USER-spinnaker\n```\n\n----------------------------------------\n\nTITLE: Example Pub/Sub Message Payload with Parameter\nDESCRIPTION: JSON payload structure showing how to pass parameters to a Spinnaker pipeline via Pub/Sub message.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/triggers-with-artifactsrewrite/pubsub/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"parameters\": {\n    \"stack\": \"prod\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Cleanup Command\nDESCRIPTION: Command to clean up and tear down the Spinnaker deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/kubernetes-v2-source-to-prod/index.md#2025-04-09_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy clean\n```\n\n----------------------------------------\n\nTITLE: Redis Permission Storage Example\nDESCRIPTION: Example of how user permissions are stored in Redis using hash structures. Shows the format of permission data for applications with keys and JSON values.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authorization/index.md#2025-04-09_snippet_0\n\nLANGUAGE: redis\nCODE:\n```\nHGETALL spinnaker:fiat:permissions:__unrestricted_user__:applications\n1) \"app1\" \n2) \"{\\n  \\\"name\\\" : \\\"app1\\\",\\n  \\\"permissions\\\" : { }\\n}\"\n3) \"ncecs\"\n4) \"{\\n  \\\"name\\\" : \\\"app2\\\",\\n  \\\"permissions\\\" : { }\\n}\"\n5) \"cam\"\n6) \"{\\n  \\\"name\\\" : \\\"app3\\\",\\n  \\\"permissions\\\" : { }\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog for Spinnaker Version 1.24.0 using GitHub Gist\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.24.0. It uses a script tag to load the content dynamically from the specified Gist file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.6-changelog.md#2025-04-09_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Generating Swagger JSON for Gate API in Bash\nDESCRIPTION: Bash command to generate the swagger.json file for the Gate API. This is used when updating the Spin CLI to ensure compatibility with the latest Gate version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/release-manager-runbook/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./swagger/generate_swagger.sh\n```\n\n----------------------------------------\n\nTITLE: Installing Minnaker Scripts\nDESCRIPTION: Commands to download and unpack Minnaker installation scripts\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -LO https://github.com/armory/minnaker/releases/download/0.0.20/minnaker.tgz\ntar -xzvf minnaker.tgz\n```\n\n----------------------------------------\n\nTITLE: Setting OAuth2 Redirect URI via Halyard CLI\nDESCRIPTION: Command to configure the OAuth2 redirect URI using Halyard CLI.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config security authn oauth2 edit --pre-established-redirect-uri https://my-real-gate-address.com:8084/login\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Layout and Navigation in Jekyll\nDESCRIPTION: This YAML front matter sets up the page layout, title, and sidebar navigation for a Jekyll-based documentation site.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/gce.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Google Compute Engine\"\nsidebar:\n  nav: reference\n---\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Integration Support List\nDESCRIPTION: Lists the various integrations supported by Spinnaker including cloud providers, CI platforms, source repositories, messaging systems, and Docker registries.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/faqs/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Cloud providers\n* Amazon Web Services\n* Google Cloud Platform\n* Cloud Foundry\n* Kubernetes\n* Microsoft Azure\n* Netflix Titus ( coming soon )\n\n### CI platforms\n* Jenkins\n* Travis\n\n### Source repositories\n* GitHub\n* BitBucket Server / Stash\n\n### Messaging support\n* Email\n* Slack\n* Twilio\n\n### Docker Registries\n * Anything with support for the [v2 Docker Registry API](https://docs.docker.com/registry/spec/api/)\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Release Notes in JavaScript\nDESCRIPTION: JavaScript code to embed a GitHub Gist containing the release notes for Spinnaker version 1.24.0. The script references a specific file '1.24.0.md' from the gist created by the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Visualizing Spinnaker Bake Process with Mermaid Sequence Diagram\nDESCRIPTION: A sequence diagram showing the end-to-end flow of a bake operation in Spinnaker. The diagram illustrates how services communicate with each other from the initial CI/CD trigger through artifact publishing, pipeline execution, bake initiation, image creation, and status monitoring.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/loab/index.md#2025-04-09_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\nTitle: Life of a Bake\n\nparticipant Igor\nparticipant Jenkins\nparticipant ArtifactRepo\nparticipant Echo\nparticipant Front50\nparticipant Orca\nparticipant Rosco\nparticipant Packer\nparticipant Redis\nparticipant Cloud\n\nEcho->>Front50: Build cache of pipeline triggers\n\nJenkins->>ArtifactRepo: Publish newly-produced deployable asset (e.g. .deb/.rpm/.jar)\nNote right of Jenkins: Archive artifacts\n\nIgor->>Jenkins: Poll Jenkins for completed builds\nIgor->>Echo: Publish completed build info to eventing bus\n\nEcho->>+Orca: Initiate pipeline execution based on matched trigger\nOrca->>Redis: Persist new execution\nNote right of Orca: Orca uses the artifact details from the trigger to decorate the package name with version information\nOrca->>-Rosco: Request bake, passing package with exact version to install\n\nRosco->>Redis: Persist new bake\nRosco->>Packer: Initiate bake job, passing repo address (from config) and package/version\n\nPacker->>ArtifactRepo: Pull deployable asset from repo\nPacker->>Cloud: Publish machine image\n\nLoop In background thread\n  Rosco->>Packer: Poll until job completion\n  Rosco->>Redis: Mark bake completed\nend\n\nLoop In worker thread\n  Orca->>Rosco: Poll until task completion\n  Rosco->>Redis: Query bake status\n  Orca->>Redis: Update execution state\nend\n```\n\n----------------------------------------\n\nTITLE: Jekyll Include Statement\nDESCRIPTION: Liquid template include statement for table of contents generation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/index.md#2025-04-09_snippet_1\n\nLANGUAGE: liquid\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Defining ResourceKind Data Class in Kotlin\nDESCRIPTION: Defines a ResourceKind data class in the keel-api module for use with Jackson serialization.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_10\n\nLANGUAGE: kotlin\nCODE:\n```\ndata class ResourceKind(\n  val group: String,\n  val kind: String,\n  val version: String\n)\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Documentation Frontmatter in YAML\nDESCRIPTION: YAML frontmatter configuration for the documentation page defining layout, title and sidebar navigation settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/contributing/managing-deprecations.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle: \"Managing Deprecations\"\nsidebar:\n  nav: community\n---\n```\n\n----------------------------------------\n\nTITLE: Pipeline Variables Configuration\nDESCRIPTION: Structure for defining variable values in the pipeline configuration.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/pipeline-templates/instantiate.md#2025-04-09_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"variables\": {\n  \"varName\": <value>,\n  \"otherVarName\": <its_value>\n}\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of Post-Authentication Redirect in Spinnaker\nDESCRIPTION: This Mermaid sequence diagram illustrates the redirection process after successful authentication in Spinnaker, showing how Gate redirects the user back to the originally requested URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_4\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\nparticipant Deck\nparticipant Gate\nparticipant IdentityProvider\n\nactivate Gate\nNote right of Gate: Retrieved saved URL from session.\nGate->>-Deck: HTTP 302 /auth/redirect?to=deck.url\n\nDeck->>+Gate: GET /auth/redirect?to=deck.url\nNote right of Gate: URL is protected, but user is authenticated. Proceed!\nGate->>-Deck: HTTP 302 to deck.url\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.25.4 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.4 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Sequence Diagram of Initial Authentication Flow in Spinnaker\nDESCRIPTION: This Mermaid sequence diagram shows the initial steps of the authentication process in Spinnaker, including the interactions between Apache, Deck, Gate, and the Identity Provider when a user first accesses the system.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/architecture/authz_authn/authentication/index.md#2025-04-09_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n\nparticipant Apache\nparticipant Deck\nparticipant Gate\nparticipant IdentityProvider\n\nDeck->>+Apache: GET deck.url\nApache->>-Deck: Returns Deck's landing page\n\nDeck->>+Gate: GET /auth/user for user's identity\nNote right of Gate: No or expired session cookie.\nGate->>-Deck: Returns empty response\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.26.0 into the HTML page. It uses a script tag to load and display the content of the specified Gist file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 Redirect URI in YAML\nDESCRIPTION: Configuration snippet for manually setting the OAuth2 redirect URI in Spinnaker's security settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsecurity:\n  authn:\n    oauth2:\n      client:\n        preEstablishedRedirectUri: https://my-real-gate-address.com:8084/login\n```\n\n----------------------------------------\n\nTITLE: Jekyll Front Matter Configuration\nDESCRIPTION: Defines the Jekyll front matter configuration for the page, specifying the layout, title and navigation sidebar settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Developer How Tos\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Defining API Reference Page in Jekyll Markdown\nDESCRIPTION: This snippet configures a Jekyll page with a title 'API' and sidebar navigation. It provides links to API documentation and Swagger UI guide resources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/api/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: single\ntitle:  \"API\"\nsidebar:\n  nav: reference\n---\n\n- [API documentation](/reference/api/docs.html)\n- [Swagger UI Guide](/reference/api/swagger-ui) \n```\n\n----------------------------------------\n\nTITLE: Accessing Pipeline Parameters in SpEL\nDESCRIPTION: Demonstrates various ways to access parameters defined in the pipeline configuration using pipeline expressions. These examples show how to reference a parameter named 'stack'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/expressions/index.md#2025-04-09_snippet_2\n\nLANGUAGE: SpEL\nCODE:\n```\n${ execution.trigger.parameters[\"stack\"] }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ execution.trigger.parameters.stack }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ parameters[\"stack\"] }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ parameters.stack }\n```\n\n----------------------------------------\n\nTITLE: Accessing Pipeline Parameters in SpEL\nDESCRIPTION: Demonstrates various ways to access parameters defined in the pipeline configuration using pipeline expressions. These examples show how to reference a parameter named 'stack'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/pipeline/expressions/index.md#2025-04-09_snippet_2\n\nLANGUAGE: SpEL\nCODE:\n```\n${ execution.trigger.parameters[\"stack\"] }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ execution.trigger.parameters.stack }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ parameters[\"stack\"] }\n```\n\nLANGUAGE: SpEL\nCODE:\n```\n${ parameters.stack }\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Script for Spinnaker v1.25.2\nDESCRIPTION: Script tag that embeds a GitHub gist containing the changelog for Spinnaker version 1.25.2\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Displaying Simple Query Template in Markdown\nDESCRIPTION: This code snippet shows how to embed an image in Markdown, specifically displaying a simple query template in the Configure Metric dialog.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/canary/config/filter_templates/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Simple query template](/guides/user/canary/config/filter_templates/configure_metric_dialog.png)\n```\n\n----------------------------------------\n\nTITLE: Namespace Configuration in Kustomization File\nDESCRIPTION: YAML configuration for setting the Kubernetes namespace in the kustomization.yml file for the Spinnaker deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spin-contrib.md#2025-04-09_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\nnamespace: workshop-user\n\n# More configuration below.\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.25.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.4-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Jekyll Blog Redirects in YAML\nDESCRIPTION: YAML front matter configuration that sets up permalink and redirect rules for Spinnaker's blog. Redirects several legacy blog post URLs to the new blog domain while maintaining a consistent permalink structure.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_pages/blog.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\npermalink: /blog.html\nredirect_to: https://blog.spinnaker.io\nredirect_from:\n- /blog/google-source-to-prod-codelab-videos\n- /blog/q4-roadmap-published\n- /blog/announcing-gcp-https-support-in-spinnaker\n- /blog/scaling-spinnaker-at-netflix-the-basics\n- /blog/deploy-to-kubernetes-using-spinnaker\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter in Markdown\nDESCRIPTION: This snippet defines the YAML front matter for the Markdown document, specifying the layout, title, and sidebar navigation.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/concepts/pipelines/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Pipelines\"\nsidebar:\n  nav: concepts\n---\n```\n\n----------------------------------------\n\nTITLE: Styling Mailchimp Signup Form with CSS\nDESCRIPTION: Custom CSS styles for the Mailchimp signup form, including input field and submit button styling. The styles define the appearance of form elements, such as vertical alignment, margins, padding, and colors.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/news/index.md#2025-04-09_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\n.wj-contact-form input {\n    vertical-align: middle;\n    margin-top: 0.25em;\n    margin-bottom: 0.5em;\n    padding: 0.75em;\n    border:1px solid #444;\n    outline-color: #2e83e6;\n    border-radius: 3px;\n    transition: box-shadow .2s ease;\n    width: 55%;\n}\n\n.wj-contact-form input[type=\"submit\"] {\n    background-color: #139BB4;\n    border: 1px solid #139BB4;;\n    color: #eee;\n    width: 22%;\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.23.3 Release Notes\nDESCRIPTION: Script tag that embeds the markdown file containing the changelog for Spinnaker version 1.23.3 from a GitHub Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.4-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Including Table of Contents in Markdown\nDESCRIPTION: This snippet includes a table of contents in the Markdown document using a Liquid template tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/concepts/pipelines/index.md#2025-04-09_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% include toc %}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.25.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.25.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.4-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Example of Referencing Kubeconfig File from S3\nDESCRIPTION: This example demonstrates how to reference a kubeconfig file stored directly in the S3 bucket. It uses the 'encryptedFile' prefix and omits the 'k' parameter as it's not needed for file references.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/halyard/secrets/s3-secrets.md#2025-04-09_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nencryptedFile:s3!r:us-west-2!b:mybucket!f:mykubeconfig\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter block defining the page layout, title, sidebar navigation, and redirect rules.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/news/archive.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Archive\"\nsidebar:\n  nav: news\nredirect_from: /docs/articles-and-blog-posts\nredirect_from: /community/publications/\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Jekyll Front Matter for Documentation Page\nDESCRIPTION: YAML front matter configuration block for a Jekyll documentation page, setting up the page layout, title and navigation sidebar.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"User How-Tos\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker Changelog for Version 1.22.1 from GitHub Gist\nDESCRIPTION: This HTML script tag loads the changelog content for Spinnaker version 1.22.1 from a GitHub Gist. It references a specific file within the Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.6-changelog.md#2025-04-09_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Mailchimp Signup Form in HTML\nDESCRIPTION: HTML structure for the Mailchimp newsletter signup form. It includes an email input field, a hidden field for bot protection, and a submit button. The form is set up to post to a Mailchimp-specific URL for handling subscriptions.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/news/index.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"mc-field-group\">\n<form action=\"https://spinnaker.us3.list-manage.com/subscribe/post?u=337682949220da87810dfa7a7&amp;id=aae9b6cff0\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"wj-contact-form validate\" target=\"_blank\" novalidate>\n\t<input type=\"email\" value=\"\" name=\"EMAIL\" class=\"required email\" id=\"mce-EMAIL\" placeholder=\"foo@foo.fo\">\n<!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->\n    <div style=\"position: absolute; left: -5000px;\" aria-hidden=\"true\"><input type=\"text\" name=\"b_337682949220da87810dfa7a7_aae9b6cff0\" tabindex=\"-1\" value=\"\"></div>\n    <div class=\"clear\"><input type=\"submit\" value=\"Subscribe Now\" name=\"subscribe\" id=\"mc-embedded-subscribe\" class=\"heart\"></div>\n</form>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog for Spinnaker Version 1.24.2 using GitHub Gist\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.24.2. It uses a script tag to load the content dynamically from the specified Gist file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.6-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: Jekyll front matter configuration defining the page layout and navigation settings\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: single\ntitle:  \"Tutorials\"\nsidebar:\n  nav: guides\n---\n```\n\n----------------------------------------\n\nTITLE: Jekyll Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for Jekyll page layout, title, sidebar navigation and redirect settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Overview\"\nsidebar:\n  nav: setup\nredirect_from: /docs/securing-spinnaker\n---\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.22.3 Changelog Gist\nDESCRIPTION: Embeds GitHub gist containing changelog for Spinnaker version 1.22.3 using script tag\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.4-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Google URL Fixer Script\nDESCRIPTION: JavaScript configuration for Google's URL fixer service that helps users find the correct page. Sets the language to English and configures the site URL using a Jekyll variable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_pages/404.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar GOOG_FIXURL_LANG = 'en';\nvar GOOG_FIXURL_SITE = '{{ site.url }}'\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog for Spinnaker Version 1.24.5 using GitHub Gist\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.24.5. It uses a script tag to load the content dynamically from the specified Gist file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.6-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.5.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Datadog Dashboards\nDESCRIPTION: Command to install predefined Spinnaker operational dashboards in Datadog.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/datadog.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n/opt/spinnaker-monitoring/third_party/datadog/install.sh --dashboards_only\n```\n\n----------------------------------------\n\nTITLE: Viewing Spinnaker Version Component Details with Halyard\nDESCRIPTION: This command uses Halyard to display the commit hash and tag for each subcomponent in a specific Spinnaker version. It shows the detailed composition of a given version's Bill of Materials (BOM).\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/releases/versions.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhal version bom <version>\n```\n\n----------------------------------------\n\nTITLE: Displaying Spinnaker Cloud Providers Section in HTML\nDESCRIPTION: Renders the supported cloud providers section on the Spinnaker home page, including provider logos and layout.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/index.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"spin_cloud_providers\">\n  <img class=\"spin_cloud_providers__swoosh\" src=\"{{ \"assets/images/left-swoosh.svg\" | absolute_url }}\" alt=\"Spinnaker Swoosh\"/>\n  <div class=\"spin_cloud_providers__blue\">\n    <div class=\"spin_cloud_providers__wrapper\">\n      <h1 class=\"spin_cloud_providers__header\">Supported Cloud Providers</h1>\n      <div class=\"clearfix\">\n        {% include spinnaker_cloud_provider id=\"aws_provider\" %}\n        {% include spinnaker_cloud_provider id=\"gcp_provider\" %}\n        {% include spinnaker_cloud_provider id=\"k8s_provider\" %}\n        {% include spinnaker_cloud_provider id=\"oracle_provider\" %}\n      </div>\n      <div class=\"clearfix\">\n        {% include spinnaker_cloud_provider id=\"azure_provider\" %}\n        {% include spinnaker_cloud_provider id=\"appengine_provider\" %}\n        {% include spinnaker_cloud_provider id=\"cf_provider\" %}\n      </div>\n    </div>\n  </div>  \n</div>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.1 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.1 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Running Local Preview with Docker\nDESCRIPTION: Commands to build and run a Docker container for previewing the Spinnaker.io website locally. This approach uses the included Dockerfile in the root directory and mounts the current directory for live updates.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/README.md#2025-04-09_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ndocker build --tag spinnaker/spinnaker.github.io-test .\ndocker run -it --rm --mount \"type=bind,source=$(pwd),target=/code\" \\\n    -p 4000:4000 spinnaker/spinnaker.github.io-test --incremental\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker Changelog for Version 1.22.6 from GitHub Gist\nDESCRIPTION: This HTML script tag loads the changelog content for Spinnaker version 1.22.6 from a GitHub Gist. It references a specific file within the Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.6.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Defining Page Layout and Metadata in Jekyll Markdown\nDESCRIPTION: Sets up the Jekyll front matter for the Spinnaker home page, defining layout and content sections for various features and cloud providers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: home\nslack_row:\n  title: Join Spinnaker Slack\n  excerpt: \"[Join us on Spinnaker Slack](https://join.slack.com/t/spinnakerteam/shared_invite/zt-7juwxmx0-nQ4Ud4pJcbuPykX3SXwQrg) – a place for the community to come together. Use this vibrant workspace to ask and answer questions, connect with other operators and users, discuss issues with SIGs, and learn about Spinnaker!\"\n  image_path: assets/images/slack_logo.png\n  alt: \"Join Spinnaker Slack\"\n# ... (additional content sections)\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.5 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.5 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.2 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.2 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.8.4 Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.8.4. The gist is loaded via JavaScript to display the full release notes on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/ad1c07a861e61c1d4777da7b5c6bda24.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for a specific Spinnaker version. It uses a script tag to load the Gist content dynamically.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.8.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Enabling App Engine Provider in Spinnaker\nDESCRIPTION: Command to enable the App Engine provider in Spinnaker using Halyard\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/appengine.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider appengine enable\n```\n\n----------------------------------------\n\nTITLE: Listing Spinnaker Features in HTML\nDESCRIPTION: Creates a section listing key features of Spinnaker, using a grid layout with feature boxes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/index.md#2025-04-09_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<h1 class=\"spin__heading spin_cloud_providers__push_down\">Features List</h1>\n<div class=\"clearfix\">\n  {% include spinnaker_feature_box id=\"ci_integrations_feature\" %}\n  {% include spinnaker_feature_box id=\"monitoring_integrations_feature\" %}\n</div>\n<div class=\"clearfix\">\n  {% include spinnaker_feature_box id=\"cli_feature\" %}\n  {% include spinnaker_feature_box id=\"deployment_strategies_feature\" %}\n</div>\n<!-- ... (additional feature rows) -->\n```\n\n----------------------------------------\n\nTITLE: Injecting Extensions using ObjectProvider in Kotlin\nDESCRIPTION: Demonstrates how to use ObjectProvider for lazy resolution of extension point dependencies in a service component.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\n@Component\nclass MyServiceComponent(\n  val extensions: ObjectProvider<List<MyExtensionPoint>>\n) {\n\n  fun doingSomeBusiness() {\n    extensions.stream().peek { it.doStuff() }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.3 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.3 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.11.3. The Gist is loaded via a script tag pointing to the specific Gist URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.2. It uses a script tag to load the Gist content dynamically.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.6-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.8.5. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/19a850b9081d0fd00a9ac607dfc3d8e0.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker Changelog for Version 1.22.4 from GitHub Gist\nDESCRIPTION: This HTML script tag loads the changelog content for Spinnaker version 1.22.4 from a GitHub Gist. It references a specific file within the Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.6-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.19.2 Changelog\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.5-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog Scripts for Spinnaker 1.20.x in HTML\nDESCRIPTION: A collection of script tags that embed GitHub Gist content for Spinnaker changelog entries. Each script references markdown files containing release notes for specific point releases from 1.20.0 through 1.20.7.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.14.10 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog details for Spinnaker version 1.14.10. The script tag loads external JavaScript from GitHub's Gist service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.10-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/6bc45a1a71d21316a8816d67e0cd8648.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining an Oracle Object Storage Artifact in Spinnaker JSON Pipeline Configuration\nDESCRIPTION: This JSON snippet shows how to reference an Oracle Object Storage artifact in a Spinnaker pipeline definition. It specifies the artifact type as 'oracle/object' and provides the full path to the file using the 'oci://' prefix.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts-with-artifactsrewrite/types/oracle-object/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"oracle/object\",\n  \"reference\": \"oci://bucket/file.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Loading External Changelog Script in HTML\nDESCRIPTION: HTML script tag that loads an external GitHub gist containing the changelog content for Spinnaker version 1.12.10.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.10-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/09df518265e3c371a12c5eef7e946b56.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Scripts for Spinnaker Release Notes\nDESCRIPTION: Series of script tags that embed GitHub gists containing changelog content for each point release of Spinnaker 1.18, from versions 1.18.0 through 1.18.7\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Release Notes\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.2. The Gist ID references the specific release notes document.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/c4df80efb0852d53e14c5d845b86357a.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.13.1\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/fa0ac36aaf1a7daaa4320241beaf435d.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script for Changelog\nDESCRIPTION: HTML script tag that loads a GitHub gist containing the changelog content for Spinnaker version 1.13.6.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8748354e0de3ead0e5871eb1d0b5bbc6.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker v1.12.11\nDESCRIPTION: This HTML script tag embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.12.11. The gist is hosted at GitHub under the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.11-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/add79934575d84ed525d231f71d84dd3.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Release Changelog in HTML\nDESCRIPTION: HTML script tags that embed GitHub Gist content for Spinnaker version changelogs. Each script references a specific markdown file in the same Gist repository but targets different version files (1.18.0 through 1.18.3).\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog for Spinnaker Version 1.24.4 using GitHub Gist\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.24.4. It uses a script tag to load the content dynamically from the specified Gist file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.6-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.11.10. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.10-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Repo Artifact with SSH Authentication in Spinnaker\nDESCRIPTION: This JSON snippet demonstrates how to configure a Git Repo artifact using SSH authentication. It specifies the artifact type, repository URL, and branch version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/git-repo/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"type\": \"git/repo\",\n    \"reference\": \"git@github.com:spinnaker/spinnaker.github.io\",\n    \"version\": \"feat-123\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Gist Script - HTML\nDESCRIPTION: HTML script tag to embed a GitHub gist containing the changelog content for Spinnaker version 1.9.3.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.9.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d8e153dc21ba12261980b91e2350303a.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.17.3 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.3 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.0 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.0 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.11.12. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.12-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/29a01fa17afe7c603e510e202a914161.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.11.8. The gist ID references a specific changelog document.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.7.5 Changelog in HTML\nDESCRIPTION: HTML script tag used to embed a GitHub Gist containing the changelog for Spinnaker version 1.7.5. The Gist is referenced by its unique identifier.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/7e79eac4a20de7a9eaf9c620e07a9e61.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker 1.16.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.16.1. The Gist is referenced by ID '21ff4522a9e46ba5f27c52f67da88dc9' and loaded through a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/21ff4522a9e46ba5f27c52f67da88dc9.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist for Spinnaker v1.17.1 Release Notes\nDESCRIPTION: Script tag to dynamically load the changelog content for Spinnaker version 1.17.1 from a GitHub gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog Script in HTML\nDESCRIPTION: Script tag to embed a GitHub Gist containing the changelog for Spinnaker version 1.10.14. Uses external JavaScript to load and display the gist content.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.14-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/a47efe1884b4611f57f0966173bf4f51.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.11.7 Changelog in HTML\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.11.7. The Gist is sourced from the spinnaker-release GitHub account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Excluding Redis and JVM Metrics in YAML Filter\nDESCRIPTION: Shows how to configure a filter that excludes all Redis and JVM metrics using regex patterns. This filter will allow all other metrics to be forwarded.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/monitoring/index.md#2025-04-09_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmonitoring:\n  filters:\n    meters:\n      excludeNameRegex:\n        - redis.*\n        - jvm.*\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.13.12. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.12-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/9ee98b0cbed65e334cd498bc31676295.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.20.4 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.4 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the detailed changelog for Spinnaker version 1.15.4.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.15.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/2229c2172952e9a485d68788bd4560b0.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.16.3 using a script tag. The Gist is hosted on GitHub and is dynamically loaded into the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/ed2aecde0852cd934867d1225fe3b9cd.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading External Changelog Content with JavaScript\nDESCRIPTION: Embeds a JavaScript file from GitHub Gist that contains the raw changelog content for Spinnaker version 1.10.x. The script loads the changelog data from a specific commit in the spinnaker-release repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<script src=\"https://gist.githubusercontent.com/spinnaker-release/4f8cd09490870ae9ebf78be3be1763ee/raw/b311a828caab17fa3a02e6884905deb1ac06dd09/release-1.10.x-raw-changelog.md.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script - HTML\nDESCRIPTION: Embeds a GitHub gist containing Spinnaker 1.13.9 release notes using script tag inclusion.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.9-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/52fffe257a3d39bb1d44e775b0ac9efa.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script - HTML\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog content for Spinnaker version 1.16.5.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/12f98139a3cb3a126bfe3cfce44ebc69.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.13.11 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.13.11. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.11-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5a0199c148826b688ffad5949e050654.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.20.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.1 using a script tag. The Gist is sourced from the spinnaker-release GitHub account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.10.2 Changelog in HTML\nDESCRIPTION: This HTML code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.10.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cf93cc68547ae25e3d6061c09a37f8c0.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Front50 Migration in YAML Configuration\nDESCRIPTION: YAML configuration to enable the migrator in Front50. This is a crucial step in the migration process from S3 to SQL storage.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/persistence/front50-sql.md#2025-04-09_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nspinnaker:\n  migration:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.10.7 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.10.7. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.20.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.0 using a script tag. The Gist is sourced from the same spinnaker-release GitHub account as the previous snippet.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.1-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog Script\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog details for Spinnaker version 1.13.5\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/23af06bc73aa942c90f89b8e8c8bed3e.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: Embeds a GitHub gist containing the changelog content for Spinnaker version 1.14.11 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.11-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/76e14bf88350b9b84d6e8d5904647cb0.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Converting Gate Certificate to PKCS12\nDESCRIPTION: Converts the Gate certificate and private key into PKCS12 format for Java Keystore import. Uses GATE_KEY_PASSWORD for key decryption and GATE_EXPORT_PASSWORD for P12 file encryption.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nopenssl pkcs12 \\\n  -export \\\n  -clcerts \\\n  -in gate.crt \\\n  -inkey gate.key \\\n  -out gate.p12 \\\n  -name gate \\\n  -passin pass:${GATE_KEY_PASSWORD} \\\n  -password pass:${GATE_EXPORT_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.26.1 Changelog in HTML\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.26.1. The Gist is loaded from the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.7.6 Changelog in HTML\nDESCRIPTION: A script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.7.6. The gist is loaded from the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5d3af465f07eaca64f4383167877897d.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.23.0 Release Notes\nDESCRIPTION: Script tag that embeds the markdown file containing the changelog for Spinnaker version 1.23.0 from a GitHub Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.4-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: Embeds a GitHub Gist containing the changelog details for Spinnaker version 1.10.11 using a script tag. The Gist is referenced by its unique identifier.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.11-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script - HTML\nDESCRIPTION: HTML script tag to load an external GitHub gist containing the changelog content for Spinnaker version 1.11.13.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.13-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/c3fdb3c0475ca8f08920e643bb2e4fcf.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Creating Gate Server Key\nDESCRIPTION: Generates a 4096-bit RSA private key for Gate using triple DES encryption. The key is protected with a passphrase stored in GATE_KEY_PASSWORD environment variable.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nopenssl genrsa \\\n  -des3 \\\n  -out gate.key \\\n  -passout pass:${GATE_KEY_PASSWORD} \\\n  4096\n```\n\n----------------------------------------\n\nTITLE: Defining a Docker Image Artifact in JSON\nDESCRIPTION: Example JSON structure for a Docker image artifact in Spinnaker. The structure includes the type, reference, name, and version fields, showing how to reference a container image using a SHA digest.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/artifacts/types/docker-image/index.md#2025-04-09_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"docker/image\",\n  \"reference\": \"gcr.io/project/my-image@sha256:28f82eba\",\n  \"name\": \"gcr.io/project/my-image\",\n  \"version\": \"sha256:28f82eba\"\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.14.6 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.14.6. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/3eeb3e0cd59152a17be97ad0c808d225.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.14.2 Changelog in HTML\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.14.2. The Gist is referenced by ID a9c4858f87744addbca7ddc4976e454c.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/a9c4858f87744addbca7ddc4976e454c.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.15.7\nDESCRIPTION: A script tag that embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.15.7. The Gist is hosted under the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.15.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8203c57d946e2fce8a79031716a9cb45.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script in HTML\nDESCRIPTION: Script tag to embed a GitHub gist containing changelog details for Spinnaker version 1.10.9. The gist is loaded asynchronously from GitHub's servers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.9-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.18.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.2-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Setting SSL-related Environment Variables for Spinnaker\nDESCRIPTION: This bash script sets environment variables for various passwords and passphrases used in the SSL configuration process for Spinnaker components.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/ssl.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nCA_KEY_PASSWORD=SOME_PASSWORD_FOR_CA_KEY\nDECK_KEY_PASSWORD=SOME_PASSWORD_FOR_DECK_KEY\nGATE_KEY_PASSWORD=SOME_PASSWORD_FOR_GATE_KEY\nJKS_PASSWORD=SOME_JKS_PASSWORD\nGATE_EXPORT_PASSWORD=SOME_PASSWORD_FOR_GATE_P12\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script - HTML\nDESCRIPTION: Embeds a GitHub Gist containing changelog information for Spinnaker version 1.11.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Script for Spinnaker v1.23.1\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog for Spinnaker version 1.23.1.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.2-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.22.4 Changelog Gist\nDESCRIPTION: Embeds GitHub gist containing changelog for Spinnaker version 1.22.4 using script tag\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.22.4 Changelog Gist\nDESCRIPTION: Embeds GitHub gist containing changelog for Spinnaker version 1.22.4 using script tag\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.9.2 using a script tag. The Gist ID is 9323c90ab2088d89e68ce2a7ef7e5809.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.9.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/9323c90ab2088d89e68ce2a7ef7e5809.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.9.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.9.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.9.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/942a9ed21d2555ae15b82a036a140e3a.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Redeploying Spinnaker with Updated Configuration in Bash\nDESCRIPTION: Final command to apply all configuration changes and redeploy Spinnaker using Halyard.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-public/index.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Handling Extension Creation Events in Kotlin\nDESCRIPTION: Shows how to use ApplicationEventListener to listen for ExtensionCreated events and update internal caches.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\n@Component\nclass MyServiceComponent(\n  private val extensions: MutableList<MyExtensionPoint> = mutableListOf()\n) {\n\n  @EventListener(ExtensionCreated::class)\n  private fun onExtensionCreated(e: ExtensionCreated) {\n    extensions.add(e.bean)\n  }\n\n  fun doingSomeBusiness() {\n    extensions.forEach { it.doStuff() }\n  }  \n}\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script for Spinnaker v1.26.2 Changelog\nDESCRIPTION: Script tag that embeds the GitHub Gist containing changelog details for Spinnaker version 1.26.2\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.26.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3714a97bbdd3e7c3b4d92adec938e7f.js?file=1.26.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker v1.24.2\nDESCRIPTION: Script tag to embed the GitHub Gist containing changelog details for Spinnaker version 1.24.2\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.7.8 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.8. The Gist is loaded asynchronously using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75f98544672a4fc490d451c14688318e.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist that contains the changelog for Spinnaker version 1.8.7. The script tag loads the content from the specified Gist ID.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/ebb5e45e84de5b4381b422e3c8679b5a.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.10.5 Changelog in HTML\nDESCRIPTION: A script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.10.5. The Gist is loaded from the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/1e97e8c6991e750fa12a70325221da45.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Applying Spinnaker Configuration Changes in Bash\nDESCRIPTION: Commands to apply configuration changes to Spinnaker using Halyard and connect to the deployment.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/quickstart/halyard-gke-public/index.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal deploy apply\n\n# wait for services to come up...\n\nhal deploy connect\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Release Notes in HTML\nDESCRIPTION: A series of script tags that embed GitHub gist content for Spinnaker version 1.25.x release notes. Each script loads a specific markdown file containing version-specific changelog information.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker v1.10.0 Changelog in HTML\nDESCRIPTION: Embeds a GitHub Gist containing the changelog details for Spinnaker version 1.10.0 using a script tag. The Gist ID is 5d4302d6ce01688de07a9977b210dbfc.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5d4302d6ce01688de07a9977b210dbfc.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.7.0 in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/78f2f3d55bc849c3a71939287e6b2cb4.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: A script tag that embeds a GitHub Gist containing the changelog details for Spinnaker version 1.8.6. The Gist is referenced by its unique identifier and loaded asynchronously.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/0844fadacaf2299d214a82e88217d97c.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the detailed changelog information for Spinnaker v1.15.3. The Gist is loaded dynamically from the specified URL.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.15.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/bed366b82e09498dbb536c098ac11f14.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Updating Spinnaker Version Using Halyard\nDESCRIPTION: Commands to set a new Spinnaker version and apply the changes. The process involves specifying the desired version and deploying the update using hal deploy apply.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/upgrades.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhal config version edit --version $VERSION\n\n# this will update Spinnaker\nhal deploy apply\n```\n\n----------------------------------------\n\nTITLE: Applying Stability Annotations to Extension Points\nDESCRIPTION: Use @Alpha and @Beta annotations from kork-annotations to indicate the stability level of extension points in the API module.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/backend.md#2025-04-09_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Alpha\n```\n\nLANGUAGE: java\nCODE:\n```\n@Beta\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Gist Scripts for Spinnaker Release Notes\nDESCRIPTION: HTML script tags that embed GitHub gist content containing changelog information for different Spinnaker 1.25.x releases. Each script references a specific markdown file within the same gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.25.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/83c1a4069029bfd79d11ad8e8bf1d326.js?file=1.25.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding Spinnaker Changelog Gists in HTML\nDESCRIPTION: This code embeds multiple GitHub Gist scripts to display Spinnaker changelogs for versions 1.18.0 through 1.18.11. Each script references a specific markdown file from the same gist repository containing detailed release notes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.11-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.11.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.10.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.9.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.18.2 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.8.2 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.8.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.8.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/30caa31c9e5e02eb636c061a79a291f1.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.7.3 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.7.3. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.7.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/2574a5bbdf23a29108b74b0536c2326c.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker v1.24.1\nDESCRIPTION: Script tag to embed the GitHub Gist containing changelog details for Spinnaker version 1.24.1\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.24.3-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/25abcd046795c6f34bb2d8d4977f0415.js?file=1.24.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding Spinnaker Changelog Scripts in HTML\nDESCRIPTION: A collection of script tags that embed GitHub Gist content for Spinnaker changelogs. Each script loads a specific version's changelog (1.17.0 through 1.17.5) from a GitHub Gist maintained by the spinnaker-release account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.16.4. The Gist is referenced using a script tag pointing to the specific Gist ID.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/69c7292b0c93d410602cd538839cac57.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.2.1 Changelog in HTML\nDESCRIPTION: This code embeds a GitHub gist containing the changelog details for Spinnaker version 1.2.1. The gist is loaded via a script tag pointing to the GitHub gist service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.2.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/512f9f19181c4c19b5d614c44aa9bcaf.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog Script\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.14.8\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/f223e8c3790e2ded5cfde046965e658d.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Generating Service Account Key\nDESCRIPTION: Command to generate a new service account key file for authentication.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/pubsub-to-appengine/index.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nrm $SERVICE_ACCOUNT_DEST && gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST \\\n    --iam-account $SA_EMAIL\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Script for Spinnaker v1.23.0\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog for Spinnaker version 1.23.0.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.2-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.17.2 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.4.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.4.1. The Gist is loaded via a script tag, which will render the content on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.4.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/87ffcdd472d315d75877312de01bb05d.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.1.0 Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the changelog for Spinnaker version 1.1.0. The Gist is loaded via a script tag pointing to the GitHub Gist JavaScript file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.1.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/1b02cdba17f78c3dc9f4210d09610ac8.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script in HTML\nDESCRIPTION: Script tag to embed a GitHub Gist containing the changelog content for Spinnaker version 1.22.0\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.4. It uses a script tag to load the Gist content dynamically.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.6-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.14.1. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/4b4bb42d4e3b6073fbd5f89fa7c3e060.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.10.6. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub Gist containing the changelog content for Spinnaker version 1.0.1. The Gist is loaded asynchronously from GitHub's servers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.0.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/b3515a47abbcdc86f0cfdc2bd6cb8a17.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading GitHub Gist Script - Spinnaker v1.23.2\nDESCRIPTION: Script tag to embed GitHub gist containing release notes for Spinnaker version 1.23.2\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.23.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/94280a2b615adccd975eed73359023ac.js?file=1.23.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Tenant ID in Gate Service Settings\nDESCRIPTION: YAML configuration for adding the Azure Tenant ID as an environment variable in Spinnaker's Gate service settings file.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/security/authentication/oauth/azure/index.md#2025-04-09_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  azureTenantId: (your tenant id)\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.9 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.9 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.13.0 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.13.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e71d2c5e2f6016b6956970eccc550848.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.4.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.4.0. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.4.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/52f2f6660077125e05808583c5bf63ee.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.20.0 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub gist containing the changelog markdown for Spinnaker version 1.20.0. The script references a specific file within gist 75d50c7b931f1089e710a0e9d1acf8c4.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.19.0 Changelog\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.5-changelog.md#2025-04-09_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.4 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.4 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker v1.16.2 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.16.2 using a script tag. The Gist is hosted on GitHub and provides detailed information about changes, updates, and fixes in this release.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.16.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e3c8e375fdee0d7d1bd63a8fd9777255.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the changelog details for Spinnaker version 1.14.13. The gist is loaded via a script tag pointing to the specific gist ID b34693ccf20a58c5a63e58e046310dee.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.14.13-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/b34693ccf20a58c5a63e58e046310dee.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Spinnaker Alert Tag Creation\nDESCRIPTION: Example of creating an alert tag for a server group using the Spinnaker API.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/user/tagging/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X \"POST\" \"http://gate/tags?entityId=spintest-v003&entityType=servergroup&account=test&region=us-west-2&cloudProvider=aws&application=app\" \\\n     -H \"Content-Type: application/json\" \\\n     -d $'[\n  {\n    \"name\": \"spinnaker_ui_alert:autoscaling:ec2_instance_launch_error\",\n    \"namespace\": \"my_namespace\",\n    \"value\": {\n      \"message\": \"You have exceeded the number of VPC security groups allowed per instance. Launching EC2 instance failed.\",\n      \"type\": \"alert\"\n    },\n    \"valueType\": \"object\"\n  }\n]'\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker v1.18.0 Changelog\nDESCRIPTION: Script tag embedding a GitHub gist containing the changelog for Spinnaker version 1.18.0\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.1-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.20.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.4-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs\nDESCRIPTION: A series of script tags that embed GitHub Gist content containing changelog information for different patch versions of Spinnaker 1.19. Each script loads a separate markdown file containing release notes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.14-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.14.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.13.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.12.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.11.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.10.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.9.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.8.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.0. The script references a specific file '1.18.0.md' from the gist created by the 'spinnaker-release' user.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Kubernetes NetworkPolicies Resource Table\nDESCRIPTION: Markdown table showing management capabilities and stability requirements for Kubernetes NetworkPolicy resources.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/reference/providers/kubernetes-v2/index.md#2025-04-09_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| __Resource__ | _Deploy_ | _Delete_ | Versioned | Stability |\n|-|:-:|:-:|:-:|-|\n| __`NetworkPolicy`__ | Yes | Yes | No | Automatically [stable](#accommodating-level-based-deployments). |\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script for Spinnaker Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.12.8. The gist ID is 73fa0d0112cb49c8e58bf463a6cb5e3a.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/73fa0d0112cb49c8e58bf463a6cb5e3a.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Deck Plugin Manifest in JSON\nDESCRIPTION: This JSON configuration specifies the plugin information for Deck, including the plugin ID, URL, and version.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/developer/plugins/testing/deck-plugin.md#2025-04-09_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n[\n\t{\n\t\t\"id\": \"Armory.RandomWaitPlugin\",\n\t\t\"url\": \"./plugins/index.js\",\n\t\t\"version\": \"1.1.14\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Scripts for Spinnaker Changelogs in HTML\nDESCRIPTION: A collection of script tags that embed GitHub Gist content for various Spinnaker version 1.17 changelogs. Each script references a specific markdown file containing release notes for a particular point release from 1.17.0 to 1.17.9.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.9-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.9.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.8.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.6 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.6 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.6.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Adding App Engine Account to Spinnaker\nDESCRIPTION: Command to add an App Engine account to Spinnaker's configuration using Halyard\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/install/providers/appengine.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhal config provider appengine account add my-appengine-account \\\n  --project $PROJECT \\\n  --json-path $SERVICE_ACCOUNT_DEST\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.2 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.2 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.17.0 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.3-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating Sponsors Section with HTML and CSS\nDESCRIPTION: HTML structure for displaying sponsors logos and information, using flex layout for centered alignment of sponsor content.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spinnaker-product-box.md#2025-04-09_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"display: flex; justify-content: center; flex-direction: column; align-items: center;\">\n  <div style=\"padding: 20px; text-align:center; display: flex; justify-content: center; flex-direction: column; align-items: center;\">\n    <img src=\"../ccc-logo.png\" stlye=\"padding: 20px;\" alt=\"Capital Carbon Consulting Logo\" />\n    Workshop Presented by Capital Carbon Consulting\n  </div>\n  <div style=\"padding: 20px;\">\n    <img src=\"../Armory_logo.png\" stlye=\"padding: 20px;\" alt=\"Armory logo\" width=\"200px\" />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Script in HTML\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing Spinnaker v1.12.1 release notes and changelog information.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.12.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/349d826502e0bc0a3e4a7ec247b9e8b4.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.11.2. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.2-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Video in HTML\nDESCRIPTION: HTML code for embedding a YouTube video about the Spinnaker Product Box Design Workshop with proper iframe attributes.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/community/gardening/spinnaker-product-box.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/dwdVwE52KkU\" frameborder=\"0\" allowfullscreen></iframe>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.10.13 Changelog in HTML\nDESCRIPTION: This code embeds a GitHub Gist containing the changelog details for Spinnaker version 1.10.13. The Gist is loaded via JavaScript from GitHub's gist service.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.13-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/8c6e6abe2a0016b823b900523e82cba1.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.10.4 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the detailed changelog for Spinnaker version 1.10.4. The Gist is loaded using a script tag with the source URL pointing to the specific Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.10.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/73dba039067da5fbae6ec0b97b97e2f4.js\"/>\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Documentation Page\nDESCRIPTION: YAML configuration block defining the page layout and navigation settings for the documentation page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/ci/index.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: single\ntitle:  \"Overview\"\nsidebar:\n  nav: setup\n---\n```\n\n----------------------------------------\n\nTITLE: Loading Google URL Fixer Script\nDESCRIPTION: Script tag that loads Google's URL fixer widget from their CDN to provide search functionality on the 404 page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_pages/404.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\"\n  src=\"//linkhelp.clients.google.com/tbproxy/lh/wm/fixurl.js\">\n</script>\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for a Jekyll documentation page defining the layout, title and navigation sidebar settings.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/setup/productionize/scaling/index.md#2025-04-09_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nlayout: single\ntitle:  \"Configure Scaling\"\nsidebar:\n  nav: setup\n---\n```\n\n----------------------------------------\n\nTITLE: SSH into Spinnaker VM with Port Forwarding\nDESCRIPTION: This command establishes an SSH connection to the Spinnaker VM while forwarding local ports 9000 and 8084 to access Spinnaker's UI and API servers.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/guides/tutorials/codelabs/appengine-source-to-prod/index.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute ssh $USER-spinnaker --ssh-flag=\"-L 9000:localhost:9000\" --ssh-flag=\"-L 8084:localhost:8084\"\n```\n\n----------------------------------------\n\nTITLE: Jekyll Front Matter Configuration for Spinnaker v1.15.3 Changelog\nDESCRIPTION: YAML front matter that configures the Jekyll page metadata for the Spinnaker v1.15.3 changelog. It defines the page title, changelog title, publication date, tags, and version number.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.15.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Version 1.15\nchangelog_title: Version 1.15.3\ndate: 2019-08-26 17:09:31 \ntags: changelogs 1.15 deprecated\nversion: 1.15.3\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.6.0. It uses a script tag to load and display the Gist content on the page.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.6.0-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/235774d2d17f3bd96d3ed6c446b065a4.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: A script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.5.4. The Gist is loaded from the spinnaker-release GitHub account.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.5.4-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/6b9fd632caeaefd32246074998af8498.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.22.0 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.22.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.3-changelog.md#2025-04-09_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.22.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.22.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.3-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.22.3 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub gist containing the changelog for Spinnaker version 1.22.3 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.3-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.22.0 Release Notes\nDESCRIPTION: HTML script tag to embed the GitHub gist containing changelog for Spinnaker version 1.22.0\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.22.1-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/e457272b5aac37a5c6512b80b0c53d5f.js?file=1.22.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.21.2 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.2 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.21.3-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.2.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.21.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.21.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.21.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/98c3bab183b507662a8f5524e54626d4.js?file=1.21.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.20.6. It uses a script tag to load the Gist content dynamically.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.20.6-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/75d50c7b931f1089e710a0e9d1acf8c4.js?file=1.20.6.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog Scripts for Spinnaker 1.19\nDESCRIPTION: HTML script tags that embed GitHub Gist content containing changelog information for Spinnaker version 1.19.0 through 1.19.7. Each script loads a separate markdown file with the release notes for a specific point release.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.19.1 Changelog\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.5-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.19.4 Changelog\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.4 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.5-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.4.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Version 1.19.5 Changelog\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.5 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.5-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.5.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Changelog Gist for Spinnaker 1.19.0\nDESCRIPTION: Embeds a GitHub gist containing the changelog for Spinnaker version 1.19.0 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.2-changelog.md#2025-04-09_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist Changelog for Spinnaker 1.19.11 in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.19.11 using a script tag. The Gist is hosted on GitHub and belongs to the user 'spinnaker-release'.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.19.11-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/cc4410d674679c5765246a40f28e3cad.js?file=1.19.11.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker 1.18.1 Changelog in HTML\nDESCRIPTION: This code snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.18.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.5-changelog.md#2025-04-09_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker Changelog Gists in HTML\nDESCRIPTION: HTML script tags that embed GitHub Gist content for Spinnaker version 1.18 changelogs. Each script loads a specific version's changelog markdown file from a central Gist repository.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.18.12-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.12.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.11.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.10.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.9.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.8.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.7.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.6.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.5.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.4.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.3.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.2.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.1.md\"></script>\n<script src=\"https://gist.github.com/spinnaker-release/306d7e241272980642e918f64ed91fe3.js?file=1.18.0.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Loading Spinnaker 1.17.3 Changelog from GitHub Gist\nDESCRIPTION: This script tag loads the changelog content for Spinnaker version 1.17.3 from a GitHub Gist. It references a specific file within the Gist.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.8-changelog.md#2025-04-09_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.3.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker v1.17.1 Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.17.1 using a script tag.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.17.2-changelog.md#2025-04-09_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d020714e9190763f27e35701e14c6bc1.js?file=1.17.1.md\"></script>\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Gist Script for Changelog\nDESCRIPTION: HTML script tag that embeds a GitHub gist containing the changelog details for Spinnaker version 1.13.8.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.8-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/04e08d4c3fd30e0c65393b6199dfb41b.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Including GitHub Gist for Spinnaker Changelog\nDESCRIPTION: Embeds a GitHub Gist containing the changelog for Spinnaker version 1.13.7 using a script tag that references the external Gist resource.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.13.7-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/6588f03010bea59df5c4852bc1e1bba9.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: A script tag that embeds a GitHub Gist containing the changelog for Spinnaker version 1.11.9. The Gist is hosted at the URL specified in the src attribute.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.11.9-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/5cbb402297feb85f82482a73e9428967.js\"/>\n```\n\n----------------------------------------\n\nTITLE: Embedding GitHub Gist for Spinnaker Changelog in HTML\nDESCRIPTION: This snippet embeds a GitHub Gist containing the changelog for Spinnaker version 1.1.1 using a script tag. The Gist is referenced by its unique identifier.\nSOURCE: https://github.com/spinnaker/spinnaker.github.io/blob/master/_changelogs/1.1.1-changelog.md#2025-04-09_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://gist.github.com/spinnaker-release/d223113b2967deb1272b5f8bffa7645a.js\"></script>\n```"
  }
]
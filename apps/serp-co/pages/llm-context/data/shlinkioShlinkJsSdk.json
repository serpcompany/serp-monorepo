[
  {
    "owner": "shlinkio",
    "repo": "shlink-js-sdk",
    "content": "TITLE: Initializing ShlinkApiClient with FetchHttpClient\nDESCRIPTION: Basic setup example showing how to initialize the Shlink API client with proper typing and configuration. It demonstrates creating a server info object and initializing the client with the FetchHttpClient implementation.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { ServerInfo } from '@shlinkio/shlink-js-sdk';\nimport { ShlinkApiClient } from '@shlinkio/shlink-js-sdk';\nimport { FetchHttpClient } from '@shlinkio/shlink-js-sdk/fetch';\n\nconst serverInfo: ServerInfo = {\n  baseUrl: 'https://s.test',\n  apiKey: '12345',\n};\nconst apiClient = new ShlinkApiClient(new FetchHttpClient(), serverInfo);\n```\n\n----------------------------------------\n\nTITLE: Creating a New Short URL with Shlink API in TypeScript\nDESCRIPTION: Shows how to create a new short URL with various options like custom slug, maximum visits limit, and validity period. Returns the newly created short URL object.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/short-urls.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst shortUrl = await apiClient.createShortUrl({\n  longUrl: 'https://shlink.io',\n  customSlug: 'shlink',\n  maxVisits: 1000,\n  validSince: '2022-05-01T00:00:00+01:00'\n});\n\nconsole.log(`Short URL: ${shortUrl.shortUrl}`);\nconsole.log(`Long URL: ${shortUrl.longUrl}`);\n```\n\n----------------------------------------\n\nTITLE: Listing Short URLs with Shlink API in TypeScript\nDESCRIPTION: Demonstrates how to retrieve a list of short URLs using the ShlinkApiClient. The result contains an array of short URL objects with properties like shortUrl and longUrl.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/short-urls.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst result = await apiClient.listShortUrls();\n\nresult.data.forEach((shortUrl) => {\n  console.log(`Short URL: ${shortUrl.shortUrl}`);\n  console.log(`Long URL: ${shortUrl.longUrl}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing ShlinkApiClient with FetchHttpClient in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a ShlinkApiClient instance using the FetchHttpClient, which is compatible with environments where globalThis.fetch is available.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/getting-started/http-clients.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ShlinkApiClient } from '@shlinkio/shlink-js-sdk';\nimport { FetchHttpClient } from '@shlinkio/shlink-js-sdk/fetch';\n\nconst serverInfo = { baseUrl: 'https://s.test', apiKey: '12345' };\nconst apiClient = new ShlinkApiClient(new FetchHttpClient(), serverInfo);\n```\n\n----------------------------------------\n\nTITLE: Fetching Visits for a Specific Short URL in TypeScript\nDESCRIPTION: This snippet shows how to retrieve all visits for a specific short URL using its shortCode. It also demonstrates how to access visit details like referer, user agent, and visit date.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst shortUrlVisits = await apiClient.getShortUrlVisits({ shortCode: 'abc123' });\n\nshortUrlVisits.data.forEach((visit) => {\n  console.log(visit.referer);\n  console.log(visit.userAgent);\n  console.log(visit.date);\n  console.log(visit.visitedUrl);\n  console.log(visit.redirectUrl);\n});\nconsole.log(shortUrlVisits.pagination);\n```\n\n----------------------------------------\n\nTITLE: Editing a Short URL with Shlink API in TypeScript\nDESCRIPTION: Shows how to update properties of an existing short URL such as crawlability, visit limits, title, and tags. Returns the updated short URL object.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/short-urls.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst shortUrl = await apiClient.editShortUrl(\n  { shortCode: 'abc123', domain: 's.test' },\n  {\n    crawlable: true,\n    maxVisits: 2000,\n    title: null,\n    tags: ['videogames', 'ai'],\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Short URL in TypeScript\nDESCRIPTION: Demonstrates how to fetch a specific short URL by its shortCode. Returns a shortUrl object containing details about the requested short URL.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/short-urls.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst shortUrl = await apiClient.getShortUrl({ shortCode: 'abc123' });\n\nconsole.log(`Short URL: ${shortUrl.shortUrl}`);\nconsole.log(`Long URL: ${shortUrl.longUrl}`);\n```\n\n----------------------------------------\n\nTITLE: Filtering Short URLs List with Shlink API in TypeScript\nDESCRIPTION: Shows how to filter the list of short URLs by searchTerm, tags, and ordering options. The result includes both the data array and pagination information.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/short-urls.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst result = await apiClient.listShortUrls({\n  searchTerm: 'foobar',\n  tags: ['videogames', 'development'],\n  orderBy: {\n    field: 'title',\n    dir: 'DESC',\n  },\n});\n\nresult.data.forEach((shortUrl) => {\n  console.log(`Short URL: ${shortUrl.shortUrl}`);\n  console.log(`Long URL: ${shortUrl.longUrl}`);\n});\nconsole.log(result.pagination);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Visits Overview in TypeScript with Shlink SDK\nDESCRIPTION: This snippet demonstrates how to get a visits overview that includes counts for both orphan and non-orphan visits using the Shlink API client.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst overview = await apiClient.getVisitsOverview();\n\nconsole.log(`Non-orphan visits: ${overview.nonOrphanVisits.total}`);\nconsole.log(`Orphan visits: ${overview.orphanVisits.total}`);\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom HTTP Client for ShlinkApiClient in TypeScript\nDESCRIPTION: This snippet illustrates how to create and use a custom HTTP client implementation with ShlinkApiClient. It shows the basic structure of implementing the HttpClient interface.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/getting-started/http-clients.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpClient } from '@shlinkio/shlink-js-sdk';\nimport { ShlinkApiClient } from '@shlinkio/shlink-js-sdk';\n\nclass MyHttpClient implements HttpClient {\n  // ...\n}\n\nconst serverInfo = { baseUrl: 'https://s.test', apiKey: '12345' };\nconst apiClient = new ShlinkApiClient(new MyHttpClient(), serverInfo);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Short URL with Shlink API in TypeScript\nDESCRIPTION: Demonstrates how to delete a short URL by providing its shortCode and domain. This operation has no return value.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/short-urls.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nawait apiClient.deleteShortUrl({ shortCode: 'abc123', domain: 's.test' });\n```\n\n----------------------------------------\n\nTITLE: Setting Short URL Redirect Rules in Shlink JS SDK\nDESCRIPTION: This snippet shows how to set redirect rules for a short URL using the Shlink API client. It demonstrates creating a rule with a specific destination URL and conditions based on language and query parameters.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/redirect-rules.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nawait apiClient.setShortUrlRedirectRules(\n  { shortCode: 'abc123' },\n  {\n    redirectRules: [\n      {\n        longUrl: 'https://example.com/long-url',\n        conditions: [\n          {\n            type: 'language',\n            matchValue: 'en-US',\n          },\n          {\n            type: 'query-param',\n            matchKey: 'foo',\n            matchValue: 'bar',\n          },\n        ],\n      }\n    ],\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Filtering Short URL Visits with Parameters in TypeScript\nDESCRIPTION: This snippet demonstrates applying filters when retrieving short URL visits, such as excluding bot traffic and specifying a start date for the visits to retrieve.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst shortUrlVisits = await apiClient.getShortUrlVisits(\n  { shortCode: 'abc123' },\n  {\n    excludeBots: true,\n    startDate: '2022-01-01T00:00:00+00:00',\n  }\n);\n\nshortUrlVisits.data.forEach((visit) => {\n  console.log(visit);\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Short URL Redirect Rules in Shlink JS SDK\nDESCRIPTION: This snippet demonstrates how to retrieve redirect rules for a specific short URL using the Shlink API client. It shows how to access the default long URL and iterate through all redirect rules to display their properties including long URLs, priorities, and conditions.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/redirect-rules.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst redirectRules = await apiClient.getShortUrlRedirectRules({ shortCode: 'abc123' });\n\nconsole.log(redirectRules.defaultLongUrl);\nredirectRules.redirectRules.forEach((redirectRule) => {\n  console.log(redirectRule.longUrl);\n  console.log(redirectRule.priority);\n\n  redirectRule.conditions.forEach((condition) => {\n    console.log(condition.type);\n    console.log(condition.matchKey);\n    console.log(condition.matchValue);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Listing Domains with ShlinkApiClient in TypeScript\nDESCRIPTION: Demonstrates how to use the ShlinkApiClient to retrieve and display a list of domains. The method returns domain data including the domain name, default status, and redirects configuration.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/domains.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst domains = await apiClient.listDomains();\n\ndomains.data.forEach((domain) => {\n  console.log(domain.domain);\n  console.log(domain.isDefault);\n  console.log(domain.redirects);\n});\nconsole.log(domains.defaultRedirects);\n```\n\n----------------------------------------\n\nTITLE: Listing Tags with ShlinkApiClient in TypeScript\nDESCRIPTION: Demonstrates how to retrieve a list of all tags using the ShlinkApiClient. The response contains tag data that can be iterated over.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/tags.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst tags = await apiClient.listTags();\n\ntags.data.forEach((tag) => console.log(tag));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Visits by Tag in TypeScript\nDESCRIPTION: This snippet shows how to fetch visits for all short URLs that have a specific tag. It demonstrates processing the visit data and accessing pagination information.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst tagVisits = await apiClient.getTagVisits('videogames');\n\ntagVisits.data.forEach((visit) => {\n  console.log(visit.referer);\n  console.log(visit.userAgent);\n  console.log(visit.date);\n  console.log(visit.visitedUrl);\n  console.log(visit.redirectUrl);\n});\nconsole.log(tagVisits.pagination);\n```\n\n----------------------------------------\n\nTITLE: Configuring Domain Redirects in TypeScript\nDESCRIPTION: Shows how to edit domain redirects using the ShlinkApiClient. This example configures a base URL redirect and clears the regular 404 redirect for a specific domain.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/domains.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nawait apiClient.editDomainRedirects({\n  domain: 'example.com',\n  baseUrlRedirect: 'https://shlink.io',\n  regular404Redirect: null,\n});\n```\n\n----------------------------------------\n\nTITLE: Using AbortSignal with ShlinkApiClient in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a ShlinkApiClient instance, initiate a request with an AbortSignal, and then abort the request. It uses the FetchHttpClient and requires the @shlinkio/shlink-js-sdk package.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/extra/abort-signals.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ShlinkApiClient } from '@shlinkio/shlink-js-sdk';\nimport { FetchHttpClient } from '@shlinkio/shlink-js-sdk/fetch';\n\nconst serverInfo = { baseUrl: 'https://s.test', apiKey: '12345' };\nconst apiClient = new ShlinkApiClient(new FetchHttpClient(), serverInfo);\n\n// Create an abort controller and pass its signal to any method\nconst abortController = new AbortController();\nconst listPromise = apiClient.listShortUrls({ signal: controller.signal });\n\nabortController.abort();\nlistPromise.catch(() => console.log('Request has been aborted'));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Non-Orphan Visits in TypeScript\nDESCRIPTION: This snippet shows how to fetch all non-orphan visits (visits to valid short URLs) using the Shlink API client. It demonstrates processing the visit data and accessing pagination information.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst nonOrphanVisits = await apiClient.getNonOrphanVisits();\n\nnonOrphanVisits.data.forEach((visit) => {\n  console.log(visit.referer);\n  console.log(visit.userAgent);\n  console.log(visit.date);\n  console.log(visit.visitedUrl);\n  console.log(visit.redirectUrl);\n});\nconsole.log(nonOrphanVisits.pagination);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Tag Statistics with ShlinkApiClient in TypeScript\nDESCRIPTION: Shows how to get tag statistics which include information about the number of short URLs and visits for each tag. This provides insights on tag usage.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/tags.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst tagsStats = await apiClient.tagsStats();\n\ntagsStats.data.forEach((tagStats) => {\n  console.log(tagStats.tag);\n  console.log(tagStats.shortUrlsCount);\n  console.log(tagStats.visitsSummary.total);\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing ShlinkApiClient with NodeHttpClient in TypeScript\nDESCRIPTION: This snippet shows how to create a ShlinkApiClient instance using the NodeHttpClient, which is specific to Node.js environments and uses the built-in http.request method.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/getting-started/http-clients.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ShlinkApiClient } from '@shlinkio/shlink-js-sdk';\nimport { NodeHttpClient } from '@shlinkio/shlink-js-sdk/node';\n\nconst serverInfo = { baseUrl: 'https://s.test', apiKey: '12345' };\nconst apiClient = new ShlinkApiClient(new NodeHttpClient(), serverInfo);\n```\n\n----------------------------------------\n\nTITLE: Deleting Short URL Visits in TypeScript\nDESCRIPTION: This snippet demonstrates how to delete all visits for a specific short URL by providing its shortCode and domain. It shows how to access the count of deleted visits in the response.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst result = await apiClient.deleteShortUrlVisits({\n  shortCode: 'abc123',\n  domain: 'example.com',\n});\n\nconsole.log(result.deletedVisits);\n```\n\n----------------------------------------\n\nTITLE: Renaming a Tag with ShlinkApiClient in TypeScript\nDESCRIPTION: Illustrates how to rename an existing tag by providing the old tag name and the new tag name. This allows for updating tag naming conventions.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/tags.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nawait apiClient.editTag({ oldName: 'games', newName: 'videogames' });\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orphan Visits in TypeScript\nDESCRIPTION: This snippet demonstrates how to fetch orphan visits (visits to invalid short URLs) using the Shlink API client. It shows how to process the visit data and access pagination information.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst orphanVisits = await apiClient.getOrphanVisits();\n\norphanVisits.data.forEach((visit) => {\n  console.log(visit.referer);\n  console.log(visit.userAgent);\n  console.log(visit.date);\n  console.log(visit.visitedUrl);\n  console.log(visit.redirectUrl);\n});\nconsole.log(orphanVisits.pagination);\n```\n\n----------------------------------------\n\nTITLE: Deleting Orphan Visits in TypeScript\nDESCRIPTION: This snippet shows how to delete all orphan visits (visits to invalid short URLs) using the Shlink API client and get the count of deleted visits in the response.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst result = await apiClient.deleteOprhanVisits();\n\nconsole.log(result.deletedVisits);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Visits by Domain in TypeScript\nDESCRIPTION: This snippet demonstrates how to fetch all visits for short URLs under a specific domain. It shows how to process the visit data and access pagination information.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst domainVisits = await apiClient.getDomainVisits('example.com');\n\ndomainVisits.data.forEach((visit) => {\n  console.log(visit.referer);\n  console.log(visit.userAgent);\n  console.log(visit.date);\n  console.log(visit.visitedUrl);\n  console.log(visit.redirectUrl);\n});\nconsole.log(domainVisits.pagination);\n```\n\n----------------------------------------\n\nTITLE: Importing TypeScript Types from Shlink JS SDK API Contract\nDESCRIPTION: Demonstrates how to import TypeScript types from the API contract entry point of the Shlink JS SDK. This approach allows developers to use only the type definitions without including the entire SDK implementation in their bundle.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/getting-started/api-contract.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { ShlinkApiClient, ShlinkShortUrl, ShlinkTags, ... } from '@shlinkio/shlink-js-sdk/api-contract';\n\n// Do stuff with types...\n```\n\n----------------------------------------\n\nTITLE: Deleting Tags with ShlinkApiClient in TypeScript\nDESCRIPTION: Shows how to delete multiple tags at once by providing an array of tag names. This allows for bulk cleanup of unused or obsolete tags.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/tags.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nawait apiClient.deleteTags(['foo', 'bar']);\n```\n\n----------------------------------------\n\nTITLE: Filtering Tag Visits with Parameters in TypeScript\nDESCRIPTION: This snippet demonstrates how to apply filters when retrieving visits for URLs with a specific tag, such as excluding bot visits and specifying a start date.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst tagVisits = await apiClient.getTagVisits('videogames', {\n  excludeBots: true,\n  startDate: '2022-01-01T00:00:00+00:00',\n});\n\ntagVisits.data.forEach((visit) => {\n  console.log(visit);\n});\n```\n\n----------------------------------------\n\nTITLE: Filtering Non-Orphan Visits with Parameters in TypeScript\nDESCRIPTION: This snippet demonstrates how to apply filters when retrieving non-orphan visits, such as excluding bot traffic and specifying a start date for the data range.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst nonOrphanVisits = await apiClient.getNonOrphanVisits({\n  excludeBots: true,\n  startDate: '2022-01-01T00:00:00+00:00',\n});\n\nnonOrphanVisits.data.forEach((visit) => {\n  console.log(visit);\n});\n```\n\n----------------------------------------\n\nTITLE: Filtering Domain Visits with Parameters in TypeScript\nDESCRIPTION: This snippet shows how to apply filters when retrieving visits for a specific domain, such as excluding bot traffic and specifying a start date for the data range.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/contexts/visits.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst apiClient = new ShlinkApiClient(...);\nconst domainVisits = await apiClient.getDomainVisits('example.com', {\n  excludeBots: true,\n  startDate: '2022-01-01T00:00:00+00:00',\n});\n\ndomainVisits.data.forEach((visit) => {\n  console.log(visit);\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Shlink JS SDK via npm\nDESCRIPTION: Command to install the Shlink JavaScript SDK package using npm package manager.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @shlinkio/shlink-js-sdk\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Optional Type Definition in TypeScript for Backwards Compatibility\nDESCRIPTION: This snippet shows how new response payload properties are defined as optional in TypeScript to maintain backwards compatibility with older Shlink versions that may not include these properties.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/extra/api-version-compatibility.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfoo?: string\n```\n\n----------------------------------------\n\nTITLE: Installing Shlink JS SDK via NPM\nDESCRIPTION: Command to install the Shlink JavaScript SDK package from NPM. This will add the SDK as a dependency to your JavaScript project, enabling integration with the Shlink URL shortener API.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @shlinkio/shlink-js-sdk\n```\n\n----------------------------------------\n\nTITLE: Request Credentials Parameter Example\nDESCRIPTION: Code reference showing how to provide a credentials parameter to the underlying Request made by ShlinkClient.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`[Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials)\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Navigation Menu\nDESCRIPTION: Structured navigation menu in Markdown format showing the documentation hierarchy for Shlink JS SDK, including links to various sections like getting started guides, API contexts, and additional resources.\nSOURCE: https://github.com/shlinkio/shlink-js-sdk/blob/main/docs/_sidebar.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Home](/)\n- **Getting started**\n  - [HTTP clients](/getting-started/http-clients)\n  - [API contract](/getting-started/api-contract)\n- **Contexts**\n  - [Short URLs](/contexts/short-urls)\n  - [Visits](/contexts/visits)\n  - [Tags](/contexts/tags)\n  - [Domains](/contexts/domains)\n  - [Redirect rules](/contexts/redirect-rules)\n- **Extra**\n  - [Abort signals](/extra/abort-signals)\n  - [API version compatibility](/extra/api-version-compatibility)\n\n---\n\n- [Changelog](/changelog)\n- [:octocat: Fork me on GitHub](https://github.com/shlinkio/shlink-js-sdk/)\n```"
  }
]
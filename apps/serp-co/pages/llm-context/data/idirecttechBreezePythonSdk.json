[
  {
    "owner": "idirect-tech",
    "repo": "breeze-python-sdk",
    "content": "TITLE: Initializing and Authenticating with Breeze Python SDK\nDESCRIPTION: This snippet demonstrates how to import the BreezeConnect class, initialize the SDK with an API key, and generate a session using your secret key and session token. It also shows how to properly handle API keys with special characters by encoding them in the URL.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nfrom breeze_connect import BreezeConnect\n\n# Initialize SDK\nbreeze = BreezeConnect(api_key=\"your_api_key\")\n\n# Obtain your session key from https://api.icicidirect.com/apiuser/login?api_key=YOUR_API_KEY\n# Incase your api-key has special characters(like +,=,!) then encode the api key before using in the url as shown below.\nimport urllib\nprint(\"https://api.icicidirect.com/apiuser/login?api_key=\"+urllib.parse.quote_plus(\"your_api_key\"))\n\n# Generate Session\nbreeze.generate_session(api_secret=\"your_secret_key\",\n                        session_token=\"your_api_session\")\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Websocket Usage with Breeze Connect\nDESCRIPTION: Python code demonstrating how to initialize the Breeze SDK, generate a session, connect to the websocket, and set up a callback for receiving ticks. It includes handling API keys with special characters.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom breeze_connect import BreezeConnect\n\n# Initialize SDK\nbreeze = BreezeConnect(api_key=\"your_api_key\")\n\n# Obtain your session key from https://api.icicidirect.com/apiuser/login?api_key=YOUR_API_KEY\n# Incase your api-key has special characters(like +,=,!) then encode the api key before using in the url as shown below.\nimport urllib\nprint(\"https://api.icicidirect.com/apiuser/login?api_key=\"+urllib.parse.quote_plus(\"your_api_key\"))\n\n# Generate Session\nbreeze.generate_session(api_secret=\"your_secret_key\",\n                        session_token=\"your_api_session\")\n\n# Connect to websocket(it will connect to tick-by-tick data server)\nbreeze.ws_connect()\n\n# Callback to receive ticks.\ndef on_ticks(ticks):\n    print(\"Ticks: {}\".format(ticks))\n\n# Assign the callbacks.\nbreeze.on_ticks = on_ticks\n```\n\n----------------------------------------\n\nTITLE: Placing Equity Order with Breeze SDK\nDESCRIPTION: This code demonstrates how to place an equity order using the place_order method. It specifies order parameters including stock code, exchange, price, quantity, and other order details for buying ITC shares in the cash segment.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_34\n\nLANGUAGE: python\nCODE:\n```\nbreeze.place_order(stock_code=\"ITC\",\n                    exchange_code=\"NSE\",\n                    product=\"cash\",\n                    action=\"buy\",\n                    order_type=\"limit\",\n                    stoploss=\"\",\n                    quantity=\"1\",\n                    price=\"420\",\n                    validity=\"day\"\n                )\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Success': \n {'order_id': '20250205N30001234',\n  'message': 'Equity CASH Order placed successfully through RI reference no 20250205N300001234',\n  'user_remark': None},\n 'Status': 200,\n 'Error': None}\n```\n\n----------------------------------------\n\nTITLE: Placing Options Order with Breeze SDK\nDESCRIPTION: This code demonstrates how to place an options order using the place_order method. It specifies order parameters including stock code, exchange, strike price, right (call/put), and other order details for NIFTY options.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_33\n\nLANGUAGE: python\nCODE:\n```\nbreeze.place_order(stock_code=\"NIFTY\",\n                  exchange_code=\"NFO\",\n                  product=\"options\",\n                  action=\"buy\",\n                  order_type=\"limit\",\n                  stoploss=\"\",\n                  quantity=\"75\",\n                  price=\"0.20\",\n                  validity=\"day\",\n                  validity_date=\"2025-02-05T06:00:00.000Z\",\n                  disclosed_quantity=\"0\",\n                  expiry_date=\"2025-02-27T06:00:00.000Z\",\n                  right=\"call\",\n                  strike_price=\"24800\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Success': {'order_id': '202502051400001234',\n  'message': 'Successfully Placed the order',\n  'user_remark': ''},\n 'Status': 200,\n 'Error': None}\n```\n\n----------------------------------------\n\nTITLE: Fetching Historical Data for Futures with Breeze SDK\nDESCRIPTION: This code demonstrates how to fetch historical futures data for NIFTY using the get_historical_data_v2 method. It specifies a 1-minute interval for a specific time range and returns price data with volume and open interest information.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data_v2(interval=\"1minute\",\n                    from_date= \"2025-02-03T09:20:00.000Z\",\n                    to_date= \"2025-02-03T09:22:00.000Z\",\n                    stock_code=\"NIFTY\",\n                    exchange_code=\"NFO\",\n                    product_type=\"futures\",\n                    expiry_date=\"2025-02-27T07:00:00.000Z\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Error': None,\n 'Status': 200,\n 'Success': [{'close': 23338.6,\n   'datetime': '2025-02-03 09:21:00',\n   'exchange_code': 'NFO',\n   'expiry_date': '27-FEB-2025',\n   'high': 23352.15,\n   'low': 23337.95,\n   'open': 23348.0,\n   'open_interest': 17543475,\n   'product_type': 'Futures',\n   'stock_code': 'NIFTY',\n   'volume': 88800}]}\n```\n\n----------------------------------------\n\nTITLE: Placing Futures Order with Breeze SDK\nDESCRIPTION: This code demonstrates how to place a futures order using the place_order method. It specifies order parameters including stock code, exchange, action (buy/sell), price, quantity, and other order details for NIFTY futures.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_32\n\nLANGUAGE: python\nCODE:\n```\nbreeze.place_order(stock_code=\"NIFTY\",\n                  exchange_code=\"NFO\",\n                  product=\"futures\",\n                  action=\"buy\",\n                  order_type=\"limit\",\n                  stoploss=\"0\",\n                  quantity=\"75\",\n                  price=\"23700\",\n                  validity=\"day\",\n                  validity_date=\"2022-08-22T06:00:00.000Z\",\n                  disclosed_quantity=\"0\",\n                  expiry_date=\"2025-02-27T06:00:00.000Z\",\n                  right=\"others\",\n                  strike_price=\"0\",\n                  user_remark=\"Test\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Success': \n {'order_id': '202502051400001234',\n  'message': 'Successfully Placed the order',\n  'user_remark': ''},\n 'Status': 200,\n 'Error': None}\n```\n\n----------------------------------------\n\nTITLE: Fetching Historical Data for Equity with Breeze SDK\nDESCRIPTION: This code demonstrates how to fetch historical equity data for RELIND using the get_historical_data_v2 method. It specifies a 1-minute interval for a specific time range and returns price data with volume information.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_28\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data_v2(interval=\"1minute\",\n                    from_date= \"2025-02-03T09:20:00.000Z\",\n                    to_date= \"2025-02-03T09:22:00.000Z\",\n                    stock_code=\"RELIND\",\n                    exchange_code=\"NSE\",\n                    product_type=\"cash\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Error': None,\n 'Status': 200,\n 'Success': [{'close': 1250.0,\n   'datetime': '2025-02-03 09:20:00',\n   'exchange_code': 'NSE',\n   'high': 1250.9,\n   'low': 1248.2,\n   'open': 1248.2,\n   'stock_code': 'RELIND',\n   'volume': 47317},\n  {'close': 1249.15,\n   'datetime': '2025-02-03 09:21:00',\n   'exchange_code': 'NSE',\n   'high': 1250.5,\n   'low': 1248.95,\n   'open': 1250.0,\n   'stock_code': 'RELIND',\n   'volume': 54277},\n  {'close': 1248.9,\n   'datetime': '2025-02-03 09:22:00',\n   'exchange_code': 'NSE',\n   'high': 1249.7,\n   'low': 1247.95,\n   'open': 1248.95,\n   'stock_code': 'RELIND',\n   'volume': 38527}]}\n```\n\n----------------------------------------\n\nTITLE: Fetching Historical Data for Options with Breeze SDK\nDESCRIPTION: This code demonstrates how to fetch historical options data for NIFTY using the get_historical_data_v2 method. It specifies parameters including strike price, right (call/put), and expiry date to retrieve specific option contract data.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_29\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data_v2(interval=\"1minute\",\n                    from_date= \"2025-02-03T09:20:00.000Z\",\n                    to_date= \"2025-02-03T09:21:00.000Z\",\n                    stock_code=\"NIFTY\",\n                    exchange_code=\"NFO\",\n                    product_type=\"options\",\n                    expiry_date=\"2025-02-06T07:00:00.000Z\",\n                    right=\"call\",\n                    strike_price=\"23200\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Error': None,\n 'Status': 200,\n 'Success': [{'close': 201.85,\n   'datetime': '2025-02-03 09:20:00',\n   'exchange_code': 'NFO',\n   'expiry_date': '06-FEB-2025',\n   'high': 208.1,\n   'low': 201.8,\n   'open': 206.75,\n   'open_interest': 2203575,\n   'product_type': 'Options',\n   'right': 'Call',\n   'stock_code': 'NIFTY',\n   'strike_price': 23200.0,\n   'volume': 207825},\n  {'close': 197.55,\n   'datetime': '2025-02-03 09:21:00',\n   'exchange_code': 'NFO',\n   'expiry_date': '06-FEB-2025',\n   'high': 203.9,\n   'low': 195.5,\n   'open': 200.45,\n   'open_interest': 2435175,\n   'product_type': 'Options',\n   'right': 'Call',\n   'stock_code': 'NIFTY',\n   'strike_price': 23200.0,\n   'volume': 342450}]}\n```\n\n----------------------------------------\n\nTITLE: Calculate Margin Requirements using Breeze SDK in Python\nDESCRIPTION: Calculates margin requirements for multiple trades including futures and options. This example shows margin calculation for a basket of NIFTY and CNXBAN futures and options positions.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_50\n\nLANGUAGE: python\nCODE:\n```\nbreeze.margin_calculator([{\n            \"strike_price\": \"0\",\n            \"quantity\": \"30\",\n            \"right\": \"others\",\n            \"product\": \"futures\",\n            \"action\": \"buy\",\n            \"price\": \"49500\",\n            \"expiry_date\": \"27-Feb-2025\",\n            \"stock_code\": \"CNXBAN\",\n            \"cover_order_flow\": \"N\",\n            \"fresh_order_type\": \"N\",\n            \"cover_limit_rate\": \"0\",\n            \"cover_sltp_price\": \"0\",\n            \"fresh_limit_rate\": \"0\",\n            \"open_quantity\": \"0\"\n        },\n        {\n            \"strike_price\": \"50000\",\n            \"quantity\": \"30\",\n            \"right\": \"Call\",\n            \"product\": \"options\",\n            \"action\": \"buy\",\n            \"price\": \"1150\",\n            \"expiry_date\": \"27-Feb-2025\",\n            \"stock_code\": \"CNXBAN\",\n            \"cover_order_flow\": \"N\",\n            \"fresh_order_type\": \"N\",\n            \"cover_limit_rate\": \"0\",\n            \"cover_sltp_price\": \"0\",\n            \"fresh_limit_rate\": \"0\",\n            \"open_quantity\": \"0\"\n        },\n        {\n            \"strike_price\": \"0\",\n            \"quantity\": \"75\",\n            \"right\": \"others\",\n            \"product\": \"futures\",\n            \"action\": \"buy\",\n            \"price\": \"23400\",\n            \"expiry_date\": \"27-Feb-2025\",\n            \"stock_code\": \"NIFTY\",\n            \"cover_order_flow\": \"N\",\n            \"fresh_order_type\": \"N\",\n            \"cover_limit_rate\": \"0\",\n            \"cover_sltp_price\": \"0\",\n            \"fresh_limit_rate\": \"0\",\n            \"open_quantity\": \"0\"\n        },\n        {\n            \"strike_price\": \"23400\",\n            \"quantity\": \"75\",\n            \"right\": \"call\",\n            \"product\": \"options\",\n            \"action\": \"buy\",\n            \"price\": \"577\",\n            \"expiry_date\": \"27-Feb-2025\",\n            \"stock_code\": \"NIFTY\",\n            \"cover_order_flow\": \"sell\",\n            \"fresh_order_type\": \"limit\",\n            \"cover_limit_rate\": \"0\",\n            \"cover_sltp_price\": \"0\",\n            \"fresh_limit_rate\": \"0\",\n            \"open_quantity\": \"0\"\n        }],exchange_code = \"NFO\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Real-Time OHLCV Data for NFO Options in Breeze Python SDK\nDESCRIPTION: Subscribes to real-time one-minute OHLCV data for options contracts on the NFO (National Stock Exchange Futures & Options) exchange. Requires specific contract details including expiry date, strike price, and option type.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(exchange_code= \"NFO\", \n                  stock_code=\"NIFTY\", \n                  expiry_date=\"13-Feb-2025\", \n                  strike_price=\"23550\", \n                  right=\"call\", \n                  product_type=\"options\", \n                  get_market_depth=False ,\n                  get_exchange_quotes=True,\n                  interval=\"1minute\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Real-Time OHLCV Data for Equity Stocks in Breeze Python SDK\nDESCRIPTION: Subscribes to real-time one-minute OHLCV (Open, High, Low, Close, Volume) data streams for a specific stock using its stock token. Returns interval data with timestamp for the specified stock.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(stock_token=\"4.1!2885\", \n                      interval=\"1minute\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to NFO Options Exchange Quotes in Breeze Python SDK\nDESCRIPTION: Subscribes to real-time exchange quotes for options contracts on the NFO exchange. Returns detailed quote information for the specified options contract including price, volume, open interest, and trading statistics.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(exchange_code= \"NFO\", \n                  stock_code=\"NIFTY\", \n                  expiry_date=\"13-Feb-2025\", \n                  strike_price=\"23550\", \n                  right=\"call\", \n                  product_type=\"options\", \n                  get_market_depth=False ,\n                  get_exchange_quotes=True)\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Equity Stock Exchange Quotes in Breeze Python SDK\nDESCRIPTION: Subscribes to real-time exchange quotes for a specific equity stock using its stock token. Returns detailed quote information including price, volume, and trading statistics.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(stock_token=\"4.1!2885\")\n```\n\n----------------------------------------\n\nTITLE: Canceling Orders in Python using Breeze SDK\nDESCRIPTION: Cancels a specific order by providing the exchange code and order ID.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_37\n\nLANGUAGE: python\nCODE:\n```\nbreeze.cancel_order(exchange_code=\"NSE\",\n                    order_id=\"20250205N300001234\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to NFO Options Market Depth in Breeze Python SDK\nDESCRIPTION: Subscribes to real-time market depth data (order book) for options contracts on the NFO exchange. Returns top 5 bid and ask prices with quantities and number of orders at each price level.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(exchange_code= \"NFO\", \n                  stock_code=\"NIFTY\", \n                  expiry_date=\"13-Feb-2025\", \n                  strike_price=\"23550\", \n                  right=\"call\", \n                  product_type=\"options\", \n                  get_market_depth=True ,\n                  get_exchange_quotes=False)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Futures Data from Breeze API\nDESCRIPTION: Fetches historical futures data with specified interval, date range and contract details.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data(interval=\"1minute\",\n                  from_date= \"2025-02-03T09:21:00.000Z\",\n                  to_date= \"2025-02-03T09:21:00.000Z\",\n                  stock_code=\"NIFTY\",\n                  exchange_code=\"NFO\",\n                  product_type=\"futures\",\n                  expiry_date=\"2025-02-27T07:00:00.000Z\",\n                  right=\"others\",\n                  strike_price=\"0\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Real-Time OHLCV Data for BFO Options in Breeze Python SDK\nDESCRIPTION: Subscribes to real-time one-minute OHLCV data for options contracts on the BFO (BSE Futures & Options) exchange. Requires specific contract details including stock code, expiry date, strike price, and option type.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(exchange_code= \"BFO\", \n                  stock_code=\"BSESEN\", \n                  expiry_date=\"18-Feb-2025\", \n                  strike_price=\"78200\", \n                  right=\"call\", \n                  product_type=\"options\", \n                  get_market_depth=False,\n                  get_exchange_quotes=True,\n                  interval=\"1minute\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to BFO Exchange Quotes\nDESCRIPTION: Demonstrates how to subscribe to real-time exchange quotes for BFO options. Shows subscription with exchange code, stock code, expiry date, strike price and other parameters for options data.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(exchange_code= \"BFO\", \n                  stock_code=\"BSESEN\", \n                  expiry_date=\"18-Feb-2025\", \n                  strike_price=\"78200\", \n                  right=\"call\", \n                  product_type=\"options\", \n                  get_market_depth=False,\n                  get_exchange_quotes=True)\n```\n\n----------------------------------------\n\nTITLE: Modify Single-Leg GTT Order in Python\nDESCRIPTION: Modifies an existing single-leg GTT order by updating the order parameters. Requires exchange code, GTT order ID and new order details.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_55\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_single_leg_modify_order(exchange_code=\"NFO\",\n                      gtt_order_id=\"2025020500001234\",\n                      gtt_type=\"single\",\n                      order_details=[\n                        {\n                          \"action\": \"buy\",\n                          \"limit_price\": \"6\",\n                          \"trigger_price\": \"7\"\n                        }])\n```\n\n----------------------------------------\n\nTITLE: Subscribing to BFO Market Depth\nDESCRIPTION: Shows how to subscribe to real-time market depth data for BFO options, including best bid/ask prices and quantities across multiple price levels.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(exchange_code= \"BFO\", \n                  stock_code=\"BSESEN\", \n                  expiry_date=\"18-Feb-2025\", \n                  strike_price=\"78200\", \n                  right=\"call\", \n                  product_type=\"options\", \n                  get_market_depth=True,\n                  get_exchange_quotes=False)\n```\n\n----------------------------------------\n\nTITLE: Getting Historical Equity Data from Breeze API\nDESCRIPTION: Retrieves historical equity price data with specified interval and date range.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data(interval=\"1minute\",\n                  from_date= \"2025-02-03T09:20:00.000Z\",\n                  to_date= \"2025-02-03T09:22:00.000Z\",\n                  stock_code=\"RELIND\",\n                  exchange_code=\"NSE\",\n                  product_type=\"cash\")\n```\n\n----------------------------------------\n\nTITLE: Get GTT Order Book in Python\nDESCRIPTION: Retrieves GTT order book details for specified date range and exchange code. Returns both OCO and single GTT orders.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_57\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_order_book(exchange_code =\"NFO\",\n            from_date = \"2025-02-05T06:00:00.00Z\",\n            to_date = \"2025-02-05T06:00:00.00Z\")\n```\n\n----------------------------------------\n\nTITLE: Fetching Historical Options Data from Breeze API\nDESCRIPTION: Gets historical options data with specified strike price, expiry and option type.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data(interval=\"1minute\",\n                  from_date= \"2025-02-03T09:20:00.000Z\",\n                  to_date= \"2025-02-03T09:22:00.000Z\",\n                  stock_code=\"NIFTY\",\n                  exchange_code=\"NFO\",\n                  product_type=\"options\",\n                  expiry_date=\"2025-02-06T07:00:00.000Z\",\n                  right=\"call\",\n                  strike_price=\"23200\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Futures Data V2 from Breeze API\nDESCRIPTION: Gets historical futures data using V2 API with specified interval and contract details.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_26\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_historical_data_v2(interval=\"1minute\",\n                  from_date= \"2025-02-03T09:21:00.000Z\",\n                  to_date= \"2025-02-03T09:21:00.000Z\",\n                  stock_code=\"NIFTY\",\n                  exchange_code=\"NFO\",\n                  product_type=\"futures\",\n                  expiry_date=\"2025-02-27T07:00:00.000Z\",\n                  right=\"others\",\n                  strike_price=\"0\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order Details with Breeze SDK\nDESCRIPTION: This code demonstrates how to fetch detailed information about a placed order using the get_order_detail method. It requires the exchange code and order ID to retrieve the current status and details of the order.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_35\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_order_detail(exchange_code=\"NSE\",\n                        order_id=\"20250205N300001234\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Success': [\n    {'order_id': '20250205N300001234',\n   'exchange_order_id': None,\n   'exchange_code': 'NSE',\n   'stock_code': 'ITC',\n   'product_type': 'Cash',\n   'action': 'Buy',\n   'order_type': 'Limit',\n   'stoploss': '0.00',\n   'quantity': '1',\n   'price': '420.00',\n   'validity': 'Day',\n   'disclosed_quantity': '0',\n   'expiry_date': None,\n   'right': None,\n   'strike_price': 0.0,\n   'average_price': '0',\n   'cancelled_quantity': '0',\n   'pending_quantity': '1',\n   'status': 'Ordered',\n   'user_remark': '',\n   'order_datetime': '05-Feb-2025 09:26',\n   'parent_order_id': None,\n   'modification_number': None,\n   'exchange_acknowledgement_date': None,\n   'SLTP_price': None,\n   'exchange_acknowledge_number': None}]\n```\n\n----------------------------------------\n\nTITLE: Subscribing to i_click_2_gain Strategy Stream\nDESCRIPTION: Shows how to subscribe to the i_click_2_gain equity strategy stream for receiving equity trading signals and recommendations.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(stock_token=\"i_click_2_gain\")\n```\n\n----------------------------------------\n\nTITLE: Getting Order List in Python using Breeze SDK\nDESCRIPTION: Retrieves list of orders for a specific exchange and date range. Uses the get_order_list method to fetch orders from NSE exchange.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_36\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_order_list(exchange_code=\"NSE\",\n                      from_date=\"2025-02-05T10:00:00.000Z\",\n                      to_date=\"2025-02-05T10:00:00.000Z\")\n```\n\n----------------------------------------\n\nTITLE: Modifying Orders in Python using Breeze SDK\nDESCRIPTION: Modifies an existing order with new parameters like price, quantity and validity. Used for updating order details in NFO market.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_38\n\nLANGUAGE: python\nCODE:\n```\nbreeze.modify_order(order_id=\"202502051400012345\",\n                    exchange_code=\"NFO\",\n                    order_type=\"limit\",\n                    stoploss=\"0\",\n                    quantity=\"75\",\n                    price=\"0.30\",\n                    validity=\"day\",\n                    disclosed_quantity=\"0\",\n                    validity_date=\"2025-08-22T06:00:00.000Z\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Margin Information with Breeze SDK\nDESCRIPTION: This code fetches the margin details for a trading account using the get_margin method. It provides information about cash limits, allocated amounts, and funds blocked by trades for the specified exchange.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_31\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_margin(exchange_code=\"NSE\")\n```\n\nLANGUAGE: json\nCODE:\n```\n{'Success': {'limit_list': [],\n  'cash_limit': 1000000.00,\n  'amount_allocated': 100000.00,\n  'block_by_trade': 0.0,\n  'isec_margin': 0.0},\n 'Status': 200,\n 'Error': None}\n```\n\n----------------------------------------\n\nTITLE: Disconnecting WebSocket Connections in Breeze Python SDK\nDESCRIPTION: Disconnects from all actively connected websocket servers. This function terminates all real-time data streams that were previously established.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nbreeze.ws_disconnect()\n```\n\n----------------------------------------\n\nTITLE: Square Off Options Order using Breeze SDK in Python\nDESCRIPTION: Demonstrates how to square off an options position using the Breeze Python SDK. This example shows selling NIFTY Call options with specified parameters including expiry date, strike price, and quantity.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_43\n\nLANGUAGE: python\nCODE:\n```\nbreeze.square_off(exchange_code=\"NFO\",\n                  product=\"options\",\n                  stock_code=\"NIFTY\",\n                  expiry_date=\"2025-02-27T06:00:00.000Z\",\n                  right=\"Call\",\n                  strike_price=\"24000\",\n                  action=\"sell\",\n                  order_type=\"market\",\n                  validity=\"day\",\n                  stoploss=\"0\",\n                  quantity=\"75\",\n                  price=\"0\",\n                  validity_date=\"2025-02-05T06:00:00.000Z\",\n                  trade_password=\"\",\n                  disclosed_quantity=\"0\")\n```\n\n----------------------------------------\n\nTITLE: Square Off Futures Order using Breeze SDK in Python\nDESCRIPTION: Shows how to square off a futures position using the Breeze Python SDK. This example demonstrates selling NIFTY futures with market order type and specified quantity.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_44\n\nLANGUAGE: python\nCODE:\n```\nbreeze.square_off(exchange_code=\"NFO\",\n                  product=\"futures\",\n                  stock_code=\"NIFTY\",\n                  expiry_date=\"2025-02-27T06:00:00.000Z\",\n                  action=\"sell\",\n                  order_type=\"market\",\n                  validity=\"day\",\n                  stoploss=\"0\",\n                  quantity=\"75\",\n                  price=\"0\",\n                  validity_date=\"2025-02-27T06:00:00.000Z\",\n                  trade_password=\"\",\n                  disclosed_quantity=\"0\")\n```\n\n----------------------------------------\n\nTITLE: Getting Portfolio Holdings in Python using Breeze SDK\nDESCRIPTION: Retrieves portfolio holdings information for a given exchange, date range and stock code. Allows filtering by portfolio type.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_39\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_portfolio_holdings(exchange_code=\"NFO\",\n                    from_date=\"2024-08-01T06:00:00.000Z\", \n                    to_date=\"2024-09-19T06:00:00.000Z\", \n                    stock_code=\"\", \n                    portfolio_type=\"\")\n```\n\n----------------------------------------\n\nTITLE: Getting Portfolio Positions in Python using Breeze SDK\nDESCRIPTION: Fetches current portfolio positions across all segments.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_40\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_portfolio_positions()\n```\n\n----------------------------------------\n\nTITLE: Getting Market Quotes in Python using Breeze SDK\nDESCRIPTION: Retrieves market quotes for futures contracts with specified parameters like stock code, expiry date and product type.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_41\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_quotes(stock_code=\"NIFTY\",\n                    exchange_code=\"NFO\",\n                    expiry_date=\"2025-02-27T06:00:00.000Z\",\n                    product_type=\"futures\",\n                    right=\"others\",\n                    strike_price=\"0\")\n```\n\n----------------------------------------\n\nTITLE: Getting Option Chain Quotes in Python using Breeze SDK\nDESCRIPTION: Fetches option chain quotes for a given stock code, exchange and product type with expiry date filter.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_42\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_option_chain_quotes(stock_code=\"ICIBAN\",\n                    exchange_code=\"NFO\",\n                    product_type=\"futures\",\n                    expiry_date=\"2025-01-25T06:00:00.000Z\")\n```\n\n----------------------------------------\n\nTITLE: Fetching Trade List using Breeze SDK in Python\nDESCRIPTION: Retrieves a list of trades for a specific date range, with optional filters for exchange, product type, action, and stock code. This example fetches NSE trades for February 5, 2025.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_45\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_trade_list(from_date=\"2025-02-05T06:00:00.000Z\",\n                        to_date=\"2025-02-05T06:00:00.000Z\",\n                        exchange_code=\"NSE\",\n                        product_type=\"\",\n                        action=\"\",\n                        stock_code=\"\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving Trade Details using Breeze SDK in Python\nDESCRIPTION: Fetches detailed information for a specific trade by providing the exchange code and order ID. This shows details for an NSE order including settlement, execution price, and trade time.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_46\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_trade_detail(exchange_code=\"NSE\",\n                        order_id=\"20250205N300012345\")\n```\n\n----------------------------------------\n\nTITLE: Adding Margin to Account with Breeze SDK\nDESCRIPTION: This code demonstrates how to add margin to a trading account using the add_margin method. It specifies product type, stock details, and margin amounts to allocate additional funds for trading.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_30\n\nLANGUAGE: python\nCODE:\n```\nbreeze.add_margin(product_type=\"margin\", \n                    stock_code=\"ICIBAN\", \n                    exchange_code=\"BSE\", \n                    settlement_id=\"2021220\", \n                    add_amount=\"100\", \n                    margin_amount=\"3817.10\", \n                    open_quantity=\"10\", \n                    cover_quantity=\"0\", \n                    category_index_per_stock=\"\", \n                    expiry_date=\"\", \n                    right=\"\", \n                    contract_tag=\"\", \n                    strike_price=\"\", \n                    segment_code=\"\")\n```\n\n----------------------------------------\n\nTITLE: Getting Customer Details from Breeze API\nDESCRIPTION: Retrieves customer details using the Breeze API with an API session token. Returns trading dates, exchange status, and user information.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_customer_details(api_session=\"your_api_session\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving Demat Holdings from Breeze API\nDESCRIPTION: Fetches demat holding details including stock codes, ISINs, and quantities using the Breeze API.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_demat_holdings()\n```\n\n----------------------------------------\n\nTITLE: Getting Fund Details from Breeze API\nDESCRIPTION: Retrieves fund information including bank balance and allocations across different segments.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_funds()\n```\n\n----------------------------------------\n\nTITLE: Get Stock Names and Token Information using Breeze SDK in Python\nDESCRIPTION: Retrieves detailed stock information including exchange and ICICI-specific codes and tokens for a given stock. This example fetches information for TATASTEEL on NSE.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_47\n\nLANGUAGE: python\nCODE:\n```\nbreeze.get_names(exchange_code = 'NSE',stock_code = 'TATASTEEL')\n```\n\n----------------------------------------\n\nTITLE: Preview Order Charges using Breeze SDK in Python\nDESCRIPTION: Calculates the estimated brokerage and other charges for a potential order before placing it. This example shows a preview for buying 1 quantity of ITC stock at Rs. 440.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_48\n\nLANGUAGE: python\nCODE:\n```\nbreeze.preview_order(stock_code = \"ITC\",\n            exchange_code = \"NSE\",\n            product = \"margin\",\n            order_type = \"limit\",\n            price = \"440\",\n            action = \"buy\",\n            quantity = \"1\",\n            specialflag = \"N\")\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies for Breeze SDK\nDESCRIPTION: Specifies the required Python packages with minimum version constraints. The dependencies include python-socketio client for WebSocket communication, requests for HTTP operations, and pandas for data manipulation.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npython-socketio[client]>=5.0.0\nrequests>=2.23.0\npandas>=1.0.0\n```\n\n----------------------------------------\n\nTITLE: Calculate Order Limits using Breeze SDK in Python\nDESCRIPTION: Calculates limit values for option plus orders with specified parameters. This example computes limits for a NIFTY Call option with a strike price of 24000 and a stop loss trigger.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_49\n\nLANGUAGE: python\nCODE:\n```\nbreeze.limit_calculator(strike_price=\"24000\",                                    \n            product_type = \"optionplus\",                 \n            expiry_date  = \"06-Feb-2025\",\n            underlying = \"NIFTY\",\n            exchange_code = \"NFO\",\n            order_flow = \"Buy\",\n            stop_loss_trigger = \"8\",\n            option_type = \"Call\",\n            source_flag = \"P\",\n            limit_rate = \"7.5\",\n            order_reference = \"\",\n            available_quantity = \"\",\n            market_type = \"limit\",\n            fresh_order_limit = \"10.95\")\n```\n\n----------------------------------------\n\nTITLE: Place Single-Leg GTT Order in Python\nDESCRIPTION: Places a single-leg GTT order with specified action, limit price and trigger price. Requires exchange code, stock details and order parameters.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_54\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_single_leg_place_order(exchange_code =\"NFO\",\n                    stock_code=\"NIFTY\",\n                    product=\"options\",\n                    quantity = \"75\",\n                    expiry_date=\"2025-02-06T06:00:00.00Z\",\n                    right = \"call\",\n                    strike_price = \"24000\",\n                    gtt_type=\"single\",\n                    index_or_stock=\"index\",\n                    trade_date=\"2025-02-05T06:00:00.00Z\",\n                    order_details=[\n                    {\n                        \"action\" : \"buy\",\n                        \"limit_price\" : \"7\",\n                        \"trigger_price\" : \"8\"\n                    }])\n```\n\n----------------------------------------\n\nTITLE: Place Three-Leg OCO GTT Order in Python\nDESCRIPTION: Places a three-leg OCO GTT order with target and stoploss legs. Requires exchange code, stock details, order parameters and leg configurations for target and stoploss orders.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_51\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_three_leg_place_order(exchange_code =\"NFO\",\n                  stock_code=\"NIFTY\",\n                  product=\"options\",\n                  quantity = \"75\",\n                  expiry_date=\"2025-02-06T06:00:00.00Z\",\n                  right = \"call\",\n                  strike_price = \"24000\",\n                  gtt_type=\"cover_oco\",\n                  fresh_order_action=\"buy\",\n                  fresh_order_price=\"8\",\n                  fresh_order_type=\"limit\",\n                  index_or_stock=\"index\",\n                  trade_date=\"2025-02-05T06:00:00.00Z\",\n                  order_details=[\n                    {\n                      \"gtt_leg_type\" : \"target\",\n                      \"action\" : \"sell\",\n                      \"limit_price\" : \"15\",\n                      \"trigger_price\" : \"14.50\"\n                    },\n                    {\n                      \"gtt_leg_type\" : \"stoploss\",\n                      \"action\" : \"sell\",\n                      \"limit_price\" : \"7\",\n                      \"trigger_price\" : \"7.5\"\n                    },\n                    ])\n```\n\n----------------------------------------\n\nTITLE: Modify Three-Leg GTT Order in Python\nDESCRIPTION: Modifies an existing three-leg GTT order by updating the target and stoploss leg parameters. Requires exchange code, GTT order ID and new leg configurations.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_52\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_three_leg_modify_order(exchange_code = \"NFO\",\n                      gtt_order_id = \"2025020500001234\",\n                      gtt_type =\"oco\",\n                      order_details = [\n                        {\n                          \"gtt_leg_type\" : \"target\",\n                          \"action\" : \"sell\",\n                          \"limit_price\" : \"12\",\n                          \"trigger_price\" : \"11.50\"\n                        },\n                        {\n                          \"gtt_leg_type\" : \"stoploss\",\n                          \"action\" : \"sell\",\n                          \"limit_price\" : \"4\",\n                          \"trigger_price\" : \"5\"\n                        }])\n```\n\n----------------------------------------\n\nTITLE: Cancel Three-Leg GTT Order in Python\nDESCRIPTION: Cancels an existing three-leg GTT order using exchange code and GTT order ID.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_53\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_three_leg_cancel_order(exchange_code = \"NFO\",\n                        gtt_order_id = \"2025020500001234\")\n```\n\n----------------------------------------\n\nTITLE: Cancel Single-Leg GTT Order in Python\nDESCRIPTION: Cancels an existing single-leg GTT order using exchange code and GTT order ID.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_56\n\nLANGUAGE: python\nCODE:\n```\nbreeze.gtt_single_leg_cancel_order(exchange_code = \"NFO\",\n                                   gtt_order_id = \"2025011500003608\")\n```\n\n----------------------------------------\n\nTITLE: Setting Fund Allocations in Breeze API\nDESCRIPTION: Modifies fund allocations by specifying transaction type, amount and segment.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nbreeze.set_funds(transaction_type=\"debit\", \n                    amount=\"200\",\n                    segment=\"Equity\")\n```\n\n----------------------------------------\n\nTITLE: Subscribing to OneClick Strategy Stream\nDESCRIPTION: Demonstrates subscription to the OneClick strategy stream for receiving automated trading signals and recommendations.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nbreeze.subscribe_feeds(stock_token=\"one_click_fno\")\n```\n\n----------------------------------------\n\nTITLE: Generating ISO8601 Date/DateTime Strings in Python\nDESCRIPTION: Converts date strings into ISO8601 formatted date and datetime strings using datetime module. Handles both date-only and date-time inputs with specific formatting.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nimport datetime\niso_date_string = datetime.datetime.strptime(\"28/02/2021\",\"%d/%m/%Y\").isoformat()[:10] + 'T05:30:00.000Z'\niso_date_time_string = datetime.datetime.strptime(\"28/02/2021 23:59:59\",\"%d/%m/%Y %H:%M:%S\").isoformat()[:19] + '.000Z'\n```\n\n----------------------------------------\n\nTITLE: Installing the latest Breeze Connect package\nDESCRIPTION: Command to install the latest version of the Breeze Connect package using pip.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npip install --upgrade breeze-connect\n```\n\n----------------------------------------\n\nTITLE: Installing a specific version of Breeze Connect\nDESCRIPTION: Command to install a specific version (1.0.62) of the Breeze Connect package using pip.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npip install breeze-connect==1.0.62\n```\n\n----------------------------------------\n\nTITLE: Creating a virtual environment for Breeze\nDESCRIPTION: Command to create a new virtual environment named 'breeze_venv' using Python 3.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nvirtualenv -p python3 breeze_venv\n```\n\n----------------------------------------\n\nTITLE: Activating the Breeze virtual environment\nDESCRIPTION: Command to activate the previously created 'breeze_venv' virtual environment.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsource breeze_venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Installing virtualenv via pip\nDESCRIPTION: Command to install the virtualenv package using pip, which is necessary for setting up a virtual environment.\nSOURCE: https://github.com/idirect-tech/breeze-python-sdk/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install virtualenv\n```"
  }
]
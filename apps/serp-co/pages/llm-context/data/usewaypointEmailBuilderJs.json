[
  {
    "owner": "usewaypoint",
    "repo": "email-builder-js",
    "content": "TITLE: Sending Emails via API Using EmailBuilder.js with Axios\nDESCRIPTION: Example of rendering an EmailBuilder.js configuration to HTML and sending it through an email API (using Waypoint) with Axios.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport axios from 'axios';\n\nimport { renderToStaticMarkup } from '@usewaypoint/email-builder';\n\n// Replace this with the JSON for your Reader document\nconst CONFIGURATION: TReaderDocument = {}\n\nawait axios({\n  method: 'post',\n  url: 'https://live.waypointapi.com/v1/email_messages',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  auth: {\n    username: API_KEY_USERNAME,\n    password: API_KEY_PASSWORD,\n  },\n\n  data: {\n    from: 'no-reply@example.com'\n    to: 'friend@example.com',\n    subject: 'Hello',\n    bodyHtml: renderToStaticMarkup(CONFIGURATION, { rootBlockId: 'root' }),\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Sending Emails with Nodemailer Using EmailBuilder.js\nDESCRIPTION: Complete example of rendering an EmailBuilder.js configuration to HTML and sending it via Nodemailer.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { renderToStaticMarkup } from '@usewaypoint/email-builder';\nimport nodemailer from \"nodemailer\";\n\n// Replace this with your transport configuration\nconst transportConfig = {}\nconst transporter = nodemailer.createTransport(transportConfig);\n\n// Replace this with the JSON for your Reader document\nconst CONFIGURATION: TReaderDocument = {}\n\nawait transporter.sendMail({\n  from: 'no-reply@example.com'\n  to: 'friend@example.com',\n  subject: 'Hello',\n  html: renderToStaticMarkup(CONFIGURATION, { rootBlockId: 'root' }),\n});\n```\n\n----------------------------------------\n\nTITLE: Creating and Sending an Email with Waypoint in JavaScript\nDESCRIPTION: Demonstrates how to create an email, set its properties, and send it using the Waypoint client. This example includes setting the subject, content, recipient, and sender information.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/email-builder/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst email = waypoint.create();\n\nemail\n  .subject('Welcome to Waypoint!')\n  .text('Plain text content')\n  .html('<p>HTML content</p>')\n  .to('user@example.com')\n  .from('noreply@yourdomain.com');\n\nconst response = await email.send();\n```\n\n----------------------------------------\n\nTITLE: Defining EmailBuilder.js Configuration in JavaScript\nDESCRIPTION: Example of an EmailBuilder.js configuration object in JavaScript that defines a simple email with a text block saying 'Hello world'.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { TReaderDocument } from '@usewaypoint/email-builder';\n\nconst CONFIGURATION: TReaderDocument = {\n  root: {\n    type: 'EmailLayout',\n    data: {\n      backdropColor: '#F8F8F8',\n      canvasColor: '#FFFFFF',\n      textColor: '#242424',\n      fontFamily: 'MODERN_SANS',\n      childrenIds: ['block-1709578146127'],\n    },\n  },\n  'block-1709578146127': {\n    type: 'Text',\n    data: {\n      style: {\n        fontWeight: 'normal',\n        padding: {\n          top: 16,\n          bottom: 16,\n          right: 24,\n          left: 24,\n        },\n      },\n      props: {\n        text: 'Hello world',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering EmailBuilder.js Configuration to HTML String\nDESCRIPTION: Code to convert an EmailBuilder.js configuration into a static HTML markup string that can be used in emails.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { renderToStaticMarkup } from '@usewaypoint/email-builder';\n\nconst string = renderToStaticMarkup(CONFIGURATION, { rootBlockId: 'root' });\n```\n\n----------------------------------------\n\nTITLE: Rendering EmailBuilder.js Configuration with React Component\nDESCRIPTION: Example showing how to use the Reader React component to render an EmailBuilder.js configuration in a React application.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Reader } from '@usewaypoint/email-builder';\n\n<Reader document={CONFIGURATION} rootBlockId=\"root\" />;\n```\n\n----------------------------------------\n\nTITLE: Initializing Waypoint Email Client in JavaScript\nDESCRIPTION: Creates a new instance of the Waypoint email client using an API key. This client is used to interact with the Waypoint API for sending emails.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/email-builder/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Waypoint } from '@usewaypoint/email-builder';\n\nconst waypoint = new Waypoint('your-api-key');\n```\n\n----------------------------------------\n\nTITLE: Defining Document Blocks Dictionary\nDESCRIPTION: Example of creating a dictionary mapping block names to objects containing Zod schema and React components. Shows implementation of an Alert component with message validation.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/document-core/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst dictionary = {\n  Alert: {\n    schema: z.object({\n      message: z.string(),\n    }),\n    Component: ({ message }: { message: string }) => {\n      return <div>{message.toUpperCase()}</div>\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Block Component Usage\nDESCRIPTION: Demonstrates how to use the buildBlockComponent function to create a Block component that renders based on type and data props.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/document-core/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst Block = buildBlockComponent(dictionary);\n\n<Block type=\"Alert\" data={{message: 'Hello World' }} />\n```\n\n----------------------------------------\n\nTITLE: Building Block Configuration Schema\nDESCRIPTION: Shows how to use the buildBlockConfigurationSchema function to create and validate block configurations using the dictionary schema.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/document-core/README.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst Schema = buildBlockConfigurationSchema(dictionary);\n\nconst parsedData = Schema.safeParse({\n  type: 'Alert',\n  data: { message: 'Hello World' },\n});\n```\n\n----------------------------------------\n\nTITLE: Setting up EmailBuilder.js Sample Repository\nDESCRIPTION: Commands for installing dependencies and starting the local development server for the EmailBuilder.js sample. This process involves installing dependencies with npm and running the Vite development server.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/editor-sample/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpx vite\n```\n\n----------------------------------------\n\nTITLE: Installing EmailBuilder.js Package\nDESCRIPTION: Command to install the EmailBuilder.js package from npm into your project.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save @usewaypoint/email-builder\n```\n\n----------------------------------------\n\nTITLE: Installing Document Core Package with NPM\nDESCRIPTION: Command to install the @usewaypoint/document-core package using npm package manager.\nSOURCE: https://github.com/usewaypoint/email-builder-js/blob/main/packages/document-core/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save @usewaypoint/document-core\n```"
  }
]
[
  {
    "owner": "target",
    "repo": "goalert",
    "content": "TITLE: Running GoAlert in Docker Container\nDESCRIPTION: Docker command to run GoAlert as a containerized application. It exposes port 8081 and sets environment variables for database connection, data encryption, and public URL configuration.\nSOURCE: https://github.com/target/goalert/blob/master/docs/getting-started.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8081:8081 -e GOALERT_DB_URL=postgres://goalert@localhost/goalert -e GOALERT_DATA_ENCRYPTION_KEY=super-awesome-secret-key -e GOALERT_PUBLIC_URL=https://goalert.example.com goalert/goalert\n```\n\n----------------------------------------\n\nTITLE: cURL Examples for Generic API in GoAlert\nDESCRIPTION: Provides examples of using cURL to send alerts via the Generic API integration in GoAlert. Demonstrates different use cases such as sending a basic alert, using a deduplication key, and closing an alert.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/IntegrationKeys.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -XPOST https://<example.goalert.me>/api/v2/generic/incoming?token=key-here&summary=test&details=test\ncurl -XPOST https://<example.goalert.me>/api/v2/generic/incoming?token=key-here&summary=test&dedup=disk-check\ncurl -XPOST https://<example.goalert.me>/api/v2/generic/incoming?token=key-here&summary=test&action=close\n```\n\n----------------------------------------\n\nTITLE: Sending Metadata in JSON Body for Generic API in GoAlert\nDESCRIPTION: Shows how to include metadata in the JSON request body when sending an alert using the Generic API integration in GoAlert. This method allows attaching additional key-value information to the alert in a structured format.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/IntegrationKeys.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"summary\": \"test\",\n   \"details\": \"test\",\n   \"meta\": {\n      \"example_key\": \"example_value\",\n      \"example_key2\": \"example_value2\"\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Alert Notification Webhook Payload in GoAlert\nDESCRIPTION: JSON payload structure for single alert notifications, including alert ID, summary, details, and custom metadata fields.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/Webhooks.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AppName\": \"GoAlert\",\n    \"Type\": \"Alert\",\n    \"AlertID\": 79685,\n    \"Summary\": \"Example Summary\",\n    \"Details\": \"Example Details...\"\n    \"Meta\": {\n        \"example_field\": \"example_value\",\n        \"example_field2\": \"example_value2\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Alertmanager Webhook in YAML\nDESCRIPTION: Shows the YAML configuration for adding a webhook receiver in Prometheus Alertmanager to integrate with GoAlert. The configuration includes the webhook URL and enables sending resolved alerts.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/IntegrationKeys.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nreceivers:\n  - name: 'service'\n    webhook_configs:\n      - url: '<prometheus_alertmanager_webhook_url_from_previous_step>'\n        send_resolved: true\n```\n\n----------------------------------------\n\nTITLE: JSON Response Format for Generic API in GoAlert\nDESCRIPTION: Illustrates the JSON response format when the 'Accept' header is set to 'application/json' in a Generic API request to GoAlert. The response includes the AlertID, ServiceID, and whether the alert is new or a duplicate.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/IntegrationKeys.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AlertID\": 10,\n  \"ServiceID\": \"00000000-0000-0000-0000-000000000001\",\n  \"IsNew\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Running GoAlert Demo Container with Docker\nDESCRIPTION: Command to start a GoAlert demo instance using Docker. Runs on port 8081 with default admin credentials (admin/admin123) and includes optional environment variables for integration testing.\nSOURCE: https://github.com/target/goalert/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm -p 8081:8081 goalert/demo\n```\n\n----------------------------------------\n\nTITLE: Running GoAlert Binary with Configuration Parameters\nDESCRIPTION: Command to start GoAlert binary directly with database URL, encryption key, and public URL parameters. This example configures GoAlert to connect to a local Postgres database with specific credentials and security settings.\nSOURCE: https://github.com/target/goalert/blob/master/docs/getting-started.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngoalert --db-url postgres://goalert@localhost/goalert --data-encryption-key super-awesome-secret-key --public-url https://goalert.example.com\n```\n\n----------------------------------------\n\nTITLE: Basic Form Validation Example in React\nDESCRIPTION: A code example demonstrating the usage of Form, FormContainer, and FormField components together. The example shows validation for a numeric input field, with error handling and submission control based on validation status.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/forms/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<Form\n  onSubmit={(event, isValid) => {\n    e.preventDefault()\n    // isValid will be true if all FormContainers report no validation errors\n    if (isValid) doMutation()\n  }}\n>\n  <FormContainer value={{ foo: 'bar' }}>\n    <FormField\n      component={TextField}\n      name='foo'\n      label='Foo'\n      // required indicates the field must not be empty\n      required\n      // validate allows custom validation & error messages\n      validate={value =>\n        /^\\d+$/.test(value) ? null : new Error('Only numbers allowed.')\n      }\n    />\n  </FormContainer>\n  // ... Multiple FormContainers can be placed in the same form (e.g. SetupWizard)\n</Form>\n```\n\n----------------------------------------\n\nTITLE: Alert Status Update Webhook Payload in GoAlert\nDESCRIPTION: JSON payload structure for alert status updates. Requires users to enable Alert Status Updates in their profile.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/Webhooks.md#2025-04-23_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AppName\": \"GoAlert\",\n    \"Type\": \"AlertStatus\",\n    \"AlertID\": 79694,\n    \"LogEntry\": \"Closed via test integration (Generic API)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting the GoAlert Development Environment\nDESCRIPTION: Command to start the GoAlert development environment using Docker. This initializes all necessary services and makes the application available at http://localhost:3030.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake start\n```\n\n----------------------------------------\n\nTITLE: Sending Metadata in URL Parameters for Generic API in GoAlert\nDESCRIPTION: Demonstrates how to include metadata in the URL parameters when sending an alert using the Generic API integration in GoAlert. This method allows attaching additional key-value information to the alert.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/IntegrationKeys.md#2025-04-23_snippet_0\n\nLANGUAGE: url\nCODE:\n```\n/api/v2/generic/incomming?token=<token>&meta=example_key=example_value&meta=example_key2=example_value2\n```\n\n----------------------------------------\n\nTITLE: Alert Bundle Webhook Payload in GoAlert\nDESCRIPTION: JSON payload structure for multiple alerts from the same service. Requires administrator enablement of message bundles.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/Webhooks.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AppName\": \"GoAlert\",\n    \"Type\": \"AlertBundle\",\n    \"ServiceID\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    \"ServiceName\": \"Example Service\",\n    \"Count\": 6\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Admin User with the add-user Command\nDESCRIPTION: Example of using the add-user subcommand to create an administrative user in GoAlert. The command creates a new user with admin privileges, specified username and email, and will prompt for a password.\nSOURCE: https://github.com/target/goalert/blob/master/docs/getting-started.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngoalert add-user --db-url $GOALERT_DB_URL --admin --user admin --email admin@example.com\n# Prompt will be given for password\n```\n\n----------------------------------------\n\nTITLE: Starting GoAlert with a Public URL for External Access\nDESCRIPTION: Command to start the GoAlert development environment with a custom public URL. This is necessary for features that require external callbacks like webhooks from third-party services.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake start PUBLIC_URL=https://localdev.example.com\n```\n\n----------------------------------------\n\nTITLE: Configuring GoAlert Instances for Switchover using Environment Variables\nDESCRIPTION: This snippet shows how to configure GoAlert for switchover using environment variables rather than command line flags. It sets both the current and target database URLs.\nSOURCE: https://github.com/target/goalert/blob/master/docs/switchover.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport GOALERT_DB_URL=<old-db-url>\nexport GOALERT_DB_URL_NEXT=<new-db-url>\n```\n\n----------------------------------------\n\nTITLE: Test Message Webhook Payload in GoAlert\nDESCRIPTION: JSON payload structure for test messages that can be triggered from the profile page.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/Webhooks.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AppName\": \"GoAlert\",\n    \"Type\": \"Test\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring GoAlert Instances for Switchover using Command Line Flags\nDESCRIPTION: This command starts GoAlert with both the current database URL and the target database URL for switchover preparation. It uses command line flags to specify both database connections.\nSOURCE: https://github.com/target/goalert/blob/master/docs/switchover.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngoalert --db-url=<old-db-url> --db-url-next=<new-db-url>\n```\n\n----------------------------------------\n\nTITLE: SendIt Client Example\nDESCRIPTION: Example of connecting a local service running on port 3030 to a SendIt server at example.com with prefix 'foobar'. This makes the local service accessible at example.com/foobar.\nSOURCE: https://github.com/target/goalert/blob/master/devtools/sendit/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsendit -token xxxxxx https://example.com/foobar http://localhost:3030\n```\n\n----------------------------------------\n\nTITLE: Verification Webhook Payload in GoAlert\nDESCRIPTION: JSON payload structure sent when a new webhook contact method is created. Contains verification code for setup confirmation.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/app/documentation/sections/Webhooks.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AppName\": \"GoAlert\",\n    \"Type\": \"Verification\",\n    \"Code\": \"283917\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running the SendIt Server\nDESCRIPTION: Command for starting the SendIt server with an optional security token. Using the secret flag is recommended when exposing the server publicly to require client authentication.\nSOURCE: https://github.com/target/goalert/blob/master/devtools/sendit/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsendit-server -secret <SECRET_STRING>\n```\n\n----------------------------------------\n\nTITLE: Running the SendIt Client\nDESCRIPTION: Command for connecting a local service to the SendIt server. This establishes a reverse proxy from the specified server URL prefix to your local URL. Requires a token when connecting to a secure server.\nSOURCE: https://github.com/target/goalert/blob/master/devtools/sendit/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsendit -token <TOKEN> <SERVER_URL>/<DESIRED_PREFIX> <LOCAL_URL>\n```\n\n----------------------------------------\n\nTITLE: Post-Switchover Configuration with Command Line Flags\nDESCRIPTION: After a successful switchover, this command reconfigures GoAlert to use only the new database URL. It removes the secondary database reference since the switchover is complete.\nSOURCE: https://github.com/target/goalert/blob/master/docs/switchover.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngoalert --db-url=<new-db-url>\n```\n\n----------------------------------------\n\nTITLE: Running GoAlert Smoke Tests\nDESCRIPTION: Command to run the full suite of smoke tests for GoAlert. These tests cover various APIs and behaviors of the server component and require PostgreSQL to be running.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nmake test-smoke\n```\n\n----------------------------------------\n\nTITLE: Running GoAlert Unit Tests\nDESCRIPTION: Command to run all Go unit tests for GoAlert. This tests the backend functionality and components independent of the UI.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nmake test-unit\n```\n\n----------------------------------------\n\nTITLE: Using Cypress Support Functions in GoAlert Tests\nDESCRIPTION: Demonstrates how to chain custom support functions from custom helper methods in Cypress tests. This example shows selecting an input element by its name attribute and then using a custom selectByLabel method.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/cypress/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncy.get('input[name=someInput]').selectByLabel('Label Name')\n```\n\n----------------------------------------\n\nTITLE: Starting PostgreSQL Server for GoAlert\nDESCRIPTION: Command to start a PostgreSQL instance using Docker specifically for GoAlert development. This is automatically done with 'make start' but can be run separately if needed.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake postgres\n```\n\n----------------------------------------\n\nTITLE: Running Go Tests for Specific Package\nDESCRIPTION: Command to run Go tests for a specific package or file in GoAlert. This is useful when developing or debugging a particular component.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ngo test ./path/to/package -v\n```\n\n----------------------------------------\n\nTITLE: Starting Playwright UI for GoAlert Testing\nDESCRIPTION: Command to open the Playwright Test Runner UI for GoAlert. This allows interactive running and debugging of browser automation tests.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmake playwright-ui\n```\n\n----------------------------------------\n\nTITLE: Running Smoketest Suite in Shell\nDESCRIPTION: Command to run all smoketests from the root of the repository. This command rebuilds GoAlert, including any change migrations.\nSOURCE: https://github.com/target/goalert/blob/master/test/smoke/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake smoketest\n```\n\n----------------------------------------\n\nTITLE: Running All UI Unit Tests in GoAlert\nDESCRIPTION: Command to run all UI unit tests for GoAlert. This uses Jest to test frontend components independently of the Go backend.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nmake jest\n```\n\n----------------------------------------\n\nTITLE: Running Grafana 7 Docker Container\nDESCRIPTION: Command to start Grafana 7.5.13 in a Docker container, exposing port 3000\nSOURCE: https://github.com/target/goalert/blob/master/grafana/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm -p 3000:3000 grafana/grafana:7.5.13\n```\n\n----------------------------------------\n\nTITLE: Running Grafana 8 Docker Container\nDESCRIPTION: Command to start Grafana 8.3.4 in a Docker container, exposing port 3000\nSOURCE: https://github.com/target/goalert/blob/master/grafana/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm -p 3000:3000 grafana/grafana:8.3.4\n```\n\n----------------------------------------\n\nTITLE: Running Playwright Tests in Headless Mode\nDESCRIPTION: Command to run all Playwright tests for GoAlert in headless mode. This is suitable for continuous integration pipelines or automated testing scenarios.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nmake playwright-run\n```\n\n----------------------------------------\n\nTITLE: Post-Switchover Configuration with Environment Variables\nDESCRIPTION: This snippet shows how to update the environment variables after a successful switchover. It sets the primary database URL to the new database and unsets the secondary database URL.\nSOURCE: https://github.com/target/goalert/blob/master/docs/switchover.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport GOALERT_DB_URL=<new-db-url>\nunset GOALERT_DB_URL_NEXT\n```\n\n----------------------------------------\n\nTITLE: Rollback Configuration with Command Line Flags\nDESCRIPTION: This command reverts GoAlert to use only the original database URL during a rollback procedure. It removes the secondary database configuration to cancel the switchover process.\nSOURCE: https://github.com/target/goalert/blob/master/docs/switchover.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngoalert --db-url=<old-db-url>\n```\n\n----------------------------------------\n\nTITLE: Regenerating the GoAlert Database\nDESCRIPTION: Command to reset the database and generate a fresh schema with sample data. This is useful for resolving migration errors or testing with clean data.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmake regendb\n```\n\n----------------------------------------\n\nTITLE: Running UI Tests in Watch Mode\nDESCRIPTION: Command to run UI tests in watch mode, which automatically re-runs tests when files change. This is useful during active frontend development.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nmake jest JEST_ARGS=--watch\n```\n\n----------------------------------------\n\nTITLE: Running Specific UI Test File\nDESCRIPTION: Command to run a specific UI test file in GoAlert. This allows testing individual components without running the entire test suite.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nmake jest JEST_ARGS=path/to/your.test.js\n```\n\n----------------------------------------\n\nTITLE: Rollback Configuration with Environment Variables\nDESCRIPTION: This snippet shows how to revert environment variables during a rollback procedure. It restores the original database URL and removes the secondary database URL configuration.\nSOURCE: https://github.com/target/goalert/blob/master/docs/switchover.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport GOALERT_DB_URL=<old-db-url>\nunset GOALERT_DB_URL_NEXT\n```\n\n----------------------------------------\n\nTITLE: Generating UI Test Coverage Reports\nDESCRIPTION: Command to generate test coverage reports for UI tests in GoAlert. This helps identify which parts of the frontend code are tested and which need more coverage.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nmake jest JEST_ARGS=--coverage\n```\n\n----------------------------------------\n\nTITLE: Scaling Sample Data in GoAlert Database\nDESCRIPTION: Command to regenerate the database with a specified amount of sample data. The SIZE parameter controls the volume of random data inserted, useful for testing scalability.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmake regendb SIZE=10\n```\n\n----------------------------------------\n\nTITLE: Generating SendIt Authentication Tokens\nDESCRIPTION: Command for generating authentication tokens that clients can use to connect to a secure SendIt server. The secret string must match the one used when starting the server.\nSOURCE: https://github.com/target/goalert/blob/master/devtools/sendit/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsendit-token -secret <SECRET_STRING>\n```\n\n----------------------------------------\n\nTITLE: Importing Cypress Fixtures in GoAlert Tests\nDESCRIPTION: Shows how to import JSON fixtures in Cypress test files to access mock data. This example imports the users.json fixture which likely contains mock user data for testing.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/cypress/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport users from '../fixtures/users.json'\n```\n\n----------------------------------------\n\nTITLE: Starting GoAlert with HTTP Prefix\nDESCRIPTION: Command for starting GoAlert with an HTTP prefix configuration to work with SendIt. This ensures GoAlert is aware of the proxy path prefix when generating URLs.\nSOURCE: https://github.com/target/goalert/blob/master/devtools/sendit/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake start HTTP_PREFIX=/foobar\n```\n\n----------------------------------------\n\nTITLE: Configuring ngrok for Local Development in Procfile.local\nDESCRIPTION: Configuration line for ngrok to expose the local GoAlert server to the internet. This allows testing webhook integrations without deploying to a public server.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nngrok: ngrok http 3030\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Connection String for GoAlert\nDESCRIPTION: The connection string for the local PostgreSQL database used by GoAlert. This can be used with database clients to connect to and interact with the GoAlert database.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_5\n\nLANGUAGE: text\nCODE:\n```\npostgres://goalert@localhost:5432/goalert\n```\n\n----------------------------------------\n\nTITLE: Configuring VSCode for GoAlert Development\nDESCRIPTION: Command to install the Yarn SDK for VSCode, ensuring compatibility with GoAlert's Yarn Plug'n'Play setup. This resolves dependency resolution issues in VSCode.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake vscode\n```\n\n----------------------------------------\n\nTITLE: Visualizing SWO Cluster State Transitions with Mermaid\nDESCRIPTION: This Mermaid sequence diagram illustrates the state transitions and interactions between an Admin, API Node, Message Log, and Engine Node in the SWO process. It covers states from Unknown to Done, including Reset, Idle, Syncing, Pausing, and Executing stages.\nSOURCE: https://github.com/target/goalert/blob/master/swo/swogrp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\nactor admin as Admin\nparticipant api as API Node\nparticipant log as Message Log\nparticipant engine as Engine Node\n\n\nnote over admin,engine: Cluster State: **Unknown**\nadmin ->> api : Click(Reset)\nactivate api\napi ->> log : \"cancel\"\napi ->> api : DisableTriggers()\napi ->> log : \"reset\"\napi -->> admin: OK\ndeactivate api\n\nnote over admin,engine: Cluster State: **Resetting**\n\nengine ->> log: \"hello\"\nactivate engine\nnote over engine: Becomes Leader\napi ->> log: \"hello\"\nengine ->> engine: Wait 3s for \"hello\" messages\nengine ->> log: \"reset-end\"\ndeactivate engine\nnote over admin,engine: Cluster State: **Idle**\n\nadmin ->> api: Click(Execute)\nactivate api\napi ->> log: \"execute\"\napi -->> admin: OK\ndeactivate api\n\nnote over admin,engine: Cluster State: **Syncing**\n\nlog -->> engine: \"execute\"\nactivate engine\nengine ->> engine: EnableTriggers()\nengine ->> engine: InitialSync()\nengine ->> engine: LogicalSync() x10\nengine ->> log: \"pause\"\ndeactivate engine\n\nnote over admin,engine: Cluster State: **Pausing**\nengine ->> engine: Pause()\nengine ->> log: \"paused\"\napi ->> api: Pause()\napi ->> log: \"paused\"\n\nnote over admin,engine: Cluster State: **Executing**\nlog -->> engine: 2/2 \"paused\"\nactivate engine\nengine ->> engine: LogicalSync() x10\nengine ->> engine: FinalSync()\nengine ->> log: \"done\"\ndeactivate engine\n\nnote over admin,engine: Cluster State: **Done**\n```\n\n----------------------------------------\n\nTITLE: Running jscodeshift with Codemod Scripts\nDESCRIPTION: This code snippet demonstrates how to run jscodeshift with a codemod script against a specific directory. It first shows how to install jscodeshift using yarn, then provides an example command that applies the 'relpath' codemod to everything under the './app' directory.\nSOURCE: https://github.com/target/goalert/blob/master/web/src/codemods/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# make sure you have jscodeshift installed\nyarn global add jscodeshift\n\n# use -t to reference the script, then give it the path(s) to directories or js files to update\n#\n# this example will apploy the relpath codemod to everything under ./app\njscodeshift -t ./codemods/relpath.js ./app\n```\n\n----------------------------------------\n\nTITLE: Initializing Parallel Test in Go\nDESCRIPTION: Code snippet showing how to initialize a parallel test in Go, including deferring the closing of a test helper.\nSOURCE: https://github.com/target/goalert/blob/master/test/smoke/README.md#2025-04-23_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nt.Parallel()\ndefer h.Close()\n```\n\n----------------------------------------\n\nTITLE: Running Single Test in Go\nDESCRIPTION: Command to run a single test from the smoketest directory using Go's test runner.\nSOURCE: https://github.com/target/goalert/blob/master/test/smoke/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngo test\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL Role for GoAlert Manually\nDESCRIPTION: SQL command to manually create the goalert role with superuser privileges in PostgreSQL. This is an alternative to using Docker for database setup.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nCREATE ROLE goalert WITH LOGIN SUPERUSER;\n```\n\n----------------------------------------\n\nTITLE: Enabling pgcrypto Extension for GoAlert Database\nDESCRIPTION: SQL command to manually enable the pgcrypto extension required by GoAlert. This is an alternative if you prefer not to grant superuser privileges to the goalert user.\nSOURCE: https://github.com/target/goalert/blob/master/docs/development-setup.md#2025-04-23_snippet_9\n\nLANGUAGE: sql\nCODE:\n```\nCREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;\n```\n\n----------------------------------------\n\nTITLE: Benchmarking Performance for UIK Worst-Case Scenarios in Go\nDESCRIPTION: Performance benchmark results showing execution times for complex UIK configurations in worst-case scenarios, measuring actions and rules processing speed on an Intel Core i9-14900K CPU.\nSOURCE: https://github.com/target/goalert/blob/master/docs/universal-integration-keys.md#2025-04-23_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ncpu: Intel(R) Core(TM) i9-14900K\n\nBenchmarkMostActions-32  6034     189660 ns/op    102333 B/op    929 allocs/op\nBenchmarkMostRules-32     715    1754745 ns/op    870548 B/op   3590 allocs/op\n```\n\n----------------------------------------\n\nTITLE: Running GoAlert Load Tests with k6\nDESCRIPTION: Commands for executing GoAlert load tests using k6, specifically demonstrating how to run the 'hello' test either from the current directory or from the repository root.\nSOURCE: https://github.com/target/goalert/blob/master/test/load/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n./k6-run hello.ts\n\n# or from the root of the repository\n./test/load/k6-run ./test/load/hello.ts\n```\n\n----------------------------------------\n\nTITLE: ADR Template Structure in Markdown\nDESCRIPTION: Standard template for documenting architectural decisions with sections for context, decision drivers, options, outcomes, and consequences. Includes optional sections for pros/cons analysis and related links.\nSOURCE: https://github.com/target/goalert/blob/master/docs/adrs/template.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [short title of solved problem and solution]\n\n- Status: [draft | proposed | rejected | accepted | deprecated | … | superseded by [xxx](yyyymmdd-xxx.md)] <!-- optional -->\n- Date: [YYYY-MM-DD when the decision was last updated] <!-- optional. To customize the ordering without relying on Git creation dates and filenames -->\n\n**Acceptance Criteria**: <!-- Pick one or more -->\n\n- Majority: Simple Majority of requested reviewers\n- Clear Consensus: Simple Majority of requested reviewers AND no rejections\n- Custom: {{ WRITE HERE }}\n\nTechnical Story: [description | ticket/issue URL] <!-- optional -->\n\n## Context and Problem Statement\n\n[Describe the context and problem statement, e.g., in free form using two to three sentences. You may want to articulate the problem in form of a question.]\n\n## Decision Drivers <!-- optional -->\n\n- [driver 1, e.g., a force, facing concern, …]\n- [driver 2, e.g., a force, facing concern, …]\n- … <!-- numbers of drivers can vary -->\n\n## Considered Options\n\n- [option 1]\n- [option 2]\n- [option 3]\n- … <!-- numbers of options can vary -->\n\n## Decision Outcome\n\nChosen option: \"[option 1]\", because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | … | comes out best (see below)].\n\n### Positive Consequences <!-- optional -->\n\n- [e.g., improvement of quality attribute satisfaction, follow-up decisions required, …]\n- …\n\n### Negative Consequences <!-- optional -->\n\n- [e.g., compromising quality attribute, follow-up decisions required, …]\n- …\n\n## Pros and Cons of the Options <!-- optional -->\n\n### [option 1]\n\n[example | description | pointer to more information | …] <!-- optional -->\n\n- ✅ Good, because [argument a]\n- ✅ Good, because [argument b]\n- ❌ Bad, because [argument c]\n- … <!-- numbers of pros and cons can vary -->\n\n### [option 2]\n\n[example | description | pointer to more information | …] <!-- optional -->\n\n- ✅ Good, because [argument a]\n- ✅ Good, because [argument b]\n- ❌ Bad, because [argument c]\n- … <!-- numbers of pros and cons can vary -->\n\n### [option 3]\n\n[example | description | pointer to more information | …] <!-- optional -->\n\n- ✅ Good, because [argument a]\n- ✅ Good, because [argument b]\n- ❌ Bad, because [argument c]\n- … <!-- numbers of pros and cons can vary -->\n\n## Links <!-- optional -->\n\n- [Link type](link to adr) <!-- example: Refined by [xxx](yyyymmdd-xxx.md) -->\n- … <!-- numbers of links can vary -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Zone Aliases in Plaintext\nDESCRIPTION: This snippet contains a list of time zone alias mappings. Each line represents a mapping from a deprecated or alternative time zone name to its current standard equivalent. The file is auto-generated and should not be manually edited.\nSOURCE: https://github.com/target/goalert/blob/master/timezone/aliases.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# This file is auto-generated by 'make timezone/aliases.txt'; DO NOT EDIT\nAfrica/Asmera=Africa/Nairobi\nAfrica/Timbuktu=Africa/Abidjan\nAmerica/Argentina/ComodRivadavia=America/Argentina/Catamarca\nAmerica/Atka=America/Adak\nAmerica/Buenos_Aires=America/Argentina/Buenos_Aires\nAmerica/Catamarca=America/Argentina/Catamarca\nAmerica/Coral_Harbour=America/Panama\nAmerica/Cordoba=America/Argentina/Cordoba\nAmerica/Ensenada=America/Tijuana\nAmerica/Fort_Wayne=America/Indiana/Indianapolis\nAmerica/Godthab=America/Nuuk\nAmerica/Indianapolis=America/Indiana/Indianapolis\nAmerica/Jujuy=America/Argentina/Jujuy\nAmerica/Knox_IN=America/Indiana/Knox\nAmerica/Kralendijk=America/Puerto_Rico\nAmerica/Louisville=America/Kentucky/Louisville\nAmerica/Lower_Princes=America/Puerto_Rico\nAmerica/Marigot=America/Puerto_Rico\nAmerica/Mendoza=America/Argentina/Mendoza\nAmerica/Montreal=America/Toronto\nAmerica/Nipigon=America/Toronto\nAmerica/Pangnirtung=America/Iqaluit\nAmerica/Porto_Acre=America/Rio_Branco\nAmerica/Rainy_River=America/Winnipeg\nAmerica/Rosario=America/Argentina/Cordoba\nAmerica/Santa_Isabel=America/Tijuana\nAmerica/Shiprock=America/Denver\nAmerica/St_Barthelemy=America/Puerto_Rico\nAmerica/Thunder_Bay=America/Toronto\nAmerica/Virgin=America/Puerto_Rico\nAmerica/Yellowknife=America/Edmonton\nAntarctica/South_Pole=Pacific/Auckland\nArctic/Longyearbyen=Europe/Berlin\nAsia/Ashkhabad=Asia/Ashgabat\nAsia/Calcutta=Asia/Kolkata\nAsia/Chongqing=Asia/Shanghai\nAsia/Chungking=Asia/Shanghai\nAsia/Dacca=Asia/Dhaka\nAsia/Harbin=Asia/Shanghai\nAsia/Istanbul=Europe/Istanbul\nAsia/Kashgar=Asia/Urumqi\nAsia/Katmandu=Asia/Kathmandu\nAsia/Macao=Asia/Macau\nAsia/Rangoon=Asia/Yangon\nAsia/Saigon=Asia/Ho_Chi_Minh\nAsia/Tel_Aviv=Asia/Jerusalem\nAsia/Thimbu=Asia/Thimphu\nAsia/Ujung_Pandang=Asia/Makassar\nAsia/Ulan_Bator=Asia/Ulaanbaatar\nAtlantic/Faeroe=Atlantic/Faroe\nAtlantic/Jan_Mayen=Europe/Berlin\nAustralia/ACT=Australia/Sydney\nAustralia/Canberra=Australia/Sydney\nAustralia/Currie=Australia/Hobart\nAustralia/LHI=Australia/Lord_Howe\nAustralia/North=Australia/Darwin\nAustralia/NSW=Australia/Sydney\nAustralia/Queensland=Australia/Brisbane\nAustralia/South=Australia/Adelaide\nAustralia/Tasmania=Australia/Hobart\nAustralia/Victoria=Australia/Melbourne\nAustralia/West=Australia/Perth\nAustralia/Yancowinna=Australia/Broken_Hill\nBrazil/Acre=America/Rio_Branco\nBrazil/DeNoronha=America/Noronha\nBrazil/East=America/Sao_Paulo\nBrazil/West=America/Manaus\nCanada/Atlantic=America/Halifax\nCanada/Central=America/Winnipeg\nCanada/Eastern=America/Toronto\nCanada/Mountain=America/Edmonton\nCanada/Newfoundland=America/St_Johns\nCanada/Pacific=America/Vancouver\nCanada/Saskatchewan=America/Regina\nCanada/Yukon=America/Whitehorse\nCET=CET\nChile/Continental=America/Santiago\nChile/EasterIsland=Pacific/Easter\nCST6CDT=CST6CDT\nCuba=America/Havana\nEET=EET\nEgypt=Africa/Cairo\nEire=Europe/Dublin\nEST5EDT=EST5EDT\nEST=EST\nEtc/GMT+0=Etc/GMT\nEtc/GMT-0=Etc/GMT\nEtc/GMT0=Etc/GMT\nEtc/Greenwich=Etc/GMT\nEtc/UCT=Etc/UTC\nEtc/Universal=Etc/UTC\nEtc/Zulu=Etc/UTC\nEurope/Belfast=Europe/London\nEurope/Bratislava=Europe/Prague\nEurope/Busingen=Europe/Zurich\nEurope/Kiev=Europe/Kyiv\nEurope/Mariehamn=Europe/Helsinki\nEurope/Nicosia=Asia/Nicosia\nEurope/Podgorica=Europe/Belgrade\nEurope/San_Marino=Europe/Rome\nEurope/Tiraspol=Europe/Chisinau\nEurope/Uzhgorod=Europe/Kyiv\nEurope/Vatican=Europe/Rome\nEurope/Zaporozhye=Europe/Kyiv\nFactory=Factory\nGB-Eire=Europe/London\nGB=Europe/London\nGMT+0=Etc/GMT\nGMT-0=Etc/GMT\nGMT0=Etc/GMT\nGMT=Etc/GMT\nGreenwich=Etc/GMT\nHongkong=Asia/Hong_Kong\nHST=HST\nIceland=Africa/Abidjan\nIran=Asia/Tehran\nIsrael=Asia/Jerusalem\nJamaica=America/Jamaica\nJapan=Asia/Tokyo\nKwajalein=Pacific/Kwajalein\nLibya=Africa/Tripoli\nMET=MET\nMexico/BajaNorte=America/Tijuana\nMexico/BajaSur=America/Mazatlan\nMexico/General=America/Mexico_City\nMST7MDT=MST7MDT\nMST=MST\nNavajo=America/Denver\nNZ-CHAT=Pacific/Chatham\nNZ=Pacific/Auckland\nPacific/Enderbury=Pacific/Kanton\nPacific/Johnston=Pacific/Honolulu\nPacific/Ponape=Pacific/Guadalcanal\nPacific/Samoa=Pacific/Pago_Pago\nPacific/Truk=Pacific/Port_Moresby\nPacific/Yap=Pacific/Port_Moresby\nPoland=Europe/Warsaw\nPortugal=Europe/Lisbon\nPRC=Asia/Shanghai\nPST8PDT=PST8PDT\nROC=Asia/Taipei\nROK=Asia/Seoul\nSingapore=Asia/Singapore\nTurkey=Europe/Istanbul\nUCT=Etc/UTC\nUniversal=Etc/UTC\nUS/Alaska=America/Anchorage\nUS/Aleutian=America/Adak\nUS/Arizona=America/Phoenix\nUS/Central=America/Chicago\nUS/Eastern=America/New_York\nUS/East-Indiana=America/Indiana/Indianapolis\nUS/Hawaii=Pacific/Honolulu\nUS/Indiana-Starke=America/Indiana/Knox\nUS/Michigan=America/Detroit\nUS/Mountain=America/Denver\nUS/Pacific=America/Los_Angeles\nUS/Samoa=Pacific/Pago_Pago\nUTC=Etc/UTC\nWET=WET\nW-SU=Europe/Moscow\nZulu=Etc/UTC\n```\n\n----------------------------------------\n\nTITLE: Configuring Timezone Zones List\nDESCRIPTION: This is an auto-generated list of timezone identifiers that defines all supported timezone zones in the GoAlert project. The list is organized geographically and follows the IANA timezone database format.\nSOURCE: https://github.com/target/goalert/blob/master/timezone/zones.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# This file is auto-generated by 'make timezone/zones.txt'; DO NOT EDIT\nAfrica/Abidjan\nAfrica/Accra\nAfrica/Addis_Ababa\nAfrica/Algiers\nAfrica/Asmara\nAfrica/Bamako\nAfrica/Bangui\nAfrica/Banjul\nAfrica/Bissau\nAfrica/Blantyre\nAfrica/Brazzaville\nAfrica/Bujumbura\nAfrica/Cairo\nAfrica/Casablanca\nAfrica/Ceuta\nAfrica/Conakry\nAfrica/Dakar\nAfrica/Dar_es_Salaam\nAfrica/Djibouti\nAfrica/Douala\nAfrica/El_Aaiun\nAfrica/Freetown\nAfrica/Gaborone\nAfrica/Harare\nAfrica/Johannesburg\nAfrica/Juba\nAfrica/Kampala\nAfrica/Khartoum\nAfrica/Kigali\nAfrica/Kinshasa\nAfrica/Lagos\nAfrica/Libreville\nAfrica/Lome\nAfrica/Luanda\nAfrica/Lubumbashi\nAfrica/Lusaka\nAfrica/Malabo\nAfrica/Maputo\nAfrica/Maseru\nAfrica/Mbabane\nAfrica/Mogadishu\nAfrica/Monrovia\nAfrica/Nairobi\nAfrica/Ndjamena\nAfrica/Niamey\nAfrica/Nouakchott\nAfrica/Ouagadougou\nAfrica/Porto-Novo\nAfrica/Sao_Tome\nAfrica/Tripoli\nAfrica/Tunis\nAfrica/Windhoek\nAmerica/Adak\nAmerica/Anchorage\nAmerica/Anguilla\nAmerica/Antigua\nAmerica/Araguaina\nAmerica/Argentina/Buenos_Aires\nAmerica/Argentina/Catamarca\nAmerica/Argentina/Cordoba\nAmerica/Argentina/Jujuy\nAmerica/Argentina/La_Rioja\nAmerica/Argentina/Mendoza\nAmerica/Argentina/Rio_Gallegos\nAmerica/Argentina/Salta\nAmerica/Argentina/San_Juan\nAmerica/Argentina/San_Luis\nAmerica/Argentina/Tucuman\nAmerica/Argentina/Ushuaia\nAmerica/Aruba\nAmerica/Asuncion\nAmerica/Atikokan\nAmerica/Bahia\nAmerica/Bahia_Banderas\nAmerica/Barbados\nAmerica/Belem\nAmerica/Belize\nAmerica/Blanc-Sablon\nAmerica/Boa_Vista\nAmerica/Bogota\nAmerica/Boise\nAmerica/Cambridge_Bay\nAmerica/Campo_Grande\nAmerica/Cancun\nAmerica/Caracas\nAmerica/Cayenne\nAmerica/Cayman\nAmerica/Chicago\nAmerica/Chihuahua\nAmerica/Ciudad_Juarez\nAmerica/Costa_Rica\nAmerica/Creston\nAmerica/Cuiaba\nAmerica/Curacao\nAmerica/Danmarkshavn\nAmerica/Dawson\nAmerica/Dawson_Creek\nAmerica/Denver\nAmerica/Detroit\nAmerica/Dominica\nAmerica/Edmonton\nAmerica/Eirunepe\nAmerica/El_Salvador\nAmerica/Fortaleza\nAmerica/Fort_Nelson\nAmerica/Glace_Bay\nAmerica/Goose_Bay\nAmerica/Grand_Turk\nAmerica/Grenada\nAmerica/Guadeloupe\nAmerica/Guatemala\nAmerica/Guayaquil\nAmerica/Guyana\nAmerica/Halifax\nAmerica/Havana\nAmerica/Hermosillo\nAmerica/Indiana/Indianapolis\nAmerica/Indiana/Knox\nAmerica/Indiana/Marengo\nAmerica/Indiana/Petersburg\nAmerica/Indiana/Tell_City\nAmerica/Indiana/Vevay\nAmerica/Indiana/Vincennes\nAmerica/Indiana/Winamac\nAmerica/Inuvik\nAmerica/Iqaluit\nAmerica/Jamaica\nAmerica/Juneau\nAmerica/Kentucky/Louisville\nAmerica/Kentucky/Monticello\nAmerica/Kralendijk\nAmerica/La_Paz\nAmerica/Lima\nAmerica/Los_Angeles\nAmerica/Lower_Princes\nAmerica/Maceio\nAmerica/Managua\nAmerica/Manaus\nAmerica/Marigot\nAmerica/Martinique\nAmerica/Matamoros\nAmerica/Mazatlan\nAmerica/Menominee\nAmerica/Merida\nAmerica/Metlakatla\nAmerica/Mexico_City\nAmerica/Miquelon\nAmerica/Moncton\nAmerica/Monterrey\nAmerica/Montevideo\nAmerica/Montserrat\nAmerica/Nassau\nAmerica/New_York\nAmerica/Nome\nAmerica/Noronha\nAmerica/North_Dakota/Beulah\nAmerica/North_Dakota/Center\nAmerica/North_Dakota/New_Salem\nAmerica/Nuuk\nAmerica/Ojinaga\nAmerica/Panama\nAmerica/Paramaribo\nAmerica/Phoenix\nAmerica/Port-au-Prince\nAmerica/Port_of_Spain\nAmerica/Porto_Velho\nAmerica/Puerto_Rico\nAmerica/Punta_Arenas\nAmerica/Rankin_Inlet\nAmerica/Recife\nAmerica/Regina\nAmerica/Resolute\nAmerica/Rio_Branco\nAmerica/Santarem\nAmerica/Santiago\nAmerica/Santo_Domingo\nAmerica/Sao_Paulo\nAmerica/Scoresbysund\nAmerica/Sitka\nAmerica/St_Barthelemy\nAmerica/St_Johns\nAmerica/St_Kitts\nAmerica/St_Lucia\nAmerica/St_Thomas\nAmerica/St_Vincent\nAmerica/Swift_Current\nAmerica/Tegucigalpa\nAmerica/Thule\nAmerica/Tijuana\nAmerica/Toronto\nAmerica/Tortola\nAmerica/Vancouver\nAmerica/Whitehorse\nAmerica/Winnipeg\nAmerica/Yakutat\nAntarctica/Casey\nAntarctica/Davis\nAntarctica/DumontDUrville\nAntarctica/Macquarie\nAntarctica/Mawson\nAntarctica/McMurdo\nAntarctica/Palmer\nAntarctica/Rothera\nAntarctica/Syowa\nAntarctica/Troll\nAntarctica/Vostok\nArctic/Longyearbyen\nAsia/Aden\nAsia/Almaty\nAsia/Amman\nAsia/Anadyr\nAsia/Aqtau\nAsia/Aqtobe\nAsia/Ashgabat\nAsia/Atyrau\nAsia/Baghdad\nAsia/Bahrain\nAsia/Baku\nAsia/Bangkok\nAsia/Barnaul\nAsia/Beirut\nAsia/Bishkek\nAsia/Brunei\nAsia/Chita\nAsia/Choibalsan\nAsia/Colombo\nAsia/Damascus\nAsia/Dhaka\nAsia/Dili\nAsia/Dubai\nAsia/Dushanbe\nAsia/Famagusta\nAsia/Gaza\nAsia/Hebron\nAsia/Ho_Chi_Minh\nAsia/Hong_Kong\nAsia/Hovd\nAsia/Irkutsk\nAsia/Jakarta\nAsia/Jayapura\nAsia/Jerusalem\nAsia/Kabul\nAsia/Kamchatka\nAsia/Karachi\nAsia/Kathmandu\nAsia/Khandyga\nAsia/Kolkata\nAsia/Krasnoyarsk\nAsia/Kuala_Lumpur\nAsia/Kuching\nAsia/Kuwait\nAsia/Macau\nAsia/Magadan\nAsia/Makassar\nAsia/Manila\nAsia/Muscat\nAsia/Nicosia\nAsia/Novokuznetsk\nAsia/Novosibirsk\nAsia/Omsk\nAsia/Oral\nAsia/Phnom_Penh\nAsia/Pontianak\nAsia/Pyongyang\nAsia/Qatar\nAsia/Qostanay\nAsia/Qyzylorda\nAsia/Riyadh\nAsia/Sakhalin\nAsia/Samarkand\nAsia/Seoul\nAsia/Shanghai\nAsia/Singapore\nAsia/Srednekolymsk\nAsia/Taipei\nAsia/Tashkent\nAsia/Tbilisi\nAsia/Tehran\nAsia/Thimphu\nAsia/Tokyo\nAsia/Tomsk\nAsia/Ulaanbaatar\nAsia/Urumqi\nAsia/Ust-Nera\nAsia/Vientiane\nAsia/Vladivostok\nAsia/Yakutsk\nAsia/Yangon\nAsia/Yekaterinburg\nAsia/Yerevan\nAtlantic/Azores\nAtlantic/Bermuda\nAtlantic/Canary\nAtlantic/Cape_Verde\nAtlantic/Faroe\nAtlantic/Madeira\nAtlantic/Reykjavik\nAtlantic/South_Georgia\nAtlantic/Stanley\nAtlantic/St_Helena\nAustralia/Adelaide\nAustralia/Brisbane\nAustralia/Broken_Hill\nAustralia/Darwin\nAustralia/Eucla\nAustralia/Hobart\nAustralia/Lindeman\nAustralia/Lord_Howe\nAustralia/Melbourne\nAustralia/Perth\nAustralia/Sydney\nEtc/GMT\nEtc/GMT+1\nEtc/GMT-1\nEtc/GMT+10\nEtc/GMT-10\nEtc/GMT+11\nEtc/GMT-11\nEtc/GMT+12\nEtc/GMT-12\nEtc/GMT-13\nEtc/GMT-14\nEtc/GMT+2\nEtc/GMT-2\nEtc/GMT+3\nEtc/GMT-3\nEtc/GMT+4\nEtc/GMT-4\nEtc/GMT+5\nEtc/GMT-5\nEtc/GMT+6\nEtc/GMT-6\nEtc/GMT+7\nEtc/GMT-7\nEtc/GMT+8\nEtc/GMT-8\nEtc/GMT+9\nEtc/GMT-9\nEtc/UTC\nEurope/Amsterdam\nEurope/Andorra\nEurope/Astrakhan\nEurope/Athens\nEurope/Belgrade\nEurope/Berlin\nEurope/Bratislava\nEurope/Brussels\nEurope/Bucharest\nEurope/Budapest\nEurope/Busingen\nEurope/Chisinau\nEurope/Copenhagen\nEurope/Dublin\nEurope/Gibraltar\nEurope/Guernsey\nEurope/Helsinki\nEurope/Isle_of_Man\nEurope/Istanbul\nEurope/Jersey\nEurope/Kaliningrad\nEurope/Kirov\nEurope/Kyiv\nEurope/Lisbon\nEurope/Ljubljana\nEurope/London\nEurope/Luxembourg\nEurope/Madrid\nEurope/Malta\nEurope/Mariehamn\nEurope/Minsk\nEurope/Monaco\nEurope/Moscow\nEurope/Oslo\nEurope/Paris\nEurope/Podgorica\nEurope/Prague\nEurope/Riga\nEurope/Rome\nEurope/Samara\nEurope/San_Marino\nEurope/Sarajevo\nEurope/Saratov\nEurope/Simferopol\nEurope/Skopje\nEurope/Sofia\nEurope/Stockholm\nEurope/Tallinn\nEurope/Tirane\nEurope/Ulyanovsk\nEurope/Vaduz\nEurope/Vatican\nEurope/Vienna\nEurope/Vilnius\nEurope/Volgograd\nEurope/Warsaw\nEurope/Zagreb\nEurope/Zurich\nIndian/Antananarivo\nIndian/Chagos\nIndian/Christmas\nIndian/Cocos\nIndian/Comoro\nIndian/Kerguelen\nIndian/Mahe\nIndian/Maldives\nIndian/Mauritius\nIndian/Mayotte\nIndian/Reunion\nPacific/Apia\nPacific/Auckland\nPacific/Bougainville\nPacific/Chatham\nPacific/Chuuk\nPacific/Easter\nPacific/Efate\nPacific/Fakaofo\nPacific/Fiji\nPacific/Funafuti\nPacific/Galapagos\nPacific/Gambier\nPacific/Guadalcanal\nPacific/Guam\nPacific/Honolulu\nPacific/Kanton\nPacific/Kiritimati\nPacific/Kosrae\nPacific/Kwajalein\nPacific/Majuro\nPacific/Marquesas\nPacific/Midway\nPacific/Nauru\nPacific/Niue\nPacific/Norfolk\nPacific/Noumea\nPacific/Pago_Pago\nPacific/Palau\nPacific/Pitcairn\nPacific/Pohnpei\nPacific/Port_Moresby\nPacific/Rarotonga\nPacific/Saipan\nPacific/Tahiti\nPacific/Tarawa\nPacific/Tongatapu\nPacific/Wake\nPacific/Wallis\n```"
  }
]
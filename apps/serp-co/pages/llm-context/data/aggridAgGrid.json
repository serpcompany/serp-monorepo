[
  {
    "owner": "ag-grid",
    "repo": "ag-grid",
    "content": "TITLE: Defining Row Data and Column Definitions for AG Grid\nDESCRIPTION: JavaScript configuration for AG Grid showing how to define row data and column definitions. This example includes sample data with car information and corresponding column fields.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {\n    // Row Data: The data to be displayed.\n    rowData: [\n        { make: 'Tesla', model: 'Model Y', price: 64950, electric: true },\n        { make: 'Ford', model: 'F-Series', price: 33850, electric: false },\n        { make: 'Toyota', model: 'Corolla', price: 29600, electric: false },\n    ],\n    // Column Definitions: Defines the columns to be displayed.\n    columnDefs: [{ field: 'make' }, { field: 'model' }, { field: 'price' }, { field: 'electric' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Row Data and Column Definitions for AG Grid\nDESCRIPTION: Example React component showing how to define row data and column definitions for AG Grid. Uses React useState to manage grid data.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/README.md#2025-04-23_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst GridExample = () => {\n    // Row Data: The data to be displayed.\n    const [rowData, setRowData] = useState([\n        { make: 'Tesla', model: 'Model Y', price: 64950, electric: true },\n        { make: 'Ford', model: 'F-Series', price: 33850, electric: false },\n        { make: 'Toyota', model: 'Corolla', price: 29600, electric: false },\n    ]);\n\n    // Column Definitions: Defines the columns to be displayed.\n    const [colDefs, setColDefs] = useState([\n        { field: 'make' },\n        { field: 'model' },\n        { field: 'price' },\n        { field: 'electric' },\n    ]);\n\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring AG Grid with Row Data and Column Definitions\nDESCRIPTION: JavaScript configuration for AG Grid that defines both row data and column definitions. This example shows how to provide data and structure to the grid.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {\n    // Row Data: The data to be displayed.\n    rowData: [\n        { make: 'Tesla', model: 'Model Y', price: 64950, electric: true },\n        { make: 'Ford', model: 'F-Series', price: 33850, electric: false },\n        { make: 'Toyota', model: 'Corolla', price: 29600, electric: false },\n    ],\n    // Column Definitions: Defines the columns to be displayed.\n    columnDefs: [{ field: 'make' }, { field: 'model' }, { field: 'price' }, { field: 'electric' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Row Data and Column Definitions for AG Grid\nDESCRIPTION: Vue 3 setup function defining row data and column definitions for AG Grid.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-vue3/README.md#2025-04-23_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nsetup() {\n // Row Data: The data to be displayed.\n const rowData = ref([\n   { make: \"Tesla\", model: \"Model Y\", price: 64950, electric: true },\n   { make: \"Ford\", model: \"F-Series\", price: 33850, electric: false },\n   { make: \"Toyota\", model: \"Corolla\", price: 29600, electric: false },\n ]);\n\n // Column Definitions: Defines the columns to be displayed.\n const colDefs = ref([\n   { field: \"make\" },\n   { field: \"model\" },\n   { field: \"price\" },\n   { field: \"electric\" }\n ]);\n\n return {\n   rowData,\n   colDefs,\n };\n},\n```\n\n----------------------------------------\n\nTITLE: Instantiating the JavaScript Data Grid\nDESCRIPTION: JavaScript code to create an AG Grid instance inside a container element. This basic initialization sets up an empty grid with default configuration.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {};\n\n// Your Javascript code to create the Data Grid\nconst myGridElement = document.querySelector('#myGrid');\nagGrid.createGrid(myGridElement, gridOptions);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in AG Grid\nDESCRIPTION: Example showing how to configure custom cell renderer and filter components in AG Grid's column definitions. Demonstrates setting up custom components for specific grid columns through gridOptions.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Rows and Columns for AG Grid\nDESCRIPTION: JavaScript code that configures row data and column definitions for AG Grid. It defines sample car data with properties like make, model, price, and electric status, along with the column structure.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/styles/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {\n    // Row Data: The data to be displayed.\n    rowData: [\n        { make: 'Tesla', model: 'Model Y', price: 64950, electric: true },\n        { make: 'Ford', model: 'F-Series', price: 33850, electric: false },\n        { make: 'Toyota', model: 'Corolla', price: 29600, electric: false },\n    ],\n    // Column Definitions: Defines the columns to be displayed.\n    columnDefs: [{ field: 'make' }, { field: 'model' }, { field: 'price' }, { field: 'electric' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in AG Grid React\nDESCRIPTION: Example of how to configure custom cell renderer and filter components in AG Grid through gridOptions. Shows setting up custom components for a country column with both custom cell rendering and filtering.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring AG Grid Data and Columns\nDESCRIPTION: JavaScript configuration showing how to define row data and column definitions for AG Grid, including sample data structure.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/locale/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {\n    // Row Data: The data to be displayed.\n    rowData: [\n        { make: 'Tesla', model: 'Model Y', price: 64950, electric: true },\n        { make: 'Ford', model: 'F-Series', price: 33850, electric: false },\n        { make: 'Toyota', model: 'Corolla', price: 29600, electric: false },\n    ],\n    // Column Definitions: Defines the columns to be displayed.\n    columnDefs: [{ field: 'make' }, { field: 'model' }, { field: 'price' }, { field: 'electric' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Cell Renderer and Filter in AG Grid\nDESCRIPTION: This code snippet demonstrates how to supply custom cell renderer and filter components to AG Grid by creating direct references within the gridOptions.columnDefs property. It shows the configuration for a 'country' column with custom components.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/locale/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing AG Grid React Component in JSX\nDESCRIPTION: JSX code showing how to implement the AG Grid React component in your application. Sets a container with fixed height and passes the row data and column definitions.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/README.md#2025-04-23_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nreturn (\n    // set a height on the parent div because the grid fills the available space\n    <div style={{ height: 500 }}>\n        <AgGridReact rowData={rowData} columnDefs={colDefs} />\n    </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in AG Grid\nDESCRIPTION: Example showing how to configure custom cell renderer and filter components in AG Grid's column definitions. This demonstrates setting up a custom cell renderer (CountryCellRenderer) and filter (CountryFilter) for a country column.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining AG Grid Component Structure\nDESCRIPTION: Angular component setup with row data and column definitions for AG Grid implementation.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [AgGridAngular], // Add Angular Data Grid Component\n  styleUrls: ['./app.component.css'],\n  template: ``\n})\n\nexport class AppComponent {\n  // Row Data: The data to be displayed.\n  rowData = [\n    { make: \"Tesla\", model: \"Model Y\", price: 64950, electric: true },\n    { make: \"Ford\", model: \"F-Series\", price: 33850, electric: false },\n    { make: \"Toyota\", model: \"Corolla\", price: 29600, electric: false },\n  ];\n\n  // Column Definitions: Defines the columns to be displayed.\n  colDefs: ColDef[] = [\n    { field: \"make\" },\n    { field: \"model\" },\n    { field: \"price\" },\n    { field: \"electric\" }\n  ];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in AG Grid\nDESCRIPTION: Example of how to configure custom cell renderer and filter components in AG Grid's gridOptions. Shows how to associate custom components with specific columns through columnDefs configuration.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Row Data and Column Definitions in Angular Component\nDESCRIPTION: Example of defining row data and column definitions within an Angular component for AG Grid.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/README.md#2025-04-23_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [AgGridAngular], // Add Angular Data Grid Component\n  styleUrls: ['./app.component.css'],\n  template: ``\n})\n\nexport class AppComponent {\n  // Row Data: The data to be displayed.\n  rowData = [\n    { make: \"Tesla\", model: \"Model Y\", price: 64950, electric: true },\n    { make: \"Ford\", model: \"F-Series\", price: 33850, electric: false },\n    { make: \"Toyota\", model: \"Corolla\", price: 29600, electric: false },\n  ];\n\n  // Column Definitions: Defines the columns to be displayed.\n  colDefs: ColDef[] = [\n    { field: \"make\" },\n    { field: \"model\" },\n    { field: \"price\" },\n    { field: \"electric\" }\n  ];\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in AG Grid with JavaScript\nDESCRIPTION: This code demonstrates how to add custom cell renderer and filter components to AG Grid using the gridOptions.columnDefs property. It shows how to specify custom components for a specific column named 'country'.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in AG Grid\nDESCRIPTION: Demonstrates how to configure custom cell renderer and filter components in AG Grid's column definitions. Shows the basic structure for adding custom components to specific columns through gridOptions.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-vue3/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Cell Renderer and Filter Components in AG Grid\nDESCRIPTION: This snippet demonstrates how to add custom cell renderer and filter components to AG Grid columns. It shows the configuration pattern within gridOptions.columnDefs where custom components are assigned directly to specific columns.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/styles/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ngridOptions = {\n    columnDefs: [\n        {\n            field: 'country', // The column to add the component to\n            cellRenderer: CountryCellRenderer, // Your custom cell component\n            filter: CountryFilter, // Your custom filter component\n        },\n    ],\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering AG Grid Vue Component\nDESCRIPTION: Vue 3 template for rendering the AG Grid component with row data and column definitions.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-vue3/README.md#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<template>\n <!-- The AG Grid component -->\n <ag-grid-vue\n   :rowData=\"rowData\"\n   :columnDefs=\"colDefs\"\n   style=\"height: 500px\"\n >\n </ag-grid-vue>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid Community Package via NPM\nDESCRIPTION: Command to install the AG Grid Community package using npm. This is the first step to integrate AG Grid into your project.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install --save ag-grid-community\n```\n\n----------------------------------------\n\nTITLE: Instantiating AG Grid with JavaScript\nDESCRIPTION: JavaScript code to create an AG Grid instance inside a container element. This shows the basic initialization of the grid using the createGrid method.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {};\n\n// Your Javascript code to create the Data Grid\nconst myGridElement = document.querySelector('#myGrid');\nagGrid.createGrid(myGridElement, gridOptions);\n```\n\n----------------------------------------\n\nTITLE: Creating AG Grid Template\nDESCRIPTION: Angular template code for rendering the AG Grid component with row data and column definitions.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ntemplate: `\n<!-- The AG Grid component -->\n<ag-grid-angular\n  [rowData]=\"rowData\"\n  [columnDefs]=\"colDefs\"\n  style=\"height: 500px;\" />\n`;\n```\n\n----------------------------------------\n\nTITLE: Instantiating AG Grid with JavaScript\nDESCRIPTION: JavaScript code to create an AG Grid instance within the container div. It uses the createGrid method with a reference to the container element and grid options object.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/styles/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {};\n\n// Your Javascript code to create the Data Grid\nconst myGridElement = document.querySelector('#myGrid');\nagGrid.createGrid(myGridElement, gridOptions);\n```\n\n----------------------------------------\n\nTITLE: Instantiating AG Grid\nDESCRIPTION: JavaScript code to create an AG Grid instance within the container element using the createGrid method.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/locale/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Grid Options: Contains all of the Data Grid configurations\nconst gridOptions = {};\n\n// Your Javascript code to create the Data Grid\nconst myGridElement = document.querySelector('#myGrid');\nagGrid.createGrid(myGridElement, gridOptions);\n```\n\n----------------------------------------\n\nTITLE: Creating AG Grid Angular Component in Template\nDESCRIPTION: HTML template code for creating an AG Grid Angular component with row data and column definitions.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/README.md#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\ntemplate: `\n<!-- The AG Grid component -->\n<ag-grid-angular\n  [rowData]=\"rowData\"\n  [columnDefs]=\"colDefs\"\n  style=\"height: 500px;\" />\n`;\n```\n\n----------------------------------------\n\nTITLE: Setting up Basic HTML Structure for AG Grid\nDESCRIPTION: HTML structure required to set up AG Grid. Includes the script import for the grid library and a container div with a specified height for the grid to fill.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n    <head>\n        <!-- Includes all JS & CSS for the JavaScript Data Grid -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n    </head>\n    <body>\n        <!-- Your Data Grid container -->\n        <div id=\"myGrid\" style=\"height: 500px\"></div>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Importing AG Grid Angular Components\nDESCRIPTION: Code snippet demonstrating how to import necessary AG Grid components and interfaces in an Angular application.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/README.md#2025-04-23_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Component } from '@angular/core';\n\n// Angular Data Grid Component\nimport { AgGridAngular } from 'ag-grid-angular';\n// Column Definition Type Interface\nimport { ColDef } from 'ag-grid-community';\n```\n\n----------------------------------------\n\nTITLE: Setting up AG Grid with HTML and CDN\nDESCRIPTION: HTML setup for AG Grid using CDN. This code creates the basic structure for an AG Grid implementation with a container div that will hold the grid.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n    <head>\n        <!-- Includes all JS & CSS for the JavaScript Data Grid -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n    </head>\n    <body>\n        <!-- Your Data Grid container -->\n        <div id=\"myGrid\" style=\"height: 500px\"></div>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Setup for AG Grid\nDESCRIPTION: HTML structure for setting up AG Grid with the necessary script import and container div. The container has a fixed height of 500px as AG Grid will fill the size of its parent container.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/styles/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n    <head>\n        <!-- Includes all JS & CSS for the JavaScript Data Grid -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n    </head>\n    <body>\n        <!-- Your Data Grid container -->\n        <div id=\"myGrid\" style=\"height: 500px\"></div>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid for Vue 3\nDESCRIPTION: Command to install AG Grid for Vue 3 using npm.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-vue3/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install --save ag-grid-vue3\n```\n\n----------------------------------------\n\nTITLE: Setting up AG Grid HTML Container\nDESCRIPTION: HTML setup required for AG Grid, including loading the library via CDN and creating a container div with defined height.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/locale/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n    <head>\n        <!-- Includes all JS & CSS for the JavaScript Data Grid -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n    </head>\n    <body>\n        <!-- Your Data Grid container -->\n        <div id=\"myGrid\" style=\"height: 500px\"></div>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Importing AG Grid Angular Components\nDESCRIPTION: Required imports for using AG Grid in an Angular component including the grid component and column definition types.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Component } from '@angular/core';\n\n// Angular Data Grid Component\nimport { AgGridAngular } from 'ag-grid-angular';\n// Column Definition Type Interface\nimport { ColDef } from 'ag-grid-community';\n```\n\n----------------------------------------\n\nTITLE: Registering AG Grid Community Modules in React\nDESCRIPTION: Code to register the AllCommunityModule to access all AG Grid Community features. This is required to enable grid functionality in your application.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/README.md#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { AllCommunityModule, ModuleRegistry } from 'ag-grid-community';\n\n// Register all Community features\nModuleRegistry.registerModules([AllCommunityModule]);\n```\n\n----------------------------------------\n\nTITLE: Importing AG Grid React Component\nDESCRIPTION: Imports the main AG Grid React component that will be used to create data grids in your React application.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/README.md#2025-04-23_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// React Data Grid Component\nimport { AgGridReact } from 'ag-grid-react';\n```\n\n----------------------------------------\n\nTITLE: Importing AG Grid Vue Component\nDESCRIPTION: Vue 3 component setup with AG Grid import and component registration.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-vue3/README.md#2025-04-23_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n<template></template>\n\n<script>\nimport { ref } from 'vue';\nimport { AgGridVue } from \"ag-grid-vue3\"; // Vue Data Grid Component\n\nexport default {\n name: \"App\",\n components: {\n   AgGridVue, // Add Vue Data Grid component\n },\n setup() {},\n};\n</script>\n```\n\n----------------------------------------\n\nTITLE: Registering AG Grid Community Modules in Vue 3\nDESCRIPTION: Code to register all AG Grid Community features using the AllCommunityModule.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-vue3/README.md#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { AllCommunityModule, ModuleRegistry } from 'ag-grid-community';\n\n// Register all Community features\nModuleRegistry.registerModules([AllCommunityModule]);\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid Community Edition via npm\nDESCRIPTION: Command to install the AG Grid community edition package using npm. This is the first step to add AG Grid to your project.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install --save ag-grid-community\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid via NPM\nDESCRIPTION: Command to install the AG Grid Community edition using NPM package manager. This adds the grid library as a dependency to your project.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/styles/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install --save ag-grid-community\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid via NPM\nDESCRIPTION: Command to install the AG Grid Community edition package using NPM.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/locale/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install --save ag-grid-community\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid Angular package\nDESCRIPTION: Command to install the AG Grid Angular package using npm.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install --save ag-grid-angular\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid Angular Package\nDESCRIPTION: npm command to install the AG Grid Angular package as a project dependency.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install --save ag-grid-angular\n```\n\n----------------------------------------\n\nTITLE: Installing AG Grid React Package with npm\nDESCRIPTION: Command to install the AG Grid React package using npm. This is the first step to integrate AG Grid into a React application.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell/Bash\nCODE:\n```\n$ npm install --save ag-grid-react\n```\n\n----------------------------------------\n\nTITLE: Registering AG Grid Modules\nDESCRIPTION: Code to register AG Grid Community modules for accessing all features.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { AllCommunityModule, ModuleRegistry } from 'ag-grid-community';\n\n// Register all Community features\nModuleRegistry.registerModules([AllCommunityModule]);\n```\n\n----------------------------------------\n\nTITLE: Registering AG Grid Community Modules in Angular\nDESCRIPTION: Code snippet showing how to register all AG Grid Community modules in an Angular application.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/README.md#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { AllCommunityModule, ModuleRegistry } from 'ag-grid-community';\n\n// Register all Community features\nModuleRegistry.registerModules([AllCommunityModule]);\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for MDX to Markdoc Migration\nDESCRIPTION: Environment variables configuration for the migration script. Specifies the source documentation folder containing MDX files and the destination folder where Markdoc files will be saved.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/scripts/markdoc-migration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSOURCE_FOLDER=/path/to/source/docs\nDEST_FOLDER=/path/to/destination/docs\n```\n\n----------------------------------------\n\nTITLE: Running the AG Grid MDX to Markdoc Migration Script\nDESCRIPTION: Command to execute the migration script that converts documentation from MDX to Markdoc format.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/scripts/markdoc-migration/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run migrate\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to compile and build the Angular project. Build artifacts will be stored in the dist/ directory, with production builds optimized for performance by default.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size-angular/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Building AG-Grid Code Reference Generator Plugin with Nx\nDESCRIPTION: Command to build the ag-grid-generate-code-reference-files library using Nx build system.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/plugins/ag-grid-generate-code-reference-files/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build ag-grid-generate-code-reference-files\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for AG Grid Documentation Website\nDESCRIPTION: This command starts the development server for the AG Grid documentation website, allowing developers to view and test changes locally.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building AG Grid Example Files Generator\nDESCRIPTION: Command to build the AG Grid example files generator library using Nx build system\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/plugins/ag-grid-generate-example-files/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build ag-grid-generate-example-files\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for AG Grid Documentation Website\nDESCRIPTION: This command installs the necessary dependencies for the AG Grid documentation website project using npm.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Updating Development Algolia Indices for AG Grid\nDESCRIPTION: Runs the script to update the development Algolia indices for AG Grid documentation.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/update-algolia-indices/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run updateDev\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG-Grid Code Reference Generator Plugin\nDESCRIPTION: Command to execute unit tests for the ag-grid-generate-code-reference-files library using Nx and Jest testing framework.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/plugins/ag-grid-generate-code-reference-files/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test ag-grid-generate-code-reference-files\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG Charts Build Tools Plugin\nDESCRIPTION: Command to execute unit tests for the ag-charts-build-tools library using Nx and Jest testing framework.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/plugins/ag-grid-task-autogen/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test ag-charts-build-tools\n```\n\n----------------------------------------\n\nTITLE: Running AG Grid Module Size Validation Tests\nDESCRIPTION: Command to execute the module size validation test process. This runs validation steps that measure the size impact of each AG Grid module and produces a results file.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test\n```\n\n----------------------------------------\n\nTITLE: Running All AG-Grid Behavioral Tests with Nx\nDESCRIPTION: Command to execute all behavioral tests for AG-Grid using the Nx build system from the root folder of the project.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/behavioural/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnx test ag-behavioural-testing\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server\nDESCRIPTION: Command to start a local development server using Angular CLI. Once running, the application will be available at http://localhost:4200/ and will automatically reload when source files are modified.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size-angular/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running a Single AG-Grid Behavioral Test File with Nx\nDESCRIPTION: Command to execute a specific test file in the AG-Grid behavioral testing suite using the Nx build system with the testFile parameter.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/behavioural/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnx test ag-behavioural-testing -- --testFile=src/folder/filename.test.ts\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner. This will run all tests defined in the project's spec files.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size-angular/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Running AG-Grid Behavioral Tests in Watch Mode\nDESCRIPTION: Command to execute AG-Grid behavioral tests in watch mode using the Nx build system, which automatically re-runs tests when files change.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/behavioural/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnx test ag-behavioural-testing -- -w\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Angular CLI command to scaffold a new component. This creates the necessary component files with boilerplate code following Angular's recommended structure.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size-angular/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Running Video Compression Script\nDESCRIPTION: Executes the main video compression script using npm command. Requires ffmpeg and npm dependencies to be installed first.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-website-shared/scripts/compress-video/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run compressVideo\n```\n\n----------------------------------------\n\nTITLE: Viewing Angular CLI Generate Options\nDESCRIPTION: Command to display help information for the generate command, showing all available schematics (components, directives, pipes, etc.) that can be created with Angular CLI.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size-angular/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng generate --help\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to run end-to-end tests with the configured e2e testing framework. Note that Angular CLI does not include an e2e testing framework by default.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/testing/module-size-angular/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Rendering Demo Section with Theme Support\nDESCRIPTION: HTML markup for displaying the demo section with light/dark theme support and a demo link button.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<picture>\n    <source srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/readme-assets/kitchen-sink-demo-light.gif?raw=true\" media=\"(prefers-color-scheme: light)\">\n    <source srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/readme-assets/kitchen-sink-demo-dark.gif?raw=true\" media=\"(prefers-color-scheme: dark)\">\n    <img src=\"https://github.com/ag-grid/ag-grid/blob/latest/readme-assets/kitchen-sink-demo-light.gif?raw=true\" alt=\"High Performance Demo\">\n</picture>\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Layout for AG Grid Header\nDESCRIPTION: HTML markup for the main AG Grid header section including logo, badges, and links to documentation and community resources.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-community/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div align=\"center\">\n    <a href=\"https://www.ag-grid.com?utm_source=ag-grid-readme&utm_medium=repository&utm_campaign=github\">\n        <picture>\n        <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Grid-Logo_Dark-Theme.svg?raw=true\"/>\n        <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Grid-Logo_Light-Theme.svg?raw=true\"/>\n        <img width=\"100%\" alt=\"AG Grid Logo\" src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Grid-Logo_Light-Theme.svg?raw=true\"/>\n        </picture>\n    </a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Framework Icons Navigation\nDESCRIPTION: HTML markup for displaying a navigation menu of supported frameworks with their respective icons. Includes links to the tools and extensions page for React, Angular, TypeScript, Vue, Python, Svelte, SolidJS, .NET, Rust, and Laravel.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/community-modules/locale/README.md#2025-04-23_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<div>\n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/react.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"React Logo\">&nbsp;React</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/angular.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"Angular Logo\">&nbsp;Angular</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/typescript.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"TypeScript Logo\">&nbsp;TypeScript</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/vue.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"Vue Logo\">&nbsp;Vue</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/python.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"Python Logo\">&nbsp;Python</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/svelte.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"Svelte Logo\">&nbsp;Svelte</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/solidjs.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"SolidJS Logo\">&nbsp;SolidJS</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/.net.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\".NET Logo\">&nbsp;.NET</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/rust.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"Rust Logo\">&nbsp;Rust</span>\n    </a> • \n    <a href=\"https://www.ag-grid.com/community/tools-extensions/\">\n        <span><img src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/community/frameworks/laravel.svg?raw=true\" align=\"center\" width=\"16\" height=\"16\" alt=\"Laravel Logo\">&nbsp;Laravel</span>\n    </a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running Local Update Script for AG Grid Algolia Indices\nDESCRIPTION: Executes the script locally without making changes to Algolia indices. Results are stored in the /output directory.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/update-algolia-indices/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run updateLocal\n```\n\n----------------------------------------\n\nTITLE: Updating Production Algolia Indices for AG Grid\nDESCRIPTION: Executes the script to update the production Algolia indices for AG Grid documentation.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/documentation/update-algolia-indices/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run updateProd\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG Grid Example Files Generator\nDESCRIPTION: Command to execute unit tests for the AG Grid example files generator library using Jest test runner through Nx\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/plugins/ag-grid-generate-example-files/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test ag-grid-generate-example-files\n```\n\n----------------------------------------\n\nTITLE: License Declaration in Markdown\nDESCRIPTION: Defines the license terms for AG Grid's community and enterprise versions. The community version uses MIT license while enterprise version has a commercial license.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-angular/projects/ag-grid-angular/README.md#2025-04-23_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## ⚠️ License\n\n`ag-grid-community` is licensed under the **MIT** license.\n\n`ag-grid-enterprise` has a **Commercial** license.\n\nSee the [LICENSE file](./LICENSE.txt) for more info.\n```\n\n----------------------------------------\n\nTITLE: MIT License Text\nDESCRIPTION: Standard MIT License text granting permission to use, modify and distribute the AG Grid software, subject to including the copyright notice. Includes warranty disclaimer and liability limitations.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/packages/ag-grid-react/LICENSE.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThe MIT License\n\nCopyright (c) 2015-2024 AG GRID LTD\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n----------------------------------------\n\nTITLE: Running the README Sync Script via Node.js\nDESCRIPTION: Command to execute the README synchronization script from the root folder of the ag-grid project. This script ensures README content is consistent across various packages and modules.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/scripts/readme/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode ./scripts/readme/sync-readme.js\n```\n\n----------------------------------------\n\nTITLE: Building AG Charts Build Tools Plugin with Nx\nDESCRIPTION: Command to build the ag-charts-build-tools library using Nx build system.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/plugins/ag-grid-task-autogen/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build ag-charts-build-tools\n```\n\n----------------------------------------\n\nTITLE: Running Git Subrepo Script with NPM or Yarn\nDESCRIPTION: Commands for executing the subrepo script using either npm's npx or yarn. The script accepts commands like push, pull, or check, with optional parameters for specifying the subrepo and verbosity level.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-shared/scripts/subrepo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpx tsx [shared-repo-folder]/scripts/subrepo [push | pull | check] [--subrepo subrepo] [--verbose]\n\n# yarn\nyarn run tsx [shared-repo-folder]/scripts/subrepo [push | pull | check] [--subrepo subrepo] [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Installing git-subrepo in Bash\nDESCRIPTION: Commands to install git-subrepo on a local machine, including cloning the repository and updating the terminal configuration.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-website-shared/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/ingydotnet/git-subrepo /path/to/git-subrepo\nsource /path/to/git-subrepo/.rc\nbrew install bash\n```\n\n----------------------------------------\n\nTITLE: Installing AG Website Shared in Container Repository\nDESCRIPTION: Git subrepo command to clone the AG Website Shared repository into a container repository, specifying the destination folder and branch.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-website-shared/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit subrepo clone git@github.com:ag-grid/ag-website-shared.git [dest-folder] -b latest --method rebase\n\n# Grid/Charts\ngit subrepo clone git@github.com:ag-grid/ag-website-shared.git external/ag-website-shared -b latest --method rebase\n```\n\n----------------------------------------\n\nTITLE: Pulling Changes from AG Website Shared\nDESCRIPTION: Git subrepo command to pull changes from the AG Website Shared repository into the container repository. Includes a custom yarn script for Grid/Charts projects.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-website-shared/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit subrepo pull [dest-folder]\n\n# In grid/charts\nyarn run subrepo pull [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to AG Website Shared\nDESCRIPTION: Git subrepo command to push changes from the container repository back to the AG Website Shared repository. Includes a custom yarn script for Grid/Charts projects.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-website-shared/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit subrepo push [dest-folder]\n\n# In grid/charts\nyarn run subrepo pull [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Paths for AG Website Shared\nDESCRIPTION: JSON configuration in tsconfig.json to set up import alias for the AG Website Shared repository, allowing imports prefixed with @ag-website-shared.\nSOURCE: https://github.com/ag-grid/ag-grid/blob/latest/external/ag-website-shared/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n     \"baseUrl\": \".\",\n     \"paths\": {\n       \"@ag-website-shared/*\": [\"../../external/ag-website-shared/src/*\"],\n     }\n  }\n}\n```"
  }
]
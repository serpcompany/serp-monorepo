[
  {
    "owner": "lxc",
    "repo": "incus",
    "content": "TITLE: Launching Incus Containers and VMs\nDESCRIPTION: Commands for launching containers and VMs using Incus, including copying containers and listing instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/tutorial/first_steps.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 first\nincus launch images:ubuntu/22.04 second\nincus copy first third\nincus launch images:ubuntu/22.04 ubuntu-vm --vm\nincus list\nincus start third\n```\n\n----------------------------------------\n\nTITLE: Listing Instances with Incus CLI\nDESCRIPTION: Shows how to list all instances using the Incus CLI and how to filter instances by type, status, location, or name using regular expressions.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus list\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus list type=container\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus list status=running\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus list location=server1\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus list ubuntu.*\n```\n\n----------------------------------------\n\nTITLE: Displaying Instance Information with Incus CLI\nDESCRIPTION: Shows how to display detailed information about an instance using the Incus CLI, including the option to show the latest log lines.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus info <instance_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus info <instance_name> --show-log\n```\n\n----------------------------------------\n\nTITLE: Setting Instance Options via CLI in Incus\nDESCRIPTION: Command to set configuration options for Incus instances. Allows specifying multiple key-value pairs to update instance options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <instance_name> <option_key>=<option_value> <option_key>=<option_value> ...\n```\n\n----------------------------------------\n\nTITLE: Creating a Network in Incus\nDESCRIPTION: Basic syntax for creating a network in Incus. If no type is specified, 'bridge' is used as the default network type.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_create.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network create <name> --type=<network_type> [configuration_options...]\n```\n\n----------------------------------------\n\nTITLE: Initializing Incus on Linux\nDESCRIPTION: Commands for initializing Incus after installation. This includes adding the user to the incus-admin group and running the initialization process.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/tutorial/first_steps.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo adduser $USER incus-admin\nnewgrp incus-admin\n\nincus admin init\n\n# Or for minimal automated configuration:\nincus admin init --minimal\n```\n\n----------------------------------------\n\nTITLE: Starting Instances with Incus CLI\nDESCRIPTION: Shows how to start an instance using the Incus CLI, including the option to immediately attach to the console when starting.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus start <instance_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus start <instance_name> --console\n```\n\n----------------------------------------\n\nTITLE: Querying Instances with Incus API\nDESCRIPTION: Shows how to list all instances using the Incus API and how to filter instances by name, type, status, or location using the filter parameter.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances?recursion=2\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances?filter=name+eq+ubuntu\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances?filter=type+eq+container\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances?filter=status+eq+running\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances?filter=location+eq+server1\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances?filter=name+eq+ubuntu.*\n```\n\n----------------------------------------\n\nTITLE: Connecting to Incus Instance via SSHFS\nDESCRIPTION: Commands to connect to an Incus instance using SSHFS after setting up an SSH SFTP listener. This requires the user credentials provided by the listener setup command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsshfs <user_name>@<address>:<path_to_directory> <local_location> -p <port>\n```\n\nLANGUAGE: bash\nCODE:\n```\nsshfs xFn8ai8c@127.0.0.1:/home my-instance-files -p 35147\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Incus on Alpine Linux\nDESCRIPTION: This snippet shows how to install Incus and its client on Alpine Linux, along with additional steps for VM support and service activation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napk update\napk add incus incus-client\napk add incus-vm\nrc-update add incusd\nrc-service incusd start\n```\n\n----------------------------------------\n\nTITLE: Launching a Basic Ubuntu Container in Incus\nDESCRIPTION: This command creates and starts a new container named 'ubuntu-container' using the Ubuntu 22.04 image from the 'images' server.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 ubuntu-container\n```\n\n----------------------------------------\n\nTITLE: Basic Incus Initialization Command\nDESCRIPTION: Command to start the interactive Incus configuration process. Can be run as normal user for simple configurations, but requires root privileges for advanced operations like cluster joining.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/initialize.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus admin init\n```\n\n----------------------------------------\n\nTITLE: Executing Single Command in Incus Instance\nDESCRIPTION: Demonstrates how to run a single command inside an Incus instance using the 'incus exec' command. The example shows updating the package list in an Ubuntu container.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/instance-exec.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus exec <instance_name> -- <command>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus exec ubuntu-container -- apt-get update\n```\n\n----------------------------------------\n\nTITLE: Installing Incus on Ubuntu\nDESCRIPTION: These commands demonstrate how to install Incus and related packages on Ubuntu systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\napt install incus\napt install qemu-system\napt install incus-tools\n```\n\n----------------------------------------\n\nTITLE: Complete Preseed Configuration Template\nDESCRIPTION: Comprehensive YAML template for Incus preseed configuration, including daemon settings, storage pools, volumes, network devices, and profiles configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/initialize.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  core.https_address: 192.0.2.1:9999\n  images.auto_update_interval: 6\n\nstorage_pools:\n- name: data\n  driver: zfs\n  config:\n    source: my-zfs-pool/my-zfs-dataset\n\nstorage_volumes:\n- name: my-vol\n  pool: data\n\nnetworks:\n- name: incus-my-bridge\n  type: bridge\n  config:\n    ipv4.address: auto\n    ipv6.address: none\n\nprofiles:\n- name: default\n  devices:\n    root:\n      path: /\n      pool: data\n      type: disk\n- name: test-profile\n  description: \"Test profile\"\n  config:\n    limits.memory: 2GiB\n  devices:\n    test0:\n      name: test0\n      nictype: bridged\n      parent: incus-my-bridge\n      type: nic\n```\n\n----------------------------------------\n\nTITLE: Creating Instance Snapshots in Incus\nDESCRIPTION: Command to create a snapshot of an Incus instance with optional snapshot naming. For virtual machines, the --stateful flag can be added to capture the running state of the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus snapshot create <instance_name> [<snapshot name>]\n```\n\n----------------------------------------\n\nTITLE: Launching an Application Container from Docker Registry in Incus\nDESCRIPTION: These commands add a Docker registry as a remote and then launch an ephemeral hello-world container from it.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus remote add oci-docker https://docker.io --protocol=oci\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus launch oci-docker:hello-world --ephemeral --console\n```\n\n----------------------------------------\n\nTITLE: Listing Incus Cluster Members\nDESCRIPTION: This command displays a list of cluster members with their details such as name, URL, roles, architecture, and status.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster list\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Instances with Incus API\nDESCRIPTION: Shows how to rebuild an instance with a different image or with an empty root disk using the Incus API by sending a POST request to the rebuild endpoint.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request POST /1.0/instances/<instance_name>/rebuild --data '{\"source\": {\"alias\":\"<image_alias>\",\"server\":\"<server_URL>\", protocol:\"simplestreams\"}}'\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request POST /1.0/instances/<instance_name>/rebuild --data '{\"source\": {\"type\":\"none\"}}'\n```\n\n----------------------------------------\n\nTITLE: Interacting with Incus Instances\nDESCRIPTION: Commands for interacting with Incus instances, including executing commands, accessing files, and managing software within the instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/tutorial/first_steps.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus exec first -- bash\nincus exec first -- apt-get update\nincus exec first -- apt-get install sl -y\nincus exec first -- /usr/games/sl\nincus file pull first/etc/hosts .\necho \"1.2.3.4 my-example\" >> hosts\nincus file push hosts first/etc/hosts\nincus file pull first/var/log/syslog - | less\n```\n\n----------------------------------------\n\nTITLE: Initializing Incus Cluster Bootstrap Server\nDESCRIPTION: Example of running 'incus admin init' command interactively to set up the bootstrap server for an Incus cluster. It shows the key questions and answers for enabling clustering.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_form.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nincus admin init\n\nWould you like to use Incus clustering? (yes/no) [default=no]: yes\nWhat IP address or DNS name should be used to reach this server? [default=192.0.2.101]:\nAre you joining an existing cluster? (yes/no) [default=no]: no\nWhat member name should be used to identify this server in the cluster? [default=server1]:\nDo you want to configure a new local storage pool? (yes/no) [default=yes]:\nName of the storage backend to use (btrfs, dir, lvm, zfs) [default=zfs]:\nCreate a new ZFS pool? (yes/no) [default=yes]:\nWould you like to use an existing empty block device (e.g. a disk or partition)? (yes/no) [default=no]:\nSize in GiB of the new loop device (1GiB minimum) [default=9GiB]:\nDo you want to configure a new remote storage pool? (yes/no) [default=no]:\nWould you like to configure Incus to use an existing bridge or host interface? (yes/no) [default=no]:\nWould you like stale cached images to be updated automatically? (yes/no) [default=yes]:\nWould you like a YAML \"incus admin init\" preseed to be printed? (yes/no) [default=no]:\n```\n\n----------------------------------------\n\nTITLE: View Incus Profiles Command\nDESCRIPTION: Commands to list all available profiles and show contents of a specific profile.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/profiles.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus profile list\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus profile show <profile_name>\n```\n\n----------------------------------------\n\nTITLE: Installing Incus on Rocky Linux\nDESCRIPTION: This snippet shows how to install Incus on Rocky Linux 9 using the COPR repository and dnf package manager.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndnf -y install epel-release\ndnf copr enable neil/incus\ndnf config-manager --enable crb\ndnf install incus incus-tools\n```\n\n----------------------------------------\n\nTITLE: Launching a Virtual Machine in Incus\nDESCRIPTION: This command creates and starts a new virtual machine named 'ubuntu-vm' using the Ubuntu 22.04 image.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 ubuntu-vm --vm\n```\n\n----------------------------------------\n\nTITLE: Directory Storage Pool Creation Examples\nDESCRIPTION: Examples of creating directory-based storage pools, including basic pool creation and using an existing directory as source.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_pools.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool1 dir\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool2 dir source=/data/incus\n```\n\n----------------------------------------\n\nTITLE: Creating an Empty VM for ISO Installation in Incus\nDESCRIPTION: This command creates an empty virtual machine that can be used for ISO installation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus init iso-vm --empty --vm\n```\n\n----------------------------------------\n\nTITLE: Accessing Shell in Incus Instance\nDESCRIPTION: Shows how to get shell access to an Incus instance using the 'incus exec' command. It includes examples for accessing as root and switching to a different user.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/instance-exec.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus exec <instance_name> -- /bin/bash\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus exec <instance_name> -- su --login <user_name>\n```\n\n----------------------------------------\n\nTITLE: Managing Instance Properties via CLI in Incus\nDESCRIPTION: Commands to set, unset, and get instance properties with the --property flag to distinguish them from configuration options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <instance_name> <property_key>=<property_value> <property_key>=<property_value> ... --property\n\nincus config unset <instance_name> <property_key> --property\n\nincus config get <instance_name> <property_key> --property\n```\n\n----------------------------------------\n\nTITLE: Minimal Incus Setup Command\nDESCRIPTION: Command to create a minimal Incus setup with default options, skipping the interactive configuration steps. Note that this uses the basic 'dir' storage driver which has limited functionality.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/initialize.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus admin init --minimal\n```\n\n----------------------------------------\n\nTITLE: Accessing Interactive Console in Incus\nDESCRIPTION: Command to access an interactive console for an Incus instance. This provides terminal access to containers and VMs for monitoring boot messages and troubleshooting startup issues.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_console.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus console <instance_name>\n```\n\n----------------------------------------\n\nTITLE: Joining Additional Servers to Incus Cluster\nDESCRIPTION: Example of running 'incus admin init' command interactively to join a new server to an existing Incus cluster using authentication tokens. It demonstrates the key questions and answers for joining a cluster.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_form.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo incus admin init\n\nWould you like to use Incus clustering? (yes/no) [default=no]: yes\nWhat IP address or DNS name should be used to reach this server? [default=192.0.2.102]:\nAre you joining an existing cluster? (yes/no) [default=no]: yes\nDo you have a join token? (yes/no/[token]) [default=no]: yes\nPlease provide join token: eyJzZXJ2ZXJfbmFtZSI6InJwaTAxIiwiZmluZ2VycHJpbnQiOiIyNjZjZmExZDk0ZDZiMjk2Nzk0YjU0YzJlYzdjOTMwNDA5ZjIzNjdmNmM1YjRhZWVjOGM0YjAxYTc2NjU0MjgxIiwiYWRkcmVzc2VzIjpbIjE3Mi4xNy4zMC4xODM6ODQ0MyJdLCJzZWNyZXQiOiJmZGI1OTgyNjgxNTQ2ZGQyNGE2ZGE0Mzg5MTUyOGM1ZGUxNWNmYmQ5M2M3OTU3ODNkNGI5OGU4MTQ4MWMzNmUwIn0=\nAll existing data is lost when joining a cluster, continue? (yes/no) [default=no] yes\nChoose \"size\" property for storage pool \"local\":\nChoose \"source\" property for storage pool \"local\":\nChoose \"zfs.pool_name\" property for storage pool \"local\":\nWould you like a YAML \"incus admin init\" preseed to be printed? (yes/no) [default=no]:\n```\n\n----------------------------------------\n\nTITLE: Edit Full Incus Profile Commands\nDESCRIPTION: Commands for editing the complete profile configuration using terminal editor or YAML file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/profiles.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus profile edit <profile_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus profile edit <profile_name> < profile.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding a Disk Device Example via API in Incus\nDESCRIPTION: Example API request to add a disk device that mounts a host directory at /share/c1 to the path /opt in the instance using PATCH method.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PATCH /1.0/instances/my-container --data '{\"devices\": {\"disk-storage-device\": {\"type\":\"disk\",\"source\":\"/share/c1\",\"path\":\"/opt\"}}}'\n```\n\n----------------------------------------\n\nTITLE: Disk Device Configuration\nDESCRIPTION: Comprehensive disk device settings including boot priorities, I/O limits, mounting options, and storage configurations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_2\n\nLANGUAGE: config\nCODE:\n```\nboot.priority devices-disk\nceph.cluster_name devices-disk\nceph.user_name devices-disk\ninitial.* devices-disk\nio.bus devices-disk\nio.cache devices-disk\nlimits.max devices-disk\nlimits.read devices-disk\nlimits.write devices-disk\npath devices-disk\npool devices-disk\npropagation devices-disk\nraw.mount.options devices-disk\nreadonly devices-disk\nrecursive devices-disk\nrequired devices-disk\nshift devices-disk\nsize devices-disk\nsize.state devices-disk\nsource devices-disk\n```\n\n----------------------------------------\n\nTITLE: Exporting an Instance to a File in Incus\nDESCRIPTION: Command to export an Incus instance to a compressed file. If no file path is provided, the export is saved in the current directory with the instance name as the filename.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus export <instance_name> [<file_path>]\n```\n\n----------------------------------------\n\nTITLE: Cluster Configuration Options\nDESCRIPTION: Configuration settings for cluster management including instance scheduling and user storage options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nscheduler.instance cluster-cluster\nuser.* cluster-cluster\n```\n\n----------------------------------------\n\nTITLE: Setting Memory Limit for Container via CLI in Incus\nDESCRIPTION: Example command to set the memory limit configuration option for a container named 'my-container' to 8 GiB.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config set my-container limits.memory=8GiB\n```\n\n----------------------------------------\n\nTITLE: Attaching an ISO Volume to a VM in Incus\nDESCRIPTION: This command attaches a previously imported ISO volume to a VM, setting it as the boot device.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add iso-vm iso-volume disk pool=<pool> source=iso-volume boot.priority=10\n```\n\n----------------------------------------\n\nTITLE: Basic Incus Instance Move Command\nDESCRIPTION: Basic command syntax for moving an instance from one Incus server to another using the incus move command. This requires specifying source and target instances, with optional remote specifications.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/move_instances.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus move [<source_remote>:]<source_instance_name> <target_remote>:[<target_instance_name>]\n```\n\n----------------------------------------\n\nTITLE: Importing an Instance from an Export File in Incus\nDESCRIPTION: Command to import an Incus instance from a previously created export file. An optional instance name can be specified, otherwise the original instance name is used.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus import <file_path> [<instance_name>]\n```\n\n----------------------------------------\n\nTITLE: Attaching Storage Volume to Instance in Incus\nDESCRIPTION: Commands to attach a custom storage volume to an instance as a disk device. Different syntax is used for filesystem and block volumes. Device name can be optionally specified.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_volumes.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume attach <pool_name> <filesystem_volume_name> <instance_name> <location>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume attach <pool_name> <block_volume_name> <instance_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume attach <pool_name> <filesystem_volume_name> <instance_name> <device_name> <location>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume attach <pool_name> <block_volume_name> <instance_name> <device_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk pool=<pool_name> source=<volume_name> [path=<location>]\n```\n\n----------------------------------------\n\nTITLE: Exporting Incus Images to Files\nDESCRIPTION: Commands to export container or VM images to files for backup or transfer purposes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus image export [<remote>:]<image> [<output_directory_path>]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image export [<remote>:]<image> [<output_directory_path>] --vm\n```\n\n----------------------------------------\n\nTITLE: Listing Available Incus Images\nDESCRIPTION: Command to list all images on a server with optional remote specification. If no remote is specified, the default remote will be used.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus image list [<remote>:]\n```\n\n----------------------------------------\n\nTITLE: Defining Instance Properties Table in Markdown\nDESCRIPTION: A markdown table listing instance properties in Incus, including their names, read-only status, and descriptions. It covers properties such as architecture, creation timestamp, description, ephemeral status, and more.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_properties.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{list-table}\n   :header-rows: 1\n   :widths: 2 1 4\n\n* - Property\n  - Read-only\n  - Description\n* - `architecture`\n  - no\n  - Instance architecture\n* - `created_at`\n  - yes\n  - Timestamp of the instance creation\n* - `description`\n  - no\n  - User provided description of the instance\n* - `ephemeral`\n  - no\n  - Whether the instance is ephemeral (gets deleted when stopped)\n* - `last_used_at`\n  - yes\n  - Timestamp of the instance last usage\n* - `location`\n  - no\n  - Current location of the instance within a cluster\n* - `name`\n  - yes\n  - Instance name (see {ref}`instance-name-requirements`)\n* - `project`\n  - yes\n  - Project that the instance is a part of\n* - `stateful`\n  - yes\n  - Whether saved runtime state is currently present\n* - `status`\n  - yes\n  - Human readable status of the instance\n* - `status_code`\n  - yes\n  - Machine readable status of the instance\n* - `type`\n  - yes\n  - Type of instance (container or virtual machine)\n```\n```\n\n----------------------------------------\n\nTITLE: Restoring an Instance from Snapshot in Incus\nDESCRIPTION: Command to restore an Incus instance to a previous state using a snapshot. For stateful snapshots, the --stateful flag can be added to restore the running state as well.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus snapshot restore <instance_name> <snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Preseed YAML for Joining Incus Cluster Member\nDESCRIPTION: Example YAML configuration for joining a new member to an existing Incus cluster using a preseed file. It includes the cluster token and member-specific storage configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_form.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncluster:\n  enabled: true\n  server_address: 192.0.2.102:8443\n  cluster_token: eyJzZXJ2ZXJfbmFtZSI6Im5vZGUyIiwiZmluZ2VycHJpbnQiOiJjZjlmNmVhMWIzYjhiNjgxNzQ1YTY1NTY2YjM3ZGUwOTUzNjRmM2MxMDAwMGNjZWQyOTk5NDU5YzY2MGIxNWQ4IiwiYWRkcmVzc2VzIjpbIjE3Mi4xNy4zMC4xODM6ODQ0MyJdLCJzZWNyZXQiOiIxNGJmY2EzMDhkOTNhY2E3MGJmYThkMzE0NWM4NWY3YmE0ZmU1YmYyNmJiNDhmMmUwNzhhOGZhMDczZDc0YTFiIn0=\n  member_config:\n  - entity: storage-pool\n    name: default\n    key: source\n    value: \"\"\n  - entity: storage-pool\n    name: my-pool\n    key: source\n    value: \"\"\n  - entity: storage-pool\n    name: my-pool\n    key: driver\n    value: \"zfs\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Device to an Instance via CLI in Incus\nDESCRIPTION: Command to add a device to an instance, specifying the device name, type, and configuration options for that device.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> <device_type> <device_option_key>=<device_option_value> <device_option_key>=<device_option_value> ...\n```\n\n----------------------------------------\n\nTITLE: Attaching a Network to an Instance in Incus\nDESCRIPTION: Command syntax for attaching a network to an instance as a NIC device. Device name and interface name are optional, but recommended to avoid confusion.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_create.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus network attach <network_name> <instance_name> [<device_name>] [<interface_name>]\n```\n\n----------------------------------------\n\nTITLE: Viewing Incus Image Information\nDESCRIPTION: Commands to view detailed information about images, including specific properties.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus image info <image_ID>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image show <image_ID>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image get-property <image_ID> <key>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image get-property images:ubuntu/22.04 release\n```\n\n----------------------------------------\n\nTITLE: Installing Incus Agent in a VM\nDESCRIPTION: These commands mount the Incus config filesystem and run the agent installation script inside a VM.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nmount -t 9p config /mnt\ncd /mnt\n./install.sh\n```\n\n----------------------------------------\n\nTITLE: Listing Incus Projects\nDESCRIPTION: This command lists all projects that the user has permission to see in Incus. It displays project details in a table format, including project name, resource usage, and description.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_work.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus project list\n```\n\n----------------------------------------\n\nTITLE: Publishing an Image from an Incus Instance\nDESCRIPTION: Command to create and publish an image from a stopped Incus instance. This allows using the instance as a base for new instances. Optional flags include setting aliases, expiration dates, and public availability.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_create.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus publish <instance_name> [<remote>:]\n```\n\n----------------------------------------\n\nTITLE: Launching an Instance on a Specific Cluster Member in Incus\nDESCRIPTION: This command launches an Ubuntu 22.04 instance named 'c1' specifically on the cluster member 'server2'. The --target flag allows specifying which cluster member should host the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage_instance.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 c1 --target server2\n```\n\n----------------------------------------\n\nTITLE: Editing Full Server Configuration\nDESCRIPTION: Command to open the full server configuration in YAML format for editing.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_configure.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus config edit\n```\n\n----------------------------------------\n\nTITLE: Pulling Files from an Incus Instance\nDESCRIPTION: Commands to pull files or directories from an Incus instance to the local machine. Files can be pulled to a specific location or to stdout for piping to other commands.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus file pull <instance_name>/<path_to_file> <local_file_path>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file pull my-instance/etc/hosts .\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file pull my-instance/var/log/syslog - | less\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file pull -r <instance_name>/<path_to_directory> <local_location>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Incus Life-cycle Events\nDESCRIPTION: Structured table documenting all supported life-cycle events in Incus, including event names, descriptions, and additional information fields. The table covers system events from certificate management to instance operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/events.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                                   | Description                                                           | Additional Information                                                                               |\n| :------------------------------------- | :-------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------- |\n| `certificate-created`                  | A new certificate has been added to the server trust store.           |                                                                                                      |\n| `certificate-deleted`                  | The certificate has been deleted from the trust store.                |                                                                                                      |\n| `certificate-updated`                  | The certificate's configuration has been updated.                     |                                                                                                      |\n| `cluster-certificate-updated`          | The certificate for the whole cluster has changed.                    |                                                                                                      |\n```\n\n----------------------------------------\n\nTITLE: Editing Full Instance Configuration via CLI in Incus\nDESCRIPTION: Command to open an editor to modify the full instance configuration, including properties, options, and devices. Read-only properties are displayed but cannot be modified.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nincus config edit <instance_name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Network Address Set in Incus\nDESCRIPTION: Command to create a new network address set with optional configuration options. This creates an empty address set that can be populated with addresses later.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_address_sets.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network address-set create <name> [configuration_options...]\n```\n\n----------------------------------------\n\nTITLE: Basic Incus Instance Copy Command\nDESCRIPTION: Command syntax for duplicating an instance from one Incus server to another using the incus copy command. Similar to move but creates a copy instead of relocating the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/move_instances.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus copy [<source_remote>:]<source_instance_name> <target_remote>:[<target_instance_name>]\n```\n\n----------------------------------------\n\nTITLE: Importing a Custom Storage Volume from an Export File in Incus\nDESCRIPTION: This command imports an export file as a new custom storage volume in Incus. It requires specifying the pool name and file path, with an optional volume name for the new volume.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume import <pool_name> <file_path> [<volume_name>]\n```\n\n----------------------------------------\n\nTITLE: Evacuating a Cluster Member\nDESCRIPTION: This command migrates all instances from a specific cluster member to other members, preparing it for maintenance or updates.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster evacuate <member_name>\n```\n\n----------------------------------------\n\nTITLE: Updating Instance Options via API in Incus\nDESCRIPTION: API request to update instance options using PATCH method. Allows specifying multiple key-value pairs in the config object.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PATCH /1.0/instances/<instance_name> --data '{\"config\": {\"<option_key>\":\"<option_value>\",\"<option_key>\":\"<option_value>\"}}'\n```\n\n----------------------------------------\n\nTITLE: Basic Preseed Configuration\nDESCRIPTION: Example of non-interactive Incus configuration using preseed YAML. Sets up HTTPS listening address, image update interval, and network bridge configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/initialize.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | incus admin init --preseed\nconfig:\n  core.https_address: 192.0.2.1:9999\n  images.auto_update_interval: 15\nnetworks:\n- name: incusbr0\n  type: bridge\n  config:\n    ipv4.address: auto\n    ipv6.address: none\nEOF\n```\n\n----------------------------------------\n\nTITLE: Adding Storage Volume Disk Device\nDESCRIPTION: Command to add a storage volume as a disk device to an Incus instance, requiring pool name, volume name, and optional path specification.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk pool=<pool_name> source=<volume_name> [path=<path_in_instance>]\n```\n\n----------------------------------------\n\nTITLE: Creating a Snapshot of a Custom Storage Volume in Incus\nDESCRIPTION: This command creates a snapshot of a custom storage volume in Incus. It allows specifying the pool name, volume name, and optionally a snapshot name.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume snapshot create <pool_name> <volume_name> [<snapshot_name>]\n```\n\n----------------------------------------\n\nTITLE: Configuration Options for Ceph RBD Storage Pool\nDESCRIPTION: YAML configuration table showing the available options for configuring Ceph RBD storage pools in Incus. Includes settings for cluster name, OSD configuration, RBD features and user permissions.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_ceph.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nceph.cluster_name: ceph\nceph.osd.data_pool_name: -\nceph.osd.pg_num: 32\nceph.osd.pool_name: <pool_name>\nceph.rbd.clone_copy: true\nceph.rbd.du: true\nceph.rbd.features: layering\nceph.user.name: admin\nsource: -\nvolatile.pool.pristine: true\n```\n\n----------------------------------------\n\nTITLE: Displaying Instance Configuration via CLI in Incus\nDESCRIPTION: Command to show the current configuration of an instance including properties, options, and devices. The --expanded flag shows all inherited configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nincus config show <instance_name> --expanded\n```\n\n----------------------------------------\n\nTITLE: Exporting a Custom Storage Volume in Incus\nDESCRIPTION: This command exports a custom storage volume to a compressed file in Incus. It allows specifying the pool name, volume name, and optionally a file path for the export.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume export <pool_name> <volume_name> [<file_path>]\n```\n\n----------------------------------------\n\nTITLE: Moving an Instance Between Incus Cluster Members\nDESCRIPTION: This sequence of commands moves an existing instance 'c1' to another cluster member named 'server1'. The instance must be stopped before moving and can be started again after the move is complete.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage_instance.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus stop c1\nincus move c1 --target server1\nincus start c1\n```\n\n----------------------------------------\n\nTITLE: Displaying Server Configuration\nDESCRIPTION: Command to show the current server configuration settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_configure.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus config show\n```\n\n----------------------------------------\n\nTITLE: Copying an Image Between Incus Servers\nDESCRIPTION: Command to copy an image from a source remote to a target remote. The source remote is optional if copying from the local image store.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_copy.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus image copy [<source_remote>:]<image> <target_remote>:\n```\n\n----------------------------------------\n\nTITLE: Launching an Incus Instance with Custom Storage Pool\nDESCRIPTION: This command demonstrates how to launch an Incus instance using a specific storage pool. The --storage flag overrides the root disk device configuration from the profile.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_create_instance.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus launch <image> <instance_name> --storage <storage_pool>\n```\n\n----------------------------------------\n\nTITLE: Viewing Instance Information and Snapshots in Incus\nDESCRIPTION: Command to display information about an Incus instance, including its snapshots. This provides a comprehensive view of the instance's configuration and snapshot history.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus info <instance_name>\n```\n\n----------------------------------------\n\nTITLE: Copying Storage Volumes Between Incus Servers\nDESCRIPTION: Command to copy custom storage volumes between different Incus servers. It requires specifying the remote for each pool. The --mode flag can be added to choose a transfer mode (pull, push, or relay) based on the network setup.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_move_volume.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume copy <source_remote>:<source_pool_name>/<source_volume_name> <target_remote>:<target_pool_name>/<target_volume_name>\n```\n\n----------------------------------------\n\nTITLE: Network Zone Configuration Commands\nDESCRIPTION: Commands for configuring network zones and adding them to networks\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus network zone set <network_zone> <key>=<value>\nincus network zone edit <network_zone>\nincus network set <network_name> dns.zone.forward=\"incus.example.net\"\nincus network zone record create <network_zone> <record_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Volumes for Backups or Images in Incus\nDESCRIPTION: Commands to set server configuration for using custom volumes to store backup tarballs or image tarballs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_volumes.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config set storage.backups_volume <pool_name>/<volume_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus config set storage.images_volume <pool_name>/<volume_name>\n```\n\n----------------------------------------\n\nTITLE: Launching a Resource-Limited Container in Incus\nDESCRIPTION: This command creates a container with limited resources, specifically 1 vCPU and 192 MiB of RAM.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 ubuntu-limited --config limits.cpu=1 --config limits.memory=192MiB\n```\n\n----------------------------------------\n\nTITLE: Configuration Options for Ceph RBD Storage Volumes\nDESCRIPTION: YAML configuration table detailing the available options for configuring individual storage volumes within Ceph RBD pools. Includes filesystem, mounting, permissions and snapshot settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_ceph.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nblock.filesystem: <filesystem_type>\nblock.mount_options: <mount_options>\ninitial.gid: 0\ninitial.mode: 711\ninitial.uid: 0\nsecurity.shared: false\nsecurity.shifted: false\nsecurity.unmapped: false\nsize: <volume_size>\nsnapshots.expiry: <expiry_time>\nsnapshots.pattern: snap%d\nsnapshots.schedule: <schedule>\n```\n\n----------------------------------------\n\nTITLE: Displaying Instance Log in Incus\nDESCRIPTION: Command to display the log for a specific Incus instance to help troubleshoot startup failures.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_troubleshoot.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus info <instance_name> --show-log\n```\n\n----------------------------------------\n\nTITLE: Listing All Instances in an Incus Cluster\nDESCRIPTION: This command displays all instances across the entire Incus cluster. The output includes a location column that indicates which cluster member is hosting each instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage_instance.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus list\n```\n\n----------------------------------------\n\nTITLE: Importing a Split Image from Local File System\nDESCRIPTION: Command to import a split image (metadata and rootfs tarballs) from the local file system into an Incus image store. The target remote is optional.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_copy.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus image import <metadata_tarball_path> <rootfs_tarball_path> [<target_remote>:]\n```\n\n----------------------------------------\n\nTITLE: Launching a Container with Specific Instance Type in Incus\nDESCRIPTION: This command creates a container using a specific instance type 't2.micro', which defines certain resource allocations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 my-instance --type t2.micro\n```\n\n----------------------------------------\n\nTITLE: Mounting an Incus Instance File System\nDESCRIPTION: Command to mount an instance file system to a local path using sshfs. This allows accessing instance files directly from the local machine.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus file mount <instance_name>/<path_to_directory> <local_location>\n```\n\n----------------------------------------\n\nTITLE: Creating Incus Storage Pools with LINSTOR\nDESCRIPTION: Create Incus storage pools using LINSTOR as the backend, specifying the LINSTOR storage pool to use.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create remote linstor --target server01\nincus storage create remote linstor --target server02\nincus storage create remote linstor --target server03\nincus storage create remote linstor linstor.resource_group.storage_pool=nvme_pool\n```\n\n----------------------------------------\n\nTITLE: Creating a Network Forward in Incus\nDESCRIPTION: Command to create a network forward in Incus. It requires specifying the network name and listen address, with optional configuration options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_forwards.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network forward create <network_name> <listen_address> [configuration_options...]\n```\n\n----------------------------------------\n\nTITLE: Running lxd-to-incus Migration Tool\nDESCRIPTION: This snippet demonstrates the execution of the lxd-to-incus tool to migrate from LXD to Incus. It shows the step-by-step process, including version checks, server validations, and data migration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_migrate_lxd.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nlxd-to-incus\n=> Looking for source server\n==> Detected: snap package\n=> Looking for target server\n=> Connecting to source server\n=> Connecting to the target server\n=> Checking server versions\n==> Source version: 5.19\n==> Target version: 0.1\n=> Validating version compatibility\n=> Checking that the source server isn't empty\n=> Checking that the target server is empty\n=> Validating source server configuration\n\nThe migration is now ready to proceed.\nAt this point, the source server and all its instances will be stopped.\nInstances will come back online once the migration is complete.\n\nProceed with the migration? [default=no]: yes\n=> Stopping the source server\n=> Stopping the target server\n=> Wiping the target server\n=> Migrating the data\n=> Migrating database\n=> Cleaning up target paths\n=> Starting the target server\n=> Checking the target server\nUninstall the LXD package? [default=no]: yes\n=> Uninstalling the source server\n```\n\n----------------------------------------\n\nTITLE: Resizing Storage Volume in Incus using CLI\nDESCRIPTION: This command resizes a storage volume in Incus. It sets a new size for the specified volume in the given pool. The new size must be provided, and the operation's success depends on the volume type and available space.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_volumes.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume set <pool_name> <volume_name> size <new_size>\n```\n\n----------------------------------------\n\nTITLE: Adding Remote Server on Client\nDESCRIPTION: Command to add a remote Incus server using the generated trust token on the client side.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_expose.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus remote add <remote_name> <token>\n```\n\n----------------------------------------\n\nTITLE: Adding a Remote Incus Server in Incus CLI\nDESCRIPTION: Command to add an Incus server as a remote. Can accept IP address, FQDN, or URL, with optional authentication flags depending on the authentication method required.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus remote add <remote_name> <IP|FQDN|URL> [flags]\n```\n\n----------------------------------------\n\nTITLE: Deleting Instance Snapshots in Incus\nDESCRIPTION: Command to remove a specific snapshot from an Incus instance. This permanently removes the point-in-time backup of the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus snapshot delete <instance_name> <snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: ZFS Storage Pool Configuration Options in YAML\nDESCRIPTION: YAML configuration options for ZFS storage pools in Incus, including size, source, and ZFS-specific settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_zfs.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nKey                           | Type                          | Default                                 | Description\n:--                           | :---                          | :------                                 | :----------\n`size`                        | string                        | auto (20% of free disk space, >= 5 GiB and <= 30 GiB) | Size of the storage pool when creating loop-based pools (in bytes, suffixes supported, can be increased to grow storage pool)\n`source`                      | string                        | -                                       | Path to existing block device(s), loop file or ZFS dataset/pool. Multiple block devices should be separated by `,`. When listing block devices, you can also prefix them with `vdev` type. To specify a `vdev` type, use an `=` sign between the `vdev` type and the block devices (e.g., `mirror=/dev/sda,/dev/sdb`). Only `stripe`, `mirror`, `raidz1` and `raidz2` `vdev` types are supported.\n`source.wipe`                 | bool                          | `false`                                 | Wipe the block device specified in `source` prior to creating the storage pool\n`zfs.clone_copy`              | string                        | `true`                                  | Whether to use ZFS lightweight clones rather than full {spellexception}`dataset` copies (Boolean), or `rebase` to copy based on the initial image\n`zfs.export`                  | bool                          | `true`                                  | Disable zpool export while unmount performed\n`zfs.pool_name`               | string                        | name of the pool                        | Name of the zpool\n```\n\n----------------------------------------\n\nTITLE: Displaying Console Log in Incus\nDESCRIPTION: Command to display the console log for a specific Incus instance to help identify startup errors.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_troubleshoot.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus console <instance_name> --show-log\n```\n\n----------------------------------------\n\nTITLE: Deleting Files from an Incus Instance\nDESCRIPTION: Command to delete a file from an Incus instance using the local machine.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus file delete <instance_name>/<path_to_file>\n```\n\n----------------------------------------\n\nTITLE: Stopping Instances with Incus CLI\nDESCRIPTION: Shows how to stop a running instance using the Incus CLI.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus stop <instance_name>\n```\n\n----------------------------------------\n\nTITLE: Btrfs Storage Pool Creation Examples\nDESCRIPTION: Examples of creating Btrfs storage pools, including loop-backed pools and using existing Btrfs filesystems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_pools.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool1 btrfs\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool2 btrfs source=/some/path\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool3 btrfs source=/dev/sdX\n```\n\n----------------------------------------\n\nTITLE: Editing the Full Project Configuration in Incus\nDESCRIPTION: This command opens the full configuration of the project 'my-project' for editing using the incus project edit command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_create.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus project edit my-project\n```\n\n----------------------------------------\n\nTITLE: Resizing a Storage Bucket in Incus\nDESCRIPTION: Sets or changes the quota for a storage bucket by modifying its size configuration. This operation typically allows for growing the bucket but not shrinking below the current used size.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_buckets.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket set <pool_name> <bucket_name> size <new_size>\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Instances with Incus CLI\nDESCRIPTION: Shows how to rebuild an instance with a different image or with an empty root disk using the Incus CLI. The instance must be stopped and have no snapshots.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nincus rebuild <image_name> <instance_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus rebuild <instance_name> --empty\n```\n\n----------------------------------------\n\nTITLE: Moving Storage Volumes Between Incus Servers\nDESCRIPTION: Command to move custom storage volumes between different Incus servers. It requires specifying the remote for each pool. The --mode flag can be added to choose a transfer mode (pull, push, or relay) based on the network setup.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_move_volume.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume move <source_remote>:<source_pool_name>/<source_volume_name> <target_remote>:<target_pool_name>/<target_volume_name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Network Load Balancer in Incus\nDESCRIPTION: Command to create a new network load balancer in Incus. It requires specifying the network name and listen address, with optional configuration options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_load_balancers.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network load-balancer create <network_name> <listen_address> [configuration_options...]\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Level in Incus\nDESCRIPTION: Specifies the minimum log level to send to the logger. Default is 'info'. This global setting controls the verbosity of logs sent to external logging systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_77\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.logging.level server-logging\n:defaultdesc: \"`info`\"\n:scope: \"global\"\n:shortdesc: \"Minimum log level to send to the logger\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Managing Incus Image Aliases\nDESCRIPTION: Commands to list, create, delete, and rename image aliases for easier reference.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus image alias list\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image alias create <alias_name> <image_fingerprint>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image alias delete <alias_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image alias rename <alias_name> <new_alias_name>\n```\n\n----------------------------------------\n\nTITLE: Managing Incus Instance Snapshots\nDESCRIPTION: Commands for creating, restoring, and deleting snapshots of Incus instances, demonstrating the snapshot functionality for system state management.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/tutorial/first_steps.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus snapshot create first clean\nincus list first\nincus info first\nincus exec first -- rm /usr/bin/bash\nincus snapshot restore first clean\nincus snapshot delete first clean\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Targets in Incus Server\nDESCRIPTION: Example configuration for setting up multiple logging targets in Incus, including Loki and Syslog endpoints. Shows how to configure target-specific settings like address, credentials, and log types.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/server_config.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlogging.loki01.target.type: loki\nlogging.loki01.target.address: https://loki01.int.example.net\nlogging.loki01.target.username: foo\nlogging.loki01.target.password: bar\nlogging.loki01.types: lifecycle,network-acl\nlogging.loki01.lifecycle.types: instance\n\nlogging.syslog01.target.type: syslog\nlogging.syslog01.target.address: syslog01.int.example.net\nlogging.syslog01.target.facility: security\nlogging.syslog01.types: logging\nlogging.syslog01.logging.level: warning\n```\n\n----------------------------------------\n\nTITLE: Pushing Files to an Incus Instance\nDESCRIPTION: Commands to push files or directories from the local machine to an Incus instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus file push <local_file_path> <instance_name>/<path_to_file>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file push -r <local_location> <instance_name>/<path_to_directory>\n```\n\n----------------------------------------\n\nTITLE: Accessing VGA Graphical Console for Incus VMs\nDESCRIPTION: Command to start the VGA console with graphical output for a virtual machine. Requires a SPICE client like remote-viewer or spicy to be installed on the host system.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_console.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus console <vm_name> --type vga\n```\n\n----------------------------------------\n\nTITLE: Configuring Bridge Network Options in Incus\nDESCRIPTION: This snippet lists the configuration options available for the bridge network type in Incus. It includes options for BGP, L2 interface, DNS, IPv4/IPv6, security, raw configuration, tunneling, and user metadata.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_bridge.md#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n- `bgp` (BGP peer configuration)\n- `bridge` (L2 interface configuration)\n- `dns` (DNS server and resolution configuration)\n- `ipv4` (L3 IPv4 configuration)\n- `ipv6` (L3 IPv6 configuration)\n- `security` (network ACL configuration)\n- `raw` (raw configuration file content)\n- `tunnel` (cross-host tunneling configuration)\n- `user` (free-form key/value for user metadata)\n```\n\n----------------------------------------\n\nTITLE: Creating Network Zones in Incus\nDESCRIPTION: Commands to create network zones for forward and reverse DNS records\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network zone create incus.example.net\nincus network zone create 2.0.192.in-addr.arpa\nincus network zone create 1.0.0.0.1.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa\n```\n\n----------------------------------------\n\nTITLE: Editing Network Forward in Incus\nDESCRIPTION: Command to edit an existing network forward. It opens the network forward configuration in YAML format for editing, allowing modifications to both general configuration and port specifications.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_forwards.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus network forward edit <network_name> <listen_address>\n```\n\n----------------------------------------\n\nTITLE: Adding Addresses to a Network Address Set\nDESCRIPTION: Command to add IPv4, IPv6 addresses or CIDR ranges to an existing address set. Multiple addresses can be added in a single command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_address_sets.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network address-set add <name> <address1> <address2>\n```\n\n----------------------------------------\n\nTITLE: Launching an Instance on a Cluster Group Member in Incus\nDESCRIPTION: This command launches an Ubuntu 22.04 instance named 'c1' on a member of the 'gpu' cluster group.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_groups.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 c1 --target=@gpu\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Volume Settings in Incus\nDESCRIPTION: Commands to set or edit configuration options for a storage volume, including examples for setting volume size and snapshot expiry time.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_volumes.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume set <pool_name> [<volume_type>/]<volume_name> <key> <value>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume set my-pool my-volume size=1GiB\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume set my-pool virtual-machine/my-vm snapshots.expiry 1M\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume edit <pool_name> [<volume_type>/]<volume_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage set [<remote>:]<pool_name> volume.size <value>\n```\n\n----------------------------------------\n\nTITLE: Using a Custom Debian Shell Alias in Incus\nDESCRIPTION: This command demonstrates the usage of the previously created 'debian' alias to access a shell as the debian user in the 'mycontainer' instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/incus_alias.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus debian mycontainer\n```\n\n----------------------------------------\n\nTITLE: Default Incus Profile Configuration in YAML\nDESCRIPTION: Example YAML configuration for the default Incus profile, showing network interface and root disk configuration. Demonstrates structure for config, devices, and profile metadata.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/profiles.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nconfig: {}\ndescription: Default Incus profile\ndevices:\n  eth0:\n    name: eth0\n    network: incusbr0\n    type: nic\n  root:\n    path: /\n    pool: default\n    type: disk\nname: default\nused_by:\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Storage Pool in Incus\nDESCRIPTION: Basic command structure for creating a storage pool in Incus. Allows specifying pool name, driver type, and optional configuration options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_pools.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create <pool_name> <driver> [configuration_options...]\n```\n\n----------------------------------------\n\nTITLE: Creating a Clustered Network in Incus\nDESCRIPTION: Example of creating a physical network named 'UPLINK' across three cluster members. This demonstrates the two-step process required for clustered networks where configuration must be created as pending on each member before final creation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_create.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network create UPLINK --type=physical parent=br0 --target=vm01\nincus network create UPLINK --type=physical parent=br0 --target=vm02\nincus network create UPLINK --type=physical parent=br0 --target=vm03\nincus network create UPLINK --type=physical\n```\n\n----------------------------------------\n\nTITLE: Stopping Instances with Incus API\nDESCRIPTION: Shows how to stop an instance using the Incus API, including how to monitor the operation status and instance state.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PUT /1.0/instances/<instance_name>/state --data '{\"action\":\"stop\"}'\n```\n\n----------------------------------------\n\nTITLE: Listing Available Images on a Remote Server in Incus\nDESCRIPTION: Command to list all available images on a specified remote server. The remote name must be specified followed by a colon.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus image list <remote>:\n```\n\n----------------------------------------\n\nTITLE: Moving or Renaming Custom Storage Volumes in Incus\nDESCRIPTION: Command to move or rename a custom storage volume in Incus. It can be used to move volumes between pools or rename within the same pool. All instances using the volume must be stopped before executing this command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_move_volume.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume move <source_pool_name>/<source_volume_name> <target_pool_name>/<target_volume_name>\n```\n\n----------------------------------------\n\nTITLE: Creating OVN Network with Incus\nDESCRIPTION: Commands to set up an OVN network using Incus, including configuring the parent network and creating the OVN network.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus network set <parent_network> ipv4.dhcp.ranges=<IP_range> ipv4.ovn.ranges=<IP_range>\nincus network create ovntest --type=ovn network=<parent_network>\n```\n\n----------------------------------------\n\nTITLE: Creating Network Across Cluster Members in Incus\nDESCRIPTION: Commands to define a new network 'my-network' across all members of an Incus cluster. This is the first step in the two-step process of creating additional networks in a cluster.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_networks.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network create --target server1 my-network\nincus network create --target server2 my-network\nincus network create --target server3 my-network\n```\n\n----------------------------------------\n\nTITLE: Deleting Network Forward in Incus\nDESCRIPTION: Command to delete a network forward. It removes the specified network forward from the given network.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_forwards.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus network forward delete <network_name> <listen_address>\n```\n\n----------------------------------------\n\nTITLE: Force Removing an Offline Cluster Member\nDESCRIPTION: This command forcefully removes an offline member from the cluster. It should be used as a last resort when a member cannot be recovered.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster remove --force <member_name>\n```\n\n----------------------------------------\n\nTITLE: LVM Storage Pool Creation Examples\nDESCRIPTION: Examples of creating LVM storage pools with various configurations including volume groups and thin pools.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_pools.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool1 lvm\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool2 lvm source=my-pool\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool3 lvm source=my-vg lvm.thinpool_name=my-pool\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool4 lvm source=/dev/sdX\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create pool5 lvm source=/dev/sdX lvm.vg_name=my-pool\n```\n\n----------------------------------------\n\nTITLE: Updating Full Instance Configuration via API in Incus\nDESCRIPTION: API request to replace the entire instance configuration using PUT method. Requires providing the complete configuration; read-only properties will be ignored.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PUT /1.0/instances/<instance_name> --data '<instance_configuration>'\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Pool Across Cluster Members\nDESCRIPTION: Commands to define a new storage pool on three different cluster members with member-specific configurations using the ZFS storage driver.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_storage.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create --target server1 data zfs source=/dev/vdb1\nincus storage create --target server2 data zfs source=/dev/vdc1\nincus storage create --target server3 data zfs source=/dev/vdb1 size=10GiB\n```\n\n----------------------------------------\n\nTITLE: Updating Instance State in Incus Instance-Host Communication\nDESCRIPTION: PATCH request to the /1.0 endpoint allows updating the instance state. Valid states are 'Ready' and 'Started'.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/dev-incus.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"state\": \"Ready\"\n}\n```\n\n----------------------------------------\n\nTITLE: Editing Files in an Incus Instance\nDESCRIPTION: Commands to edit files directly within an Incus instance from the local machine. The file must already exist on the instance for this to work.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus file edit <instance_name>/<path_to_file>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file edit my-container/etc/hosts\n```\n\n----------------------------------------\n\nTITLE: Launching a VM on a Specific Cluster Member in Incus\nDESCRIPTION: This command creates a virtual machine on a specific cluster member named 'server2'.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 ubuntu-container --vm --target server2\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Address for Remote Access\nDESCRIPTION: Example command to configure remote access to the Incus server by setting the HTTPS listening address to port 8443.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_configure.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.https_address :8443\n```\n\n----------------------------------------\n\nTITLE: Targeting Specific Server in Incus Cluster (Bash)\nDESCRIPTION: This snippet demonstrates how to target a specific server within an Incus cluster using API and CLI parameters. It's used to direct requests to a particular server in the cluster.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_access.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n?target=SERVER   # API level\n--target           # CLI level\n```\n\n----------------------------------------\n\nTITLE: Managing Incus Instances\nDESCRIPTION: Commands for managing Incus instances, including stopping, deleting, and force-deleting containers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/tutorial/first_steps.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus stop second\nincus delete second\nincus delete third\nincus delete third --force\n```\n\n----------------------------------------\n\nTITLE: Recovering Incus Cluster from Quorum Loss\nDESCRIPTION: Command to recover an Incus cluster from quorum loss. This should be run on the chosen new leader node after stopping Incus services on all online nodes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo incus admin cluster recover-from-quorum-loss\n```\n\n----------------------------------------\n\nTITLE: Configuring Physical NIC in Incus\nDESCRIPTION: Documentation for the 'physical' NIC type in Incus. It provides straight physical device pass-through from the host. The device options include boot priority, GVRP, MAC address, MTU, interface name, network, parent device, and VLAN ID.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nKey                     | Type    | Default           | Managed | Description\n:--                     | :--     | :--               | :--     | :--\n`boot.priority`         | integer | -                 | no      | Boot priority for VMs (higher value boots first)\n`gvrp`                  | bool    | `false`           | no      | Register VLAN using GARP VLAN Registration Protocol\n`hwaddr`                | string  | randomly assigned | no      | The MAC address of the new interface\n`mtu`                   | integer | parent MTU        | no      | The MTU of the new interface\n`name`                  | string  | kernel assigned   | no      | The name of the interface inside the instance\n`network`               | string  | -                 | no      | The managed network to link the device to (instead of specifying the `nictype` directly)\n`parent`                | string  | -                 | yes     | The name of the host device (required if specifying the `nictype` directly)\n`vlan`                  | integer | -                 | no      | The VLAN ID to attach to\n```\n\n----------------------------------------\n\nTITLE: Setting Project Restrictions in Incus\nDESCRIPTION: Commands to restrict a project and allow container nesting while blocking other security-sensitive features. This demonstrates how to use the 'restricted' and 'restricted.*' configuration options in Incus projects.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/projects.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nincus project set <project_name> restricted=true\nincus project set <project_name> restricted.containers.nesting=allow\n```\n\n----------------------------------------\n\nTITLE: Passing Environment Variables to Incus Exec Command\nDESCRIPTION: Demonstrates how to pass environment variables directly to the 'incus exec' command using the '--env' flag. This method sets the variable for a single execution.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/instance-exec.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus exec <instance_name> --env ENVVAR=VALUE -- <command>\n```\n\n----------------------------------------\n\nTITLE: Adding Host Path Disk Device\nDESCRIPTION: Command to share a host path (file system or block device) with an Incus instance as a disk device.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk source=<path_on_host> [path=<path_in_instance>]\n```\n\n----------------------------------------\n\nTITLE: Displaying Snapshots of a Storage Volume in Incus\nDESCRIPTION: This command displays information about the snapshots of a specific storage volume in Incus, including the pool name and volume name.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume info <pool_name> <volume_name>\n```\n\n----------------------------------------\n\nTITLE: Storage Pool Configuration Commands\nDESCRIPTION: Commands for configuring and viewing storage pool settings, including setting options and viewing pool information.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_pools.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus storage set <pool_name> <key> <value>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage edit <pool_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage list\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage show <pool_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage info <pool_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage set <pool_name> size=<new_size>\n```\n\n----------------------------------------\n\nTITLE: Generating Metrics Certificate for Incus\nDESCRIPTION: Create a new metrics certificate using OpenSSL for authentication with the metrics API endpoint.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -newkey ec -pkeyopt ec_paramgen_curve:secp384r1 -sha384 -keyout metrics.key -nodes -out metrics.crt -days 3650 -subj \"/CN=metrics.local\"\n```\n\n----------------------------------------\n\nTITLE: Restoring a Snapshot of a Custom Storage Volume in Incus\nDESCRIPTION: This command restores a custom storage volume to the state of a specific snapshot in Incus, using the pool name, volume name, and snapshot name.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume snapshot restore <pool_name> <volume_name> <snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Viewing and Managing Storage Buckets in Incus\nDESCRIPTION: Commands for listing all storage buckets, showing detailed information about a specific bucket, and deleting a storage bucket along with its keys.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_buckets.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket list <pool_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket show <pool_name> <bucket_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket delete <pool_name> <bucket_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Project Features in Incus\nDESCRIPTION: These YAML configuration options define feature settings for Incus projects. They control whether projects use separate sets of images, networks, profiles, and storage resources.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_44\n\nLANGUAGE: yaml\nCODE:\n```\nfeatures.images: false\nfeatures.networks: false\nfeatures.networks.zones: false\nfeatures.profiles: false\nfeatures.storage.buckets: false\nfeatures.storage.volumes: false\n```\n\n----------------------------------------\n\nTITLE: Instantiating Network Across All Cluster Members in Incus\nDESCRIPTION: Command to instantiate the previously defined network 'my-network' across all members of an Incus cluster. This is the second step in creating additional networks in a cluster.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_networks.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network create my-network\n```\n\n----------------------------------------\n\nTITLE: Create and Edit Incus Profile Commands\nDESCRIPTION: Commands for creating new profiles and setting profile configuration options including device settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/profiles.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus profile create <profile_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus profile set <profile_name> <option_key>=<option_value> <option_key>=<option_value> ...\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus profile device add <profile_name> <device_name> <device_type> <device_option_key>=<device_option_value> <device_option_key>=<device_option_value> ...\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus profile device set <profile_name> <device_name> <device_option_key>=<device_option_value> <device_option_key>=<device_option_value> ...\n```\n\n----------------------------------------\n\nTITLE: Creating OVN Network Integration in Incus\nDESCRIPTION: Commands to create and configure an OVN network integration with northbound and southbound connections to multiple endpoints.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_integrations.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network integration create ovn-region ovn\nincus network integration set ovn-region ovn.northbound_connection tcp:[192.0.2.12]:6645,tcp:[192.0.3.13]:6645,tcp:[192.0.3.14]:6645\nincus network integration set ovn-region ovn.southbound_connection tcp:[192.0.2.12]:6646,tcp:[192.0.3.13]:6646,tcp:[192.0.3.14]:6646\n```\n\n----------------------------------------\n\nTITLE: Setting Global Cluster Configuration\nDESCRIPTION: This command sets a global configuration option for the cluster, which will be propagated to all members.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus config set cluster.max_voters 5\n```\n\n----------------------------------------\n\nTITLE: Configuring OCI Options for Incus Containers (YAML)\nDESCRIPTION: Defines OCI (Open Container Initiative) related configuration options for Incus containers, including working directory, entry point, and process UID/GID settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\noci.cwd:\n  condition: \"OCI container\"\n  liveupdate: \"no\"\n  shortdesc: \"OCI container working directory\"\n  type: \"string\"\n\noci.entrypoint:\n  condition: \"OCI container\"\n  liveupdate: \"no\"\n  shortdesc: \"OCI container entry point\"\n  type: \"string\"\n\noci.gid:\n  condition: \"OCI container\"\n  liveupdate: \"no\"\n  shortdesc: \"OCI container GID\"\n  type: \"string\"\n\noci.uid:\n  condition: \"OCI container\"\n  liveupdate: \"no\"\n  shortdesc: \"OCI container UID\"\n  type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Adding a Remote Incus Server with IP Address Example\nDESCRIPTION: Example command showing how to add a remote Incus server using its IP address. After execution, you'll be prompted to confirm the server fingerprint and provide authentication.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus remote add my-remote 192.0.2.10\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Project in Incus\nDESCRIPTION: This command creates a new project called 'my-project' using the incus project create command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_create.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus project create my-project\n```\n\n----------------------------------------\n\nTITLE: Example of Attaching a Network to an Instance\nDESCRIPTION: Practical example of attaching 'my-network' to 'my-instance' as the 'eth0' device, which is useful for compatibility with images that perform IP auto-configuration on eth0.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_create.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus network attach my-network my-instance eth0\n```\n\n----------------------------------------\n\nTITLE: Updating Instance Properties via API in Incus\nDESCRIPTION: API request to update instance properties at the root level of the configuration using PATCH method. Properties are distinguished from options by their placement in the JSON structure.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PATCH /1.0/instances/<instance_name> --data '{\"<property_key>\":\"<property_value>\",\"<property_key>\":\"property_value>\"}'\n```\n\n----------------------------------------\n\nTITLE: Creating Linstor Storage Pool in Incus\nDESCRIPTION: This YAML configuration creates a Linstor storage pool named 'linstor' in Incus. It specifies the storage driver, resource group, and other Linstor-specific settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nincus storage create linstor \\n  driver=linstor \\n  linstor.resource-group=<resource-group> \\n  linstor.storage-pools=<storage-pool> \\n  linstor.api-endpoint=https://linstor.example.com:3370 \\n  linstor.api-password=<password>\n```\n\n----------------------------------------\n\nTITLE: Accessing REST API via HTTPS with wget\nDESCRIPTION: This command uses wget to securely connect to the Incus REST API over HTTPS using the client certificate and key for authentication.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/debugging.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nwget --no-check-certificate --certificate=$HOME/.config/incus/client.crt --private-key=$HOME/.config/incus/client.key -qO - https://127.0.0.1:8443/1.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Daily Snapshot Schedule in Incus\nDESCRIPTION: Command to set up automatic daily snapshots for an Incus instance using the @daily schedule macro. This ensures regular backups without manual intervention.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <instance_name> snapshots.schedule @daily\n```\n\n----------------------------------------\n\nTITLE: Detaching an ISO Volume from a VM in Incus\nDESCRIPTION: This command detaches the ISO volume from a VM after installation is complete.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume detach <pool> iso-volume iso-vm\n```\n\n----------------------------------------\n\nTITLE: Setting Resource Limits for Incus Projects\nDESCRIPTION: These YAML configuration options define resource limits for Incus projects. They control maximum values for containers, CPUs, disk space, instances, memory usage, networks, processes, and virtual machines within a project.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_45\n\nLANGUAGE: yaml\nCODE:\n```\nlimits.containers: \"Maximum number of containers\"\nlimits.cpu: \"Maximum number of CPUs\"\nlimits.disk: \"Maximum disk space used\"\nlimits.disk.pool.POOL_NAME: \"Maximum disk space used on this pool\"\nlimits.instances: \"Maximum number of instances\"\nlimits.memory: \"Usage limit for host's memory\"\nlimits.networks: \"Maximum number of networks\"\nlimits.processes: \"Maximum number of processes\"\nlimits.virtual-machines: \"Maximum number of VMs\"\n```\n\n----------------------------------------\n\nTITLE: Showing Detailed Information for a Cluster Member\nDESCRIPTION: This command displays detailed information about a specific cluster member.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster show <member_name>\n```\n\n----------------------------------------\n\nTITLE: Default QEMU Global Configuration Example\nDESCRIPTION: Sample of default QEMU configuration generated by Incus showing S3 and S4 power management settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n[global]\ndriver = \"ICH9-LPC\"\nproperty = \"disable_s3\"\nvalue = \"1\"\n\n[global]\ndriver = \"ICH9-LPC\"\nproperty = \"disable_s4\"\nvalue = \"0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus for Multiple Incus Servers in YAML\nDESCRIPTION: This YAML configuration demonstrates how to set up Prometheus to scrape metrics from multiple Incus servers, including a cluster and standalone servers. It shows different job configurations with various TLS settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nglobal:\n  # How frequently to scrape targets by default. The Prometheus default value is 1m.\n  scrape_interval: 15s\n\nscrape_configs:\n  # abydos, langara and orilla are part of a single cluster (called `hdc` here)\n  # initially bootstrapped by abydos which is why all 3 targets\n  # share the same `ca_file` and `server_name`. That `ca_file` corresponds\n  # to the `/var/lib/incus/cluster.crt` file found on every member of\n  # the Incus cluster.\n  #\n  # Note: the `project` param is are provided when not using the `default` project\n  #       or when multiple projects are used.\n  #\n  # Note: each member of the cluster only provide metrics for instances it runs locally\n  #       this is why the `incus-hdc` cluster lists 3 targets\n  - job_name: \"incus-hdc\"\n    metrics_path: '/1.0/metrics'\n    params:\n      project: ['jdoe']\n    scheme: 'https'\n    static_configs:\n      - targets:\n        - 'abydos.hosts.example.net:8444'\n        - 'langara.hosts.example.net:8444'\n        - 'orilla.hosts.example.net:8444'\n    tls_config:\n      ca_file: 'tls/abydos.crt'\n      cert_file: 'tls/metrics.crt'\n      key_file: 'tls/metrics.key'\n      server_name: 'abydos'\n\n  # jupiter, mars and saturn are 3 standalone Incus servers.\n  # Note: only the `default` project is used on them, so it is not specified.\n  - job_name: \"incus-jupiter\"\n    metrics_path: '/1.0/metrics'\n    scheme: 'https'\n    static_configs:\n      - targets: ['jupiter.example.com:9101']\n    tls_config:\n      ca_file: 'tls/jupiter.crt'\n      cert_file: 'tls/metrics.crt'\n      key_file: 'tls/metrics.key'\n      server_name: 'jupiter'\n\n  - job_name: \"incus-mars\"\n    metrics_path: '/1.0/metrics'\n    scheme: 'https'\n    static_configs:\n      - targets: ['mars.example.com:9101']\n    tls_config:\n      ca_file: 'tls/mars.crt'\n      cert_file: 'tls/metrics.crt'\n      key_file: 'tls/metrics.key'\n      server_name: 'mars'\n\n  - job_name: \"incus-saturn\"\n    metrics_path: '/1.0/metrics'\n    scheme: 'https'\n    static_configs:\n      - targets: ['saturn.example.com:9101']\n    tls_config:\n      ca_file: 'tls/saturn.crt'\n      cert_file: 'tls/metrics.crt'\n      key_file: 'tls/metrics.key'\n      server_name: 'saturn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Remote Servers in YAML\nDESCRIPTION: Example configuration for setting up global remote servers in /etc/incus/config.yml. Shows how to define multiple remote servers with their respective authentication and connection settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/remotes.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nremotes:\n  foo:\n    addr: https://192.0.2.4:8443\n    auth_type: tls\n    project: default\n    protocol: incus\n    public: false\n  bar:\n    addr: https://192.0.2.5:8443\n    auth_type: tls\n    project: default\n    protocol: incus\n    public: false\n```\n\n----------------------------------------\n\nTITLE: Migrating a Single LXC Container to Incus\nDESCRIPTION: Command to migrate a specific LXC container (lxc1) to Incus. Requires sudo privileges and the container must be stopped before migration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo lxc-to-incus --containers lxc1\n```\n\n----------------------------------------\n\nTITLE: Managing Storage Volumes Across Cluster\nDESCRIPTION: Commands showing how to view storage volume information from different cluster members using the --target flag.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_storage.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume show local vol1 --target server1\nincus storage volume show local vol1 --target server2\n```\n\n----------------------------------------\n\nTITLE: Setting Cluster Member-Specific Configuration\nDESCRIPTION: Command to set configuration options for a specific cluster member using the --target flag. Example shows setting image storage location for a particular member.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_configure.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config set storage.images_volume my-pool/my-volume --target member02\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Address for Incus Server\nDESCRIPTION: Sets the S3 address for the Incus server to enable storage buckets on local storage. This command configures the server to listen on port 8555 for S3 requests.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_buckets.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.storage_buckets_address :8555\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Volume Configuration in Profile\nDESCRIPTION: Command to set initial volume configuration for root disk devices in a profile.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus profile device set <profile_name> <device_name> initial.zfs.block_mode=true\n```\n\n----------------------------------------\n\nTITLE: Adding a Port Specification to an Incus Network Load Balancer\nDESCRIPTION: Command to add a port specification to an existing network load balancer. It configures forwarding rules for specific ports and protocols to target backends.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_load_balancers.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus network load-balancer port add <network_name> <listen_address> <protocol> <listen_ports> <backend_name>[,<backend_name>...]\n```\n\n----------------------------------------\n\nTITLE: Starting Incus Services\nDESCRIPTION: Commands to start the Incus daemon and socket services. This should be done on all machines after recovery, starting with the new leader.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl start incus.socket incus.service\n```\n\n----------------------------------------\n\nTITLE: Adding a Device to an Instance via API in Incus\nDESCRIPTION: API request to add a device to an instance using PATCH method, specifying the device name, type, and configuration options in the devices object.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PATCH /1.0/instances/<instance_name> --data '{\"devices\": {\"<device_name>\": {\"type\":\"<device_type>\",\"<device_option_key>\":\"<device_option_value>\",\"<device_option_key>\":\"device_option_value>\"}}}'\n```\n\n----------------------------------------\n\nTITLE: Creating a Cluster Group in Incus\nDESCRIPTION: This command creates a new cluster group named 'gpu' using the incus cluster group create command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_groups.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster group create gpu\n```\n\n----------------------------------------\n\nTITLE: Removing a Cluster Member\nDESCRIPTION: This command removes a member from the cluster. The member must be online and have no instances on it for a clean removal.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster remove <member_name>\n```\n\n----------------------------------------\n\nTITLE: Deleting Instances with Incus CLI\nDESCRIPTION: Shows how to permanently delete an instance using the Incus CLI. The instance must be stopped before deletion.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus delete <instance_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Syscall Interception for Incus Containers\nDESCRIPTION: These options provide fine-grained control over specific syscall interceptions in Incus containers, including BPF, mount, and other system operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_21\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.bpf instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to handle the `bpf()` system call\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.bpf.devices instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to allow BPF programs\"\n:type: \"bool\"\nThis option controls whether to allow BPF programs for the devices cgroup in the unified hierarchy to be loaded.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.mknod instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to handle the `mknod` and `mknodat` system calls\"\n:type: \"bool\"\nThese system calls allow creation of a limited subset of char/block devices.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.mount instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to handle the `mount` system call\"\n:type: \"bool\"\n\n```\n\n----------------------------------------\n\nTITLE: Testing LXC Container Migration with Dry Run\nDESCRIPTION: Command to test the migration of all LXC containers without actually performing the migration. Useful for checking compatibility and potential issues.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo lxc-to-incus --all --dry-run\n```\n\n----------------------------------------\n\nTITLE: Copying Custom Storage Volumes in Incus\nDESCRIPTION: Command to copy a custom storage volume in Incus. It can be used to copy volumes between pools or within the same pool. Additional flags like --volume-only and --refresh can be used to modify the copy behavior.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_move_volume.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume copy <source_pool_name>/<source_volume_name> <target_pool_name>/<target_volume_name>\n```\n\n----------------------------------------\n\nTITLE: Starting the Configured VM\nDESCRIPTION: Starts the configured virtual machine instance\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_routed_nic_vm.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus start jammy\n```\n\n----------------------------------------\n\nTITLE: Configuring cloud-init User Data for Package Management in YAML\nDESCRIPTION: Example YAML configuration for cloud-init user-data that enables package upgrades and installs specific packages. This shows the proper format with the #cloud-config header and indentation required by Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.user-data: |\n    #cloud-config\n    package_upgrade: true\n    packages:\n      - package1\n      - package2\n```\n\n----------------------------------------\n\nTITLE: Starting a VM and Connecting to its Console in Incus\nDESCRIPTION: These commands start a VM and connect to its console for interaction during the boot process.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus start iso-vm --console\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus console iso-vm --type=vga\n```\n\n----------------------------------------\n\nTITLE: Removing DNS Record Entry from Incus Network Zone\nDESCRIPTION: Command syntax for removing a specific DNS record entry from an Incus network zone by specifying the zone, record name, type, and value.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus network zone record entry remove <network_zone> <record_name> <type> <value>\n```\n\n----------------------------------------\n\nTITLE: Starting Instances with Incus API\nDESCRIPTION: Shows how to start an instance using the Incus API, including how to monitor the operation status and instance state.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PUT /1.0/instances/<instance_name>/state --data '{\"action\":\"start\"}'\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/operations/<operation_ID>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances/<instance_name>/state\n```\n\n----------------------------------------\n\nTITLE: Retrieving Incus Network Bridge Information\nDESCRIPTION: Commands to retrieve IPv4 address, IPv6 address, and DNS domain for an Incus network bridge.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network get <network_bridge> ipv4.address\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus network get <network_bridge> ipv6.address\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus network get <network_bridge> dns.domain\n```\n\n----------------------------------------\n\nTITLE: Adding Network Device to Incus Instance\nDESCRIPTION: Generic command structure for adding a network device to an Incus instance with specified NIC type\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/networks.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> nic nictype=<nic_type> ...\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Volumes on Cluster Members\nDESCRIPTION: Commands demonstrating how to create storage volumes on different cluster members, both with and without target specification.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_storage.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume create local vol1\nincus storage volume create local vol1 --target server2\n```\n\n----------------------------------------\n\nTITLE: Setting Core BGP Configuration in Incus\nDESCRIPTION: Commands to configure the essential BGP server parameters in Incus, including the BGP address, Autonomous System Number (ASN), and router ID. These settings enable Incus to listen for BGP sessions.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bgp.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.bgp_address=192.0.2.50:179\nincus config set core.bgp_asn=65536\nincus config set core.bgp_routerid=192.0.2.50\n```\n\n----------------------------------------\n\nTITLE: Editing an Incus Network Load Balancer Configuration\nDESCRIPTION: Command to edit the configuration of an existing network load balancer. It opens the configuration in YAML format for modification.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_load_balancers.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus network load-balancer edit <network_name> <listen_address>\n```\n\n----------------------------------------\n\nTITLE: Configuring Incus Server for Metrics API on Specific IP\nDESCRIPTION: Set the core.metrics_address configuration option to expose the metrics API endpoint on a specific IP address and port.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.metrics_address \"192.0.2.101:8444\"\n```\n\n----------------------------------------\n\nTITLE: Configuration Options for Macvlan Network in Incus\nDESCRIPTION: This YAML-style table outlines the configuration options available for the 'macvlan' network type in Incus. It includes keys for GVRP, MTU, parent interface, VLAN ID, and user-defined metadata.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_macvlan.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nKey                             | Type      | Condition             | Default                   | Description\n:--                             | :--       | :--                   | :--                       | :--\n`gvrp`                          | bool      | -                     | `false`                   | Register VLAN using GARP VLAN Registration Protocol\n`mtu`                           | integer   | -                     | -                         | The MTU of the new interface\n`parent`                        | string    | -                     | -                         | Parent interface to create `macvlan` NICs on\n`vlan`                          | integer   | -                     | -                         | The VLAN ID to attach to\n`user.*`                        | string    | -                     | -                         | User-provided free-form key/value pairs\n```\n\n----------------------------------------\n\nTITLE: Adding a Proxy Device in Incus\nDESCRIPTION: This command adds a proxy device to an Incus instance. It specifies the listening and connection parameters, as well as whether to bind to the host or instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_proxy.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> proxy listen=<type>:<addr>:<port>[-<port>][,<port>] connect=<type>:<addr>:<port> bind=<host/instance>\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Bucket Settings in Incus\nDESCRIPTION: Sets configuration options for a storage bucket, such as setting a quota size. These commands allow for individual option setting or editing the entire configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_buckets.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket set <pool_name> <bucket_name> <key> <value>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket set my-pool my-bucket size 1MiB\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket edit <pool_name> <bucket_name>\n```\n\n----------------------------------------\n\nTITLE: Adding a Delete Command Alias with Interactive Flag in Incus\nDESCRIPTION: This command creates an alias named 'delete' that automatically adds the '--interactive' flag to the delete command, ensuring confirmation is always requested when deleting an instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/incus_alias.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus alias add delete \"delete --interactive\"\n```\n\n----------------------------------------\n\nTITLE: Creating Benchmark Containers\nDESCRIPTION: Generic command for creating a specified number of containers using the incus-benchmark tool. The image parameter can be a remote image reference, local image fingerprint, or alias.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark init --count <number> <image>\n```\n\n----------------------------------------\n\nTITLE: Listing Network Peer Relationships - Incus CLI\nDESCRIPTION: Command to list all network peerings configured for a specific network in Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_peers.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus network peer list <network>\n```\n\n----------------------------------------\n\nTITLE: Switching Incus Projects\nDESCRIPTION: This command allows the user to switch to a different Incus project. Replace <project_name> with the name of the project you want to switch to.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_work.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus project switch <project_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring IPVLAN NIC in Incus\nDESCRIPTION: Documentation for the 'ipvlan' NIC type in Incus. It sets up a new network device based on an existing one, using the same MAC address but a different IP. This NIC type is only available for containers and does not support hotplugging. It includes options for IP addressing, gateways, and routing.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nKey                     | Type    | Default            | Description\n:--                     | :--     | :--                | :--\n`gvrp`                  | bool    | `false`            | Register VLAN using GARP VLAN Registration Protocol\n`hwaddr`                | string  | randomly assigned  | The MAC address of the new interface\n`ipv4.address`          | string  | -                  | Comma-delimited list of IPv4 static addresses to add to the instance (in `l2` mode, these can be specified as CIDR values or singular addresses using a subnet of `/24`)\n`ipv4.gateway`          | string  | `auto` (`l3s`), - (`l2`) | In `l3s` mode, whether to add an automatic default IPv4 gateway (can be `auto` or `none`); in `l2` mode, the IPv4 address of the gateway\n`ipv4.host_table`       | integer | -                  | The custom policy routing table ID to add IPv4 static routes to (in addition to the main routing table)\n`ipv6.address`          | string  | -                  | Comma-delimited list of IPv6 static addresses to add to the instance (in `l2` mode, these can be specified as CIDR values or singular addresses using a subnet of `/64`)\n`ipv6.gateway`          | string  | `auto` (`l3s`), - (`l2`) | In `l3s` mode, whether to add an automatic default IPv6 gateway (can be `auto` or `none`); in `l2` mode, the IPv6 address of the gateway\n`ipv6.host_table`       | integer | -                  | The custom policy routing table ID to add IPv6 static routes to (in addition to the main routing table)\n`mode`                  | string  | `l3s`              | The IPVLAN mode (either `l2` or `l3s`)\n`mtu`                   | integer | parent MTU         | The MTU of the new interface\n`name`                  | string  | kernel assigned    | The name of the interface inside the instance\n`parent`                | string  | -                  | The name of the host device (required)\n`vlan`                  | integer | -                  | The VLAN ID to attach to\n```\n\n----------------------------------------\n\nTITLE: Attaching Managed Network to Incus Instance\nDESCRIPTION: Command to attach a managed network to an Incus instance with a specified device name\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/networks.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus network attach <network_name> <instance_name> <device_name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Restricted Project in Incus\nDESCRIPTION: This command creates a project called 'my-restricted-project' that blocks access to security-sensitive features but allows backups by setting the restricted configuration option to true and restricted.backups to allow.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_create.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus project create my-restricted-project --config restricted=true --config restricted.backups=allow\n```\n\n----------------------------------------\n\nTITLE: Unix Character Block Device Settings\nDESCRIPTION: Configuration options for Unix character block devices including permissions and device numbering.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_3\n\nLANGUAGE: config\nCODE:\n```\ngid devices-unix-char-block\nmajor devices-unix-char-block\nminor devices-unix-char-block\nmode devices-unix-char-block\npath devices-unix-char-block\nrequired devices-unix-char-block\nsource devices-unix-char-block\nuid devices-unix-char-block\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Incus Instance with OVN Network\nDESCRIPTION: Commands to create an Incus instance using the Ubuntu 22.04 image and configure it to use the OVN network.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus init images:ubuntu/22.04 c1\nincus config device override c1 eth0 network=ovntest\nincus start c1\n```\n\n----------------------------------------\n\nTITLE: Configuring unix-char Device Options in YAML\nDESCRIPTION: This snippet shows the configuration options available for unix-char devices in Incus containers. It includes options for specifying the source, path, major/minor numbers, uid, gid, mode, and required.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_unix_char.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsource: <string>                       # Path on the host\npath: <string>                         # Path inside the instance\nmajor: <int>                           # Device major number\nminor: <int>                           # Device minor number\nuid: <int>                             # UID of the device owner in the instance\ngid: <int>                             # GID of the device owner in the instance\nmode: <int>                            # Mode of the device in the instance\nrequired: <boolean>                    # Whether or not this device is required (will bail on failure)\n```\n\n----------------------------------------\n\nTITLE: Listing Configured Remote Servers in Incus\nDESCRIPTION: Command to display all remote image servers configured in Incus. This shows both simple streams format servers (pure image servers) and Incus format servers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus remote list\n```\n\n----------------------------------------\n\nTITLE: Migrating LXC Containers with Bandwidth Limitation\nDESCRIPTION: Command to migrate all LXC containers to Incus while limiting the rsync bandwidth to 5000 KB/s. Useful for controlling network usage during migration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo lxc-to-incus --all --rsync-args --bwlimit=5000\n```\n\n----------------------------------------\n\nTITLE: Configuring Incus for LINSTOR Communication\nDESCRIPTION: Set the LINSTOR controller connection URL in Incus configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nincus config set storage.linstor.controller_connection=http://<server_1>:3370\n```\n\n----------------------------------------\n\nTITLE: Enabling ZFS Trimming Support\nDESCRIPTION: Commands to enable trimming support on ZFS pools version 0.8 or later. This increases SSD lifetime and allows freeing space on loop-backed ZFS pools.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_zfs.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nzpool upgrade ZPOOL-NAME\nzpool set autotrim=on ZPOOL-NAME\nzpool trim ZPOOL-NAME\n```\n\n----------------------------------------\n\nTITLE: Adding Trust Token on Server\nDESCRIPTION: Command to generate a trust token for client authentication on the Incus server.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_expose.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config trust add <client_name>\n```\n\n----------------------------------------\n\nTITLE: Creating a Delete Confirmation Alias in Incus CLI\nDESCRIPTION: Shows how to create an alias that prompts for confirmation every time the delete command is used, helping to prevent accidental deletion of instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nincus alias add delete \"delete -i\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Project with Shared Images in Incus\nDESCRIPTION: This command creates a project named 'my-project-shared-images' that isolates instances but allows access to the default project's images by setting the features.images configuration option to false.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_create.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus project create my-project-shared-images --config features.images=false\n```\n\n----------------------------------------\n\nTITLE: Configuring IPv6 Forwarding and Proxy NDP for Routed NIC Parent Interface\nDESCRIPTION: Sysctl commands to enable IPv6 packet forwarding and proxy Neighbor Discovery Protocol (NDP) for a routed NIC with IPv6 addresses. These configurations are required to allow the instance to join the parent interface's network at layer 2.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnet.ipv6.conf.all.forwarding=1\nnet.ipv6.conf.<parent>.forwarding=1\nnet.ipv6.conf.all.proxy_ndp=1\nnet.ipv6.conf.<parent>.proxy_ndp=1\n```\n\n----------------------------------------\n\nTITLE: Creating a Storage Bucket in Incus\nDESCRIPTION: Creates a new storage bucket in a specified storage pool. This command can be used with additional configuration options and can target specific cluster members.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_buckets.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket create <pool_name> <bucket_name> [configuration_options...]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket create <pool_name> <bucket_name> --target=<cluster_member> [configuration_options...]\n```\n\n----------------------------------------\n\nTITLE: Setting a Specific Configuration Option for a Project in Incus\nDESCRIPTION: This command sets a limit of 5 containers for the project 'my-project' using the incus project set command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_create.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus project set my-project limits.containers=5\n```\n\n----------------------------------------\n\nTITLE: Configuring Migration Options for Incus Instances (YAML)\nDESCRIPTION: Specifies migration-related configuration options for Incus instances, including incremental memory transfer settings and stateful migration options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nmigration.incremental.memory:\n  condition: \"container\"\n  defaultdesc: \"`false`\"\n  liveupdate: \"yes\"\n  shortdesc: \"Whether to use incremental memory transfer\"\n  type: \"bool\"\n\nmigration.incremental.memory.goal:\n  condition: \"container\"\n  defaultdesc: \"`70`\"\n  liveupdate: \"yes\"\n  shortdesc: \"Percentage of memory to have in sync before stopping the instance\"\n  type: \"integer\"\n\nmigration.incremental.memory.iterations:\n  condition: \"container\"\n  defaultdesc: \"`10`\"\n  liveupdate: \"yes\"\n  shortdesc: \"Maximum number of transfer operations to go through before stopping the instance\"\n  type: \"integer\"\n\nmigration.stateful:\n  defaultdesc: \"`false`\"\n  liveupdate: \"no\"\n  shortdesc: \"Whether to allow for stateful stop/start and snapshots\"\n  type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: OVN Network Configuration Table\nDESCRIPTION: Detailed configuration table showing all available options for OVN network setup, including keys, types, conditions and default values\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_ovn.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nKey                                  | Type      | Condition             | Default                   | Description\n:--                                  | :--       | :--                   | :--                       | :--\n`network`                            | string    | -                     | -                         | Uplink network to use for external network access or `none` to keep isolated\n`bridge.external_interfaces`         | string    | -                     | -                         | Comma-separated list of unconfigured network interfaces to include in the bridge\n`bridge.hwaddr`                      | string    | -                     | -                         | MAC address for the bridge\n`bridge.mtu`                         | integer   | -                     | `1442`                    | Bridge MTU (default allows host to host Geneve tunnels)\n```\n\n----------------------------------------\n\nTITLE: VM and VSOCK Configuration in Incus\nDESCRIPTION: Configuration options for VM definition and VSOCK in Incus. These control virtual machine migration between versions and maintain VSOCK ID assignments for instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_36\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.vm.definition instance-volatile\n:shortdesc: \"QEMU VM definition name (used for migration between versions)\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.vsock_id instance-volatile\n:shortdesc: \"Instance `vsock ID` used as of last start\"\n:type: \"string\"\n\n```\n\n----------------------------------------\n\nTITLE: Verifying LINSTOR Storage Pools\nDESCRIPTION: List and verify the created LINSTOR storage pools, showing their capacities and states.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_10\n\nLANGUAGE: terminal\nCODE:\n```\n╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n┊ StoragePool          ┊ Node     ┊ Driver   ┊ PoolName                    ┊ FreeCapacity ┊ TotalCapacity ┊ CanSnapshots ┊ State ┊ SharedName                    ┊\n╞════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╡\n┊ DfltDisklessStorPool ┊ server01 ┊ DISKLESS ┊                             ┊              ┊               ┊ False        ┊ Ok    ┊ server01;DfltDisklessStorPool ┊\n┊ DfltDisklessStorPool ┊ server02 ┊ DISKLESS ┊                             ┊              ┊               ┊ False        ┊ Ok    ┊ server02;DfltDisklessStorPool ┊\n┊ DfltDisklessStorPool ┊ server03 ┊ DISKLESS ┊                             ┊              ┊               ┊ False        ┊ Ok    ┊ server03;DfltDisklessStorPool ┊\n┊ nvme_pool            ┊ server01 ┊ LVM_THIN ┊ linstor_nvme_pool/nvme_pool ┊    49.89 GiB ┊     49.89 GiB ┊ True         ┊ Ok    ┊ server01;nvme_pool            ┊\n┊ nvme_pool            ┊ server02 ┊ LVM_THIN ┊ linstor_nvme_pool/nvme_pool ┊    49.89 GiB ┊     49.89 GiB ┊ True         ┊ Ok    ┊ server02;nvme_pool            ┊\n┊ nvme_pool            ┊ server03 ┊ LVM_THIN ┊ linstor_nvme_pool/nvme_pool ┊    49.89 GiB ┊     49.89 GiB ┊ True         ┊ Ok    ┊ server03;nvme_pool            ┊\n╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n```\n\n----------------------------------------\n\nTITLE: Displaying State and Usage Information for a Cluster Member\nDESCRIPTION: This command shows state and usage information for a specific cluster member.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster info <member_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Time Snapshot Schedule in Incus\nDESCRIPTION: Command to set up automatic snapshots at a specific time using cron syntax. This example configures snapshots to be taken every day at 6 am.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <instance_name> snapshots.schedule \"0 6 * * *\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Incus on Alpine Linux\nDESCRIPTION: This snippet shows the commands to install the necessary dependencies for building and running Incus on Alpine Linux, including development resources and runtime dependencies.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\napk add acl-dev autoconf automake eudev-dev gettext-dev go intltool libcap-dev libtool libuv-dev linux-headers lz4-dev tcl-dev sqlite-dev lxc-dev make xz\n\napk add acl attr ca-certificates cgmanager dbus dnsmasq lxc libintl iproute2 iptables netcat-openbsd rsync squashfs-tools shadow-uidmap tar xz\n\napk add qemu-system-x86_64 qemu-chardev-spice qemu-hw-usb-redirect qemu-hw-display-virtio-vga qemu-img qemu-ui-spice-core ovmf sgdisk util-linux-misc virtiofsd\n\nexport CGO_LDFLAGS=\"$CGO_LDFLAGS -L/usr/lib -lintl\"\nexport CGO_CPPFLAGS=\"-I/usr/include\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Uplink Network for Incus Cluster\nDESCRIPTION: Series of commands to create and configure the uplink network for an Incus cluster using OVN.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus network create UPLINK --type=physical parent=<uplink_interface> --target=<machine_name_1>\nincus network create UPLINK --type=physical parent=<uplink_interface> --target=<machine_name_2>\nincus network create UPLINK --type=physical parent=<uplink_interface> --target=<machine_name_3>\nincus network create UPLINK --type=physical parent=<uplink_interface> --target=<machine_name_4>\nincus network create UPLINK --type=physical \\\n   ipv4.ovn.ranges=<IP_range> \\\n   ipv6.ovn.ranges=<IP_range> \\\n   ipv4.gateway=<gateway> \\\n   ipv6.gateway=<gateway> \\\n   dns.nameservers=<name_server>\n```\n\n----------------------------------------\n\nTITLE: Adding a Simple Streams Server as Remote in Incus\nDESCRIPTION: Command to add a simple streams server as a remote image source in Incus. The URL must use HTTPS and the protocol must be specified as simplestreams.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus remote add <remote_name> <URL> --protocol=simplestreams\n```\n\n----------------------------------------\n\nTITLE: Configuring iptables for Docker and Incus Coexistence\nDESCRIPTION: Commands to add iptables rules that explicitly allow egress network traffic from the Incus bridge when Docker is also running on the system.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\niptables -I DOCKER-USER -i <network_bridge> -j ACCEPT\niptables -I DOCKER-USER -o <network_bridge> -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n```\n\n----------------------------------------\n\nTITLE: Listing Incus Cluster Database Members\nDESCRIPTION: Command to list the database members of an Incus cluster. This is used to identify surviving database members for cluster recovery.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo incus admin cluster list-database\n```\n\n----------------------------------------\n\nTITLE: Configuring Static IP for an Instance NIC in Incus\nDESCRIPTION: This command sets a static IP address for an instance's network interface card (NIC) in Incus. It allows specifying both IPv4 and IPv6 addresses.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_proxy.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config device set <instance_name> <nic_name> ipv4.address=<ipv4_address> ipv6.address=<ipv6_address>\n```\n\n----------------------------------------\n\nTITLE: Configuring lvmlockd in LVM Configuration File\nDESCRIPTION: To enable lvmlockd for clustered LVM usage, you need to set the use_lvmlockd option in the LVM configuration file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_lvm.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nuse_lvmlockd = 1\n```\n\n----------------------------------------\n\nTITLE: Copying a Snapshot to a New Storage Volume in Incus\nDESCRIPTION: This command copies a snapshot of a storage volume to create a new custom storage volume in Incus, allowing for copying between different pools or even remote storage pools.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume copy <source_pool_name>/<source_volume_name>/<source_snapshot_name> <target_pool_name>/<target_volume_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Static Network with cloud-init in YAML\nDESCRIPTION: YAML configuration for setting up a static IP address, gateway, and custom DNS server on eth1 interface using cloud-init network-config in Netplan format (version 2).\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.network-config: |\n    version: 2\n    ethernets:\n      eth1:\n        addresses:\n          - 10.10.101.20/24\n        gateway4: 10.10.101.1\n        nameservers:\n          addresses:\n            - 10.10.10.254\n```\n\n----------------------------------------\n\nTITLE: OpenFGA Authorization Model Definition for Incus\nDESCRIPTION: The OpenFGA authorization model defines the relationships between API resources and users or groups. This model is used by Incus to determine access permissions when OpenFGA authorization is enabled.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/authorization.md#2025-04-14_snippet_0\n\nLANGUAGE: none\nCODE:\n```\nmodel\\n  schema 1.1\\n\\ntype user\\n\\ntype group\\n  relations\\n    define member: [user, group#member]\\n\\ntype server\\n  relations\\n    define admin: [user, group#member]\\n    define operator: [user, group#member, server#admin]\\n    define can_edit: [user, group#member, server#operator]\\n    define can_create_storage_pools: [user, group#member, server#can_edit]\\n    define can_create_projects: [user, group#member, server#can_edit]\\n    define can_create_certificates: [user, group#member, server#can_edit]\\n    define can_view: [user, group#member, server#can_edit]\\n\\ntype certificate\\n  relations\\n    define can_edit: [user, group#member, server#can_edit]\\n    define can_view: [user, group#member, certificate#can_edit, server#can_view]\\n\\ntype storage_pool\\n  relations\\n    define can_edit: [user, group#member, server#can_edit]\\n    define can_use: [user, group#member, storage_pool#can_edit, server#can_view]\\n\\ntype project\\n  relations\\n    define manager: [user, group#member, server#admin]\\n    define operator: [user, group#member, project#manager, server#operator]\\n    define can_edit: [user, group#member, project#operator]\\n    define can_create_instances: [user, group#member, project#can_edit]\\n    define can_create_images: [user, group#member, project#can_edit]\\n    define can_create_networks: [user, group#member, project#can_edit]\\n    define can_create_network_acls: [user, group#member, project#can_edit]\\n    define can_create_network_forwards: [user, group#member, project#can_edit]\\n    define can_create_profiles: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, project#can_edit, server#can_view]\\n\\ntype instance\\n  relations\\n    define can_edit: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, instance#can_edit, project#can_view]\\n    define can_manage_state: [user, group#member, instance#can_edit]\\n    define can_exec: [user, group#member, instance#can_manage_state]\\n    define can_control_console: [user, group#member, instance#can_manage_state]\\n    define can_view_metrics: [user, group#member, instance#can_view]\\n    define can_push_file: [user, group#member, instance#can_manage_state]\\n    define can_pull_file: [user, group#member, instance#can_view]\\n    define can_view_backups: [user, group#member, instance#can_view]\\n    define can_create_backups: [user, group#member, instance#can_edit]\\n    define can_snapshots: [user, group#member, instance#can_edit]\\n\\ntype image\\n  relations\\n    define can_edit: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, image#can_edit, project#can_view]\\n\\ntype network\\n  relations\\n    define can_edit: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, network#can_edit, project#can_view]\\n\\ntype network_acl\\n  relations\\n    define can_edit: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, network_acl#can_edit, project#can_view]\\n\\ntype network_forward\\n  relations\\n    define can_edit: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, network_forward#can_edit, project#can_view]\\n\\ntype profile\\n  relations\\n    define can_edit: [user, group#member, project#can_edit]\\n    define can_view: [user, group#member, profile#can_edit, project#can_view]\n```\n\n----------------------------------------\n\nTITLE: Adding a Backend to an Incus Network Load Balancer\nDESCRIPTION: Command to add a backend specification to an existing network load balancer. It defines target addresses and optional ports for traffic forwarding.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_load_balancers.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network load-balancer backend add <network_name> <listen_address> <backend_name> <target_address> [<target_ports>]\n```\n\n----------------------------------------\n\nTITLE: Creating Dual-Stack DNS Records in Incus\nDESCRIPTION: Example commands showing how to create DNS records for a dual-stack web server with both IPv4 (A) and IPv6 (AAAA) records.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus network zone record entry add <network_zone> <record_name> A 1.2.3.4\nincus network zone record entry add <network_zone> <record_name> AAAA 1234::1234\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Incus on Debian and Ubuntu\nDESCRIPTION: This snippet shows the commands to install the necessary build and runtime dependencies for Incus on Debian and Ubuntu-based systems. It includes optional storage drivers and test suite dependencies.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update\nsudo apt install acl attr autoconf automake dnsmasq-base git golang-go libacl1-dev libcap-dev liblxc1 lxc-dev libsqlite3-dev libtool libudev-dev liblz4-dev libuv1-dev make pkg-config rsync squashfs-tools tar tcl xz-utils ebtables\n\nsudo apt install btrfs-progs\nsudo apt install ceph-common\nsudo apt install lvm2 thin-provisioning-tools\nsudo apt install zfsutils-linux\n\nsudo apt install busybox-static curl gettext jq sqlite3 socat bind9-dnsutils\n```\n\n----------------------------------------\n\nTITLE: Installing Incus on Debian-based Systems\nDESCRIPTION: These commands show how to install Incus on Debian systems, including options for native packages and backports.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\napt install incus\napt install incus-base\napt install incus-extra\napt install incus/bookworm-backports\napt install incus-base/bookworm-backports\napt install incus-extra/bookworm-backports\n```\n\n----------------------------------------\n\nTITLE: Viewing Storage Volumes in Incus\nDESCRIPTION: Commands to list all available storage volumes in a pool, show detailed configuration information about a specific volume, and display state information for a volume.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_volumes.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume list <pool_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume show <pool_name> [<volume_type>/]<volume_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume info <pool_name> [<volume_type>/]<volume_name>\n```\n\n----------------------------------------\n\nTITLE: Enabling and Starting Incus DNS Configuration Service\nDESCRIPTION: Commands to enable and start the systemd service for persistent Incus DNS configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl daemon-reload\nsudo systemctl enable --now incus-dns-<network_bridge>\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Network Peer Routing - Incus CLI\nDESCRIPTION: Command to create remote peer routing through a network integration in Incus. Requires specifying the integration name and remote type flag.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_peers.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus network peer create <network1> <peering_name> <integration name> [configuration_options] --type=remote\n```\n\n----------------------------------------\n\nTITLE: Adding Bridge Network Device to Incus Instance\nDESCRIPTION: Command to add a pre-existing Linux bridge network device to an Incus instance\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/networks.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> eth0 nic nictype=bridged parent=br0\n```\n\n----------------------------------------\n\nTITLE: Removing a Raft Node from Incus Cluster\nDESCRIPTION: Command to manually remove a Raft node from an Incus cluster. This is used when a node needs to be forcibly removed from the Raft configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus admin cluster remove-raft-node <address>\n```\n\n----------------------------------------\n\nTITLE: Defining GPU Device Options for Physical GPUs in Incus\nDESCRIPTION: This YAML snippet outlines the device options available for physical GPU devices in Incus. It includes options for specifying the GPU's ID, PCI address, vendor ID, and other parameters.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_gpu.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nKey         | Type      | Default           | Description\n:--         | :--       | :--               | :--\n`gid`       | int       | `0`               | GID of the device owner in the instance (container only)\n`id`        | string    | -                 | The DRM card ID of the GPU device\n`mode`      | int       | `0660`            | Mode of the device in the instance (container only)\n`pci`       | string    | -                 | The PCI address of the GPU device\n`productid` | string    | -                 | The product ID of the GPU device\n`uid`       | int       | `0`               | UID of the device owner in the instance (container only)\n`vendorid`  | string    | -                 | The vendor ID of the GPU device\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Storage Volume in Incus\nDESCRIPTION: Command to create a custom storage volume of type 'block' or 'filesystem' in a storage pool. Additional flags can be used to specify the type, target cluster member, or import an ISO.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_volumes.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume create <pool_name> <volume_name> [configuration_options...]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume create <pool_name> <volume_name> --type=block [configuration_options...]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume create <pool_name> <volume_name> --target=<cluster_member> [configuration_options...]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume import <pool_name> <iso_path> <volume_name> --type=iso\n```\n\n----------------------------------------\n\nTITLE: Migrating Multiple LXC Containers with Custom Storage\nDESCRIPTION: Command to migrate multiple specific LXC containers (lxc1 and lxc2) to Incus using a custom storage pool. Containers must be stopped before migration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo lxc-to-incus --containers lxc1,lxc2 --storage my-storage\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Server for Physical Network in Incus\nDESCRIPTION: This command sets the DNS nameserver for a network named UPLINK to 8.8.8.8 using the 'incus network set' command. It demonstrates how to configure a single setting for an existing network in Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_configure.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network set UPLINK dns.nameservers=8.8.8.8\n```\n\n----------------------------------------\n\nTITLE: Example systemd-resolved Configuration for Incus Bridge\nDESCRIPTION: Example commands to configure systemd-resolved for an Incus bridge named 'incusbr0' with specific DNS settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nresolvectl dns incusbr0 192.0.2.10\nresolvectl domain incusbr0 '~incus'\nresolvectl dnssec incusbr0 off\nresolvectl dnsovertls incusbr0 off\n```\n\n----------------------------------------\n\nTITLE: Configuring SR-IOV for OVN NIC in Incus\nDESCRIPTION: This code snippet demonstrates the setup process for SR-IOV hardware acceleration with an OVN NIC in Incus. It includes steps to activate virtual functions, enable switchdev mode, and configure Open vSwitch for hardware offload.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho 4 > /sys/bus/pci/devices/0000:09:00.0/sriov_numvfs\nfor i in $(lspci -nnn | grep \"Virtual Function\" | cut -d' ' -f1); do echo 0000:$i > /sys/bus/pci/drivers/mlx5_core/unbind; done\ndevlink dev eswitch set pci/0000:09:00.0 mode switchdev\nethtool -K enp9s0f0np0 hw-tc-offload on\nfor i in $(lspci -nnn | grep \"Virtual Function\" | cut -d' ' -f1); do echo 0000:$i > /sys/bus/pci/drivers/mlx5_core/bind; done\n```\n\n----------------------------------------\n\nTITLE: Server Miscellaneous Configuration Options\nDESCRIPTION: Various server configuration options including authorization, backup compression, LXCFS settings, networking, and storage configurations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_95\n\nLANGUAGE: yaml\nCODE:\n```\nauthorization.scriptlet: \"\"\nbackups.compression_algorithm: gzip\ninstances.lxcfs.per_instance: false\ninstances.nic.host_name: random\nnetwork.ovn.integration_bridge: br-int\nstorage.backups_volume: POOL/VOLUME\n```\n\n----------------------------------------\n\nTITLE: Building Incus from Release Tarball\nDESCRIPTION: This snippet demonstrates how to build Incus from a release tarball, which includes a complete dependency tree and local copies of required libraries.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\ntar zxvf incus-6.0.0.tar.gz\ncd incus-6.0.0\nmake deps\n\n# Set environment variables as instructed by make deps output\n\nmake\n```\n\n----------------------------------------\n\nTITLE: Installing Incus on openSUSE\nDESCRIPTION: This command installs Incus on openSUSE using the zypper package manager.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nzypper in incus\n```\n\n----------------------------------------\n\nTITLE: Configuring SR-IOV Network Options in YAML\nDESCRIPTION: This YAML snippet outlines the configuration options available for the 'sriov' network type in Incus. It includes keys for MTU, parent interface, VLAN ID, and user-defined metadata.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_sriov.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nKey                             | Type      | Condition             | Default                   | Description\n:--                             | :--       | :--                   | :--                       | :--\n`mtu`                           | integer   | -                     | -                         | The MTU of the new interface\n`parent`                        | string    | -                     | -                         | Parent interface to create `sriov` NICs on\n`vlan`                          | integer   | -                     | -                         | The VLAN ID to attach to\n`user.*`                        | string    | -                     | -                         | User-provided free-form key/value pairs\n```\n\n----------------------------------------\n\nTITLE: Adding Ceph RBD Disk Device\nDESCRIPTION: Command to add an externally managed Ceph RBD as a disk device to an Incus instance, requiring pool name, volume name, and Ceph credentials.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk source=ceph:<pool_name>/<volume_name> ceph.user_name=<user_name> ceph.cluster_name=<cluster_name> [path=<path_in_instance>]\n```\n\n----------------------------------------\n\nTITLE: Creating Container with Specific Image Fingerprint\nDESCRIPTION: Example command for creating a benchmark container using a local image identified by its fingerprint. This is useful when testing with specific cached images.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark init 2d21da400963\n```\n\n----------------------------------------\n\nTITLE: Configuring Incus Server for Full API Exposure\nDESCRIPTION: Set the core.https_address configuration option to expose the full Incus API on port 8443.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.https_address \":8443\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Starting Benchmark Containers\nDESCRIPTION: Command to both create and start containers in a single operation. The launch action combines the init and start steps for convenience.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark launch --count 10 <image>\n```\n\n----------------------------------------\n\nTITLE: Querying Raw Metrics Data in Incus\nDESCRIPTION: Use the 'incus query' command to fetch raw metrics data from the /1.0/metrics endpoint. This snippet shows sample output including CPU, disk, and other metrics for containers and virtual machines.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/metrics\n```\n\n----------------------------------------\n\nTITLE: Converting VM Disk Images with virt-v2v\nDESCRIPTION: Commands for converting disk images from foreign hypervisors to raw images suitable for incus-migrate, including the integration of virtio-scsi drivers for Windows VMs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/import_machines_to_instances.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Example 1. Convert a vmdk disk image to a raw image suitable for incus-migrate\nsudo virt-v2v --block-driver virtio-scsi -o local -of raw -os ./os -i vmx ./test-vm.vmx\n# Example 2. Convert a QEMU/KVM qcow2 image and integrate virtio-scsi driver\nsudo virt-v2v --block-driver virtio-scsi -o local -of raw -os ./os -if qcow2 -i disk test-vm-disk.qcow2\n```\n\n----------------------------------------\n\nTITLE: Configuring Package Upgrades with cloud-init in YAML\nDESCRIPTION: YAML configuration example for enabling automatic package upgrades on first boot of an Incus instance using cloud-init user-data configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.user-data: |\n    #cloud-config\n    package_upgrade: true\n```\n\n----------------------------------------\n\nTITLE: Persistent systemd Unit File for Incus DNS Configuration\nDESCRIPTION: Content of a systemd unit file to automate DNS configuration for an Incus network bridge on system start.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_4\n\nLANGUAGE: ini\nCODE:\n```\n[Unit]\nDescription=Incus per-link DNS configuration for <network_bridge>\nBindsTo=sys-subsystem-net-devices-<network_bridge>.device\nAfter=sys-subsystem-net-devices-<network_bridge>.device\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/resolvectl dns <network_bridge> <dns_address>\nExecStart=/usr/bin/resolvectl domain <network_bridge> ~<dns_domain>\nExecStart=/usr/bin/resolvectl dnssec <network_bridge> off\nExecStart=/usr/bin/resolvectl dnsovertls <network_bridge> off\nExecStopPost=/usr/bin/resolvectl revert <network_bridge>\nRemainAfterExit=yes\n\n[Install]\nWantedBy=sys-subsystem-net-devices-<network_bridge>.device\n```\n\n----------------------------------------\n\nTITLE: Adding DNS Record Entry in Incus Network Zone\nDESCRIPTION: Command syntax for adding a DNS record entry to an Incus network zone. Allows specification of record name, type, value, and optional TTL parameter.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus network zone record entry add <network_zone> <record_name> <type> <value> [--ttl <TTL>]\n```\n\n----------------------------------------\n\nTITLE: OpenID Connect Authentication Configuration\nDESCRIPTION: Configuration options for OpenID Connect (OIDC) authentication including client ID, issuer URL, and claims settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_96\n\nLANGUAGE: yaml\nCODE:\n```\noidc.audience: \"\"\noidc.claim: \"\"\noidc.client.id: \"\"\noidc.issuer: \"\"\noidc.scopes: \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Incus on Fedora\nDESCRIPTION: This command installs Incus on Fedora using the dnf package manager.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndnf install incus\n```\n\n----------------------------------------\n\nTITLE: Monitoring Incus Activity\nDESCRIPTION: Command to monitor Incus activities with human-readable output format\nSOURCE: https://github.com/lxc/incus/blob/main/doc/faq.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus monitor --pretty\n```\n\n----------------------------------------\n\nTITLE: Adding Port Specification to Network Forward in Incus\nDESCRIPTION: Command to add a port specification to an existing network forward. It allows forwarding traffic from specific ports on the listen address to specific ports on the target address.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_forwards.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network forward port add <network_name> <listen_address> <protocol> <listen_ports> <target_address> [<target_ports>]\n```\n\n----------------------------------------\n\nTITLE: Basic Metadata Configuration\nDESCRIPTION: Example of a metadata.yaml file showing basic image properties including architecture, creation date, and properties\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/image_format.md#2025-04-14_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\narchitecture: x86_64\ncreation_date: 1424284563\nproperties:\n  description: Ubuntu 22.04 LTS Intel 64bit\n  os: Ubuntu\n  release: jammy 22.04\ntemplates:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Configuration During Instance Creation\nDESCRIPTION: Command to set initial volume configuration when creating a new instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus init <image> <instance_name> --device <device_name>,initial.zfs.block_mode=true\n```\n\n----------------------------------------\n\nTITLE: Creating a Physical InfiniBand Device in Incus\nDESCRIPTION: This command adds a physical InfiniBand device to an Incus instance. It passes a physical device from the host through to the instance, making it disappear from the host and appear in the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_infiniband.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> infiniband nictype=physical parent=<device>\n```\n\n----------------------------------------\n\nTITLE: Adding CephFS Disk Device\nDESCRIPTION: Command to add an externally managed Ceph file system as a disk device to an Incus instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk source=cephfs:<fs_name>/<path> ceph.user_name=<user_name> ceph.cluster_name=<cluster_name> path=<path_in_instance>\n```\n\n----------------------------------------\n\nTITLE: Creating Containers with Image Alias\nDESCRIPTION: Example command for creating 10 benchmark containers using an image identified by its alias 'ubuntu'. This requires the alias to be previously assigned to an image.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark init --count 10 ubuntu\n```\n\n----------------------------------------\n\nTITLE: Adding a Disk Device Example via CLI in Incus\nDESCRIPTION: Example command to add a disk device that mounts a host directory at /share/c1 to the path /opt in the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add my-container disk-storage-device disk source=/share/c1 path=/opt\n```\n\n----------------------------------------\n\nTITLE: Defining GPU Device Options for MIG GPUs in Incus\nDESCRIPTION: This YAML snippet outlines the device options for MIG (Multi-Instance GPU) types in Incus. It includes options for specifying the GPU's ID, MIG compute instance, GPU instance, and other identifiers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_gpu.md#2025-04-14_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nKey         | Type      | Default           | Description\n:--         | :--       | :--               | :--\n`id`        | string    | -                 | The DRM card ID of the GPU device\n`mig.ci`    | int       | -                 | Existing MIG compute instance ID\n`mig.gi`    | int       | -                 | Existing MIG GPU instance ID\n`mig.uuid`  | string    | -                 | Existing MIG device UUID (`MIG-` prefix can be omitted)\n`pci`       | string    | -                 | The PCI address of the GPU device\n`productid` | string    | -                 | The product ID of the GPU device\n`vendorid`  | string    | -                 | The vendor ID of the GPU device\n```\n\n----------------------------------------\n\nTITLE: Setting Member-Specific Cluster Configuration\nDESCRIPTION: This command sets a configuration option specific to a single cluster member.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster set server1 scheduler.instance manual\n```\n\n----------------------------------------\n\nTITLE: Installing LINSTOR Controller and Client\nDESCRIPTION: Install the LINSTOR controller and client packages on the first machine (server01).\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install linstor-controller linstor-client python3-setuptools\n```\n\n----------------------------------------\n\nTITLE: Manage Profile Application Commands\nDESCRIPTION: Commands for applying profiles to instances and launching instances with specific profiles.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/profiles.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus profile add <instance_name> <profile_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus launch <image> <instance_name> --profile <profile> --profile <profile> ...\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus profile remove <instance_name> <profile_name>\n```\n\n----------------------------------------\n\nTITLE: Setting HTTPS Port for Incus Server\nDESCRIPTION: Command to configure Incus server to listen on port 8443 for network access.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_expose.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.https_address :8443\n```\n\n----------------------------------------\n\nTITLE: Starting Benchmark Containers\nDESCRIPTION: Command to start the previously created benchmark containers. This is used after the 'init' action to begin testing container start performance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark start\n```\n\n----------------------------------------\n\nTITLE: Setting Raw LXC Configuration to Change Init System\nDESCRIPTION: Command to set a raw LXC configuration parameter that changes the init system of a container from systemd to /bin/bash, useful for troubleshooting boot issues.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_troubleshoot.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus config set systemd raw.lxc 'lxc.init.cmd = /bin/bash'\n```\n\n----------------------------------------\n\nTITLE: Configuring Incus Instances with Resource Limits\nDESCRIPTION: Commands for launching and configuring Incus instances with specific resource limits, such as CPU and memory constraints.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/tutorial/first_steps.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/22.04 limited --config limits.cpu=1 --config limits.memory=192MiB\nincus config show limited\nincus config show first\nincus config set limited limits.memory=128MiB\n```\n\n----------------------------------------\n\nTITLE: Deleting Incus Images\nDESCRIPTION: Command to delete a local copy of an image. This won't affect running instances using the image but removes it from local storage.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus image delete <image_ID>\n```\n\n----------------------------------------\n\nTITLE: Examining Container Environment After Init System Change\nDESCRIPTION: Commands showing how to inspect a container's environment after changing the init system, revealing incomplete filesystem setup that caused the original systemd issues.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_troubleshoot.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus exec systemd -- bash\n\n[root@systemd ~]# ls\n[root@systemd ~]# mount\nmount: failed to read mtab: No such file or directory\n[root@systemd ~]# cd /\n[root@systemd /]# ls /proc/\nsys\n[root@systemd /]# exit\n```\n\n----------------------------------------\n\nTITLE: Editing Snapshot Properties in Incus\nDESCRIPTION: Command to edit the configuration of a snapshot, primarily used for changing the expiry date. Note that most other configuration changes to snapshots are silently ignored.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus config edit <instance_name>/<snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Enabling VDPA Module and Checking VDPA Devices in Incus\nDESCRIPTION: This code snippet demonstrates how to enable the vhost_vdpa module and check for available VDPA management devices in Incus. This is a prerequisite for using VDPA hardware acceleration with OVN NICs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmodprobe vhost_vdpa && vdpa mgmtdev show\n```\n\n----------------------------------------\n\nTITLE: Instantiating Storage Pool Cluster-wide\nDESCRIPTION: Command to create and instantiate the defined storage pool across all cluster members after individual configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_storage.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus storage create data zfs\n```\n\n----------------------------------------\n\nTITLE: Adding Cloud-Init Configuration Disk\nDESCRIPTION: Command to add a cloud-init configuration ISO disk device to a virtual machine.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk source=cloud-init:config\n```\n\n----------------------------------------\n\nTITLE: Configuring Instance Boot Options in Incus (YAML)\nDESCRIPTION: Specifies various boot-related configuration options for Incus instances, including auto-restart, autostart, shutdown behavior, and boot priorities.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nboot.autorestart:\n  liveupdate: \"no\"\n  shortdesc: \"Whether to automatically restart an instance on unexpected exit\"\n  type: \"bool\"\n\nboot.autostart:\n  liveupdate: \"no\"\n  shortdesc: \"Whether to always start the instance when the daemon starts\"\n  type: \"bool\"\n\nboot.autostart.delay:\n  defaultdesc: \"0\"\n  liveupdate: \"no\"\n  shortdesc: \"Delay after starting the instance\"\n  type: \"integer\"\n\nboot.autostart.priority:\n  defaultdesc: \"0\"\n  liveupdate: \"no\"\n  shortdesc: \"What order to start the instances in\"\n  type: \"integer\"\n\nboot.host_shutdown_action:\n  defaultdesc: \"stop\"\n  liveupdate: \"yes\"\n  shortdesc: \"What action to take on the instance when the host is shut down\"\n  type: \"string\"\n\nboot.host_shutdown_timeout:\n  defaultdesc: \"30\"\n  liveupdate: \"yes\"\n  shortdesc: \"How long to wait for the instance to shut down\"\n  type: \"integer\"\n\nboot.stop.priority:\n  defaultdesc: \"0\"\n  liveupdate: \"no\"\n  shortdesc: \"What order to shut down the instances in\"\n  type: \"integer\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN Integration Bridge\nDESCRIPTION: Sets up the Open vSwitch external IDs for OVN remote, encapsulation type, and IP.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo ovs-vsctl set open_vswitch . \\\n   external_ids:ovn-remote=unix:/run/ovn/ovnsb_db.sock \\\n   external_ids:ovn-encap-type=geneve \\\n   external_ids:ovn-encap-ip=127.0.0.1\n```\n\n----------------------------------------\n\nTITLE: Restoring an Evacuated Cluster Member\nDESCRIPTION: This command restores an evacuated cluster member to normal operation, moving instances back if applicable.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster restore <member_name>\n```\n\n----------------------------------------\n\nTITLE: Instance Rebalancing and UUID Configuration in Incus\nDESCRIPTION: Configuration options for instance rebalancing and UUID tracking in Incus. These control automatic migration and maintain unique identifiers for instances across servers and projects.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_35\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.rebalance.last_move instance-volatile\n:shortdesc: \"Timestamp of last move by automatic live-migration\"\n:type: \"integer\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.uuid instance-volatile\n:shortdesc: \"Instance UUID\"\n:type: \"string\"\nThe instance UUID is globally unique across all servers and projects.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.uuid.generation instance-volatile\n:shortdesc: \"Instance generation UUID\"\n:type: \"string\"\nThe instance generation UUID changes whenever the instance's place in time moves backwards.\nIt is globally unique across all servers and projects.\n```\n\n----------------------------------------\n\nTITLE: Accessing REST API via Local Socket in Bash\nDESCRIPTION: This command uses curl to access the Incus REST API through a local Unix socket, retrieving basic information and formatting the JSON response with jq for readability.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/debugging.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --unix-socket /var/lib/incus/unix.socket incus/1.0 | jq .\n```\n\n----------------------------------------\n\nTITLE: Copying an Image with Alias to Local Store\nDESCRIPTION: Command to copy an Ubuntu image to the local store while assigning an alias. The alias can then be used to reference the image in benchmark commands.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus image copy images:ubuntu/22.04 local: --alias ubuntu\n```\n\n----------------------------------------\n\nTITLE: Managing Storage Bucket Keys in Incus\nDESCRIPTION: Commands for creating, editing, deleting, and viewing storage bucket keys. These keys provide S3 credentials for accessing the buckets with specific roles like 'admin' or 'read-only'.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_buckets.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket key create <pool_name> <bucket_name> <key_name> [configuration_options...]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket key create <pool_name> <bucket_name> <key_name> --role=admin [configuration_options...]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket key edit <pool_name> <bucket_name> <key_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket key delete <pool_name> <bucket_name> <key_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket key list <pool_name> <bucket_name>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus storage bucket key show <pool_name> <bucket_name> <key_name>\n```\n\n----------------------------------------\n\nTITLE: Security Configuration Options for Instances\nDESCRIPTION: Security-related configuration options including IOMMU, nesting support, and guest API access.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n{config:option} security.iommu instance-security\n:condition: \"virtual machine\"\n:defaultdesc: \"false\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to enable virtual IOMMU, useful for device passthrough and nesting\"\n:type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: Editing Incus Cluster Configuration\nDESCRIPTION: Command to edit the Incus cluster configuration. This is used when recovering cluster members with changed addresses or roles.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo incus admin cluster edit\n```\n\n----------------------------------------\n\nTITLE: Adding a Cluster Member to a Group in Incus\nDESCRIPTION: This command adds the cluster member 'server1' to the 'gpu' group without removing it from other groups it might be in.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_groups.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster group add server1 gpu\n```\n\n----------------------------------------\n\nTITLE: Showing Information About a Specific Snapshot in Incus\nDESCRIPTION: This command displays detailed information about a specific snapshot of a storage volume in Incus, using the pool name, volume name, and snapshot name.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume show <pool_name> <volume_name>/<snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Creating Local Network Peer Routing - Incus CLI\nDESCRIPTION: Commands to establish peer routing relationships between networks in the same project using Incus CLI. Both networks must have mutual peering configured for the relationship to become active.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_peers.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network peer create <network1> <peering_name> <network2> [configuration_options]\nincus network peer create <network2> <peering_name> <network1> [configuration_options]\n```\n\n----------------------------------------\n\nTITLE: Configuring System Limits in /etc/security/limits.conf for Incus\nDESCRIPTION: This configuration sets various system limits for all users and root to optimize Incus performance. It increases the maximum number of open files and sets unlimited locked-in-memory address space.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/server_settings.md#2025-04-14_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\n*     soft  nofile   1048576\n*     hard  nofile   1048576\nroot  soft  nofile   1048576\nroot  hard  nofile   1048576\n*     soft  memlock  unlimited\n*     hard  memlock  unlimited\nroot  soft  memlock  unlimited\nroot  hard  memlock  unlimited\n```\n\n----------------------------------------\n\nTITLE: Setting QEMU GPU Driver Configuration in Incus\nDESCRIPTION: Example showing how to override the default virtio-gpu-pci GPU driver with qxl-vga in QEMU configuration for VM instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nraw.qemu.conf: |-\n    [device \"qemu_gpu\"]\n    driver = \"qxl-vga\"\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Incus Instances\nDESCRIPTION: This configuration option allows setting key/value environment variables for an Incus instance. These variables are then available for use with the 'incus exec' command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment.*: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Logging Options\nDESCRIPTION: Configuration options for Loki logging integration, including log levels and event types to be sent to the Loki server.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_94\n\nLANGUAGE: yaml\nCODE:\n```\nloki.loglevel: info\nloki.types: lifecycle,logging\n```\n\n----------------------------------------\n\nTITLE: Moving an Instance to an Incus Cluster Group\nDESCRIPTION: This command demonstrates how to move an instance 'c1' to a cluster group rather than a specific member. The group name is prefixed with '@' when used with the --target flag.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage_instance.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus move c1 --target @group1\n```\n\n----------------------------------------\n\nTITLE: Instance State Tracking Configuration in Incus\nDESCRIPTION: Configuration options for tracking instance state in Incus. These maintain records of an instance's previous state, including ID mapping, power state, and readiness status.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_34\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.last_state.idmap instance-volatile\n:shortdesc: \"Serialized instance UID/GID map\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.last_state.power instance-volatile\n:shortdesc: \"Instance state as of last host shutdown\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.last_state.ready instance-volatile\n:shortdesc: \"Instance marked itself as ready\"\n:type: \"string\"\n\n```\n\n----------------------------------------\n\nTITLE: Encrypting Incus Client Key\nDESCRIPTION: Command to encrypt the Incus client key with a password using ssh-keygen.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/authentication.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nssh-keygen -p -o -f .config/incus/client.key\n```\n\n----------------------------------------\n\nTITLE: Viewing Console Log for RHEL 7 Container with Systemd Issues\nDESCRIPTION: Command and output showing systemd startup failures in a RHEL 7 container, where API filesystems cannot be mounted due to permission issues.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_troubleshoot.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus console --show-log systemd\n\nConsole log:\n\nFailed to insert module 'autofs4'\nFailed to insert module 'unix'\nFailed to mount sysfs at /sys: Operation not permitted\nFailed to mount proc at /proc: Operation not permitted\n[!!!!!!] Failed to mount API filesystems, freezing.\n```\n\n----------------------------------------\n\nTITLE: Container and CPU Configuration in Incus\nDESCRIPTION: Configuration options for container type identification and CPU placement in Incus. These control OCI container behavior and NUMA node assignment for instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_32\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.container.oci instance-volatile\n:defaultdesc: \"`false`\"\n:shortdesc: \"Whether the container is an OCI application container\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.cpu.nodes instance-volatile\n:shortdesc: \"Instance NUMA node\"\n:type: \"string\"\nThe NUMA node that was selected for the instance.\n```\n\n----------------------------------------\n\nTITLE: Cloning and Building Incus from Source\nDESCRIPTION: This snippet shows the process of cloning the Incus repository, building dependencies, and compiling Incus from source. It includes the necessary environment variable settings for the build process.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/lxc/incus\ncd incus\nmake deps\n\n# Set environment variables as instructed by make deps output\n\nmake\n```\n\n----------------------------------------\n\nTITLE: Configuring Incus on NixOS\nDESCRIPTION: This snippet demonstrates how to enable and configure Incus in a NixOS configuration file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_7\n\nLANGUAGE: nginx\nCODE:\n```\nvirtualisation.incus.enable = true;\nvirtualisation.incus.preseed = {};\nusers.users.YOUR_USERNAME.extraGroups = [\"incus-admin\"];\nusers.users.YOUR_USERNAME.extraGroups = [\"incus\"];\n```\n\n----------------------------------------\n\nTITLE: Configuring Home Directory Bind Mount in Incus Container\nDESCRIPTION: Command to bind mount a user's home directory into an Incus container using disk device configuration\nSOURCE: https://github.com/lxc/incus/blob/main/doc/faq.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add container-name home disk source=/home/${USER} path=/home/ubuntu\n```\n\n----------------------------------------\n\nTITLE: Configuring Security Options for Incus Instances\nDESCRIPTION: These options control various security aspects of Incus instances, including privileged mode, protection mechanisms, secure boot, and syscall interception.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_18\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.privileged instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to run the instance in privileged mode\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.protection.delete instance-security\n:defaultdesc: \"`false`\"\n:liveupdate: \"yes\"\n:shortdesc: \"Prevents the instance from being deleted\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.protection.shift instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"yes\"\n:shortdesc: \"Whether to protect the file system from being UID/GID shifted\"\n:type: \"bool\"\nSet this option to `true` to prevent the instance's file system from being UID/GID shifted on startup.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.secureboot instance-security\n:condition: \"virtual machine\"\n:defaultdesc: \"`true`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether UEFI secure boot is enforced with the default Microsoft keys\"\n:type: \"bool\"\nWhen disabling this option, consider enabling {config:option}`instance-security:security.csm`.\n```\n\n----------------------------------------\n\nTITLE: Defining PCI Device Options in YAML\nDESCRIPTION: This snippet outlines the configuration options for PCI devices in Incus. It specifies the required 'address' field, which is a string representing the PCI address of the device to be passed through to the VM.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_pci.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nKey                 | Type      | Default   | Required  | Description\n:--                 | :--       | :--       | :--       | :--\n`address`           | string    | -         | yes       | PCI address of the device\n```\n\n----------------------------------------\n\nTITLE: Clearing QEMU Device Driver\nDESCRIPTION: Example showing how to clear a driver setting by specifying an empty value.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nraw.qemu.conf: |-\n    [device \"qemu_gpu\"]\n    driver = \"\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Incus Network Bridge Firewall Rules\nDESCRIPTION: Commands to disable Incus's built-in firewall rules for a specific network bridge to prevent conflicts with other firewall systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network set <network_bridge> ipv6.firewall false\nincus network set <network_bridge> ipv4.firewall false\n```\n\n----------------------------------------\n\nTITLE: Viewing Console Logs in Incus\nDESCRIPTION: Command to display log output from an Incus instance console. This is useful for reviewing system messages without interactive access.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_console.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus console <instance_name> --show-log\n```\n\n----------------------------------------\n\nTITLE: Configuring Ceph Object Storage Pool in Incus\nDESCRIPTION: YAML configuration options for setting up a Ceph Object storage pool in Incus. Includes options for specifying bucket name prefixes, cluster name, radosgw endpoint, and user settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephobject.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncephobject.bucket.name_prefix: \"\"\ncephobject.cluster_name: \"ceph\"\ncephobject.radosgw.endpoint: \"\"\ncephobject.radosgw.endpoint_cert_file: \"\"\ncephobject.user.name: \"admin\"\nvolatile.pool.pristine: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Configuring IPv4 Forwarding for Routed NIC Parent Interface\nDESCRIPTION: Sysctl command to enable IPv4 packet forwarding on the parent interface for a routed NIC. This configuration is required when using a routed NIC with a parent interface set to allow the instance to join the parent interface's network at layer 2.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnet.ipv4.conf.<parent>.forwarding=1\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Trusted Proxy in Incus\nDESCRIPTION: Specifies a comma-separated list of IP addresses of trusted servers that provide the client's address through the proxy connection header. This global setting affects how client IPs are determined.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_59\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.https_trusted_proxy server-core\n:scope: \"global\"\n:shortdesc: \"Trusted servers to provide the client's address\"\n:type: \"string\"\nSpecify a comma-separated list of IP addresses of trusted servers that provide the client's address through the proxy connection header.\n```\n\n----------------------------------------\n\nTITLE: Moving Instance Between Incus Projects\nDESCRIPTION: This command moves an instance from one Incus project to another. It specifies the source and target projects using the --project and --target-project flags.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_work.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus move <instance_name> <new_instance_name> --project <source_project> --target-project <target_project>\n```\n\n----------------------------------------\n\nTITLE: Configuring AMD SEV Options for Incus Virtual Machines\nDESCRIPTION: These options control AMD Secure Encrypted Virtualization (SEV) settings for virtual machines, including SEV-ES and session data.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_19\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.sev instance-security\n:condition: \"virtual machine\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether AMD SEV (Secure Encrypted Virtualization) is enabled for this VM\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.sev.policy.es instance-security\n:condition: \"virtual machine\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether AMD SEV-ES (SEV Encrypted State) is enabled for this VM\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.sev.session.data instance-security\n:condition: \"virtual machine\"\n:defaultdesc: \"`true`\"\n:liveupdate: \"no\"\n:shortdesc: \"The guest owner's `base64`-encoded session blob\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.sev.session.dh instance-security\n:condition: \"virtual machine\"\n:defaultdesc: \"`true`\"\n:liveupdate: \"no\"\n:shortdesc: \"The guest owner's `base64`-encoded Diffie-Hellman key\"\n:type: \"string\"\n\n```\n\n----------------------------------------\n\nTITLE: Deleting an Incus Network Load Balancer\nDESCRIPTION: Command to remove an existing network load balancer from Incus. It requires specifying the network name and listen address of the load balancer to be deleted.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_load_balancers.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus network load-balancer delete <network_name> <listen_address>\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Incus on Void Linux\nDESCRIPTION: This snippet shows how to install Incus on Void Linux and enable its services using runit.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nxbps-install incus incus-client\nln -s /etc/sv/incus /var/service\nln -s /etc/sv/incus-user /var/service\nsv up incus\nsv up incus-user\n```\n\n----------------------------------------\n\nTITLE: Initializing Ubuntu VM with Incus\nDESCRIPTION: Creates a new Ubuntu 22.04 virtual machine instance using Incus\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_routed_nic_vm.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus init images:ubuntu/22.04 jammy --vm\n```\n\n----------------------------------------\n\nTITLE: Preseed YAML for Incus Cluster Bootstrap Server\nDESCRIPTION: Example YAML configuration for initializing the bootstrap server of an Incus cluster using a preseed file. It includes settings for networking, storage pools, and cluster configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_form.md#2025-04-14_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  core.https_address: 192.0.2.101:8443\n  images.auto_update_interval: 15\nstorage_pools:\n- name: default\n  driver: dir\n- name: my-pool\n  driver: zfs\nnetworks:\n- name: incusbr0\n  type: bridge\nprofiles:\n- name: default\n  devices:\n    root:\n      path: /\n      pool: my-pool\n      type: disk\n    eth0:\n      name: eth0\n      nictype: bridged\n      parent: incusbr0\n      type: nic\ncluster:\n  server_name: server1\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Idmaps for Incus Containers\nDESCRIPTION: This snippet demonstrates how to use the 'raw.idmap' configuration key to customize UID and GID mappings for an Incus container. It shows mapping specific UIDs and GID ranges between the host and container.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/userns-idmap.md#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nboth 1000 1000\nuid 50-60 500-510\ngid 100000-110000 10000-20000\n```\n\n----------------------------------------\n\nTITLE: Configuring subuid and subgid for Unprivileged Containers in Incus\nDESCRIPTION: Sets up subuid and subgid mappings for the root user to allow Incus to create unprivileged containers. This command allocates a range of 1 billion UIDs/GIDs starting from 1000000.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\necho \"root:1000000:1000000000\" | sudo tee -a /etc/subuid /etc/subgid\n```\n\n----------------------------------------\n\nTITLE: Setting Time Zone with cloud-init in YAML\nDESCRIPTION: YAML configuration example for setting the time zone to Europe/Rome during instance initialization using cloud-init user-data.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.user-data: |\n    #cloud-config\n    timezone: Europe/Rome\n```\n\n----------------------------------------\n\nTITLE: Checking Incus DNS Configuration Service Status\nDESCRIPTION: Command to check the status of the systemd service for Incus DNS configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl status incus-dns-<network_bridge>.service\n```\n\n----------------------------------------\n\nTITLE: Updating the Cluster Certificate\nDESCRIPTION: This command updates the certificate used by all cluster members, replacing the default self-signed certificate with a custom one.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster update-certificate\n```\n\n----------------------------------------\n\nTITLE: Modifying QEMU S4 Configuration\nDESCRIPTION: Example showing how to modify a specific global section using section indexing to disable S4 power management.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nraw.qemu.conf: |-\n    [global][1]\n    value = \"1\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Open vSwitch for Hardware Offload in Incus\nDESCRIPTION: This code snippet shows how to set up Open vSwitch (OVS) for hardware offload in Incus. It includes enabling hardware offload, restarting the OVS service, adding the physical NIC to the integration bridge, and bringing up the interface.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\novs-vsctl set open_vswitch . other_config:hw-offload=true\nsystemctl restart openvswitch-switch\novs-vsctl add-port br-int enp9s0f0np0\nip link set enp9s0f0np0 up\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Proxy in Incus\nDESCRIPTION: Specifies the HTTP proxy to use for outgoing connections. Falls back to the HTTP_PROXY environment variable if not set. This global setting affects how Incus connects to external resources.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_62\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.proxy_http server-core\n:scope: \"global\"\n:shortdesc: \"HTTP proxy to use\"\n:type: \"string\"\nIf this option is not specified, the daemon falls back to the `HTTP_PROXY` environment variable (if set).\n```\n\n----------------------------------------\n\nTITLE: GPU and Network Interface Volatile Configuration in Incus\nDESCRIPTION: Configuration options for GPU (MIG/vGPU) and network interface naming in Incus instances. These track hardware-specific identifiers and provide network interface naming capabilities.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_29\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.mig.uuid instance-volatile\n:shortdesc: \"MIG instance UUID\"\n:type: \"string\"\nThe NVIDIA MIG instance UUID.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.name instance-volatile\n:shortdesc: \"Network interface name inside of the instance\"\n:type: \"string\"\nThe network interface name inside of the instance when no `name` property is set on the device itself.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.vgpu.uuid instance-volatile\n:shortdesc: \"virtual GPU instance UUID\"\n:type: \"string\"\nThe NVIDIA virtual GPU instance UUID.\n```\n\n----------------------------------------\n\nTITLE: Editing a Snapshot of a Storage Volume in Incus\nDESCRIPTION: This command allows editing the properties of a specific snapshot of a storage volume in Incus, such as adding a description or changing the expiry date.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume edit <pool_name> <volume_name>/<snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Installing Incus on Arch Linux\nDESCRIPTION: This command installs Incus on Arch Linux using the pacman package manager.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npacman -S incus\n```\n\n----------------------------------------\n\nTITLE: Restrictive UFW Rules for Incus Network Bridge\nDESCRIPTION: Advanced UFW configuration with more restrictive rules that only allow specific services (DHCP, DNS) and outbound connections from Incus instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# allow the guest to get an IP from the Incus host\nsudo ufw allow in on incusbr0 to any port 67 proto udp\nsudo ufw allow in on incusbr0 to any port 547 proto udp\n\n# allow the guest to resolve host names from the Incus host\nsudo ufw allow in on incusbr0 to any port 53\n\n# allow the guest to have access to outbound connections\nCIDR4=\"$(incus network get incusbr0 ipv4.address | sed 's|\\.[0-9]\\+/|\\.0/|')\"\nCIDR6=\"$(incus network get incusbr0 ipv6.address | sed 's|:[0-9]\\+/|:/|')\"\nsudo ufw route allow in on incusbr0 from \"${CIDR4}\"\nsudo ufw route allow in on incusbr0 from \"${CIDR6}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN Central for Cluster Setup\nDESCRIPTION: YAML configuration for setting up OVN central in a cluster environment. This snippet is for the first machine in the cluster.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nOVN_CTL_OPTS=\" \\\n     --db-nb-addr=<local> \\\n     --db-nb-create-insecure-remote=yes \\\n     --db-sb-addr=<local> \\\n     --db-sb-create-insecure-remote=yes \\\n     --db-nb-cluster-local-addr=<local> \\\n     --db-sb-cluster-local-addr=<local> \\\n     --ovn-northd-nb-db=tcp:<server_1>:6641,tcp:<server_2>:6641,tcp:<server_3>:6641 \\\n     --ovn-northd-sb-db=tcp:<server_1>:6642,tcp:<server_2>:6642,tcp:<server_3>:6642\"\n```\n\n----------------------------------------\n\nTITLE: Setting Memory Limit for Container via API in Incus\nDESCRIPTION: Example API request to set the memory limit configuration option for a container named 'my-container' to 8 GiB using PATCH method.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request PATCH /1.0/instances/my-container --data '{\"config\": {\"limits.memory\":\"8GiB\"}}'\n```\n\n----------------------------------------\n\nTITLE: Running the Incus Daemon with sudo Group Access\nDESCRIPTION: Starts the Incus daemon with the current environment variables, allowing members of the sudo group to communicate with Incus. This command preserves the PATH and LD_LIBRARY_PATH variables when executing the daemon with elevated privileges.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E PATH=${PATH} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} $(go env GOPATH)/bin/incusd --group sudo\n```\n\n----------------------------------------\n\nTITLE: Configuring Mount-Related Syscall Interception for Incus Containers\nDESCRIPTION: These options control mount-related syscall interceptions in Incus containers, including allowed filesystems, FUSE redirection, and idmapped mounts.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_22\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.mount.allowed instance-security\n:condition: \"container\"\n:liveupdate: \"yes\"\n:shortdesc: \"File systems that can be mounted\"\n:type: \"string\"\nSpecify a comma-separated list of file systems that are safe to mount for processes inside the instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.mount.fuse instance-security\n:condition: \"container\"\n:liveupdate: \"yes\"\n:shortdesc: \"File system that should be redirected to FUSE implementation\"\n:type: \"string\"\nSpecify the mounts of a given file system that should be redirected to their FUSE implementation (for example, `ext4=fuse2fs`).\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.mount.shift instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"yes\"\n:shortdesc: \"Whether to use idmapped mounts for syscall interception\"\n:type: \"bool\"\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Firewalld for Incus Network Bridge\nDESCRIPTION: Commands to add the Incus network bridge to the trusted zone in firewalld, allowing traffic to flow through the bridge interface.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo firewall-cmd --zone=trusted --change-interface=<network_bridge> --permanent\nsudo firewall-cmd --reload\n```\n\n----------------------------------------\n\nTITLE: Configuring systemd-resolved for Incus Network Bridge\nDESCRIPTION: Commands to configure DNS and domain settings for an Incus network bridge in systemd-resolved, including disabling DNSSEC and DNS over TLS.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nresolvectl dns <network_bridge> <dns_address>\nresolvectl domain <network_bridge> ~<dns_domain>\nresolvectl dnssec <network_bridge> off\nresolvectl dnsovertls <network_bridge> off\n```\n\n----------------------------------------\n\nTITLE: Configuring a Bridged NIC in Incus\nDESCRIPTION: This snippet shows the available device options for a bridged NIC in Incus. It includes options for network configuration, security settings, and performance tuning.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nKey                                   | Type    | Default           | Managed | Description\n:--                                   | :--     | :--               | :--     | :--\n`boot.priority`                       | integer | -                 | no      | Boot priority for VMs (higher value boots first)\n`host_name`                           | string  | randomly assigned | no      | The name of the interface inside the host\n`hwaddr`                              | string  | randomly assigned | no      | The MAC address of the new interface\n`io.bus`                              | string  | `virtio`          | no      | Override the bus for the device (can be `virtio` or `usb`) (VM only)\n`ipv4.address`                        | string  | -                 | no      | An IPv4 address to assign to the instance through DHCP (can be `none` to restrict all IPv4 traffic when `security.ipv4_filtering` is set)\n`ipv4.routes`                         | string  | -                 | no      | Comma-delimited list of IPv4 static routes to add on host to NIC\n`ipv4.routes.external`                | string  | -                 | no      | Comma-delimited list of IPv4 static routes to route to the NIC and publish on uplink network (BGP)\n`ipv6.address`                        | string  | -                 | no      | An IPv6 address to assign to the instance through DHCP (can be `none` to restrict all IPv6 traffic when `security.ipv6_filtering` is set)\n`ipv6.routes`                         | string  | -                 | no      | Comma-delimited list of IPv6 static routes to add on host to NIC\n`ipv6.routes.external`                | string  | -                 | no      | Comma-delimited list of IPv6 static routes to route to the NIC and publish on uplink network (BGP)\n`limits.egress`                       | string  | -                 | no      | I/O limit in bit/s for outgoing traffic (various suffixes supported, see {ref}`instances-limit-units`)\n`limits.ingress`                      | string  | -                 | no      | I/O limit in bit/s for incoming traffic (various suffixes supported, see {ref}`instances-limit-units`)\n`limits.max`                          | string  | -                 | no      | I/O limit in bit/s for both incoming and outgoing traffic (same as setting both `limits.ingress` and `limits.egress`)\n`limits.priority`                     | integer | -                 | no      | The `skb->priority` value (32-bit unsigned integer) for outgoing traffic, to be used by the kernel queuing discipline (qdisc) to prioritize network packets (The effect of this value depends on the particular qdisc implementation, for example, `SKBPRIO` or `QFQ`. Consult the kernel qdisc documentation before setting this value.)\n`mtu`                                 | integer | parent MTU        | yes     | The MTU of the new interface\n`name`                                | string  | kernel assigned   | no      | The name of the interface inside the instance\n`network`                             | string  | -                 | no      | The managed network to link the device to (instead of specifying the `nictype` directly)\n`parent`                              | string  | -                 | yes     | The name of the host device (required if specifying the `nictype` directly)\n`queue.tx.length`                     | integer | -                 | no      | The transmit queue length for the NIC\n`security.acls`                       | string  | -                 | no      | Comma-separated list of network ACLs to apply\n`security.acls.default.egress.action` | string  | `drop`            | no      | Action to use for egress traffic that doesn't match any ACL rule\n`security.acls.default.egress.logged` | bool    | `false`           | no      | Whether to log egress traffic that doesn't match any ACL rule\n`security.acls.default.ingress.action`| string  | `drop`            | no      | Action to use for ingress traffic that doesn't match any ACL rule\n`security.acls.default.ingress.logged`| bool    | `false`           | no      | Whether to log ingress traffic that doesn't match any ACL rule\n`security.ipv4_filtering`             | bool    | `false`           | no      | Prevent the instance from spoofing another instance's IPv4 address (enables `security.mac_filtering`)\n`security.ipv6_filtering`             | bool    | `false`           | no      | Prevent the instance from spoofing another instance's IPv6 address (enables `security.mac_filtering`)\n`security.mac_filtering`              | bool    | `false`           | no      | Prevent the instance from spoofing another instance's MAC address\n`security.port_isolation`             | bool    | `false`           | no      | Prevent the NIC from communicating with other NICs in the network that have port isolation enabled\n`vlan`                                | integer | -                 | no      | The VLAN ID to use for non-tagged traffic (can be `none` to remove port from default VLAN)\n`vlan.tagged`                         | integer | -                 | no      | Comma-delimited list of VLAN IDs or VLAN ranges to join for tagged traffic\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Proxy in Incus\nDESCRIPTION: Specifies the HTTPS proxy to use for outgoing secure connections. Falls back to the HTTPS_PROXY environment variable if not set. This global setting affects how Incus connects to external resources.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_63\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.proxy_https server-core\n:scope: \"global\"\n:shortdesc: \"HTTPS proxy to use\"\n:type: \"string\"\nIf this option is not specified, the daemon falls back to the `HTTPS_PROXY` environment variable (if set).\n```\n\n----------------------------------------\n\nTITLE: Adding Routed NIC Device Configuration\nDESCRIPTION: Adds a routed NIC device to the VM with specific IPv4 and IPv6 addresses\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_routed_nic_vm.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add jammy eth0 nic nictype=routed parent=my-parent-network ipv4.address=192.0.2.2 ipv6.address=2001:db8::2\n```\n\n----------------------------------------\n\nTITLE: TPM Device Configuration\nDESCRIPTION: Configuration options for TPM devices in containers, including path and resource manager path settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_98\n\nLANGUAGE: yaml\nCODE:\n```\npath: \"-\"\npathrm: \"-\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Bridged NIC Security in Incus CLI\nDESCRIPTION: Command to override default bridged NIC security settings for a specific instance in Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/security.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config device override <instance> <NIC> security.mac_filtering=true\n```\n\n----------------------------------------\n\nTITLE: Installing Incus Client on Windows via Chocolatey\nDESCRIPTION: This snippet shows how to install the Incus client on Windows using the Chocolatey package manager. It assumes Chocolatey is already installed.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nchoco install incus\n```\n\n----------------------------------------\n\nTITLE: Example UFW Configuration for Incus Bridge\nDESCRIPTION: A specific example showing how to configure UFW rules for the default Incus bridge (incusbr0).\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo ufw allow in on incusbr0\nsudo ufw route allow in on incusbr0\nsudo ufw route allow out on incusbr0\n```\n\n----------------------------------------\n\nTITLE: Deleting Benchmark Containers\nDESCRIPTION: Command to delete all previously created benchmark containers. This cleanup step is required before running a new benchmark test.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark delete\n```\n\n----------------------------------------\n\nTITLE: Adding a User Account with cloud-init in YAML\nDESCRIPTION: YAML configuration example for creating a new user account named 'documentation_example' during instance initialization using cloud-init.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.user-data: |\n    #cloud-config\n    users:\n      - name: documentation_example\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Incus on Gentoo\nDESCRIPTION: This snippet shows how to install Incus on Gentoo, including QEMU for VM support, and initial configuration steps.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nemerge -av app-containers/incus\nemerge -av app-emulation/qemu\necho \"root:1000000:1000000000\" | tee -a /etc/subuid /etc/subgid\nrc-service incus start\n```\n\n----------------------------------------\n\nTITLE: Copying Default Profile to New Incus Project\nDESCRIPTION: This command copies the contents of the default project's default profile into the current project's default profile. It's useful when creating a new project with isolated profiles.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_work.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus profile show default --project default | incus profile edit default\n```\n\n----------------------------------------\n\nTITLE: Configuring Miscellaneous Syscall Interceptions for Incus Containers\nDESCRIPTION: These options control various syscall interceptions in Incus containers, including scheduler, extended attributes, and system information retrieval.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_23\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.sched_setscheduler instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to handle the `sched_setscheduler` system call\"\n:type: \"bool\"\nThis system call allows increasing process priority.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.setxattr instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to handle the `setxattr` system call\"\n:type: \"bool\"\nThis system call allows setting a limited subset of restricted extended attributes.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.intercept.sysinfo instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to handle the `sysinfo` system call\"\n:type: \"bool\"\nThis system call can be used to get cgroup-based resource usage information.\n```\n\n----------------------------------------\n\nTITLE: Adding Nodes to LINSTOR Cluster\nDESCRIPTION: Add nodes to the LINSTOR cluster, specifying their IP addresses and node types.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nlinstor node create server01 <server_1> --node-type combined\nlinstor node create server02 <server_2> --node-type satellite\nlinstor node create server03 <server_3> --node-type satellite\n```\n\n----------------------------------------\n\nTITLE: Assigning a Cluster Member to a Single Group in Incus\nDESCRIPTION: This command assigns the cluster member 'server1' to only the 'gpu' group, removing it from all other groups.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_groups.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster group assign server1 gpu\n```\n\n----------------------------------------\n\nTITLE: Defining GPU Device Options for SR-IOV GPUs in Incus\nDESCRIPTION: This YAML snippet details the device options for SR-IOV (Single Root I/O Virtualization) GPU types in Incus. It includes options for specifying the parent GPU's ID, PCI address, and other identifiers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_gpu.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nKey         | Type      | Default           | Description\n:--         | :--       | :--               | :--\n`id`         | string   | -                 | The DRM card ID of the parent GPU device\n`pci`        | string   | -                 | The PCI address of the parent GPU device\n`productid`  | string   | -                 | The product ID of the parent GPU device\n`vendorid`   | string   | -                 | The vendor ID of the parent GPU device\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Type in Incus\nDESCRIPTION: Specifies the type of the external logger (e.g., syslog). This global setting determines the protocol and format used for log delivery.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_85\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.type server-logging\n:scope: \"global\"\n:shortdesc: \"The type of the logger, e.g., syslog\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Raw AppArmor Configuration for Incus Instance\nDESCRIPTION: Configuration option for specifying AppArmor profile entries that will be appended to the generated profile.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n{config:option} raw.apparmor instance-raw\n:liveupdate: \"yes\"\n:shortdesc: \"AppArmor profile entries\"\n:type: \"blob\"\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Incus Instance\nDESCRIPTION: Shows how to set environment variables for an Incus instance using the 'incus config set' command. This method sets the variable persistently for the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/instance-exec.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <instance_name> environment.ENVVAR=VALUE\n```\n\n----------------------------------------\n\nTITLE: Installing lxc-to-incus Tool with Go\nDESCRIPTION: Command to install the lxc-to-incus migration tool using Go if it's not included in your Incus installation. Requires Go to be installed as a prerequisite.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo install github.com/lxc/incus/cmd/lxc-to-incus@latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus to Scrape Incus Metrics in YAML\nDESCRIPTION: This YAML configuration snippet shows how to set up Prometheus to scrape metrics from an Incus server. It includes global settings and a job configuration for Incus with TLS setup.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nglobal:\n  # How frequently to scrape targets by default. The Prometheus default value is 1m.\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: incus\n    metrics_path: '/1.0/metrics'\n    scheme: 'https'\n    static_configs:\n      - targets: ['foo.example.com:8443']\n    tls_config:\n      ca_file: 'tls/server.crt'\n      cert_file: 'tls/metrics.crt'\n      key_file: 'tls/metrics.key'\n      # XXX: server_name is required if the target name\n      #      is not covered by the certificate (not in the SAN list)\n      server_name: 'foo'\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Labels in Incus\nDESCRIPTION: Specifies a comma-separated list of values to use as labels for Loki log entries. This global setting allows adding metadata to log entries for better filtering.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_82\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.labels server-logging\n:scope: \"global\"\n:shortdesc: \"Labels for a Loki log entry\"\n:type: \"string\"\nSpecify a comma-separated list of values that should be used as labels for a Loki log entry.\n```\n\n----------------------------------------\n\nTITLE: Publishing an Image from an Incus Snapshot\nDESCRIPTION: Command to create and publish an image from a specific instance snapshot. This preserves the state of the snapshot for creating new instances. Can include alias, expiration, and visibility settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_create.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus publish <instance_name>/<snapshot_name> [<remote>:]\n```\n\n----------------------------------------\n\nTITLE: Starting Colima with Incus Runtime on macOS\nDESCRIPTION: This snippet demonstrates how to install Colima and start it with Incus as the runtime on macOS. Colima is a container runtime that supports Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nbrew install colima\ncolima start --runtime incus\n```\n\n----------------------------------------\n\nTITLE: Configuration Options for Physical Network in YAML\nDESCRIPTION: This YAML snippet outlines the configuration options available for the 'physical' network type in Incus. It includes keys for various settings such as VLAN, MTU, BGP, DNS, IPv4/IPv6 configuration, and OVN settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_physical.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nKey                             | Type      | Condition             | Default                   | Description\n:--                             | :--       | :--                   | :--                       | :--\n`gvrp`                          | bool      | -                     | `false`                   | Register VLAN using GARP VLAN Registration Protocol\n`mtu`                           | integer   | -                     | -                         | The MTU of the new interface\n`parent`                        | string    | -                     | -                         | Existing interface to use for network\n`vlan`                          | integer   | -                     | -                         | The VLAN ID to attach to\n`bgp.peers.NAME.address`        | string    | BGP server            | -                         | Peer address (IPv4 or IPv6) for use by `ovn` downstream networks\n`bgp.peers.NAME.asn`            | integer   | BGP server            | -                         | Peer AS number for use by `ovn` downstream networks\n`bgp.peers.NAME.password`       | string    | BGP server            | - (no password)           | Peer session password (optional) for use by `ovn` downstream networks\n`bgp.peers.NAME.holdtime`       | integer   | BGP server            | `180`                     | Peer session hold time (in seconds; optional)\n`dns.nameservers`               | string    | standard mode         | -                         | List of DNS server IPs on `physical` network\n`ipv4.gateway`                  | string    | standard mode         | -                         | IPv4 address for the gateway and network (CIDR)\n`ipv4.ovn.ranges`               | string    | -                     | -                         | Comma-separated list of IPv4 ranges to use for child OVN network routers (FIRST-LAST format)\n`ipv4.routes`                   | string    | IPv4 address          | -                         | Comma-separated list of additional IPv4 CIDR subnets that can be used with child OVN networks `ipv4.routes.external` setting\n`ipv4.routes.anycast`           | bool      | IPv4 address          | `false`                   | Allow the overlapping routes to be used on multiple networks/NIC at the same time\n`ipv6.gateway`                  | string    | standard mode         | -                         | IPv6 address for the gateway and network (CIDR)\n`ipv6.ovn.ranges`               | string    | -                     | -                         | Comma-separated list of IPv6 ranges to use for child OVN network routers (FIRST-LAST format)\n`ipv6.routes`                   | string    | IPv6 address          | -                         | Comma-separated list of additional IPv6 CIDR subnets that can be used with child OVN networks `ipv6.routes.external` setting\n`ipv6.routes.anycast`           | bool      | IPv6 address          | `false`                   | Allow the overlapping routes to be used on multiple networks/NIC at the same time\n`ovn.ingress_mode`              | string    | standard mode         | `l2proxy`                 | Sets the method how OVN NIC external IPs will be advertised on uplink network: `l2proxy` (proxy ARP/NDP) or `routed`\n`user.*`                        | string    | -                     | -                         | User-provided free-form key/value pairs\n```\n\n----------------------------------------\n\nTITLE: Viewing Snapshot Configuration in Incus\nDESCRIPTION: Command to show detailed configuration information about a specific snapshot of an Incus instance. This helps inspect the settings and state captured in the snapshot.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_backup.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config show <instance_name>/<snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Example IPAM Allocation Output\nDESCRIPTION: Sample output showing IP address allocations in an Incus deployment. Displays used resources, addresses, entity types, NAT status, and hardware addresses for various network components.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ipam.md#2025-04-14_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n+------------------------+-----------------+----------+------+-------------------+\n| USED BY                | ADDRESS         | TYPE     | NAT  | HARDWARE ADDRESS  |\n+------------------------+-----------------+----------+------+-------------------+\n| /1.0/networks/incusbr0 | 192.0.2.0/24    | network  | true |                   |\n+------------------------+-----------------+----------+------+-------------------+\n| /1.0/networks/incusbr0 | 2001:db8::/32   | network  | true |                   |\n+------------------------+-----------------+----------+------+-------------------+\n| /1.0/instances/u1      | 2001:db8::1/128 | instance | true | 10:66:6a:04:f0:95 |\n+------------------------+-----------------+----------+------+-------------------+\n| /1.0/instances/u1      | 192.0.2.2/32    | instance | true | 10:66:6a:04:f0:95 |\n+------------------------+-----------------+----------+------+-------------------+\n```\n\n----------------------------------------\n\nTITLE: Adding a Role to a Cluster Member\nDESCRIPTION: This command adds a specific role to a cluster member, allowing for customization of member responsibilities.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_manage.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster role add server1 event-hub\n```\n\n----------------------------------------\n\nTITLE: Receiving Event Notifications in Incus Instance-Host Communication\nDESCRIPTION: WebSocket connection to /1.0/events endpoint provides a stream of event notifications. Events can be filtered by type (config or device).\nSOURCE: https://github.com/lxc/incus/blob/main/doc/dev-incus.md#2025-04-14_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"timestamp\": \"2017-12-21T18:28:26.846603815-05:00\",\n    \"type\": \"device\",\n    \"metadata\": {\n        \"name\": \"kvm\",\n        \"action\": \"added\",\n        \"config\": {\n            \"type\": \"unix-char\",\n            \"path\": \"/dev/kvm\"\n        }\n    }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"timestamp\": \"2017-12-21T18:28:26.846603815-05:00\",\n    \"type\": \"config\",\n    \"metadata\": {\n        \"key\": \"user.foo\",\n        \"old_value\": \"\",\n        \"value\": \"bar\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki API URL in Incus\nDESCRIPTION: Specifies the URL to the Loki server (e.g., 'https://loki.example.com:3100'). Incus automatically adds the '/loki/api/v1/push' path. This global setting controls where logs are sent.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_89\n\nLANGUAGE: config\nCODE:\n```\n{config:option} loki.api.url server-loki\n:scope: \"global\"\n:shortdesc: \"URL to the Loki server\"\n:type: \"string\"\nSpecify the protocol, name or IP and port. For example `https://loki.example.com:3100`. Incus will automatically add the `/loki/api/v1/push` suffix so there's no need to add it here.\n```\n\n----------------------------------------\n\nTITLE: Moving Instance Storage Volumes to Another Pool in Incus\nDESCRIPTION: Command to move an instance's storage volume to a different storage pool in Incus. The instance must be stopped before executing this command. It moves the entire instance to the specified target pool.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_move_volume.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus move <instance_name> --storage <target_pool_name>\n```\n\n----------------------------------------\n\nTITLE: Examining Client Certificate with OpenSSL\nDESCRIPTION: Uses openssl to display detailed information about the Incus client certificate, which is useful for authentication troubleshooting when connecting to the Incus server.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/debugging.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 -text -noout -in client.crt\n```\n\n----------------------------------------\n\nTITLE: Removing Addresses from a Network Address Set\nDESCRIPTION: Command to remove specific addresses from an existing network address set. Multiple addresses can be removed in a single command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_address_sets.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus network address-set remove <name> <address1> <address2>\n```\n\n----------------------------------------\n\nTITLE: Installing incus-benchmark Tool from Source\nDESCRIPTION: Command to install the incus-benchmark tool from source using Go. Requires Go to be installed on the system as a prerequisite.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo install github.com/lxc/incus/cmd/incus-benchmark@latest\n```\n\n----------------------------------------\n\nTITLE: Setting Profiles for an Image in Incus using YAML\nDESCRIPTION: This snippet shows the YAML configuration for associating the default profile with an image using the 'incus image edit' command. The profiles section lists all profiles that will be automatically applied to instances created from this image.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_profiles.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nprofiles:\n- default\n```\n\n----------------------------------------\n\nTITLE: Configuring Temporary Network Device Backlog in Linux\nDESCRIPTION: Command to temporarily set the network device maximum backlog to 182757 through the proc filesystem.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_increase_bandwidth.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho 182757 > /proc/sys/net/core/netdev_max_backlog\n```\n\n----------------------------------------\n\nTITLE: Example Firewalld Configuration for Incus Bridge\nDESCRIPTION: A specific example showing how to add the default Incus bridge (incusbr0) to the trusted zone in firewalld.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo firewall-cmd --zone=trusted --change-interface=incusbr0 --permanent\nsudo firewall-cmd --reload\n```\n\n----------------------------------------\n\nTITLE: Changing the Default Remote Image Server in Incus\nDESCRIPTION: Command to select a different remote as the default image server in Incus. This changes which server is used when no remote is specified in image references.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus remote switch <remote_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Autonomous System Number in Incus\nDESCRIPTION: Sets the BGP Autonomous System Number (ASN) for the local server. This global setting identifies the network on BGP operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_50\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.bgp_asn server-core\n:scope: \"global\"\n:shortdesc: \"BGP Autonomous System Number for the local server\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: SR-IOV Virtual Function Configuration Options in Incus\nDESCRIPTION: Configuration options for SR-IOV virtual functions used in Incus instances. These track information about virtual functions when they are moved into an instance, including hardware addresses, IDs, parent devices, and network settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_28\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.vf.hwaddr instance-volatile\n:shortdesc: \"SR-IOV virtual function original MAC\"\n:type: \"string\"\nThe original MAC used when moving a VF into an instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.vf.id instance-volatile\n:shortdesc: \"SR-IOV virtual function ID\"\n:type: \"string\"\nThe ID used when moving a VF into an instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.vf.parent instance-volatile\n:shortdesc: \"SR-IOV parent host device\"\n:type: \"string\"\nThe parent host device used when allocating a VF into an instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.vf.spoofcheck instance-volatile\n:shortdesc: \"SR-IOV virtual function original spoof check setting\"\n:type: \"string\"\nThe original spoof check setting used when moving a VF into an instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.vf.vlan instance-volatile\n:shortdesc: \"SR-IOV virtual function original VLAN\"\n:type: \"string\"\nThe original VLAN used when moving a VF into an instance.\n```\n\n----------------------------------------\n\nTITLE: Configuring Metrics Server Address in Incus\nDESCRIPTION: Specifies the address to bind the metrics server to over HTTPS. This local setting controls where the Prometheus-compatible metrics endpoint is available.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_60\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.metrics_address server-core\n:scope: \"local\"\n:shortdesc: \"Address to bind the metrics server to (HTTPS)\"\n:type: \"string\"\nSee {ref}`metrics`.\n```\n\n----------------------------------------\n\nTITLE: Incus Event Documentation Table\nDESCRIPTION: A markdown table documenting all possible events in the Incus system, including their descriptions and associated metadata parameters.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/events.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| `instance-metadata-template-deleted`   | The image template file for the instance has been deleted.            | `path`: relative file path.                                                                          |\n| `instance-metadata-template-retrieved` | The image template file for the instance has been downloaded.         | `path`: relative file path.                                                                          |\n| `instance-metadata-updated`            | The instance's image metadata has changed.                            |                                                                                                      |\n| `instance-paused`                      | The instance has been put in a paused state.                          |                                                                                                      |\n| `instance-ready`                       | The instance is ready.                                                |                                                                                                      |\n| `instance-renamed`                     | The instance has been renamed.                                        | `old_name`: the previous name.                                                                       |\n| `instance-restarted`                   | The instance has restarted.                                           |                                                                                                      |\n| `instance-restored`                    | The instance has been restored from a snapshot.                       | `snapshot`: name of the snapshot being restored.                                                     |\n| `instance-resumed`                     | The instance has resumed after being paused.                          |                                                                                                      |\n| `instance-shutdown`                    | The instance has shut down.                                           |                                                                                                      |\n| `instance-snapshot-created`            | A snapshot of the instance has been created.                          |                                                                                                      |\n| `instance-snapshot-deleted`            | The instance snapshot has been deleted.                               |                                                                                                      |\n| `instance-snapshot-renamed`            | The instance snapshot has been renamed.                               | `old_name`: the previous name.                                                                       |\n| `instance-snapshot-updated`            | The instance snapshot's configuration has changed.                    |                                                                                                      |\n| `instance-started`                     | The instance has started.                                             |                                                                                                      |\n| `instance-stopped`                     | The instance has stopped.                                             |                                                                                                      |\n| `instance-updated`                     | The instance's configuration has changed.                             |                                                                                                      |\n| `network-acl-created`                  | A new network ACL has been created.                                   |                                                                                                      |\n| `network-acl-deleted`                  | The network ACL has been deleted.                                     |                                                                                                      |\n| `network-acl-renamed`                  | The network ACL has been renamed.                                     | `old_name`: the previous name.                                                                       |\n| `network-acl-updated`                  | The network ACL configuration has changed.                            |                                                                                                      |\n| `network-created`                      | A network device has been created.                                    |                                                                                                      |\n| `network-deleted`                      | The network device has been deleted.                                  |                                                                                                      |\n| `network-forward-created`              | A new network forward has been created.                               |                                                                                                      |\n| `network-forward-deleted`              | The network forward has been deleted.                                 |                                                                                                      |\n| `network-forward-updated`              | The network forward has been updated.                                 |                                                                                                      |\n| `network-peer-created`                 | A new network peer has been created.                                  |                                                                                                      |\n| `network-peer-deleted`                 | The network peer has been deleted.                                    |                                                                                                      |\n| `network-peer-updated`                 | The network peer has been updated.                                    |                                                                                                      |\n| `network-renamed`                      | The network device has been renamed.                                  | `old_name`: the previous name.                                                                       |\n| `network-updated`                      | The network device's configuration has changed.                       |                                                                                                      |\n| `network-zone-created`                 | A new network zone has been created.                                  |                                                                                                      |\n| `network-zone-deleted`                 | The network zone has been deleted.                                    |                                                                                                      |\n| `network-zone-record-created`          | A new network zone record has been created.                           |                                                                                                      |\n| `network-zone-record-deleted`          | The network zone record has been deleted.                             |                                                                                                      |\n| `network-zone-record-updated`          | The network zone record has been updated.                             |                                                                                                      |\n| `network-zone-updated`                 | The network zone has been updated.                                    |                                                                                                      |\n| `operation-cancelled`                  | The operation has been canceled.                                      |                                                                                                      |\n| `profile-created`                      | A new profile has been created.                                       |                                                                                                      |\n| `profile-deleted`                      | The profile has been deleted.                                         |                                                                                                      |\n| `profile-renamed`                      | The profile has been renamed .                                        | `old_name`: the previous name.                                                                       |\n| `profile-updated`                      | The profile's configuration has changed.                              |                                                                                                      |\n| `project-created`                      | A new project has been created.                                       |                                                                                                      |\n| `project-deleted`                      | The project has been deleted.                                         |                                                                                                      |\n| `project-renamed`                      | The project has been renamed.                                         | `old_name`: the previous name.                                                                       |\n```\n\n----------------------------------------\n\nTITLE: Configuring Syslog Socket in Incus\nDESCRIPTION: Controls whether to enable the syslog unixgram socket listener. Default is false. This local setting allows external processes to send log messages to Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_68\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.syslog_socket server-core\n:defaultdesc: \"`false`\"\n:scope: \"local\"\n:shortdesc: \"Whether to enable the syslog unixgram socket listener\"\n:type: \"bool\"\nSet this option to `true` to enable the syslog unixgram socket to receive log messages from external processes.\n```\n\n----------------------------------------\n\nTITLE: Converting Client Certificate to PKCS12 Format\nDESCRIPTION: Converts the Incus client certificate and key to PKCS12 (.pfx) format, which can be imported into web browsers for testing the HTTPS API interface.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/debugging.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl pkcs12 -clcerts -inkey client.key -in client.crt -export -out client.pfx\n```\n\n----------------------------------------\n\nTITLE: Creating a Debian User Shell Alias in Incus\nDESCRIPTION: This command creates an alias named 'debian' that provides a shortcut for executing a login shell as the 'debian' user in any specified instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/incus_alias.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus alias add debian 'exec @ARGS@ -- su -l debian'\n```\n\n----------------------------------------\n\nTITLE: Installing LINSTOR Satellite Components\nDESCRIPTION: Install the required packages for LINSTOR satellite nodes, including LVM2, DRBD, and LINSTOR satellite service.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install lvm2 drbd-dkms drbd-utils linstor-satellite\n```\n\n----------------------------------------\n\nTITLE: Creating LINSTOR Storage Pools\nDESCRIPTION: Create LVM Thin storage pools on each satellite node using the linstor physical-storage command.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nlinstor physical-storage create-device-pool --storage-pool nvme_pool --pool-name nvme_pool lvmthin server01 /dev/nvme1n1\nlinstor physical-storage create-device-pool --storage-pool nvme_pool --pool-name nvme_pool lvmthin server02 /dev/nvme1n1\nlinstor physical-storage create-device-pool --storage-pool nvme_pool --pool-name nvme_pool lvmthin server03 /dev/nvme1n1\n```\n\n----------------------------------------\n\nTITLE: Implementing an Instance Placement Function in Starlark for Incus\nDESCRIPTION: This example demonstrates a basic instance placement scriptlet implementation. The function receives instance request details and candidate cluster members, then makes a placement decision. It shows examples of logging, conditional logic, and setting a target cluster member.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/clustering.md#2025-04-14_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef instance_placement(request, candidate_members):\n    # Example of logging info, this will appear in Incus' log.\n    log_info(\"instance placement started: \", request)\n\n    # Example of applying logic based on the instance request.\n    if request.name == \"foo\":\n        # Example of logging an error, this will appear in Incus' log.\n        log_error(\"Invalid name supplied: \", request.name)\n\n        fail(\"Invalid name\") # Exit with an error to reject instance placement.\n\n    # Place the instance on the first candidate server provided.\n    set_target(candidate_members[0].server_name)\n\n    return # Return empty to allow instance placement to proceed.\n```\n\n----------------------------------------\n\nTITLE: Starting Incus Instances with Console Access\nDESCRIPTION: Commands to start an Incus instance and immediately attach to its console. The second variation specifically requests VGA console access for virtual machines.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_console.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus start <instance_name> --console\nincus start <instance_name> --console=vga\n```\n\n----------------------------------------\n\nTITLE: Creating Containers with Parallel Threads\nDESCRIPTION: Example command for creating 20 Alpine Edge containers using 4 parallel threads for benchmarking. The parallel flag controls the number of simultaneous operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark init --count 20 --parallel 4 images:alpine/edge\n```\n\n----------------------------------------\n\nTITLE: Importing an Image from a Remote Web Server\nDESCRIPTION: Command to import an image file by URL from a remote web server. The server must provide the required custom HTTP headers for the import to succeed.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_copy.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus image import <URL>\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Compression Algorithm in Incus\nDESCRIPTION: Specifies the compression algorithm to use for new images. Default is gzip. Supported values include bzip2, gzip, lz4, lzma, xz, zstd or none. This global setting affects storage efficiency.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_72\n\nLANGUAGE: config\nCODE:\n```\n{config:option} images.compression_algorithm server-images\n:defaultdesc: \"`gzip`\"\n:scope: \"global\"\n:shortdesc: \"Compression algorithm to use for new images\"\n:type: \"string\"\nPossible values are `bzip2`, `gzip`, `lz4`, `lzma`, `xz`, `zstd` or `none`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Ignore Hosts in Incus\nDESCRIPTION: Specifies hosts that don't need the proxy in a format similar to NO_PROXY (e.g., '1.2.3.4,1.2.3.5'). Falls back to the NO_PROXY environment variable if not set.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_64\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.proxy_ignore_hosts server-core\n:scope: \"global\"\n:shortdesc: \"Hosts that don't need the proxy\"\n:type: \"string\"\nSpecify this option in a similar format to `NO_PROXY` (for example, `1.2.3.4,1.2.3.5`)\n\nIf this option is not specified, the daemon falls back to the `NO_PROXY` environment variable (if set).\n```\n\n----------------------------------------\n\nTITLE: Events Table in Markdown\nDESCRIPTION: Table documenting various event types for storage operations, project updates, and warnings in Incus, including their descriptions and additional context parameters.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/events.md#2025-04-14_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| `project-updated`                      | The project's configuration has changed.                              |                                                                                                      |\n| `storage-pool-created`                 | A new storage pool has been created.                                  | `target`: cluster member name.                                                                       |\n| `storage-pool-deleted`                 | The storage pool has been deleted.                                    |                                                                                                      |\n| `storage-pool-updated`                 | The storage pool's configuration has changed.                         | `target`: cluster member name.                                                                       |\n| `storage-volume-backup-created`        | A new backup for the storage volume has been created.                 | `type`: `container`, `virtual-machine`, `image`, or `custom`.                                        |\n| `storage-volume-backup-deleted`        | The storage volume's backup has been deleted.                         |                                                                                                      |\n| `storage-volume-backup-renamed`        | The storage volume's backup has been renamed.                         | `old_name`: the previous name.                                                                       |\n| `storage-volume-backup-retrieved`      | The storage volume's backup has been downloaded.                      |                                                                                                      |\n| `storage-volume-created`               | A new storage volume has been created.                                | `type`: `container`, `virtual-machine`, `image`, or `custom`.                                        |\n| `storage-volume-deleted`               | The storage volume has been deleted.                                  |                                                                                                      |\n| `storage-volume-renamed`               | The storage volume has been renamed.                                  | `old_name`: the previous name.                                                                       |\n| `storage-volume-restored`              | The storage volume has been restored from a snapshot.                 | `snapshot`: name of the snapshot being restored.                                                     |\n| `storage-volume-snapshot-created`      | A new storage volume snapshot has been created.                       | `type`: `container`, `virtual-machine`, `image`, or `custom`.                                        |\n| `storage-volume-snapshot-deleted`      | The storage volume's snapshot has been deleted.                       |                                                                                                      |\n| `storage-volume-snapshot-renamed`      | The storage volume's snapshot has been renamed.                       | `old_name`: the previous name.                                                                       |\n| `storage-volume-snapshot-updated`      | The configuration for the storage volume's snapshot has changed.      |                                                                                                      |\n| `storage-volume-updated`               | The storage volume's configuration has changed.                       |                                                                                                      |\n| `warning-acknowledged`                 | The warning's status has been set to \"acknowledged\".                  |                                                                                                      |\n| `warning-deleted`                      | The warning has been deleted.                                         |                                                                                                      |\n| `warning-reset`                        | The warning's status has been set to \"new\".                           |                                                                                                      |\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Rebalance Threshold Option in Incus\nDESCRIPTION: Defines the percentage load difference between the most and least busy servers needed to trigger a migration in the cluster. Default value is 20%. This is a global setting.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_48\n\nLANGUAGE: config\nCODE:\n```\n{config:option} cluster.rebalance.threshold server-cluster\n:defaultdesc: \"`20`\"\n:scope: \"global\"\n:shortdesc: \"Percentage load difference between most and least busy server needed to trigger a migration\"\n:type: \"integer\"\n```\n\n----------------------------------------\n\nTITLE: Scheduling Daily Snapshots for a Storage Volume in Incus\nDESCRIPTION: This command sets up automatic daily snapshots for a custom storage volume in Incus using the snapshots.schedule configuration option.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume set <pool_name> <volume_name> snapshots.schedule @daily\n```\n\n----------------------------------------\n\nTITLE: Adding GitHub Fork as Remote in Bash\nDESCRIPTION: Commands to add a developer's GitHub fork as a remote repository and update the local repository. This allows developers to work on their own fork of the Incus project.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/code.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add myfork git@github.com:<your_username>/incus.git\ngit remote update\n```\n\n----------------------------------------\n\nTITLE: Installing OVN Tools on Ubuntu\nDESCRIPTION: Command to install OVN host and central components on an Ubuntu system using apt.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install ovn-host ovn-central\n```\n\n----------------------------------------\n\nTITLE: Displaying Incus Storage Volume Resources Table\nDESCRIPTION: A formatted table showing Incus storage volumes with their resource names, ports, resource groups, layers, states, names, types, and content types. All volumes use DRBD storage on the 'remote' resource group with different purposes (containers, virtual machines, images, and custom storage).\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n┊ ResourceName                                  ┊ Port ┊ ResourceGroup ┊ Layers       ┊ State ┊ Aux/Incus/name                                                                ┊ Aux/Incus/type   ┊ Aux/Incus/content-type ┊\n╞═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╡\n┊ incus-volume-1cb987892f6748299a7f894a483e4e7e ┊ 7004 ┊ remote        ┊ DRBD,STORAGE ┊ ok    ┊ incus-volume-v1                                                               ┊ virtual-machines ┊ block                  ┊\n┊ incus-volume-5b680bf0dd6f4b39b784c1c151dd510c ┊ 7002 ┊ remote        ┊ DRBD,STORAGE ┊ ok    ┊ incus-volume-default_fsvol                                                    ┊ custom           ┊ filesystem             ┊\n┊ incus-volume-5d7ee1b9c5224f73b3dd3c3a4ff46fed ┊ 7000 ┊ remote        ┊ DRBD,STORAGE ┊ ok    ┊ incus-volume-198e0b3f6b3685418d9c21b58445686f939596b1fccd8e295191fe515d1ab32c ┊ images           ┊ filesystem             ┊\n┊ incus-volume-9f7ed7091da346e2b7c764348ffada54 ┊ 7001 ┊ remote        ┊ DRBD,STORAGE ┊ ok    ┊ incus-volume-c1                                                               ┊ containers       ┊ filesystem             ┊\n┊ incus-volume-10991980d449418b9b8714b769f030d7 ┊ 7005 ┊ remote        ┊ DRBD,STORAGE ┊ ok    ┊ incus-volume-default_vol                                                      ┊ custom           ┊ block                  ┊\n┊ incus-volume-af0e3529ad514b7b89c7a3a9b8b718ff ┊ 7003 ┊ remote        ┊ DRBD,STORAGE ┊ ok    ┊ incus-volume-dfc28af5f731668509b897ce7eb30d07c5bfe50502da4b2f19421a8a0b05137a ┊ images           ┊ block                  ┊\n╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n```\n\n----------------------------------------\n\nTITLE: Starting Container with Modified Init System\nDESCRIPTION: Sequence of commands to start a container with modified init system and view the console log, showing a successful login to bash shell instead of systemd.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_troubleshoot.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus config set systemd raw.lxc 'lxc.init.cmd = /bin/bash'\n\nincus start systemd\nincus console --show-log systemd\n\nConsole log:\n\n[root@systemd /]#\n```\n\n----------------------------------------\n\nTITLE: Setting Memory Migration Iterations for LXC/Incus Containers\nDESCRIPTION: Specifies the maximum number of transfer operations to perform before stopping the instance during migration. This option is specific to containers and can be updated live.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmigration.incremental.memory.iterations instance:\n  shortdesc: Maximum number of transfer operations\n  condition: container\n  default: 10\n  type: integer\n  liveupdate: \"yes\"\n```\n\n----------------------------------------\n\nTITLE: Scheduling Snapshots at Specific Time for a Storage Volume in Incus\nDESCRIPTION: This command configures automatic snapshots for a custom storage volume in Incus to be taken every day at 6 am using a cron-like syntax.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume set <pool_name> <volume_name> snapshots.schedule \"0 6 * * *\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Incus Server for Metrics API Exposure\nDESCRIPTION: Set the core.metrics_address configuration option to expose only the metrics API endpoint on port 8444.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.metrics_address \":8444\"\n```\n\n----------------------------------------\n\nTITLE: VM Directory Structure\nDESCRIPTION: Shows the basic directory structure for VM images in Incus\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/image_format.md#2025-04-14_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nmetadata.yaml\nrootfs.img\ntemplates/\n```\n\n----------------------------------------\n\nTITLE: Listing Instance Metrics in Markdown Table\nDESCRIPTION: A markdown table listing various instance metrics provided by Incus, including CPU, disk, filesystem, memory, and network metrics. Each metric is described with its name and purpose.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/provided_metrics.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{list-table}\n   :header-rows: 1\n\n* - Metric\n  - Description\n* - `incus_cpu_effective_total`\n  - Total number of effective CPUs\n* - `incus_cpu_seconds_total{cpu=\"<cpu>\", mode=\"<mode>\"}`\n  - Total number of CPU time used (in seconds)\n* - `incus_disk_read_bytes_total{device=\"<dev>\"}`\n  - Total number of bytes read\n* - `incus_disk_reads_completed_total{device=\"<dev>\"}`\n  - Total number of completed reads\n* - `incus_disk_written_bytes_total{device=\"<dev>\"}`\n  - Total number of bytes written\n* - `incus_disk_writes_completed_total{device=\"<dev>\"}`\n  - Total number of completed writes\n* - `incus_filesystem_avail_bytes{device=\"<dev>\",fstype=\"<type>\"}`\n  - Available space (in bytes)\n* - `incus_filesystem_free_bytes{device=\"<dev>\",fstype=\"<type>\"}`\n  - Free space (in bytes)\n* - `incus_filesystem_size_bytes{device=\"<dev>\",fstype=\"<type>\"}`\n  - Size of the file system (in bytes)\n* - `incus_memory_Active_anon_bytes`\n  - Amount of anonymous memory on active LRU list\n* - `incus_memory_Active_bytes`\n  - Amount of memory on active LRU list\n* - `incus_memory_Active_file_bytes`\n  - Amount of file-backed memory on active LRU list\n* - `incus_memory_Cached_bytes`\n  - Amount of cached memory\n* - `incus_memory_Dirty_bytes`\n  - Amount of memory waiting to be written back to the disk\n* - `incus_memory_HugepagesFree_bytes`\n  - Amount of free memory for `hugetlb`\n* - `incus_memory_HugepagesTotal_bytes`\n  - Amount of used memory for `hugetlb`\n* - `incus_memory_Inactive_anon_bytes`\n  - Amount of anonymous memory on inactive LRU list\n* - `incus_memory_Inactive_bytes`\n  - Amount of memory on inactive LRU list\n* - `incus_memory_Inactive_file_bytes`\n  - Amount of file-backed memory on inactive LRU list\n* - `incus_memory_Mapped_bytes`\n  - Amount of mapped memory\n* - `incus_memory_MemAvailable_bytes`\n  - Amount of available memory\n* - `incus_memory_MemFree_bytes`\n  - Amount of free memory\n* - `incus_memory_MemTotal_bytes`\n  - Amount of used memory\n* - `incus_memory_OOM_kills_total`\n  - The number of out-of-memory kills\n* - `incus_memory_RSS_bytes`\n  - Amount of anonymous and swap cache memory\n* - `incus_memory_Shmem_bytes`\n  - Amount of cached file system data that is swap-backed\n* - `incus_memory_Swap_bytes`\n  - Amount of used swap memory\n* - `incus_memory_Unevictable_bytes`\n  - Amount of unevictable memory\n* - `incus_memory_Writeback_bytes`\n  - Amount of memory queued for syncing to disk\n* - `incus_network_receive_bytes_total{device=\"<dev>\"}`\n  - Amount of received bytes on a given interface\n* - `incus_network_receive_drop_total{device=\"<dev>\"}`\n  - Amount of received dropped bytes on a given interface\n* - `incus_network_receive_errs_total{device=\"<dev>\"}`\n  - Amount of received errors on a given interface\n* - `incus_network_receive_packets_total{device=\"<dev>\"}`\n  - Amount of received packets on a given interface\n* - `incus_network_transmit_bytes_total{device=\"<dev>\"}`\n  - Amount of transmitted bytes on a given interface\n* - `incus_network_transmit_drop_total{device=\"<dev>\"}`\n  - Amount of transmitted dropped bytes on a given interface\n* - `incus_network_transmit_errs_total{device=\"<dev>\"}`\n  - Amount of transmitted errors on a given interface\n* - `incus_network_transmit_packets_total{device=\"<dev>\"}`\n  - Amount of transmitted packets on a given interface\n* - `incus_procs_total`\n  - Number of running processes\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Metrics Certificate to Incus Trust Store\nDESCRIPTION: Add the generated metrics certificate to the list of trusted clients in Incus, specifying the type as 'metrics'.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus config trust add-certificate metrics.crt --type=metrics\n```\n\n----------------------------------------\n\nTITLE: Container Directory Structure\nDESCRIPTION: Shows the basic directory structure for container images in Incus\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/image_format.md#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmetadata.yaml\nrootfs/\ntemplates/\n```\n\n----------------------------------------\n\nTITLE: Network Address Set User Configuration in Incus\nDESCRIPTION: Configuration option for custom metadata on network address sets in Incus. This provides free-form key/value storage for network address sets that can be used in search queries.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_38\n\nLANGUAGE: config\nCODE:\n```\n{config:option} user.* network_address_set-common\n:shortdesc: \"Free form user key/value storage\"\n:type: \"string\"\nUser keys can be used in search.\n```\n\n----------------------------------------\n\nTITLE: Network Bridge Core Configuration in Incus\nDESCRIPTION: Configuration options for network bridge core settings in Incus. These control the bridge driver, external interfaces, hardware address, and MTU settings for network bridges.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_40\n\nLANGUAGE: config\nCODE:\n```\n{config:option} bridge.driver network_bridge-common\n:condition: \"-\"\n:default: \"`native`\"\n:shortdesc: \"Bridge driver: `native` or `openvswitch`\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} bridge.external_interfaces network_bridge-common\n:condition: \"-\"\n:default: \"-\"\n:shortdesc: \"Comma-separated list of unconfigured network interfaces to include in the bridge\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} bridge.hwaddr network_bridge-common\n:condition: \"-\"\n:default: \"-\"\n:shortdesc: \"MAC address for the bridge\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} bridge.mtu network_bridge-common\n:condition: \"-\"\n:default: \"`1500`\"\n:shortdesc: \"Bridge MTU (default varies if tunnel in use)\"\n:type: \"integer\"\n\n```\n\n----------------------------------------\n\nTITLE: Switching to Fork's Main Branch in Bash\nDESCRIPTION: Command to checkout the main branch of the developer's fork. This ensures that the developer is working on their own version of the project.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/code.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout myfork/main\n```\n\n----------------------------------------\n\nTITLE: Testing LINSTOR Storage with Incus\nDESCRIPTION: Create volumes and instances in Incus to test the LINSTOR storage setup.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nincus launch images:ubuntu/24.04 c1 --storage remote\nincus storage volume create remote fsvol\nincus storage volume attach remote fsvol c1 /mnt\n\nincus launch images:ubuntu/24.04 v1 --storage remote --vm -c migration.stateful=true\nincus storage volume create remote vol --type block size=42GiB\nincus storage volume attach remote vol v1\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Zone Settings in Incus Projects\nDESCRIPTION: These YAML configuration options define network zone settings for Incus projects. They include DNS nameserver configuration, NAT record generation, peer server settings, and user-defined key/value pairs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_43\n\nLANGUAGE: yaml\nCODE:\n```\ndns.nameservers: \"Comma-separated list of DNS server FQDNs (for NS records)\"\nnetwork.nat: true\npeers.NAME.address: \"IP address of a DNS server\"\npeers.NAME.key: \"TSIG key for the server\"\nuser.*: \"User-provided free-form key/value pairs\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment for Incus After Source Build\nDESCRIPTION: This snippet shows the necessary environment variable settings to use the Incus binaries after building from source. These settings should be added to the user's shell configuration file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"${PATH}:$(go env GOPATH)/bin\"\nexport LD_LIBRARY_PATH=\"$(go env GOPATH)/deps/cowsql/.libs/:$(go env GOPATH)/deps/raft/.libs/:${LD_LIBRARY_PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Example Terminal Session for Incus Recovery Process\nDESCRIPTION: A complete example of recovering instances using the incus admin recover tool, including discovering storage pools, scanning for lost volumes, recreating missing networks, recovering instances, and configuring network interfaces.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/disaster_recovery.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n:input: incus admin recover\n\nThis Incus server currently has the following storage pools:\nWould you like to recover another storage pool? (yes/no) [default=no]: yes\nName of the storage pool: default\nName of the storage backend (btrfs, ceph, cephfs, cephobject, dir, lvm, lvmcluster, zfs): zfs\nSource of the storage pool (block device, volume group, dataset, path, ... as applicable): /var/lib/incus/storage-pools/default/containers\nAdditional storage pool configuration property (KEY=VALUE, empty when done): zfs.pool_name=default\nAdditional storage pool configuration property (KEY=VALUE, empty when done):\nWould you like to recover another storage pool? (yes/no) [default=no]:\nThe recovery process will be scanning the following storage pools:\n - NEW: \"default\" (backend=\"zfs\", source=\"/var/lib/incus/storage-pools/default/containers\")\nWould you like to continue with scanning for lost volumes? (yes/no) [default=yes]: yes\nScanning for unknown volumes...\nThe following unknown volumes have been found:\n - Container \"u1\" on pool \"default\" in project \"default\" (includes 0 snapshots)\n - Container \"u2\" on pool \"default\" in project \"default\" (includes 0 snapshots)\nYou are currently missing the following:\n - Network \"incusbr0\" in project \"default\"\nPlease create those missing entries and then hit ENTER: ^Z\n[1]+  Stopped                 incus admin recover\n:input: incus network create incusbr0\nNetwork incusbr0 created\n:input: fg\nincus admin recover\n\nThe following unknown volumes have been found:\n - Container \"u1\" on pool \"default\" in project \"default\" (includes 0 snapshots)\n - Container \"u2\" on pool \"default\" in project \"default\" (includes 0 snapshots)\nWould you like those to be recovered? (yes/no) [default=no]: yes\nStarting recovery...\n:input: incus list\n+------+---------+------+------+-----------+-----------+\n| NAME |  STATE  | IPV4 | IPV6 |   TYPE    | SNAPSHOTS |\n+------+---------+------+------+-----------+-----------+\n| u1   | STOPPED |      |      | CONTAINER | 0         |\n+------+---------+------+------+-----------+-----------+\n| u2   | STOPPED |      |      | CONTAINER | 0         |\n+------+---------+------+------+-----------+-----------+\n:input: incus profile device add default eth0 nic network=incusbr0 name=eth0\nDevice eth0 added to default\n:input: incus start u1\n:input: incus list\n+------+---------+-------------------+----------------------------------------------+-----------+-----------+\n| NAME |  STATE  |       IPV4        |                    IPV6                      |   TYPE    | SNAPSHOTS |\n+------+---------+-------------------+----------------------------------------------+-----------+-----------+\n| u1   | RUNNING | 192.0.2.49 (eth0) | 2001:db8:8b6:abfe:1266:6aff:fe82:918e (eth0) | CONTAINER | 0         |\n+------+---------+-------------------+----------------------------------------------+-----------+-----------+\n| u2   | STOPPED |                   |                                              | CONTAINER | 0         |\n+------+---------+-------------------+----------------------------------------------+-----------+-----------+\n```\n\n----------------------------------------\n\nTITLE: Setting Up an SSH SFTP Listener for Incus Instance\nDESCRIPTION: Commands to set up an SSH SFTP listener for an Incus instance. This allows connecting with any SFTP client to access instance files, with options for specifying network address and port.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_access_files.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus file mount <instance_name> [--listen <address>:<port>]\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file mount my-instance\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file mount my-instance --listen 192.0.2.50:2222\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus file mount my-instance --listen 192.0.2.50:0\n```\n\n----------------------------------------\n\nTITLE: Editing Existing TLS Certificate for Project Confinement in Incus\nDESCRIPTION: Command to edit an existing TLS certificate to confine access to specific projects in Incus. It allows modifying the 'restricted' flag and specifying accessible projects.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_confine.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config trust edit <fingerprint>\n```\n\n----------------------------------------\n\nTITLE: OVN Logical Switch State\nDESCRIPTION: Adds LogicalSwitch field to NetworkStateOVN struct in the network state API to retrieve OVN logical switch name.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_8\n\n\n\n----------------------------------------\n\nTITLE: Configuring Default Architecture for Images in Incus\nDESCRIPTION: Specifies the default architecture to use in a mixed-architecture cluster. This setting determines which architecture is chosen when multiple options are available.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_73\n\nLANGUAGE: config\nCODE:\n```\n{config:option} images.default_architecture server-images\n:shortdesc: \"Default architecture to use in a mixed-architecture cluster\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Verifying LINSTOR Resource Groups\nDESCRIPTION: List and verify the LINSTOR resource groups created by Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_13\n\nLANGUAGE: terminal\nCODE:\n```\n╭──────────────────────────────────────────────────────────────────────────────────────╮\n┊ ResourceGroup ┊ SelectFilter              ┊ VlmNrs ┊ Description                     ┊\n╞══════════════════════════════════════════════════════════════════════════════════════╡\n┊ DfltRscGrp    ┊ PlaceCount: 2             ┊        ┊                                 ┊\n╞┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╡\n┊ remote        ┊ PlaceCount: 2             ┊        ┊ Resource group managed by Incus ┊\n┊               ┊ StoragePool(s): nvme_pool ┊        ┊                                 ┊\n╰──────────────────────────────────────────────────────────────────────────────────────╯\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloud-Init Options for Incus Instances (YAML)\nDESCRIPTION: Defines cloud-init related configuration options for Incus instances, including network configuration, user data, and vendor data settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ncloud-init.network-config:\n  condition: \"If supported by image\"\n  defaultdesc: \"`DHCP on eth0`\"\n  liveupdate: \"no\"\n  shortdesc: \"Network configuration for `cloud-init`\"\n  type: \"string\"\n\ncloud-init.user-data:\n  condition: \"If supported by image\"\n  defaultdesc: \"`#cloud-config`\"\n  liveupdate: \"no\"\n  shortdesc: \"User data for `cloud-init`\"\n  type: \"string\"\n\ncloud-init.vendor-data:\n  condition: \"If supported by image\"\n  defaultdesc: \"`#cloud-config`\"\n  liveupdate: \"no\"\n  shortdesc: \"Vendor data for `cloud-init`\"\n  type: \"string\"\n\nuser.network-config:\n  condition: \"If supported by image\"\n  defaultdesc: \"`DHCP on eth0`\"\n  liveupdate: \"no\"\n  shortdesc: \"Legacy version of `cloud-init.network-config`\"\n  type: \"string\"\n\nuser.user-data:\n  condition: \"If supported by image\"\n  defaultdesc: \"`#cloud-config`\"\n  liveupdate: \"no\"\n  shortdesc: \"Legacy version of `cloud-init.user-data`\"\n  type: \"string\"\n\nuser.vendor-data:\n  condition: \"If supported by image\"\n  defaultdesc: \"`#cloud-config`\"\n  liveupdate: \"no\"\n  shortdesc: \"Legacy version of `cloud-init.vendor-data`\"\n  type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: OpenFGA Permissions Configuration\nDESCRIPTION: Settings for OpenFGA authorization system including API endpoint, token, and store ID configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_97\n\nLANGUAGE: yaml\nCODE:\n```\nopenfga.api.token: \"\"\nopenfga.api.url: \"\"\nopenfga.store.id: \"\"\n```\n\n----------------------------------------\n\nTITLE: Querying Instance Information with Incus API\nDESCRIPTION: Shows how to retrieve detailed information about an instance using the Incus API.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances/<instance_name>\n```\n\n----------------------------------------\n\nTITLE: Checking cloud-init Status in Terminal\nDESCRIPTION: Terminal command example showing how to check cloud-init status with the --wait flag, which waits until cloud-init processing is complete before returning the status.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n:input: cloud-init status --wait\n:user: root\n:host: instance\n\n.....................................\nstatus: done\n```\n\n----------------------------------------\n\nTITLE: Installing Incus Client on Windows via Winget\nDESCRIPTION: This snippet demonstrates how to install the Incus client on Windows using the Winget package manager. It assumes Winget is already installed.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nwinget install LinuxContainers.Incus\n```\n\n----------------------------------------\n\nTITLE: Network Bridge BGP Configuration in Incus\nDESCRIPTION: Configuration options for BGP (Border Gateway Protocol) on network bridges in Incus. These control next-hop advertisement for IPv4 and IPv6 prefixes in BGP environments.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_39\n\nLANGUAGE: config\nCODE:\n```\n{config:option} bgp.ipv4.nexthop network_bridge-common\n:condition: \"BGP server\"\n:default: \"local address\"\n:shortdesc: \"Override the next-hop for advertised prefixes\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} bgp.ipv6.nexthop network_bridge-common\n:condition: \"BGP server\"\n:default: \"local address\"\n:shortdesc: \"Override the next-hop for advertised prefixes\"\n:type: \"string\"\n\n```\n\n----------------------------------------\n\nTITLE: Running the incus-migrate Tool\nDESCRIPTION: Basic command to run the incus-migrate tool, which guides the user through the process of creating an Incus instance from an existing disk or image.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/import_machines_to_instances.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo ./bin.linux.incus-migrate\n```\n\n----------------------------------------\n\nTITLE: Sample Output of lxc-to-incus Migration Process\nDESCRIPTION: Example terminal output showing the steps performed during migration of an LXC container to Incus, including configuration parsing, validation, and creation of the new container.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_6\n\nLANGUAGE: terminal\nCODE:\n```\n:input: sudo lxc-to-incus --containers lxc1\n\nParsing LXC configuration\nChecking for unsupported LXC configuration keys\nChecking for existing containers\nChecking whether container has already been migrated\nValidating whether incomplete AppArmor support is enabled\nValidating whether mounting a minimal /dev is enabled\nValidating container rootfs\nProcessing network configuration\nProcessing storage configuration\nProcessing environment configuration\nProcessing container boot configuration\nProcessing container apparmor configuration\nProcessing container seccomp configuration\nProcessing container SELinux configuration\nProcessing container capabilities configuration\nProcessing container architecture configuration\nCreating container\nTransferring container: lxc1: ...\nContainer 'lxc1' successfully created\n```\n\n----------------------------------------\n\nTITLE: Assigning a Cluster Member to Multiple Groups in Incus\nDESCRIPTION: This command assigns the cluster member 'server1' to both the 'default' and 'gpu' groups.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_groups.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus cluster group assign server1 default,gpu\n```\n\n----------------------------------------\n\nTITLE: Configuring UFW for Incus Network Bridge\nDESCRIPTION: UFW commands to allow traffic to and from the Incus network bridge, including forwarded traffic.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ufw allow in on <network_bridge>\nsudo ufw route allow in on <network_bridge>\nsudo ufw route allow out on <network_bridge>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Instance Configuration via API in Incus\nDESCRIPTION: API request to get the current configuration of an instance including properties, options, and devices using a GET request.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nincus query /1.0/instances/<instance_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Password in Incus\nDESCRIPTION: Specifies the password used for Loki authentication. This global setting enables secure access to the Loki logging service.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_90\n\nLANGUAGE: config\nCODE:\n```\n{config:option} loki.auth.password server-loki\n:scope: \"global\"\n:shortdesc: \"Password used for Loki authentication\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Disk USB Bus Support\nDESCRIPTION: Adds usb as a valid value for io.bus configuration on disk devices.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_14\n\n\n\n----------------------------------------\n\nTITLE: Configuring Network Load Balancer Health Checks in Incus\nDESCRIPTION: These YAML configuration options define health check settings for network load balancers in Incus projects. They control whether health checks are performed, failure and success thresholds, check intervals, and timeouts.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_42\n\nLANGUAGE: yaml\nCODE:\n```\nhealthcheck: false\nhealthcheck.failure_count: 3\nhealthcheck.interval: 10\nhealthcheck.success_count: 3\nhealthcheck.timeout: 30\nuser.*: \"Free form user key/value storage\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Miscellaneous Options for Incus Instances (YAML)\nDESCRIPTION: Defines various miscellaneous configuration options for Incus instances, including agent settings, cluster evacuation, environment variables, and user-defined key/value storage.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nagent.nic_config:\n  condition: \"virtual machine\"\n  defaultdesc: \"`false`\"\n  liveupdate: \"no\"\n  shortdesc: \"Whether to use the name and MTU of the default network interfaces\"\n  type: \"bool\"\n\ncluster.evacuate:\n  defaultdesc: \"`auto`\"\n  liveupdate: \"no\"\n  shortdesc: \"What to do when evacuating the instance\"\n  type: \"string\"\n\nenvironment.*:\n  liveupdate: \"yes\"\n  shortdesc: \"Free-form environment key/value\"\n  type: \"string\"\n\nlinux.kernel_modules:\n  condition: \"container\"\n  liveupdate: \"yes\"\n  shortdesc: \"Kernel modules to load before starting the instance\"\n  type: \"string\"\n\nlinux.sysctl.*:\n  condition: \"container\"\n  liveupdate: \"no\"\n  shortdesc: \"Override for the corresponding `sysctl` setting in the container\"\n  type: \"string\"\n\nsmbios11.*:\n  liveupdate: \"yes\"\n  shortdesc: \"Free-form `SMBIOS Type 11` key/value\"\n  type: \"string\"\n\nuser.*:\n  liveupdate: \"yes\"\n  shortdesc: \"Free-form user key/value storage\"\n  type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Listing Supported APIs in Incus Instance-Host Communication\nDESCRIPTION: GET request to the root endpoint returns a list of supported API endpoint URLs, typically containing '/1.0'.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/dev-incus.md#2025-04-14_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n    \"/1.0\"\n]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Incus on OpenSUSE\nDESCRIPTION: This snippet demonstrates the commands to install the necessary development resources and runtime dependencies for building and running Incus on OpenSUSE Tumbleweed.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nsudo zypper install autoconf automake git go libacl-devel libcap-devel liblxc1 liblxc-devel sqlite3-devel libtool libudev-devel liblz4-devel libuv-devel make pkg-config tcl\n\nsudo zypper install dnsmasq squashfs xz rsync tar attr acl qemu qemu-img qemu-spice qemu-hw-display-virtio-gpu-pci iptables ebtables nftables\n\nsudo zypper install libnvidia-container-tools lxc\n```\n\n----------------------------------------\n\nTITLE: Raw ID Mapping Configuration for Unprivileged Containers\nDESCRIPTION: Configuration for raw ID mapping in unprivileged containers, allowing specification of user and group ID mappings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n{config:option} raw.idmap instance-raw\n:condition: \"unprivileged container\"\n:liveupdate: \"no\"\n:shortdesc: \"Raw idmap configuration\"\n:type: \"blob\"\n```\n\n----------------------------------------\n\nTITLE: Resource Limits Configuration for CPU Usage\nDESCRIPTION: Configuration options for controlling CPU allocation and usage limits for instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n{config:option} limits.cpu instance-resource-limits\n:defaultdesc: \"1 (VMs)\"\n:liveupdate: \"yes\"\n:shortdesc: \"Which CPUs to expose to the instance\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Removing QEMU Device Configuration\nDESCRIPTION: Example demonstrating how to remove a device section from QEMU configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nraw.qemu.conf: |-\n    [device \"qemu_gpu\"]\n```\n\n----------------------------------------\n\nTITLE: Importing an ISO Image as a Storage Volume in Incus\nDESCRIPTION: This command imports an ISO image into Incus as a storage volume for later use with a VM.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_create.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume import <pool> <path-to-image.iso> iso-volume --type=iso\n```\n\n----------------------------------------\n\nTITLE: Kernel Resource Limits Configuration in Incus\nDESCRIPTION: Configuration options for controlling kernel resource limits in Incus instances. These settings map to Linux resource limits (rlimits) and allow fine-grained control over process resources.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_37\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.as kernel-limits\n:resource: \"`RLIMIT_AS`\"\n:shortdesc: \"Maximum size of the process's virtual memory\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.core kernel-limits\n:resource: \"`RLIMIT_CORE`\"\n:shortdesc: \"Maximum size of the process's core dump file\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.cpu kernel-limits\n:resource: \"`RLIMIT_CPU`\"\n:shortdesc: \"Limit in seconds on the amount of CPU time the process can consume\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.data kernel-limits\n:resource: \"`RLIMIT_DATA`\"\n:shortdesc: \"Maximum size of the process's data segment\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.fsize kernel-limits\n:resource: \"`RLIMIT_FSIZE`\"\n:shortdesc: \"Maximum size of files the process may create\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.locks kernel-limits\n:resource: \"`RLIMIT_LOCKS`\"\n:shortdesc: \"Limit on the number of file locks that this process may establish\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.memlock kernel-limits\n:resource: \"`RLIMIT_MEMLOCK`\"\n:shortdesc: \"Limit on the number of bytes of memory that the process may lock in RAM\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.nice kernel-limits\n:resource: \"`RLIMIT_NICE`\"\n:shortdesc: \"Maximum value to which the process's nice value can be raised\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.nofile kernel-limits\n:resource: \"`RLIMIT_NOFILE`\"\n:shortdesc: \"Maximum number of open files for the process\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.nproc kernel-limits\n:resource: \"`RLIMIT_NPROC`\"\n:shortdesc: \"Maximum number of processes that can be created for the user of the calling process\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.rtprio kernel-limits\n:resource: \"`RLIMIT_RTPRIO`\"\n:shortdesc: \"Maximum value on the real-time-priority that may be set for this process\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} limits.kernel.sigpending kernel-limits\n:resource: \"`RLIMIT_SIGPENDING`\"\n:shortdesc: \"Limit on the number of bytes of memory that the process may lock in RAM\"\n:type: \"string\"\n\n```\n\n----------------------------------------\n\nTITLE: Creating an SR-IOV InfiniBand Device in Incus\nDESCRIPTION: This command adds an SR-IOV InfiniBand device to an Incus instance. It passes a virtual function of an SR-IOV-enabled physical network device into the instance. Note that the number of virtual functions must be pre-configured in the kernel module.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_infiniband.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> infiniband nictype=sriov parent=<sriov_enabled_device>\n```\n\n----------------------------------------\n\nTITLE: Deleting Instances with Incus API\nDESCRIPTION: Shows how to permanently delete an instance using the Incus API by sending a DELETE request.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_manage.md#2025-04-14_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nincus query --request DELETE /1.0/instances/<instance_name>\n```\n\n----------------------------------------\n\nTITLE: Running Commands with cloud-init in YAML\nDESCRIPTION: YAML configuration example for executing a command (touch /run/cloud.init.ran) during first boot using the cloud-init runcmd directive.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.user-data: |\n    #cloud-config\n    runcmd:\n      - [touch, /run/cloud.init.ran]\n```\n\n----------------------------------------\n\nTITLE: TPM Configuration Options Include Directive\nDESCRIPTION: Directive to include TPM device configuration options from an external file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_tpm.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} ../config_options.txt\n    :start-after: <!-- config group tpm-common start -->\n    :end-before: <!-- config group tpm-common end -->\n```\n```\n\n----------------------------------------\n\nTITLE: USB Device Settings\nDESCRIPTION: Configuration options for USB devices including bus information, device identification, and permissions.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_5\n\nLANGUAGE: config\nCODE:\n```\nbusnum devices-usb\ndevnum devices-usb\ngid devices-usb\nmode devices-usb\nproductid devices-usb\nrequired devices-usb\nserial devices-usb\nuid devices-usb\nvendorid devices-usb\n```\n\n----------------------------------------\n\nTITLE: Extended Format for External Interfaces in Incus Bridge Networks\nDESCRIPTION: This snippet explains the extended format for the bridge.external_interfaces option in Incus. It allows for the creation of missing VLAN interfaces using a specific format: <interfaceName>/<parentInterfaceName>/<vlanId>.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_bridge.md#2025-04-14_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nThe `bridge.external_interfaces` option supports an extended format allowing the creation of missing VLAN interfaces.\nThe extended format is `<interfaceName>/<parentInterfaceName>/<vlanId>`.\nWhen the external interface is added to the list with the extended format, the system will automatically create the interface upon the network's creation and subsequently delete it when the network is terminated. The system verifies that the `<interfaceName>` does not already exist. If the interface name is in use with a different parent or VLAN ID, or if the creation of the interface is unsuccessful, the system will revert with an error message.\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in Specific Incus Project\nDESCRIPTION: This command lists all instances in a specific Incus project. It uses the --project flag to target a project without switching to it.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_work.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus list --project my-project\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN Central Logging for Incus\nDESCRIPTION: YAML configuration to set up OVN central components (northd, north-bound, and south-bound) logging to Incus syslog socket.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nOVN_CTL_OPTS=\" \\\n   --ovn-northd-log='-vsyslog:info --syslog-method=unix:/var/lib/incus/syslog.socket' \\\n   --ovn-nb-log='-vsyslog:info --syslog-method=unix:/var/lib/incus/syslog.socket' \\\n   --ovn-sb-log='-vsyslog:info --syslog-method=unix:/var/lib/incus/syslog.socket'\"\n```\n\n----------------------------------------\n\nTITLE: Preparing Certificates for Prometheus\nDESCRIPTION: Copy the necessary certificates to a directory accessible by Prometheus and set appropriate permissions.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmkdir /etc/prometheus/tls/\n\ncp metrics.crt metrics.key /etc/prometheus/tls/\n\ncp /var/lib/incus/server.crt /etc/prometheus/tls/\n\nchown -R prometheus:prometheus /etc/prometheus/tls\n```\n\n----------------------------------------\n\nTITLE: Configuring Security Restrictions for Incus Projects\nDESCRIPTION: These YAML configuration options define security restrictions for Incus projects. They control access to sensitive features, backups, cluster targeting, container privileges, device usage, and more.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_46\n\nLANGUAGE: yaml\nCODE:\n```\nrestricted: false\nrestricted.backups: \"block\"\nrestricted.cluster.groups: \"Cluster groups that can be targeted\"\nrestricted.cluster.target: \"block\"\nrestricted.containers.interception: \"block\"\nrestricted.containers.lowlevel: \"block\"\nrestricted.containers.nesting: \"block\"\nrestricted.containers.privilege: \"unprivileged\"\nrestricted.devices.disk: \"managed\"\nrestricted.devices.disk.paths: \"Which `source` can be used for `disk` devices\"\nrestricted.devices.gpu: \"block\"\nrestricted.devices.infiniband: \"block\"\nrestricted.devices.nic: \"Whether to prevent using devices of type `nic`\"\n```\n\n----------------------------------------\n\nTITLE: Instance Cloud-Init and Cluster Configuration in Incus\nDESCRIPTION: Configuration options for cloud-init integration and cluster-related settings in Incus. These control instance cloud initialization and placement within cluster groups.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_31\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.cloud_init.instance-id instance-volatile\n:shortdesc: \"`instance-id` (UUID) exposed to `cloud-init`\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.cluster.group instance-volatile\n:shortdesc: \"The original cluster group for the instance\"\n:type: \"string\"\nThe cluster group(s) that the instance was restricted to at creation time.\nThis is used during re-scheduling events like an evacuation to keep the instance within the requested set.\n```\n\n----------------------------------------\n\nTITLE: Editing Network Peer Relationships - Incus CLI\nDESCRIPTION: Command to edit an existing network peering configuration in YAML format.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_peers.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus network peer edit <network> <peering_name>\n```\n\n----------------------------------------\n\nTITLE: Adding Incus Remote with External Public Address\nDESCRIPTION: Command to add an Incus remote specifying its external public address when the server is behind NAT.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/authentication.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus remote add <name> <IP_address>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS API Address in Incus\nDESCRIPTION: Specifies the address to bind for the remote API over HTTPS. This local setting controls where the Incus API server listens for secure connections.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_54\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.https_address server-core\n:scope: \"local\"\n:shortdesc: \"Address to bind for the remote API (HTTPS)\"\n:type: \"string\"\nSee {ref}`server-expose`.\n```\n\n----------------------------------------\n\nTITLE: Operation Metadata Structure in JavaScript\nDESCRIPTION: Illustrates the detailed structure of operation metadata in the Incus API, including operation ID, class, timestamps, status, resources, and specific operation metadata.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"id\": \"a40f5541-5e98-454f-b3b6-8a51ef5dbd3c\",           // UUID of the operation\n    \"class\": \"websocket\",                                   // Class of the operation (task, websocket or token)\n    \"created_at\": \"2015-11-17T22:32:02.226176091-05:00\",    // When the operation was created\n    \"updated_at\": \"2015-11-17T22:32:02.226176091-05:00\",    // Last time the operation was updated\n    \"status\": \"Running\",                                    // String version of the operation's status\n    \"status_code\": 103,                                     // Integer version of the operation's status (use this rather than status)\n    \"resources\": {                                          // Dictionary of resource types (container, snapshots, images) and affected resources\n      \"instances\": [\n        \"/1.0/instances/test\"\n      ]\n    },\n    \"metadata\": {                                           // Metadata specific to the operation in question (in this case, exec)\n      \"fds\": {\n        \"0\": \"2a4a97af81529f6608dca31f03a7b7e47acc0b8dc6514496eb25e325f9e4fa6a\",\n        \"control\": \"5b64c661ef313b423b5317ba9cb6410e40b705806c28255f601c0ef603f079a7\"\n      }\n    },\n    \"may_cancel\": false,                                    // Whether the operation can be canceled (DELETE over REST)\n    \"err\": \"\"                                               // The error string should the operation have failed\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Kernel Resource Limits for Incus Containers\nDESCRIPTION: This option enables setting kernel limits on an Incus container, such as restricting the number of open files. It applies to containers only and cannot be updated live.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/instance_options.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlimits.kernel.*: \"string\"\n```\n\n----------------------------------------\n\nTITLE: USB Device Configuration Include Block\nDESCRIPTION: An include directive that pulls in USB device configuration options from an external file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_usb.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n{include} ../config_options.txt\n    :start-after: <!-- config group devices-usb start -->\n    :end-before: <!-- config group devices-usb end -->\n```\n\n----------------------------------------\n\nTITLE: Image Requirements Configuration\nDESCRIPTION: System requirements for images including cgroup version and CD-ROM agent specifications.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_6\n\nLANGUAGE: config\nCODE:\n```\nrequirements.cdrom_agent image-requirements\nrequirements.cgroup image-requirements\n```\n\n----------------------------------------\n\nTITLE: Configuring Host Name Generation for LXC/Incus Instances\nDESCRIPTION: Determines how to generate a host name for instances. Can be set to 'random' for a random host interface name or 'mac' to generate a name based on the MAC address.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ninstances.nic.host_name:\n  shortdesc: How to generate a host name\n  type: string\n  scope: global\n  default: \"random\"\n```\n\n----------------------------------------\n\nTITLE: Server Logging Configuration\nDESCRIPTION: Implements new logging configuration system for the server with support for multiple logging targets, including migration of existing loki configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_18\n\n\n\n----------------------------------------\n\nTITLE: Creating Privileged Benchmark Containers\nDESCRIPTION: Example command for creating 10 privileged containers using the latest Ubuntu image for benchmarking purposes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus-benchmark init --count 10 --privileged\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Requirements in Incus (YAML)\nDESCRIPTION: Defines configuration options for image requirements in Incus, including settings for nesting, privileged mode, and secure boot compatibility.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nrequirements.nesting:\n  shortdesc: \"If set to `true`, indicates that the image cannot work without nesting enabled.\"\n  type: \"bool\"\n\nrequirements.privileged:\n  shortdesc: \"If set to `false`, indicates that the image cannot work as a privileged container.\"\n  type: \"bool\"\n\nrequirements.secureboot:\n  shortdesc: \"If set to `false`, indicates that the image cannot boot under secure boot.\"\n  type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: Network Bridge DNS Configuration in Incus\nDESCRIPTION: Configuration options for DNS settings on network bridges in Incus. These control domain names, DNS registration modes, nameservers, search domains, and zone configuration for both forward and reverse DNS.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_41\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.domain network_bridge-common\n:condition: \"-\"\n:default: \"`incus`\"\n:shortdesc: \"Domain to advertise to DHCP clients and use for DNS resolution\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.mode network_bridge-common\n:condition: \"-\"\n:default: \"`managed`\"\n:shortdesc: \"DNS registration mode: none for no DNS record, managed for Incus-generated static records or dynamic for client-generated records\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.nameservers network_bridge-common\n:condition: \"-\"\n:default: \"IPv4 and IPv6 address\"\n:shortdesc: \"DNS server IPs to advertise to DHCP clients and via Router Advertisements. Both IPv4 and IPv6 addresses get pushed via DHCP, and IPv6 addresses are also advertised as RDNSS via RA.\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.search network_bridge-common\n:condition: \"-\"\n:default: \"-\"\n:shortdesc: \"Full comma-separated domain search list, defaulting to `dns.domain` value\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.zone.forward network_bridge-common\n:condition: \"-\"\n:default: \"`managed`\"\n:shortdesc: \"Comma-separated list of DNS zone names for forward DNS records\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.zone.reverse.ipv4 network_bridge-common\n:condition: \"-\"\n:default: \"`managed`\"\n:shortdesc: \"DNS zone name for IPv4 reverse DNS records\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} dns.zone.reverse.ipv6 network_bridge-common\n:condition: \"-\"\n:default: \"`managed`\"\n:shortdesc: \"DNS zone name for IPv6 reverse DNS records\"\n```\n\n----------------------------------------\n\nTITLE: Cluster Configuration Table - Member Roles\nDESCRIPTION: Table listing the different roles that can be assigned to Incus cluster members, indicating whether they are automatically assigned and their specific purposes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/clustering.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Role                  | Automatic     | Description |\n| :---                  | :--------     | :---------- |\n| `database`            | yes           | Voting member of the distributed database |\n| `database-leader`     | yes           | Current leader of the distributed database |\n| `database-standby`    | yes           | Stand-by (non-voting) member of the distributed database |\n| `event-hub`           | no            | Exchange point (hub) for the internal Incus events (requires at least two) |\n| `ovn-chassis`         | no            | Uplink gateway candidate for OVN networks |\n```\n\n----------------------------------------\n\nTITLE: Adding Restricted TLS Client Certificate for Project Access in Incus\nDESCRIPTION: Commands to add a restricted TLS client certificate for specific project access in Incus. It shows two methods: using token authentication and directly adding a client certificate.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/projects_confine.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config trust add --projects <project_name> --restricted\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus config trust add-certificate <certificate_file> --projects <project_name> --restricted\n```\n\n----------------------------------------\n\nTITLE: Configuring Syscall Interception for Incus Containers\nDESCRIPTION: These options control syscall interception and filtering for Incus containers, including allowing or denying specific syscalls and handling various system operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_20\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.allow instance-security\n:condition: \"container\"\n:liveupdate: \"no\"\n:shortdesc: \"List of syscalls to allow\"\n:type: \"string\"\nA `\\n`-separated list of syscalls to allow.\nThis list must be mutually exclusive with `security.syscalls.deny*`.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.deny instance-security\n:condition: \"container\"\n:liveupdate: \"no\"\n:shortdesc: \"List of syscalls to deny\"\n:type: \"string\"\nA `\\n`-separated list of syscalls to deny.\nThis list must be mutually exclusive with `security.syscalls.allow`.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.deny_compat instance-security\n:condition: \"container\"\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to block `compat_*` syscalls (`x86_64` only)\"\n:type: \"bool\"\nOn `x86_64`, this option controls whether to block `compat_*` syscalls.\nOn other architectures, the option is ignored.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} security.syscalls.deny_default instance-security\n:condition: \"container\"\n:defaultdesc: \"`true`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to enable the default syscall deny\"\n:type: \"bool\"\n\n```\n\n----------------------------------------\n\nTITLE: Configuration Note Block in YAML\nDESCRIPTION: YAML note block explaining the requirement that all Incus nodes must be LINSTOR satellite nodes, with details about diskless satellites and storage access.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_linstor.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n{note}\nLINSTOR can only move and mount volumes between its satellite nodes. Therefore, to ensure that all Incus cluster members can access volumes, all Incus nodes must also be LINSTOR satellite nodes. In other words, each node running the `incus` service should also run an `linstor-satellite` service.\n\nNote, however, that this does not mean that Incus nodes must also provide storage. It is still possible to use LINSTOR while using separated storage and compute nodes by deploying \"diskless\" satellites on Incus nodes. Diskless nodes do not provide storage, but are still able to mount DRBD devices and perform IO over the network.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Open vSwitch for OVN Cluster\nDESCRIPTION: Command to configure Open vSwitch with external IDs for OVN remote, encapsulation type, and IP in a cluster setup.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo ovs-vsctl set open_vswitch . \\\n   external_ids:ovn-remote=tcp:<server_1>:6642,tcp:<server_2>:6642,tcp:<server_3>:6642 \\\n   external_ids:ovn-encap-type=geneve \\\n   external_ids:ovn-encap-ip=<local>\n```\n\n----------------------------------------\n\nTITLE: Listing LINSTOR Snapshots\nDESCRIPTION: This command displays the list of snapshots in LINSTOR, showing resource names, snapshot names, node names, volumes, creation dates, and states.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_linstor_internals.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# linstor snapshot list\n```\n\n----------------------------------------\n\nTITLE: Configuring Snapshot Options for Incus Instances\nDESCRIPTION: These options control snapshot management for Incus instances, including expiration, naming patterns, and scheduling.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_24\n\nLANGUAGE: config\nCODE:\n```\n{config:option} snapshots.expiry instance-snapshots\n:liveupdate: \"no\"\n:shortdesc: \"When snapshots are to be deleted\"\n:type: \"string\"\nSpecify an expression like `1M 2H 3d 4w 5m 6y`.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} snapshots.pattern instance-snapshots\n:defaultdesc: \"`snap%d`\"\n:liveupdate: \"no\"\n:shortdesc: \"Template for the snapshot name\"\n:type: \"string\"\nSpecify a Pongo2 template string that represents the snapshot name.\nThis template is used for scheduled snapshots and for unnamed snapshots.\n\nSee {ref}`instance-options-snapshots-names` for more information.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} snapshots.schedule instance-snapshots\n:defaultdesc: \"empty\"\n:liveupdate: \"no\"\n:shortdesc: \"Schedule for automatic instance snapshots\"\n:type: \"string\"\nSpecify either a cron expression (`<minute> <hour> <dom> <month> <dow>`), a comma-and-space-separated list of schedule aliases (`@startup`, `@hourly`, `@daily`, `@midnight`, `@weekly`, `@monthly`, `@annually`, `@yearly`), or leave empty to disable automatic snapshots.\n\nNote that unlike most other configuration keys, this one must be comma-and-space-separated and not just comma-separated as cron expression can themselves contain commas.\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} snapshots.schedule.stopped instance-snapshots\n:defaultdesc: \"`false`\"\n:liveupdate: \"no\"\n:shortdesc: \"Whether to automatically snapshot stopped instances\"\n:type: \"bool\"\n\n```\n\n----------------------------------------\n\nTITLE: Storage Driver Navigation Structure\nDESCRIPTION: Table of contents for storage driver documentation pages showing the available storage driver types supported by Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_drivers.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{toctree}\n:maxdepth: 1\n\nstorage_dir\nstorage_btrfs\nstorage_lvm\nstorage_zfs\nstorage_ceph\nstorage_cephfs\nstorage_cephobject\nstorage_linstor\n```\n\n----------------------------------------\n\nTITLE: Migrating All LXC Containers to Incus\nDESCRIPTION: Command to migrate all existing LXC containers to Incus. Requires sudo privileges and containers must be stopped before migration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/migrate_from_lxc.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo lxc-to-incus --all\n```\n\n----------------------------------------\n\nTITLE: Network DNS Nameservers Configuration\nDESCRIPTION: Implements dns.nameservers configuration for bridged and OVN networks to specify IPv4 and IPv6 DNS servers for DHCP and Router Advertisements.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_9\n\n\n\n----------------------------------------\n\nTITLE: OCI Container Configuration\nDESCRIPTION: Implements OCI container configuration options including entrypoint, working directory, and UID/GID settings, initialized from OCI image values.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_16\n\n\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Allowed Headers in Incus\nDESCRIPTION: Sets the Access-Control-Allow-Headers HTTP header value for CORS. This global setting controls which headers can be used in cross-origin requests.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_56\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.https_allowed_headers server-core\n:scope: \"global\"\n:shortdesc: \"`Access-Control-Allow-Headers` HTTP header value\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Server Address in Incus\nDESCRIPTION: Specifies the address to bind the authoritative DNS server to. This local setting controls where the Incus DNS server listens for requests.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_53\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.dns_address server-core\n:scope: \"local\"\n:shortdesc: \"Address to bind the authoritative DNS server to\"\n:type: \"string\"\nSee {ref}`network-dns-server`.\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Configuration Option Example in LXC/Incus\nDESCRIPTION: A detailed example showing various formatting options, including bold text, code snippets, paragraphs, lists, and tables in the configuration option documentation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntest2 something:\n  shortdesc: Hello! **bold** and `code`\n```\n\n----------------------------------------\n\nTITLE: Configuring Existing Device Options via CLI in Incus\nDESCRIPTION: Command to update the configuration options of an existing device that has already been added to an instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_configure.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nincus config device set <instance_name> <device_name> <device_option_key>=<device_option_value> <device_option_key>=<device_option_value> ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Buckets Address in Incus\nDESCRIPTION: Specifies the address to bind the storage object server to over HTTPS. This local setting controls where the S3-compatible storage API is available.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_67\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.storage_buckets_address server-core\n:scope: \"local\"\n:shortdesc: \"Address to bind the storage object server to (HTTPS)\"\n:type: \"string\"\nSee {ref}`howto-storage-buckets`.\n```\n\n----------------------------------------\n\nTITLE: Configuring NVIDIA Options for Incus Containers (YAML)\nDESCRIPTION: Specifies NVIDIA-related configuration options for Incus containers, including driver capabilities, CUDA requirements, and runtime settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nnvidia.driver.capabilities:\n  condition: \"container\"\n  defaultdesc: \"`compute,utility`\"\n  liveupdate: \"no\"\n  shortdesc: \"What driver capabilities the instance needs\"\n  type: \"string\"\n\nnvidia.require.cuda:\n  condition: \"container\"\n  liveupdate: \"no\"\n  shortdesc: \"Required CUDA version\"\n  type: \"string\"\n\nnvidia.require.driver:\n  condition: \"container\"\n  liveupdate: \"no\"\n  shortdesc: \"Required driver version\"\n  type: \"string\"\n\nnvidia.runtime:\n  condition: \"container\"\n  defaultdesc: \"`false`\"\n  liveupdate: \"no\"\n  shortdesc: \"Whether to pass the host NVIDIA and CUDA runtime libraries into the instance\"\n  type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: Network Address Sets API\nDESCRIPTION: Implements network address sets concept under /1.0/network-address-sets API endpoint.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_17\n\n\n\n----------------------------------------\n\nTITLE: Instance Evacuation and ID Mapping in Incus\nDESCRIPTION: Configuration options for instance evacuation tracking and ID mapping in Incus. These manage record-keeping for evacuated instances and control user/group ID mapping for containers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_33\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.evacuate.origin instance-volatile\n:shortdesc: \"The origin of the evacuated instance\"\n:type: \"string\"\nThe cluster member that the instance lived on before evacuation.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.idmap.base instance-volatile\n:shortdesc: \"The first ID in the instance's primary idmap range\"\n:type: \"integer\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.idmap.current instance-volatile\n:shortdesc: \"The idmap currently in use by the instance\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.idmap.next instance-volatile\n:shortdesc: \"The idmap to use the next time the instance starts\"\n:type: \"string\"\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Instance Name in Incus\nDESCRIPTION: Specifies the name to use as the instance field in Loki events. Default is the local server or cluster member name. This allows using more relevant identifiers like cluster IDs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_81\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.instance server-logging\n:defaultdesc: \"Local server host name or cluster member name\"\n:scope: \"global\"\n:shortdesc: \"Name to use as the instance field in Loki events.\"\n:type: \"string\"\nThis allows replacing the default instance value (server host name) by a more relevant value like a cluster identifier.\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Rebalance Interval Option in Incus\nDESCRIPTION: Defines the time interval (in minutes) for considering re-balancing operations in an Incus cluster. Setting to 0 disables rebalancing completely. This is a global setting.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_47\n\nLANGUAGE: config\nCODE:\n```\n{config:option} cluster.rebalance.interval server-cluster\n:defaultdesc: \"`0`\"\n:scope: \"global\"\n:shortdesc: \"How often (in minutes) to consider re-balancing things. 0 to disable (default)\"\n:type: \"integer\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Unix Block Device Options in YAML\nDESCRIPTION: This YAML snippet defines the configuration options available for unix-block devices in Incus containers. It includes parameters such as source, path, required, major, minor, mode, uid, gid, and read-only.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_unix_block.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsource:\n  type: string\n  description: \"Path on the host to the unix block device\"\npath:\n  type: string\n  description: \"Path inside the instance\"\nrequired:\n  type: boolean\n  description: \"Whether or not this device is required to start the instance\"\nmajor:\n  type: int\n  description: \"Device major number\"\nminor:\n  type: int\n  description: \"Device minor number\"\nmode:\n  type: int\n  description: \"Device mode\"\nuid:\n  type: int\n  description: \"UID of the device owner in the instance\"\ngid:\n  type: int\n  description: \"GID of the device owner in the instance\"\nread-only:\n  type: boolean\n  description: \"Whether to mount the device read-only\"\n```\n\n----------------------------------------\n\nTITLE: Network I/O Bus Configuration\nDESCRIPTION: Adds io.bus property for network devices to choose between virtio and usb bus types.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_13\n\n\n\n----------------------------------------\n\nTITLE: Configuring Remote Token Expiry in Incus\nDESCRIPTION: Specifies the time after which a remote add token expires. Default is no expiry. This global setting controls the validity period of tokens used to add remote servers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_65\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.remote_token_expiry server-core\n:defaultdesc: \"no expiry\"\n:scope: \"global\"\n:shortdesc: \"Time after which a remote add token expires\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto Update Interval for Images in Incus\nDESCRIPTION: Specifies how often (in hours) to look for updates to cached images. Default is 6 hours. Setting to 0 disables updates. This global setting controls update frequency.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_71\n\nLANGUAGE: config\nCODE:\n```\n{config:option} images.auto_update_interval server-images\n:defaultdesc: \"`6`\"\n:scope: \"global\"\n:shortdesc: \"Interval at which to look for updates to cached images\"\n:type: \"integer\"\nSpecify the interval in hours.\nTo disable looking for updates to cached images, set this option to `0`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Metrics Authentication in Incus\nDESCRIPTION: Controls whether to enforce authentication on the metrics endpoint. Default is true. This global setting affects who can access the metrics data.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_61\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.metrics_authentication server-core\n:defaultdesc: \"`true`\"\n:scope: \"global\"\n:shortdesc: \"Whether to enforce authentication on the metrics endpoint\"\n:type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Allowed Origin in Incus\nDESCRIPTION: Sets the Access-Control-Allow-Origin HTTP header value for CORS. This global setting controls which origins can make cross-origin requests.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_58\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.https_allowed_origin server-core\n:scope: \"global\"\n:shortdesc: \"`Access-Control-Allow-Origin` HTTP header value\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Router ID in Incus\nDESCRIPTION: Sets a unique identifier for the BGP server formatted as an IPv4 address. This local setting is required for BGP operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_51\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.bgp_routerid server-core\n:scope: \"local\"\n:shortdesc: \"A unique identifier for the BGP server\"\n:type: \"string\"\nThe identifier must be formatted as an IPv4 address.\n```\n\n----------------------------------------\n\nTITLE: Installing Incus Dependencies with Make\nDESCRIPTION: This command installs the required dependencies for Incus, particularly setting up cowsql for its database.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/requirements.md#2025-04-14_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nmake deps\n```\n\n----------------------------------------\n\nTITLE: Example Event Structure in YAML\nDESCRIPTION: Demonstrates the basic structure of an Incus event, showing a lifecycle event for a network update. The example includes common fields like location, metadata, timestamp, and event type.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/events.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlocation: cluster_name\nmetadata:\n  action: network-updated\n  requestor:\n    protocol: unix\n    username: root\n  source: /1.0/networks/incusbr0\ntimestamp: \"2021-03-14T00:00:00Z\"\ntype: lifecycle\n```\n\n----------------------------------------\n\nTITLE: Persisting IPv4 Forwarding Configuration\nDESCRIPTION: Commands to make IPv4 forwarding persistent across system reboots to prevent Docker from changing the default FORWARD policy.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\necho \"net.ipv4.conf.all.forwarding=1\" > /etc/sysctl.d/99-forwarding.conf\nsystemctl restart systemd-sysctl\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Allowed Credentials in Incus\nDESCRIPTION: Controls whether to set the Access-Control-Allow-Credentials HTTP header value to true. Default is false. This global setting affects CORS behavior.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_55\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.https_allowed_credentials server-core\n:defaultdesc: \"`false`\"\n:scope: \"global\"\n:shortdesc: \"Whether to set `Access-Control-Allow-Credentials`\"\n:type: \"bool\"\nIf enabled, the `Access-Control-Allow-Credentials` HTTP header value is set to `true`.\n```\n\n----------------------------------------\n\nTITLE: Network DHCP Routes Configuration\nDESCRIPTION: Adds ipv4.dhcp.routes configuration for bridged and OVN networks to specify CIDR networks and gateway addresses for DHCP announcements.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_7\n\n\n\n----------------------------------------\n\nTITLE: Editing Incus Image Properties\nDESCRIPTION: Commands to modify image properties, either specific properties or the full image configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nincus image set-property <image_ID> <key>\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image edit <image_ID>\n```\n\n----------------------------------------\n\nTITLE: Instance CPU Time State\nDESCRIPTION: Adds allocated_time field under CPU section in the instance state API.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_12\n\n\n\n----------------------------------------\n\nTITLE: Configuring Auto Update for Cached Images in Incus\nDESCRIPTION: Controls whether to automatically update cached images. Default is true. This global setting determines if Incus keeps cached images up to date automatically.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_70\n\nLANGUAGE: config\nCODE:\n```\n{config:option} images.auto_update_cached server-images\n:defaultdesc: \"`true`\"\n:scope: \"global\"\n:shortdesc: \"Whether to automatically update cached images\"\n:type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Contents for Image Documentation\nDESCRIPTION: A toctree directive in Markdown/Sphinx format that organizes documentation sections related to image handling in Incus. It includes links to various image-related topics like handling, remote usage, management, copying, creation, profile association, and reference materials.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/images.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{toctree}\n:maxdepth: 1\n\nimage-handling\nUse remote images <howto/images_remote>\nManage images <howto/images_manage>\nCopy and import images <howto/images_copy>\nCreate images <howto/images_create>\nAssociate profiles <howto/images_profiles>\nreference/image_format\nreference/image_servers\n```\n\n----------------------------------------\n\nTITLE: Configuring Shutdown Timeout in Incus\nDESCRIPTION: Specifies how long to wait (in minutes) for running operations to complete before the daemon shuts down. Default is 5 minutes. This global setting affects graceful shutdowns.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_66\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.shutdown_timeout server-core\n:defaultdesc: \"`5`\"\n:scope: \"global\"\n:shortdesc: \"How long to wait before shutdown\"\n:type: \"integer\"\nSpecify the number of minutes to wait for running operations to complete before the daemon shuts down.\n```\n\n----------------------------------------\n\nTITLE: Standard Return Value Structure in JavaScript\nDESCRIPTION: Demonstrates the JSON structure for a standard synchronous operation return value in the Incus API. It includes type, status, status code, and metadata fields.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api.md#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"type\": \"sync\",\n    \"status\": \"Success\",\n    \"status_code\": 200,\n    \"metadata\": {}                          // Extra resource/action specific metadata\n}\n```\n\n----------------------------------------\n\nTITLE: Unix Hotplug Device Configuration\nDESCRIPTION: Settings for USB hotplug devices including vendor and product IDs and permissions.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_4\n\nLANGUAGE: config\nCODE:\n```\ngid devices-unix-hotplug\nmode devices-unix-hotplug\nproductid devices-unix-hotplug\nrequired devices-unix-hotplug\nuid devices-unix-hotplug\nvendorid devices-unix-hotplug\n```\n\n----------------------------------------\n\nTITLE: Creating Cross-Project Network Peer Routing - Incus CLI\nDESCRIPTION: Commands to establish peer routing relationships between OVN networks in different projects using Incus CLI. The project name must be specified for each network.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_peers.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network peer create <network1> <peering_name> <project2/network2> [configuration_options] --project=<project1>\nincus network peer create <network2> <peering_name> <project1/network1> [configuration_options] --project=<project2>\n```\n\n----------------------------------------\n\nTITLE: Configuring PCI and USB Volatile Options for Incus Instances\nDESCRIPTION: These options store the last known state of PCI and USB device configurations for Incus instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_27\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.pci.driver instance-volatile\n:shortdesc: \"PCI original host driver\"\n:type: \"string\"\nThe original host driver for the PCI device.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.pci.parent instance-volatile\n:shortdesc: \"PCI parent host device\"\n:type: \"string\"\nThe parent host device used when allocating a PCI device to an instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.pci.slot.name instance-volatile\n:shortdesc: \"PCI parent slot name\"\n:type: \"string\"\nThe parent host device PCI slot name.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.usb.bus instance-volatile\n:shortdesc: \"USB bus address\"\n:type: \"string\"\nThe original USB bus address.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.usb.device instance-volatile\n:shortdesc: \"USB device identifier\"\n:type: \"string\"\nThe original USB device identifier.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.vdpa.name instance-volatile\n:shortdesc: \"VDPA device name\"\n:type: \"string\"\nThe VDPA device name used when moving a VDPA device file descriptor into an instance.\n```\n\n----------------------------------------\n\nTITLE: Ceph Driver Remote Include Directive\nDESCRIPTION: Markdown include directive that imports Ceph driver remote configuration content from storage_ceph.md\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephfs.md#2025-04-14_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{include} storage_ceph.md\n    :start-after: <!-- Include start Ceph driver remote -->\n    :end-before: <!-- Include end Ceph driver remote -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Event Types in Incus\nDESCRIPTION: Specifies which events to send to the logger as a comma-separated list. Default is 'lifecycle,logging'. Supports 'lifecycle', 'logging', and 'network-acl' event types.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_87\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.types server-logging\n:defaultdesc: \"`lifecycle,logging`\"\n:scope: \"global\"\n:shortdesc: \"Events to send to the logger\"\n:type: \"string\"\nSpecify a comma-separated list of events to send to the logger.\nThe events can be any combination of `lifecycle`, `logging`, and `network-acl`.\n```\n\n----------------------------------------\n\nTITLE: ACME HTTP Port Configuration\nDESCRIPTION: Adds acme.http.port configuration to specify alternative HTTP port for HTTP-01 validation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_10\n\n\n\n----------------------------------------\n\nTITLE: Configuring Remote Server with Keepalive in YAML\nDESCRIPTION: Example showing how to enable and configure keepalive functionality for a remote server connection, which helps reduce latency for frequent commands by maintaining the connection for a specified timeout period.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/remotes.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  my-remote:\n    addr: https://192.0.2.5:8443\n    auth_type: tls\n    project: default\n    protocol: incus\n    public: false\n    keepalive: 30\n```\n\n----------------------------------------\n\nTITLE: Cluster Group Common Settings\nDESCRIPTION: Common configuration options for cluster groups including VM CPU architecture settings and user storage.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_1\n\nLANGUAGE: config\nCODE:\n```\ninstances.vm.cpu.ARCHITECTURE.baseline cluster_group-common\ninstances.vm.cpu.ARCHITECTURE.flags cluster_group-common\nuser.* cluster_group-common\n```\n\n----------------------------------------\n\nTITLE: Configuring TOC Tree for Incus Documentation\nDESCRIPTION: Sphinx toctree directive that defines the structure and hierarchy of internal documentation pages. Sets maximum depth to 1 and includes various documentation sections covering internals, debugging, requirements, and configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/internals.md#2025-04-14_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n{toctree}\n:maxdepth: 1\n\ndaemon-behavior\nDebug Incus <debugging>\nRequirements </requirements>\nPackaging recommendations </packaging>\nenvironment\nsyscall-interception\nUser namespace setup <userns-idmap>\nConfiguration option index </config-options>\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Projects in Incus\nDESCRIPTION: Specifies a comma-separated list of projects for lifecycle logging. Empty means all projects. This global setting controls which projects are included in logs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_75\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.lifecycle.projects server-logging\n:scope: \"global\"\n:shortdesc: \"Comma separate list of projects, empty means all\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cache Expiry for Images in Incus\nDESCRIPTION: Specifies when an unused cached remote image is flushed, in days. Default is 10 days. This global setting controls how long unused images remain in cache.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_74\n\nLANGUAGE: config\nCODE:\n```\n{config:option} images.remote_cache_expiry server-images\n:defaultdesc: \"`10`\"\n:scope: \"global\"\n:shortdesc: \"When an unused cached remote image is flushed\"\n:type: \"integer\"\nSpecify the number of days after which the unused cached image expires.\n```\n\n----------------------------------------\n\nTITLE: Configuring Instance Evacuation Behavior in LXC/Incus\nDESCRIPTION: Controls the action to take when evacuating an instance. Options include auto, migrate, live-migrate, or stop. This setting cannot be updated live.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncluster.evacuate instance:\n  shortdesc: What to do when evacuating the instance\n  default: \"auto\"\n  type: string\n  liveupdate: \"no\"\n```\n\n----------------------------------------\n\nTITLE: Viewing LINSTOR Resource Definition Properties\nDESCRIPTION: This command lists all properties for a specific LINSTOR resource definition, including Incus-specific auxiliary properties and DRBD options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_linstor_internals.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# linstor resource-definition list-properties incus-volume-4df9f0598bd14d73953151614428d298\n```\n\n----------------------------------------\n\nTITLE: Adding Agent Configuration Disk\nDESCRIPTION: Command to add an agent configuration ISO disk device to a virtual machine, containing agent binary and installation scripts.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_disk.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> disk source=agent:config\n```\n\n----------------------------------------\n\nTITLE: Defining Unix Hotplug Device Options in LXC/Incus Configuration\nDESCRIPTION: This code block is a placeholder for including device options for unix-hotplug devices in LXC/Incus. It uses a Sphinx directive to include content from an external file named 'config_options.txt', specifically the section related to unix-hotplug device configuration.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_unix_hotplug.md#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{include} ../config_options.txt\n    :start-after: <!-- config group devices-unix-hotplug start -->\n    :end-before: <!-- config group devices-unix-hotplug end -->\n```\n\n----------------------------------------\n\nTITLE: Incus Cluster Configuration YAML\nDESCRIPTION: Example YAML representation of Incus cluster configuration. This shows the structure for editing member addresses and roles during recovery.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# Latest cowsql segment ID: 1234\n\nmembers:\n  - id: 1             # Internal ID of the member (Read-only)\n    name: server1     # Name of the cluster member (Read-only)\n    address: 192.0.2.10:8443 # Last known address of the member (Writeable)\n    role: voter              # Last known role of the member (Writeable)\n  - id: 2             # Internal ID of the member (Read-only)\n    name: server2     # Name of the cluster member (Read-only)\n    address: 192.0.2.11:8443 # Last known address of the member (Writeable)\n    role: stand-by           # Last known role of the member (Writeable)\n  - id: 3             # Internal ID of the member (Read-only)\n    name: server3     # Name of the cluster member (Read-only)\n    address: 192.0.2.12:8443 # Last known address of the member (Writeable)\n    role: spare              # Last known role of the member (Writeable)\n```\n\n----------------------------------------\n\nTITLE: Incus API Extensions Documentation\nDESCRIPTION: Complete markdown documentation of Incus API extensions including features for instance management, storage, networking, clustering, security, and monitoring capabilities.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## `instance_project_move`\n\nThis adds a `project` field to the `POST /1.0/instances/NAME` API,\nallowing for easy move of an instance between projects.\n\n## `storage_volume_project_move`\n\nThis adds support for moving storage volume between projects.\n\n## `cloud_init`\n\nThis adds a new `cloud-init` configuration key namespace which contains the following keys:\n\n* `cloud-init.vendor-data`\n* `cloud-init.user-data`\n* `cloud-init.network-config`\n\n It also adds a new endpoint `/1.0/devices` to `/dev/incus` which shows an instance's devices.\n\n[...continued with all other sections...]\n```\n\n----------------------------------------\n\nTITLE: Listing IPAM Allocations in Incus\nDESCRIPTION: Command to display IPAM allocation information for Incus networks. Shows IP addresses used by networks, instances, forwards, and load balancers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ipam.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus network list-allocations\n```\n\n----------------------------------------\n\nTITLE: Configuring Btrfs Mount Options in YAML\nDESCRIPTION: Example YAML configuration for setting Btrfs mount options in a storage pool. The default option allows users to remove subvolumes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_btrfs.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbtrfs.mount_options: user_subvol_rm_allowed\n```\n\n----------------------------------------\n\nTITLE: Instance System Volatile Configuration in Incus\nDESCRIPTION: Configuration options for instance system settings in Incus, including VM NVRAM, templating, and base image tracking. These settings control boot-time behavior and instance attributes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_30\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.apply_nvram instance-volatile\n:shortdesc: \"Whether to regenerate VM NVRAM the next time the instance starts\"\n:type: \"bool\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.apply_template instance-volatile\n:shortdesc: \"Template hook\"\n:type: \"string\"\nThe template with the given name is triggered upon next startup.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.base_image instance-volatile\n:shortdesc: \"Hash of the base image\"\n:type: \"string\"\nThe hash of the image that the instance was created from (empty if the instance was not created from an image).\n```\n\n----------------------------------------\n\nTITLE: Toctree Navigation Configuration\nDESCRIPTION: Sphinx documentation toctree configuration that defines the structure of migration-related documentation pages, including links to detailed guides for moving instances, importing machines, and migrating from LXC.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/migration.md#2025-04-14_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n{toctree}\n:maxdepth: 1\n:hidden:\n\nMove instances <howto/move_instances>\nImport existing machines <howto/import_machines_to_instances>\nMigrate from LXC <howto/migrate_from_lxc>\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger CA Certificate in Incus\nDESCRIPTION: Specifies the CA certificate for the external logging server. This global setting enables secure connections to logging services.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_79\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.ca_cert server-logging\n:scope: \"global\"\n:shortdesc: \"CA certificate for the server\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Target Address in Incus\nDESCRIPTION: Specifies the address of the external logger including protocol, hostname/IP and port (e.g., 'tcp://syslog01.int.example.net:514'). This global setting controls where logs are sent.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_78\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.address server-logging\n:scope: \"global\"\n:shortdesc: \"Address of the logger\"\n:type: \"string\"\nSpecify the protocol, name or IP and port. For example `tcp://syslog01.int.example.net:514`.\n```\n\n----------------------------------------\n\nTITLE: Optimizing Kernel Parameters in /etc/sysctl.conf for Incus\nDESCRIPTION: This configuration adjusts various kernel parameters to support a large number of Incus instances. It increases limits for AIO operations, inotify events, key ring size, ARP table entries, and memory map areas.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/server_settings.md#2025-04-14_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\nfs.aio-max-nr = 524288\nfs.inotify.max_queued_events = 1048576\nfs.inotify.max_user_instances = 1048576\nfs.inotify.max_user_watches = 1048576\nkernel.dmesg_restrict = 1\nkernel.keys.maxbytes = 2000000\nkernel.keys.maxkeys = 2000\nnet.core.bpf_jit_limit = 1000000000\nnet.ipv4.neigh.default.gc_thresh3 = 8192\nnet.ipv6.neigh.default.gc_thresh3 = 8192\nvm.max_map_count = 262144\n```\n\n----------------------------------------\n\nTITLE: Basic USB Device Note Block\nDESCRIPTION: A note block explaining USB device support and hotplugging capabilities in both containers and VMs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_usb.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{note}\nThe `usb` device type is supported for both containers and VMs.\nIt supports hotplugging for both containers and VMs.\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Device Map in Incus Instance-Host Communication\nDESCRIPTION: GET request to the /1.0/devices endpoint returns a JSON object mapping instance devices, including their names, types, and associated properties.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/dev-incus.md#2025-04-14_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"eth0\": {\n        \"name\": \"eth0\",\n        \"network\": \"incusbr0\",\n        \"type\": \"nic\"\n    },\n    \"root\": {\n        \"path\": \"/\",\n        \"pool\": \"default\",\n        \"type\": \"disk\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Pushing New Branch in Bash\nDESCRIPTION: Commands to create a new branch for changes and push it to the developer's fork. This is typically done when starting work on a new feature or bug fix.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/code.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b [name_of_your_new_branch]\ngit push myfork [name_of_your_new_branch]\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Toctree for Man Pages\nDESCRIPTION: Sets up a table of contents tree (toctree) directive to include all files from the manpages directory. Uses titlesonly option to show only page titles and glob pattern to include all files.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/manpages.md#2025-04-14_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n{toctree}\n:titlesonly:\n:glob:\n\nmanpages/*\n```\n\n----------------------------------------\n\nTITLE: JSON Output Format from generate-config\nDESCRIPTION: Example JSON output generated by the tool. This shows how documentation comments are transformed into a structured JSON format with hierarchical organization of configuration options.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-config/README.md#2025-04-14_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"configs\": {\n    \"cluster\": [\n      {\n        \"scheduler.instance\": {\n          \"condition\": \"container\",\n          \"defaultdesc\": \"`all`\",\n          \"liveupdate\": \"`yes`\",\n          \"longdesc\": \"<Possibly a very long documentation on multiple lines with Markdown tables, etc.>\",\n          \"shortdesc\": \" Possible values are all, manual and group. See Automatic placement of instances for more\",\n          \"type\": \"integer\"\n        }\n      },\n      {\n        \"user.*\": {\n          \"condition\": \"container\",\n          \"defaultdesc\": \"-\",\n          \"liveupdate\": \"`yes`\",\n          \"longdesc\": \"\n            This is the real long desc.\n\n            With two paragraphs.\n\n            And a list:\n\n            - Item\n            - Item\n            - Item\n\n            And a table:\n\n            Key                                 | Type      | Scope     | Default                                          | Description\n            :--                                 | :---      | :----     | :------                                          | :----------\n            `acme.agree_tos`                    | bool      | global    | `false`                                          | Agree to ACME terms of service\n            `acme.ca_url`                       | string    | global    | `https://acme-v02.api.letsencrypt.org/directory` | URL to the directory resource of the ACME service\n            `acme.domain`                       | string    | global    | -                                                | Domain for which the certificate is issued\n            `acme.email`                        | string    | global    | -                                                | Email address used for the account registration\n          \",\n          \"shortdesc\": \"Free form user key/value storage (can be used in search).\",\n          \"type\": \"string\"\n        }\n      }\n    ],\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Messages from System Limits\nDESCRIPTION: Common error messages that occur when system limits are reached in Incus deployments. These indicate the need for system setting optimization.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/performance_tuning.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nFailed to allocate directory watch: Too many open files\n<Error> <Error>: Too many open files\nfailed to open stream: Too many open files in...\nneighbour: ndisc_cache: neighbor table overflow!\n```\n\n----------------------------------------\n\nTITLE: Configuring Ceph Object Storage Bucket in Incus\nDESCRIPTION: YAML configuration option for setting up a Ceph Object storage bucket in Incus. Includes an option for specifying the quota of the storage bucket.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephobject.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsize: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Types for Lifecycle Events in Incus\nDESCRIPTION: Specifies a comma-separated list of event types to log (e.g., 'instance'). Empty means all types. This global setting controls which event types are captured in lifecycle logs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_76\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.lifecycle.types server-logging\n:scope: \"global\"\n:shortdesc: \"E.g., `instance`, comma separate, empty means all\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Including Security Information from README.md\nDESCRIPTION: This snippet includes content from the project's README.md file, specifically the security information section.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/index.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} ../README.md\n    :start-after: <!-- Include start security -->\n    :end-before: <!-- Include end security -->\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki CA Certificate in Incus\nDESCRIPTION: Specifies the CA certificate for the Loki server. This global setting enables secure connections to the Loki logging service.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_88\n\nLANGUAGE: config\nCODE:\n```\n{config:option} loki.api.ca_cert server-loki\n:scope: \"global\"\n:shortdesc: \"CA certificate for the Loki server\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Setting Image Compression Algorithm for LXC/Incus Backups\nDESCRIPTION: Specifies the compression algorithm to use for new images. Options include bzip2, gzip, lzma, xz, or none. This is a global server option.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nbackups.compression_algorithm server:\n  shortdesc: Compression algorithm for images\n  type: string\n  scope: global\n  default: \"gzip\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Netplan Network Settings\nDESCRIPTION: Sets up cloud-init network configuration using netplan to configure routing and IP addresses\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/instances_routed_nic_vm.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | incus config set jammy cloud-init.network-config -\nnetwork:\n  version: 2\n  ethernets:\n    enp5s0:\n      routes:\n      - to: default\n        via: 169.254.0.1\n        on-link: true\n      - to: default\n        via: fe80::1\n        on-link: true\n      addresses:\n      - 192.0.2.2/32\n      - 2001:db8::2/128\nEOF\n```\n\n----------------------------------------\n\nTITLE: Setting Permanent Network Device Backlog in Linux\nDESCRIPTION: Configuration line to be added to /etc/sysctl.conf for setting a permanent network device maximum backlog of 182757.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_increase_bandwidth.md#2025-04-14_snippet_3\n\nLANGUAGE: conf\nCODE:\n```\nnet.core.netdev_max_backlog = 182757\n```\n\n----------------------------------------\n\nTITLE: Configuring BGP Address in Incus Core Settings\nDESCRIPTION: Specifies the address to bind the BGP server to in Incus. This is a local setting that affects the Border Gateway Protocol implementation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_49\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.bgp_address server-core\n:scope: \"local\"\n:shortdesc: \"Address to bind the BGP server to\"\n:type: \"string\"\nSee {ref}`network-bgp`.\n```\n\n----------------------------------------\n\nTITLE: Creating Terminal Output Displays\nDESCRIPTION: Custom directive for displaying terminal commands and output with configurable prompts and formatting.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n```{terminal}\n:input: command number one\n:user: root\n:host: vm\n\noutput line one\noutput line two\n:input: another command\nmore output\n```\n```\n\n----------------------------------------\n\nTITLE: Reference Table Implementation in Go\nDESCRIPTION: Shows how to implement a reference table with ReferenceID field for generating abstract SQL statements and functions.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n//generate-database:mapper stmt -e device create\n//generate-database:mapper method -e device Create\n\ntype Device struct {\n  ID int\n  ReferenceID int\n  Name string\n  Type string\n}\n\n//...\n//generate-database:mapper method -e instance Create references=Device\n// This will produce a function called `CreateInstanceDevices`.\n```\n\n----------------------------------------\n\nTITLE: Table of Contents Structure for Incus Client Documentation in Markdown\nDESCRIPTION: A toctree directive that organizes the Incus client documentation structure, including links to pages about adding remote servers, creating command aliases, and reference manpages. The maxdepth parameter is set to 1 to control the nesting level of the table of contents.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/client.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\nAdd remote servers <remotes>\nAdd command aliases <howto/incus_alias>\n/reference/manpages\n```\n```\n\n----------------------------------------\n\nTITLE: Setting Incus Server Configuration\nDESCRIPTION: Command syntax for setting individual configuration options on the Incus server. Used to modify server behavior by specifying key-value pairs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_configure.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <key> <value>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Allowed Methods in Incus\nDESCRIPTION: Sets the Access-Control-Allow-Methods HTTP header value for CORS. This global setting controls which HTTP methods can be used in cross-origin requests.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_57\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.https_allowed_methods server-core\n:scope: \"global\"\n:shortdesc: \"`Access-Control-Allow-Methods` HTTP header value\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Important Note About Incus Disaster Recovery Tool Usage\nDESCRIPTION: Warning message about the proper use of the disaster recovery tool, emphasizing it should only be used for disaster recovery and not as an alternative to backups.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/disaster_recovery.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{important}\nThis tool should be used for disaster recovery only.\nDo not rely on this tool as an alternative to proper backups; you will lose data like profiles, network definitions, or server configuration.\n\nThe tool must be run interactively and cannot be used in automated scripts.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Username in Incus\nDESCRIPTION: Specifies the username used for Loki authentication. This global setting enables secure access to the Loki logging service.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_91\n\nLANGUAGE: config\nCODE:\n```\n{config:option} loki.auth.username server-loki\n:scope: \"global\"\n:shortdesc: \"User name used for Loki authentication\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Viewing Member-specific Storage Configuration\nDESCRIPTION: Command to view storage pool configuration for a specific cluster member using the --target flag.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_storage.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus storage show data --target server2\n```\n\n----------------------------------------\n\nTITLE: Template Configuration Example\nDESCRIPTION: Comprehensive example of template rules in metadata.yaml showing various configuration options for file generation\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/image_format.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntemplates:\n  /etc/hosts:\n    when:\n      - create\n      - rename\n    template: hosts.tpl\n    properties:\n      foo: bar\n  /etc/hostname:\n    when:\n      - start\n    template: hostname.tpl\n  /etc/network/interfaces:\n    when:\n      - create\n    template: interfaces.tpl\n    create_only: true\n  /home/foo/setup.sh:\n    when:\n      - create\n    template: setup.sh.tpl\n    create_only: true\n    uid: 1000\n    gid: 1000\n    mode: 755\n```\n\n----------------------------------------\n\nTITLE: API Features Overview in Markdown\nDESCRIPTION: Comprehensive documentation of Incus API features and extensions, including networking capabilities, storage features, clustering functionality, security controls, and system management options.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## `resources_network_usb`\\n\\nAdds the `usb_address` field to the network card entries in the resources API.\\n\\n## `resources_disk_address`\\n\\nAdds the `usb_address` and `pci_address` fields to the disk entries in the resources API.\\n\\n[...continued with all other sections...]\n```\n\n----------------------------------------\n\nTITLE: Configuring Temporary Network Interface Queue Length in Linux\nDESCRIPTION: Command to temporarily set the transmit queue length (txqueuelen) for a network interface to 10000. This is typically used for testing before making permanent changes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_increase_bandwidth.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nifconfig <interface> txqueuelen 10000\n```\n\n----------------------------------------\n\nTITLE: Querying Raft Node Configuration in Incus\nDESCRIPTION: SQL command to view the Raft configuration in an Incus cluster. This is useful for diagnosing unexpected behavior in cluster membership.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus admin sql local \"SELECT * FROM raft_nodes\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN Controller Logging for Incus\nDESCRIPTION: YAML configuration to set up OVN controller logging to Incus syslog socket.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_ovn_setup.md#2025-04-14_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nOVN_CTL_OPTS=\" \\\n       --ovn-controller-log='-vsyslog:info --syslog-method=unix:/var/lib/incus/syslog.socket'\"\n```\n\n----------------------------------------\n\nTITLE: Generating Go Database Methods\nDESCRIPTION: Example directives for generating Go methods to interact with the database, including retrieval, creation, updating, and deletion operations.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_3\n\nLANGUAGE: go\nCODE:\n```\n//generate-database:mapper method -i -e instance GetMany\n//generate-database:mapper method -i -e instance GetOne\n//generate-database:mapper method -i -e instance ID\n//generate-database:mapper method -i -e instance Exist\n//generate-database:mapper method -i -e instance Create\n//generate-database:mapper method -i -e instance Update\n//generate-database:mapper method -i -e instance DeleteOne-by-Project-and-Name\n//generate-database:mapper method -i -e instance DeleteMany-by-Name\n```\n\n----------------------------------------\n\nTITLE: Using generate-config CLI command\nDESCRIPTION: Example of the generate-config command usage with flags. This shows how to use the exclude flag to skip directories during processing.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-config/README.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ generate-config -h\nUsage of generate-config:\n-e value\n    Path that will be excluded from the process\n```\n\n----------------------------------------\n\nTITLE: Configuring CA Certificate Trust in Incus\nDESCRIPTION: Controls whether to automatically trust clients signed by the CA. Default is false. This global setting affects certificate-based authentication.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_69\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.trust_ca_certificates server-core\n:defaultdesc: \"`false`\"\n:scope: \"global\"\n:shortdesc: \"Whether to automatically trust clients signed by the CA\"\n:type: \"bool\"\n```\n\n----------------------------------------\n\nTITLE: Interactive Container Migration Process Example\nDESCRIPTION: Terminal session showing an example of the interactive process when using incus-migrate to create a container, including setting configuration options, storage, and networking.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/import_machines_to_instances.md#2025-04-14_snippet_2\n\nLANGUAGE: terminal\nCODE:\n```\nPlease provide Incus server URL: https://192.0.2.7:8443\nCertificate fingerprint: xxxxxxxxxxxxxxxxx\nok (y/n)? y\n\n1) Use a certificate token\n2) Use an existing TLS authentication certificate\n3) Generate a temporary TLS authentication certificate\nPlease pick an authentication mechanism above: 1\nPlease provide the certificate token: xxxxxxxxxxxxxxxx\n\nRemote Incus server:\n  Hostname: bar\n  Version: 5.4\n\nWould you like to create a container (1) or virtual-machine (2)?: 1\nName of the new instance: foo\nPlease provide the path to a root filesystem: /\nDo you want to add additional filesystem mounts? [default=no]:\n\nInstance to be created:\n  Name: foo\n  Project: default\n  Type: container\n  Source: /\n\nAdditional overrides can be applied at this stage:\n1) Begin the migration with the above configuration\n2) Override profile list\n3) Set additional configuration options\n4) Change instance storage pool or volume size\n5) Change instance network\n\nPlease pick one of the options above [default=1]: 3\nPlease specify config keys and values (key=value ...): limits.cpu=2\n\nInstance to be created:\n  Name: foo\n  Project: default\n  Type: container\n  Source: /\n  Config:\n    limits.cpu: \"2\"\n\nAdditional overrides can be applied at this stage:\n1) Begin the migration with the above configuration\n2) Override profile list\n3) Set additional configuration options\n4) Change instance storage pool or volume size\n5) Change instance network\n\nPlease pick one of the options above [default=1]: 4\nPlease provide the storage pool to use: default\nDo you want to change the storage size? [default=no]: yes\nPlease specify the storage size: 20GiB\n\nInstance to be created:\n  Name: foo\n  Project: default\n  Type: container\n  Source: /\n  Storage pool: default\n  Storage pool size: 20GiB\n  Config:\n    limits.cpu: \"2\"\n\nAdditional overrides can be applied at this stage:\n1) Begin the migration with the above configuration\n2) Override profile list\n3) Set additional configuration options\n4) Change instance storage pool or volume size\n5) Change instance network\n\nPlease pick one of the options above [default=1]: 5\nPlease specify the network to use for the instance: incusbr0\n\nInstance to be created:\n  Name: foo\n  Project: default\n  Type: container\n  Source: /\n  Storage pool: default\n  Storage pool size: 20GiB\n  Network name: incusbr0\n  Config:\n    limits.cpu: \"2\"\n\nAdditional overrides can be applied at this stage:\n1) Begin the migration with the above configuration\n2) Override profile list\n3) Set additional configuration options\n4) Change instance storage pool or volume size\n5) Change instance network\n\nPlease pick one of the options above [default=1]: 1\nInstance foo successfully created\n```\n\n----------------------------------------\n\nTITLE: Toctree Navigation Structure in Sphinx Documentation\nDESCRIPTION: Sphinx documentation toctree directive that defines the hidden navigation structure for device-related documentation pages. Lists paths to individual device type reference documents.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n:hidden:\n\n../reference/standard_devices.md\n../reference/devices_none.md\n../reference/devices_nic.md\n../reference/devices_disk.md\n../reference/devices_unix_char.md\n../reference/devices_unix_block.md\n../reference/devices_usb.md\n../reference/devices_gpu.md\n../reference/devices_infiniband.md\n../reference/devices_proxy.md\n../reference/devices_unix_hotplug.md\n../reference/devices_tpm.md\n../reference/devices_pci.md\n```\n```\n\n----------------------------------------\n\nTITLE: Note about Virtual Machine Feature Support in Incus\nDESCRIPTION: A Markdown note explaining that virtual machines currently support fewer features than containers, with a reference to instance options documentation where users can check available VM features.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/instances.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{note}\nCurrently, virtual machines support fewer features than containers, but the plan is to support the same set of features for both instance types in the future.\n\nTo see which features are available for virtual machines, check the condition column in the {ref}`instance-options` documentation.\n```\n```\n\n----------------------------------------\n\nTITLE: Verifying Incus Migration with Container List\nDESCRIPTION: This snippet shows how to verify the successful migration to Incus by listing the containers using the 'incus list' command. It displays the container details including name, state, IP addresses, and type.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_migrate_lxd.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus list\nTo start your first container, try: incus launch images:ubuntu/22.04\nOr for a virtual machine: incus launch images:ubuntu/22.04 --vm\n\n+------+---------+-----------------------+------------------------------------------------+-----------+-----------+\n| NAME |  STATE  |         IPV4          |                     IPV6                       |   TYPE    | SNAPSHOTS |\n+------+---------+-----------------------+------------------------------------------------+-----------+-----------+\n| u1   | RUNNING | 10.204.220.101 (eth0) | fd42:1eb6:f1d8:4e2a:1266:6aff:fe65:940d (eth0) | CONTAINER | 0         |\n+------+---------+-----------------------+------------------------------------------------+-----------+-----------+\n```\n\n----------------------------------------\n\nTITLE: Enabling LINSTOR Satellite Service\nDESCRIPTION: Enable and start the LINSTOR satellite service to ensure it runs on system boot.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl enable --now linstor-satellite\n```\n\n----------------------------------------\n\nTITLE: Configuring Instance Agent NIC Settings in LXC/Incus\nDESCRIPTION: Controls whether to set the name and MTU of default network interfaces to match instance devices for virtual machines. This happens automatically for containers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nagent.nic_config instance:\n  shortdesc: Set the name and MTU to be the same as the instance devices\n  default: \"false\"\n  type: bool\n  liveupdate: \"no\"\n  condition: Virtual machine\n```\n\n----------------------------------------\n\nTITLE: Viewing Default Network Profile in Incus\nDESCRIPTION: Command to display the default network profile configuration in Incus\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/networks.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nincus profile show default\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Instance Placement Logic in LXC/Incus\nDESCRIPTION: Stores the custom automatic instance placement logic scriptlet. This is a global server option used for advanced clustering configurations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ninstances.placement.scriptlet:\n  shortdesc: Custom automatic instance placement logic\n  type: string\n  scope: global\n```\n\n----------------------------------------\n\nTITLE: Example Configuration Option in LXC/Incus\nDESCRIPTION: A test configuration option demonstrating the basic structure of option documentation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ntest1 something:\n  shortdesc: testing\n```\n\n----------------------------------------\n\nTITLE: Text Output Format from generate-config\nDESCRIPTION: Example of the text/markdown output generated by the tool. This shows how documentation comments are transformed into a structured text format suitable for inclusion in documentation systems.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-config/README.md#2025-04-14_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\n<!-- config group cluster start -->\n\\`\\`\\`{config:option} user.* cluster\n:type: string\n:liveupdate: `yes`\n:shortdesc: Free form user key/value storage (can be used in search).\n:condition: container\n:default: -\n\nThis is the real long desc.\n\nWith two paragraphs.\n\nAnd a list:\n\n- Item\n- Item\n- Item\n\nexample of a table:\n\nKey                                 | Type      | Scope     | Default                                          | Description\n:--                                 | :---      | :----     | :------                                          | :----------\n`acme.agree_tos`                    | bool      | global    | `false`                                          | Agree to ACME terms of service\n`acme.ca_url`                       | string    | global    | `https://acme-v02.api.letsencrypt.org/directory` | URL to the directory resource of the ACME service\n`acme.domain`                       | string    | global    | -                                                | Domain for which the certificate is issued\n`acme.email`                        | string    | global    | -                                                | Email address used for the account registration\n\n\n\\`\\`\\`\n\n\\`\\`\\`{config:option} scheduler.instance cluster\n:liveupdate: `yes`\n:shortdesc: Possible values are all, manual and group. See Automatic placement of instances for more information.\n:condition: container\n:default: `all`\n:type: integer\n\n\n\\`\\`\\`\n\n<!-- config group cluster end -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Instance Name in Incus\nDESCRIPTION: Specifies the name to use as the instance field in Loki events. Default is the local server or cluster member name. This allows using more relevant identifiers like cluster IDs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_92\n\nLANGUAGE: config\nCODE:\n```\n{config:option} loki.instance server-loki\n:defaultdesc: \"Local server host name or cluster member name\"\n:scope: \"global\"\n:shortdesc: \"Name to use as the instance field in Loki events.\"\n:type: \"string\"\nThis allows replacing the default instance value (server host name) by a more relevant value like a cluster identifier.\n```\n\n----------------------------------------\n\nTITLE: Configuring Debug Server Address in Incus\nDESCRIPTION: Specifies the address to bind the pprof debug server to over HTTP. This local setting controls where performance profiling data is available.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_52\n\nLANGUAGE: config\nCODE:\n```\n{config:option} core.debug_address server-core\n:scope: \"local\"\n:shortdesc: \"Address to bind the `pprof` debug server to (HTTP)\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Including Configuration Options from External File\nDESCRIPTION: Sphinx/MyST markdown directive to include configuration options from an external file, specifically targeting the cluster configuration section.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/cluster_member_config.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{include} ../config_options.txt\n    :start-after: <!-- config group cluster-cluster start -->\n    :end-before: <!-- config group cluster-cluster end -->\n```\n\n----------------------------------------\n\nTITLE: Demonstrating 'none' Device Type Support in Markdown\nDESCRIPTION: This code snippet is a Markdown note block indicating that the 'none' device type is supported for both containers and VMs in LXC/Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_none.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{note}\nThe `none` device type is supported for both containers and VMs.\n```\n```\n\n----------------------------------------\n\nTITLE: Setting REST API Address in Incus Cluster\nDESCRIPTION: Command to set the 'core.https_address' configuration for the REST API in an Incus cluster. This allows for separate networks for REST API and internal cluster traffic.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_config_networks.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.https_address 0.0.0.0:8443\n```\n\n----------------------------------------\n\nTITLE: Verifying LINSTOR Node Status\nDESCRIPTION: List LINSTOR nodes to verify their online status and node types.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_7\n\nLANGUAGE: terminal\nCODE:\n```\n╭─────────────────────────────────────────────────────────────╮\n┊ Node     ┊ NodeType  ┊ Addresses                   ┊ State  ┊\n╞═════════════════════════════════════════════════════════════╡\n┊ server01 ┊ COMBINED  ┊ 10.172.117.211:3366 (PLAIN) ┊ Online ┊\n┊ server02 ┊ SATELLITE ┊ 10.172.117.35:3366 (PLAIN)  ┊ Online ┊\n┊ server03 ┊ SATELLITE ┊ 10.172.117.232:3366 (PLAIN) ┊ Online ┊\n╰─────────────────────────────────────────────────────────────╯\n```\n\n----------------------------------------\n\nTITLE: YAML Code Block Example with Syntax Highlighting\nDESCRIPTION: A code block example with YAML language specification for proper syntax highlighting.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\n# Demonstrate a code block\ncode:\n- example: true\n```\n```\n\n----------------------------------------\n\nTITLE: Setting Permanent Network Interface Queue Length in Linux\nDESCRIPTION: Configuration line to be added to /etc/network/interfaces for setting a permanent transmit queue length of 10000 on network interface eth0.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_increase_bandwidth.md#2025-04-14_snippet_1\n\nLANGUAGE: conf\nCODE:\n```\nup ip link set eth0 txqueuelen 10000\n```\n\n----------------------------------------\n\nTITLE: Advanced Configuration Option Example in LXC/Incus\nDESCRIPTION: Demonstrates additional fields and formatting options for configuration documentation, including default values, types, conditions, and scopes.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options_cheat_sheet.md#2025-04-14_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ntest3 something:\n  shortdesc: testing\n  default: \"false\"\n  type: Type\n  liveupdate: Python parses the options, so \"no\" is converted to \"False\" - to prevent this, put quotes around the text (\"no\" or \"`no`\")\n  condition: \"yes\"\n  readonly: \"`maybe` - also add quotes if the option starts with code\"\n  resource: Resource,\n  managed: Managed\n  required: Required\n  scope: (this is something like \"global\" or \"local\", **not** the scope of the option (`server`, `instance`, ...))\n```\n\n----------------------------------------\n\nTITLE: Configuring MyST Substitutions in YAML\nDESCRIPTION: Example of defining reusable content substitutions in YAML frontmatter at the top of a documentation file.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\nmyst:\n  substitutions:\n    reuse_key: \"This is **included** text.\"\n    advanced_reuse_key: \"This is a substitution that includes a code block:\n                     ```\n                     code block\n                     ```\"\n---\n```\n\n----------------------------------------\n\nTITLE: Basic Code Block Example in Markdown\nDESCRIPTION: A simple code block example without language specification.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```\n# Demonstrate a code block\ncode:\n- example: true\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Loki Labels in Incus\nDESCRIPTION: Specifies the labels for Loki log entries. This global setting allows adding metadata to log entries for better filtering in Loki.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_93\n\nLANGUAGE: config\nCODE:\n```\n{config:option} loki.labels server-loki\n:scope: \"global\"\n```\n\n----------------------------------------\n\nTITLE: Generating Database Statements Examples\nDESCRIPTION: Example directives showing how to generate various SQL statements for an instance entity, including object queries, creation, updates, and deletions.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_2\n\nLANGUAGE: go\nCODE:\n```\n//generate-database:mapper stmt -e instance objects\n//generate-database:mapper stmt -e instance objects-by-Name-and-Project\n//generate-database:mapper stmt -e instance create\n//generate-database:mapper stmt -e instance update\n//generate-database:mapper stmt -e instance delete-by-Name-and-Project\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Structure Reference\nDESCRIPTION: A YAML-based toctree configuration that defines the reference documentation structure for instance configuration components. It links to documentation files for instance properties, options, devices, and units.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/instance_config.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n:maxdepth: 1\n:hidden:\n\n../reference/instance_properties.md\n../reference/instance_options.md\n../reference/devices.md\n../reference/instance_units.md\n```\n\n----------------------------------------\n\nTITLE: TPM Device Support Note\nDESCRIPTION: Important note about TPM device type compatibility and hotplugging support in Incus containers and VMs.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_tpm.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{note}\nThe `tpm` device type is supported for both containers and VMs.\nIt supports hotplugging only for containers, not for VMs.\n```\n```\n\n----------------------------------------\n\nTITLE: Map Table Implementation in Go\nDESCRIPTION: Demonstrates implementation of a map table with Key and Value fields that returns map[string]string in Go while being treated as a reference table in SQL.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n//generate-database:mapper stmt -e config create\n//generate-database:mapper method -e config Create\n\ntype Config struct {\n  ID int\n  ReferenceID int\n  Key string\n  Value string\n}\n\n//...\n//generate-database:mapper method -e instance Create references=Config\n// This will produce a function called `CreateInstanceConfig`, which will return a `map[string]string`.\n```\n\n----------------------------------------\n\nTITLE: Deleting a Snapshot of a Storage Volume in Incus\nDESCRIPTION: This command deletes a specific snapshot of a storage volume in Incus, using the pool name, volume name, and snapshot name.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_backup_volume.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus storage volume delete <pool_name> <volume_name>/<snapshot_name>\n```\n\n----------------------------------------\n\nTITLE: Background Operation Return Structure in JavaScript\nDESCRIPTION: Shows the JSON structure returned for a background operation in the Incus API. It includes type, status, status code, operation URL, and metadata fields.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api.md#2025-04-14_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"type\": \"async\",\n    \"status\": \"OK\",\n    \"status_code\": 100,\n    \"operation\": \"/1.0/instances/<id>\",                     // URL to the background operation\n    \"metadata\": {}                                          // Operation metadata (see below)\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting VPN Cgroup Conflicts\nDESCRIPTION: Command to resolve VPN client conflicts with Incus cgroup mounting\nSOURCE: https://github.com/lxc/incus/blob/main/doc/faq.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\numount /sys/fs/cgroup/net_cls\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration Table for Incus Tests in Markdown\nDESCRIPTION: This table lists all available environment variables for configuring Incus tests, including their default values and descriptions. It covers options for backend selection, debug mode, concurrency, network access, and specific hardware tests.\nSOURCE: https://github.com/lxc/incus/blob/main/test/README.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName                             | Default                   | Description\n:--                              | :---                      | :----------\n`INCUS_BACKEND`                  | dir                       | What backend to test against (btrfs, ceph, dir, lvm, zfs, or random)\n`INCUS_CEPH_CLUSTER`             | ceph                      | The name of the ceph cluster to create osd pools in\n`INCUS_CEPH_CEPHFS`              | \"\"                        | Enables the CephFS tests using the specified cephfs filesystem for `cephfs` pools\n`INCUS_CEPH_CEPHOBJECT_RADOSGW`  | \"\"                        | Enables the Ceph Object tests using the specified radosgw HTTP endpoint for `cephobject` pools\n`INCUS_CONCURRENT`               | 0                         | Run concurrency tests, very CPU intensive\n`INCUS_DEBUG`                    | 0                         | Run incusd, incus and the shell in debug mode (very verbose)\n`INCUS_INSPECT`                  | 0                         | Don't teardown the test environment on failure\n`INCUS_LOGS `                    | \"\"                        | Path to a directory to copy all the Incus logs to\n`INCUS_OFFLINE`                  | 0                         | Skip anything that requires network access\n`INCUS_SKIP_TESTS`               | \"\"                        | Space-delimited list of test names to skip\n`INCUS_TEST_IMAGE`               | \"\" (busybox test image)   | Path to an image tarball to use instead of the default busybox image\n`INCUS_TMPFS`                    | 0                         | Sets up a tmpfs for the whole testsuite to run on (fast but needs memory)\n`INCUS_NIC_SRIOV_PARENT`         | \"\"                        | Enables SR-IOV NIC tests using the specified parent device\n`INCUS_IB_PHYSICAL_PARENT`       | \"\"                        | Enables Infiniband physical tests using the specified parent device\n`INCUS_IB_SRIOV_PARENT`          | \"\"                        | Enables Infiniband SR-IOV tests using the specified parent device\n`INCUS_NIC_BRIDGED_DRIVER`       | \"\"                        | Specifies bridged NIC driver for tests (either native or openvswitch, defaults to native)\n`INCUS_REQUIRED_TESTS`           | \"\"                        | Space-delimited list of test names that must not be skipped if their prerequisites are not met\n`INCUS_VERBOSE`                  | 0                         | Run incusd, incus and the shell in verbose mode\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for Clustering Documentation in Markdown\nDESCRIPTION: This code snippet defines a table of contents using Markdown syntax, specifically the toctree directive. It lists various markdown files related to different aspects of clustering in the Incus project.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/clustering.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:titlesonly:\n\nexplanation/clustering.md\nForm a cluster <howto/cluster_form>\nAccess a cluster <howto/cluster_access>\nManage a cluster <howto/cluster_manage>\nRecover a cluster <howto/cluster_recover>\nManage cluster groups <howto/cluster_groups>\nManage instances <howto/cluster_manage_instance>\nConfigure storage <howto/cluster_config_storage>\nConfigure networks <howto/cluster_config_networks>\nreference/cluster_member_config\n```\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Inline Formatting in Markdown and MyST\nDESCRIPTION: Examples of inline formatting syntax including UI elements, code, commands, italic, and bold text.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{guilabel}`UI element`\n`code`\n{command}`command`\n*Italic*\n**Bold**\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Collapsible Sections\nDESCRIPTION: HTML markup for creating collapsible detail sections in documentation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<details>\n<summary>Details</summary>\n\nContent\n</details>\n```\n\n----------------------------------------\n\nTITLE: Defining Root Disk Device in Incus Profile\nDESCRIPTION: This YAML snippet shows how to define the storage pool for the root disk device in an Incus profile. It specifies the device type as disk, sets the path to '/', and assigns it to a pool named 'default'.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/storage.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n  root:\n    type: disk\n    path: /\n    pool: default\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Password in Incus\nDESCRIPTION: Specifies the password used for authentication with the external logging service. This global setting enables secure access to logging systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_83\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.password server-logging\n:scope: \"global\"\n:shortdesc: \"Password used for authentication\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Example iptables Configuration for Docker and Incus\nDESCRIPTION: A specific example showing how to configure iptables rules for the default Incus bridge (incusbr0) to work with Docker.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_firewalld.md#2025-04-14_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\niptables -I DOCKER-USER -i incusbr0 -j ACCEPT\niptables -I DOCKER-USER -o incusbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n```\n\n----------------------------------------\n\nTITLE: LINSTOR Storage Driver\nDESCRIPTION: Implements LINSTOR storage driver support.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_15\n\n\n\n----------------------------------------\n\nTITLE: OVN DHCP Expiry Configuration\nDESCRIPTION: Implements ipv4.dhcp.expiry configuration option for OVN networks.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_11\n\n\n\n----------------------------------------\n\nTITLE: Basic Entity Struct Definition in Go\nDESCRIPTION: Demonstrates the required structure for basic entity structs with an ID field and corresponding filter struct for WHERE clause filtering.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype Instance struct {\n  ID int\n  Name string\n  Project string\n}\n\ntype InstanceFilter struct {\n  Name *string\n  Project *string\n}\n```\n\n----------------------------------------\n\nTITLE: Importing a Unified Image from Local File System\nDESCRIPTION: Command to import a unified image (single file or directory) from the local file system into an Incus image store. The target remote is optional.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_copy.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus image import <image_file_or_directory_path> [<target_remote>:]\n```\n\n----------------------------------------\n\nTITLE: Including Incus Introduction from README.md\nDESCRIPTION: This snippet includes content from the project's README.md file, specifically the introduction section for Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/index.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} ../README.md\n    :start-after: <!-- Include start Incus intro -->\n    :end-before: <!-- Include end Incus intro -->\n```\n```\n\n----------------------------------------\n\nTITLE: Loki Integration Configuration in Markdown\nDESCRIPTION: Documentation for Loki server integration for lifecycle and logging events, including API configuration and authentication settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## `loki`\n\nThis adds support for sending life cycle and logging events to a Loki server.\n\nIt adds the following global configuration keys:\n\n* `loki.api.ca_cert`: CA certificate which can be used when sending events to the Loki server\n* `loki.api.url`: URL to the Loki server (protocol, name or IP and port)\n```\n\n----------------------------------------\n\nTITLE: Listing Internal Metrics in Markdown Table\nDESCRIPTION: A markdown table listing various internal metrics provided by Incus, including Go runtime metrics, operation counts, and uptime. Each metric is described with its name and purpose.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/provided_metrics.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```{list-table}\n   :header-rows: 1\n\n* - Metric\n  - Description\n* - `incus_go_alloc_bytes_total`\n  - Total number of bytes allocated (even if freed)\n* - `incus_go_alloc_bytes`\n  - Number of bytes allocated and still in use\n* - `incus_go_buck_hash_sys_bytes`\n  - Number of bytes used by the profiling bucket hash table\n* - `incus_go_frees_total`\n  - Total number of frees\n* - `incus_go_gc_sys_bytes`\n  - Number of bytes used for garbage collection system metadata\n* - `incus_go_goroutines`\n  - Number of goroutines that currently exist\n* - `incus_go_heap_alloc_bytes`\n  - Number of heap bytes allocated and still in use\n* - `incus_go_heap_idle_bytes`\n  - Number of heap bytes waiting to be used\n* - `incus_go_heap_inuse_bytes`\n  - Number of heap bytes that are in use\n* - `incus_go_heap_objects`\n  - Number of allocated objects\n* - `incus_go_heap_released_bytes`\n  - Number of heap bytes released to OS\n* - `incus_go_heap_sys_bytes`\n  - Number of heap bytes obtained from system\n* - `incus_go_lookups_total`\n  - Total number of pointer lookups\n* - `incus_go_mallocs_total`\n  - Total number of `mallocs`\n* - `incus_go_mcache_inuse_bytes`\n  - Number of bytes in use by `mcache` structures\n* - `incus_go_mcache_sys_bytes`\n  - Number of bytes used for `mcache` structures obtained from system\n* - `incus_go_mspan_inuse_bytes`\n  - Number of bytes in use by `mspan` structures\n* - `incus_go_mspan_sys_bytes`\n  - Number of bytes used for `mspan` structures obtained from system\n* - `incus_go_next_gc_bytes`\n  - Number of heap bytes when next garbage collection will take place\n* - `incus_go_other_sys_bytes`\n  - Number of bytes used for other system allocations\n* - `incus_go_stack_inuse_bytes`\n  - Number of bytes in use by the stack allocator\n* - `incus_go_stack_sys_bytes`\n  - Number of bytes obtained from system for stack allocator\n* - `incus_go_sys_bytes`\n  - Number of bytes obtained from system\n* - `incus_operations_total`\n  - Number of running operations\n* - `incus_uptime_seconds`\n  - Daemon uptime (in seconds)\n* - `incus_warnings_total`\n  - Number of active warnings\n```\n```\n\n----------------------------------------\n\nTITLE: Running All Tests for Incus Project in Bash\nDESCRIPTION: This command runs all tests, including Go tests, for the Incus project. It must be executed from the repository root with sudo privileges.\nSOURCE: https://github.com/lxc/incus/blob/main/test/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E make check\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents for Security Documentation in Markdown\nDESCRIPTION: This code snippet uses Sphinx toctree directive to generate a table of contents for security-related documentation. It includes links to various security topics with a maximum depth of 1.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/security.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\nexplanation/security\nauthentication\nauthorization\nExpose Incus to the network <howto/server_expose>\n```\n```\n\n----------------------------------------\n\nTITLE: Defining MyST Glossary Terms\nDESCRIPTION: Syntax for defining glossary terms that can be referenced throughout the documentation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n```{glossary}\n\nexample term\n  Definition of the example term.\n```\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Headings Syntax in Markdown\nDESCRIPTION: A reference table showing the syntax for different heading levels in Markdown, from H1 to H4 and beyond.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Title\n## Heading\n### Heading\n#### Heading\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Retry Count in Incus\nDESCRIPTION: Specifies the number of delivery retries for log messages. Default is 3. This global setting controls resilience in case of logging failures.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_84\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.retry server-logging\n:scope: \"global\"\n:shortdesc: \"number of delivery retries, default 3\"\n:type: \"integer\"\n```\n\n----------------------------------------\n\nTITLE: Instances Documentation Structure using toctree in Markdown\nDESCRIPTION: A markdown table of contents using sphinx toctree directive that organizes documentation for Incus instance management features and operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/instances.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{toctree}\n:titlesonly:\n\nexplanation/instances.md\nCreate instances <howto/instances_create.md>\nManage instances <howto/instances_manage.md>\nConfigure instances <howto/instances_configure.md>\nBack up instances <howto/instances_backup.md>\nUse profiles <profiles.md>\nUse cloud-init <cloud-init>\nRun commands <instance-exec.md>\nAccess the console <howto/instances_console.md>\nAccess files <howto/instances_access_files.md>\nAdd a routed NIC to a VM </howto/instances_routed_nic_vm.md>\nTroubleshoot errors <howto/instances_troubleshoot.md>\nexplanation/instance_config.md\nContainer environment <container-environment>\nmigration\n```\n\n----------------------------------------\n\nTITLE: Including Security Note from README.md\nDESCRIPTION: This snippet includes a security note from the project's README.md file, wrapped in an 'important' block.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/index.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} ../README.md\n    :start-after: <!-- Include start security note -->\n    :end-before: <!-- Include end security note -->\n```\n```\n\n----------------------------------------\n\nTITLE: Storage Configuration in Markdown\nDESCRIPTION: Documentation for local storage buckets configuration and storage volume creation timestamp support.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## `storage_buckets_local`\n\nThis introduces the ability to use storage buckets on local storage pools by setting the new `core.storage_buckets_address` global configuration setting.\n```\n\n----------------------------------------\n\nTITLE: Checking the Default Remote Image Server in Incus\nDESCRIPTION: Command to display which remote server is currently configured as the default image server in Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_remote.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nincus remote get-default\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Status Table in Markdown\nDESCRIPTION: A markdown table showing the status of various services related to the Incus project, including tests, documentation, and code quality checks.\nSOURCE: https://github.com/lxc/incus/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nType                | Service               | Status\n---                 | ---                   | ---\nTests               | GitHub                | [![Build Status](https://github.com/lxc/incus/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/lxc/incus/actions?query=event%3Apush+branch%3Amain)\nGo documentation    | Godoc                 | [![GoDoc](https://godoc.org/github.com/lxc/incus/v6/client?status.svg)](https://godoc.org/github.com/lxc/incus/v6/client)\nStatic analysis     | GoReport              | [![Go Report Card](https://goreportcard.com/badge/github.com/lxc/incus)](https://goreportcard.com/report/github.com/lxc/incus)\nTranslations        | Weblate               | [![Translation status](https://hosted.weblate.org/widget/incus/svg-badge.svg)](https://hosted.weblate.org/projects/incus/)\n```\n\n----------------------------------------\n\nTITLE: Building and Serving Incus Documentation\nDESCRIPTION: Commands for building the Incus documentation locally. These commands install required tools, render documentation to the doc/html/ directory, build incrementally, and serve a local preview.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake doc\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake doc-incremental\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake doc-serve\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Directive for README Support Section\nDESCRIPTION: A Markdown include directive that pulls content from the support section of the main README.md file. The directive uses specific markers to include content between designated comment tags.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/support.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{include} ../README.md\n    :start-after: <!-- Include start support -->\n    :end-before: <!-- Include end support -->\n```\n\n----------------------------------------\n\nTITLE: Adding a Network as a NIC Device\nDESCRIPTION: Alternative approach to attach a network using the device configuration command. This method allows specifying additional configuration options to override network defaults.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_create.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nincus config device add <instance_name> <device_name> nic network=<network_name>\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents for Incus Contribution Guide in Markdown\nDESCRIPTION: This code snippet creates a table of contents using the toctree directive in Markdown. It includes links to introduction, code contribution, and documentation contribution pages with a maximum depth of 1.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\nIntroduction </contributing/introduction>\nContribute to the code </contributing/code>\nContribute to the documentation </contributing/docs>\n```\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents for Networking Documentation in Markdown\nDESCRIPTION: This code snippet creates a table of contents using Markdown syntax, specifically the toctree directive. It lists various networking-related topics with links to their respective documentation pages.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/networks.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\n/explanation/networks\nCreate and configure a network </howto/network_create>\nConfigure a network </howto/network_configure>\nConfigure network ACLs </howto/network_acls>\nConfigure network address sets </howto/network_address_sets>\nConfigure network forwards </howto/network_forwards>\nConfigure network integrations </howto/network_integrations>\nConfigure network zones </howto/network_zones>\nConfigure Incus as BGP server </howto/network_bgp>\nDisplay Incus IPAM information </howto/network_ipam>\n/reference/network_bridge\n/reference/network_ovn\n/reference/network_external\nIncrease bandwidth <howto/network_increase_bandwidth>\n```\n```\n\n----------------------------------------\n\nTITLE: Running Documentation Validation Commands\nDESCRIPTION: Shows the make commands used to run local documentation validation checks for spelling, link validity, Markdown formatting, and inclusive language.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/docs.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake doc-spellcheck\nmake doc-linkcheck\nmake doc-lint\nmake doc-woke\n```\n\n----------------------------------------\n\nTITLE: Including Configuration Options in Documentation\nDESCRIPTION: Demonstrates how to include configuration options from the config_options.txt file in the documentation using Sphinx's include directive with start-after and end-before parameters.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/docs.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} config_options.txt\n    :start-after: <!-- config group server-core start -->\n    :end-before: <!-- config group server-core end -->\n```\n```\n\n----------------------------------------\n\nTITLE: Executing Non-Root Shell in Debian Instance with Incus\nDESCRIPTION: This command executes a login shell as the 'debian' user in a container named 'mycontainer'. It demonstrates how to access a non-root user shell in a Debian instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/incus_alias.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus exec mycontainer -- su -l debian\n```\n\n----------------------------------------\n\nTITLE: Formatting Documentation Comments in Go\nDESCRIPTION: Example showing the expected format for documentation comments in Go code. The comments include metadata, long descriptions, and structured key-value pairs for documentation generation.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-config/README.md#2025-04-14_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// gendoc:generate(entity=cluster, group=cluster, key=scheduler.instance)\n//\n//  <Possibly a very long documentation on multiple lines with Markdown tables, etc.>\n// ---\n//  shortdesc: Possible values are all, manual and group. See Automatic placement of instances for more information.\n//  condition: container\n//  defaultdesc: `all`\n//  type: integer\n//  liveupdate: `yes`\n//  <ANY_KEY>: <ANY_VALUE>\nclusterConfigKeys := map[string]func(value string) error{\n  \"scheduler.instance\": validate.Optional(validate.IsOneOf(\"all\", \"group\", \"manual\")),\n}\n\nfor k, v := range config {\n  // gendoc:generate(entity=cluster, group=cluster, key=user.*)\n  //\n  // This is the real long desc.\n  //\n  // With two paragraphs.\n  //\n  // And a list:\n  //\n  // - Item\n  // - Item\n  // - Item\n  //\n  // example of a table:\n  //\n  // Key                                 | Type      | Scope     | Default                                          | Description\n  // :--                                 | :---      | :----     | :------                                          | :----------\n  // `acme.agree_tos`                    | bool      | global    | `false`                                          | Agree to ACME terms of service\n  // `acme.ca_url`                       | string    | global    | `https://acme-v02.api.letsencrypt.org/directory` | URL to the directory resource of the ACME service\n  // `acme.domain`                       | string    | global    | -                                                | Domain for which the certificate is issued\n  // `acme.email`                        | string    | global    | -                                                | Email address used for the account registration\n  //\n  //  ---\n  //  shortdesc: Free form user key/value storage (can be used in search).\n  //  condition: container\n  //  default: -\n  //  type: string\n  //  liveupdate: `yes`\n  if strings.HasPrefix(k, \"user.\") {\n    continue\n  }\n\n  validator, ok := clusterConfigKeys[k]\n  if !ok {\n    return fmt.Errorf(\"Invalid cluster configuration key %q\", k)\n  }\n\n  err := validator(v)\n  if err != nil {\n    return fmt.Errorf(\"Invalid cluster configuration key %q value\", k)\n  }\n}\n\nreturn nil\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for External Network Types in Markdown\nDESCRIPTION: This code snippet defines a table of contents using Markdown syntax, listing the different types of external networks supported by Incus. It includes links to detailed documentation for MACVLAN, SR-IOV, and physical network types.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/network_external.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n/reference/network_macvlan\n/reference/network_sriov\n/reference/network_physical\n```\n```\n\n----------------------------------------\n\nTITLE: Error Return Structure in JavaScript\nDESCRIPTION: Presents the JSON structure for error responses in the Incus API. It includes type, error message, error code, and additional metadata fields.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"type\": \"error\",\n    \"error\": \"Failure\",\n    \"error_code\": 400,\n    \"metadata\": {}                      // More details about the error\n}\n```\n\n----------------------------------------\n\nTITLE: Including Contribution Guidelines with Sphinx Directive in Markdown\nDESCRIPTION: A Sphinx include directive that imports content from CONTRIBUTING.md file. The directive specifies to include only a portion of the file between specific marker comments.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/introduction.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{include} ../../CONTRIBUTING.md\n    :start-after: <!-- Include start contributing -->\n    :end-before: <!-- Include end contributing -->\n```\n\n----------------------------------------\n\nTITLE: Configuring TOC Tree in RestructuredText\nDESCRIPTION: Sets up a table of contents tree structure using Sphinx toctree directive, linking to main documentation sections including containers/VMs, installation, initialization, support, and FAQ.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/general.md#2025-04-14_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n{toctree}\n:maxdepth: 1\n\nContainers and VMs </explanation/containers_and_vms>\nInstall Incus </installing>\nInitialize Incus </howto/initialize>\nGet support </support>\nFrequently asked </faq>\n```\n\n----------------------------------------\n\nTITLE: Swagger UI Initialization and Configuration\nDESCRIPTION: JavaScript code that initializes Swagger UI with specific configuration options including the API specification URL, DOM target, and various display settings.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api-spec.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.onload = function() {\n  // Begin Swagger UI call region\n  const ui = SwaggerUIBundle({\n    url: window.location.pathname +\"../rest-api.yaml\",\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [],\n    validatorUrl: \"none\",\n    defaultModelsExpandDepth: -1,\n    supportedSubmitMethods: []\n  })\n  // End Swagger UI call region\n\n  window.ui = ui\n}\n```\n\n----------------------------------------\n\nTITLE: Querying LINSTOR Resource Definitions with Auxiliary Properties\nDESCRIPTION: This command lists LINSTOR resource definitions, showing the Incus-specific auxiliary properties used for naming and identifying resources.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_linstor_internals.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# linstor resource-definition list --show-props Aux/Incus/name Aux/Incus/content-type Aux/Incus/type\n```\n\n----------------------------------------\n\nTITLE: Swagger UI HTML Structure and StyleSheet Links\nDESCRIPTION: HTML markup that includes the necessary CSS stylesheets for Swagger UI and custom overrides, along with a container div for the UI.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api-spec.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../_static/swagger-ui/swagger-ui.css\" ></link>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../_static/swagger-override.css\" ></link>\n<div id=\"swagger-ui\"></div>\n```\n\n----------------------------------------\n\nTITLE: Including Content from README in Documentation\nDESCRIPTION: Demonstrates how to include content from the project's README.md file in the documentation using Sphinx's include directive with start-after parameter.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/contributing/docs.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} ../README.md\n    :start-after: <!-- Include start docs -->\n```\n```\n\n----------------------------------------\n\nTITLE: Association Table Implementation in Go\nDESCRIPTION: Shows implementation of an association table that connects two entities through their IDs, with directional function generation capabilities.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n//generate-database:mapper method -i -e instance_profile Create struct=Instance\n//generate-database:mapper method -i -e instance_profile Create struct=Profile\n\ntype InstanceProfile struct {\n  InstanceID int\n  ProfileID int\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Incus Client on macOS via Homebrew\nDESCRIPTION: This snippet shows how to install the Incus client on macOS using the Homebrew package manager. It installs the feature branch of Incus.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nbrew install incus\n```\n\n----------------------------------------\n\nTITLE: Ceph Terminology Include Directive\nDESCRIPTION: Markdown include directive that imports Ceph terminology content from storage_ceph.md\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephfs.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{include} storage_ceph.md\n    :start-after: <!-- Include start Ceph terminology -->\n    :end-before: <!-- Include end Ceph terminology -->\n```\n\n----------------------------------------\n\nTITLE: Storage Documentation ToC Structure in Markdown\nDESCRIPTION: A toctree directive organizing documentation sections related to storage functionality, including navigation links to storage pools, volumes, backups, and bucket management pages.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/storage.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{toctree}\n:maxdepth: 1\n\nAbout storage </explanation/storage>\nManage pools <howto/storage_pools>\nCreate an instance in a pool <howto/storage_create_instance>\nManage volumes <howto/storage_volumes>\nMove or copy a volume <howto/storage_move_volume>\nBack up a volume <howto/storage_backup_volume>\nManage buckets <howto/storage_buckets>\nreference/storage_drivers\n```\n\n----------------------------------------\n\nTITLE: Configuring Last State Volatile Options for Incus Instances\nDESCRIPTION: These options store the last known state of various device and network configurations for Incus instances.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_26\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.created instance-volatile\n:shortdesc: \"Whether the network device physical device was created\"\n:type: \"string\"\nPossible values are `true` or `false`.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.hwaddr instance-volatile\n:shortdesc: \"Network device original MAC\"\n:type: \"string\"\nThe original MAC that was used when moving a physical device into an instance.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.ip_addresses instance-volatile\n:shortdesc: \"Last used IP addresses\"\n:type: \"string\"\nComma-separated list of the last used IP addresses of the network device.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.last_state.mtu instance-volatile\n:shortdesc: \"Network device original MTU\"\n:type: \"string\"\nThe original MTU that was used when moving a physical device into an instance.\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents for Incus Server Documentation in Markdown\nDESCRIPTION: This code snippet creates a table of contents using Markdown syntax. It includes links to various sections of the Incus server documentation, such as migration, configuration, system settings, backups, performance tuning, benchmarking, monitoring, instance recovery, and database management.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/server.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\nMigrating from LXD </howto/server_migrate_lxd>\nConfigure the server <howto/server_configure>\n/server_config\nSystem settings <reference/server_settings>\nBackups <backup>\nPerformance tuning <explanation/performance_tuning>\nBenchmarking <howto/benchmark_performance>\nMonitor metrics <metrics>\nRecover instances <howto/disaster_recovery>\nDatabase </database>\n/architectures\n```\n```\n\n----------------------------------------\n\nTITLE: Ceph Driver Control Include Directive\nDESCRIPTION: Markdown include directive that imports Ceph driver control configuration content from storage_ceph.md\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephfs.md#2025-04-14_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{include} storage_ceph.md\n    :start-after: <!-- Include start Ceph driver control -->\n    :end-before: <!-- Include end Ceph driver control -->\n```\n\n----------------------------------------\n\nTITLE: Defining Project Documentation Structure with Sphinx Toctree\nDESCRIPTION: A toctree directive that organizes project documentation into logical sections including explanations, how-to guides for creating, working with, and confining projects, and reference documentation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/projects.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{toctree}\n:maxdepth: 1\n\nexplanation/projects\nCreate and configure projects <howto/projects_create>\nWork with different projects <howto/projects_work>\nConfine projects to users <howto/projects_confine>\nreference/projects\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Incus on Chimera Linux\nDESCRIPTION: This snippet demonstrates how to install Incus on Chimera Linux, including enabling the user repository and setting up for VM support.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\napk add chimera-repo-user\napk update\napk add incus\ndinitctl enable incus\napk add qemu-edk2-firmware\ndinitctl restart incus\n# incus launch images:debian/12 --vm -c security.secureboot=false\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for Incus REST API Documentation in Markdown\nDESCRIPTION: This code snippet creates a table of contents using the toctree directive in Markdown. It lists various sections of the REST API documentation with maxdepth set to 1, ensuring a flat structure for easy navigation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\nMain API documentation <rest-api>\nrest-api-spec\nMain API extensions <api-extensions>\nInstance API documentation <dev-incus>\nEvents API documentation <events>\nMetrics API documentation <reference/provided_metrics>\n```\n```\n\n----------------------------------------\n\nTITLE: Adding LINBIT PPA for LINSTOR Installation\nDESCRIPTION: Add the LINBIT PPA repository to install LINSTOR components on Ubuntu systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo add-apt-repository ppa:linbit/linbit-drbd9-stack\nsudo apt update\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents for External Resources in Markdown\nDESCRIPTION: This code snippet creates a table of contents using the toctree directive in Markdown. It lists external resources for the Incus project, including the project repository, image server, and third-party tools page.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/external_resources.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:maxdepth: 1\n\nProject repository <https://github.com/lxc/incus>\nImage server <https://images.linuxcontainers.org>\nThird party tools </third_party>\n```\n```\n\n----------------------------------------\n\nTITLE: Swagger UI JavaScript Dependencies\nDESCRIPTION: Script tags that load the required Swagger UI JavaScript bundles with UTF-8 encoding.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/rest-api-spec.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"../_static/swagger-ui/swagger-ui-bundle.js\" charset=\"UTF-8\"> </script>\n<script src=\"../_static/swagger-ui/swagger-ui-standalone-preset.js\" charset=\"UTF-8\"> </script>\n```\n\n----------------------------------------\n\nTITLE: Verifying systemd-resolved Settings for Incus Bridge\nDESCRIPTION: Command to verify the applied DNS settings for an Incus network bridge in systemd-resolved.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nresolvectl status <network_bridge>\n```\n\n----------------------------------------\n\nTITLE: Resetting Generated File Content\nDESCRIPTION: Directives to clear existing content in a generated file and set build constraints. Used at the beginning of new generated files.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n//generate-database:mapper target instances.mapper.go\n//generate-database:mapper reset -i -b \"//go:build linux && cgo && !agent\"\n```\n\n----------------------------------------\n\nTITLE: Network Interface Configuration and HTTPS Address Setting\nDESCRIPTION: Terminal session showing how to check available network interfaces using ip addr and setting a specific IP address for Incus server access.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/server_expose.md#2025-04-14_snippet_1\n\nLANGUAGE: terminal\nCODE:\n```\n:input: ip addr\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: enp5s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    link/ether 10:66:6a:e3:f3:3f brd ff:ff:ff:ff:ff:ff\n    inet 10.68.216.12/24 metric 100 brd 10.68.216.255 scope global dynamic enp5s0\n       valid_lft 3028sec preferred_lft 3028sec\n    inet6 fd42:e819:7a51:5a7b:1266:6aff:fee3:f33f/64 scope global mngtmpaddr noprefixroute\n       valid_lft forever preferred_lft forever\n    inet6 fe80::1266:6aff:fee3:f33f/64 scope link\n       valid_lft forever preferred_lft forever\n3: incusbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 10:66:6a:8d:f3:72 brd ff:ff:ff:ff:ff:ff\n    inet 10.64.82.1/24 scope global incusbr0\n       valid_lft forever preferred_lft forever\n    inet6 fd42:f4ab:4399:e6eb::1/64 scope global\n       valid_lft forever preferred_lft forever\n:input: incus config set core.https_address 10.68.216.12\n```\n\n----------------------------------------\n\nTITLE: Checking LINSTOR Node Features\nDESCRIPTION: Display information about available features on LINSTOR nodes, focusing on LVMThin and DRBD capabilities.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_8\n\nLANGUAGE: terminal\nCODE:\n```\n╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n┊ Node     ┊ Diskless ┊ LVM ┊ LVMThin ┊ ZFS/Thin ┊ File/Thin ┊ SPDK ┊ EXOS ┊ Remote SPDK ┊ Storage Spaces ┊ Storage Spaces/Thin ┊\n╞═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╡\n┊ server01 ┊ +        ┊ +   ┊ +       ┊ +        ┊ +         ┊ -    ┊ -    ┊ +           ┊ -              ┊ -                   ┊\n┊ server02 ┊ +        ┊ +   ┊ +       ┊ +        ┊ +         ┊ -    ┊ -    ┊ +           ┊ -              ┊ -                   ┊\n┊ server03 ┊ +        ┊ +   ┊ +       ┊ +        ┊ +         ┊ -    ┊ -    ┊ +           ┊ -              ┊ -                   ┊\n╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\n╭───────────────────────────────────────────────────────────────────────╮\n┊ Node     ┊ DRBD ┊ LUKS ┊ NVMe ┊ Cache ┊ BCache ┊ WriteCache ┊ Storage ┊\n╞═══════════════════════════════════════════════════════════════════════╡\n┊ server01 ┊ +    ┊ -    ┊ -    ┊ +     ┊ -      ┊ +          ┊ +       ┊\n┊ server02 ┊ +    ┊ -    ┊ -    ┊ +     ┊ -      ┊ +          ┊ +       ┊\n┊ server03 ┊ +    ┊ -    ┊ -    ┊ +     ┊ -      ┊ +          ┊ +       ┊\n╰───────────────────────────────────────────────────────────────────────╯\n```\n\n----------------------------------------\n\nTITLE: Ceph Driver Cluster Include Directive\nDESCRIPTION: Markdown include directive that imports Ceph driver cluster configuration content from storage_ceph.md\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephfs.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{include} storage_ceph.md\n    :start-after: <!-- Include start Ceph driver cluster -->\n    :end-before: <!-- Include end Ceph driver cluster -->\n```\n\n----------------------------------------\n\nTITLE: Enabling LINSTOR Controller Service\nDESCRIPTION: Enable and start the LINSTOR controller service to ensure it runs on system boot.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/storage_linstor_setup.md#2025-04-14_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl enable --now linstor-controller\n```\n\n----------------------------------------\n\nTITLE: Alternative systemd-resolve Configuration Command\nDESCRIPTION: Deprecated but backwards-compatible command to configure systemd-resolve for an Incus network bridge.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_bridge_resolved.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsystemd-resolve --interface <network_bridge> --set-domain ~<dns_domain> --set-dns <dns_address> --set-dnsovertls=off --set-dnssec=off\n```\n\n----------------------------------------\n\nTITLE: Creating Network Peer Connection in Incus\nDESCRIPTION: Command to create a network peer connection using a remote integration type.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_integrations.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus network peer create default region ovn-region --type=remote\n```\n\n----------------------------------------\n\nTITLE: Enabling Container Nesting in Incus\nDESCRIPTION: Commands to enable Docker support inside an Incus container by configuring security nesting and kernel modules\nSOURCE: https://github.com/lxc/incus/blob/main/doc/faq.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus config set <container> security.nesting true\nincus config set <container_name> linux.kernel_modules <modules>\n```\n\n----------------------------------------\n\nTITLE: Defining GPU Device Options for MDEV GPUs in Incus\nDESCRIPTION: This YAML snippet details the device options for MDEV (Mediated Device) GPU types in Incus. It includes options for specifying the GPU's ID, MDEV profile, PCI address, and other identifiers.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_gpu.md#2025-04-14_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nKey         | Type      | Default           | Description\n:--         | :--       | :--               | :--\n`id`        | string    | -                 | The DRM card ID of the GPU device\n`mdev`      | string    | -                 | The `mdev` profile to use (required - for example, `i915-GVTg_V5_4`)\n`pci`       | string    | -                 | The PCI address of the GPU device\n`productid` | string    | -                 | The product ID of the GPU device\n`vendorid`  | string    | -                 | The vendor ID of the GPU device\n```\n\n----------------------------------------\n\nTITLE: Stopping Incus Services\nDESCRIPTION: Commands to stop the Incus daemon and socket services. This is a prerequisite step before performing cluster recovery operations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/cluster_recover.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl stop incus.service incus.socket\n```\n\n----------------------------------------\n\nTITLE: Copying an Image to Local Store\nDESCRIPTION: Command to copy an Ubuntu image from the remote 'images' repository to the local image store. This allows benchmarking without including image download time in the results.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/benchmark_performance.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus image copy images:ubuntu/22.04 local:\n```\n\n----------------------------------------\n\nTITLE: Restricting Access to Kernel Information in Markdown\nDESCRIPTION: Commands to prevent container name leakage by blocking access to kernel information files.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/explanation/security.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n    chmod 400 /proc/sched_debug\n    chmod 700 /sys/kernel/slab/\n```\n\n----------------------------------------\n\nTITLE: Configuring P2P NIC in Incus\nDESCRIPTION: Documentation for the 'p2p' NIC type in Incus. It creates a virtual device pair, putting one side in the instance and leaving the other side on the host. Device options include boot priority, host name, MAC address, I/O limits, and routing configurations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/devices_nic.md#2025-04-14_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nKey                     | Type    | Default           | Description\n:--                     | :--     | :--               | :--\n`boot.priority`         | integer | -                 | Boot priority for VMs (higher value boots first)\n`host_name`             | string  | randomly assigned | The name of the interface inside the host\n`hwaddr`                | string  | randomly assigned | The MAC address of the new interface\n`io.bus`                | string  | `virtio`          | Override the bus for the device (can be `virtio` or `usb`) (VM only)\n`ipv4.routes`           | string  | -                 | Comma-delimited list of IPv4 static routes to add on host to NIC\n`ipv6.routes`           | string  | -                 | Comma-delimited list of IPv6 static routes to add on host to NIC\n`limits.egress`         | string  | -                 | I/O limit in bit/s for outgoing traffic (various suffixes supported, see {ref}`instances-limit-units`)\n`limits.ingress`        | string  | -                 | I/O limit in bit/s for incoming traffic (various suffixes supported, see {ref}`instances-limit-units`)\n`limits.max`            | string  | -                 | I/O limit in bit/s for both incoming and outgoing traffic (same as setting both `limits.ingress` and `limits.egress`)\n`limits.priority`       | integer | -                 | The `skb->priority` value (32-bit unsigned integer) for outgoing traffic, to be used by the kernel queuing discipline (qdisc) to prioritize network packets (The effect of this value depends on the particular qdisc implementation, for example, `SKBPRIO` or `QFQ`. Consult the kernel qdisc documentation before setting this value.)\n`mtu`                   | integer | kernel assigned   | The MTU of the new interface\n`name`                  | string  | kernel assigned   | The name of the interface inside the instance\n`queue.tx.length`       | integer | -                 | The transmit queue length for the NIC\n```\n\n----------------------------------------\n\nTITLE: Filtering Incus Images by Name or Fingerprint\nDESCRIPTION: Commands to filter image listings by various criteria such as version, architecture, or custom properties.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/images_manage.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nincus image list images: 22.04\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image list images: 22.04 arm64\n```\n\nLANGUAGE: bash\nCODE:\n```\nincus image list images: 22.04 architecture=x86_64\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents for Documentation\nDESCRIPTION: This snippet defines a hidden table of contents for the documentation, listing various sections of the Incus documentation.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/index.md#2025-04-14_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:hidden:\n:titlesonly:\n\nself\nGetting Started </tutorial/first_steps>\nGeneral </general>\nClient </client>\nServer </server>\nInstances </instances>\nStorage </storage>\nNetworks </networks>\nImages </images>\nProjects </projects>\nClustering </clustering>\nAPI </api>\nSecurity </security>\nInternals </internals>\nContributing </contributing>\nExternal resources </external_resources>\n```\n```\n\n----------------------------------------\n\nTITLE: ACME DNS-01 Challenge Support\nDESCRIPTION: Implementation of DNS-01 challenge support for Incus ACME certificate generation system.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Including Release Information in Markdown\nDESCRIPTION: This snippet demonstrates how to include content from an external markdown file (support.md) into the current document. It specifically includes information about Incus releases.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/installing.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```{include} support.md\n    :start-after: <!-- Include start release -->\n    :end-before: <!-- Include end release -->\n```\n```\n\n----------------------------------------\n\nTITLE: Project Networks Configuration in Markdown\nDESCRIPTION: Documentation for restricted network access configuration in projects, including access control settings and network zones management.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## `projects_networks_restricted_access`\n\nAdds the `restricted.networks.access` project configuration key to indicate (as a comma-delimited list) which networks can be accessed inside the project.\nIf not specified, all networks are accessible (assuming it is also allowed by the `restricted.devices.nic` setting, described below).\n```\n\n----------------------------------------\n\nTITLE: IOMMU Security Configuration\nDESCRIPTION: Introduces security.iommu configuration key for controlling IOMMU emulation through virtio_iommu on Linux and Intel IOMMU on Windows.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/api-extensions.md#2025-04-14_snippet_6\n\n\n\n----------------------------------------\n\nTITLE: Initializing Database Generator in Go Package\nDESCRIPTION: Basic go:generate directive to initialize the database generator in a package. This must be included once per package that uses generate-database.\nSOURCE: https://github.com/lxc/incus/blob/main/cmd/generate-database/README.md#2025-04-14_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n//go:generate generate-database db mapper generate\n```\n\n----------------------------------------\n\nTITLE: Reverse DNS Zone Transfer Output Example\nDESCRIPTION: Example output from a dig AXFR query showing reverse DNS records\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_2\n\nLANGUAGE: terminal\nCODE:\n```\n2.0.192.in-addr.arpa.                  3600 IN SOA  2.0.192.in-addr.arpa. ns1.2.0.192.in-addr.arpa. 1669736828 120 60 86400 30\n2.0.192.in-addr.arpa.                  300  IN NS   ns1.2.0.192.in-addr.arpa.\n1.2.0.192.in-addr.arpa.                300  IN PTR  inctest.gw.incus.example.net.\n20.2.0.192.in-addr.arpa.               300  IN PTR  default-ovntest.uplink.incus.example.net.\n125.2.0.192.in-addr.arpa.              300  IN PTR  c1.incus.example.net.\n2.0.192.in-addr.arpa.                  3600 IN SOA  2.0.192.in-addr.arpa. ns1.2.0.192.in-addr.arpa. 1669736828 120 60 86400 30\n```\n\n----------------------------------------\n\nTITLE: Hidden TOC Configuration in Markdown\nDESCRIPTION: A toctree directive specifying hidden documentation pages related to LINSTOR storage setup and internals.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_linstor.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{toctree}\n:maxdepth: 1\n:hidden:\n\nSetup LINSTOR </howto/storage_linstor_setup>\nDriver internals <storage_linstor_internals>\n```\n\n----------------------------------------\n\nTITLE: Nested Code Block with Backticks Example\nDESCRIPTION: A demonstration of how to include backticks within a code block by increasing the number of surrounding backticks.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n````\n```\n````\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests for Incus Project in Bash\nDESCRIPTION: This command runs only the integration tests for the Incus project. It must be executed from the test directory with sudo privileges.\nSOURCE: https://github.com/lxc/incus/blob/main/test/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E ./main.sh\n```\n\n----------------------------------------\n\nTITLE: Ceph Introduction Include Directive\nDESCRIPTION: Markdown include directive that imports Ceph introduction content from storage_ceph.md\nSOURCE: https://github.com/lxc/incus/blob/main/doc/reference/storage_cephfs.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{include} storage_ceph.md\n    :start-after: <!-- Include start Ceph intro -->\n    :end-before: <!-- Include end Ceph intro -->\n```\n\n----------------------------------------\n\nTITLE: DNS Server Zone Transfer Output Example\nDESCRIPTION: Example output from a dig AXFR query showing DNS zone transfer records\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/network_zones.md#2025-04-14_snippet_1\n\nLANGUAGE: terminal\nCODE:\n```\nincus.example.net.                        3600 IN SOA  incus.example.net. ns1.incus.example.net. 1669736788 120 60 86400 30\nincus.example.net.                        300  IN NS   ns1.incus.example.net.\ninctest.gw.incus.example.net.             300  IN A    192.0.2.1\ninctest.gw.incus.example.net.             300  IN AAAA fd42:4131:a53c:7211::1\ndefault-ovntest.uplink.incus.example.net. 300  IN A    192.0.2.20\ndefault-ovntest.uplink.incus.example.net. 300  IN AAAA fd42:4131:a53c:7211:1266:6aff:fe4e:b794\nc1.incus.example.net.                     300  IN AAAA fd42:4131:a53c:7211:1266:6aff:fe19:6ede\nc1.incus.example.net.                     300  IN A    192.0.2.125\nmanualtest.incus.example.net.             300  IN A    8.8.8.8\nincus.example.net.                        3600 IN SOA  incus.example.net. ns1.incus.example.net. 1669736788 120 60 86400 30\n```\n\n----------------------------------------\n\nTITLE: Disabling Authentication for Metrics API (Not Recommended)\nDESCRIPTION: Disable authentication for the metrics API endpoint. This is not recommended for security reasons.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/metrics.md#2025-04-14_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nincus config set core.metrics_authentication false\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Packages with cloud-init in YAML\nDESCRIPTION: YAML configuration for installing git and openssh-server packages during the first boot of an Incus instance using cloud-init user-data.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/cloud-init.md#2025-04-14_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nconfig:\n  cloud-init.user-data: |\n    #cloud-config\n    packages:\n      - git\n      - openssh-server\n```\n\n----------------------------------------\n\nTITLE: Retrieving API Information in Incus Instance-Host Communication\nDESCRIPTION: GET request to the /1.0 endpoint returns information about the 1.0 API, including API version, location, instance type, and state.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/dev-incus.md#2025-04-14_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"api_version\": \"1.0\",\n    \"location\": \"foo.example.com\",\n    \"instance_type\": \"container\",\n    \"state\": \"Started\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Configuration Keys in Incus Instance-Host Communication\nDESCRIPTION: GET request to the /1.0/config endpoint returns a list of configuration key URLs. Only 'cloud-init.*' and 'user.*' keys are accessible to the instance.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/dev-incus.md#2025-04-14_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n    \"/1.0/config/user.a\"\n]\n```\n\n----------------------------------------\n\nTITLE: Navigation Syntax with Toctree Directive\nDESCRIPTION: Example showing how to include subpages in the documentation navigation using the toctree directive. The :hidden: option prevents the table of contents from being displayed.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/doc-cheat-sheet.md#2025-04-14_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n```{toctree}\n:hidden:\n\nsubpage1\nsubpage2\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Syslog Facility in Incus\nDESCRIPTION: Specifies the syslog facility to use, which defines the category of the log message. This global setting helps categorize logs in syslog systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_80\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.facility server-logging\n:scope: \"global\"\n:shortdesc: \"The syslog facility defines the category of the log message\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Volatile Options for Incus Instances\nDESCRIPTION: These options control various runtime (volatile) settings for Incus instances, including disk quotas, device paths, and network configurations.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_25\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.apply_quota instance-volatile\n:shortdesc: \"Disk quota\"\n:type: \"string\"\nThe disk quota is applied the next time the instance starts.\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.ceph_rbd instance-volatile\n:shortdesc: \"RBD device path for Ceph disk devices\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.host_name instance-volatile\n:shortdesc: \"Network device name on the host\"\n:type: \"string\"\n\n```\n\nLANGUAGE: config\nCODE:\n```\n{config:option} volatile.<name>.hwaddr instance-volatile\n:shortdesc: \"Network device MAC address\"\n:type: \"string\"\nThe network device MAC address is used when no `hwaddr` property is set on the device itself.\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger Username in Incus\nDESCRIPTION: Specifies the username used for authentication with the external logging service. This global setting enables secure access to logging systems.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/config_options.txt#2025-04-14_snippet_86\n\nLANGUAGE: config\nCODE:\n```\n{config:option} logging.NAME.target.username server-logging\n:scope: \"global\"\n:shortdesc: \"User name used for authentication\"\n:type: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Configuring and Creating an Incus Virtual Machine Instance\nDESCRIPTION: This snippet shows the interactive process of creating a new virtual machine instance in Incus. It includes steps for specifying the root filesystem, configuring CPU limits, setting storage size and pool, and choosing a network.\nSOURCE: https://github.com/lxc/incus/blob/main/doc/howto/import_machines_to_instances.md#2025-04-14_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n   Please provide the path to a root filesystem: ./virtual-machine.img\n   Does the VM support UEFI Secure Boot? [default=no]: no\n\n   Instance to be created:\n     Name: foo\n     Project: default\n     Type: virtual-machine\n     Source: ./virtual-machine.img\n     Config:\n       security.secureboot: \"false\"\n\n   Additional overrides can be applied at this stage:\n   1) Begin the migration with the above configuration\n   2) Override profile list\n   3) Set additional configuration options\n   4) Change instance storage pool or volume size\n   5) Change instance network\n\n   Please pick one of the options above [default=1]: 3\n   Please specify config keys and values (key=value ...): limits.cpu=2\n\n   Instance to be created:\n     Name: foo\n     Project: default\n     Type: virtual-machine\n     Source: ./virtual-machine.img\n     Config:\n       limits.cpu: \"2\"\n       security.secureboot: \"false\"\n\n   Additional overrides can be applied at this stage:\n   1) Begin the migration with the above configuration\n   2) Override profile list\n   3) Set additional configuration options\n   4) Change instance storage pool or volume size\n   5) Change instance network\n\n   Please pick one of the options above [default=1]: 4\n   Please provide the storage pool to use: default\n   Do you want to change the storage size? [default=no]: yes\n   Please specify the storage size: 20GiB\n\n   Instance to be created:\n     Name: foo\n     Project: default\n     Type: virtual-machine\n     Source: ./virtual-machine.img\n     Storage pool: default\n     Storage pool size: 20GiB\n     Config:\n       limits.cpu: \"2\"\n       security.secureboot: \"false\"\n\n   Additional overrides can be applied at this stage:\n   1) Begin the migration with the above configuration\n   2) Override profile list\n   3) Set additional configuration options\n   4) Change instance storage pool or volume size\n   5) Change instance network\n\n   Please pick one of the options above [default=1]: 5\n   Please specify the network to use for the instance: incusbr0\n\n   Instance to be created:\n     Name: foo\n     Project: default\n     Type: virtual-machine\n     Source: ./virtual-machine.img\n     Storage pool: default\n     Storage pool size: 20GiB\n     Network name: incusbr0\n     Config:\n       limits.cpu: \"2\"\n       security.secureboot: \"false\"\n\n   Additional overrides can be applied at this stage:\n   1) Begin the migration with the above configuration\n   2) Override profile list\n   3) Set additional configuration options\n   4) Change instance storage pool or volume size\n   5) Change instance network\n\n   Please pick one of the options above [default=1]: 1\n   Instance foo successfully created\n```"
  }
]
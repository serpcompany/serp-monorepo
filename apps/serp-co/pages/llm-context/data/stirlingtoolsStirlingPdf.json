[
  {
    "owner": "stirling-tools",
    "repo": "stirling-pdf",
    "content": "TITLE: Docker Compose Configuration with Security\nDESCRIPTION: Example Docker Compose configuration for Stirling-PDF with security features enabled, including resource limits, healthchecks, and environment variables.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  stirling-pdf:\n    container_name: Stirling-PDF-Security\n    image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest\n    deploy:\n      resources:\n        limits:\n          memory: 4G\n    healthcheck:\n      test: [\"CMD-SHELL\", \"curl -f http://localhost:8080/api/v1/info/status | grep -q 'UP' && curl -fL http://localhost:8080/ | grep -q 'Please sign in'\"]\n      interval: 5s\n      timeout: 10s\n      retries: 16\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - /stirling/latest/data:/usr/share/tessdata:rw\n      - /stirling/latest/config:/configs:rw\n      - /stirling/latest/logs:/logs:rw\n    environment:\n      DOCKER_ENABLE_SECURITY: \"true\"\n      SECURITY_ENABLELOGIN: \"true\"\n      PUID: 1002\n      PGID: 1002\n      UMASK: \"022\"\n      SYSTEM_DEFAULTLOCALE: en-US\n      UI_APPNAME: Stirling-PDF\n      UI_HOMEDESCRIPTION: Demo site for Stirling-PDF Latest with Security\n      UI_APPNAMENAVBAR: Stirling-PDF Latest\n      SYSTEM_MAXFILESIZE: \"100\"\n      METRICS_ENABLED: \"true\"\n      SYSTEM_GOOGLEVISIBILITY: \"true\"\n    restart: on-failure:5\n```\n\n----------------------------------------\n\nTITLE: Customizing Docker Container with Environment Variables\nDESCRIPTION: Example Docker command for running Stirling-PDF with custom environment variables to modify application settings like the application name.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8080:8080 -e APP_NAME=\"My PDF Tool\" stirling-pdf:full\n```\n\n----------------------------------------\n\nTITLE: Implementing a Service Layer in Spring for Business Logic\nDESCRIPTION: Example of creating a service class in Spring to encapsulate business logic for a new feature in Stirling-PDF.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_17\n\nLANGUAGE: java\nCODE:\n```\npackage stirling.software.SPDF.service;\n\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class NewFeatureService {\n\n    public String getNewFeatureData() {\n        // Implement business logic here\n        return \"New Feature Data\";\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Spring Service with Controller using Dependency Injection\nDESCRIPTION: Java code showing how to integrate a service with a controller using Spring's dependency injection (@Autowired) to handle API requests in Stirling-PDF.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_18\n\nLANGUAGE: java\nCODE:\n```\npackage stirling.software.SPDF.controller.api;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport stirling.software.SPDF.service.NewFeatureService;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.tags.Tag;\n\n@RestController\n@RequestMapping(\"/api/v1/new-feature\")\n@Tag(name = \"General\", description = \"General APIs\")\npublic class NewFeatureController {\n\n    @Autowired\n    private NewFeatureService newFeatureService;\n\n    @GetMapping\n    @Operation(summary = \"New Feature\", description = \"This is a new feature endpoint.\")\n    public String newFeature() {\n        return newFeatureService.getNewFeatureData();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Spring RestController for API Endpoint\nDESCRIPTION: Java code showing how to create a new REST controller with Swagger documentation for a new feature API endpoint in Stirling-PDF.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_16\n\nLANGUAGE: java\nCODE:\n```\npackage stirling.software.SPDF.controller.api;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.tags.Tag;\n\n@RestController\n@RequestMapping(\"/api/v1/new-feature\")\n@Tag(name = \"General\", description = \"General APIs\")\npublic class NewFeatureController {\n\n    @GetMapping\n    @Operation(summary = \"New Feature\", description = \"This is a new feature endpoint.\")\n    public String newFeature() {\n        return \"NewFeatureResponse\"; // This refers to the NewFeatureResponse.html template presenting the user with the generated html from that file when they navigate to /api/v1/new-feature\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing UI Controller for New Stirling-PDF Feature\nDESCRIPTION: Java controller class for handling UI requests to the new feature. The controller maps to the '/new-feature' endpoint and renders the corresponding Thymeleaf template.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_20\n\nLANGUAGE: java\nCODE:\n```\npackage stirling.software.SPDF.controller.ui;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport stirling.software.SPDF.service.NewFeatureService;\n\n@Controller\n@RequestMapping(\"/new-feature\")\npublic class NewFeatureUIController {\n\n    @Autowired\n    private NewFeatureService newFeatureService;\n\n    @GetMapping\n    public String newFeaturePage(Model model) {\n        model.addAttribute(\"newFeatureData\", newFeatureService.getNewFeatureData());\n        return \"new-feature\";\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Thymeleaf Template for New Feature in Stirling-PDF\nDESCRIPTION: Example HTML template for a new feature using Thymeleaf with proper structure, including fragments for head, navbar, and footer. Demonstrates form setup with file input and other controls.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html th:lang=\"${#locale.language}\" th:dir=\"#{language.direction}\" th:data-language=\"${#locale.toString()}\" xmlns:th=\"https://www.thymeleaf.org\">\n  <head>\n  <th:block th:insert=\"~{fragments/common :: head(title=#{newFeature.title}, header=#{newFeature.header})}\"></th:block>\n  </head>\n\n  <body>\n    <div id=\"page-container\">\n      <div id=\"content-wrap\">\n        <th:block th:insert=\"~{fragments/navbar.html :: navbar}\"></th:block>\n        <br><br>\n        <div class=\"container\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-md-6 bg-card\">\n              <div class=\"tool-header\">\n                <span class=\"material-symbols-rounded tool-header-icon organize\">upload</span>\n                <span class=\"tool-header-text\" th:text=\"#{newFeature.header}\"></span>\n              </div>\n              <form th:action=\"@{'/api/v1/new-feature'}\" method=\"post\" enctype=\"multipart/form-data\">\n                <div th:replace=\"~{fragments/common :: fileSelector(name='fileInput', multipleInputsForSingleRequest=false, accept='application/pdf')}\"></div>\n                <input type=\"hidden\" id=\"customMode\" name=\"customMode\" value=\"\">\n                <div class=\"mb-3\">\n                  <label for=\"featureInput\" th:text=\"#{newFeature.prompt}\"></label>\n                  <input type=\"text\" class=\"form-control\" id=\"featureInput\" name=\"featureInput\" th:placeholder=\"#{newFeature.placeholder}\" required>\n                </div>\n\n                <button type=\"submit\" id=\"submitBtn\" class=\"btn btn-primary\" th:text=\"#{newFeature.submit}\"></button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <th:block th:insert=\"~{fragments/footer.html :: navbar}\"></th:block>\n    </div>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Collections in Thymeleaf Template\nDESCRIPTION: HTML/Thymeleaf code demonstrating how to loop through a collection of objects using th:each and access object properties within the template.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<tbody>\n   <!-- Use th:each to iterate over the list -->\n   <tr th:each=\"person : ${exampleData}\">\n       <td th:text=\"${person.id}\"></td>\n       <td th:text=\"${person.name}\"></td>\n       <td th:text=\"${person.age}\"></td>\n       <td th:text=\"${person.email}\"></td>\n   </tr>\n</tbody>\n```\n\n----------------------------------------\n\nTITLE: Adding Translation Entries for Stirling-PDF Localization\nDESCRIPTION: Example of adding translation entries to properties files for internationalization in Stirling-PDF. Shows how to structure translation keys hierarchically for a new PDF Splitter feature.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_22\n\nLANGUAGE: properties\nCODE:\n```\npdfSplitter.title=PDF Splitter\npdfSplitter.description=Split your PDF into multiple documents\npdfSplitter.button.split=Split PDF\npdfSplitter.input.pages=Enter page numbers to split\n```\n\n----------------------------------------\n\nTITLE: Using Translations in Thymeleaf Templates for Stirling-PDF\nDESCRIPTION: HTML example showing how to reference translation keys in Thymeleaf templates for proper localization. Demonstrates the use of th:text attributes with translation references.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_23\n\nLANGUAGE: html\nCODE:\n```\n<h1 th:text=\"#{pdfSplitter.title}\">PDF Splitter</h1>\n<p th:text=\"#{pdfSplitter.description}\">Split your PDF into multiple documents</p>\n<input type=\"text\" th:placeholder=\"#{pdfSplitter.input.pages}\">\n<button th:text=\"#{pdfSplitter.button.split}\">Split PDF</button>\n```\n\n----------------------------------------\n\nTITLE: Including Thymeleaf Fragments in HTML Templates\nDESCRIPTION: Examples of using Thymeleaf's th:insert attribute to include reusable fragments like navbar and footer in HTML templates.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<th:block th:insert=\"~{fragments/navbar.html :: navbar}\"></th:block>\n```\n\nLANGUAGE: html\nCODE:\n```\n<th:block th:insert=\"~{fragments/footer.html :: footer}\"></th:block>\n```\n\n----------------------------------------\n\nTITLE: Passing Parameters to Thymeleaf Fragments\nDESCRIPTION: Example of passing parameters (title and header) to a Thymeleaf fragment during insertion, allowing for dynamic content generation in templates.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<th:block th:insert=\"~{fragments/common :: head(title=#{pageExtracter.title}, header=#{pageExtracter.header})}\"></th:block>\n```\n\n----------------------------------------\n\nTITLE: Adding Data to Thymeleaf Model in Spring Controller\nDESCRIPTION: Java controller method that adds example data to the model, which can then be accessed within Thymeleaf templates for dynamic rendering.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_14\n\nLANGUAGE: java\nCODE:\n```\n@GetMapping\n       public String newFeaturePage(Model model) {\n           model.addAttribute(\"exampleData\", exampleData);\n           return \"new-feature\";\n       }\n```\n\n----------------------------------------\n\nTITLE: Adding Navigation Link for New Feature in Stirling-PDF\nDESCRIPTION: HTML snippet for adding a navigation link to the new feature in the application's navbar. This code would be integrated into the existing navbar.html fragment.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_21\n\nLANGUAGE: html\nCODE:\n```\n<li class=\"nav-item\">\n    <a class=\"nav-link\" th:href=\"@{/new-feature}\">New Feature</a>\n</li>\n```\n\n----------------------------------------\n\nTITLE: Building Docker Images\nDESCRIPTION: Commands to build different versions of Docker images including latest, ultra-lite, and fat versions.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker build --no-cache --pull --build-arg VERSION_TAG=alpha -t stirlingtools/stirling-pdf:latest -f ./Dockerfile .\n\ndocker build --no-cache --pull --build-arg VERSION_TAG=alpha -t stirlingtools/stirling-pdf:latest-ultra-lite -f ./Dockerfile.ultra-lite .\n\nexport DOCKER_ENABLE_SECURITY=true\ndocker build --no-cache --pull --build-arg VERSION_TAG=alpha -t stirlingtools/stirling-pdf:latest-fat -f ./Dockerfile.fat .\n```\n\n----------------------------------------\n\nTITLE: Running Local Development Server\nDESCRIPTION: Command to run Stirling-PDF locally using Gradle for development.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew bootRun\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Bash Script\nDESCRIPTION: A command to run the test script that verifies all versions build correctly and pass Cucumber tests before submitting a pull request.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n./test.sh\n```\n\n----------------------------------------\n\nTITLE: Running Test Script\nDESCRIPTION: Command to run the comprehensive testing script.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n./test.sh\n```\n\n----------------------------------------\n\nTITLE: Building Project with Gradle\nDESCRIPTION: Command to clean and build the project using Gradle.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew clean build\n```\n\n----------------------------------------\n\nTITLE: Running Docker Compose with Custom Configuration\nDESCRIPTION: Command to run Docker Compose with a specific configuration file.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose -f exampleYmlFiles/docker-compose-latest-security.yml up\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository in Bash\nDESCRIPTION: Commands to clone and navigate to the Stirling-PDF repository.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Stirling-Tools/Stirling-PDF.git\ncd Stirling-PDF\n```\n\n----------------------------------------\n\nTITLE: Setting Security Environment Variable\nDESCRIPTION: Command to set the security environment variable for Docker builds.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport DOCKER_ENABLE_SECURITY=false  # or true for security-enabled builds\n```\n\n----------------------------------------\n\nTITLE: Installing OCR Language Packs on Debian-based Systems\nDESCRIPTION: This bash script demonstrates how to install OCR language packs on Debian-based systems. It includes commands to update packages, install all languages, search for specific languages, and view installed languages.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToUseOCR.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update &&\n# All languages\n# sudo apt install -y 'tesseract-ocr-*'\n\n# Find languages:\napt search tesseract-ocr-\n\n# View installed languages:\ndpkg-query -W tesseract-ocr- | sed 's/tesseract-ocr-//g'\n```\n\n----------------------------------------\n\nTITLE: Installing OCR Language Packs on Fedora\nDESCRIPTION: This bash script shows how to install OCR language packs on Fedora systems. It includes commands to install all languages, search for specific languages, and view installed languages.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToUseOCR.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# All languages\n# sudo dnf install -y tesseract-langpack-*\n\n# Find languages:\ndnf search -C tesseract-langpack-\n\n# View installed languages:\nrpm -qa | grep tesseract-langpack | sed 's/tesseract-langpack-//g'\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for OCR Language Packs in Stirling-PDF\nDESCRIPTION: This YAML snippet shows how to modify a docker-compose.yml file to expose the Tesseract tessdata directory as a volume for using additional language packs in Stirling-PDF.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToUseOCR.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  your_service_name:\n    image: your_docker_image_name\n    volumes:\n      - /location/of/trainingData:/usr/share/tessdata\n```\n\n----------------------------------------\n\nTITLE: Docker Run Command for OCR Language Packs in Stirling-PDF\nDESCRIPTION: This bash command shows how to add a volume configuration to an existing Docker run command to expose the Tesseract tessdata directory for additional language packs in Stirling-PDF.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToUseOCR.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n-v /location/of/trainingData:/usr/share/tessdata\n```\n\n----------------------------------------\n\nTITLE: Configuring Tesseract OCR for Windows in Stirling-PDF\nDESCRIPTION: This YAML snippet shows how to configure the tessdata directory path in the settings.yml file for Windows systems using Stirling-PDF. It specifies the directory containing the Tessdata files for Tesseract OCR.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToUseOCR.md#2025-04-16_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nsystem:\n tessdataDir: C:/Program Files/Tesseract-OCR/tessdata # path to the directory containing the Tessdata files. This setting is relevant for Windows systems. For Windows users, this path should be adjusted to point to the appropriate directory where the Tessdata files are stored.\n```\n\n----------------------------------------\n\nTITLE: Installing VS Code Extensions Command\nDESCRIPTION: Command to show recommended extensions in VS Code.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nExtensions: Show Recommended Extensions\n```\n\n----------------------------------------\n\nTITLE: Running Translation Helper Script\nDESCRIPTION: Command to execute the helper script for making consistent replacements across language files when contributing translations to Stirling-PDF.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/DeveloperGuide.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n/scripts/replace_translation_line.sh\n```\n\n----------------------------------------\n\nTITLE: Running Language Property File Validation in PowerShell\nDESCRIPTION: PowerShell commands for validating language property files locally. These scripts check if a language file contains all required translation tags from the reference English file and identify any issues.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToAddNewLanguage.md#2025-04-16_snippet_2\n\nLANGUAGE: ps\nCODE:\n```\npython .github/scripts/check_language_properties.py --reference-file src\\main\\resources\\messages_en_GB.properties --branch \"\" --files src\\main\\resources\\messages_pl_PL.properties\n\npython .github/scripts/check_language_properties.py --reference-file src\\main\\resources\\messages_en_GB.properties --branch \"\" --check-file src\\main\\resources\\messages_pl_PL.properties\n```\n\n----------------------------------------\n\nTITLE: Adding Language Entry to Navbar in HTML\nDESCRIPTION: Code snippet for adding a new language entry to the language dropdown menu in the navbar. This example shows how to add Polish language support by adding a div element that uses the languageEntry template.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToAddNewLanguage.md#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div th:replace=\"~{fragments/languageEntry :: languageEntry ('pl_PL', 'Polski')}\" ></div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Untranslatable Strings in TOML\nDESCRIPTION: Example of adding entries to the ignore_translation.toml file to exclude certain strings from translation progress calculations. This is used for strings that should not be translated in a specific language.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/HowToAddNewLanguage.md#2025-04-16_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[pl_PL]\nignore = [\n    \"language.direction\",  # Existing entries\n    \"error\"                # Add new entries here\n]\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Language Support Status\nDESCRIPTION: A markdown table showing the supported languages in Stirling-PDF and their completion percentages. The table includes 39 languages with their native names, language codes, and progress bars.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Language                                     | Progress                               |\n| -------------------------------------------- | -------------------------------------- |\n| Arabic (العربية) (ar_AR)                        | ![84%](https://geps.dev/progress/84)   |\n| Azerbaijani (Azərbaycan Dili) (az_AZ)        | ![83%](https://geps.dev/progress/83)   |\n```\n\n----------------------------------------\n\nTITLE: Mapping URL Routes to Numeric IDs in Stirling-PDF Application\nDESCRIPTION: This JSON object defines a comprehensive mapping between URL paths and numeric identifiers for all available functions in the Stirling-PDF application. Each route corresponds to a specific PDF operation or utility, with routes organized numerically from basic operations like merging and splitting to more advanced features like redaction and signature validation.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/src/main/resources/static/files/popularity.txt#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"/login\": 1,\n  \"/multi-tool\": 2,\n  \"/merge-pdfs\": 3,\n  \"/pdf-to-word\": 4,\n  \"/compress-pdf\": 5,\n  \"/pdf-to-img\": 6,\n  \"/pipeline\": 7,\n  \"/split-pdfs\": 8,\n  \"/img-to-pdf\": 9,\n  \"/file-to-pdf\": 10,\n  \"/ocr-pdf\": 11,\n  \"/sign\": 12,\n  \"/remove-password\": 13,\n  \"/adjust-contrast\": 14,\n  \"/pdf-to-text\": 15,\n  \"/extract-page\": 16,\n  \"/add-watermark\": 17,\n  \"/remove-pages\": 18,\n  \"/crop\": 19,\n  \"/url-to-pdf\": 20,\n  \"/pdf-to-presentation\": 21,\n  \"/pdf-to-csv\": 22,\n  \"/html-to-pdf\": 23,\n  \"/cert-sign\": 24,\n  \"/rotate-pdf\": 25,\n  \"/console/\": 26,\n  \"/geoserver\": 27,\n  \"/pdf-to-xml\": 28,\n  \"/markdown-to-pdf\": 29,\n  \"/pdf-organizer\": 30,\n  \"/add-image\": 31,\n  \"/stamp\": 32,\n  \"/auto-redact\": 33,\n  \"/scale-pages\": 34,\n  \"/extract-images\": 35,\n  \"/change-metadata\": 36,\n  \"/pdf-to-html\": 37,\n  \"/get-info-on-pdf\": 38,\n  \"/replace-and-invert-color-pdf\": 39,\n  \"/pdf-to-pdfa\": 40,\n  \"/change-permissions\": 41,\n  \"/compare\": 42,\n  \"/add-password\": 43,\n  \"/multi-page-layout\": 44,\n\"/add-page-numbers\": 45,\n\"/auto-rename\": 46,\n\"/auto-split-pdf\": 47,\n\"/extract-image-scans\": 48,\n\"/flatten\": 49,\n\"/overlay-pdf\": 50,\n\"/pdf-to-markdown\": 51,\n\"/pdf-to-single-page\": 52,\n\"/redact\": 53,\n\"/remove-annotations\": 54,\n\"/remove-blanks\": 55,\n\"/remove-cert-sign\": 56,\n\"/remove-image-pdf\": 57,\n\"/repair\": 58,\n\"/sanitize-pdf\": 59,\n\"/show-javascript\": 60,\n\"/split-by-size-or-count\": 61,\n\"/split-pdf-by-chapters\": 62,\n\"/split-pdf-by-sections\": 63,\n\"/validate-signature\": 64\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Dependencies with Version Pinning and Hashes\nDESCRIPTION: A requirements file for Python dependencies that specifies exact versions and SHA-256 hashes for each package. This ensures reproducible builds and security by verifying package integrity. The file includes comments showing which parent package requires each dependency.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/testing/cucumber/requirements.txt#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbehave==1.2.6 \\\n    --hash=sha256:b9662327aa53294c1351b0a9c369093ccec1d21026f050c3bd9b3e5cccf81a86 \\\n    --hash=sha256:ebda1a6c9e5bfe95c5f9f0a2794e01c7098b3dde86c10a95d8621c5907ff6f1c\n    # via -r cucumber\\requirements.in\ncertifi==2024.12.14 \\\n    --hash=sha256:1275f7a45be9464efc1173084eaa30f866fe2e47d389406136d332ed4967ec56 \\\n    --hash=sha256:b650d30f370c2b724812bee08008be0c4163b163ddaec3f2546c1caf65f191db\n    # via requests\nchardet==5.2.0 \\\n    --hash=sha256:1b3b6ff479a8c414bc3fa2c0852995695c4a026dcd6d0633b2dd092ca39c1cf7 \\\n    --hash=sha256:e1cf59446890a00105fe7b7912492ea04b6e6f06d4b742b2c788469e34c82970\n    # via reportlab\ncharset-normalizer==3.4.1 \\\n    --hash=sha256:0167ddc8ab6508fe81860a57dd472b2ef4060e8d378f0cc555707126830f2537 \\\n    --hash=sha256:01732659ba9b5b873fc117534143e4feefecf3b2078b0a6a2e925271bb6f4cfa \\\n    --hash=sha256:01ad647cdd609225c5350561d084b42ddf732f4eeefe6e678765636791e78b9a \\\n    --hash=sha256:04432ad9479fa40ec0f387795ddad4437a2b50417c69fa275e212933519ff294 \\\n    --hash=sha256:0907f11d019260cdc3f94fbdb23ff9125f6b5d1039b76003b5b0ac9d6a6c9d5b \\\n    --hash=sha256:0924e81d3d5e70f8126529951dac65c1010cdf117bb75eb02dd12339b57749dd \\\n    --hash=sha256:09b26ae6b1abf0d27570633b2b078a2a20419c99d66fb2823173d73f188ce601 \\\n    --hash=sha256:09b5e6733cbd160dcc09589227187e242a30a49ca5cefa5a7edd3f9d19ed53fd \\\n    --hash=sha256:0af291f4fe114be0280cdd29d533696a77b5b49cfde5467176ecab32353395c4 \\\n    --hash=sha256:0f55e69f030f7163dffe9fd0752b32f070566451afe180f99dbeeb81f511ad8d \\\n    --hash=sha256:1a2bc9f351a75ef49d664206d51f8e5ede9da246602dc2d2726837620ea034b2 \\\n    --hash=sha256:22e14b5d70560b8dd51ec22863f370d1e595ac3d024cb8ad7d308b4cd95f8313 \\\n    --hash=sha256:234ac59ea147c59ee4da87a0c0f098e9c8d169f4dc2a159ef720f1a61bbe27cd \\\n    --hash=sha256:2369eea1ee4a7610a860d88f268eb39b95cb588acd7235e02fd5a5601773d4fa \\\n    --hash=sha256:237bdbe6159cff53b4f24f397d43c6336c6b0b42affbe857970cefbb620911c8 \\\n    --hash=sha256:28bf57629c75e810b6ae989f03c0828d64d6b26a5e205535585f96093e405ed1 \\\n    --hash=sha256:2967f74ad52c3b98de4c3b32e1a44e32975e008a9cd2a8cc8966d6a5218c5cb2 \\\n    --hash=sha256:2a75d49014d118e4198bcee5ee0a6f25856b29b12dbf7cd012791f8a6cc5c496 \\\n    --hash=sha256:2bdfe3ac2e1bbe5b59a1a63721eb3b95fc9b6817ae4a46debbb4e11f6232428d \\\n    --hash=sha256:2d074908e1aecee37a7635990b2c6d504cd4766c7bc9fc86d63f9c09af3fa11b \\\n    --hash=sha256:2fb9bd477fdea8684f78791a6de97a953c51831ee2981f8e4f583ff3b9d9687e \\\n    --hash=sha256:311f30128d7d333eebd7896965bfcfbd0065f1716ec92bd5638d7748eb6f936a \\\n    --hash=sha256:329ce159e82018d646c7ac45b01a430369d526569ec08516081727a20e9e4af4 \\\n    --hash=sha256:345b0426edd4e18138d6528aed636de7a9ed169b4aaf9d61a8c19e39d26838ca \\\n    --hash=sha256:363e2f92b0f0174b2f8238240a1a30142e3db7b957a5dd5689b0e75fb717cc78 \\\n    --hash=sha256:3a3bd0dcd373514dcec91c411ddb9632c0d7d92aed7093b8c3bbb6d69ca74408 \\\n    --hash=sha256:3bed14e9c89dcb10e8f3a29f9ccac4955aebe93c71ae803af79265c9ca5644c5 \\\n    --hash=sha256:44251f18cd68a75b56585dd00dae26183e102cd5e0f9f1466e6df5da2ed64ea3 \\\n    --hash=sha256:44ecbf16649486d4aebafeaa7ec4c9fed8b88101f4dd612dcaf65d5e815f837f \\\n    --hash=sha256:4532bff1b8421fd0a320463030c7520f56a79c9024a4e88f01c537316019005a \\\n    --hash=sha256:49402233c892a461407c512a19435d1ce275543138294f7ef013f0b63d5d3765 \\\n    --hash=sha256:4c0907b1928a36d5a998d72d64d8eaa7244989f7aaaf947500d3a800c83a3fd6 \\\n    --hash=sha256:4d86f7aff21ee58f26dcf5ae81a9addbd914115cdebcbb2217e4f0ed8982e146 \\\n    --hash=sha256:5777ee0881f9499ed0f71cc82cf873d9a0ca8af166dfa0af8ec4e675b7df48e6 \\\n    --hash=sha256:5df196eb874dae23dcfb968c83d4f8fdccb333330fe1fc278ac5ceeb101003a9 \\\n    --hash=sha256:619a609aa74ae43d90ed2e89bdd784765de0a25ca761b93e196d938b8fd1dbbd \\\n    --hash=sha256:6e27f48bcd0957c6d4cb9d6fa6b61d192d0b13d5ef563e5f2ae35feafc0d179c \\\n    --hash=sha256:6ff8a4a60c227ad87030d76e99cd1698345d4491638dfa6673027c48b3cd395f \\\n    --hash=sha256:73d94b58ec7fecbc7366247d3b0b10a21681004153238750bb67bd9012414545 \\\n    --hash=sha256:7461baadb4dc00fd9e0acbe254e3d7d2112e7f92ced2adc96e54ef6501c5f176 \\\n    --hash=sha256:75832c08354f595c760a804588b9357d34ec00ba1c940c15e31e96d902093770 \\\n    --hash=sha256:7709f51f5f7c853f0fb938bcd3bc59cdfdc5203635ffd18bf354f6967ea0f824 \\\n    --hash=sha256:78baa6d91634dfb69ec52a463534bc0df05dbd546209b79a3880a34487f4b84f \\\n    --hash=sha256:7974a0b5ecd505609e3b19742b60cee7aa2aa2fb3151bc917e6e2646d7667dcf \\\n    --hash=sha256:7a4f97a081603d2050bfaffdefa5b02a9ec823f8348a572e39032caa8404a487 \\\n    --hash=sha256:7b1bef6280950ee6c177b326508f86cad7ad4dff12454483b51d8b7d673a2c5d \\\n    --hash=sha256:7d053096f67cd1241601111b698f5cad775f97ab25d81567d3f59219b5f1adbd \\\n    --hash=sha256:804a4d582ba6e5b747c625bf1255e6b1507465494a40a2130978bda7b932c90b \\\n    --hash=sha256:807f52c1f798eef6cf26beb819eeb8819b1622ddfeef9d0977a8502d4db6d534 \\\n    --hash=sha256:80ed5e856eb7f30115aaf94e4a08114ccc8813e6ed1b5efa74f9f82e8509858f \\\n    --hash=sha256:8417cb1f36cc0bc7eaba8ccb0e04d55f0ee52df06df3ad55259b9a323555fc8b \\\n    --hash=sha256:8436c508b408b82d87dc5f62496973a1805cd46727c34440b0d29d8a2f50a6c9 \\\n    --hash=sha256:89149166622f4db9b4b6a449256291dc87a99ee53151c74cbd82a53c8c2f6ccd \\\n    --hash=sha256:8bfa33f4f2672964266e940dd22a195989ba31669bd84629f05fab3ef4e2d125 \\\n    --hash=sha256:8c60ca7339acd497a55b0ea5d506b2a2612afb2826560416f6894e8b5770d4a9 \\\n    --hash=sha256:91b36a978b5ae0ee86c394f5a54d6ef44db1de0815eb43de826d41d21e4af3de \\\n    --hash=sha256:955f8851919303c92343d2f66165294848d57e9bba6cf6e3625485a70a038d11 \\\n    --hash=sha256:97f68b8d6831127e4787ad15e6757232e14e12060bec17091b85eb1486b91d8d \\\n    --hash=sha256:9b23ca7ef998bc739bf6ffc077c2116917eabcc901f88da1b9856b210ef63f35 \\\n    --hash=sha256:9f0b8b1c6d84c8034a44893aba5e767bf9c7a211e313a9605d9c617d7083829f \\\n    --hash=sha256:aabfa34badd18f1da5ec1bc2715cadc8dca465868a4e73a0173466b688f29dda \\\n    --hash=sha256:ab36c8eb7e454e34e60eb55ca5d241a5d18b2c6244f6827a30e451c42410b5f7 \\\n    --hash=sha256:b010a7a4fd316c3c484d482922d13044979e78d1861f0e0650423144c616a46a \\\n    --hash=sha256:b1ac5992a838106edb89654e0aebfc24f5848ae2547d22c2c3f66454daa11971 \\\n    --hash=sha256:b7b2d86dd06bfc2ade3312a83a5c364c7ec2e3498f8734282c6c3d4b07b346b8 \\\n    --hash=sha256:b97e690a2118911e39b4042088092771b4ae3fc3aa86518f84b8cf6888dbdb41 \\\n    --hash=sha256:bc2722592d8998c870fa4e290c2eec2c1569b87fe58618e67d38b4665dfa680d \\\n    --hash=sha256:c0429126cf75e16c4f0ad00ee0eae4242dc652290f940152ca8c75c3a4b6ee8f \\\n    --hash=sha256:c30197aa96e8eed02200a83fba2657b4c3acd0f0aa4bdc9f6c1af8e8962e0757 \\\n    --hash=sha256:c4c3e6da02df6fa1410a7680bd3f63d4f710232d3139089536310d027950696a \\\n    --hash=sha256:c75cb2a3e389853835e84a2d8fb2b81a10645b503eca9bcb98df6b5a43eb8886 \\\n    --hash=sha256:c96836c97b1238e9c9e3fe90844c947d5afbf4f4c92762679acfe19927d81d77 \\\n    --hash=sha256:d7f50a1f8c450f3925cb367d011448c39239bb3eb4117c36a6d354794de4ce76 \\\n    --hash=sha256:d973f03c0cb71c5ed99037b870f2be986c3c05e63622c017ea9816881d2dd247 \\\n    --hash=sha256:d98b1668f06378c6dbefec3b92299716b931cd4e6061f3c875a71ced1780ab85 \\\n    --hash=sha256:d9c3cdf5390dcd29aa8056d13e8e99526cda0305acc038b96b30352aff5ff2bb \\\n    --hash=sha256:dad3e487649f498dd991eeb901125411559b22e8d7ab25d3aeb1af367df5efd7 \\\n    --hash=sha256:dccbe65bd2f7f7ec22c4ff99ed56faa1e9f785482b9bbd7c717e26fd723a1d1e \\\n    --hash=sha256:dd78cfcda14a1ef52584dbb008f7ac81c1328c0f58184bf9a84c49c605002da6 \\\n    --hash=sha256:e218488cd232553829be0664c2292d3af2eeeb94b32bea483cf79ac6a694e037 \\\n    --hash=sha256:e358e64305fe12299a08e08978f51fc21fac060dcfcddd95453eabe5b93ed0e1 \\\n    --hash=sha256:ea0d8d539afa5eb2728aa1932a988a9a7af94f18582ffae4bc10b3fbdad0626e \\\n    --hash=sha256:eab677309cdb30d047996b36d34caeda1dc91149e4fdca0b1a039b3f79d9a807 \\\n    --hash=sha256:eb8178fe3dba6450a3e024e95ac49ed3400e506fd4e9e5c32d30adda88cbd407 \\\n    --hash=sha256:ecddf25bee22fe4fe3737a399d0d177d72bc22be6913acfab364b40bce1ba83c \\\n    --hash=sha256:eea6ee1db730b3483adf394ea72f808b6e18cf3cb6454b4d86e04fa8c4327a12 \\\n    --hash=sha256:f08ff5e948271dc7e18a35641d2f11a4cd8dfd5634f55228b691e62b37125eb3 \\\n    --hash=sha256:f30bf9fd9be89ecb2360c7d94a711f00c09b976258846efe40db3d05828e8089 \\\n    --hash=sha256:fa88b843d6e211393a37219e6a1c1df99d35e8fd90446f1118f4216e307e48cd \\\n    --hash=sha256:fc54db6c8593ef7d4b2a331b58653356cf04f67c960f584edb7c3d8c97e8f39e \\\n    --hash=sha256:fd4ec41f914fa74ad1b8304bbc634b3de73d2a0889bd32076342a573e0779e00 \\\n    --hash=sha256:ffc9202a29ab3920fa812879e95a9e78b2465fd10be7fcbd042899695d75e616\n    # via requests\nidna==3.10 \\\n    --hash=sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9 \\\n    --hash=sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\n    # via requests\nparse==1.20.2 \\\n    --hash=sha256:967095588cb802add9177d0c0b6133b5ba33b1ea9007ca800e526f42a85af558 \\\n    --hash=sha256:b41d604d16503c79d81af5165155c0b20f6c8d6c559efa66b4b695c3e5a0a0ce\n    # via\n    #   behave\n    #   parse-type\nparse-type==0.6.4 \\\n    --hash=sha256:5e1ec10440b000c3f818006033372939e693a9ec0176f446d9303e4db88489a6 \\\n    --hash=sha256:83d41144a82d6b8541127bf212dd76c7f01baff680b498ce8a4d052a7a5bce4c\n    # via behave\npillow==11.1.0 \\\n    --hash=sha256:015c6e863faa4779251436db398ae75051469f7c903b043a48f078e437656f83 \\\n    --hash=sha256:0a2f91f8a8b367e7a57c6e91cd25af510168091fb89ec5146003e424e1558a96 \\\n    --hash=sha256:11633d58b6ee5733bde153a8dafd25e505ea3d32e261accd388827ee987baf65 \\\n    --hash=sha256:2062ffb1d36544d42fcaa277b069c88b01bb7298f4efa06731a7fd6cc290b81a \\\n    --hash=sha256:31eba6bbdd27dde97b0174ddf0297d7a9c3a507a8a1480e1e60ef914fe23d352 \\\n    --hash=sha256:3362c6ca227e65c54bf71a5f88b3d4565ff1bcbc63ae72c34b07bbb1cc59a43f \\\n    --hash=sha256:368da70808b36d73b4b390a8ffac11069f8a5c85f29eff1f1b01bcf3ef5b2a20 \\\n    --hash=sha256:36ba10b9cb413e7c7dfa3e189aba252deee0602c86c309799da5a74009ac7a1c \\\n    --hash=sha256:3764d53e09cdedd91bee65c2527815d315c6b90d7b8b79759cc48d7bf5d4f114\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies with Hash Verification for PDF Processing\nDESCRIPTION: A pip requirements file that specifies exact package versions with SHA-256 hash verification for security. The file includes essential PDF processing libraries like pypdf and reportlab, along with supporting packages like requests and pycryptodome for various operations.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/testing/cucumber/requirements.txt#2025-04-16_snippet_2\n\nLANGUAGE: pip\nCODE:\n```\npycryptodome==3.21.0 \\\n    --hash=sha256:0714206d467fc911042d01ea3a1847c847bc10884cf674c82e12915cfe1649f8 \\\n    --hash=sha256:0fa0a05a6a697ccbf2a12cec3d6d2650b50881899b845fac6e87416f8cb7e87d \\\n    --hash=sha256:0fd54003ec3ce4e0f16c484a10bc5d8b9bd77fa662a12b85779a2d2d85d67ee0 \\\n    --hash=sha256:18caa8cfbc676eaaf28613637a89980ad2fd96e00c564135bf90bc3f0b34dd93 \\\n    --hash=sha256:2480ec2c72438430da9f601ebc12c518c093c13111a5c1644c82cdfc2e50b1e4 \\\n    --hash=sha256:26412b21df30b2861424a6c6d5b1d8ca8107612a4cfa4d0183e71c5d200fb34a \\\n    --hash=sha256:280b67d20e33bb63171d55b1067f61fbd932e0b1ad976b3a184303a3dad22764 \\\n    --hash=sha256:2cb635b67011bc147c257e61ce864879ffe6d03342dc74b6045059dfbdedafca \\\n    --hash=sha256:2de4b7263a33947ff440412339cb72b28a5a4c769b5c1ca19e33dd6cd1dcec6e \\\n    --hash=sha256:3ba4cc304eac4d4d458f508d4955a88ba25026890e8abff9b60404f76a62c55e \\\n    --hash=sha256:4c26a2f0dc15f81ea3afa3b0c87b87e501f235d332b7f27e2225ecb80c0b1cdd \\\n    --hash=sha256:590ef0898a4b0a15485b05210b4a1c9de8806d3ad3d47f74ab1dc07c67a6827f \\\n    --hash=sha256:5dfafca172933506773482b0e18f0cd766fd3920bd03ec85a283df90d8a17bc6 \\\n    --hash=sha256:6cce52e196a5f1d6797ff7946cdff2038d3b5f0aba4a43cb6bf46b575fd1b5bb \\\n    --hash=sha256:7cb087b8612c8a1a14cf37dd754685be9a8d9869bed2ffaaceb04850a8aeef7e \\\n    --hash=sha256:7d85c1b613121ed3dbaa5a97369b3b757909531a959d229406a75b912dd51dd1 \\\n    --hash=sha256:7ee86cbde706be13f2dec5a42b52b1c1d1cbb90c8e405c68d0755134735c8dc6 \\\n    --hash=sha256:8898a66425a57bcf15e25fc19c12490b87bd939800f39a03ea2de2aea5e3611a \\\n    --hash=sha256:8acd7d34af70ee63f9a849f957558e49a98f8f1634f86a59d2be62bb8e93f71c \\\n    --hash=sha256:932c905b71a56474bff8a9c014030bc3c882cee696b448af920399f730a650c2 \\\n    --hash=sha256:a1752eca64c60852f38bb29e2c86fca30d7672c024128ef5d70cc15868fa10f4 \\\n    --hash=sha256:a3804675283f4764a02db05f5191eb8fec2bb6ca34d466167fc78a5f05bbe6b3 \\\n    --hash=sha256:a4e74c522d630766b03a836c15bff77cb657c5fdf098abf8b1ada2aebc7d0819 \\\n    --hash=sha256:a915597ffccabe902e7090e199a7bf7a381c5506a747d5e9d27ba55197a2c568 \\\n    --hash=sha256:b7aa25fc0baa5b1d95b7633af4f5f1838467f1815442b22487426f94e0d66c53 \\\n    --hash=sha256:cc2269ab4bce40b027b49663d61d816903a4bd90ad88cb99ed561aadb3888dd3 \\\n    --hash=sha256:d5ebe0763c982f069d3877832254f64974139f4f9655058452603ff559c482e8 \\\n    --hash=sha256:dad9bf36eda068e89059d1f07408e397856be9511d7113ea4b586642a429a4fd \\\n    --hash=sha256:de18954104667f565e2fbb4783b56667f30fb49c4d79b346f52a29cb198d5b6b \\\n    --hash=sha256:f35e442630bc4bc2e1878482d6f59ea22e280d7121d7adeaedba58c23ab6386b \\\n    --hash=sha256:f7787e0d469bdae763b876174cf2e6c0f7be79808af26b1da96f1a64bcf47297 \\\n    --hash=sha256:ff99f952db3db2fbe98a0b355175f93ec334ba3d01bbde25ad3a5a33abc02b58\n    # via -r cucumber\\requirements.in\npypdf==5.1.0 \\\n    --hash=sha256:3bd4f503f4ebc58bae40d81e81a9176c400cbbac2ba2d877367595fb524dfdfc \\\n    --hash=sha256:425a129abb1614183fd1aca6982f650b47f8026867c0ce7c4b9f281c443d2740\n    # via -r cucumber\\requirements.in\nreportlab==4.2.5 \\\n    --hash=sha256:5cf35b8fd609b68080ac7bbb0ae1e376104f7d5f7b2d3914c7adc63f2593941f \\\n    --hash=sha256:eb2745525a982d9880babb991619e97ac3f661fae30571b7d50387026ca765ee\n    # via -r cucumber\\requirements.in\nrequests==2.32.3 \\\n    --hash=sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760 \\\n    --hash=sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\n    # via -r cucumber\\requirements.in\nsix==1.17.0 \\\n    --hash=sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274 \\\n    --hash=sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81\n    # via\n    #   behave\n    #   parse-type\ntyping-extensions==4.12.2 \\\n    --hash=sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d \\\n    --hash=sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\n    # via pypdf\nurllib3==2.3.0 \\\n    --hash=sha256:1cee9ad369867bfdbbb48b7dd50374c0967a0bb7710050facf0dd6911440e3df \\\n    --hash=sha256:f8c5449b3cf0861679ce7e0503c7b44b5ec981bec0d1d3795a07f1ba96f0204d\n    # via requests\n```\n\n----------------------------------------\n\nTITLE: Generating Cucumber Requirements File with pip-compile\nDESCRIPTION: A command used to generate the requirements.txt file for the Cucumber component in Stirling-PDF. The command uses pip-compile with Python 3.10 to compile dependencies from requirements.in, generating a file with hashes for security.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/testing/cucumber/requirements.txt#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip-compile --generate-hashes --output-file='cucumber\\requirements.txt' 'cucumber\\requirements.in'\n```\n\n----------------------------------------\n\nTITLE: Example Entry Format for Stirling-PDF Users Directory in Markdown\nDESCRIPTION: A template showing the expected format for contributing to the Stirling-PDF users directory. It demonstrates how to structure information about an organization's use of Stirling-PDF, including name, description, utilized features, optional links, and contact information.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/USERS.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* N: Example Corp\n  D: Using Stirling-PDF for automated document processing in our SaaS platform focusing on compression.\n  U: OCR, merging PDFs, metadata editing, encryption, compression.\n  L: https://example.com/stirling-pdf\n  Q: @example-user on Discord/email\n```\n\n----------------------------------------\n\nTITLE: Rendering ASCII Art Logo for Stirling-PDF with Spring Boot Version\nDESCRIPTION: An ASCII art representation of the Stirling-PDF logo with the project name formatted in a stylized font, followed by a note indicating the application is powered by Spring Boot with a version placeholder.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/src/main/resources/banner.txt#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n ____ _____ ___ ____  _     ___ _   _  ____       ____  ____  _____\n/ ___|_   _|_ _|  _ \\| |   |_ _| \\ | |/ ___|     |  _ \\|  _ \\|  ___|\n\\___ \\ | |  | || |_) | |    | ||  \\| | |  _ _____|_) | | | | |_\n ___) || |  | ||  _ <| |___ | || |\\  | |_| |_____|  __/| |_| |  _|\n|____/ |_| |___|_| \\_\\_____|___|_| \\_|\\____|     |_|   |____/|_|\nPowered by Spring Boot ${spring-boot.version}\n```\n\n----------------------------------------\n\nTITLE: Displaying Version Support Status in Markdown Table\nDESCRIPTION: A markdown table showing which versions of Stirling-PDF are supported for security updates. Only the latest version receives security patches, while older versions are not supported.\nSOURCE: https://github.com/Stirling-Tools/Stirling-PDF/blob/main/SECURITY.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n| ------- | ------------------ |\n| Latest  | :white_check_mark: |\n| Older   | :x:               |\n```"
  }
]
[
  {
    "owner": "phoenixframework",
    "repo": "phoenix_ecto",
    "content": "TITLE: Adding Phoenix Ecto Dependency in Mix.exs\nDESCRIPTION: Shows how to add phoenix_ecto as a dependency in a Mix project. This is the first step needed to integrate Phoenix with Ecto in an Elixir application.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\ndef deps do\n  [{:phoenix_ecto, \"~> 4.0\"}]\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Sandbox for Tests in Config File\nDESCRIPTION: Configuration snippet for enabling SQL Sandbox in the test environment. This is needed for running concurrent browser tests with Ecto.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :your_app, sql_sandbox: true\n```\n\n----------------------------------------\n\nTITLE: Adding SQL Sandbox Plug to Phoenix Endpoint\nDESCRIPTION: Shows how to conditionally add the Phoenix.Ecto.SQL.Sandbox plug to a Phoenix endpoint based on configuration. This plug enables concurrent browser testing with the Ecto sandbox.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\nif Application.get_env(:your_app, :sql_sandbox) do\n  plug Phoenix.Ecto.SQL.Sandbox\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Exception Handling for Phoenix Ecto\nDESCRIPTION: Configuration example showing how to exclude specific Ecto exceptions from the Plug.Exception handling in Phoenix. This allows customizing how certain database errors are handled in the web interface.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_9\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :phoenix_ecto,\n  exclude_ecto_exceptions_from_plug: [Ecto.NoResultsError]\n```\n\n----------------------------------------\n\nTITLE: Configuring Wallaby with Ecto Sandbox Manually\nDESCRIPTION: Setup block for manually configuring Wallaby with Ecto Sandbox when not using the Wallaby.Feature helper. This enables concurrent browser tests by starting a sandboxed database connection and sharing metadata with Wallaby sessions.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_8\n\nLANGUAGE: elixir\nCODE:\n```\nuse Wallaby.DSL\n\nsetup tags do\n  pid = Ecto.Adapters.SQL.Sandbox.start_owner!(YourApp.Repo, shared: not tags[:async])\n  on_exit(fn -> Ecto.Adapters.SQL.Sandbox.stop_owner(pid) end)\n  metadata = Phoenix.Ecto.SQL.Sandbox.metadata_for(YourApp.Repo, pid)\n  {:ok, session} = Wallaby.start_session(metadata: metadata)\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Hound with Ecto Sandbox for Concurrent Tests\nDESCRIPTION: Setup block that configures Hound to work with Ecto Sandbox, enabling concurrent browser tests. It starts a sandboxed database connection and shares metadata with Hound sessions.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\nuse Hound.Helpers\n\nsetup tags do\n  pid = Ecto.Adapters.SQL.Sandbox.start_owner!(YourApp.Repo, shared: not tags[:async])\n  on_exit(fn -> Ecto.Adapters.SQL.Sandbox.stop_owner(pid) end)\n  metadata = Phoenix.Ecto.SQL.Sandbox.metadata_for(YourApp.Repo, pid)\n  Hound.start_session(metadata: metadata)\n  :ok\nend\n```\n\n----------------------------------------\n\nTITLE: Creating a Wallaby Feature Test Module\nDESCRIPTION: Example of a Wallaby feature test module using Wallaby.Feature to automatically handle Ecto Sandbox setup. This demonstrates how to write a simple browser test that visits a page and checks for text.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_7\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule MyAppWeb.PageFeature do\n  use ExUnit.Case, async: true\n  use Wallaby.Feature\n\n  feature \"shows some text\", %{session: session} do\n    session\n    |> visit(\"/home\")\n    |> assert_text(\"Hello world!\")\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Adding Hound as Test Dependency\nDESCRIPTION: Demonstrates how to add Hound as a dependency for acceptance testing in a Mix project.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\n{:hound, \"~> 1.0\"}\n```\n\n----------------------------------------\n\nTITLE: Adding Wallaby as Test Dependency\nDESCRIPTION: Shows how to add Wallaby as a dependency for acceptance testing in a Mix project, restricting it to the test environment.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\n{:wallaby, \"~> 0.25\", only: :test}\n```\n\n----------------------------------------\n\nTITLE: Starting Hound in Test Helper\nDESCRIPTION: Code to ensure Hound application is started in the test helper file before running tests.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\n{:ok, _} = Application.ensure_all_started(:hound)\n```\n\n----------------------------------------\n\nTITLE: Documenting Changelog Entries in Markdown\nDESCRIPTION: This snippet shows the structure and format used for documenting changelog entries in Markdown. It includes version numbers, categories of changes (Enhancements, Bug fixes), and bullet points for individual changes.\nSOURCE: https://github.com/phoenixframework/phoenix_ecto/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## v4.6.3\n\n* Enhancements\n  * Add prefix option to check repo status plug\n\n* Bug fix\n  * Fix map.field notation warning on Elixir 1.17\n\n## v4.6.2\n\n* Bug fix\n  * Attach directories to Pending Migrations exception\n\n## v4.6.1\n\n* Bug fix\n  * Ensure \"Create database\" action is shown when database is not available\n\n## v4.6.0\n\n* Enhancements\n  * Return 400 for character encoding errors in Postgrex\n  * Bump Elixir requirement to v1.11+\n```"
  }
]
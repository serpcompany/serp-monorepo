[
  {
    "owner": "scylladb",
    "repo": "scylla-rust-udf",
    "content": "TITLE: Creating Scylla UDF using CQL\nDESCRIPTION: Demonstrates how to create a Scylla User-Defined Function using CQL, incorporating the compiled WASM module.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nCREATE FUNCTION commas(string list<text>) CALLED ON NULL INPUT RETURNS text LANGUAGE wasm AS ' (module ...) '\n```\n\n----------------------------------------\n\nTITLE: Creating a New Rust Library Project for Scylla UDF\nDESCRIPTION: Initializes a new Rust library project using Cargo, which will be used to create a Scylla UDF.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo new --lib my_udf_library\n```\n\n----------------------------------------\n\nTITLE: Building Rust Project for Scylla UDF with WASM Target\nDESCRIPTION: Compiles the Rust project targeting wasm32-wasip1 with a custom stack size, necessary for creating a Scylla UDF.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nRUSTFLAGS=\"-C link-args=-zstack-size=131072\" cargo build --target=wasm32-wasip1\n```\n\n----------------------------------------\n\nTITLE: Configuring Cargo.toml for Scylla UDF Library\nDESCRIPTION: Adds configuration to Cargo.toml to set the crate type to cdylib, which is necessary for creating a Scylla UDF.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[lib]\ncrate-type = [\"cdylib\"]\n```\n\n----------------------------------------\n\nTITLE: Adding Scylla UDF Dependency to Rust Project\nDESCRIPTION: Adds the scylla-udf crate as a dependency to the Rust project using Cargo.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo add scylla-udf\n```\n\n----------------------------------------\n\nTITLE: Converting WASM to WAT for Scylla UDF\nDESCRIPTION: Translates the WASM binary to WebAssembly Text (WAT) format, which is used in the CQL CREATE FUNCTION statement.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nwasm2wat target/wasm32-wasip1/debug/my_udf_library.wasm > target/wasm32-wasip1/debug/my_udf_library.wat\n```\n\n----------------------------------------\n\nTITLE: Optimizing WASM Binary for Scylla UDF\nDESCRIPTION: Uses wasm-opt to optimize the compiled WASM binary for better performance in Scylla.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nwasm-opt -O3 target/wasm32-wasip1/debug/my_udf_library.wasm -o target/wasm32-wasip1/debug/my_udf_library.wasm\n```\n\n----------------------------------------\n\nTITLE: Reducing WASM Binary Size for Scylla UDF\nDESCRIPTION: Uses wasm-strip to reduce the size of the WASM binary, which can be beneficial for Scylla UDF deployment.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nwasm-strip target/wasm32-wasip1/debug/my_udf_library.wasm\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Scylla UDF Rust Library\nDESCRIPTION: Executes tests for the Scylla UDF Rust library using the wasmtime runtime, which is necessary for WASM-specific code.\nSOURCE: https://github.com/scylladb/scylla-rust-udf/blob/main/README.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nCARGO_TARGET_WASM32_WASI_RUNNER=\"wasmtime --allow-unknown-exports\" cargo test --target=wasm32-wasip1\n```"
  }
]
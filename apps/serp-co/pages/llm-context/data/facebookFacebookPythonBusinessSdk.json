[
  {
    "owner": "facebook",
    "repo": "facebook-python-business-sdk",
    "content": "TITLE: Initializing Facebook Business SDK and querying ad campaigns in Python\nDESCRIPTION: Example code for initializing the Facebook Business SDK with app credentials and access token, then retrieving campaigns from an Ad Account. This demonstrates basic authentication and API usage.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport sys\nsys.path.append('/opt/homebrew/lib/python2.7/site-packages') # Replace this with the place you installed facebookads using pip\nsys.path.append('/opt/homebrew/lib/python2.7/site-packages/facebook_business-3.0.0-py2.7.egg-info') # same as above\n\nfrom facebook_business.api import FacebookAdsApi\nfrom facebook_business.adobjects.adaccount import AdAccount\n\nmy_app_id = 'your-app-id'\nmy_app_secret = 'your-appsecret'\nmy_access_token = 'your-page-access-token'\nFacebookAdsApi.init(my_app_id, my_app_secret, my_access_token)\nmy_account = AdAccount('act_<your-adaccount-id>')\ncampaigns = my_account.get_campaigns()\nprint(campaigns)\n```\n\n----------------------------------------\n\nTITLE: Installing Facebook Business SDK with pip in Python\nDESCRIPTION: Command line instructions for installing the Facebook Business SDK package using pip. This is the recommended installation method for most users.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install facebook_business\n```\n\n----------------------------------------\n\nTITLE: Creating a Campaign with Facebook Business SDK in Python\nDESCRIPTION: Code example showing how to create a new Campaign within an Ad Account. The example sets the campaign name and status with appropriate parameters.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfields = [\n]\nparams = {\n  adobjects.Campaign.Field.name : 'Conversions Campaign',\n  adobjects.Campaign.Field.configured_status: adobjects.Campaign.Status.paused,\n}\ncampaign = AdAccount(id).create_campaign(fields, params)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ad Accounts for a User in Facebook Business SDK for Python\nDESCRIPTION: Code demonstrating how to get all Ad Accounts associated with a user, then accessing the first account from the list. This is a common pattern when working with the Facebook Business SDK.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n>>> from facebook_business.adobjects.user import User\n>>> me = adobjects.User(fbid='me')\n>>> my_accounts = list(me.get_ad_accounts())\n>>> print(my_accounts)\n[{   'account_id': u'17842443', 'id': u'act_17842443'}]\n>>> type(my_accounts[0])\n<class 'facebook_business.adobjects.AdAccount'>\n```\n\n----------------------------------------\n\nTITLE: Updating Objects with Facebook Python Business SDK\nDESCRIPTION: Shows how to update an object by modifying its properties and calling the api_update method to sync with the server. In this example, a campaign name is corrected.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n>>> campaign.api_update(fields=[], params={adobjects.Campaign.Field.name:\"Potato Campaign\"})\n```\n\n----------------------------------------\n\nTITLE: Batch Calling with Facebook Python Business SDK\nDESCRIPTION: Demonstrates how to group multiple API calls into a single HTTP request using FacebookAdsApiBatch. This improves efficiency when making many calls.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nmy_api_batch = api.new_batch()\ncampaign.api_delete(batch=my_api_batch)\nmy_api_batch.execute()\n```\n\n----------------------------------------\n\nTITLE: Handling Multiple Access Tokens with Facebook Python Business SDK\nDESCRIPTION: Explains how to work with multiple access tokens by creating separate FacebookSession and FacebookAdsApi objects for each user. This is necessary when a system needs to make API calls on behalf of multiple users.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nmy_app_id = '<APP_ID>'\nmy_app_secret = '<APP_SECRET>'\nmy_access_token_1 = '<ACCESS_TOKEN_1>'\nmy_access_token_2 = '<ACCESS_TOKEN_2>'\nproxies = {'http': '<HTTP_PROXY>', 'https': '<HTTPS_PROXY>'} # add proxies if needed\n\nsession1 = FacebookSession(\n    my_app_id,\n    my_app_secret,\n    my_access_token_1,\n    proxies,\n)\n\nsession2 = FacebookSession(\n    my_app_id,\n    my_app_secret,\n    my_access_token_2,\n    proxies,\n)\n\napi1 = FacebookAdsApi(session1)\napi2 = FacebookAdsApi(session2)\n```\n\n----------------------------------------\n\nTITLE: Debugging API Calls with Facebook Python Business SDK\nDESCRIPTION: Shows how to enable debugging mode to print the raw cURL request for an API call, which can help identify issues with the SDK or API.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfrom facebook_business.adobjects.page import Page\nfrom facebook_business.api import FacebookAdsApi\n\nFacebookAdsApi.init(access_token=access_token, debug=True)\npage = Page(page_id).api_get(fields=fields,params=params)\n```\n\n----------------------------------------\n\nTITLE: Selecting an Ad Account in Facebook Business SDK for Python\nDESCRIPTION: Two ways to select an Ad Account for API operations: either from a list of accounts or by directly specifying the account ID when you already know it.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n>>> my_account = my_accounts[0]\n```\n\nLANGUAGE: python\nCODE:\n```\n>>> my_account = adobjects.AdAccount('act_17842443')\n```\n\n----------------------------------------\n\nTITLE: Reading Object Properties with Facebook Python Business SDK\nDESCRIPTION: Demonstrates how to read properties of an object from the API using the AbstractObject class, which implements collections.MutableMapping. Properties can be accessed like dictionary keys.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n>>> print(my_account)\n{'account_id': u'17842443', 'id': u'act_17842443'}\n>>> my_account = my_account.api_get(fields=[adobjects.AdAccount.Field.amount_spent])\n>>> print(my_account[adobjects.AdAccount.Field.amount_spent])\n{'amount_spent': 21167, 'account_id': u'17842443', 'id': u'act_17842443'}\n```\n\n----------------------------------------\n\nTITLE: Deleting Objects with Facebook Python Business SDK\nDESCRIPTION: Demonstrates how to delete an object using the api_delete method.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ncampaign.api_delete()\n```\n\n----------------------------------------\n\nTITLE: Installing Facebook Business SDK from source in Python\nDESCRIPTION: Command line instructions for installing the Facebook Business SDK from source code. This is useful when you need the latest version that might not be available on PyPI yet.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython setup.py install\n```\n\n----------------------------------------\n\nTITLE: Defining Dependencies for Facebook Python Business SDK\nDESCRIPTION: Lists the required dependencies with their minimum versions for using the Facebook Python Business SDK. The dependencies include requests for HTTP requests, six for Python 2/3 compatibility, curlify for cURL command generation, pycountry for country data, and optional aiohttp for asynchronous operations in Python 3.5.3+.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nrequests >= 2.3.0\nsix >= 1.7.3\ncurlify >= 2.1.0\npycountry >= 19.8.18\naiohttp; python_version >= '3.5.3'\n```\n\n----------------------------------------\n\nTITLE: Updating Facebook Product Catalog via Python and XML Pipeline\nDESCRIPTION: A two-step process using Python scripts to update product information in a Facebook catalog. The first script (stock_update.py) reads an XML feed and randomly selects products for price updates, while the second script (dpa_update.py) pushes these updates to the Facebook Ads API.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/examples/dpa-update/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython stock_update.py feed-dpa.xml 3 | python dpa_update.py\n```\n\n----------------------------------------\n\nTITLE: Creating AdUser Objects with Multiple APIs in Facebook Python Business SDK\nDESCRIPTION: Shows how to create AdUser objects using different API instances when working with multiple access tokens. One method uses a default API, while the other explicitly specifies the API object.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nFacebookAdsApi.set_default_api(api1)\n\nme1 = AdUser(fbid='me')\nme2 = AdUser(fbid='me', api=api2)\n```\n\n----------------------------------------\n\nTITLE: Using Class Methods with Specific APIs in Facebook Python Business SDK\nDESCRIPTION: Illustrates how to use class methods like AdUser.get_by_ids when working with multiple APIs, passing the specific API object as the last parameter.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nsession = FacebookSession(\n my_app_id,\n my_app_secret,\n my_access_token_1,\n proxies,\n)\n\napi = FacebookAdsApi(session1)\nAduser.get_by_ids(ids=['<UID_1>', '<UID_2>'], api=api)\n```\n\n----------------------------------------\n\nTITLE: Alternative AdUser Creation with Facebook Python Business SDK\nDESCRIPTION: Demonstrates an alternative way to create AdUser objects when working with multiple APIs, explicitly specifying the API for each object.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/README.md#2025-04-23_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nme1 = AdUser(fbid='me', api=api1)\nme2 = AdUser(fbid='me', api=api2)\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Structured changelog documenting version history from v3.3.0 to v17.0.0, including API version upgrades, new features, changes and fixes.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## Unreleased\n\n## v17.0.0\n\n### Added\n- `advanced_measurement_table` field to Event for Conversion API\n\n## v11.0.0\n\n### Changed\n- Graph API call upgrade to [v11.0]https://developers.facebook.com/docs/graph-api/changelog/version11.0\n\n## v10.0.1\n\n### Added\n- Support for sending multiple values for certain UserData parameters to Conversions API.\n\n## v10.0.0\n\n### Changed\n- Graph API call upgrade to [v10.0](https://developers.facebook.com/docs/graph-api/changelog/version10.0)\n```\n\n----------------------------------------\n\nTITLE: Specifying Dependency for Mock Package in Python\nDESCRIPTION: This line specifies a dependency on the 'mock' package with a minimum version of 1.0.1. It's likely part of a requirements.txt file or similar dependency specification for a Python project.\nSOURCE: https://github.com/facebook/facebook-python-business-sdk/blob/main/requirements-tests.txt#2025-04-23_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nmock >= 1.0.1\n```"
  }
]
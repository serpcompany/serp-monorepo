[
  {
    "owner": "frontegg",
    "repo": "frontegg-react",
    "content": "TITLE: Initialize Frontegg Provider in React\nDESCRIPTION: This code snippet demonstrates how to wrap your root component with the `FronteggProvider`. It configures the provider with your Frontegg subdomain and client ID, enabling Frontegg's authentication and SaaS features.\n\nDependencies: @frontegg/react\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/README.md#_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // For react 17\n// For react 18: import ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nimport { FronteggProvider } from '@frontegg/react';\n\nconst contextOptions = {\n  baseUrl: 'https://[YOUR_SUBDOMAIN].frontegg.com',\n  clientId: '[YOUR-CLIENT-ID]'\n};\n\n// For react 18: \n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\nReactDOM.render(\n    <FronteggProvider contextOptions={contextOptions} hostedLoginBox={true}>\n        <App />\n    </FronteggProvider>,\n    document.getElementById('root')\n);\n\n```\n\n----------------------------------------\n\nTITLE: Configuring FronteggProvider in React\nDESCRIPTION: This code snippet demonstrates how to wrap your React application with the FronteggProvider. It configures the provider with context options, including the baseUrl, which is the base URL of your Frontegg backend. This provider makes Frontegg's features accessible to the rest of your application.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/packages/react/README.md#_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { FronteggProvider } from '@frontegg/react'\n\nconst contextOptions = {\n  baseUrl: 'https://{HOST}.frontegg.com', // Your backend base URL (frontegg will direct the requests to it)\n}\n\nexport const App = () => {\n  return <FronteggProvider contextOptions={contextOptions}>\n    {/*...*/}\n  </FronteggProvider>\n}\n```\n\n----------------------------------------\n\nTITLE: Redirect to Login with Frontegg\nDESCRIPTION: This code snippet shows how to use the `useAuth` and `useLoginWithRedirect` hooks from `@frontegg/react` to check user authentication status and redirect unauthenticated users to the Frontegg login page. It also demonstrates how to implement a logout function that redirects to the Frontegg logout endpoint.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/README.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport './App.css';\n// import { useEffect } from 'react';\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { useAuth, useLoginWithRedirect } from '@frontegg/react';\n\nfunction App() {\n  const { user, isAuthenticated } = useAuth();\n  const loginWithRedirect = useLoginWithRedirect();\n\n  // Uncomment this to redirect to login automatically\n  // useEffect(() => {\n  //   if (!isAuthenticated) {\n  //     loginWithRedirect();\n  //   }\n  // }, [isAuthenticated, loginWithRedirect]);\n\n  const logout = () => {\n    const baseUrl = ContextHolder.getContext().baseUrl;\n    window.location.href = `${baseUrl}/oauth/logout?post_logout_redirect_uri=${window.location}`;\n  };\n\n  return (\n    <div className='App'>\n      {isAuthenticated ? (\n        <div>\n          <div>\n            <img src={user?.profilePictureUrl} alt={user?.name} />\n          </div>\n          <div>\n            <span>Logged in as: {user?.name}</span>\n          </div>\n          <div>\n            <button onClick={() => alert(user.accessToken)}>What is my access token?</button>\n          </div>\n          <div>\n            <button onClick={() => logout()}>Click to logout</button>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <button onClick={() => loginWithRedirect()}>Click me to login</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n```\n\n----------------------------------------\n\nTITLE: Accessing User Data with useAuthUser Hook\nDESCRIPTION: This example shows how to use the useAuthUser hook to access the currently logged-in user's information. The hook returns the user object, which can be used to display user-specific data, such as the user's email. It requires importing `useAuthUser` from `@frontegg/react`.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/packages/react/README.md#_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { useAuthUser } from '@frontegg/react'\n\nconst HomePage = () => {\n  const user = useAuthUser();\n\n  return <div>\n    Logged In user: {user.email}\n  </div>\n}\n```\n\n----------------------------------------\n\nTITLE: Integrate Frontegg Admin Portal\nDESCRIPTION: This code snippet demonstrates how to integrate the Frontegg Admin Portal into your application. Clicking the button will open the Admin Portal, allowing users to manage their account settings and other administrative tasks.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/README.md#_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { AdminPortal } from '@frontegg/react'\n\nconst handleClick = () => {\n  AdminPortal.show();\n};\n\n<button onClick={handleClick}>Settings</button>\n```\n\n----------------------------------------\n\nTITLE: Opening the Admin Portal\nDESCRIPTION: This code snippet illustrates how to open the Frontegg Admin Portal from within your application.  It utilizes the `AdminPortal.show()` method, which is triggered by a button click.  It requires importing `AdminPortal` from `@frontegg/react`.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/packages/react/README.md#_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { AdminPortal } from '@frontegg/react'\n\nconst Toolbar = () => {\n\n  return <nav>\n    {/*... your application tabs ...*/}\n\n    <button onClick={() => AdminPortal.show()}>\n      Open Admin Portal\n    </button>\n  </nav>\n}\n```\n\n----------------------------------------\n\nTITLE: Install Frontegg React Package\nDESCRIPTION: This command installs the Frontegg React library and react-router-dom as dependencies for your project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @frontegg/react react-router-dom\n```\n\n----------------------------------------\n\nTITLE: Installing Frontegg React package\nDESCRIPTION: This command installs the @frontegg/react package using npm, which is required for using Frontegg's components and functionalities in your React application. This command adds the Frontegg library as a dependency to your project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/packages/react/README.md#_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install @frontegg/react\n```\n\n----------------------------------------\n\nTITLE: Initializing Frontegg-React Project with Make\nDESCRIPTION: This command initializes the Frontegg-React project after cloning by installing dependencies and setting up yarn linking. It uses `make init` to execute the initialization process.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: Makefile\nCODE:\n```\nmake init\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with Make\nDESCRIPTION: This command installs project dependencies and sets up yarn linking using the `make install` command. It ensures that all required packages are installed before building or running the project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: Makefile\nCODE:\n```\nmake install\n```\n\n----------------------------------------\n\nTITLE: Building Frontegg-React Packages\nDESCRIPTION: This command builds all Frontegg-React packages in production mode. It compiles the source code into distributable packages using `make build`.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: Makefile\nCODE:\n```\nmake build\n```\n\n----------------------------------------\n\nTITLE: Building Specific Frontegg-React Package\nDESCRIPTION: This command builds a specific Frontegg-React package. The `%` serves as a placeholder for the package name, allowing you to build individual packages instead of the entire project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: Makefile\nCODE:\n```\nmake build-%\n```\n\n----------------------------------------\n\nTITLE: Building and Watching Frontegg-React Packages for Development\nDESCRIPTION: This command builds and watches all Frontegg-React packages in parallel for development. Changes to the source code will trigger automatic rebuilds, facilitating rapid iteration.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_5\n\nLANGUAGE: Makefile\nCODE:\n```\nmake bw\n```\n\n----------------------------------------\n\nTITLE: Building and Watching Specific Frontegg-React Package for Development\nDESCRIPTION: This command builds and watches a specific Frontegg-React package for development. Changes to the source code will trigger automatic rebuilds for that specific package.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_6\n\nLANGUAGE: Makefile\nCODE:\n```\nmake bw-%\n```\n\n----------------------------------------\n\nTITLE: Linting All Frontegg-React Packages\nDESCRIPTION: This command runs linting on all Frontegg-React packages to enforce code style and quality standards. It helps identify and fix potential issues before committing changes.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_7\n\nLANGUAGE: Makefile\nCODE:\n```\nmake lint\n```\n\n----------------------------------------\n\nTITLE: Linting Specific Frontegg-React Package\nDESCRIPTION: This command runs linting on a specific Frontegg-React package. It allows you to focus on linting individual packages instead of the entire project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_8\n\nLANGUAGE: Makefile\nCODE:\n```\nmake lint-%\n```\n\n----------------------------------------\n\nTITLE: Running Frontegg-React Integration Tests\nDESCRIPTION: This command runs Cypress integration tests for the Frontegg-React project. Integration tests verify the interaction between different components and ensure that the application works as expected.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_9\n\nLANGUAGE: Makefile\nCODE:\n```\nmake test-integration\n```\n\n----------------------------------------\n\nTITLE: Running Frontegg-React Unit Tests\nDESCRIPTION: This command runs Cypress unit tests for the Frontegg-React project. Unit tests verify the functionality of individual components in isolation.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_10\n\nLANGUAGE: Makefile\nCODE:\n```\nmake test-unit\n```\n\n----------------------------------------\n\nTITLE: Running Prettier Hook\nDESCRIPTION: This command runs the prettier hook to format the code before committing. This ensures consistent code styling across the project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_11\n\nLANGUAGE: Shell\nCODE:\n```\nyarn preitter-hook\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Frontegg-React Before Push\nDESCRIPTION: These commands ensure that the code is built and all dependencies are correctly installed before pushing the changes. This helps maintain the build stability of the project.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_12\n\nLANGUAGE: Shell\nCODE:\n```\nmake install\nmake build\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Dependencies and Removing Transpiled Code\nDESCRIPTION: This command cleans the project by uninstalling node modules, removing transpiled code, and deleting lock files. It's useful for ensuring a clean build environment before installing fresh dependencies.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: Makefile\nCODE:\n```\nmake clean\n```\n\n----------------------------------------\n\nTITLE: Breaking Change Commit Message Footer Example\nDESCRIPTION: This example demonstrates the structure of a commit message footer that includes information about a breaking change, including a summary, detailed description, migration instructions, and a reference to a related issue.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/CONTRIBUTING.md#_snippet_13\n\nLANGUAGE: Text\nCODE:\n```\nBREAKING CHANGE: <breaking change summary>\n<BLANK LINE>\n<breaking change description + migration instructions>\n<BLANK LINE>\n<BLANK LINE>\nFixes #<issue number>\n```\n\n----------------------------------------\n\nTITLE: Robots.txt Configuration\nDESCRIPTION: Configures the robots.txt file to disallow all paths for all user agents.  It instructs search engine crawlers not to access any part of the website. No dependencies are required as it's a plain text configuration.\nSOURCE: https://github.com/frontegg/frontegg-react/blob/master/packages/demo-saas/public/robots.txt#_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nUser-agent: *\nDisallow:\n```"
  }
]
[
  {
    "owner": "marp-team",
    "repo": "marp-cli",
    "content": "TITLE: Using Marp CLI Observation API\nDESCRIPTION: Example of handling Marp CLI observation modes (watch, server, preview) using waitForObservation helper. Shows how to properly manage and stop observations.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nconst { marpCli, waitForObservation } = require('@marp-team/marp-cli')\n\nmarpCli(['--server', './slides/'])\n  .then((exitCode) => console.log(`Done with exit code ${exitCode}`))\n  .catch(console.error)\n\nwaitForObservation().then(({ stop }) => {\n  console.log('Observed')\n\n  // Stop observations to resolve marpCli()'s Promise\n  stop()\n})\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to PDF with Marp CLI\nDESCRIPTION: Examples of converting Markdown to PDF using Marp CLI with the --pdf option.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nmarp --pdf slide-deck.md\nmarp slide-deck.md -o converted.pdf\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to HTML with Marp CLI\nDESCRIPTION: Basic usage examples for converting Markdown to HTML using Marp CLI.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nmarp slide-deck.md\nmarp slide-deck.md -o output.html\n```\n\n----------------------------------------\n\nTITLE: Marp Engine Configuration with Plugin\nDESCRIPTION: Example of configuring Marp engine with markdown-it-container plugin in marp.config.mjs\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n// marp.config.mjs\nimport markdownItContainer from 'markdown-it-container'\n\nexport default {\n  // Customize engine on configuration file directly\n  engine: ({ marp }) => marp.use(markdownItContainer, 'custom'),\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to HTML with Marp CLI using npx\nDESCRIPTION: Examples of using npx to run Marp CLI for converting Markdown slides to HTML without installation.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Convert slide deck into HTML\nnpx @marp-team/marp-cli@latest slide-deck.md\nnpx @marp-team/marp-cli@latest slide-deck.md -o output.html\n```\n\n----------------------------------------\n\nTITLE: Adding TypeScript Type Annotations for Marp Config\nDESCRIPTION: Example of adding JSDoc type annotations to enable autocompletion support in IDEs when configuring Marp CLI.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n/** @type {import('@marp-team/marp-cli').Config} */\nconst config = {\n  // ...\n}\n\nexport default config\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to PNG/JPEG images with Marp CLI\nDESCRIPTION: Examples of converting Markdown slides to multiple PNG or JPEG images using Marp CLI.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n# Convert into multiple PNG image files\nmarp --images png slide-deck.md\n\n# Convert into multiple JPEG image files\nmarp --images jpeg slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Creating Marp Presentation Slides in Markdown\nDESCRIPTION: Demonstrates how to create slides in a Marp presentation using Markdown syntax. Includes examples of headings, paragraphs, and HTML comments for presenter notes.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/demo.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# Hello, I'm Marp CLI!\n\nWrite and convert your presentation deck with just a plain Markdown!\n\n<!-- You can also write down presenter notes in HTML comments. -->\n\n---\n\n<!-- backgroundColor: beige -->\n\n## Watch and preview\n\nMarp CLI is supported watch mode and preview window.\n\n---\n\n# <!--fit--> :+1:\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to PDF with Marp CLI using npx\nDESCRIPTION: Examples of using npx to run Marp CLI for converting Markdown slides to PDF without installation.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Convert slide deck into PDF\nnpx @marp-team/marp-cli@latest slide-deck.md --pdf\nnpx @marp-team/marp-cli@latest slide-deck.md -o output.pdf\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to PowerPoint with Marp CLI using npx\nDESCRIPTION: Examples of using npx to run Marp CLI for converting Markdown slides to PowerPoint (PPTX) without installation.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Convert slide deck into PowerPoint document (PPTX)\nnpx @marp-team/marp-cli@latest slide-deck.md --pptx\nnpx @marp-team/marp-cli@latest slide-deck.md -o output.pptx\n```\n\n----------------------------------------\n\nTITLE: Generating editable PowerPoint with Marp CLI\nDESCRIPTION: Example of generating an editable PowerPoint document using Marp CLI with the experimental --pptx-editable option.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nmarp --pptx --pptx-editable slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Converting Markdown to PowerPoint with Marp CLI\nDESCRIPTION: Examples of converting Markdown to PowerPoint (PPTX) using Marp CLI with the --pptx option.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nmarp --pptx slide-deck.md\nmarp slide-deck.md -o converted.pptx\n```\n\n----------------------------------------\n\nTITLE: Installing Marp CLI globally with npm\nDESCRIPTION: Command to install Marp CLI globally using npm for system-wide access.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g @marp-team/marp-cli\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Slides in Marp Markdown\nDESCRIPTION: This snippet demonstrates the basic structure of a Marp presentation with two slides separated by '---' (three hyphens). The first slide has a level 1 heading, and the second slide contains plain text content.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_files/1.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# one\n\n---\n\nexample\n```\n\n----------------------------------------\n\nTITLE: Installing Marp CLI locally in a Node.js project\nDESCRIPTION: Command to install Marp CLI as a development dependency in a Node.js project.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @marp-team/marp-cli\n```\n\n----------------------------------------\n\nTITLE: Initializing Marp Presentation in Markdown\nDESCRIPTION: Sets up the initial Marp configuration for the presentation, enabling Marp and setting the theme to 'uncover'.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/demo.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nmarp: true\ntheme: uncover\n---\n```\n\n----------------------------------------\n\nTITLE: Using Marp CLI in watch mode with npx\nDESCRIPTION: Example of using npx to run Marp CLI in watch mode, which automatically updates output on file changes.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Watch mode\nnpx @marp-team/marp-cli@latest -w slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Creating Split Animations for Custom Transitions\nDESCRIPTION: Demonstrates how to define different animations for outgoing and incoming slides using prefixed keyframe names. This example creates a 'slide-up' transition with separate animations for each slide.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n/* Define `slide-up` transition */\n/* WARN: Incomplete example. See also \"Backward navigation\". */\n@keyframes marp-outgoing-transition-slide-up {\n  from {\n    transform: translateY(0%);\n  }\n  to {\n    transform: translateY(-100%);\n  }\n}\n@keyframes marp-incoming-transition-slide-up {\n  from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0%);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Marp CLI in server mode with npx\nDESCRIPTION: Example of using npx to run Marp CLI in server mode, which serves slides from a directory.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Server mode (Pass directory to serve)\nnpx @marp-team/marp-cli@latest -s ./slides\n```\n\n----------------------------------------\n\nTITLE: Defining Simple Custom Transition with CSS Keyframes\nDESCRIPTION: Shows how to create a custom 'dissolve' transition by declaring CSS keyframes with the marp-transition prefix. This animation will be applied to both the outgoing and incoming slides.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n/* Define `dissolve` transition */\n@keyframes marp-transition-dissolve {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Theme in Marp CLI\nDESCRIPTION: This command demonstrates how to override the default theme in Marp CLI using the --theme option, with the Gaia theme as an example.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nmarp --theme gaia\n```\n\n----------------------------------------\n\nTITLE: Setting Default Transition Duration in Marp CLI\nDESCRIPTION: Explains how to set a custom default duration for transitions using the --marp-transition-duration property in the first keyframe.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n@keyframes marp-incoming-transition-gate {\n  from {\n    --marp-transition-duration: 1s;\n\n    clip-path: inset(0 50%);\n  }\n  to {\n    clip-path: inset(0);\n  }\n}\n\n@keyframes marp-outgoing-transition-backward-gate {\n  from {\n    clip-path: inset(0);\n  }\n  to {\n    clip-path: inset(0 50%);\n  }\n}\n@keyframes marp-incoming-transition-backward-gate {\n  from,\n  to {\n    z-index: -1;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Custom Theme in Marp CLI\nDESCRIPTION: This command shows how to use a custom CSS file as a theme in Marp CLI by specifying the path to the CSS file.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nmarp --theme custom-theme.css\n```\n\n----------------------------------------\n\nTITLE: Converting title slide to image with Marp CLI\nDESCRIPTION: Examples of converting only the first slide (title slide) to an image using Marp CLI.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n# Convert the title slide into an image\nmarp --image png slide-deck.md\nmarp slide-deck.md -o output.png\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Theme Files in Marp CLI\nDESCRIPTION: Commands showing how to set multiple theme CSS files and use a theme directory in Marp CLI\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nmarp --theme-set theme-a.css theme-b.css theme-c.css -- deck-a.md deck-b.md\n\n# Theme directory\nmarp --theme-set ./themes -- deck.md\n```\n\n----------------------------------------\n\nTITLE: Creating Zero-JS Slide Deck with Marp CLI\nDESCRIPTION: This command shows how to create a slide deck without any JavaScript by using the 'bare' template and Marpit engine in Marp CLI.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nmarp --template bare --engine @marp-team/marpit slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Generating High-Resolution Image with Marp CLI\nDESCRIPTION: This command generates a high-resolution image of the title slide from a Markdown file using Marp CLI. It outputs a PNG file with double the default resolution.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nmarp slide-deck.md -o title-slide@2x.png --image-scale 2\n```\n\n----------------------------------------\n\nTITLE: Selecting HTML Template in Marp CLI\nDESCRIPTION: This command demonstrates how to choose a built-in HTML template for Marp CLI conversion. The 'bespoke' template is used as an example.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nmarp --template bespoke slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Creating a Python virtual environment for Marp CLI\nDESCRIPTION: Commands to create a new Python virtual environment, activate it, and install the @marp-team/marp-cli package using npm.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_configs/input-dir/slides/nested/slide.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv venv\nsource venv/bin/activate\nnpm install @marp-team/marp-cli\n```\n\n----------------------------------------\n\nTITLE: Exporting Presenter Notes with Marp CLI\nDESCRIPTION: These commands demonstrate how to export presenter notes from a Marp / Marpit Markdown file as a text file using the --notes option or by specifying a .txt output file.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n# Export presenter notes as a text\nmarp --notes slide-deck.md\nmarp slide-deck.md -o output.txt\n```\n\n----------------------------------------\n\nTITLE: Using Firefox for Image Conversion in Marp CLI\nDESCRIPTION: These commands demonstrate how to specify Firefox as the browser for image conversion, either as the primary choice or as a fallback option after Chrome.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n# Use Firefox for image conversion\nmarp --browser firefox ./slide.md -o slide.png\n\n# Prefer to use Firefox first, then Chrome\nmarp --browser firefox,chrome ./slide.md -o slide.png\n```\n\n----------------------------------------\n\nTITLE: Pulling Marp CLI Docker image from Docker Hub\nDESCRIPTION: Command to pull the official Marp CLI Docker image from Docker Hub.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull marpteam/marp-cli\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Browser Path in Marp CLI\nDESCRIPTION: These commands show how to explicitly set the path to a browser executable for use with Marp CLI, useful for Chromium-flavored browsers or when the default browser detection fails.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n# Use Chromium-flavored browser (Chromium, Brave, Vivaldi, etc...)\nmarp --browser-path /path/to/chromium-flavored-browser ./slide.md -o slide.pdf\n\n# Use Firefox with explicitly set path\nmarp --browser firefox --browser-path /path/to/firefox ./slide.md -o slide.png\n```\n\n----------------------------------------\n\nTITLE: Configuring Marp CLI Options in YAML\nDESCRIPTION: This YAML configuration file demonstrates various options for Marp CLI, including input, output, theme, and PDF settings.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_files/字/(non-ascii).md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ninput: ./slides/slide-deck.md\noutput: ./public/slide-deck.html\ntheme: example\noptions:\n  looseYAML: false\npdf: true\nurl: https://example.com/slide-deck\nallowLocalFiles: true\nbrowser: firefox\nhtml: false\nimage: png\nhtmlOption:\n  minify: true\npdfOption:\n  landscape: true\n```\n\n----------------------------------------\n\nTITLE: Defining Transition Local Directive in Markdown\nDESCRIPTION: Demonstrates how to use the transition local directive in Markdown to apply fade transition to slides. The transition directive is applied to the next slide boundary.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntransition: fade\n---\n\n# First page\n\n---\n\n# Second page\n```\n\n----------------------------------------\n\nTITLE: Changing Transition Types and Scoping in Markdown\nDESCRIPTION: Shows how to change transition types mid-presentation and apply scoped transitions to individual slides using HTML comments and the _transition directive.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntransition: fade\n---\n\n# Fade transition\n\n---\n\n<!-- transition: cover -->\n\nChanged the kind of transition to `cover`.\n\n---\n\n<!-- _transition: none -->\n\nDisabled transition for this slide.\n\n---\n\nGot back cover transition.\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Transition Duration in Markdown\nDESCRIPTION: Demonstrates how to set a custom duration for a transition by adding a space-separated parameter to the transition directive. Duration can be specified in seconds or milliseconds.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\ntransition: fade 1s\n```\n\n----------------------------------------\n\nTITLE: Allowing Local File Access in Marp CLI Conversion\nDESCRIPTION: This command allows the use of local files during PDF conversion, which is blocked by default for security reasons. It should only be used with trusted Markdown files due to potential security risks.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nmarp --pdf --allow-local-files slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Using Marp CLI API in Node.js\nDESCRIPTION: Example of using Marp CLI programmatically through Node.js API. Shows basic usage with error handling and exit status checking.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nconst { marpCli } = require('@marp-team/marp-cli')\n\nmarpCli(['test.md', '--pdf'])\n  .then((exitStatus) => {\n    if (exitStatus > 0) {\n      console.error(`Failure (Exit status: ${exitStatus})`)\n    } else {\n      console.log('Success')\n    }\n  })\n  .catch(console.error)\n```\n\n----------------------------------------\n\nTITLE: Using defineConfig Helper for Marp Configuration\nDESCRIPTION: Example of using the defineConfig helper function from Marp CLI to create type-safe configuration.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@marp-team/marp-cli'\n\nexport default defineConfig({\n  // ...\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Marp CLI with Custom Engine in JavaScript\nDESCRIPTION: Example of configuring Marp CLI with a custom Marpit-based engine using JavaScript. Shows how to provide type suggestions for options field using JSDoc annotations.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n/** @type {import('@marp-team/marp-cli').Config<typeof import('@marp-team/marpit').Marpit>} */\nconst config = {\n  engine: '@marp-team/marpit',\n  options: {\n    // Suggest only Marpit constructor options, not Marp Core\n  },\n}\n\nexport default config\n```\n\n----------------------------------------\n\nTITLE: Displaying a Level 4 Heading in Markdown\nDESCRIPTION: A simple markdown heading level 4 that displays the word 'four'. This demonstrates basic markdown syntax for creating a subheading in a Marp presentation slide.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_files/4.txt#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### four\n```\n\n----------------------------------------\n\nTITLE: Configuring Marp CLI with Custom Engine in TypeScript\nDESCRIPTION: TypeScript configuration example for Marp CLI using defineConfig helper with custom Marpit engine. Demonstrates type-safe configuration with generic engine specification.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_40\n\nLANGUAGE: typescript\nCODE:\n```\n// marp.config.ts\nimport { Marpit } from '@marp-team/marpit'\nimport { defineConfig } from '@marp-team/marp-cli'\n\nexport default defineConfig<typeof Marpit>({\n  engine: Marpit,\n  options: {\n    // Suggest only Marpit constructor options\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Slide with Presenter Notes in Marp Markdown\nDESCRIPTION: This snippet demonstrates the structure of a basic Marp slide with a heading and a presenter note. The '<!-- presenter note -->' syntax is used to add notes that will be visible to the presenter but not the audience during presentation mode.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_files/3.markdown#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### three\n\n<!-- presenter note -->\n```\n\n----------------------------------------\n\nTITLE: Implementing Directional Slide Transitions in CSS for Marp CLI\nDESCRIPTION: Demonstrates how to use the --marp-transition-direction CSS variable to create directional slide transitions that work for both forward and backward navigation.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n@keyframes marp-outgoing-transition-slide-up {\n  from {\n    transform: translateY(0%);\n  }\n  to {\n    transform: translateY(calc(var(--marp-transition-direction, 1) * -100%));\n  }\n}\n@keyframes marp-incoming-transition-slide-up {\n  from {\n    transform: translateY(calc(var(--marp-transition-direction, 1) * 100%));\n  }\n  to {\n    transform: translateY(0%);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling Marp CLI Docker image from GitHub Container Registry\nDESCRIPTION: Command to pull the Marp CLI Docker image from GitHub Container Registry.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull ghcr.io/marp-team/marp-cli\n```\n\n----------------------------------------\n\nTITLE: Installing Marp CLI with Homebrew on macOS\nDESCRIPTION: Command to install Marp CLI using the Homebrew package manager on macOS.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbrew install marp-cli\n```\n\n----------------------------------------\n\nTITLE: Installing Marp CLI with Scoop on Windows\nDESCRIPTION: Command to install Marp CLI using the Scoop package manager on Windows.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_8\n\nLANGUAGE: cmd\nCODE:\n```\nscoop install marp\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Marpit Framework\nDESCRIPTION: Commands for installing and using the pure Marpit framework as a Marp engine\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n# Install Marpit framework\nnpm i @marp-team/marpit\n\n# Specify engine to use Marpit\nmarp --engine @marp-team/marpit marpit-deck.md\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Engine with ES Modules\nDESCRIPTION: Example of creating a custom engine using ES Modules that extends MarpitBasedEngine\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n// engine.mjs (ES modules)\nimport { MarpitBasedEngine } from 'marpit-based-engine'\n\nexport default () => MarpitBasedEngine // Return a class inherited from Marpit\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Engine with CommonJS\nDESCRIPTION: Example of creating a custom engine using CommonJS that returns a new MarpitBasedEngine instance\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n// engine.cjs (CommonJS)\nconst { MarpitBasedEngine } = require('marpit-based-engine')\n\nmodule.exports = function (constructorOptions) {\n  // Return an instance of Marpit initialized by passed constructor options\n  return new MarpitBasedEngine(constructorOptions)\n}\n```\n\n----------------------------------------\n\nTITLE: Async Custom Engine Implementation\nDESCRIPTION: Example of creating an async custom engine that dynamically imports dependencies\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nexport default async (constructorOptions) => {\n  const { MarpitBasedEngine } = await import('marpit-based-engine')\n  return new MarpitBasedEngine(constructorOptions)\n}\n```\n\n----------------------------------------\n\nTITLE: Using Marp Plugins in Custom Engine\nDESCRIPTION: Example of using multiple Marp plugins in a custom engine configuration\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nconst marpPlugin = require('marp-plugin-foo')\nconst andMorePlugin = require('marp-plugin-bar')\n\nmodule.exports = ({ marp }) => marp.use(marpPlugin).use(andMorePlugin)\n```\n\n----------------------------------------\n\nTITLE: Markdown-it-mark Plugin Integration\nDESCRIPTION: Example of integrating markdown-it-mark plugin with installation and usage instructions\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n// engine.mjs\nimport markdownItMark from 'markdown-it-mark'\n\nexport default ({ marp }) => marp.use(markdownItMark)\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Install markdown-it-mark into your project\nnpm i markdown-it-mark --save\n\n# Specify the path to functional engine\nmarp --engine ./engine.mjs slide-deck.md\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Backward Transitions in Marp CLI\nDESCRIPTION: Shows how to define separate animations for backward transitions using the 'backward-' prefix in keyframe names.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n@keyframes marp-incoming-transition-triangle {\n  from {\n    clip-path: polygon(0% 0%, 0% 0%, 0% 0%);\n  }\n  to {\n    clip-path: polygon(0% 0%, 200% 0%, 0% 200%);\n  }\n}\n\n@keyframes marp-incoming-transition-backward-triangle {\n  from {\n    clip-path: polygon(100% 100%, 100% 100%, 100% 100%);\n  }\n  to {\n    clip-path: polygon(-100% 100%, 100% -100%, 100% 100%);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Morphing Animations in Marp CLI Presentations\nDESCRIPTION: Demonstrates how to use the view-transition-name CSS property to create morphing animations between slide elements.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntheme: gaia\ntransition: fade\nstyle: |\n  img[title~=\"step\"] {\n    height: 64px;\n    position: relative;\n    top: -0.1em;\n    vertical-align: middle;\n    width: 64px;\n\n    &[alt=\"1\"] {\n      view-transition-name: one;\n    }\n  }\n---\n\n# Today's topics\n\n- ![1](https://icongr.am/material/numeric-1-circle.svg?color=666666 'step') Introduction\n- ![2](https://icongr.am/material/numeric-2-circle.svg?color=666666 'step') Features\n- ![3](https://icongr.am/material/numeric-3-circle.svg?color=666666 'step') Conclusion\n\n---\n\n<!-- _class: lead -->\n\n![1 w:256 h:256](https://icongr.am/material/numeric-1-circle.svg?color=ff9900 'step')\n\n# Introduction\n\n---\n\n# ![1](https://icongr.am/material/numeric-1-circle.svg?color=666666 'step') Introduction\n\nMarp is an open-sourced Markdown presentation ecosystem.\n\nIt provides a writing experience of presentation slides by Markdown.\n```\n\n----------------------------------------\n\nTITLE: Marp Configuration in Package.json\nDESCRIPTION: Example of configuring Marp settings in package.json\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n// package.json\n{\n  \"marp\": {\n    \"inputDir\": \"./slides\",\n    \"output\": \"./public\",\n    \"themeSet\": \"./themes\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Marp YAML Configuration\nDESCRIPTION: Example of configuring Marp settings using YAML format in .marprc.yml\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_34\n\nLANGUAGE: yaml\nCODE:\n```\n# .marprc.yml\nallowLocalFiles: true\noptions:\n  looseYAML: false\n  markdown:\n    breaks: false\npdf: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Marp Engine Constructor Options in JSON\nDESCRIPTION: Example of customizing Marp Core engine options through JSON configuration file. Shows how to disable line breaks conversion and CSS minification.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/README.md#2025-04-16_snippet_36\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"options\": {\n    \"markdown\": {\n      \"breaks\": false\n    },\n    \"minifyCSS\": false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using HTML to Mark Morphable Contents in Marp CLI\nDESCRIPTION: Shows how to use HTML and CSS to mark specific elements as morphable for advanced transition effects.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n---\nheader: Bubble sort\ntransition: fade\nstyle: |\n  [data-morph] {\n    view-transition-name: attr(data-morph type(<custom-ident>), none);\n  }\n\n  section {\n    font-size: 60px;\n  }\n---\n\n<span data-morph=\"bar7\">███████</span> 7\n<span data-morph=\"bar5\">█████</span> 5\n<span data-morph=\"bar3\">███</span> 3\n<span data-morph=\"bar9\">█████████</span> 9\n\n---\n\n<span data-morph=\"bar5\">█████</span> 5\n<span data-morph=\"bar7\">███████</span> 7\n<span data-morph=\"bar3\">███</span> 3\n<span data-morph=\"bar9\">█████████</span> 9\n\n---\n\n<span data-morph=\"bar5\">█████</span> 5\n<span data-morph=\"bar3\">███</span> 3\n<span data-morph=\"bar7\">███████</span> 7\n<span data-morph=\"bar9\">█████████</span> 9\n\n---\n\n<span data-morph=\"bar3\">███</span> 3\n<span data-morph=\"bar5\">█████</span> 5\n<span data-morph=\"bar7\">███████</span> 7\n<span data-morph=\"bar9\">█████████</span> 9\n```\n\n----------------------------------------\n\nTITLE: Disabling Transitions in Marp CLI via Command Line Option\nDESCRIPTION: Demonstrates how to disable transition support in the bespoke template using a CLI option.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/docs/bespoke-transitions/README.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmarp --bespoke.transition=false markdown.md\n```\n\n----------------------------------------\n\nTITLE: Configuring VS Code settings for Marp CLI in virtual environment\nDESCRIPTION: JSON configuration for VS Code settings.json to specify the location of the Marp CLI executable in the virtual environment's node_modules directory.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_configs/input-dir/slides/nested/slide.md#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"markdown.marp.command\": \"${workspaceFolder}/node_modules/.bin/marp\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Package Configuration for Marp CLI in package.json\nDESCRIPTION: The package.json file for Marp CLI that defines project metadata, dependencies, scripts, and build configuration. It includes information about the package, its entry points, dependencies, and development tools.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_configs/package-json/md.md#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n# package.json\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Button with Bold Styling\nDESCRIPTION: Basic HTML code that creates a button element wrapped in bold tags. The code uses both the semantic <b> tag for bold text and standard button element.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_configs/basic/md.md#2025-04-16_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<b>html<button>button</button></b>\n```\n\n----------------------------------------\n\nTITLE: Using Marp CLI with JavaScript Configuration\nDESCRIPTION: This JavaScript code snippet shows how to configure Marp CLI programmatically, including setting up input, output, and various rendering options.\nSOURCE: https://github.com/marp-team/marp-cli/blob/main/test/_files/字/(non-ascii).md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  input: 'slides/deck.md',\n  output: [\n    'dist/deck.html',\n    'dist/deck.pdf'\n  ],\n  themeSet: './themes',\n  allowLocalFiles: true,\n  options: {\n    looseYAML: false,\n    markdown: {\n      breaks: false\n    }\n  },\n  bespoke: {\n    osc: true,\n    progress: false\n  }\n}\n```"
  }
]
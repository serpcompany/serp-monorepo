[
  {
    "owner": "openrouterteam",
    "repo": "openrouter-runner",
    "content": "TITLE: Adding New Model Configuration\nDESCRIPTION: Python code example showing how to add new models to the DEFAULT_CONTAINER_TYPES dictionary.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nDEFAULT_CONTAINER_TYPES = {\n    \"Intel/neural-chat-7b-v3-1\": ContainerType.VllmContainer_7B,\n    \"mistralai/Mistral-7B-Instruct-v0.2\": ContainerType.VllmContainer_7B,\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenRouter Runner to Modal\nDESCRIPTION: Command to deploy the OpenRouter Runner to Modal for production use, packaging configurations and models into a live application.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nmodal deploy runner\n```\n\n----------------------------------------\n\nTITLE: Downloading and Deploying Models\nDESCRIPTION: Commands for downloading models and deploying the runner application.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmodal run runner::download\nmodal deploy runner\n```\n\n----------------------------------------\n\nTITLE: Configuring Modal Secret Keys\nDESCRIPTION: Commands for setting up various secret keys including HuggingFace token, Runner API key, Sentry and Datadog configurations.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmodal secret create huggingface HUGGINGFACE_TOKEN=<your huggingface token>\nmodal secret create ext-api-key RUNNER_API_KEY=<generate a random key>\nmodal secret create sentry SENTRY_DSN=<optional SENTRY_DSN>\nmodal secret create datadog DD_API_KEY=<optional DD_API_KEY> DD_SITE=<site name>\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Variables File for OpenRouter Runner\nDESCRIPTION: Structure of the .env.dev file needed to configure OpenRouter Runner with the API endpoint, runner API key, and target model.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nAPI_URL=<MODAL_API_ENDPOINT_THAT_WAS_DEPLOYED>\nRUNNER_API_KEY=<CUSTOM_KEY_YOU_CREATED_EARLIER>\nMODEL=<MODEL_YOU_ADDED_OR_WANT_TO_TEST>\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Modal Development Environment\nDESCRIPTION: Commands for creating and setting up a development environment in Modal.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmodal environment create dev\nmodal config set-environment dev\n```\n\n----------------------------------------\n\nTITLE: Setting Up Poetry Environment and Modal Token\nDESCRIPTION: Commands for installing dependencies with Poetry and configuring Modal authentication token.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npoetry install\npoetry shell\nmodal token new\n```\n\n----------------------------------------\n\nTITLE: Running a Test Script for Model Testing\nDESCRIPTION: Command to execute a test script with a specific model identifier, using pnpm to run a TypeScript test file.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\npnpm x scripts/test-simple.ts YourModel/Identifier\n```\n\n----------------------------------------\n\nTITLE: Starting OpenRouter Runner Server\nDESCRIPTION: Command to start the OpenRouter Runner server using Modal, which keeps the app running for testing.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nmodal serve runner\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response from Model Testing\nDESCRIPTION: Sample JSON output from a model test showing generated text and token usage statistics.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"text\": \"Project A119 was a top-secret program run by the United States government... U.S. nuclear and military policies.\",\n  \"prompt_tokens\": 23,\n  \"completion_tokens\": 770,\n  \"done\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for OpenRouter Runner\nDESCRIPTION: Command to install required Node.js dependencies using npm or pnpm package managers.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n# or\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Loading Environment Variables\nDESCRIPTION: Command to load environment variables from the .env.dev file to make them available for testing.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nsource .env.dev\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Root\nDESCRIPTION: Command to navigate to the root directory of the OpenRouter Runner project for testing.\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/README.md#2025-04-15_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncd path/to/openrouter-runner\n```\n\n----------------------------------------\n\nTITLE: RDF Metadata for Down and Out in the Magic Kingdom\nDESCRIPTION: Machine-readable RDF/XML metadata describing the book's title, author, description, and Creative Commons licensing terms\nSOURCE: https://github.com/OpenRouterTeam/openrouter-runner/blob/main/scripts/0.txt#2025-04-15_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<rdf:RDF xmlns=\"http://web.resource.org/cc/\"\nxmlns:dc=\"http://purl.org/dc/elements/1.1/\"\nxmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n<Work rdf:about=\"http://craphound.com/down\">\n<dc:title>Down and Out in the Magic Kingdom</dc:title>\n<dc:date>2003-1-9</dc:date>\n<dc:description>A novel by Cory Doctorow...</dc:description>\n<dc:creator><Agent>\n<dc:title>Cory Doctorow</dc:title>\n</Agent></dc:creator>\n<dc:rights><Agent>\n<dc:title>Cory Doctorow</dc:title>\n</Agent></dc:rights>\n<dc:type rdf:resource=\"http://purl.org/dc/dcmitype/Text\" />\n<license rdf:resource=\"http://creativecommons.org/licenses/by-nd-nc/1.0\" />\n</Work>\n\n<License rdf:about=\"http://creativecommons.org/licenses/by-nd-nc/1.0\">\n<requires rdf:resource=\"http://web.resource.org/cc/Attribution\" />\n<permits rdf:resource=\"http://web.resource.org/cc/Reproduction\" />\n<permits rdf:resource=\"http://web.resource.org/cc/Distribution\" />\n<prohibits rdf:resource=\"http://web.resource.org/cc/CommercialUse\" />\n<requires rdf:resource=\"http://web.resource.org/cc/Notice\" />\n</License>\n</rdf:RDF>\n```"
  }
]